/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 134.0, "minX": 0.0, "maxY": 7419.0, "series": [{"data": [[0.0, 134.0], [0.1, 134.0], [0.2, 134.0], [0.3, 134.0], [0.4, 134.0], [0.5, 134.0], [0.6, 134.0], [0.7, 134.0], [0.8, 134.0], [0.9, 134.0], [1.0, 134.0], [1.1, 134.0], [1.2, 134.0], [1.3, 134.0], [1.4, 134.0], [1.5, 134.0], [1.6, 134.0], [1.7, 134.0], [1.8, 135.0], [1.9, 135.0], [2.0, 135.0], [2.1, 135.0], [2.2, 135.0], [2.3, 135.0], [2.4, 135.0], [2.5, 135.0], [2.6, 135.0], [2.7, 135.0], [2.8, 135.0], [2.9, 135.0], [3.0, 135.0], [3.1, 135.0], [3.2, 135.0], [3.3, 135.0], [3.4, 135.0], [3.5, 135.0], [3.6, 135.0], [3.7, 135.0], [3.8, 135.0], [3.9, 135.0], [4.0, 135.0], [4.1, 135.0], [4.2, 135.0], [4.3, 135.0], [4.4, 135.0], [4.5, 135.0], [4.6, 135.0], [4.7, 135.0], [4.8, 135.0], [4.9, 135.0], [5.0, 135.0], [5.1, 135.0], [5.2, 135.0], [5.3, 135.0], [5.4, 135.0], [5.5, 135.0], [5.6, 135.0], [5.7, 135.0], [5.8, 135.0], [5.9, 135.0], [6.0, 135.0], [6.1, 135.0], [6.2, 135.0], [6.3, 135.0], [6.4, 135.0], [6.5, 135.0], [6.6, 135.0], [6.7, 135.0], [6.8, 135.0], [6.9, 135.0], [7.0, 135.0], [7.1, 135.0], [7.2, 135.0], [7.3, 135.0], [7.4, 135.0], [7.5, 135.0], [7.6, 135.0], [7.7, 135.0], [7.8, 135.0], [7.9, 135.0], [8.0, 135.0], [8.1, 135.0], [8.2, 135.0], [8.3, 135.0], [8.4, 135.0], [8.5, 135.0], [8.6, 135.0], [8.7, 135.0], [8.8, 135.0], [8.9, 135.0], [9.0, 135.0], [9.1, 135.0], [9.2, 135.0], [9.3, 135.0], [9.4, 135.0], [9.5, 135.0], [9.6, 135.0], [9.7, 135.0], [9.8, 135.0], [9.9, 135.0], [10.0, 135.0], [10.1, 135.0], [10.2, 135.0], [10.3, 136.0], [10.4, 136.0], [10.5, 136.0], [10.6, 136.0], [10.7, 136.0], [10.8, 136.0], [10.9, 136.0], [11.0, 136.0], [11.1, 136.0], [11.2, 136.0], [11.3, 136.0], [11.4, 136.0], [11.5, 136.0], [11.6, 136.0], [11.7, 136.0], [11.8, 136.0], [11.9, 136.0], [12.0, 136.0], [12.1, 136.0], [12.2, 136.0], [12.3, 136.0], [12.4, 136.0], [12.5, 136.0], [12.6, 136.0], [12.7, 136.0], [12.8, 136.0], [12.9, 136.0], [13.0, 136.0], [13.1, 136.0], [13.2, 136.0], [13.3, 136.0], [13.4, 136.0], [13.5, 136.0], [13.6, 136.0], [13.7, 136.0], [13.8, 136.0], [13.9, 136.0], [14.0, 136.0], [14.1, 136.0], [14.2, 136.0], [14.3, 136.0], [14.4, 136.0], [14.5, 136.0], [14.6, 136.0], [14.7, 136.0], [14.8, 136.0], [14.9, 136.0], [15.0, 136.0], [15.1, 136.0], [15.2, 136.0], [15.3, 136.0], [15.4, 136.0], [15.5, 136.0], [15.6, 136.0], [15.7, 136.0], [15.8, 136.0], [15.9, 136.0], [16.0, 136.0], [16.1, 136.0], [16.2, 136.0], [16.3, 136.0], [16.4, 136.0], [16.5, 136.0], [16.6, 136.0], [16.7, 136.0], [16.8, 136.0], [16.9, 136.0], [17.0, 136.0], [17.1, 136.0], [17.2, 136.0], [17.3, 137.0], [17.4, 137.0], [17.5, 137.0], [17.6, 137.0], [17.7, 137.0], [17.8, 137.0], [17.9, 137.0], [18.0, 137.0], [18.1, 137.0], [18.2, 137.0], [18.3, 137.0], [18.4, 137.0], [18.5, 137.0], [18.6, 137.0], [18.7, 137.0], [18.8, 137.0], [18.9, 137.0], [19.0, 137.0], [19.1, 137.0], [19.2, 137.0], [19.3, 137.0], [19.4, 137.0], [19.5, 137.0], [19.6, 137.0], [19.7, 137.0], [19.8, 137.0], [19.9, 137.0], [20.0, 137.0], [20.1, 137.0], [20.2, 137.0], [20.3, 137.0], [20.4, 137.0], [20.5, 137.0], [20.6, 137.0], [20.7, 137.0], [20.8, 137.0], [20.9, 137.0], [21.0, 137.0], [21.1, 137.0], [21.2, 137.0], [21.3, 137.0], [21.4, 137.0], [21.5, 137.0], [21.6, 137.0], [21.7, 137.0], [21.8, 137.0], [21.9, 137.0], [22.0, 137.0], [22.1, 137.0], [22.2, 137.0], [22.3, 137.0], [22.4, 137.0], [22.5, 137.0], [22.6, 137.0], [22.7, 137.0], [22.8, 137.0], [22.9, 137.0], [23.0, 137.0], [23.1, 137.0], [23.2, 137.0], [23.3, 137.0], [23.4, 137.0], [23.5, 137.0], [23.6, 137.0], [23.7, 137.0], [23.8, 137.0], [23.9, 137.0], [24.0, 137.0], [24.1, 137.0], [24.2, 137.0], [24.3, 137.0], [24.4, 137.0], [24.5, 137.0], [24.6, 137.0], [24.7, 137.0], [24.8, 137.0], [24.9, 137.0], [25.0, 137.0], [25.1, 137.0], [25.2, 137.0], [25.3, 137.0], [25.4, 137.0], [25.5, 137.0], [25.6, 137.0], [25.7, 137.0], [25.8, 137.0], [25.9, 137.0], [26.0, 137.0], [26.1, 137.0], [26.2, 137.0], [26.3, 137.0], [26.4, 137.0], [26.5, 137.0], [26.6, 137.0], [26.7, 137.0], [26.8, 137.0], [26.9, 137.0], [27.0, 137.0], [27.1, 138.0], [27.2, 138.0], [27.3, 138.0], [27.4, 138.0], [27.5, 138.0], [27.6, 138.0], [27.7, 138.0], [27.8, 138.0], [27.9, 138.0], [28.0, 138.0], [28.1, 138.0], [28.2, 138.0], [28.3, 138.0], [28.4, 138.0], [28.5, 138.0], [28.6, 138.0], [28.7, 138.0], [28.8, 138.0], [28.9, 138.0], [29.0, 138.0], [29.1, 138.0], [29.2, 138.0], [29.3, 138.0], [29.4, 138.0], [29.5, 138.0], [29.6, 138.0], [29.7, 138.0], [29.8, 138.0], [29.9, 138.0], [30.0, 138.0], [30.1, 138.0], [30.2, 138.0], [30.3, 138.0], [30.4, 138.0], [30.5, 138.0], [30.6, 138.0], [30.7, 138.0], [30.8, 138.0], [30.9, 138.0], [31.0, 138.0], [31.1, 138.0], [31.2, 138.0], [31.3, 138.0], [31.4, 138.0], [31.5, 138.0], [31.6, 138.0], [31.7, 138.0], [31.8, 138.0], [31.9, 138.0], [32.0, 138.0], [32.1, 138.0], [32.2, 138.0], [32.3, 138.0], [32.4, 138.0], [32.5, 138.0], [32.6, 138.0], [32.7, 138.0], [32.8, 138.0], [32.9, 138.0], [33.0, 138.0], [33.1, 138.0], [33.2, 138.0], [33.3, 138.0], [33.4, 138.0], [33.5, 138.0], [33.6, 138.0], [33.7, 138.0], [33.8, 138.0], [33.9, 138.0], [34.0, 138.0], [34.1, 138.0], [34.2, 138.0], [34.3, 138.0], [34.4, 138.0], [34.5, 138.0], [34.6, 138.0], [34.7, 138.0], [34.8, 138.0], [34.9, 138.0], [35.0, 138.0], [35.1, 138.0], [35.2, 138.0], [35.3, 138.0], [35.4, 138.0], [35.5, 138.0], [35.6, 138.0], [35.7, 138.0], [35.8, 138.0], [35.9, 138.0], [36.0, 138.0], [36.1, 138.0], [36.2, 138.0], [36.3, 139.0], [36.4, 139.0], [36.5, 139.0], [36.6, 139.0], [36.7, 139.0], [36.8, 139.0], [36.9, 139.0], [37.0, 139.0], [37.1, 139.0], [37.2, 139.0], [37.3, 139.0], [37.4, 139.0], [37.5, 139.0], [37.6, 139.0], [37.7, 139.0], [37.8, 139.0], [37.9, 139.0], [38.0, 139.0], [38.1, 139.0], [38.2, 139.0], [38.3, 139.0], [38.4, 139.0], [38.5, 139.0], [38.6, 139.0], [38.7, 139.0], [38.8, 139.0], [38.9, 139.0], [39.0, 139.0], [39.1, 139.0], [39.2, 139.0], [39.3, 139.0], [39.4, 139.0], [39.5, 139.0], [39.6, 139.0], [39.7, 139.0], [39.8, 139.0], [39.9, 139.0], [40.0, 139.0], [40.1, 139.0], [40.2, 139.0], [40.3, 139.0], [40.4, 139.0], [40.5, 139.0], [40.6, 139.0], [40.7, 139.0], [40.8, 139.0], [40.9, 139.0], [41.0, 139.0], [41.1, 139.0], [41.2, 139.0], [41.3, 139.0], [41.4, 139.0], [41.5, 139.0], [41.6, 139.0], [41.7, 139.0], [41.8, 139.0], [41.9, 139.0], [42.0, 139.0], [42.1, 139.0], [42.2, 139.0], [42.3, 139.0], [42.4, 139.0], [42.5, 139.0], [42.6, 139.0], [42.7, 139.0], [42.8, 139.0], [42.9, 139.0], [43.0, 139.0], [43.1, 139.0], [43.2, 139.0], [43.3, 139.0], [43.4, 139.0], [43.5, 139.0], [43.6, 139.0], [43.7, 139.0], [43.8, 139.0], [43.9, 139.0], [44.0, 139.0], [44.1, 140.0], [44.2, 140.0], [44.3, 140.0], [44.4, 140.0], [44.5, 140.0], [44.6, 140.0], [44.7, 140.0], [44.8, 140.0], [44.9, 140.0], [45.0, 140.0], [45.1, 140.0], [45.2, 140.0], [45.3, 140.0], [45.4, 140.0], [45.5, 140.0], [45.6, 140.0], [45.7, 140.0], [45.8, 140.0], [45.9, 140.0], [46.0, 140.0], [46.1, 140.0], [46.2, 140.0], [46.3, 140.0], [46.4, 140.0], [46.5, 140.0], [46.6, 140.0], [46.7, 140.0], [46.8, 140.0], [46.9, 140.0], [47.0, 140.0], [47.1, 140.0], [47.2, 140.0], [47.3, 140.0], [47.4, 140.0], [47.5, 140.0], [47.6, 140.0], [47.7, 140.0], [47.8, 140.0], [47.9, 140.0], [48.0, 140.0], [48.1, 140.0], [48.2, 140.0], [48.3, 140.0], [48.4, 140.0], [48.5, 140.0], [48.6, 140.0], [48.7, 140.0], [48.8, 140.0], [48.9, 140.0], [49.0, 141.0], [49.1, 141.0], [49.2, 141.0], [49.3, 141.0], [49.4, 141.0], [49.5, 141.0], [49.6, 141.0], [49.7, 141.0], [49.8, 141.0], [49.9, 141.0], [50.0, 141.0], [50.1, 141.0], [50.2, 141.0], [50.3, 141.0], [50.4, 141.0], [50.5, 141.0], [50.6, 141.0], [50.7, 141.0], [50.8, 141.0], [50.9, 141.0], [51.0, 141.0], [51.1, 141.0], [51.2, 141.0], [51.3, 142.0], [51.4, 142.0], [51.5, 142.0], [51.6, 142.0], [51.7, 142.0], [51.8, 149.0], [51.9, 149.0], [52.0, 149.0], [52.1, 149.0], [52.2, 149.0], [52.3, 149.0], [52.4, 149.0], [52.5, 149.0], [52.6, 149.0], [52.7, 150.0], [52.8, 150.0], [52.9, 150.0], [53.0, 150.0], [53.1, 150.0], [53.2, 150.0], [53.3, 150.0], [53.4, 150.0], [53.5, 150.0], [53.6, 150.0], [53.7, 150.0], [53.8, 150.0], [53.9, 150.0], [54.0, 150.0], [54.1, 150.0], [54.2, 150.0], [54.3, 150.0], [54.4, 150.0], [54.5, 150.0], [54.6, 151.0], [54.7, 151.0], [54.8, 151.0], [54.9, 151.0], [55.0, 151.0], [55.1, 151.0], [55.2, 151.0], [55.3, 151.0], [55.4, 151.0], [55.5, 151.0], [55.6, 151.0], [55.7, 151.0], [55.8, 151.0], [55.9, 151.0], [56.0, 151.0], [56.1, 151.0], [56.2, 151.0], [56.3, 151.0], [56.4, 151.0], [56.5, 151.0], [56.6, 151.0], [56.7, 151.0], [56.8, 151.0], [56.9, 151.0], [57.0, 151.0], [57.1, 151.0], [57.2, 151.0], [57.3, 151.0], [57.4, 152.0], [57.5, 152.0], [57.6, 152.0], [57.7, 152.0], [57.8, 152.0], [57.9, 152.0], [58.0, 152.0], [58.1, 152.0], [58.2, 152.0], [58.3, 152.0], [58.4, 152.0], [58.5, 152.0], [58.6, 152.0], [58.7, 152.0], [58.8, 152.0], [58.9, 152.0], [59.0, 152.0], [59.1, 152.0], [59.2, 152.0], [59.3, 152.0], [59.4, 152.0], [59.5, 152.0], [59.6, 152.0], [59.7, 152.0], [59.8, 152.0], [59.9, 152.0], [60.0, 152.0], [60.1, 152.0], [60.2, 152.0], [60.3, 152.0], [60.4, 152.0], [60.5, 152.0], [60.6, 152.0], [60.7, 152.0], [60.8, 152.0], [60.9, 152.0], [61.0, 152.0], [61.1, 152.0], [61.2, 152.0], [61.3, 152.0], [61.4, 152.0], [61.5, 152.0], [61.6, 152.0], [61.7, 152.0], [61.8, 152.0], [61.9, 152.0], [62.0, 152.0], [62.1, 152.0], [62.2, 152.0], [62.3, 152.0], [62.4, 152.0], [62.5, 152.0], [62.6, 152.0], [62.7, 152.0], [62.8, 152.0], [62.9, 152.0], [63.0, 152.0], [63.1, 152.0], [63.2, 152.0], [63.3, 152.0], [63.4, 152.0], [63.5, 152.0], [63.6, 152.0], [63.7, 152.0], [63.8, 152.0], [63.9, 153.0], [64.0, 153.0], [64.1, 153.0], [64.2, 153.0], [64.3, 153.0], [64.4, 153.0], [64.5, 153.0], [64.6, 153.0], [64.7, 153.0], [64.8, 153.0], [64.9, 153.0], [65.0, 153.0], [65.1, 153.0], [65.2, 153.0], [65.3, 153.0], [65.4, 153.0], [65.5, 153.0], [65.6, 153.0], [65.7, 153.0], [65.8, 153.0], [65.9, 153.0], [66.0, 153.0], [66.1, 153.0], [66.2, 153.0], [66.3, 153.0], [66.4, 153.0], [66.5, 153.0], [66.6, 153.0], [66.7, 153.0], [66.8, 153.0], [66.9, 153.0], [67.0, 153.0], [67.1, 153.0], [67.2, 153.0], [67.3, 153.0], [67.4, 153.0], [67.5, 153.0], [67.6, 153.0], [67.7, 153.0], [67.8, 153.0], [67.9, 153.0], [68.0, 153.0], [68.1, 153.0], [68.2, 153.0], [68.3, 153.0], [68.4, 153.0], [68.5, 153.0], [68.6, 153.0], [68.7, 153.0], [68.8, 153.0], [68.9, 153.0], [69.0, 153.0], [69.1, 153.0], [69.2, 153.0], [69.3, 153.0], [69.4, 153.0], [69.5, 153.0], [69.6, 153.0], [69.7, 153.0], [69.8, 153.0], [69.9, 153.0], [70.0, 153.0], [70.1, 153.0], [70.2, 153.0], [70.3, 153.0], [70.4, 153.0], [70.5, 154.0], [70.6, 154.0], [70.7, 154.0], [70.8, 154.0], [70.9, 154.0], [71.0, 154.0], [71.1, 154.0], [71.2, 154.0], [71.3, 154.0], [71.4, 154.0], [71.5, 154.0], [71.6, 154.0], [71.7, 154.0], [71.8, 154.0], [71.9, 154.0], [72.0, 154.0], [72.1, 154.0], [72.2, 154.0], [72.3, 154.0], [72.4, 154.0], [72.5, 154.0], [72.6, 154.0], [72.7, 154.0], [72.8, 154.0], [72.9, 154.0], [73.0, 154.0], [73.1, 154.0], [73.2, 154.0], [73.3, 154.0], [73.4, 154.0], [73.5, 154.0], [73.6, 154.0], [73.7, 154.0], [73.8, 154.0], [73.9, 154.0], [74.0, 154.0], [74.1, 154.0], [74.2, 154.0], [74.3, 154.0], [74.4, 154.0], [74.5, 154.0], [74.6, 154.0], [74.7, 154.0], [74.8, 154.0], [74.9, 155.0], [75.0, 155.0], [75.1, 155.0], [75.2, 155.0], [75.3, 155.0], [75.4, 155.0], [75.5, 155.0], [75.6, 155.0], [75.7, 155.0], [75.8, 155.0], [75.9, 155.0], [76.0, 155.0], [76.1, 155.0], [76.2, 155.0], [76.3, 155.0], [76.4, 155.0], [76.5, 155.0], [76.6, 155.0], [76.7, 155.0], [76.8, 155.0], [76.9, 155.0], [77.0, 156.0], [77.1, 156.0], [77.2, 156.0], [77.3, 156.0], [77.4, 156.0], [77.5, 156.0], [77.6, 157.0], [77.7, 157.0], [77.8, 165.0], [77.9, 165.0], [78.0, 165.0], [78.1, 166.0], [78.2, 166.0], [78.3, 166.0], [78.4, 166.0], [78.5, 166.0], [78.6, 166.0], [78.7, 166.0], [78.8, 166.0], [78.9, 166.0], [79.0, 166.0], [79.1, 166.0], [79.2, 166.0], [79.3, 166.0], [79.4, 166.0], [79.5, 167.0], [79.6, 167.0], [79.7, 167.0], [79.8, 167.0], [79.9, 167.0], [80.0, 167.0], [80.1, 167.0], [80.2, 167.0], [80.3, 167.0], [80.4, 167.0], [80.5, 167.0], [80.6, 167.0], [80.7, 167.0], [80.8, 167.0], [80.9, 167.0], [81.0, 167.0], [81.1, 167.0], [81.2, 168.0], [81.3, 168.0], [81.4, 168.0], [81.5, 168.0], [81.6, 168.0], [81.7, 168.0], [81.8, 168.0], [81.9, 168.0], [82.0, 168.0], [82.1, 168.0], [82.2, 169.0], [82.3, 169.0], [82.4, 169.0], [82.5, 169.0], [82.6, 169.0], [82.7, 169.0], [82.8, 169.0], [82.9, 169.0], [83.0, 169.0], [83.1, 170.0], [83.2, 170.0], [83.3, 170.0], [83.4, 170.0], [83.5, 170.0], [83.6, 170.0], [83.7, 170.0], [83.8, 171.0], [83.9, 171.0], [84.0, 171.0], [84.1, 172.0], [84.2, 180.0], [84.3, 180.0], [84.4, 181.0], [84.5, 181.0], [84.6, 181.0], [84.7, 181.0], [84.8, 181.0], [84.9, 182.0], [85.0, 182.0], [85.1, 182.0], [85.2, 182.0], [85.3, 182.0], [85.4, 182.0], [85.5, 182.0], [85.6, 183.0], [85.7, 183.0], [85.8, 183.0], [85.9, 183.0], [86.0, 183.0], [86.1, 183.0], [86.2, 183.0], [86.3, 183.0], [86.4, 184.0], [86.5, 184.0], [86.6, 184.0], [86.7, 185.0], [86.8, 185.0], [86.9, 185.0], [87.0, 185.0], [87.1, 186.0], [87.2, 186.0], [87.3, 186.0], [87.4, 187.0], [87.5, 194.0], [87.6, 196.0], [87.7, 197.0], [87.8, 197.0], [87.9, 197.0], [88.0, 198.0], [88.1, 198.0], [88.2, 198.0], [88.3, 198.0], [88.4, 199.0], [88.5, 199.0], [88.6, 199.0], [88.7, 200.0], [88.8, 200.0], [88.9, 201.0], [89.0, 201.0], [89.1, 201.0], [89.2, 201.0], [89.3, 201.0], [89.4, 212.0], [89.5, 213.0], [89.6, 214.0], [89.7, 216.0], [89.8, 228.0], [89.9, 233.0], [90.0, 243.0], [90.1, 245.0], [90.2, 248.0], [90.3, 257.0], [90.4, 258.0], [90.5, 260.0], [90.6, 261.0], [90.7, 274.0], [90.8, 276.0], [90.9, 279.0], [91.0, 292.0], [91.1, 295.0], [91.2, 307.0], [91.3, 309.0], [91.4, 322.0], [91.5, 332.0], [91.6, 338.0], [91.7, 353.0], [91.8, 369.0], [91.9, 371.0], [92.0, 384.0], [92.1, 386.0], [92.2, 398.0], [92.3, 418.0], [92.4, 458.0], [92.5, 462.0], [92.6, 474.0], [92.7, 477.0], [92.8, 492.0], [92.9, 506.0], [93.0, 509.0], [93.1, 520.0], [93.2, 524.0], [93.3, 539.0], [93.4, 539.0], [93.5, 540.0], [93.6, 550.0], [93.7, 552.0], [93.8, 555.0], [93.9, 563.0], [94.0, 564.0], [94.1, 566.0], [94.2, 566.0], [94.3, 567.0], [94.4, 568.0], [94.5, 568.0], [94.6, 569.0], [94.7, 580.0], [94.8, 584.0], [94.9, 595.0], [95.0, 610.0], [95.1, 1138.0], [95.2, 1138.0], [95.3, 1139.0], [95.4, 1139.0], [95.5, 1139.0], [95.6, 1139.0], [95.7, 1140.0], [95.8, 1140.0], [95.9, 1141.0], [96.0, 1143.0], [96.1, 1143.0], [96.2, 1144.0], [96.3, 1144.0], [96.4, 1146.0], [96.5, 1147.0], [96.6, 1148.0], [96.7, 1149.0], [96.8, 1150.0], [96.9, 1152.0], [97.0, 1153.0], [97.1, 1154.0], [97.2, 1154.0], [97.3, 1155.0], [97.4, 1156.0], [97.5, 1159.0], [97.6, 1166.0], [97.7, 1166.0], [97.8, 1166.0], [97.9, 1179.0], [98.0, 1199.0], [98.1, 1217.0], [98.2, 1229.0], [98.3, 1232.0], [98.4, 1244.0], [98.5, 1251.0], [98.6, 1262.0], [98.7, 1285.0], [98.8, 1426.0], [98.9, 2837.0], [99.0, 2857.0], [99.1, 2899.0], [99.2, 2986.0], [99.3, 3057.0], [99.4, 3148.0], [99.5, 3166.0], [99.6, 3304.0], [99.7, 3403.0], [99.8, 3669.0], [99.9, 3854.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 2636.0], [0.1, 2636.0], [0.2, 2636.0], [0.3, 2636.0], [0.4, 2636.0], [0.5, 2639.0], [0.6, 2639.0], [0.7, 2639.0], [0.8, 2639.0], [0.9, 2639.0], [1.0, 2640.0], [1.1, 2640.0], [1.2, 2640.0], [1.3, 2640.0], [1.4, 2640.0], [1.5, 2645.0], [1.6, 2645.0], [1.7, 2645.0], [1.8, 2645.0], [1.9, 2645.0], [2.0, 2646.0], [2.1, 2646.0], [2.2, 2646.0], [2.3, 2646.0], [2.4, 2646.0], [2.5, 2660.0], [2.6, 2660.0], [2.7, 2660.0], [2.8, 2660.0], [2.9, 2660.0], [3.0, 2669.0], [3.1, 2669.0], [3.2, 2669.0], [3.3, 2669.0], [3.4, 2669.0], [3.5, 2671.0], [3.6, 2671.0], [3.7, 2671.0], [3.8, 2671.0], [3.9, 2671.0], [4.0, 2672.0], [4.1, 2672.0], [4.2, 2672.0], [4.3, 2672.0], [4.4, 2672.0], [4.5, 2674.0], [4.6, 2674.0], [4.7, 2674.0], [4.8, 2674.0], [4.9, 2674.0], [5.0, 2678.0], [5.1, 2678.0], [5.2, 2678.0], [5.3, 2678.0], [5.4, 2678.0], [5.5, 2680.0], [5.6, 2680.0], [5.7, 2680.0], [5.8, 2680.0], [5.9, 2680.0], [6.0, 2680.0], [6.1, 2680.0], [6.2, 2680.0], [6.3, 2680.0], [6.4, 2680.0], [6.5, 2680.0], [6.6, 2680.0], [6.7, 2680.0], [6.8, 2680.0], [6.9, 2680.0], [7.0, 2681.0], [7.1, 2681.0], [7.2, 2681.0], [7.3, 2681.0], [7.4, 2681.0], [7.5, 2682.0], [7.6, 2682.0], [7.7, 2682.0], [7.8, 2682.0], [7.9, 2682.0], [8.0, 2682.0], [8.1, 2682.0], [8.2, 2682.0], [8.3, 2682.0], [8.4, 2682.0], [8.5, 2682.0], [8.6, 2682.0], [8.7, 2682.0], [8.8, 2682.0], [8.9, 2682.0], [9.0, 2683.0], [9.1, 2683.0], [9.2, 2683.0], [9.3, 2683.0], [9.4, 2683.0], [9.5, 2684.0], [9.6, 2684.0], [9.7, 2684.0], [9.8, 2684.0], [9.9, 2684.0], [10.0, 2686.0], [10.1, 2686.0], [10.2, 2686.0], [10.3, 2686.0], [10.4, 2686.0], [10.5, 2692.0], [10.6, 2692.0], [10.7, 2692.0], [10.8, 2692.0], [10.9, 2692.0], [11.0, 2693.0], [11.1, 2693.0], [11.2, 2693.0], [11.3, 2693.0], [11.4, 2693.0], [11.5, 2693.0], [11.6, 2693.0], [11.7, 2693.0], [11.8, 2693.0], [11.9, 2693.0], [12.0, 2696.0], [12.1, 2696.0], [12.2, 2696.0], [12.3, 2696.0], [12.4, 2696.0], [12.5, 2696.0], [12.6, 2696.0], [12.7, 2696.0], [12.8, 2696.0], [12.9, 2696.0], [13.0, 2702.0], [13.1, 2702.0], [13.2, 2702.0], [13.3, 2702.0], [13.4, 2702.0], [13.5, 2703.0], [13.6, 2703.0], [13.7, 2703.0], [13.8, 2703.0], [13.9, 2703.0], [14.0, 2704.0], [14.1, 2704.0], [14.2, 2704.0], [14.3, 2704.0], [14.4, 2704.0], [14.5, 2705.0], [14.6, 2705.0], [14.7, 2705.0], [14.8, 2705.0], [14.9, 2705.0], [15.0, 2711.0], [15.1, 2711.0], [15.2, 2711.0], [15.3, 2711.0], [15.4, 2711.0], [15.5, 2714.0], [15.6, 2714.0], [15.7, 2714.0], [15.8, 2714.0], [15.9, 2714.0], [16.0, 2716.0], [16.1, 2716.0], [16.2, 2716.0], [16.3, 2716.0], [16.4, 2716.0], [16.5, 2718.0], [16.6, 2718.0], [16.7, 2718.0], [16.8, 2718.0], [16.9, 2718.0], [17.0, 2721.0], [17.1, 2721.0], [17.2, 2721.0], [17.3, 2721.0], [17.4, 2721.0], [17.5, 2723.0], [17.6, 2723.0], [17.7, 2723.0], [17.8, 2723.0], [17.9, 2723.0], [18.0, 2723.0], [18.1, 2723.0], [18.2, 2723.0], [18.3, 2723.0], [18.4, 2723.0], [18.5, 2724.0], [18.6, 2724.0], [18.7, 2724.0], [18.8, 2724.0], [18.9, 2724.0], [19.0, 2730.0], [19.1, 2730.0], [19.2, 2730.0], [19.3, 2730.0], [19.4, 2730.0], [19.5, 2731.0], [19.6, 2731.0], [19.7, 2731.0], [19.8, 2731.0], [19.9, 2731.0], [20.0, 2740.0], [20.1, 2740.0], [20.2, 2740.0], [20.3, 2740.0], [20.4, 2740.0], [20.5, 2741.0], [20.6, 2741.0], [20.7, 2741.0], [20.8, 2741.0], [20.9, 2741.0], [21.0, 2744.0], [21.1, 2744.0], [21.2, 2744.0], [21.3, 2744.0], [21.4, 2744.0], [21.5, 2748.0], [21.6, 2748.0], [21.7, 2748.0], [21.8, 2748.0], [21.9, 2748.0], [22.0, 2753.0], [22.1, 2753.0], [22.2, 2753.0], [22.3, 2753.0], [22.4, 2753.0], [22.5, 2758.0], [22.6, 2758.0], [22.7, 2758.0], [22.8, 2758.0], [22.9, 2758.0], [23.0, 2760.0], [23.1, 2760.0], [23.2, 2760.0], [23.3, 2760.0], [23.4, 2760.0], [23.5, 2761.0], [23.6, 2761.0], [23.7, 2761.0], [23.8, 2761.0], [23.9, 2761.0], [24.0, 2761.0], [24.1, 2761.0], [24.2, 2761.0], [24.3, 2761.0], [24.4, 2761.0], [24.5, 2764.0], [24.6, 2764.0], [24.7, 2764.0], [24.8, 2764.0], [24.9, 2764.0], [25.0, 2765.0], [25.1, 2765.0], [25.2, 2765.0], [25.3, 2765.0], [25.4, 2765.0], [25.5, 2774.0], [25.6, 2774.0], [25.7, 2774.0], [25.8, 2774.0], [25.9, 2774.0], [26.0, 2774.0], [26.1, 2774.0], [26.2, 2774.0], [26.3, 2774.0], [26.4, 2774.0], [26.5, 2775.0], [26.6, 2775.0], [26.7, 2775.0], [26.8, 2775.0], [26.9, 2775.0], [27.0, 2794.0], [27.1, 2794.0], [27.2, 2794.0], [27.3, 2794.0], [27.4, 2794.0], [27.5, 2800.0], [27.6, 2800.0], [27.7, 2800.0], [27.8, 2800.0], [27.9, 2800.0], [28.0, 2802.0], [28.1, 2802.0], [28.2, 2802.0], [28.3, 2802.0], [28.4, 2802.0], [28.5, 2808.0], [28.6, 2808.0], [28.7, 2808.0], [28.8, 2808.0], [28.9, 2808.0], [29.0, 2815.0], [29.1, 2815.0], [29.2, 2815.0], [29.3, 2815.0], [29.4, 2815.0], [29.5, 2819.0], [29.6, 2819.0], [29.7, 2819.0], [29.8, 2819.0], [29.9, 2819.0], [30.0, 2820.0], [30.1, 2820.0], [30.2, 2820.0], [30.3, 2820.0], [30.4, 2820.0], [30.5, 2824.0], [30.6, 2824.0], [30.7, 2824.0], [30.8, 2824.0], [30.9, 2824.0], [31.0, 2827.0], [31.1, 2827.0], [31.2, 2827.0], [31.3, 2827.0], [31.4, 2827.0], [31.5, 2830.0], [31.6, 2830.0], [31.7, 2830.0], [31.8, 2830.0], [31.9, 2830.0], [32.0, 2833.0], [32.1, 2833.0], [32.2, 2833.0], [32.3, 2833.0], [32.4, 2833.0], [32.5, 2835.0], [32.6, 2835.0], [32.7, 2835.0], [32.8, 2835.0], [32.9, 2835.0], [33.0, 2840.0], [33.1, 2840.0], [33.2, 2840.0], [33.3, 2840.0], [33.4, 2840.0], [33.5, 2842.0], [33.6, 2842.0], [33.7, 2842.0], [33.8, 2842.0], [33.9, 2842.0], [34.0, 2843.0], [34.1, 2843.0], [34.2, 2843.0], [34.3, 2843.0], [34.4, 2843.0], [34.5, 2844.0], [34.6, 2844.0], [34.7, 2844.0], [34.8, 2844.0], [34.9, 2844.0], [35.0, 2844.0], [35.1, 2844.0], [35.2, 2844.0], [35.3, 2844.0], [35.4, 2844.0], [35.5, 2849.0], [35.6, 2849.0], [35.7, 2849.0], [35.8, 2849.0], [35.9, 2849.0], [36.0, 2853.0], [36.1, 2853.0], [36.2, 2853.0], [36.3, 2853.0], [36.4, 2853.0], [36.5, 2858.0], [36.6, 2858.0], [36.7, 2858.0], [36.8, 2858.0], [36.9, 2858.0], [37.0, 2859.0], [37.1, 2859.0], [37.2, 2859.0], [37.3, 2859.0], [37.4, 2859.0], [37.5, 2862.0], [37.6, 2862.0], [37.7, 2862.0], [37.8, 2862.0], [37.9, 2862.0], [38.0, 2866.0], [38.1, 2866.0], [38.2, 2866.0], [38.3, 2866.0], [38.4, 2866.0], [38.5, 2868.0], [38.6, 2868.0], [38.7, 2868.0], [38.8, 2868.0], [38.9, 2868.0], [39.0, 2871.0], [39.1, 2871.0], [39.2, 2871.0], [39.3, 2871.0], [39.4, 2871.0], [39.5, 2872.0], [39.6, 2872.0], [39.7, 2872.0], [39.8, 2872.0], [39.9, 2872.0], [40.0, 2874.0], [40.1, 2874.0], [40.2, 2874.0], [40.3, 2874.0], [40.4, 2874.0], [40.5, 2890.0], [40.6, 2890.0], [40.7, 2890.0], [40.8, 2890.0], [40.9, 2890.0], [41.0, 2906.0], [41.1, 2906.0], [41.2, 2906.0], [41.3, 2906.0], [41.4, 2906.0], [41.5, 2907.0], [41.6, 2907.0], [41.7, 2907.0], [41.8, 2907.0], [41.9, 2907.0], [42.0, 2909.0], [42.1, 2909.0], [42.2, 2909.0], [42.3, 2909.0], [42.4, 2909.0], [42.5, 2911.0], [42.6, 2911.0], [42.7, 2911.0], [42.8, 2911.0], [42.9, 2911.0], [43.0, 2925.0], [43.1, 2925.0], [43.2, 2925.0], [43.3, 2925.0], [43.4, 2925.0], [43.5, 2931.0], [43.6, 2931.0], [43.7, 2931.0], [43.8, 2931.0], [43.9, 2931.0], [44.0, 2933.0], [44.1, 2933.0], [44.2, 2933.0], [44.3, 2933.0], [44.4, 2933.0], [44.5, 2936.0], [44.6, 2936.0], [44.7, 2936.0], [44.8, 2936.0], [44.9, 2936.0], [45.0, 2943.0], [45.1, 2943.0], [45.2, 2943.0], [45.3, 2943.0], [45.4, 2943.0], [45.5, 2951.0], [45.6, 2951.0], [45.7, 2951.0], [45.8, 2951.0], [45.9, 2951.0], [46.0, 2954.0], [46.1, 2954.0], [46.2, 2954.0], [46.3, 2954.0], [46.4, 2954.0], [46.5, 2955.0], [46.6, 2955.0], [46.7, 2955.0], [46.8, 2955.0], [46.9, 2955.0], [47.0, 2957.0], [47.1, 2957.0], [47.2, 2957.0], [47.3, 2957.0], [47.4, 2957.0], [47.5, 2961.0], [47.6, 2961.0], [47.7, 2961.0], [47.8, 2961.0], [47.9, 2961.0], [48.0, 2961.0], [48.1, 2961.0], [48.2, 2961.0], [48.3, 2961.0], [48.4, 2961.0], [48.5, 2962.0], [48.6, 2962.0], [48.7, 2962.0], [48.8, 2962.0], [48.9, 2962.0], [49.0, 2963.0], [49.1, 2963.0], [49.2, 2963.0], [49.3, 2963.0], [49.4, 2963.0], [49.5, 2964.0], [49.6, 2964.0], [49.7, 2964.0], [49.8, 2964.0], [49.9, 2964.0], [50.0, 2966.0], [50.1, 2966.0], [50.2, 2966.0], [50.3, 2966.0], [50.4, 2966.0], [50.5, 2967.0], [50.6, 2967.0], [50.7, 2967.0], [50.8, 2967.0], [50.9, 2967.0], [51.0, 2967.0], [51.1, 2967.0], [51.2, 2967.0], [51.3, 2967.0], [51.4, 2967.0], [51.5, 2973.0], [51.6, 2973.0], [51.7, 2973.0], [51.8, 2973.0], [51.9, 2973.0], [52.0, 2981.0], [52.1, 2981.0], [52.2, 2981.0], [52.3, 2981.0], [52.4, 2981.0], [52.5, 2995.0], [52.6, 2995.0], [52.7, 2995.0], [52.8, 2995.0], [52.9, 2995.0], [53.0, 2998.0], [53.1, 2998.0], [53.2, 2998.0], [53.3, 2998.0], [53.4, 2998.0], [53.5, 2999.0], [53.6, 2999.0], [53.7, 2999.0], [53.8, 2999.0], [53.9, 2999.0], [54.0, 3001.0], [54.1, 3001.0], [54.2, 3001.0], [54.3, 3001.0], [54.4, 3001.0], [54.5, 3002.0], [54.6, 3002.0], [54.7, 3002.0], [54.8, 3002.0], [54.9, 3002.0], [55.0, 3002.0], [55.1, 3002.0], [55.2, 3002.0], [55.3, 3002.0], [55.4, 3002.0], [55.5, 3002.0], [55.6, 3002.0], [55.7, 3002.0], [55.8, 3002.0], [55.9, 3002.0], [56.0, 3006.0], [56.1, 3006.0], [56.2, 3006.0], [56.3, 3006.0], [56.4, 3006.0], [56.5, 3006.0], [56.6, 3006.0], [56.7, 3006.0], [56.8, 3006.0], [56.9, 3006.0], [57.0, 3007.0], [57.1, 3007.0], [57.2, 3007.0], [57.3, 3007.0], [57.4, 3007.0], [57.5, 3009.0], [57.6, 3009.0], [57.7, 3009.0], [57.8, 3009.0], [57.9, 3009.0], [58.0, 3017.0], [58.1, 3017.0], [58.2, 3017.0], [58.3, 3017.0], [58.4, 3017.0], [58.5, 3023.0], [58.6, 3023.0], [58.7, 3023.0], [58.8, 3023.0], [58.9, 3023.0], [59.0, 3050.0], [59.1, 3050.0], [59.2, 3050.0], [59.3, 3050.0], [59.4, 3050.0], [59.5, 3054.0], [59.6, 3054.0], [59.7, 3054.0], [59.8, 3054.0], [59.9, 3054.0], [60.0, 3074.0], [60.1, 3074.0], [60.2, 3074.0], [60.3, 3074.0], [60.4, 3074.0], [60.5, 3076.0], [60.6, 3076.0], [60.7, 3076.0], [60.8, 3076.0], [60.9, 3076.0], [61.0, 3078.0], [61.1, 3078.0], [61.2, 3078.0], [61.3, 3078.0], [61.4, 3078.0], [61.5, 3091.0], [61.6, 3091.0], [61.7, 3091.0], [61.8, 3091.0], [61.9, 3091.0], [62.0, 3095.0], [62.1, 3095.0], [62.2, 3095.0], [62.3, 3095.0], [62.4, 3095.0], [62.5, 3106.0], [62.6, 3106.0], [62.7, 3106.0], [62.8, 3106.0], [62.9, 3106.0], [63.0, 3109.0], [63.1, 3109.0], [63.2, 3109.0], [63.3, 3109.0], [63.4, 3109.0], [63.5, 3116.0], [63.6, 3116.0], [63.7, 3116.0], [63.8, 3116.0], [63.9, 3116.0], [64.0, 3121.0], [64.1, 3121.0], [64.2, 3121.0], [64.3, 3121.0], [64.4, 3121.0], [64.5, 3123.0], [64.6, 3123.0], [64.7, 3123.0], [64.8, 3123.0], [64.9, 3123.0], [65.0, 3123.0], [65.1, 3123.0], [65.2, 3123.0], [65.3, 3123.0], [65.4, 3123.0], [65.5, 3124.0], [65.6, 3124.0], [65.7, 3124.0], [65.8, 3124.0], [65.9, 3124.0], [66.0, 3130.0], [66.1, 3130.0], [66.2, 3130.0], [66.3, 3130.0], [66.4, 3130.0], [66.5, 3134.0], [66.6, 3134.0], [66.7, 3134.0], [66.8, 3134.0], [66.9, 3134.0], [67.0, 3139.0], [67.1, 3139.0], [67.2, 3139.0], [67.3, 3139.0], [67.4, 3139.0], [67.5, 3152.0], [67.6, 3152.0], [67.7, 3152.0], [67.8, 3152.0], [67.9, 3152.0], [68.0, 3153.0], [68.1, 3153.0], [68.2, 3153.0], [68.3, 3153.0], [68.4, 3153.0], [68.5, 3153.0], [68.6, 3153.0], [68.7, 3153.0], [68.8, 3153.0], [68.9, 3153.0], [69.0, 3158.0], [69.1, 3158.0], [69.2, 3158.0], [69.3, 3158.0], [69.4, 3158.0], [69.5, 3174.0], [69.6, 3174.0], [69.7, 3174.0], [69.8, 3174.0], [69.9, 3174.0], [70.0, 3185.0], [70.1, 3185.0], [70.2, 3185.0], [70.3, 3185.0], [70.4, 3185.0], [70.5, 3188.0], [70.6, 3188.0], [70.7, 3188.0], [70.8, 3188.0], [70.9, 3188.0], [71.0, 3189.0], [71.1, 3189.0], [71.2, 3189.0], [71.3, 3189.0], [71.4, 3189.0], [71.5, 3199.0], [71.6, 3199.0], [71.7, 3199.0], [71.8, 3199.0], [71.9, 3199.0], [72.0, 3199.0], [72.1, 3199.0], [72.2, 3199.0], [72.3, 3199.0], [72.4, 3199.0], [72.5, 3203.0], [72.6, 3203.0], [72.7, 3203.0], [72.8, 3203.0], [72.9, 3203.0], [73.0, 3211.0], [73.1, 3211.0], [73.2, 3211.0], [73.3, 3211.0], [73.4, 3211.0], [73.5, 3218.0], [73.6, 3218.0], [73.7, 3218.0], [73.8, 3218.0], [73.9, 3218.0], [74.0, 3221.0], [74.1, 3221.0], [74.2, 3221.0], [74.3, 3221.0], [74.4, 3221.0], [74.5, 3231.0], [74.6, 3231.0], [74.7, 3231.0], [74.8, 3231.0], [74.9, 3231.0], [75.0, 3232.0], [75.1, 3232.0], [75.2, 3232.0], [75.3, 3232.0], [75.4, 3232.0], [75.5, 3233.0], [75.6, 3233.0], [75.7, 3233.0], [75.8, 3233.0], [75.9, 3233.0], [76.0, 3263.0], [76.1, 3263.0], [76.2, 3263.0], [76.3, 3263.0], [76.4, 3263.0], [76.5, 3265.0], [76.6, 3265.0], [76.7, 3265.0], [76.8, 3265.0], [76.9, 3265.0], [77.0, 3265.0], [77.1, 3265.0], [77.2, 3265.0], [77.3, 3265.0], [77.4, 3265.0], [77.5, 3269.0], [77.6, 3269.0], [77.7, 3269.0], [77.8, 3269.0], [77.9, 3269.0], [78.0, 3274.0], [78.1, 3274.0], [78.2, 3274.0], [78.3, 3274.0], [78.4, 3274.0], [78.5, 3274.0], [78.6, 3274.0], [78.7, 3274.0], [78.8, 3274.0], [78.9, 3274.0], [79.0, 3275.0], [79.1, 3275.0], [79.2, 3275.0], [79.3, 3275.0], [79.4, 3275.0], [79.5, 3287.0], [79.6, 3287.0], [79.7, 3287.0], [79.8, 3287.0], [79.9, 3287.0], [80.0, 3287.0], [80.1, 3287.0], [80.2, 3287.0], [80.3, 3287.0], [80.4, 3287.0], [80.5, 3349.0], [80.6, 3349.0], [80.7, 3349.0], [80.8, 3349.0], [80.9, 3349.0], [81.0, 3379.0], [81.1, 3379.0], [81.2, 3379.0], [81.3, 3379.0], [81.4, 3379.0], [81.5, 3414.0], [81.6, 3414.0], [81.7, 3414.0], [81.8, 3414.0], [81.9, 3414.0], [82.0, 3415.0], [82.1, 3415.0], [82.2, 3415.0], [82.3, 3415.0], [82.4, 3415.0], [82.5, 3423.0], [82.6, 3423.0], [82.7, 3423.0], [82.8, 3423.0], [82.9, 3423.0], [83.0, 3462.0], [83.1, 3462.0], [83.2, 3462.0], [83.3, 3462.0], [83.4, 3462.0], [83.5, 3464.0], [83.6, 3464.0], [83.7, 3464.0], [83.8, 3464.0], [83.9, 3464.0], [84.0, 3470.0], [84.1, 3470.0], [84.2, 3470.0], [84.3, 3470.0], [84.4, 3470.0], [84.5, 3475.0], [84.6, 3475.0], [84.7, 3475.0], [84.8, 3475.0], [84.9, 3475.0], [85.0, 3476.0], [85.1, 3476.0], [85.2, 3476.0], [85.3, 3476.0], [85.4, 3476.0], [85.5, 3481.0], [85.6, 3481.0], [85.7, 3481.0], [85.8, 3481.0], [85.9, 3481.0], [86.0, 3496.0], [86.1, 3496.0], [86.2, 3496.0], [86.3, 3496.0], [86.4, 3496.0], [86.5, 3496.0], [86.6, 3496.0], [86.7, 3496.0], [86.8, 3496.0], [86.9, 3496.0], [87.0, 3514.0], [87.1, 3514.0], [87.2, 3514.0], [87.3, 3514.0], [87.4, 3514.0], [87.5, 3524.0], [87.6, 3524.0], [87.7, 3524.0], [87.8, 3524.0], [87.9, 3524.0], [88.0, 3532.0], [88.1, 3532.0], [88.2, 3532.0], [88.3, 3532.0], [88.4, 3532.0], [88.5, 3533.0], [88.6, 3533.0], [88.7, 3533.0], [88.8, 3533.0], [88.9, 3533.0], [89.0, 3534.0], [89.1, 3534.0], [89.2, 3534.0], [89.3, 3534.0], [89.4, 3534.0], [89.5, 3546.0], [89.6, 3546.0], [89.7, 3546.0], [89.8, 3546.0], [89.9, 3546.0], [90.0, 3549.0], [90.1, 3549.0], [90.2, 3549.0], [90.3, 3549.0], [90.4, 3549.0], [90.5, 3551.0], [90.6, 3551.0], [90.7, 3551.0], [90.8, 3551.0], [90.9, 3551.0], [91.0, 3554.0], [91.1, 3554.0], [91.2, 3554.0], [91.3, 3554.0], [91.4, 3554.0], [91.5, 3555.0], [91.6, 3555.0], [91.7, 3555.0], [91.8, 3555.0], [91.9, 3555.0], [92.0, 3572.0], [92.1, 3572.0], [92.2, 3572.0], [92.3, 3572.0], [92.4, 3572.0], [92.5, 3580.0], [92.6, 3580.0], [92.7, 3580.0], [92.8, 3580.0], [92.9, 3580.0], [93.0, 3580.0], [93.1, 3580.0], [93.2, 3580.0], [93.3, 3580.0], [93.4, 3580.0], [93.5, 3589.0], [93.6, 3589.0], [93.7, 3589.0], [93.8, 3589.0], [93.9, 3589.0], [94.0, 3590.0], [94.1, 3590.0], [94.2, 3590.0], [94.3, 3590.0], [94.4, 3590.0], [94.5, 3599.0], [94.6, 3599.0], [94.7, 3599.0], [94.8, 3599.0], [94.9, 3599.0], [95.0, 3606.0], [95.1, 3606.0], [95.2, 3606.0], [95.3, 3606.0], [95.4, 3606.0], [95.5, 3618.0], [95.6, 3618.0], [95.7, 3618.0], [95.8, 3618.0], [95.9, 3618.0], [96.0, 3621.0], [96.1, 3621.0], [96.2, 3621.0], [96.3, 3621.0], [96.4, 3621.0], [96.5, 3625.0], [96.6, 3625.0], [96.7, 3625.0], [96.8, 3625.0], [96.9, 3625.0], [97.0, 3629.0], [97.1, 3629.0], [97.2, 3629.0], [97.3, 3629.0], [97.4, 3629.0], [97.5, 3636.0], [97.6, 3636.0], [97.7, 3636.0], [97.8, 3636.0], [97.9, 3636.0], [98.0, 3648.0], [98.1, 3648.0], [98.2, 3648.0], [98.3, 3648.0], [98.4, 3648.0], [98.5, 3653.0], [98.6, 3653.0], [98.7, 3653.0], [98.8, 3653.0], [98.9, 3653.0], [99.0, 3654.0], [99.1, 3654.0], [99.2, 3654.0], [99.3, 3654.0], [99.4, 3654.0], [99.5, 3667.0], [99.6, 3667.0], [99.7, 3667.0], [99.8, 3667.0], [99.9, 3667.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 2650.0], [0.1, 2655.0], [0.2, 2655.0], [0.3, 2655.0], [0.4, 2686.0], [0.5, 2687.0], [0.6, 2688.0], [0.7, 2688.0], [0.8, 2689.0], [0.9, 2689.0], [1.0, 2690.0], [1.1, 2690.0], [1.2, 2691.0], [1.3, 2692.0], [1.4, 2692.0], [1.5, 2692.0], [1.6, 2692.0], [1.7, 2692.0], [1.8, 2693.0], [1.9, 2693.0], [2.0, 2694.0], [2.1, 2694.0], [2.2, 2695.0], [2.3, 2695.0], [2.4, 2696.0], [2.5, 2698.0], [2.6, 2701.0], [2.7, 2703.0], [2.8, 2705.0], [2.9, 2708.0], [3.0, 2708.0], [3.1, 2712.0], [3.2, 2712.0], [3.3, 2712.0], [3.4, 2713.0], [3.5, 2713.0], [3.6, 2713.0], [3.7, 2713.0], [3.8, 2714.0], [3.9, 2715.0], [4.0, 2716.0], [4.1, 2716.0], [4.2, 2717.0], [4.3, 2717.0], [4.4, 2717.0], [4.5, 2717.0], [4.6, 2718.0], [4.7, 2719.0], [4.8, 2719.0], [4.9, 2720.0], [5.0, 2720.0], [5.1, 2720.0], [5.2, 2720.0], [5.3, 2720.0], [5.4, 2721.0], [5.5, 2721.0], [5.6, 2721.0], [5.7, 2722.0], [5.8, 2722.0], [5.9, 2723.0], [6.0, 2723.0], [6.1, 2723.0], [6.2, 2724.0], [6.3, 2724.0], [6.4, 2724.0], [6.5, 2724.0], [6.6, 2725.0], [6.7, 2725.0], [6.8, 2725.0], [6.9, 2727.0], [7.0, 2727.0], [7.1, 2728.0], [7.2, 2728.0], [7.3, 2728.0], [7.4, 2728.0], [7.5, 2729.0], [7.6, 2729.0], [7.7, 2730.0], [7.8, 2730.0], [7.9, 2731.0], [8.0, 2731.0], [8.1, 2732.0], [8.2, 2732.0], [8.3, 2732.0], [8.4, 2733.0], [8.5, 2733.0], [8.6, 2734.0], [8.7, 2734.0], [8.8, 2734.0], [8.9, 2735.0], [9.0, 2736.0], [9.1, 2736.0], [9.2, 2736.0], [9.3, 2737.0], [9.4, 2754.0], [9.5, 2754.0], [9.6, 2756.0], [9.7, 2757.0], [9.8, 2758.0], [9.9, 2758.0], [10.0, 2758.0], [10.1, 2758.0], [10.2, 2758.0], [10.3, 2759.0], [10.4, 2759.0], [10.5, 2759.0], [10.6, 2759.0], [10.7, 2759.0], [10.8, 2759.0], [10.9, 2760.0], [11.0, 2760.0], [11.1, 2761.0], [11.2, 2761.0], [11.3, 2761.0], [11.4, 2762.0], [11.5, 2762.0], [11.6, 2762.0], [11.7, 2762.0], [11.8, 2762.0], [11.9, 2763.0], [12.0, 2763.0], [12.1, 2763.0], [12.2, 2763.0], [12.3, 2765.0], [12.4, 2765.0], [12.5, 2765.0], [12.6, 2765.0], [12.7, 2766.0], [12.8, 2766.0], [12.9, 2766.0], [13.0, 2767.0], [13.1, 2767.0], [13.2, 2767.0], [13.3, 2768.0], [13.4, 2768.0], [13.5, 2768.0], [13.6, 2769.0], [13.7, 2769.0], [13.8, 2769.0], [13.9, 2769.0], [14.0, 2770.0], [14.1, 2770.0], [14.2, 2770.0], [14.3, 2770.0], [14.4, 2771.0], [14.5, 2772.0], [14.6, 2772.0], [14.7, 2774.0], [14.8, 2776.0], [14.9, 2776.0], [15.0, 2776.0], [15.1, 2783.0], [15.2, 2783.0], [15.3, 2783.0], [15.4, 2783.0], [15.5, 2785.0], [15.6, 2785.0], [15.7, 2785.0], [15.8, 2786.0], [15.9, 2787.0], [16.0, 2787.0], [16.1, 2787.0], [16.2, 2788.0], [16.3, 2789.0], [16.4, 2790.0], [16.5, 2790.0], [16.6, 2790.0], [16.7, 2791.0], [16.8, 2792.0], [16.9, 2792.0], [17.0, 2792.0], [17.1, 2793.0], [17.2, 2794.0], [17.3, 2794.0], [17.4, 2794.0], [17.5, 2794.0], [17.6, 2795.0], [17.7, 2795.0], [17.8, 2795.0], [17.9, 2795.0], [18.0, 2795.0], [18.1, 2795.0], [18.2, 2795.0], [18.3, 2795.0], [18.4, 2795.0], [18.5, 2795.0], [18.6, 2796.0], [18.7, 2796.0], [18.8, 2796.0], [18.9, 2796.0], [19.0, 2796.0], [19.1, 2796.0], [19.2, 2796.0], [19.3, 2796.0], [19.4, 2796.0], [19.5, 2796.0], [19.6, 2796.0], [19.7, 2796.0], [19.8, 2796.0], [19.9, 2797.0], [20.0, 2797.0], [20.1, 2797.0], [20.2, 2797.0], [20.3, 2797.0], [20.4, 2797.0], [20.5, 2797.0], [20.6, 2797.0], [20.7, 2797.0], [20.8, 2797.0], [20.9, 2797.0], [21.0, 2797.0], [21.1, 2797.0], [21.2, 2797.0], [21.3, 2798.0], [21.4, 2798.0], [21.5, 2798.0], [21.6, 2798.0], [21.7, 2798.0], [21.8, 2798.0], [21.9, 2799.0], [22.0, 2799.0], [22.1, 2799.0], [22.2, 2799.0], [22.3, 2799.0], [22.4, 2799.0], [22.5, 2799.0], [22.6, 2799.0], [22.7, 2799.0], [22.8, 2799.0], [22.9, 2800.0], [23.0, 2801.0], [23.1, 2801.0], [23.2, 2801.0], [23.3, 2804.0], [23.4, 2804.0], [23.5, 2804.0], [23.6, 2804.0], [23.7, 2804.0], [23.8, 2804.0], [23.9, 2804.0], [24.0, 2804.0], [24.1, 2804.0], [24.2, 2804.0], [24.3, 2804.0], [24.4, 2804.0], [24.5, 2804.0], [24.6, 2805.0], [24.7, 2805.0], [24.8, 2805.0], [24.9, 2805.0], [25.0, 2805.0], [25.1, 2805.0], [25.2, 2805.0], [25.3, 2805.0], [25.4, 2805.0], [25.5, 2805.0], [25.6, 2805.0], [25.7, 2805.0], [25.8, 2805.0], [25.9, 2806.0], [26.0, 2806.0], [26.1, 2806.0], [26.2, 2809.0], [26.3, 2835.0], [26.4, 2842.0], [26.5, 2842.0], [26.6, 2842.0], [26.7, 2843.0], [26.8, 2843.0], [26.9, 2844.0], [27.0, 2846.0], [27.1, 2846.0], [27.2, 2847.0], [27.3, 2848.0], [27.4, 2850.0], [27.5, 2850.0], [27.6, 2851.0], [27.7, 2851.0], [27.8, 2851.0], [27.9, 2852.0], [28.0, 2852.0], [28.1, 2852.0], [28.2, 2853.0], [28.3, 2853.0], [28.4, 2853.0], [28.5, 2854.0], [28.6, 2855.0], [28.7, 2855.0], [28.8, 2855.0], [28.9, 2855.0], [29.0, 2855.0], [29.1, 2856.0], [29.2, 2856.0], [29.3, 2857.0], [29.4, 2857.0], [29.5, 2861.0], [29.6, 2862.0], [29.7, 2864.0], [29.8, 2864.0], [29.9, 2864.0], [30.0, 2864.0], [30.1, 2866.0], [30.2, 2866.0], [30.3, 2866.0], [30.4, 2866.0], [30.5, 2867.0], [30.6, 2868.0], [30.7, 2868.0], [30.8, 2868.0], [30.9, 2869.0], [31.0, 2869.0], [31.1, 2869.0], [31.2, 2869.0], [31.3, 2871.0], [31.4, 2871.0], [31.5, 2871.0], [31.6, 2871.0], [31.7, 2871.0], [31.8, 2871.0], [31.9, 2871.0], [32.0, 2871.0], [32.1, 2872.0], [32.2, 2872.0], [32.3, 2873.0], [32.4, 2873.0], [32.5, 2873.0], [32.6, 2873.0], [32.7, 2873.0], [32.8, 2873.0], [32.9, 2873.0], [33.0, 2873.0], [33.1, 2873.0], [33.2, 2875.0], [33.3, 2875.0], [33.4, 2875.0], [33.5, 2875.0], [33.6, 2875.0], [33.7, 2876.0], [33.8, 2877.0], [33.9, 2877.0], [34.0, 2877.0], [34.1, 2878.0], [34.2, 2878.0], [34.3, 2878.0], [34.4, 2879.0], [34.5, 2880.0], [34.6, 2880.0], [34.7, 2880.0], [34.8, 2880.0], [34.9, 2894.0], [35.0, 2894.0], [35.1, 2895.0], [35.2, 2895.0], [35.3, 2895.0], [35.4, 2895.0], [35.5, 2896.0], [35.6, 2896.0], [35.7, 2897.0], [35.8, 2897.0], [35.9, 2898.0], [36.0, 2900.0], [36.1, 2900.0], [36.2, 2900.0], [36.3, 2900.0], [36.4, 2901.0], [36.5, 2901.0], [36.6, 2901.0], [36.7, 2902.0], [36.8, 2902.0], [36.9, 2902.0], [37.0, 2903.0], [37.1, 2903.0], [37.2, 2903.0], [37.3, 2904.0], [37.4, 2904.0], [37.5, 2904.0], [37.6, 2905.0], [37.7, 2905.0], [37.8, 2905.0], [37.9, 2905.0], [38.0, 2905.0], [38.1, 2906.0], [38.2, 2906.0], [38.3, 2907.0], [38.4, 2907.0], [38.5, 2907.0], [38.6, 2907.0], [38.7, 2908.0], [38.8, 2909.0], [38.9, 2909.0], [39.0, 2910.0], [39.1, 2910.0], [39.2, 2910.0], [39.3, 2911.0], [39.4, 2918.0], [39.5, 2921.0], [39.6, 2921.0], [39.7, 2921.0], [39.8, 2922.0], [39.9, 2922.0], [40.0, 2922.0], [40.1, 2922.0], [40.2, 2922.0], [40.3, 2922.0], [40.4, 2923.0], [40.5, 2924.0], [40.6, 2924.0], [40.7, 2926.0], [40.8, 2927.0], [40.9, 2927.0], [41.0, 2928.0], [41.1, 2929.0], [41.2, 2929.0], [41.3, 2930.0], [41.4, 2930.0], [41.5, 2931.0], [41.6, 2931.0], [41.7, 2931.0], [41.8, 2932.0], [41.9, 2932.0], [42.0, 2932.0], [42.1, 2932.0], [42.2, 2932.0], [42.3, 2932.0], [42.4, 2933.0], [42.5, 2933.0], [42.6, 2933.0], [42.7, 2934.0], [42.8, 2934.0], [42.9, 2934.0], [43.0, 2935.0], [43.1, 2936.0], [43.2, 2938.0], [43.3, 2940.0], [43.4, 2946.0], [43.5, 2948.0], [43.6, 2949.0], [43.7, 2949.0], [43.8, 2950.0], [43.9, 2950.0], [44.0, 2951.0], [44.1, 2951.0], [44.2, 2952.0], [44.3, 2952.0], [44.4, 2952.0], [44.5, 2953.0], [44.6, 2953.0], [44.7, 2953.0], [44.8, 2953.0], [44.9, 2954.0], [45.0, 2954.0], [45.1, 2955.0], [45.2, 2955.0], [45.3, 2956.0], [45.4, 2956.0], [45.5, 2956.0], [45.6, 2956.0], [45.7, 2958.0], [45.8, 2959.0], [45.9, 2959.0], [46.0, 2960.0], [46.1, 2960.0], [46.2, 2960.0], [46.3, 2960.0], [46.4, 2960.0], [46.5, 2962.0], [46.6, 2962.0], [46.7, 2962.0], [46.8, 2962.0], [46.9, 2962.0], [47.0, 2962.0], [47.1, 2962.0], [47.2, 2962.0], [47.3, 2962.0], [47.4, 2962.0], [47.5, 2963.0], [47.6, 2963.0], [47.7, 2963.0], [47.8, 2963.0], [47.9, 2963.0], [48.0, 2963.0], [48.1, 2963.0], [48.2, 2963.0], [48.3, 2963.0], [48.4, 2963.0], [48.5, 2963.0], [48.6, 2964.0], [48.7, 2964.0], [48.8, 2964.0], [48.9, 2964.0], [49.0, 2964.0], [49.1, 2964.0], [49.2, 2964.0], [49.3, 2964.0], [49.4, 2964.0], [49.5, 2965.0], [49.6, 2965.0], [49.7, 2965.0], [49.8, 2965.0], [49.9, 2965.0], [50.0, 2966.0], [50.1, 2969.0], [50.2, 2970.0], [50.3, 2973.0], [50.4, 2976.0], [50.5, 2977.0], [50.6, 2978.0], [50.7, 2978.0], [50.8, 2978.0], [50.9, 2978.0], [51.0, 2978.0], [51.1, 2979.0], [51.2, 2979.0], [51.3, 2979.0], [51.4, 2979.0], [51.5, 2979.0], [51.6, 2979.0], [51.7, 2979.0], [51.8, 2979.0], [51.9, 2980.0], [52.0, 2983.0], [52.1, 2999.0], [52.2, 3001.0], [52.3, 3002.0], [52.4, 3003.0], [52.5, 3003.0], [52.6, 3004.0], [52.7, 3005.0], [52.8, 3005.0], [52.9, 3005.0], [53.0, 3005.0], [53.1, 3006.0], [53.2, 3006.0], [53.3, 3006.0], [53.4, 3006.0], [53.5, 3007.0], [53.6, 3008.0], [53.7, 3008.0], [53.8, 3009.0], [53.9, 3009.0], [54.0, 3010.0], [54.1, 3010.0], [54.2, 3010.0], [54.3, 3011.0], [54.4, 3011.0], [54.5, 3012.0], [54.6, 3012.0], [54.7, 3012.0], [54.8, 3012.0], [54.9, 3013.0], [55.0, 3013.0], [55.1, 3014.0], [55.2, 3014.0], [55.3, 3014.0], [55.4, 3015.0], [55.5, 3016.0], [55.6, 3016.0], [55.7, 3016.0], [55.8, 3018.0], [55.9, 3019.0], [56.0, 3019.0], [56.1, 3019.0], [56.2, 3020.0], [56.3, 3021.0], [56.4, 3021.0], [56.5, 3021.0], [56.6, 3022.0], [56.7, 3023.0], [56.8, 3023.0], [56.9, 3023.0], [57.0, 3023.0], [57.1, 3024.0], [57.2, 3025.0], [57.3, 3025.0], [57.4, 3025.0], [57.5, 3027.0], [57.6, 3027.0], [57.7, 3027.0], [57.8, 3029.0], [57.9, 3029.0], [58.0, 3031.0], [58.1, 3031.0], [58.2, 3031.0], [58.3, 3035.0], [58.4, 3037.0], [58.5, 3038.0], [58.6, 3038.0], [58.7, 3039.0], [58.8, 3039.0], [58.9, 3039.0], [59.0, 3039.0], [59.1, 3039.0], [59.2, 3040.0], [59.3, 3040.0], [59.4, 3040.0], [59.5, 3041.0], [59.6, 3042.0], [59.7, 3042.0], [59.8, 3042.0], [59.9, 3043.0], [60.0, 3043.0], [60.1, 3043.0], [60.2, 3044.0], [60.3, 3045.0], [60.4, 3046.0], [60.5, 3047.0], [60.6, 3047.0], [60.7, 3047.0], [60.8, 3048.0], [60.9, 3048.0], [61.0, 3048.0], [61.1, 3049.0], [61.2, 3049.0], [61.3, 3050.0], [61.4, 3050.0], [61.5, 3051.0], [61.6, 3051.0], [61.7, 3052.0], [61.8, 3053.0], [61.9, 3054.0], [62.0, 3055.0], [62.1, 3055.0], [62.2, 3055.0], [62.3, 3056.0], [62.4, 3057.0], [62.5, 3058.0], [62.6, 3059.0], [62.7, 3060.0], [62.8, 3060.0], [62.9, 3060.0], [63.0, 3060.0], [63.1, 3060.0], [63.2, 3061.0], [63.3, 3061.0], [63.4, 3061.0], [63.5, 3061.0], [63.6, 3062.0], [63.7, 3062.0], [63.8, 3062.0], [63.9, 3062.0], [64.0, 3062.0], [64.1, 3064.0], [64.2, 3064.0], [64.3, 3065.0], [64.4, 3066.0], [64.5, 3067.0], [64.6, 3070.0], [64.7, 3075.0], [64.8, 3076.0], [64.9, 3076.0], [65.0, 3076.0], [65.1, 3076.0], [65.2, 3076.0], [65.3, 3076.0], [65.4, 3076.0], [65.5, 3076.0], [65.6, 3076.0], [65.7, 3076.0], [65.8, 3077.0], [65.9, 3077.0], [66.0, 3077.0], [66.1, 3077.0], [66.2, 3077.0], [66.3, 3077.0], [66.4, 3077.0], [66.5, 3077.0], [66.6, 3077.0], [66.7, 3077.0], [66.8, 3077.0], [66.9, 3077.0], [67.0, 3077.0], [67.1, 3077.0], [67.2, 3077.0], [67.3, 3077.0], [67.4, 3078.0], [67.5, 3078.0], [67.6, 3078.0], [67.7, 3078.0], [67.8, 3078.0], [67.9, 3078.0], [68.0, 3078.0], [68.1, 3078.0], [68.2, 3078.0], [68.3, 3078.0], [68.4, 3078.0], [68.5, 3078.0], [68.6, 3078.0], [68.7, 3078.0], [68.8, 3078.0], [68.9, 3078.0], [69.0, 3079.0], [69.1, 3079.0], [69.2, 3079.0], [69.3, 3079.0], [69.4, 3079.0], [69.5, 3079.0], [69.6, 3079.0], [69.7, 3079.0], [69.8, 3079.0], [69.9, 3079.0], [70.0, 3079.0], [70.1, 3080.0], [70.2, 3082.0], [70.3, 3082.0], [70.4, 3082.0], [70.5, 3082.0], [70.6, 3083.0], [70.7, 3083.0], [70.8, 3083.0], [70.9, 3083.0], [71.0, 3083.0], [71.1, 3083.0], [71.2, 3084.0], [71.3, 3084.0], [71.4, 3084.0], [71.5, 3084.0], [71.6, 3084.0], [71.7, 3084.0], [71.8, 3084.0], [71.9, 3084.0], [72.0, 3084.0], [72.1, 3085.0], [72.2, 3085.0], [72.3, 3085.0], [72.4, 3085.0], [72.5, 3085.0], [72.6, 3085.0], [72.7, 3085.0], [72.8, 3085.0], [72.9, 3085.0], [73.0, 3085.0], [73.1, 3085.0], [73.2, 3085.0], [73.3, 3086.0], [73.4, 3086.0], [73.5, 3086.0], [73.6, 3086.0], [73.7, 3086.0], [73.8, 3086.0], [73.9, 3087.0], [74.0, 3087.0], [74.1, 3087.0], [74.2, 3087.0], [74.3, 3088.0], [74.4, 3088.0], [74.5, 3088.0], [74.6, 3088.0], [74.7, 3088.0], [74.8, 3089.0], [74.9, 3089.0], [75.0, 3089.0], [75.1, 3089.0], [75.2, 3089.0], [75.3, 3089.0], [75.4, 3089.0], [75.5, 3090.0], [75.6, 3090.0], [75.7, 3091.0], [75.8, 3091.0], [75.9, 3091.0], [76.0, 3105.0], [76.1, 3107.0], [76.2, 3108.0], [76.3, 3109.0], [76.4, 3109.0], [76.5, 3109.0], [76.6, 3117.0], [76.7, 3120.0], [76.8, 3120.0], [76.9, 3121.0], [77.0, 3121.0], [77.1, 3122.0], [77.2, 3122.0], [77.3, 3122.0], [77.4, 3122.0], [77.5, 3153.0], [77.6, 3174.0], [77.7, 3176.0], [77.8, 3176.0], [77.9, 3188.0], [78.0, 3190.0], [78.1, 3191.0], [78.2, 3195.0], [78.3, 3196.0], [78.4, 3199.0], [78.5, 3200.0], [78.6, 3202.0], [78.7, 3205.0], [78.8, 3207.0], [78.9, 3211.0], [79.0, 3212.0], [79.1, 3214.0], [79.2, 3217.0], [79.3, 3217.0], [79.4, 3221.0], [79.5, 3222.0], [79.6, 3229.0], [79.7, 3229.0], [79.8, 3231.0], [79.9, 3235.0], [80.0, 3235.0], [80.1, 3235.0], [80.2, 3237.0], [80.3, 3239.0], [80.4, 3241.0], [80.5, 3243.0], [80.6, 3245.0], [80.7, 3251.0], [80.8, 3253.0], [80.9, 3258.0], [81.0, 3259.0], [81.1, 3261.0], [81.2, 3264.0], [81.3, 3266.0], [81.4, 3270.0], [81.5, 3271.0], [81.6, 3275.0], [81.7, 3277.0], [81.8, 3277.0], [81.9, 3278.0], [82.0, 3278.0], [82.1, 3280.0], [82.2, 3282.0], [82.3, 3284.0], [82.4, 3290.0], [82.5, 3291.0], [82.6, 3293.0], [82.7, 3294.0], [82.8, 3294.0], [82.9, 3294.0], [83.0, 3297.0], [83.1, 3297.0], [83.2, 3299.0], [83.3, 3302.0], [83.4, 3303.0], [83.5, 3304.0], [83.6, 3325.0], [83.7, 3328.0], [83.8, 3329.0], [83.9, 3332.0], [84.0, 3335.0], [84.1, 3335.0], [84.2, 3337.0], [84.3, 3337.0], [84.4, 3338.0], [84.5, 3340.0], [84.6, 3341.0], [84.7, 3356.0], [84.8, 3358.0], [84.9, 3360.0], [85.0, 3365.0], [85.1, 3365.0], [85.2, 3366.0], [85.3, 3367.0], [85.4, 3367.0], [85.5, 3367.0], [85.6, 3367.0], [85.7, 3368.0], [85.8, 3368.0], [85.9, 3368.0], [86.0, 3369.0], [86.1, 3372.0], [86.2, 3373.0], [86.3, 3374.0], [86.4, 3377.0], [86.5, 3378.0], [86.6, 3378.0], [86.7, 3378.0], [86.8, 3379.0], [86.9, 3379.0], [87.0, 3382.0], [87.1, 3382.0], [87.2, 3386.0], [87.3, 3387.0], [87.4, 3388.0], [87.5, 3397.0], [87.6, 3397.0], [87.7, 3398.0], [87.8, 3398.0], [87.9, 3398.0], [88.0, 3398.0], [88.1, 3406.0], [88.2, 3406.0], [88.3, 3406.0], [88.4, 3406.0], [88.5, 3416.0], [88.6, 3434.0], [88.7, 3448.0], [88.8, 3466.0], [88.9, 3535.0], [89.0, 3535.0], [89.1, 3550.0], [89.2, 3562.0], [89.3, 3563.0], [89.4, 3565.0], [89.5, 3576.0], [89.6, 3593.0], [89.7, 3593.0], [89.8, 3601.0], [89.9, 3601.0], [90.0, 3601.0], [90.1, 3608.0], [90.2, 3614.0], [90.3, 3618.0], [90.4, 3618.0], [90.5, 3620.0], [90.6, 3625.0], [90.7, 3632.0], [90.8, 3632.0], [90.9, 3633.0], [91.0, 3635.0], [91.1, 3637.0], [91.2, 3641.0], [91.3, 3642.0], [91.4, 3645.0], [91.5, 3645.0], [91.6, 3646.0], [91.7, 3650.0], [91.8, 3653.0], [91.9, 3656.0], [92.0, 3658.0], [92.1, 3659.0], [92.2, 3663.0], [92.3, 3665.0], [92.4, 3668.0], [92.5, 3675.0], [92.6, 3677.0], [92.7, 3677.0], [92.8, 3679.0], [92.9, 3684.0], [93.0, 3694.0], [93.1, 3696.0], [93.2, 3700.0], [93.3, 3702.0], [93.4, 3703.0], [93.5, 3704.0], [93.6, 3708.0], [93.7, 3712.0], [93.8, 3714.0], [93.9, 3715.0], [94.0, 3719.0], [94.1, 3721.0], [94.2, 3724.0], [94.3, 3726.0], [94.4, 3727.0], [94.5, 3729.0], [94.6, 3735.0], [94.7, 3749.0], [94.8, 3750.0], [94.9, 3754.0], [95.0, 3757.0], [95.1, 3757.0], [95.2, 3759.0], [95.3, 3760.0], [95.4, 3765.0], [95.5, 3766.0], [95.6, 3767.0], [95.7, 3773.0], [95.8, 3775.0], [95.9, 3777.0], [96.0, 3778.0], [96.1, 3781.0], [96.2, 3785.0], [96.3, 3786.0], [96.4, 3787.0], [96.5, 3792.0], [96.6, 3792.0], [96.7, 3793.0], [96.8, 3794.0], [96.9, 3794.0], [97.0, 3807.0], [97.1, 3808.0], [97.2, 3808.0], [97.3, 3810.0], [97.4, 3815.0], [97.5, 3817.0], [97.6, 3817.0], [97.7, 3818.0], [97.8, 3823.0], [97.9, 3824.0], [98.0, 3824.0], [98.1, 3836.0], [98.2, 3840.0], [98.3, 3842.0], [98.4, 3844.0], [98.5, 3845.0], [98.6, 3849.0], [98.7, 3851.0], [98.8, 3851.0], [98.9, 3852.0], [99.0, 3853.0], [99.1, 3854.0], [99.2, 3863.0], [99.3, 3867.0], [99.4, 3868.0], [99.5, 3868.0], [99.6, 3868.0], [99.7, 3871.0], [99.8, 3877.0], [99.9, 3879.0]], "isOverall": false, "label": "JoinServer", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 17736.0, "series": [{"data": [[600.0, 10.0], [1100.0, 600.0], [1200.0, 144.0], [1300.0, 7.0], [1400.0, 14.0], [1500.0, 8.0], [100.0, 17736.0], [1600.0, 1.0], [2100.0, 1.0], [2800.0, 45.0], [2900.0, 25.0], [3000.0, 22.0], [3100.0, 44.0], [3300.0, 19.0], [3200.0, 8.0], [200.0, 494.0], [3400.0, 15.0], [3500.0, 6.0], [3600.0, 4.0], [3700.0, 12.0], [3800.0, 10.0], [3900.0, 12.0], [300.0, 213.0], [400.0, 119.0], [7100.0, 1.0], [7400.0, 1.0], [500.0, 429.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[2600.0, 26.0], [2800.0, 27.0], [2700.0, 29.0], [2900.0, 26.0], [3000.0, 17.0], [3100.0, 20.0], [3200.0, 16.0], [3300.0, 2.0], [3400.0, 11.0], [3500.0, 16.0], [3600.0, 10.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[2600.0, 25.0], [2700.0, 203.0], [2800.0, 131.0], [2900.0, 162.0], [3000.0, 238.0], [3100.0, 26.0], [3200.0, 48.0], [3300.0, 48.0], [3400.0, 8.0], [3500.0, 9.0], [3600.0, 34.0], [3700.0, 38.0], [3800.0, 30.0]], "isOverall": false, "label": "JoinServer", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2199.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 19001.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 19001.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 2199.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 108.09500000000006, "minX": 1.61631978E12, "maxY": 526.7880000000004, "series": [{"data": [[1.61631984E12, 185.7988954741388], [1.61631978E12, 200.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61631978E12, 108.09500000000006]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61631978E12, 526.7880000000004]], "isOverall": false, "label": "JoinServer", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61631984E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 134.0, "minX": 1.0, "maxY": 3873.5, "series": [{"data": [[2.0, 139.5], [3.0, 140.39285714285717], [4.0, 138.2], [5.0, 138.69230769230768], [6.0, 138.66666666666666], [7.0, 138.8], [8.0, 137.75], [9.0, 137.0], [10.0, 138.68421052631578], [11.0, 138.0], [12.0, 1014.8750000000001], [13.0, 220.75], [15.0, 138.0], [17.0, 137.66666666666666], [18.0, 320.2272727272727], [19.0, 137.0], [20.0, 136.66666666666669], [21.0, 136.66666666666666], [22.0, 136.0], [23.0, 136.0], [24.0, 512.5], [25.0, 135.0], [26.0, 135.0], [27.0, 135.0], [28.0, 351.35714285714283], [29.0, 135.0], [30.0, 136.0], [31.0, 135.0], [33.0, 136.41666666666669], [32.0, 136.0], [35.0, 810.3333333333333], [34.0, 137.5], [37.0, 261.75], [36.0, 136.4], [39.0, 135.0], [38.0, 135.875], [41.0, 137.0], [40.0, 135.0], [42.0, 136.0], [44.0, 136.0], [47.0, 136.13636363636365], [49.0, 136.0], [48.0, 136.0], [53.0, 135.25], [52.0, 221.76923076923077], [55.0, 135.25], [56.0, 136.0], [59.0, 135.5], [58.0, 135.0], [60.0, 135.14285714285714], [63.0, 237.7], [62.0, 237.9], [66.0, 137.0], [65.0, 136.0], [70.0, 160.41025641025644], [69.0, 134.54545454545453], [68.0, 159.95238095238096], [75.0, 378.16], [73.0, 135.0], [72.0, 135.0], [79.0, 135.83333333333331], [78.0, 136.0], [77.0, 301.00000000000006], [76.0, 186.24999999999997], [83.0, 135.79999999999998], [82.0, 250.3555555555555], [81.0, 137.0], [80.0, 136.0], [87.0, 248.62962962962965], [86.0, 198.26315789473688], [85.0, 136.0], [84.0, 135.58823529411768], [90.0, 135.0], [89.0, 135.0], [88.0, 328.0], [95.0, 139.63636363636363], [93.0, 183.66666666666666], [92.0, 135.0], [98.0, 136.5], [103.0, 137.0], [102.0, 475.0], [101.0, 337.6], [100.0, 339.0], [107.0, 137.21052631578948], [104.0, 138.42105263157896], [111.0, 155.57142857142856], [110.0, 167.0], [109.0, 156.0], [115.0, 151.0], [114.0, 151.0], [113.0, 139.0909090909091], [112.0, 543.0], [119.0, 374.18518518518516], [118.0, 138.55555555555554], [117.0, 135.33333333333334], [116.0, 142.57142857142858], [122.0, 425.3037974683545], [121.0, 178.53846153846152], [120.0, 174.22222222222223], [127.0, 280.0], [126.0, 416.375], [125.0, 279.5], [124.0, 535.75], [135.0, 210.20000000000002], [134.0, 149.0], [133.0, 144.0], [131.0, 188.85714285714286], [130.0, 296.29629629629636], [128.0, 293.0], [140.0, 160.84], [139.0, 141.72727272727272], [138.0, 142.125], [137.0, 138.5], [136.0, 142.25], [151.0, 144.0], [149.0, 150.1875], [148.0, 151.6], [147.0, 152.84615384615384], [146.0, 153.0], [145.0, 153.0], [144.0, 155.28571428571428], [159.0, 657.8055555555555], [158.0, 563.3877551020407], [157.0, 557.7857142857142], [154.0, 734.551724137931], [153.0, 327.1818181818182], [152.0, 150.42105263157896], [167.0, 141.9411764705882], [166.0, 146.21052631578948], [165.0, 142.14705882352942], [164.0, 153.33333333333334], [163.0, 173.530303030303], [161.0, 416.0344827586207], [175.0, 268.79999999999995], [174.0, 136.0], [173.0, 135.90624999999997], [171.0, 170.49999999999997], [169.0, 166.36923076923077], [168.0, 183.13636363636363], [182.0, 149.0], [181.0, 149.0], [180.0, 139.45454545454547], [179.0, 136.64705882352945], [178.0, 141.5], [177.0, 134.0], [176.0, 136.0], [191.0, 199.50769230769237], [188.0, 167.84042553191486], [187.0, 139.56521739130432], [186.0, 145.67716535433064], [185.0, 136.14285714285714], [184.0, 145.25], [199.0, 184.34090909090912], [198.0, 153.44444444444443], [197.0, 138.2], [196.0, 197.4382978723404], [195.0, 151.49999999999997], [194.0, 144.00000000000003], [193.0, 210.70270270270274], [192.0, 236.1750000000001], [200.0, 216.83096203911086], [212.0, 3389.4999999999995], [225.0, 3269.5555555555557], [255.0, 2985.0], [253.0, 3141.7857142857147], [265.0, 2855.1428571428573], [257.0, 2850.5], [256.0, 2955.8732394366198], [260.0, 2865.0], [304.0, 2896.833333333333], [1.0, 140.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[189.82084999999984, 236.70800000000048]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[1212.0, 3344.0], [1215.0, 3572.0], [1214.0, 2833.0], [1213.0, 3555.0], [1211.0, 3352.0], [1210.0, 2853.0], [1209.0, 3318.0], [1208.0, 2789.0], [1205.0, 2959.0], [1204.0, 2815.0], [1203.0, 2682.0], [1202.0, 2707.0], [1172.0, 3221.0], [1156.0, 3269.0], [1167.0, 3532.0], [1272.0, 3109.0], [1279.0, 2951.0], [1252.0, 3265.0], [1248.0, 2981.0], [1255.0, 3139.5], [1253.0, 3268.5], [1258.0, 2702.0], [1257.0, 2998.0], [1275.0, 3064.25], [1273.0, 3102.5], [1270.0, 3185.0], [1269.0, 2841.0], [1268.0, 2716.0], [1266.0, 2943.0], [1247.0, 2692.0], [1216.0, 2963.0], [1222.0, 3036.6], [1219.0, 3496.0], [1218.0, 3011.5], [1224.0, 2724.0], [1223.0, 3245.0], [1228.0, 2680.0], [1225.0, 3002.0], [1230.0, 2760.0], [1229.0, 2935.0], [1246.0, 2705.0], [1245.0, 2907.0], [1243.0, 2683.0], [1241.0, 3152.0], [1240.0, 2765.0], [1235.0, 3358.5], [1233.0, 2781.5], [1232.0, 3275.0], [1262.0, 2996.0], [1259.0, 3189.0], [1318.0, 3051.1666666666665], [1340.0, 2966.0], [1342.0, 3006.0], [1317.0, 2794.0], [1315.0, 2906.75], [1338.0, 2944.0], [1334.0, 3050.5], [1329.0, 3243.5], [1295.0, 2693.0], [1284.0, 2744.0], [1281.0, 3360.5], [1309.0, 3027.3181818181815], [1306.0, 3475.0], [1298.0, 2678.0], [1327.0, 2800.0], [1326.0, 2809.6666666666665], [1323.0, 3333.4], [1381.0, 2858.0], [1400.0, 3086.0666666666666], [1399.0, 2636.0], [1394.0, 3546.0], [1392.0, 2813.5], [1389.0, 2774.0], [1388.0, 2952.5], [1386.0, 2890.0], [1378.0, 3188.0], [1374.0, 2977.0], [1345.0, 2770.5], [1357.0, 3242.5], [1354.0, 2723.0], [1370.0, 3193.0], [1369.0, 3589.0], [1365.0, 2665.5], [1364.0, 2957.0], [1361.0, 3214.5]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1302.7649999999999, 3035.5750000000003]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[204.0, 3873.5], [213.0, 3852.0], [212.0, 3846.75], [221.0, 3826.5], [219.0, 3842.0], [218.0, 3860.0], [217.0, 3863.0], [228.0, 3797.0], [225.0, 3814.75], [238.0, 3790.4], [233.0, 3800.6], [246.0, 3758.5], [244.0, 3778.3333333333335], [242.0, 3773.0], [240.0, 3787.5], [255.0, 3712.0], [254.0, 3749.0], [253.0, 3755.5], [251.0, 3764.25], [249.0, 3735.0], [270.0, 3714.6], [265.0, 3701.0], [263.0, 3729.0], [261.0, 3707.5], [256.0, 3726.0], [286.0, 3621.5], [284.0, 3626.25], [283.0, 3653.0], [282.0, 3649.0], [278.0, 3676.6], [300.0, 3402.0], [298.0, 3488.6], [297.0, 3406.0], [296.0, 3411.0], [295.0, 3406.0], [289.0, 3532.6666666666665], [314.0, 3612.5], [312.0, 3650.0], [311.0, 3645.0], [310.0, 3645.5], [308.0, 3642.0], [307.0, 3646.0], [306.0, 3666.5], [304.0, 3472.0], [334.0, 3461.5], [332.0, 3506.5], [330.0, 3592.0], [328.0, 3597.0], [326.0, 3620.0], [325.0, 3396.7000000000003], [323.0, 3466.0], [347.0, 3367.0], [345.0, 3368.0], [342.0, 3367.0], [341.0, 3369.0], [340.0, 3374.0], [337.0, 3378.0], [336.0, 3382.5], [367.0, 3300.5], [365.0, 3315.0], [362.0, 3332.0], [360.0, 3332.0], [359.0, 3350.3333333333335], [356.0, 3367.0], [355.0, 3365.0], [354.0, 3343.714285714286], [381.0, 3264.571428571429], [374.0, 3287.8571428571427], [399.0, 3240.3333333333335], [398.0, 3237.0], [395.0, 3243.6666666666665], [392.0, 3243.0], [390.0, 3253.0], [389.0, 3271.0], [388.0, 3278.0], [386.0, 3285.0], [384.0, 3293.6666666666665], [415.0, 3212.0], [405.0, 3230.3333333333335], [403.0, 3225.6666666666665], [429.0, 3131.0], [428.0, 3176.0], [427.0, 3091.0], [426.0, 3205.0], [425.0, 3222.0], [421.0, 3214.0], [445.0, 3090.0], [447.0, 3169.5], [444.0, 3121.5], [434.0, 3154.0], [433.0, 3129.75], [432.0, 3107.0], [443.0, 3102.5], [442.0, 3176.0], [441.0, 3109.0], [440.0, 3108.0], [439.0, 3207.0], [437.0, 3089.0], [461.0, 3085.0], [463.0, 3085.0], [460.0, 3085.0], [451.0, 3137.5], [448.0, 3171.5], [459.0, 3083.0], [457.0, 3137.0], [455.0, 3082.6666666666665], [454.0, 3186.0], [453.0, 3082.0], [452.0, 3082.0], [467.0, 3084.6666666666665], [479.0, 3087.0], [477.0, 3085.6666666666665], [476.0, 3084.0], [475.0, 3085.0], [470.0, 3085.0], [469.0, 3086.0], [466.0, 3084.5], [465.0, 3084.0], [464.0, 3084.0], [494.0, 3117.0], [486.0, 3095.0], [481.0, 3095.285714285714], [480.0, 3086.0], [510.0, 3075.0], [509.0, 3076.0], [508.0, 3079.0], [507.0, 3077.6666666666665], [504.0, 3080.0], [502.0, 3112.3333333333335], [499.0, 3084.0], [498.0, 3079.4545454545455], [542.0, 3060.0], [543.0, 3076.0], [541.0, 3070.3333333333335], [539.0, 3076.0], [537.0, 3076.0], [536.0, 3077.0], [524.0, 3078.5], [514.0, 3079.0], [513.0, 3077.0], [516.0, 3076.0], [515.0, 3076.0], [518.0, 3077.0], [517.0, 3078.0], [522.0, 3077.0], [521.0, 3078.0], [520.0, 3078.0], [535.0, 3076.3333333333335], [532.0, 3076.0], [531.0, 3076.0], [530.0, 3074.666666666667], [549.0, 3078.0], [575.0, 3063.5], [573.0, 3043.0], [560.0, 3078.0], [555.0, 3078.0], [554.0, 3060.6666666666665], [553.0, 3078.0], [548.0, 3066.5], [546.0, 3038.0], [545.0, 3060.0], [605.0, 3009.6666666666665], [607.0, 3002.0], [604.0, 2983.0], [603.0, 3007.75], [600.0, 3066.0], [583.0, 3044.0], [582.0, 3047.25], [579.0, 3054.0], [578.0, 3068.3333333333335], [577.0, 3052.3333333333335], [589.0, 3038.0], [587.0, 3078.0], [599.0, 3062.0], [597.0, 3064.0], [596.0, 3059.25], [593.0, 3037.6666666666665], [633.0, 3042.0], [636.0, 3062.0], [638.0, 3049.0], [635.0, 3040.0], [632.0, 3043.0], [613.0, 3039.0], [612.0, 3049.0], [611.0, 3025.5714285714284], [610.0, 3023.6666666666665], [608.0, 3022.0], [631.0, 3022.8571428571427], [630.0, 3026.0], [622.0, 3048.0], [621.0, 3039.0], [620.0, 3041.0], [618.0, 3077.0], [616.0, 3077.0], [670.0, 2992.5], [671.0, 3010.0], [668.0, 3008.0], [667.0, 2986.5], [664.0, 3006.6666666666665], [647.0, 3034.0], [645.0, 3043.6666666666665], [644.0, 3059.0], [641.0, 3050.0], [640.0, 3030.5], [655.0, 3031.5], [653.0, 3060.0], [652.0, 3009.0], [649.0, 3005.0], [648.0, 3055.0], [661.0, 3007.0], [659.0, 3002.0], [657.0, 3003.0], [656.0, 2999.0], [701.0, 2956.5], [702.0, 2953.0], [700.0, 2950.0], [699.0, 2940.0], [697.0, 2952.0], [676.0, 3016.0], [675.0, 3014.0], [673.0, 2962.0], [672.0, 3011.0], [694.0, 2949.4], [693.0, 2950.0], [692.0, 2948.0], [687.0, 2986.75], [686.0, 3019.0], [682.0, 3022.0], [681.0, 3014.5], [723.0, 2961.0], [731.0, 2964.0], [735.0, 2964.0], [722.0, 2958.0], [721.0, 2934.0], [730.0, 2963.5], [729.0, 2964.0], [728.0, 2964.0], [711.0, 2953.0], [710.0, 2956.0], [708.0, 2957.0], [707.0, 2955.0], [706.0, 2953.5], [718.0, 2956.0], [716.0, 2960.0], [712.0, 2955.0], [726.0, 2934.0], [725.0, 2961.3333333333335], [724.0, 2958.0], [762.0, 2963.0], [763.0, 2972.6], [761.0, 2979.0], [760.0, 2951.0], [759.0, 2929.0], [757.0, 2963.0], [754.0, 2963.0], [753.0, 2951.3333333333335], [747.0, 2962.0], [739.0, 2964.0], [737.0, 2952.3333333333335], [741.0, 2964.0], [740.0, 2964.2], [746.0, 2963.0], [744.0, 2962.0], [800.0, 2962.0], [848.0, 2918.0], [861.0, 2922.0], [839.0, 2979.0], [836.0, 2979.0], [835.0, 2979.0], [854.0, 2978.0], [850.0, 2941.3333333333335], [849.0, 2960.0], [847.0, 2921.0], [846.0, 2921.0], [844.0, 2979.0], [843.0, 2922.0], [842.0, 2958.6666666666665], [840.0, 2921.0], [866.0, 2930.0], [914.0, 2931.5], [922.0, 2932.5], [921.0, 2933.0], [920.0, 2933.0], [903.0, 2925.6666666666665], [919.0, 2894.0], [916.0, 2909.3333333333335], [915.0, 2930.0], [913.0, 2918.5], [911.0, 2927.0], [910.0, 2926.0], [909.0, 2916.0], [907.0, 2922.0], [904.0, 2905.0], [959.0, 2895.0], [958.0, 2895.0], [957.0, 2905.0], [956.0, 2897.6666666666665], [955.0, 2923.3333333333335], [954.0, 2934.0], [932.0, 2900.0], [987.0, 2869.0], [991.0, 2817.5], [990.0, 2776.0], [989.0, 2781.0], [986.0, 2799.0], [985.0, 2868.0], [983.0, 2869.8833333333337], [970.0, 2902.0], [960.0, 2934.0], [964.0, 2900.0], [963.0, 2897.0], [966.0, 2898.4], [965.0, 2898.0], [1017.0, 2842.0], [1022.0, 2807.0], [1023.0, 2805.0], [1020.0, 2789.666666666667], [1019.0, 2847.0], [1018.0, 2817.6666666666665], [1016.0, 2852.0], [999.0, 2797.0], [998.0, 2846.3333333333335], [997.0, 2813.8], [996.0, 2797.6666666666665], [994.0, 2777.5], [993.0, 2872.3333333333335], [992.0, 2814.3333333333335], [1007.0, 2855.0], [1004.0, 2853.0], [1003.0, 2853.0], [1002.0, 2855.0], [1001.0, 2760.0], [1000.0, 2758.0], [1015.0, 2829.0], [1014.0, 2757.0], [1011.0, 2838.3333333333335], [1012.0, 2793.25], [1009.0, 2837.8571428571427], [1075.0, 2876.0], [1061.0, 2795.5], [1081.0, 2755.0], [1087.0, 2758.0], [1057.0, 2835.0], [1058.0, 2795.0], [1056.0, 2795.0], [1060.0, 2794.3333333333335], [1059.0, 2795.3333333333335], [1062.0, 2794.0], [1065.0, 2821.3333333333335], [1063.0, 2790.6666666666665], [1068.0, 2783.0], [1066.0, 2776.0], [1070.0, 2774.0], [1069.0, 2792.0], [1085.0, 2762.0], [1084.0, 2759.3333333333335], [1080.0, 2762.0], [1077.0, 2832.1], [1076.0, 2784.0], [1074.0, 2807.4], [1073.0, 2786.0], [1072.0, 2825.2], [1039.0, 2798.0], [1038.0, 2800.2], [1037.0, 2799.0], [1036.0, 2804.0], [1035.0, 2786.5], [1034.0, 2804.0], [1033.0, 2804.0], [1032.0, 2802.0], [1031.0, 2804.5], [1030.0, 2804.6666666666665], [1029.0, 2804.6666666666665], [1027.0, 2804.0], [1026.0, 2805.0], [1025.0, 2765.0], [1024.0, 2805.0], [1055.0, 2874.3333333333335], [1054.0, 2790.0], [1052.0, 2879.0], [1051.0, 2854.25], [1050.0, 2796.0], [1049.0, 2796.0], [1048.0, 2797.0], [1047.0, 2796.0], [1046.0, 2796.0], [1045.0, 2796.0], [1044.0, 2796.6], [1043.0, 2797.0], [1042.0, 2819.0], [1040.0, 2797.5], [1142.0, 2694.0], [1150.0, 2728.0], [1123.0, 2713.1666666666665], [1128.0, 2716.25], [1127.0, 2705.0], [1133.0, 2720.0], [1131.0, 2710.3333333333335], [1149.0, 2727.0], [1143.0, 2722.0], [1140.0, 2722.0], [1139.0, 2722.0], [1138.0, 2728.0], [1136.0, 2720.0], [1119.0, 2716.0], [1090.0, 2767.0], [1088.0, 2761.0], [1097.0, 2761.0], [1094.0, 2753.6666666666665], [1100.0, 2769.0], [1098.0, 2742.0], [1102.0, 2767.0], [1101.0, 2771.0], [1118.0, 2712.0], [1116.0, 2744.0], [1110.0, 2741.5], [1104.0, 2767.6666666666665], [1135.0, 2724.0], [1134.0, 2720.0], [1183.0, 2732.0], [1192.0, 2688.6666666666665], [1189.0, 2692.4], [1184.0, 2721.8333333333335], [1178.0, 2734.0], [1177.0, 2735.0], [1176.0, 2713.5], [1172.0, 2693.0], [1170.0, 2718.3333333333335], [1167.0, 2728.6], [1166.0, 2727.0], [1165.0, 2726.0], [1163.0, 2701.0], [1162.0, 2724.0], [1156.0, 2727.3333333333335], [1153.0, 2729.0], [1152.0, 2718.5], [1243.0, 2690.0], [1240.0, 2688.5], [1239.0, 2687.0], [1233.0, 2688.0], [1232.0, 2692.0], [1343.0, 2655.0], [1339.0, 2659.0], [1334.0, 3632.0], [1400.0, 2650.0]], "isOverall": false, "label": "JoinServer", "isController": false}, {"data": [[727.9070000000003, 3045.938999999999]], "isOverall": false, "label": "JoinServer-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61631978E12, "maxY": 4.9E-324, "series": [{"data": [[1.61631984E12, 0.0], [1.61631978E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61631984E12, 0.0], [1.61631978E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61631984E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 205.83452316810252, "minX": 1.61631978E12, "maxY": 3045.938999999999, "series": [{"data": [[1.61631984E12, 205.83452316810252], [1.61631978E12, 325.6849767080749]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61631978E12, 3035.5750000000003]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61631978E12, 3045.938999999999]], "isOverall": false, "label": "JoinServer", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61631984E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61631978E12, "maxY": 4.9E-324, "series": [{"data": [[1.61631984E12, 0.0], [1.61631978E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61631978E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61631978E12, 0.0]], "isOverall": false, "label": "JoinServer", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61631984E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61631978E12, "maxY": 4.9E-324, "series": [{"data": [[1.61631984E12, 0.0], [1.61631978E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61631978E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61631978E12, 0.0]], "isOverall": false, "label": "JoinServer", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61631984E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 134.0, "minX": 1.61631978E12, "maxY": 7419.0, "series": [{"data": [[1.61631984E12, 7419.0], [1.61631978E12, 3981.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61631984E12, 185.0], [1.61631978E12, 3024.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61631984E12, 1223.6100000000024], [1.61631978E12, 3781.4700000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61631984E12, 569.0], [1.61631978E12, 3258.3499999999995]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61631984E12, 134.0], [1.61631978E12, 135.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61631984E12, 139.0], [1.61631978E12, 167.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61631984E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 135.0, "minX": 2.0, "maxY": 3001.0, "series": [{"data": [[543.0, 140.0], [537.0, 141.0], [2.0, 141.0], [548.0, 151.0], [561.0, 152.0], [657.0, 136.0], [758.0, 151.5], [47.0, 139.0], [780.0, 153.0], [854.0, 141.0], [943.0, 153.0], [1000.0, 167.0], [1070.0, 139.0], [1065.0, 152.0], [1122.0, 169.0], [1098.0, 139.0], [1120.0, 135.0], [1156.0, 138.0], [1160.0, 135.0], [1266.0, 152.0], [1225.0, 139.0], [1400.0, 3001.0], [1344.0, 152.0], [119.0, 137.0], [13.0, 140.0], [319.0, 136.0], [21.0, 139.0], [472.0, 136.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1400.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 4.9E-324, "series": [{"data": [[543.0, 0.0], [537.0, 0.0], [2.0, 0.0], [548.0, 0.0], [561.0, 0.0], [657.0, 0.0], [758.0, 0.0], [47.0, 0.0], [780.0, 0.0], [854.0, 0.0], [943.0, 0.0], [1000.0, 0.0], [1070.0, 0.0], [1065.0, 0.0], [1122.0, 0.0], [1098.0, 0.0], [1120.0, 0.0], [1156.0, 0.0], [1160.0, 0.0], [1266.0, 0.0], [1225.0, 0.0], [1400.0, 0.0], [1344.0, 0.0], [119.0, 0.0], [13.0, 0.0], [319.0, 0.0], [21.0, 0.0], [472.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1400.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 109.2, "minX": 1.61631978E12, "maxY": 244.13333333333333, "series": [{"data": [[1.61631984E12, 244.13333333333333], [1.61631978E12, 109.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61631984E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 105.86666666666666, "minX": 1.61631978E12, "maxY": 247.46666666666667, "series": [{"data": [[1.61631984E12, 247.46666666666667], [1.61631978E12, 105.86666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61631984E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.61631978E12, "maxY": 247.46666666666667, "series": [{"data": [[1.61631978E12, 3.3333333333333335]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61631978E12, 16.666666666666668]], "isOverall": false, "label": "JoinServer-success", "isController": false}, {"data": [[1.61631984E12, 247.46666666666667], [1.61631978E12, 85.86666666666666]], "isOverall": false, "label": "JoinRoom-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61631984E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 105.86666666666666, "minX": 1.61631978E12, "maxY": 247.46666666666667, "series": [{"data": [[1.61631984E12, 247.46666666666667], [1.61631978E12, 105.86666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61631984E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

