/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 61115.0, "series": [{"data": [[0.0, 60027.0], [0.1, 60027.0], [0.2, 60027.0], [0.3, 60027.0], [0.4, 60027.0], [0.5, 60027.0], [0.6, 60027.0], [0.7, 60027.0], [0.8, 60027.0], [0.9, 60027.0], [1.0, 60027.0], [1.1, 60027.0], [1.2, 60027.0], [1.3, 60027.0], [1.4, 60027.0], [1.5, 60027.0], [1.6, 60027.0], [1.7, 60027.0], [1.8, 60027.0], [1.9, 60027.0], [2.0, 60027.0], [2.1, 60027.0], [2.2, 60027.0], [2.3, 60027.0], [2.4, 60027.0], [2.5, 60027.0], [2.6, 60027.0], [2.7, 60027.0], [2.8, 60027.0], [2.9, 60027.0], [3.0, 60027.0], [3.1, 60027.0], [3.2, 60027.0], [3.3, 60027.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60028.0], [5.0, 60028.0], [5.1, 60028.0], [5.2, 60028.0], [5.3, 60028.0], [5.4, 60028.0], [5.5, 60028.0], [5.6, 60028.0], [5.7, 60028.0], [5.8, 60028.0], [5.9, 60028.0], [6.0, 60028.0], [6.1, 60028.0], [6.2, 60028.0], [6.3, 60028.0], [6.4, 60028.0], [6.5, 60028.0], [6.6, 60028.0], [6.7, 60028.0], [6.8, 60028.0], [6.9, 60028.0], [7.0, 60028.0], [7.1, 60028.0], [7.2, 60028.0], [7.3, 60028.0], [7.4, 60028.0], [7.5, 60028.0], [7.6, 60028.0], [7.7, 60028.0], [7.8, 60028.0], [7.9, 60028.0], [8.0, 60028.0], [8.1, 60028.0], [8.2, 60028.0], [8.3, 60028.0], [8.4, 60028.0], [8.5, 60028.0], [8.6, 60028.0], [8.7, 60028.0], [8.8, 60028.0], [8.9, 60028.0], [9.0, 60028.0], [9.1, 60028.0], [9.2, 60028.0], [9.3, 60028.0], [9.4, 60028.0], [9.5, 60028.0], [9.6, 60028.0], [9.7, 60028.0], [9.8, 60028.0], [9.9, 60028.0], [10.0, 60028.0], [10.1, 60028.0], [10.2, 60028.0], [10.3, 60028.0], [10.4, 60028.0], [10.5, 60028.0], [10.6, 60028.0], [10.7, 60028.0], [10.8, 60028.0], [10.9, 60028.0], [11.0, 60028.0], [11.1, 60028.0], [11.2, 60028.0], [11.3, 60028.0], [11.4, 60028.0], [11.5, 60028.0], [11.6, 60028.0], [11.7, 60028.0], [11.8, 60028.0], [11.9, 60028.0], [12.0, 60028.0], [12.1, 60028.0], [12.2, 60028.0], [12.3, 60028.0], [12.4, 60028.0], [12.5, 60028.0], [12.6, 60028.0], [12.7, 60028.0], [12.8, 60028.0], [12.9, 60028.0], [13.0, 60028.0], [13.1, 60028.0], [13.2, 60028.0], [13.3, 60028.0], [13.4, 60028.0], [13.5, 60028.0], [13.6, 60028.0], [13.7, 60028.0], [13.8, 60028.0], [13.9, 60028.0], [14.0, 60028.0], [14.1, 60028.0], [14.2, 60028.0], [14.3, 60028.0], [14.4, 60028.0], [14.5, 60028.0], [14.6, 60028.0], [14.7, 60028.0], [14.8, 60028.0], [14.9, 60028.0], [15.0, 60028.0], [15.1, 60028.0], [15.2, 60028.0], [15.3, 60028.0], [15.4, 60028.0], [15.5, 60028.0], [15.6, 60028.0], [15.7, 60028.0], [15.8, 60028.0], [15.9, 60028.0], [16.0, 60028.0], [16.1, 60028.0], [16.2, 60028.0], [16.3, 60028.0], [16.4, 60028.0], [16.5, 60028.0], [16.6, 60028.0], [16.7, 60028.0], [16.8, 60028.0], [16.9, 60028.0], [17.0, 60028.0], [17.1, 60028.0], [17.2, 60028.0], [17.3, 60028.0], [17.4, 60028.0], [17.5, 60028.0], [17.6, 60028.0], [17.7, 60028.0], [17.8, 60028.0], [17.9, 60028.0], [18.0, 60028.0], [18.1, 60028.0], [18.2, 60028.0], [18.3, 60028.0], [18.4, 60028.0], [18.5, 60028.0], [18.6, 60028.0], [18.7, 60028.0], [18.8, 60028.0], [18.9, 60028.0], [19.0, 60028.0], [19.1, 60028.0], [19.2, 60028.0], [19.3, 60028.0], [19.4, 60028.0], [19.5, 60028.0], [19.6, 60028.0], [19.7, 60028.0], [19.8, 60028.0], [19.9, 60028.0], [20.0, 60028.0], [20.1, 60028.0], [20.2, 60028.0], [20.3, 60028.0], [20.4, 60028.0], [20.5, 60028.0], [20.6, 60028.0], [20.7, 60028.0], [20.8, 60028.0], [20.9, 60028.0], [21.0, 60028.0], [21.1, 60028.0], [21.2, 60028.0], [21.3, 60028.0], [21.4, 60028.0], [21.5, 60028.0], [21.6, 60028.0], [21.7, 60028.0], [21.8, 60028.0], [21.9, 60028.0], [22.0, 60028.0], [22.1, 60028.0], [22.2, 60028.0], [22.3, 60028.0], [22.4, 60028.0], [22.5, 60028.0], [22.6, 60028.0], [22.7, 60028.0], [22.8, 60028.0], [22.9, 60028.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60029.0], [28.3, 60029.0], [28.4, 60029.0], [28.5, 60029.0], [28.6, 60029.0], [28.7, 60029.0], [28.8, 60029.0], [28.9, 60029.0], [29.0, 60029.0], [29.1, 60029.0], [29.2, 60029.0], [29.3, 60029.0], [29.4, 60029.0], [29.5, 60029.0], [29.6, 60029.0], [29.7, 60029.0], [29.8, 60029.0], [29.9, 60029.0], [30.0, 60029.0], [30.1, 60029.0], [30.2, 60029.0], [30.3, 60029.0], [30.4, 60029.0], [30.5, 60029.0], [30.6, 60029.0], [30.7, 60029.0], [30.8, 60029.0], [30.9, 60029.0], [31.0, 60029.0], [31.1, 60029.0], [31.2, 60029.0], [31.3, 60029.0], [31.4, 60029.0], [31.5, 60029.0], [31.6, 60029.0], [31.7, 60029.0], [31.8, 60029.0], [31.9, 60029.0], [32.0, 60029.0], [32.1, 60029.0], [32.2, 60029.0], [32.3, 60029.0], [32.4, 60029.0], [32.5, 60029.0], [32.6, 60029.0], [32.7, 60029.0], [32.8, 60029.0], [32.9, 60029.0], [33.0, 60029.0], [33.1, 60029.0], [33.2, 60029.0], [33.3, 60029.0], [33.4, 60029.0], [33.5, 60029.0], [33.6, 60029.0], [33.7, 60029.0], [33.8, 60029.0], [33.9, 60029.0], [34.0, 60029.0], [34.1, 60029.0], [34.2, 60029.0], [34.3, 60029.0], [34.4, 60029.0], [34.5, 60029.0], [34.6, 60029.0], [34.7, 60029.0], [34.8, 60029.0], [34.9, 60029.0], [35.0, 60029.0], [35.1, 60029.0], [35.2, 60029.0], [35.3, 60029.0], [35.4, 60029.0], [35.5, 60029.0], [35.6, 60029.0], [35.7, 60029.0], [35.8, 60029.0], [35.9, 60029.0], [36.0, 60029.0], [36.1, 60029.0], [36.2, 60029.0], [36.3, 60029.0], [36.4, 60029.0], [36.5, 60029.0], [36.6, 60029.0], [36.7, 60029.0], [36.8, 60029.0], [36.9, 60029.0], [37.0, 60029.0], [37.1, 60029.0], [37.2, 60029.0], [37.3, 60029.0], [37.4, 60029.0], [37.5, 60029.0], [37.6, 60029.0], [37.7, 60029.0], [37.8, 60029.0], [37.9, 60029.0], [38.0, 60029.0], [38.1, 60029.0], [38.2, 60029.0], [38.3, 60029.0], [38.4, 60029.0], [38.5, 60029.0], [38.6, 60029.0], [38.7, 60029.0], [38.8, 60029.0], [38.9, 60029.0], [39.0, 60029.0], [39.1, 60029.0], [39.2, 60029.0], [39.3, 60029.0], [39.4, 60029.0], [39.5, 60029.0], [39.6, 60029.0], [39.7, 60029.0], [39.8, 60029.0], [39.9, 60029.0], [40.0, 60029.0], [40.1, 60029.0], [40.2, 60029.0], [40.3, 60029.0], [40.4, 60029.0], [40.5, 60029.0], [40.6, 60029.0], [40.7, 60029.0], [40.8, 60029.0], [40.9, 60029.0], [41.0, 60029.0], [41.1, 60029.0], [41.2, 60029.0], [41.3, 60029.0], [41.4, 60029.0], [41.5, 60029.0], [41.6, 60029.0], [41.7, 60029.0], [41.8, 60029.0], [41.9, 60029.0], [42.0, 60029.0], [42.1, 60029.0], [42.2, 60029.0], [42.3, 60029.0], [42.4, 60029.0], [42.5, 60029.0], [42.6, 60029.0], [42.7, 60029.0], [42.8, 60029.0], [42.9, 60029.0], [43.0, 60029.0], [43.1, 60029.0], [43.2, 60030.0], [43.3, 60030.0], [43.4, 60030.0], [43.5, 60030.0], [43.6, 60030.0], [43.7, 60030.0], [43.8, 60030.0], [43.9, 60030.0], [44.0, 60030.0], [44.1, 60030.0], [44.2, 60030.0], [44.3, 60030.0], [44.4, 60030.0], [44.5, 60030.0], [44.6, 60030.0], [44.7, 60030.0], [44.8, 60030.0], [44.9, 60030.0], [45.0, 60030.0], [45.1, 60030.0], [45.2, 60030.0], [45.3, 60030.0], [45.4, 60030.0], [45.5, 60030.0], [45.6, 60030.0], [45.7, 60030.0], [45.8, 60030.0], [45.9, 60030.0], [46.0, 60030.0], [46.1, 60030.0], [46.2, 60030.0], [46.3, 60030.0], [46.4, 60030.0], [46.5, 60030.0], [46.6, 60030.0], [46.7, 60030.0], [46.8, 60030.0], [46.9, 60030.0], [47.0, 60030.0], [47.1, 60030.0], [47.2, 60030.0], [47.3, 60030.0], [47.4, 60030.0], [47.5, 60030.0], [47.6, 60030.0], [47.7, 60030.0], [47.8, 60030.0], [47.9, 60030.0], [48.0, 60030.0], [48.1, 60030.0], [48.2, 60030.0], [48.3, 60030.0], [48.4, 60030.0], [48.5, 60030.0], [48.6, 60030.0], [48.7, 60030.0], [48.8, 60030.0], [48.9, 60030.0], [49.0, 60030.0], [49.1, 60030.0], [49.2, 60030.0], [49.3, 60030.0], [49.4, 60030.0], [49.5, 60030.0], [49.6, 60030.0], [49.7, 60030.0], [49.8, 60030.0], [49.9, 60030.0], [50.0, 60030.0], [50.1, 60030.0], [50.2, 60030.0], [50.3, 60030.0], [50.4, 60030.0], [50.5, 60030.0], [50.6, 60030.0], [50.7, 60030.0], [50.8, 60030.0], [50.9, 60030.0], [51.0, 60030.0], [51.1, 60030.0], [51.2, 60030.0], [51.3, 60030.0], [51.4, 60030.0], [51.5, 60030.0], [51.6, 60030.0], [51.7, 60030.0], [51.8, 60030.0], [51.9, 60030.0], [52.0, 60030.0], [52.1, 60030.0], [52.2, 60030.0], [52.3, 60030.0], [52.4, 60030.0], [52.5, 60030.0], [52.6, 60030.0], [52.7, 60030.0], [52.8, 60030.0], [52.9, 60030.0], [53.0, 60030.0], [53.1, 60030.0], [53.2, 60030.0], [53.3, 60031.0], [53.4, 60031.0], [53.5, 60031.0], [53.6, 60031.0], [53.7, 60031.0], [53.8, 60031.0], [53.9, 60031.0], [54.0, 60031.0], [54.1, 60031.0], [54.2, 60031.0], [54.3, 60031.0], [54.4, 60031.0], [54.5, 60031.0], [54.6, 60031.0], [54.7, 60031.0], [54.8, 60031.0], [54.9, 60031.0], [55.0, 60031.0], [55.1, 60031.0], [55.2, 60031.0], [55.3, 60031.0], [55.4, 60031.0], [55.5, 60031.0], [55.6, 60031.0], [55.7, 60031.0], [55.8, 60031.0], [55.9, 60031.0], [56.0, 60031.0], [56.1, 60031.0], [56.2, 60031.0], [56.3, 60031.0], [56.4, 60031.0], [56.5, 60031.0], [56.6, 60031.0], [56.7, 60031.0], [56.8, 60031.0], [56.9, 60031.0], [57.0, 60031.0], [57.1, 60031.0], [57.2, 60031.0], [57.3, 60031.0], [57.4, 60031.0], [57.5, 60031.0], [57.6, 60031.0], [57.7, 60031.0], [57.8, 60031.0], [57.9, 60031.0], [58.0, 60031.0], [58.1, 60031.0], [58.2, 60031.0], [58.3, 60031.0], [58.4, 60031.0], [58.5, 60031.0], [58.6, 60031.0], [58.7, 60031.0], [58.8, 60031.0], [58.9, 60031.0], [59.0, 60031.0], [59.1, 60031.0], [59.2, 60031.0], [59.3, 60032.0], [59.4, 60032.0], [59.5, 60032.0], [59.6, 60032.0], [59.7, 60032.0], [59.8, 60032.0], [59.9, 60032.0], [60.0, 60032.0], [60.1, 60032.0], [60.2, 60032.0], [60.3, 60032.0], [60.4, 60032.0], [60.5, 60032.0], [60.6, 60032.0], [60.7, 60032.0], [60.8, 60032.0], [60.9, 60032.0], [61.0, 60032.0], [61.1, 60032.0], [61.2, 60032.0], [61.3, 60032.0], [61.4, 60032.0], [61.5, 60032.0], [61.6, 60032.0], [61.7, 60032.0], [61.8, 60032.0], [61.9, 60032.0], [62.0, 60032.0], [62.1, 60032.0], [62.2, 60032.0], [62.3, 60032.0], [62.4, 60032.0], [62.5, 60032.0], [62.6, 60032.0], [62.7, 60032.0], [62.8, 60032.0], [62.9, 60033.0], [63.0, 60033.0], [63.1, 60033.0], [63.2, 60033.0], [63.3, 60033.0], [63.4, 60033.0], [63.5, 60033.0], [63.6, 60033.0], [63.7, 60033.0], [63.8, 60033.0], [63.9, 60033.0], [64.0, 60033.0], [64.1, 60033.0], [64.2, 60033.0], [64.3, 60033.0], [64.4, 60033.0], [64.5, 60033.0], [64.6, 60033.0], [64.7, 60033.0], [64.8, 60033.0], [64.9, 60033.0], [65.0, 60033.0], [65.1, 60033.0], [65.2, 60033.0], [65.3, 60033.0], [65.4, 60033.0], [65.5, 60033.0], [65.6, 60033.0], [65.7, 60033.0], [65.8, 60033.0], [65.9, 60033.0], [66.0, 60033.0], [66.1, 60033.0], [66.2, 60034.0], [66.3, 60034.0], [66.4, 60034.0], [66.5, 60034.0], [66.6, 60034.0], [66.7, 60034.0], [66.8, 60034.0], [66.9, 60034.0], [67.0, 60034.0], [67.1, 60034.0], [67.2, 60034.0], [67.3, 60034.0], [67.4, 60034.0], [67.5, 60034.0], [67.6, 60034.0], [67.7, 60034.0], [67.8, 60034.0], [67.9, 60035.0], [68.0, 60035.0], [68.1, 60035.0], [68.2, 60035.0], [68.3, 60035.0], [68.4, 60035.0], [68.5, 60035.0], [68.6, 60035.0], [68.7, 60035.0], [68.8, 60035.0], [68.9, 60035.0], [69.0, 60035.0], [69.1, 60035.0], [69.2, 60035.0], [69.3, 60035.0], [69.4, 60035.0], [69.5, 60035.0], [69.6, 60035.0], [69.7, 60035.0], [69.8, 60035.0], [69.9, 60035.0], [70.0, 60035.0], [70.1, 60035.0], [70.2, 60036.0], [70.3, 60036.0], [70.4, 60036.0], [70.5, 60036.0], [70.6, 60036.0], [70.7, 60036.0], [70.8, 60036.0], [70.9, 60036.0], [71.0, 60036.0], [71.1, 60036.0], [71.2, 60036.0], [71.3, 60036.0], [71.4, 60036.0], [71.5, 60037.0], [71.6, 60037.0], [71.7, 60037.0], [71.8, 60037.0], [71.9, 60037.0], [72.0, 60037.0], [72.1, 60037.0], [72.2, 60037.0], [72.3, 60037.0], [72.4, 60037.0], [72.5, 60037.0], [72.6, 60037.0], [72.7, 60037.0], [72.8, 60037.0], [72.9, 60037.0], [73.0, 60037.0], [73.1, 60037.0], [73.2, 60037.0], [73.3, 60037.0], [73.4, 60037.0], [73.5, 60037.0], [73.6, 60037.0], [73.7, 60037.0], [73.8, 60037.0], [73.9, 60037.0], [74.0, 60038.0], [74.1, 60038.0], [74.2, 60038.0], [74.3, 60038.0], [74.4, 60038.0], [74.5, 60038.0], [74.6, 60038.0], [74.7, 60038.0], [74.8, 60038.0], [74.9, 60038.0], [75.0, 60038.0], [75.1, 60038.0], [75.2, 60038.0], [75.3, 60038.0], [75.4, 60038.0], [75.5, 60038.0], [75.6, 60038.0], [75.7, 60038.0], [75.8, 60038.0], [75.9, 60038.0], [76.0, 60038.0], [76.1, 60038.0], [76.2, 60039.0], [76.3, 60039.0], [76.4, 60039.0], [76.5, 60039.0], [76.6, 60039.0], [76.7, 60039.0], [76.8, 60039.0], [76.9, 60039.0], [77.0, 60039.0], [77.1, 60039.0], [77.2, 60039.0], [77.3, 60040.0], [77.4, 60040.0], [77.5, 60040.0], [77.6, 60040.0], [77.7, 60040.0], [77.8, 60040.0], [77.9, 60040.0], [78.0, 60040.0], [78.1, 60040.0], [78.2, 60040.0], [78.3, 60040.0], [78.4, 60040.0], [78.5, 60041.0], [78.6, 60041.0], [78.7, 60041.0], [78.8, 60041.0], [78.9, 60041.0], [79.0, 60041.0], [79.1, 60041.0], [79.2, 60041.0], [79.3, 60041.0], [79.4, 60041.0], [79.5, 60041.0], [79.6, 60042.0], [79.7, 60042.0], [79.8, 60042.0], [79.9, 60042.0], [80.0, 60042.0], [80.1, 60042.0], [80.2, 60042.0], [80.3, 60042.0], [80.4, 60042.0], [80.5, 60042.0], [80.6, 60042.0], [80.7, 60042.0], [80.8, 60043.0], [80.9, 60043.0], [81.0, 60043.0], [81.1, 60043.0], [81.2, 60043.0], [81.3, 60043.0], [81.4, 60043.0], [81.5, 60043.0], [81.6, 60044.0], [81.7, 60044.0], [81.8, 60044.0], [81.9, 60044.0], [82.0, 60044.0], [82.1, 60044.0], [82.2, 60044.0], [82.3, 60044.0], [82.4, 60044.0], [82.5, 60044.0], [82.6, 60044.0], [82.7, 60044.0], [82.8, 60044.0], [82.9, 60045.0], [83.0, 60045.0], [83.1, 60045.0], [83.2, 60045.0], [83.3, 60045.0], [83.4, 60045.0], [83.5, 60045.0], [83.6, 60045.0], [83.7, 60045.0], [83.8, 60046.0], [83.9, 60046.0], [84.0, 60047.0], [84.1, 60047.0], [84.2, 60047.0], [84.3, 60047.0], [84.4, 60047.0], [84.5, 60047.0], [84.6, 60047.0], [84.7, 60047.0], [84.8, 60047.0], [84.9, 60048.0], [85.0, 60048.0], [85.1, 60048.0], [85.2, 60049.0], [85.3, 60050.0], [85.4, 60050.0], [85.5, 60050.0], [85.6, 60050.0], [85.7, 60050.0], [85.8, 60050.0], [85.9, 60050.0], [86.0, 60051.0], [86.1, 60051.0], [86.2, 60051.0], [86.3, 60051.0], [86.4, 60051.0], [86.5, 60052.0], [86.6, 60052.0], [86.7, 60052.0], [86.8, 60053.0], [86.9, 60053.0], [87.0, 60053.0], [87.1, 60055.0], [87.2, 60055.0], [87.3, 60055.0], [87.4, 60055.0], [87.5, 60056.0], [87.6, 60057.0], [87.7, 60057.0], [87.8, 60059.0], [87.9, 60060.0], [88.0, 60061.0], [88.1, 60061.0], [88.2, 60061.0], [88.3, 60064.0], [88.4, 60064.0], [88.5, 60068.0], [88.6, 60070.0], [88.7, 60070.0], [88.8, 60070.0], [88.9, 60070.0], [89.0, 60071.0], [89.1, 60071.0], [89.2, 60071.0], [89.3, 60071.0], [89.4, 60071.0], [89.5, 60071.0], [89.6, 60073.0], [89.7, 60073.0], [89.8, 60074.0], [89.9, 60079.0], [90.0, 60079.0], [90.1, 60079.0], [90.2, 60080.0], [90.3, 60085.0], [90.4, 60085.0], [90.5, 60087.0], [90.6, 60087.0], [90.7, 60087.0], [90.8, 60088.0], [90.9, 60089.0], [91.0, 60089.0], [91.1, 60089.0], [91.2, 60091.0], [91.3, 60091.0], [91.4, 60091.0], [91.5, 60093.0], [91.6, 60093.0], [91.7, 60093.0], [91.8, 60093.0], [91.9, 60094.0], [92.0, 60094.0], [92.1, 60094.0], [92.2, 60095.0], [92.3, 60096.0], [92.4, 60096.0], [92.5, 60097.0], [92.6, 60101.0], [92.7, 60101.0], [92.8, 60101.0], [92.9, 60102.0], [93.0, 60102.0], [93.1, 60102.0], [93.2, 60104.0], [93.3, 60104.0], [93.4, 60104.0], [93.5, 60106.0], [93.6, 60106.0], [93.7, 60106.0], [93.8, 60108.0], [93.9, 60113.0], [94.0, 60113.0], [94.1, 60113.0], [94.2, 60115.0], [94.3, 60118.0], [94.4, 60118.0], [94.5, 61029.0], [94.6, 61031.0], [94.7, 61031.0], [94.8, 61032.0], [94.9, 61032.0], [95.0, 61032.0], [95.1, 61032.0], [95.2, 61032.0], [95.3, 61034.0], [95.4, 61034.0], [95.5, 61034.0], [95.6, 61035.0], [95.7, 61035.0], [95.8, 61035.0], [95.9, 61036.0], [96.0, 61036.0], [96.1, 61036.0], [96.2, 61037.0], [96.3, 61038.0], [96.4, 61038.0], [96.5, 61038.0], [96.6, 61039.0], [96.7, 61039.0], [96.8, 61039.0], [96.9, 61039.0], [97.0, 61039.0], [97.1, 61040.0], [97.2, 61040.0], [97.3, 61040.0], [97.4, 61040.0], [97.5, 61041.0], [97.6, 61041.0], [97.7, 61041.0], [97.8, 61041.0], [97.9, 61041.0], [98.0, 61041.0], [98.1, 61042.0], [98.2, 61042.0], [98.3, 61043.0], [98.4, 61043.0], [98.5, 61043.0], [98.6, 61044.0], [98.7, 61044.0], [98.8, 61044.0], [98.9, 61044.0], [99.0, 61044.0], [99.1, 61045.0], [99.2, 61045.0], [99.3, 61048.0], [99.4, 61048.0], [99.5, 61050.0], [99.6, 61071.0], [99.7, 61071.0], [99.8, 61114.0], [99.9, 61115.0], [100.0, 61115.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 28.0], [2.1, 28.0], [2.2, 28.0], [2.3, 28.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 29.0], [4.7, 29.0], [4.8, 29.0], [4.9, 29.0], [5.0, 29.0], [5.1, 29.0], [5.2, 29.0], [5.3, 29.0], [5.4, 29.0], [5.5, 29.0], [5.6, 29.0], [5.7, 29.0], [5.8, 30.0], [5.9, 30.0], [6.0, 30.0], [6.1, 30.0], [6.2, 30.0], [6.3, 30.0], [6.4, 31.0], [6.5, 31.0], [6.6, 31.0], [6.7, 31.0], [6.8, 31.0], [6.9, 32.0], [7.0, 32.0], [7.1, 33.0], [7.2, 33.0], [7.3, 33.0], [7.4, 34.0], [7.5, 35.0], [7.6, 36.0], [7.7, 36.0], [7.8, 38.0], [7.9, 38.0], [8.0, 40.0], [8.1, 41.0], [8.2, 42.0], [8.3, 44.0], [8.4, 45.0], [8.5, 46.0], [8.6, 48.0], [8.7, 49.0], [8.8, 50.0], [8.9, 52.0], [9.0, 54.0], [9.1, 56.0], [9.2, 59.0], [9.3, 63.0], [9.4, 65.0], [9.5, 67.0], [9.6, 73.0], [9.7, 80.0], [9.8, 83.0], [9.9, 86.0], [10.0, 88.0], [10.1, 90.0], [10.2, 95.0], [10.3, 97.0], [10.4, 100.0], [10.5, 103.0], [10.6, 104.0], [10.7, 107.0], [10.8, 109.0], [10.9, 112.0], [11.0, 115.0], [11.1, 118.0], [11.2, 120.0], [11.3, 122.0], [11.4, 126.0], [11.5, 128.0], [11.6, 132.0], [11.7, 134.0], [11.8, 136.0], [11.9, 138.0], [12.0, 139.0], [12.1, 141.0], [12.2, 142.0], [12.3, 144.0], [12.4, 145.0], [12.5, 147.0], [12.6, 149.0], [12.7, 151.0], [12.8, 154.0], [12.9, 157.0], [13.0, 158.0], [13.1, 159.0], [13.2, 164.0], [13.3, 168.0], [13.4, 173.0], [13.5, 178.0], [13.6, 180.0], [13.7, 183.0], [13.8, 186.0], [13.9, 188.0], [14.0, 197.0], [14.1, 202.0], [14.2, 211.0], [14.3, 237.0], [14.4, 241.0], [14.5, 248.0], [14.6, 252.0], [14.7, 257.0], [14.8, 262.0], [14.9, 266.0], [15.0, 268.0], [15.1, 270.0], [15.2, 272.0], [15.3, 274.0], [15.4, 276.0], [15.5, 278.0], [15.6, 295.0], [15.7, 308.0], [15.8, 309.0], [15.9, 310.0], [16.0, 311.0], [16.1, 313.0], [16.2, 315.0], [16.3, 317.0], [16.4, 319.0], [16.5, 321.0], [16.6, 323.0], [16.7, 326.0], [16.8, 330.0], [16.9, 332.0], [17.0, 333.0], [17.1, 334.0], [17.2, 335.0], [17.3, 335.0], [17.4, 336.0], [17.5, 337.0], [17.6, 337.0], [17.7, 338.0], [17.8, 339.0], [17.9, 339.0], [18.0, 339.0], [18.1, 340.0], [18.2, 340.0], [18.3, 340.0], [18.4, 341.0], [18.5, 342.0], [18.6, 343.0], [18.7, 344.0], [18.8, 345.0], [18.9, 346.0], [19.0, 347.0], [19.1, 348.0], [19.2, 348.0], [19.3, 349.0], [19.4, 350.0], [19.5, 351.0], [19.6, 351.0], [19.7, 352.0], [19.8, 352.0], [19.9, 353.0], [20.0, 354.0], [20.1, 355.0], [20.2, 356.0], [20.3, 356.0], [20.4, 357.0], [20.5, 358.0], [20.6, 358.0], [20.7, 358.0], [20.8, 359.0], [20.9, 359.0], [21.0, 360.0], [21.1, 360.0], [21.2, 361.0], [21.3, 361.0], [21.4, 361.0], [21.5, 362.0], [21.6, 362.0], [21.7, 363.0], [21.8, 363.0], [21.9, 363.0], [22.0, 364.0], [22.1, 365.0], [22.2, 365.0], [22.3, 366.0], [22.4, 366.0], [22.5, 367.0], [22.6, 368.0], [22.7, 368.0], [22.8, 369.0], [22.9, 370.0], [23.0, 371.0], [23.1, 371.0], [23.2, 372.0], [23.3, 373.0], [23.4, 373.0], [23.5, 374.0], [23.6, 375.0], [23.7, 375.0], [23.8, 376.0], [23.9, 377.0], [24.0, 377.0], [24.1, 378.0], [24.2, 379.0], [24.3, 379.0], [24.4, 380.0], [24.5, 381.0], [24.6, 382.0], [24.7, 382.0], [24.8, 383.0], [24.9, 384.0], [25.0, 385.0], [25.1, 385.0], [25.2, 386.0], [25.3, 387.0], [25.4, 388.0], [25.5, 388.0], [25.6, 389.0], [25.7, 390.0], [25.8, 390.0], [25.9, 391.0], [26.0, 391.0], [26.1, 392.0], [26.2, 393.0], [26.3, 393.0], [26.4, 394.0], [26.5, 394.0], [26.6, 395.0], [26.7, 395.0], [26.8, 395.0], [26.9, 396.0], [27.0, 396.0], [27.1, 396.0], [27.2, 397.0], [27.3, 397.0], [27.4, 398.0], [27.5, 398.0], [27.6, 398.0], [27.7, 399.0], [27.8, 399.0], [27.9, 399.0], [28.0, 400.0], [28.1, 400.0], [28.2, 400.0], [28.3, 401.0], [28.4, 401.0], [28.5, 401.0], [28.6, 402.0], [28.7, 402.0], [28.8, 403.0], [28.9, 403.0], [29.0, 403.0], [29.1, 404.0], [29.2, 404.0], [29.3, 404.0], [29.4, 405.0], [29.5, 405.0], [29.6, 406.0], [29.7, 406.0], [29.8, 407.0], [29.9, 407.0], [30.0, 408.0], [30.1, 408.0], [30.2, 409.0], [30.3, 410.0], [30.4, 410.0], [30.5, 411.0], [30.6, 412.0], [30.7, 412.0], [30.8, 412.0], [30.9, 413.0], [31.0, 414.0], [31.1, 414.0], [31.2, 415.0], [31.3, 416.0], [31.4, 416.0], [31.5, 417.0], [31.6, 418.0], [31.7, 418.0], [31.8, 419.0], [31.9, 420.0], [32.0, 421.0], [32.1, 422.0], [32.2, 422.0], [32.3, 423.0], [32.4, 424.0], [32.5, 425.0], [32.6, 426.0], [32.7, 427.0], [32.8, 428.0], [32.9, 429.0], [33.0, 430.0], [33.1, 430.0], [33.2, 432.0], [33.3, 432.0], [33.4, 433.0], [33.5, 434.0], [33.6, 435.0], [33.7, 436.0], [33.8, 437.0], [33.9, 438.0], [34.0, 439.0], [34.1, 439.0], [34.2, 440.0], [34.3, 441.0], [34.4, 441.0], [34.5, 442.0], [34.6, 443.0], [34.7, 444.0], [34.8, 445.0], [34.9, 446.0], [35.0, 447.0], [35.1, 447.0], [35.2, 448.0], [35.3, 449.0], [35.4, 450.0], [35.5, 450.0], [35.6, 451.0], [35.7, 452.0], [35.8, 452.0], [35.9, 453.0], [36.0, 454.0], [36.1, 454.0], [36.2, 455.0], [36.3, 455.0], [36.4, 456.0], [36.5, 457.0], [36.6, 457.0], [36.7, 458.0], [36.8, 458.0], [36.9, 459.0], [37.0, 459.0], [37.1, 460.0], [37.2, 460.0], [37.3, 461.0], [37.4, 461.0], [37.5, 462.0], [37.6, 462.0], [37.7, 463.0], [37.8, 464.0], [37.9, 464.0], [38.0, 465.0], [38.1, 466.0], [38.2, 466.0], [38.3, 467.0], [38.4, 468.0], [38.5, 468.0], [38.6, 469.0], [38.7, 469.0], [38.8, 470.0], [38.9, 470.0], [39.0, 471.0], [39.1, 472.0], [39.2, 472.0], [39.3, 473.0], [39.4, 474.0], [39.5, 474.0], [39.6, 474.0], [39.7, 475.0], [39.8, 475.0], [39.9, 476.0], [40.0, 476.0], [40.1, 476.0], [40.2, 477.0], [40.3, 477.0], [40.4, 478.0], [40.5, 478.0], [40.6, 478.0], [40.7, 479.0], [40.8, 479.0], [40.9, 479.0], [41.0, 480.0], [41.1, 480.0], [41.2, 480.0], [41.3, 480.0], [41.4, 481.0], [41.5, 481.0], [41.6, 481.0], [41.7, 481.0], [41.8, 482.0], [41.9, 482.0], [42.0, 482.0], [42.1, 482.0], [42.2, 483.0], [42.3, 483.0], [42.4, 483.0], [42.5, 483.0], [42.6, 484.0], [42.7, 484.0], [42.8, 484.0], [42.9, 484.0], [43.0, 484.0], [43.1, 485.0], [43.2, 485.0], [43.3, 485.0], [43.4, 485.0], [43.5, 485.0], [43.6, 486.0], [43.7, 486.0], [43.8, 486.0], [43.9, 486.0], [44.0, 487.0], [44.1, 487.0], [44.2, 487.0], [44.3, 487.0], [44.4, 488.0], [44.5, 488.0], [44.6, 488.0], [44.7, 488.0], [44.8, 488.0], [44.9, 489.0], [45.0, 489.0], [45.1, 489.0], [45.2, 489.0], [45.3, 490.0], [45.4, 490.0], [45.5, 490.0], [45.6, 491.0], [45.7, 491.0], [45.8, 491.0], [45.9, 491.0], [46.0, 492.0], [46.1, 492.0], [46.2, 492.0], [46.3, 493.0], [46.4, 493.0], [46.5, 493.0], [46.6, 493.0], [46.7, 494.0], [46.8, 494.0], [46.9, 494.0], [47.0, 495.0], [47.1, 495.0], [47.2, 495.0], [47.3, 495.0], [47.4, 495.0], [47.5, 496.0], [47.6, 496.0], [47.7, 496.0], [47.8, 496.0], [47.9, 496.0], [48.0, 497.0], [48.1, 497.0], [48.2, 497.0], [48.3, 497.0], [48.4, 498.0], [48.5, 498.0], [48.6, 498.0], [48.7, 498.0], [48.8, 498.0], [48.9, 499.0], [49.0, 499.0], [49.1, 499.0], [49.2, 499.0], [49.3, 499.0], [49.4, 499.0], [49.5, 500.0], [49.6, 500.0], [49.7, 500.0], [49.8, 500.0], [49.9, 500.0], [50.0, 500.0], [50.1, 501.0], [50.2, 501.0], [50.3, 501.0], [50.4, 501.0], [50.5, 501.0], [50.6, 501.0], [50.7, 502.0], [50.8, 502.0], [50.9, 502.0], [51.0, 502.0], [51.1, 502.0], [51.2, 502.0], [51.3, 503.0], [51.4, 503.0], [51.5, 503.0], [51.6, 503.0], [51.7, 503.0], [51.8, 503.0], [51.9, 503.0], [52.0, 504.0], [52.1, 504.0], [52.2, 504.0], [52.3, 504.0], [52.4, 504.0], [52.5, 504.0], [52.6, 505.0], [52.7, 505.0], [52.8, 505.0], [52.9, 505.0], [53.0, 505.0], [53.1, 505.0], [53.2, 505.0], [53.3, 506.0], [53.4, 506.0], [53.5, 506.0], [53.6, 506.0], [53.7, 506.0], [53.8, 506.0], [53.9, 507.0], [54.0, 507.0], [54.1, 507.0], [54.2, 507.0], [54.3, 507.0], [54.4, 507.0], [54.5, 508.0], [54.6, 508.0], [54.7, 508.0], [54.8, 508.0], [54.9, 508.0], [55.0, 508.0], [55.1, 509.0], [55.2, 509.0], [55.3, 509.0], [55.4, 509.0], [55.5, 509.0], [55.6, 510.0], [55.7, 510.0], [55.8, 510.0], [55.9, 510.0], [56.0, 510.0], [56.1, 511.0], [56.2, 511.0], [56.3, 511.0], [56.4, 511.0], [56.5, 511.0], [56.6, 512.0], [56.7, 512.0], [56.8, 512.0], [56.9, 512.0], [57.0, 512.0], [57.1, 512.0], [57.2, 513.0], [57.3, 513.0], [57.4, 513.0], [57.5, 513.0], [57.6, 514.0], [57.7, 514.0], [57.8, 514.0], [57.9, 514.0], [58.0, 514.0], [58.1, 515.0], [58.2, 515.0], [58.3, 515.0], [58.4, 515.0], [58.5, 515.0], [58.6, 515.0], [58.7, 516.0], [58.8, 516.0], [58.9, 516.0], [59.0, 516.0], [59.1, 516.0], [59.2, 517.0], [59.3, 517.0], [59.4, 517.0], [59.5, 517.0], [59.6, 518.0], [59.7, 518.0], [59.8, 518.0], [59.9, 518.0], [60.0, 519.0], [60.1, 519.0], [60.2, 519.0], [60.3, 520.0], [60.4, 520.0], [60.5, 521.0], [60.6, 521.0], [60.7, 521.0], [60.8, 522.0], [60.9, 522.0], [61.0, 522.0], [61.1, 523.0], [61.2, 524.0], [61.3, 524.0], [61.4, 524.0], [61.5, 525.0], [61.6, 525.0], [61.7, 525.0], [61.8, 526.0], [61.9, 526.0], [62.0, 527.0], [62.1, 527.0], [62.2, 527.0], [62.3, 527.0], [62.4, 528.0], [62.5, 528.0], [62.6, 528.0], [62.7, 529.0], [62.8, 529.0], [62.9, 529.0], [63.0, 529.0], [63.1, 529.0], [63.2, 530.0], [63.3, 530.0], [63.4, 530.0], [63.5, 530.0], [63.6, 531.0], [63.7, 531.0], [63.8, 531.0], [63.9, 531.0], [64.0, 532.0], [64.1, 532.0], [64.2, 532.0], [64.3, 532.0], [64.4, 532.0], [64.5, 533.0], [64.6, 533.0], [64.7, 533.0], [64.8, 533.0], [64.9, 534.0], [65.0, 534.0], [65.1, 534.0], [65.2, 535.0], [65.3, 535.0], [65.4, 535.0], [65.5, 535.0], [65.6, 536.0], [65.7, 536.0], [65.8, 536.0], [65.9, 536.0], [66.0, 536.0], [66.1, 537.0], [66.2, 537.0], [66.3, 537.0], [66.4, 537.0], [66.5, 538.0], [66.6, 538.0], [66.7, 538.0], [66.8, 538.0], [66.9, 538.0], [67.0, 538.0], [67.1, 539.0], [67.2, 539.0], [67.3, 539.0], [67.4, 539.0], [67.5, 539.0], [67.6, 539.0], [67.7, 540.0], [67.8, 540.0], [67.9, 540.0], [68.0, 540.0], [68.1, 540.0], [68.2, 540.0], [68.3, 541.0], [68.4, 541.0], [68.5, 541.0], [68.6, 541.0], [68.7, 541.0], [68.8, 542.0], [68.9, 542.0], [69.0, 542.0], [69.1, 542.0], [69.2, 542.0], [69.3, 542.0], [69.4, 543.0], [69.5, 543.0], [69.6, 543.0], [69.7, 544.0], [69.8, 544.0], [69.9, 545.0], [70.0, 545.0], [70.1, 545.0], [70.2, 545.0], [70.3, 546.0], [70.4, 546.0], [70.5, 546.0], [70.6, 547.0], [70.7, 547.0], [70.8, 547.0], [70.9, 548.0], [71.0, 548.0], [71.1, 549.0], [71.2, 549.0], [71.3, 550.0], [71.4, 550.0], [71.5, 551.0], [71.6, 551.0], [71.7, 552.0], [71.8, 553.0], [71.9, 553.0], [72.0, 554.0], [72.1, 554.0], [72.2, 554.0], [72.3, 555.0], [72.4, 556.0], [72.5, 556.0], [72.6, 557.0], [72.7, 557.0], [72.8, 558.0], [72.9, 559.0], [73.0, 560.0], [73.1, 561.0], [73.2, 563.0], [73.3, 564.0], [73.4, 565.0], [73.5, 566.0], [73.6, 566.0], [73.7, 567.0], [73.8, 568.0], [73.9, 568.0], [74.0, 569.0], [74.1, 569.0], [74.2, 570.0], [74.3, 570.0], [74.4, 571.0], [74.5, 571.0], [74.6, 571.0], [74.7, 572.0], [74.8, 572.0], [74.9, 573.0], [75.0, 573.0], [75.1, 574.0], [75.2, 575.0], [75.3, 575.0], [75.4, 576.0], [75.5, 576.0], [75.6, 576.0], [75.7, 577.0], [75.8, 577.0], [75.9, 578.0], [76.0, 578.0], [76.1, 579.0], [76.2, 579.0], [76.3, 580.0], [76.4, 580.0], [76.5, 581.0], [76.6, 581.0], [76.7, 582.0], [76.8, 582.0], [76.9, 583.0], [77.0, 583.0], [77.1, 583.0], [77.2, 584.0], [77.3, 584.0], [77.4, 584.0], [77.5, 585.0], [77.6, 585.0], [77.7, 585.0], [77.8, 586.0], [77.9, 586.0], [78.0, 586.0], [78.1, 587.0], [78.2, 587.0], [78.3, 588.0], [78.4, 588.0], [78.5, 588.0], [78.6, 588.0], [78.7, 589.0], [78.8, 589.0], [78.9, 589.0], [79.0, 590.0], [79.1, 590.0], [79.2, 590.0], [79.3, 591.0], [79.4, 591.0], [79.5, 592.0], [79.6, 592.0], [79.7, 592.0], [79.8, 593.0], [79.9, 593.0], [80.0, 593.0], [80.1, 594.0], [80.2, 594.0], [80.3, 595.0], [80.4, 595.0], [80.5, 595.0], [80.6, 596.0], [80.7, 596.0], [80.8, 597.0], [80.9, 598.0], [81.0, 599.0], [81.1, 600.0], [81.2, 601.0], [81.3, 602.0], [81.4, 603.0], [81.5, 604.0], [81.6, 605.0], [81.7, 606.0], [81.8, 607.0], [81.9, 607.0], [82.0, 609.0], [82.1, 612.0], [82.2, 614.0], [82.3, 615.0], [82.4, 616.0], [82.5, 617.0], [82.6, 618.0], [82.7, 620.0], [82.8, 623.0], [82.9, 625.0], [83.0, 626.0], [83.1, 628.0], [83.2, 629.0], [83.3, 630.0], [83.4, 631.0], [83.5, 633.0], [83.6, 634.0], [83.7, 635.0], [83.8, 638.0], [83.9, 641.0], [84.0, 644.0], [84.1, 646.0], [84.2, 648.0], [84.3, 651.0], [84.4, 1028.0], [84.5, 1029.0], [84.6, 1030.0], [84.7, 1032.0], [84.8, 1033.0], [84.9, 1034.0], [85.0, 1035.0], [85.1, 1035.0], [85.2, 1036.0], [85.3, 1037.0], [85.4, 1039.0], [85.5, 1040.0], [85.6, 1040.0], [85.7, 1041.0], [85.8, 1042.0], [85.9, 1043.0], [86.0, 1045.0], [86.1, 1048.0], [86.2, 1056.0], [86.3, 1068.0], [86.4, 1102.0], [86.5, 1130.0], [86.6, 1146.0], [86.7, 1151.0], [86.8, 1158.0], [86.9, 1165.0], [87.0, 1175.0], [87.1, 1191.0], [87.2, 1231.0], [87.3, 1313.0], [87.4, 1320.0], [87.5, 1331.0], [87.6, 1340.0], [87.7, 1345.0], [87.8, 1349.0], [87.9, 1352.0], [88.0, 1356.0], [88.1, 1359.0], [88.2, 1362.0], [88.3, 1364.0], [88.4, 1366.0], [88.5, 1368.0], [88.6, 1371.0], [88.7, 1373.0], [88.8, 1375.0], [88.9, 1378.0], [89.0, 1380.0], [89.1, 1383.0], [89.2, 1386.0], [89.3, 1390.0], [89.4, 1393.0], [89.5, 1395.0], [89.6, 1399.0], [89.7, 1401.0], [89.8, 1403.0], [89.9, 1405.0], [90.0, 1408.0], [90.1, 1410.0], [90.2, 1412.0], [90.3, 1414.0], [90.4, 1417.0], [90.5, 1419.0], [90.6, 1422.0], [90.7, 1425.0], [90.8, 1427.0], [90.9, 1430.0], [91.0, 1433.0], [91.1, 1435.0], [91.2, 1438.0], [91.3, 1442.0], [91.4, 1446.0], [91.5, 1450.0], [91.6, 1455.0], [91.7, 1459.0], [91.8, 1462.0], [91.9, 1464.0], [92.0, 1467.0], [92.1, 1470.0], [92.2, 1473.0], [92.3, 1477.0], [92.4, 1480.0], [92.5, 1482.0], [92.6, 1484.0], [92.7, 1486.0], [92.8, 1487.0], [92.9, 1489.0], [93.0, 1490.0], [93.1, 1491.0], [93.2, 1493.0], [93.3, 1494.0], [93.4, 1496.0], [93.5, 1498.0], [93.6, 1499.0], [93.7, 1501.0], [93.8, 1504.0], [93.9, 1506.0], [94.0, 1509.0], [94.1, 1511.0], [94.2, 1513.0], [94.3, 1515.0], [94.4, 1518.0], [94.5, 1521.0], [94.6, 1524.0], [94.7, 1529.0], [94.8, 1532.0], [94.9, 1535.0], [95.0, 1537.0], [95.1, 1540.0], [95.2, 1544.0], [95.3, 1547.0], [95.4, 1555.0], [95.5, 1562.0], [95.6, 1577.0], [95.7, 1623.0], [95.8, 3037.0], [95.9, 3041.0], [96.0, 3045.0], [96.1, 3050.0], [96.2, 3057.0], [96.3, 3104.0], [96.4, 3216.0], [96.5, 3322.0], [96.6, 3350.0], [96.7, 3366.0], [96.8, 3375.0], [96.9, 3387.0], [97.0, 3397.0], [97.1, 3406.0], [97.2, 3415.0], [97.3, 3431.0], [97.4, 3472.0], [97.5, 3486.0], [97.6, 3497.0], [97.7, 3523.0], [97.8, 3552.0], [97.9, 7039.0], [98.0, 7046.0], [98.1, 7048.0], [98.2, 7051.0], [98.3, 7055.0], [98.4, 7061.0], [98.5, 7084.0], [98.6, 7368.0], [98.7, 7438.0], [98.8, 7557.0], [98.9, 15051.0], [99.0, 15056.0], [99.1, 15064.0], [99.2, 15075.0], [99.3, 21024.0], [99.4, 21029.0], [99.5, 21032.0], [99.6, 21035.0], [99.7, 21040.0], [99.8, 21043.0], [99.9, 21050.0], [100.0, 21065.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12091.0], [0.1, 12091.0], [0.2, 12095.0], [0.3, 12095.0], [0.4, 12095.0], [0.5, 12096.0], [0.6, 12099.0], [0.7, 12099.0], [0.8, 12099.0], [0.9, 12100.0], [1.0, 12101.0], [1.1, 12101.0], [1.2, 12101.0], [1.3, 12103.0], [1.4, 12103.0], [1.5, 12104.0], [1.6, 12104.0], [1.7, 12104.0], [1.8, 12104.0], [1.9, 12104.0], [2.0, 12109.0], [2.1, 12109.0], [2.2, 12109.0], [2.3, 12110.0], [2.4, 12110.0], [2.5, 12110.0], [2.6, 12111.0], [2.7, 12111.0], [2.8, 12111.0], [2.9, 12112.0], [3.0, 12112.0], [3.1, 12112.0], [3.2, 12113.0], [3.3, 12113.0], [3.4, 12113.0], [3.5, 12114.0], [3.6, 12114.0], [3.7, 12114.0], [3.8, 12115.0], [3.9, 12115.0], [4.0, 12117.0], [4.1, 12117.0], [4.2, 12117.0], [4.3, 12117.0], [4.4, 12117.0], [4.5, 12118.0], [4.6, 12118.0], [4.7, 12118.0], [4.8, 12118.0], [4.9, 12118.0], [5.0, 12118.0], [5.1, 12118.0], [5.2, 12118.0], [5.3, 12118.0], [5.4, 12118.0], [5.5, 12118.0], [5.6, 12119.0], [5.7, 12119.0], [5.8, 12119.0], [5.9, 12119.0], [6.0, 12121.0], [6.1, 12121.0], [6.2, 12121.0], [6.3, 12121.0], [6.4, 12121.0], [6.5, 12123.0], [6.6, 12123.0], [6.7, 12123.0], [6.8, 12123.0], [6.9, 12124.0], [7.0, 12124.0], [7.1, 12126.0], [7.2, 12129.0], [7.3, 12130.0], [7.4, 12130.0], [7.5, 12131.0], [7.6, 12131.0], [7.7, 12131.0], [7.8, 12132.0], [7.9, 12132.0], [8.0, 12132.0], [8.1, 12133.0], [8.2, 12133.0], [8.3, 12134.0], [8.4, 12134.0], [8.5, 12137.0], [8.6, 12140.0], [8.7, 12140.0], [8.8, 12141.0], [8.9, 12141.0], [9.0, 12141.0], [9.1, 12142.0], [9.2, 12143.0], [9.3, 12143.0], [9.4, 12143.0], [9.5, 12147.0], [9.6, 12147.0], [9.7, 12147.0], [9.8, 12147.0], [9.9, 12147.0], [10.0, 12147.0], [10.1, 12147.0], [10.2, 12147.0], [10.3, 12147.0], [10.4, 12147.0], [10.5, 12154.0], [10.6, 12154.0], [10.7, 12154.0], [10.8, 12155.0], [10.9, 12156.0], [11.0, 12156.0], [11.1, 12156.0], [11.2, 12157.0], [11.3, 12158.0], [11.4, 12158.0], [11.5, 12158.0], [11.6, 12159.0], [11.7, 12159.0], [11.8, 12160.0], [11.9, 12160.0], [12.0, 12160.0], [12.1, 12161.0], [12.2, 12163.0], [12.3, 12164.0], [12.4, 12164.0], [12.5, 12165.0], [12.6, 12165.0], [12.7, 12165.0], [12.8, 12166.0], [12.9, 12166.0], [13.0, 12166.0], [13.1, 12167.0], [13.2, 12167.0], [13.3, 12168.0], [13.4, 12168.0], [13.5, 12168.0], [13.6, 12169.0], [13.7, 12169.0], [13.8, 12169.0], [13.9, 12170.0], [14.0, 12170.0], [14.1, 12171.0], [14.2, 12171.0], [14.3, 12171.0], [14.4, 12171.0], [14.5, 12172.0], [14.6, 12173.0], [14.7, 12173.0], [14.8, 12173.0], [14.9, 12173.0], [15.0, 12173.0], [15.1, 12174.0], [15.2, 12175.0], [15.3, 12176.0], [15.4, 12176.0], [15.5, 12176.0], [15.6, 12176.0], [15.7, 12176.0], [15.8, 12177.0], [15.9, 12177.0], [16.0, 12177.0], [16.1, 12177.0], [16.2, 12180.0], [16.3, 12186.0], [16.4, 12186.0], [16.5, 12186.0], [16.6, 12187.0], [16.7, 12187.0], [16.8, 12188.0], [16.9, 12190.0], [17.0, 12191.0], [17.1, 12191.0], [17.2, 12191.0], [17.3, 12191.0], [17.4, 12191.0], [17.5, 12192.0], [17.6, 12193.0], [17.7, 12193.0], [17.8, 12196.0], [17.9, 12197.0], [18.0, 12197.0], [18.1, 12197.0], [18.2, 12199.0], [18.3, 12199.0], [18.4, 12199.0], [18.5, 12200.0], [18.6, 12200.0], [18.7, 12200.0], [18.8, 12201.0], [18.9, 12202.0], [19.0, 12203.0], [19.1, 12203.0], [19.2, 12205.0], [19.3, 12205.0], [19.4, 12205.0], [19.5, 12206.0], [19.6, 12207.0], [19.7, 12207.0], [19.8, 12208.0], [19.9, 12209.0], [20.0, 12209.0], [20.1, 12209.0], [20.2, 12209.0], [20.3, 12209.0], [20.4, 12209.0], [20.5, 12210.0], [20.6, 12211.0], [20.7, 12211.0], [20.8, 12212.0], [20.9, 12214.0], [21.0, 12214.0], [21.1, 12214.0], [21.2, 12214.0], [21.3, 12214.0], [21.4, 12214.0], [21.5, 12219.0], [21.6, 12220.0], [21.7, 12220.0], [21.8, 12220.0], [21.9, 12220.0], [22.0, 12221.0], [22.1, 12221.0], [22.2, 12221.0], [22.3, 12222.0], [22.4, 12222.0], [22.5, 12223.0], [22.6, 12223.0], [22.7, 12223.0], [22.8, 12224.0], [22.9, 12226.0], [23.0, 12226.0], [23.1, 12226.0], [23.2, 12227.0], [23.3, 12227.0], [23.4, 12227.0], [23.5, 12229.0], [23.6, 12229.0], [23.7, 12229.0], [23.8, 12230.0], [23.9, 12231.0], [24.0, 12233.0], [24.1, 12233.0], [24.2, 12233.0], [24.3, 12233.0], [24.4, 12233.0], [24.5, 12233.0], [24.6, 12235.0], [24.7, 12235.0], [24.8, 12236.0], [24.9, 12237.0], [25.0, 12238.0], [25.1, 12238.0], [25.2, 12239.0], [25.3, 12239.0], [25.4, 12239.0], [25.5, 12239.0], [25.6, 12241.0], [25.7, 12241.0], [25.8, 12242.0], [25.9, 12244.0], [26.0, 12246.0], [26.1, 12246.0], [26.2, 12246.0], [26.3, 12248.0], [26.4, 12248.0], [26.5, 12248.0], [26.6, 12250.0], [26.7, 12250.0], [26.8, 12250.0], [26.9, 12251.0], [27.0, 12253.0], [27.1, 12253.0], [27.2, 12253.0], [27.3, 12253.0], [27.4, 12253.0], [27.5, 12254.0], [27.6, 12254.0], [27.7, 12254.0], [27.8, 12255.0], [27.9, 12255.0], [28.0, 12255.0], [28.1, 12255.0], [28.2, 12256.0], [28.3, 12256.0], [28.4, 12256.0], [28.5, 12260.0], [28.6, 12268.0], [28.7, 12268.0], [28.8, 12268.0], [28.9, 12269.0], [29.0, 12271.0], [29.1, 12271.0], [29.2, 12272.0], [29.3, 12273.0], [29.4, 12273.0], [29.5, 12274.0], [29.6, 12274.0], [29.7, 12274.0], [29.8, 12275.0], [29.9, 12276.0], [30.0, 12276.0], [30.1, 12276.0], [30.2, 12276.0], [30.3, 12277.0], [30.4, 12277.0], [30.5, 12279.0], [30.6, 12280.0], [30.7, 12280.0], [30.8, 12280.0], [30.9, 12281.0], [31.0, 12281.0], [31.1, 12281.0], [31.2, 12283.0], [31.3, 12283.0], [31.4, 12283.0], [31.5, 12284.0], [31.6, 12285.0], [31.7, 12285.0], [31.8, 12288.0], [31.9, 12288.0], [32.0, 12289.0], [32.1, 12289.0], [32.2, 12292.0], [32.3, 12295.0], [32.4, 12295.0], [32.5, 12295.0], [32.6, 12297.0], [32.7, 12297.0], [32.8, 12297.0], [32.9, 12297.0], [33.0, 12298.0], [33.1, 12298.0], [33.2, 12298.0], [33.3, 12301.0], [33.4, 12301.0], [33.5, 12301.0], [33.6, 12303.0], [33.7, 12303.0], [33.8, 12303.0], [33.9, 12303.0], [34.0, 12304.0], [34.1, 12304.0], [34.2, 12306.0], [34.3, 12306.0], [34.4, 12306.0], [34.5, 12307.0], [34.6, 12309.0], [34.7, 12309.0], [34.8, 12312.0], [34.9, 12315.0], [35.0, 12316.0], [35.1, 12316.0], [35.2, 12316.0], [35.3, 12316.0], [35.4, 12316.0], [35.5, 12317.0], [35.6, 12319.0], [35.7, 12319.0], [35.8, 12321.0], [35.9, 12322.0], [36.0, 12323.0], [36.1, 12323.0], [36.2, 12325.0], [36.3, 12325.0], [36.4, 12325.0], [36.5, 12326.0], [36.6, 12326.0], [36.7, 12326.0], [36.8, 12327.0], [36.9, 12327.0], [37.0, 12327.0], [37.1, 12327.0], [37.2, 12329.0], [37.3, 12331.0], [37.4, 12331.0], [37.5, 12332.0], [37.6, 12333.0], [37.7, 12333.0], [37.8, 12334.0], [37.9, 12334.0], [38.0, 12334.0], [38.1, 12336.0], [38.2, 12337.0], [38.3, 12338.0], [38.4, 12338.0], [38.5, 12338.0], [38.6, 12338.0], [38.7, 12338.0], [38.8, 12340.0], [38.9, 12340.0], [39.0, 12340.0], [39.1, 12340.0], [39.2, 12341.0], [39.3, 12343.0], [39.4, 12343.0], [39.5, 12343.0], [39.6, 12343.0], [39.7, 12343.0], [39.8, 12344.0], [39.9, 12344.0], [40.0, 12344.0], [40.1, 12344.0], [40.2, 12345.0], [40.3, 12347.0], [40.4, 12347.0], [40.5, 12347.0], [40.6, 12347.0], [40.7, 12347.0], [40.8, 12348.0], [40.9, 12348.0], [41.0, 12348.0], [41.1, 12349.0], [41.2, 12351.0], [41.3, 12351.0], [41.4, 12351.0], [41.5, 12351.0], [41.6, 12352.0], [41.7, 12352.0], [41.8, 12354.0], [41.9, 12358.0], [42.0, 12358.0], [42.1, 12359.0], [42.2, 12359.0], [42.3, 12360.0], [42.4, 12360.0], [42.5, 12362.0], [42.6, 12362.0], [42.7, 12362.0], [42.8, 12363.0], [42.9, 12366.0], [43.0, 12366.0], [43.1, 12367.0], [43.2, 12367.0], [43.3, 12367.0], [43.4, 12367.0], [43.5, 12368.0], [43.6, 12370.0], [43.7, 12370.0], [43.8, 12370.0], [43.9, 12371.0], [44.0, 12371.0], [44.1, 12371.0], [44.2, 12372.0], [44.3, 12375.0], [44.4, 12375.0], [44.5, 12379.0], [44.6, 12380.0], [44.7, 12380.0], [44.8, 12382.0], [44.9, 12384.0], [45.0, 12384.0], [45.1, 12385.0], [45.2, 12387.0], [45.3, 12389.0], [45.4, 12389.0], [45.5, 12391.0], [45.6, 12392.0], [45.7, 12392.0], [45.8, 12395.0], [45.9, 12395.0], [46.0, 12395.0], [46.1, 12398.0], [46.2, 12398.0], [46.3, 12399.0], [46.4, 12399.0], [46.5, 12400.0], [46.6, 12400.0], [46.7, 12400.0], [46.8, 12401.0], [46.9, 12401.0], [47.0, 12401.0], [47.1, 12403.0], [47.2, 12404.0], [47.3, 12405.0], [47.4, 12405.0], [47.5, 12406.0], [47.6, 12406.0], [47.7, 12406.0], [47.8, 12407.0], [47.9, 12408.0], [48.0, 12408.0], [48.1, 12408.0], [48.2, 12410.0], [48.3, 12411.0], [48.4, 12411.0], [48.5, 12412.0], [48.6, 12417.0], [48.7, 12417.0], [48.8, 12417.0], [48.9, 12418.0], [49.0, 12418.0], [49.1, 12423.0], [49.2, 12423.0], [49.3, 12424.0], [49.4, 12424.0], [49.5, 12425.0], [49.6, 12426.0], [49.7, 12426.0], [49.8, 12426.0], [49.9, 12427.0], [50.0, 12427.0], [50.1, 12432.0], [50.2, 12433.0], [50.3, 12433.0], [50.4, 12433.0], [50.5, 12436.0], [50.6, 12437.0], [50.7, 12437.0], [50.8, 12440.0], [50.9, 12441.0], [51.0, 12441.0], [51.1, 12441.0], [51.2, 12443.0], [51.3, 12443.0], [51.4, 12443.0], [51.5, 12444.0], [51.6, 12444.0], [51.7, 12444.0], [51.8, 12445.0], [51.9, 12446.0], [52.0, 12446.0], [52.1, 12446.0], [52.2, 12447.0], [52.3, 12448.0], [52.4, 12448.0], [52.5, 12449.0], [52.6, 12449.0], [52.7, 12449.0], [52.8, 12450.0], [52.9, 12452.0], [53.0, 12452.0], [53.1, 12452.0], [53.2, 12453.0], [53.3, 12453.0], [53.4, 12453.0], [53.5, 12454.0], [53.6, 12454.0], [53.7, 12454.0], [53.8, 12455.0], [53.9, 12456.0], [54.0, 12456.0], [54.1, 12457.0], [54.2, 12460.0], [54.3, 12460.0], [54.4, 12460.0], [54.5, 12461.0], [54.6, 12461.0], [54.7, 12461.0], [54.8, 12463.0], [54.9, 12465.0], [55.0, 12465.0], [55.1, 12466.0], [55.2, 12466.0], [55.3, 12467.0], [55.4, 12467.0], [55.5, 12470.0], [55.6, 12471.0], [55.7, 12471.0], [55.8, 12472.0], [55.9, 12473.0], [56.0, 12473.0], [56.1, 12474.0], [56.2, 12476.0], [56.3, 12477.0], [56.4, 12477.0], [56.5, 12478.0], [56.6, 12480.0], [56.7, 12480.0], [56.8, 12481.0], [56.9, 12482.0], [57.0, 12482.0], [57.1, 12484.0], [57.2, 12485.0], [57.3, 12485.0], [57.4, 12485.0], [57.5, 12485.0], [57.6, 12487.0], [57.7, 12487.0], [57.8, 12488.0], [57.9, 12488.0], [58.0, 12488.0], [58.1, 12489.0], [58.2, 12489.0], [58.3, 12490.0], [58.4, 12490.0], [58.5, 12490.0], [58.6, 12490.0], [58.7, 12490.0], [58.8, 12490.0], [58.9, 12492.0], [59.0, 12492.0], [59.1, 12493.0], [59.2, 12494.0], [59.3, 12494.0], [59.4, 12494.0], [59.5, 12494.0], [59.6, 12495.0], [59.7, 12495.0], [59.8, 12496.0], [59.9, 12497.0], [60.0, 12497.0], [60.1, 12498.0], [60.2, 12500.0], [60.3, 12500.0], [60.4, 12500.0], [60.5, 12500.0], [60.6, 12500.0], [60.7, 12500.0], [60.8, 12501.0], [60.9, 12503.0], [61.0, 12503.0], [61.1, 12506.0], [61.2, 12506.0], [61.3, 12506.0], [61.4, 12506.0], [61.5, 12507.0], [61.6, 12507.0], [61.7, 12507.0], [61.8, 12509.0], [61.9, 12509.0], [62.0, 12509.0], [62.1, 12511.0], [62.2, 12511.0], [62.3, 12511.0], [62.4, 12511.0], [62.5, 12512.0], [62.6, 12513.0], [62.7, 12513.0], [62.8, 12513.0], [62.9, 12516.0], [63.0, 12516.0], [63.1, 12517.0], [63.2, 12519.0], [63.3, 12519.0], [63.4, 12519.0], [63.5, 12520.0], [63.6, 12521.0], [63.7, 12521.0], [63.8, 12522.0], [63.9, 12525.0], [64.0, 12525.0], [64.1, 12526.0], [64.2, 12528.0], [64.3, 12529.0], [64.4, 12529.0], [64.5, 12531.0], [64.6, 12532.0], [64.7, 12532.0], [64.8, 12533.0], [64.9, 12533.0], [65.0, 12533.0], [65.1, 12534.0], [65.2, 12535.0], [65.3, 12538.0], [65.4, 12538.0], [65.5, 12539.0], [65.6, 12540.0], [65.7, 12540.0], [65.8, 12541.0], [65.9, 12542.0], [66.0, 12542.0], [66.1, 12544.0], [66.2, 12544.0], [66.3, 12544.0], [66.4, 12544.0], [66.5, 12549.0], [66.6, 12549.0], [66.7, 12549.0], [66.8, 12549.0], [66.9, 12551.0], [67.0, 12551.0], [67.1, 12555.0], [67.2, 12558.0], [67.3, 12558.0], [67.4, 12558.0], [67.5, 12559.0], [67.6, 12559.0], [67.7, 12559.0], [67.8, 12559.0], [67.9, 12560.0], [68.0, 12560.0], [68.1, 12561.0], [68.2, 12562.0], [68.3, 12564.0], [68.4, 12564.0], [68.5, 12564.0], [68.6, 12565.0], [68.7, 12565.0], [68.8, 12565.0], [68.9, 12572.0], [69.0, 12572.0], [69.1, 12572.0], [69.2, 12573.0], [69.3, 12574.0], [69.4, 12574.0], [69.5, 12575.0], [69.6, 12575.0], [69.7, 12575.0], [69.8, 12575.0], [69.9, 12575.0], [70.0, 12575.0], [70.1, 12576.0], [70.2, 12577.0], [70.3, 12577.0], [70.4, 12577.0], [70.5, 12579.0], [70.6, 12581.0], [70.7, 12581.0], [70.8, 12582.0], [70.9, 12583.0], [71.0, 12583.0], [71.1, 12583.0], [71.2, 12584.0], [71.3, 12585.0], [71.4, 12585.0], [71.5, 12589.0], [71.6, 12589.0], [71.7, 12589.0], [71.8, 12589.0], [71.9, 12590.0], [72.0, 12590.0], [72.1, 12591.0], [72.2, 12593.0], [72.3, 12594.0], [72.4, 12594.0], [72.5, 12594.0], [72.6, 12596.0], [72.7, 12596.0], [72.8, 12596.0], [72.9, 12597.0], [73.0, 12597.0], [73.1, 12599.0], [73.2, 12600.0], [73.3, 12601.0], [73.4, 12601.0], [73.5, 12601.0], [73.6, 12602.0], [73.7, 12602.0], [73.8, 12604.0], [73.9, 12605.0], [74.0, 12605.0], [74.1, 12606.0], [74.2, 12606.0], [74.3, 12606.0], [74.4, 12606.0], [74.5, 12607.0], [74.6, 12607.0], [74.7, 12607.0], [74.8, 12608.0], [74.9, 12610.0], [75.0, 12610.0], [75.1, 12612.0], [75.2, 12614.0], [75.3, 12614.0], [75.4, 12614.0], [75.5, 12615.0], [75.6, 12619.0], [75.7, 12619.0], [75.8, 12619.0], [75.9, 12619.0], [76.0, 12619.0], [76.1, 12624.0], [76.2, 12624.0], [76.3, 12626.0], [76.4, 12626.0], [76.5, 12626.0], [76.6, 12628.0], [76.7, 12628.0], [76.8, 12629.0], [76.9, 12629.0], [77.0, 12629.0], [77.1, 12632.0], [77.2, 12632.0], [77.3, 12632.0], [77.4, 12632.0], [77.5, 12633.0], [77.6, 12633.0], [77.7, 12633.0], [77.8, 12634.0], [77.9, 12634.0], [78.0, 12634.0], [78.1, 12635.0], [78.2, 12635.0], [78.3, 12638.0], [78.4, 12638.0], [78.5, 12638.0], [78.6, 12641.0], [78.7, 12641.0], [78.8, 12642.0], [78.9, 12642.0], [79.0, 12642.0], [79.1, 12646.0], [79.2, 12646.0], [79.3, 12647.0], [79.4, 12647.0], [79.5, 12649.0], [79.6, 12651.0], [79.7, 12651.0], [79.8, 12651.0], [79.9, 12654.0], [80.0, 12654.0], [80.1, 12654.0], [80.2, 12654.0], [80.3, 12654.0], [80.4, 12654.0], [80.5, 12655.0], [80.6, 12656.0], [80.7, 12656.0], [80.8, 12656.0], [80.9, 12657.0], [81.0, 12657.0], [81.1, 12658.0], [81.2, 12659.0], [81.3, 12660.0], [81.4, 12660.0], [81.5, 12661.0], [81.6, 12662.0], [81.7, 12662.0], [81.8, 12663.0], [81.9, 12664.0], [82.0, 12664.0], [82.1, 12664.0], [82.2, 12666.0], [82.3, 12666.0], [82.4, 12666.0], [82.5, 12667.0], [82.6, 12668.0], [82.7, 12668.0], [82.8, 12669.0], [82.9, 12671.0], [83.0, 12671.0], [83.1, 12672.0], [83.2, 12673.0], [83.3, 12673.0], [83.4, 12673.0], [83.5, 12673.0], [83.6, 12674.0], [83.7, 12674.0], [83.8, 12674.0], [83.9, 12675.0], [84.0, 12675.0], [84.1, 12675.0], [84.2, 12676.0], [84.3, 12677.0], [84.4, 12677.0], [84.5, 12677.0], [84.6, 12678.0], [84.7, 12678.0], [84.8, 12679.0], [84.9, 12680.0], [85.0, 12680.0], [85.1, 12681.0], [85.2, 12681.0], [85.3, 12682.0], [85.4, 12682.0], [85.5, 12684.0], [85.6, 12686.0], [85.7, 12686.0], [85.8, 12686.0], [85.9, 12687.0], [86.0, 12687.0], [86.1, 12687.0], [86.2, 12687.0], [86.3, 12688.0], [86.4, 12688.0], [86.5, 12689.0], [86.6, 12694.0], [86.7, 12694.0], [86.8, 12695.0], [86.9, 12696.0], [87.0, 12696.0], [87.1, 12697.0], [87.2, 12697.0], [87.3, 12698.0], [87.4, 12698.0], [87.5, 12698.0], [87.6, 12699.0], [87.7, 12699.0], [87.8, 12701.0], [87.9, 12701.0], [88.0, 12701.0], [88.1, 12702.0], [88.2, 12703.0], [88.3, 12705.0], [88.4, 12705.0], [88.5, 12706.0], [88.6, 12708.0], [88.7, 12708.0], [88.8, 12708.0], [88.9, 12708.0], [89.0, 12708.0], [89.1, 12709.0], [89.2, 12710.0], [89.3, 12710.0], [89.4, 12710.0], [89.5, 12710.0], [89.6, 12711.0], [89.7, 12711.0], [89.8, 12711.0], [89.9, 12712.0], [90.0, 12712.0], [90.1, 12712.0], [90.2, 12712.0], [90.3, 12714.0], [90.4, 12714.0], [90.5, 12715.0], [90.6, 12717.0], [90.7, 12717.0], [90.8, 12717.0], [90.9, 12717.0], [91.0, 12717.0], [91.1, 12717.0], [91.2, 12718.0], [91.3, 12718.0], [91.4, 12718.0], [91.5, 12721.0], [91.6, 12721.0], [91.7, 12721.0], [91.8, 12723.0], [91.9, 12725.0], [92.0, 12725.0], [92.1, 12726.0], [92.2, 12726.0], [92.3, 12727.0], [92.4, 12727.0], [92.5, 12728.0], [92.6, 12729.0], [92.7, 12729.0], [92.8, 12730.0], [92.9, 12731.0], [93.0, 12731.0], [93.1, 12731.0], [93.2, 12732.0], [93.3, 12732.0], [93.4, 12732.0], [93.5, 12733.0], [93.6, 12734.0], [93.7, 12734.0], [93.8, 12737.0], [93.9, 12739.0], [94.0, 12739.0], [94.1, 12741.0], [94.2, 12741.0], [94.3, 12743.0], [94.4, 12743.0], [94.5, 12745.0], [94.6, 12747.0], [94.7, 12747.0], [94.8, 12747.0], [94.9, 12749.0], [95.0, 12749.0], [95.1, 12756.0], [95.2, 12757.0], [95.3, 12757.0], [95.4, 12757.0], [95.5, 12765.0], [95.6, 12770.0], [95.7, 12770.0], [95.8, 12785.0], [95.9, 12800.0], [96.0, 12800.0], [96.1, 13035.0], [96.2, 13038.0], [96.3, 13042.0], [96.4, 13042.0], [96.5, 13059.0], [96.6, 13104.0], [96.7, 13104.0], [96.8, 13112.0], [96.9, 13139.0], [97.0, 13139.0], [97.1, 13154.0], [97.2, 13165.0], [97.3, 13206.0], [97.4, 13206.0], [97.5, 13206.0], [97.6, 13251.0], [97.7, 13251.0], [97.8, 13281.0], [97.9, 13302.0], [98.0, 13302.0], [98.1, 13314.0], [98.2, 13346.0], [98.3, 13350.0], [98.4, 13350.0], [98.5, 13359.0], [98.6, 13377.0], [98.7, 13377.0], [98.8, 13418.0], [98.9, 13428.0], [99.0, 13428.0], [99.1, 13465.0], [99.2, 13522.0], [99.3, 13538.0], [99.4, 13538.0], [99.5, 13563.0], [99.6, 13564.0], [99.7, 13564.0], [99.8, 13597.0], [99.9, 13644.0], [100.0, 13644.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11064.0, "series": [{"data": [[60000.0, 648.0], [60100.0, 13.0], [61100.0, 2.0], [61000.0, 37.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 3622.0], [600.0, 1150.0], [15300.0, 5.0], [15200.0, 3.0], [15000.0, 144.0], [15100.0, 1.0], [15500.0, 1.0], [15400.0, 3.0], [1000.0, 713.0], [1100.0, 270.0], [1200.0, 34.0], [1300.0, 832.0], [21000.0, 259.0], [1400.0, 1388.0], [1500.0, 719.0], [100.0, 1294.0], [1600.0, 15.0], [2000.0, 2.0], [2300.0, 1.0], [2400.0, 9.0], [2500.0, 8.0], [3000.0, 185.0], [3100.0, 31.0], [200.0, 544.0], [3300.0, 205.0], [3200.0, 20.0], [3400.0, 202.0], [3500.0, 85.0], [3600.0, 11.0], [4500.0, 2.0], [4400.0, 2.0], [300.0, 4321.0], [400.0, 7497.0], [7100.0, 14.0], [7000.0, 214.0], [7400.0, 37.0], [7300.0, 37.0], [7200.0, 3.0], [7500.0, 14.0], [500.0, 11064.0], [8000.0, 1.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12100.0, 123.0], [12200.0, 104.0], [12000.0, 6.0], [12300.0, 92.0], [12600.0, 102.0], [12400.0, 96.0], [12500.0, 91.0], [12700.0, 57.0], [12800.0, 1.0], [13200.0, 4.0], [13300.0, 6.0], [13000.0, 4.0], [13100.0, 5.0], [13500.0, 5.0], [13400.0, 3.0], [13600.0, 1.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 61100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 259.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 25854.0, "series": [{"data": [[0.0, 3638.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 25854.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 6611.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 259.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.625000000000004, "minX": 1.61758098E12, "maxY": 645.7316418350816, "series": [{"data": [[1.61758104E12, 352.04142857142824]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.61758098E12, 388.05428571428564]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.61758098E12, 645.7316418350816], [1.61758104E12, 87.03285024154589], [1.6175811E12, 9.625000000000004]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6175811E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 61100.0, "series": [{"data": [[111.0, 61029.0], [115.0, 61032.0], [114.0, 61038.5], [112.0, 61037.0], [119.0, 61038.0], [118.0, 61039.0], [117.0, 61042.0], [123.0, 61041.0], [120.0, 61043.0], [126.0, 61037.0], [132.0, 61045.0], [130.0, 61037.666666666664], [140.0, 61039.0], [149.0, 61041.0], [144.0, 61040.0], [159.0, 61038.5], [154.0, 61034.0], [152.0, 61044.0], [164.0, 61036.0], [163.0, 61041.0], [175.0, 61041.0], [173.0, 61041.0], [171.0, 61040.0], [168.0, 61038.0], [181.0, 61100.0], [198.0, 60038.88888888889], [214.0, 60036.399999999994], [213.0, 60033.75], [212.0, 60032.5], [223.0, 60028.5], [220.0, 60031.33333333333], [231.0, 60028.5], [230.0, 60030.0], [228.0, 60029.0], [227.0, 60030.5], [225.0, 60028.5], [239.0, 60029.0], [237.0, 60031.0], [236.0, 60031.333333333336], [235.0, 60031.0], [232.0, 60030.0], [246.0, 60028.0], [244.0, 60029.0], [243.0, 60030.0], [241.0, 60031.0], [240.0, 60032.0], [255.0, 60028.333333333336], [252.0, 60027.0], [251.0, 60028.0], [250.0, 60029.5], [248.0, 60029.0], [259.0, 60029.0], [270.0, 60030.5], [268.0, 60028.0], [267.0, 60028.5], [265.0, 60028.0], [263.0, 60030.0], [262.0, 60028.0], [261.0, 60029.0], [260.0, 60029.0], [258.0, 60029.0], [257.0, 60027.0], [256.0, 60028.0], [278.0, 60036.5], [277.0, 60032.666666666664], [273.0, 60029.0], [272.0, 60030.0], [301.0, 60028.0], [303.0, 60031.0], [300.0, 60044.0], [291.0, 60043.333333333336], [290.0, 60049.28571428571], [299.0, 60046.0], [297.0, 60031.0], [296.0, 60028.5], [294.0, 60027.0], [293.0, 60031.0], [292.0, 60029.0], [318.0, 60028.0], [319.0, 60028.0], [317.0, 60028.0], [316.0, 60028.0], [315.0, 60028.0], [314.0, 60028.0], [313.0, 60039.2], [308.0, 60029.5], [304.0, 60028.0], [306.0, 60028.0], [305.0, 60028.0], [323.0, 60027.0], [334.0, 60030.0], [335.0, 60027.0], [332.0, 60027.5], [329.0, 60027.5], [327.0, 60028.0], [326.0, 60029.0], [324.0, 60028.0], [322.0, 60030.0], [321.0, 60028.0], [320.0, 60029.0], [349.0, 60028.0], [350.0, 60028.0], [348.0, 60030.0], [339.0, 60029.0], [338.0, 60028.0], [337.0, 60027.0], [336.0, 60027.0], [347.0, 60030.0], [346.0, 60029.0], [345.0, 60028.0], [344.0, 60029.0], [342.0, 60029.0], [341.0, 60028.0], [340.0, 60027.0], [355.0, 60028.0], [366.0, 60030.5], [367.0, 60028.0], [364.0, 60028.5], [362.0, 60027.5], [360.0, 60027.0], [359.0, 60028.666666666664], [356.0, 60028.0], [354.0, 60028.0], [353.0, 60029.0], [352.0, 60030.0], [382.0, 60029.0], [383.0, 60028.0], [380.0, 60028.0], [371.0, 60028.0], [369.0, 60027.5], [379.0, 60027.5], [377.0, 60031.0], [376.0, 60028.0], [375.0, 60028.0], [374.0, 60028.0], [373.0, 60028.0], [372.0, 60028.0], [398.0, 60028.666666666664], [395.0, 60031.0], [394.0, 60028.0], [393.0, 60029.0], [391.0, 60031.0], [384.0, 60030.0], [389.0, 60028.0], [388.0, 60030.0], [387.0, 60029.0], [386.0, 60029.0], [414.0, 60027.5], [412.0, 60027.5], [410.0, 60027.0], [409.0, 60028.0], [408.0, 60028.0], [407.0, 60028.0], [406.0, 60027.5], [404.0, 60029.0], [402.0, 60029.0], [400.0, 60028.5], [430.0, 60028.5], [431.0, 60029.0], [428.0, 60028.0], [419.0, 60029.5], [417.0, 60028.0], [416.0, 60029.5], [427.0, 60028.5], [425.0, 60031.0], [424.0, 60029.0], [423.0, 60028.0], [422.0, 60030.0], [421.0, 60029.0], [420.0, 60029.0], [445.0, 60027.0], [447.0, 60028.5], [444.0, 60027.5], [433.0, 60029.0], [432.0, 60029.0], [442.0, 60029.0], [440.0, 60028.0], [439.0, 60028.0], [438.0, 60030.0], [437.0, 60032.0], [436.0, 60029.0], [463.0, 60030.25], [459.0, 60032.0], [457.0, 60028.0], [456.0, 60029.5], [454.0, 60028.0], [453.0, 60028.0], [452.0, 60028.0], [451.0, 60028.666666666664], [448.0, 60028.0], [478.0, 60030.0], [476.0, 60032.0], [472.0, 60029.625], [464.0, 60029.0], [491.0, 60043.0], [488.0, 60030.0], [485.0, 60028.5], [483.0, 60028.5], [481.0, 60030.0], [480.0, 60028.5], [510.0, 60028.0], [509.0, 60027.5], [507.0, 60027.0], [506.0, 60027.0], [505.0, 60027.0], [504.0, 60031.71428571428], [497.0, 60039.0], [541.0, 60029.0], [532.0, 60028.5], [542.0, 60029.0], [528.0, 60028.0], [530.0, 60028.0], [529.0, 60028.0], [540.0, 60028.0], [538.0, 60028.0], [537.0, 60027.5], [519.0, 60028.0], [518.0, 60028.0], [517.0, 60028.0], [516.0, 60028.0], [515.0, 60028.0], [514.0, 60028.0], [513.0, 60028.0], [512.0, 60029.0], [527.0, 60030.0], [525.0, 60028.5], [523.0, 60029.0], [522.0, 60028.5], [520.0, 60029.0], [535.0, 60029.0], [534.0, 60028.0], [533.0, 60028.0], [563.0, 60030.0], [575.0, 60028.0], [574.0, 60029.666666666664], [571.0, 60030.0], [570.0, 60028.333333333336], [558.0, 60028.0], [546.0, 60028.0], [545.0, 60028.5], [550.0, 60028.0], [549.0, 60029.0], [557.0, 60028.0], [556.0, 60028.0], [555.0, 60028.5], [553.0, 60030.0], [552.0, 60028.5], [567.0, 60028.0], [565.0, 60028.0], [564.0, 60027.0], [562.0, 60028.0], [561.0, 60028.333333333336], [602.0, 60028.0], [594.0, 60029.0], [605.0, 60030.0], [607.0, 60031.0], [593.0, 60027.0], [592.0, 60030.0], [603.0, 60032.0], [601.0, 60029.333333333336], [583.0, 60029.5], [581.0, 60029.5], [579.0, 60028.0], [577.0, 60028.0], [576.0, 60028.0], [591.0, 60028.0], [590.0, 60028.5], [588.0, 60028.5], [586.0, 60028.0], [585.0, 60028.5], [598.0, 60028.5], [596.0, 60028.0], [595.0, 60029.0], [636.0, 60028.0], [628.0, 60031.0], [638.0, 60029.5], [624.0, 60032.0], [627.0, 60028.0], [626.0, 60029.5], [634.0, 60030.0], [633.0, 60028.0], [632.0, 60029.0], [614.0, 60033.0], [613.0, 60029.0], [612.0, 60030.333333333336], [609.0, 60029.0], [608.0, 60029.0], [623.0, 60030.0], [622.0, 60029.0], [621.0, 60029.5], [619.0, 60029.5], [617.0, 60029.0], [616.0, 60028.5], [631.0, 60028.0], [630.0, 60028.0], [629.0, 60027.0], [658.0, 60029.5], [671.0, 60031.5], [669.0, 60029.666666666664], [666.0, 60030.0], [665.0, 60030.5], [654.0, 60030.0], [641.0, 60031.0], [644.0, 60032.5], [642.0, 60029.0], [647.0, 60032.0], [646.0, 60030.0], [653.0, 60031.5], [651.0, 60034.0], [649.0, 60032.0], [663.0, 60029.5], [661.0, 60031.5], [659.0, 60030.0], [656.0, 60031.5], [701.0, 60037.0], [703.0, 60038.5], [700.0, 60034.0], [699.0, 60035.0], [697.0, 60042.0], [696.0, 60040.666666666664], [686.0, 60032.5], [672.0, 60030.0], [675.0, 60031.5], [673.0, 60031.0], [679.0, 60034.0], [678.0, 60032.0], [685.0, 60032.5], [682.0, 60030.5], [681.0, 60033.0], [693.0, 60036.0], [692.0, 60036.666666666664], [689.0, 60036.0], [711.0, 60037.5], [729.0, 60033.5], [730.0, 60034.0], [728.0, 60033.0], [724.0, 60035.0], [723.0, 60035.2], [717.0, 60037.0], [716.0, 60037.0], [709.0, 60037.5], [707.0, 60037.666666666664], [704.0, 60038.0], [754.0, 60052.5], [748.0, 60043.0], [747.0, 60040.666666666664], [744.0, 60050.0], [743.0, 60048.0], [740.0, 60048.333333333336], [737.0, 60046.857142857145], [795.0, 60081.384615384624], [794.0, 60067.333333333336], [779.0, 60037.0], [778.0, 60038.0], [775.0, 60084.333333333336], [772.0, 60041.0], [769.0, 60057.0], [768.0, 60049.85714285714], [828.0, 60047.57142857143], [827.0, 60086.0], [818.0, 60088.92857142857], [804.0, 60075.11111111111], [856.0, 60028.0], [853.0, 60029.0], [847.0, 60036.8], [837.0, 60043.11111111112]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[503.6828571428571, 60092.12142857141]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 21032.0], [3.0, 21058.0], [4.0, 21042.0], [5.0, 21040.0], [6.0, 21059.0], [7.0, 15060.0], [8.0, 21048.0], [9.0, 7063.0], [10.0, 8031.625], [11.0, 21029.0], [12.0, 12039.7], [13.0, 10535.0], [14.0, 7040.249999999999], [15.0, 15064.0], [16.0, 12639.4], [17.0, 21041.0], [18.0, 3035.0], [19.0, 538.5], [20.0, 13287.375], [21.0, 10537.0], [22.0, 9323.857142857143], [23.0, 5281.5], [24.0, 10530.666666666666], [25.0, 14030.0], [26.0, 4809.222222222223], [27.0, 14035.333333333334], [28.0, 14055.0], [29.0, 7244.6], [30.0, 2035.0], [31.0, 21032.0], [33.0, 21034.0], [32.0, 4978.000000000001], [35.0, 696.5], [34.0, 9837.4], [37.0, 7034.0], [36.0, 3593.9069767441865], [39.0, 7203.5], [38.0, 9578.454545454546], [41.0, 368.55555555555554], [40.0, 8407.75], [43.0, 1031.0], [42.0, 27.875], [45.0, 360.33333333333337], [44.0, 603.5714285714286], [47.0, 28.0], [46.0, 364.26666666666665], [49.0, 2304.090909090909], [48.0, 430.8], [51.0, 531.5], [50.0, 12039.5], [53.0, 29.0], [52.0, 713.0], [55.0, 27.666666666666668], [54.0, 28.666666666666668], [57.0, 2655.9999999999995], [56.0, 99.96428571428571], [59.0, 3038.142857142857], [58.0, 7029.333333333334], [61.0, 4896.8], [60.0, 27.6], [63.0, 27.5], [62.0, 6397.818181818182], [67.0, 27.333333333333332], [66.0, 3459.857142857143], [65.0, 7034.333333333334], [64.0, 2697.666666666667], [71.0, 4230.8], [70.0, 5405.875], [69.0, 1534.5], [68.0, 28.0], [75.0, 29.0], [74.0, 29.0], [73.0, 28.142857142857142], [72.0, 4231.8], [79.0, 5278.25], [78.0, 8535.800000000001], [77.0, 7197.0], [76.0, 3859.0000000000005], [83.0, 27.0], [82.0, 28.0], [81.0, 27.333333333333332], [80.0, 30.333333333333332], [87.0, 1399.478260869565], [86.0, 31.0], [85.0, 258.92857142857144], [84.0, 29.0], [91.0, 2031.7272727272725], [90.0, 28.75], [89.0, 29.333333333333332], [88.0, 530.0], [95.0, 667.8333333333334], [94.0, 139.33333333333334], [93.0, 74.0], [92.0, 48.400000000000006], [99.0, 8518.358974358976], [98.0, 21047.0], [97.0, 15109.09523809524], [96.0, 4367.125], [103.0, 531.8333333333334], [102.0, 4320.357142857143], [101.0, 28.11111111111111], [100.0, 5037.333333333333], [107.0, 532.5], [106.0, 3375.777777777778], [105.0, 4740.1], [104.0, 2236.3], [110.0, 3538.333333333333], [109.0, 2603.857142857143], [108.0, 4700.5], [119.0, 3543.0], [118.0, 29.0], [123.0, 28.0], [122.0, 27.5], [121.0, 36.5], [127.0, 28.0], [126.0, 1032.0], [124.0, 27.5], [135.0, 28.0], [134.0, 27.0], [133.0, 28.25], [131.0, 27.5], [130.0, 28.25], [143.0, 27.8], [142.0, 28.0], [137.0, 28.75], [136.0, 28.0], [151.0, 1031.142857142857], [150.0, 30.714285714285715], [149.0, 141.0], [148.0, 27.6], [147.0, 27.333333333333332], [146.0, 28.0], [145.0, 28.5], [144.0, 28.0], [159.0, 2843.6], [157.0, 7049.0], [156.0, 31.625000000000004], [155.0, 34.0], [154.0, 33.0], [153.0, 1311.4545454545455], [152.0, 39.0], [166.0, 27.0], [165.0, 809.6666666666666], [164.0, 7056.5], [163.0, 1592.2222222222222], [161.0, 3553.0], [160.0, 41.333333333333336], [173.0, 2839.4], [172.0, 2370.6190476190477], [171.0, 7057.0], [169.0, 1031.857142857143], [168.0, 32.0], [183.0, 3543.0], [182.0, 2190.538461538462], [181.0, 27.0], [178.0, 27.4], [177.0, 28.0], [176.0, 28.0], [189.0, 40.0], [188.0, 1432.2000000000003], [187.0, 1432.0], [186.0, 1431.4], [185.0, 1500.1153846153848], [184.0, 1785.25], [214.0, 28.0], [223.0, 28.0], [221.0, 3536.5], [239.0, 30.0], [251.0, 7052.0], [248.0, 28.0], [270.0, 30.0], [293.0, 28.0], [314.0, 28.0], [305.0, 7046.0], [330.0, 27.0], [337.0, 28.0], [336.0, 7081.0], [354.0, 27.0], [383.0, 7051.0], [477.0, 30.0], [504.0, 3040.0], [543.0, 30.0], [574.0, 41.0], [585.0, 29.0], [612.0, 29.0], [650.0, 51.0], [644.0, 37.0], [700.0, 28.0], [678.0, 3535.0], [725.0, 31.0], [717.0, 7045.0], [747.0, 7041.0], [741.0, 3047.0], [863.0, 10906.5], [862.0, 27.0], [861.0, 6780.0625], [860.0, 5704.25], [859.0, 5379.666666666666], [858.0, 7551.0], [857.0, 7372.555555555556], [856.0, 7810.1111111111095], [892.0, 5206.666666666666], [895.0, 1028.0], [881.0, 10374.388888888889], [880.0, 9424.419354838707], [883.0, 3237.8], [882.0, 5151.058823529411], [885.0, 7542.0], [884.0, 8377.88888888889], [894.0, 1034.0], [893.0, 6204.7441860465115], [891.0, 9136.5], [890.0, 4276.904761904763], [889.0, 15051.0], [888.0, 15046.5], [879.0, 6800.153846153846], [865.0, 21024.0], [864.0, 16029.25], [867.0, 27.0], [866.0, 21032.0], [869.0, 14566.153846153846], [868.0, 27.666666666666668], [871.0, 15783.5], [870.0, 10530.0], [878.0, 12351.736842105262], [877.0, 21035.0], [876.0, 12039.5], [875.0, 29.0], [874.0, 13301.684210526317], [873.0, 6254.000000000001], [872.0, 12280.500000000002], [887.0, 8316.90909090909], [886.0, 7549.5], [924.0, 3234.0], [927.0, 28.75], [913.0, 230.2], [912.0, 3540.0], [915.0, 29.5], [914.0, 833.3000000000001], [917.0, 6253.0], [916.0, 5369.0], [926.0, 1076.5909090909088], [925.0, 1090.3529411764705], [923.0, 1721.2307692307693], [922.0, 2928.3947368421054], [921.0, 1486.4242424242427], [920.0, 187.2631578947368], [911.0, 6037.8], [897.0, 478.22222222222223], [896.0, 5742.85], [899.0, 529.5], [898.0, 531.5], [901.0, 414.07692307692315], [900.0, 1037.0], [903.0, 158.0], [902.0, 282.0], [910.0, 27.666666666666668], [909.0, 28.0], [908.0, 278.5], [907.0, 529.5], [906.0, 2700.3333333333335], [905.0, 28.0], [904.0, 532.0], [919.0, 3781.9999999999995], [918.0, 34.0], [956.0, 228.2], [959.0, 532.3], [945.0, 140.55555555555554], [947.0, 305.12499999999994], [946.0, 28.833333333333332], [949.0, 153.0], [948.0, 73.66666666666667], [958.0, 364.44444444444446], [957.0, 197.16666666666666], [955.0, 47.33333333333333], [954.0, 437.875], [953.0, 231.16666666666663], [952.0, 172.14285714285714], [943.0, 527.0], [929.0, 2471.8571428571427], [928.0, 2681.9999999999995], [931.0, 27.0], [930.0, 532.0], [933.0, 154.375], [932.0, 96.125], [935.0, 316.14285714285717], [934.0, 304.99999999999994], [942.0, 1805.0000000000005], [941.0, 30.5], [940.0, 431.8], [939.0, 4433.2], [938.0, 4862.0], [937.0, 1658.6250000000002], [936.0, 475.3333333333333], [951.0, 279.75], [950.0, 28.0], [988.0, 27.0], [991.0, 919.3529411764706], [977.0, 2176.1428571428573], [976.0, 1668.909090909091], [979.0, 36.0], [978.0, 721.6724137931035], [981.0, 4487.142857142858], [980.0, 1324.7857142857142], [990.0, 28.0], [989.0, 2987.649999999999], [987.0, 154.875], [986.0, 195.0], [985.0, 1450.0833333333335], [984.0, 838.9523809523808], [975.0, 7047.5], [961.0, 477.1111111111111], [960.0, 172.0], [963.0, 606.8571428571428], [962.0, 1037.0], [965.0, 396.43999999999994], [964.0, 541.5], [967.0, 364.6666666666667], [966.0, 699.3333333333333], [974.0, 1635.4], [973.0, 534.5], [972.0, 651.2380952380952], [971.0, 318.0], [970.0, 28.333333333333332], [969.0, 183.23076923076923], [968.0, 344.76923076923083], [983.0, 27.666666666666668], [982.0, 1287.0000000000002], [1020.0, 1838.1000000000001], [1023.0, 282.15], [1009.0, 280.0], [1008.0, 1366.5833333333335], [1011.0, 2447.666666666667], [1010.0, 4707.666666666667], [1013.0, 4441.8], [1012.0, 585.5555555555557], [1022.0, 179.3], [1021.0, 2031.2500000000005], [1019.0, 6051.571428571428], [1018.0, 1785.0000000000002], [1017.0, 1881.3076923076928], [1016.0, 1781.5], [1007.0, 1041.7142857142858], [993.0, 852.3636363636365], [992.0, 2178.714285714286], [995.0, 3539.5], [994.0, 365.1111111111111], [997.0, 534.0], [996.0, 1408.625], [999.0, 1397.3636363636363], [998.0, 27.666666666666668], [1006.0, 52.333333333333336], [1005.0, 887.6923076923078], [1004.0, 28.833333333333332], [1003.0, 284.0], [1002.0, 302.00000000000006], [1001.0, 278.25], [1000.0, 2543.25], [1015.0, 5042.571428571428], [1014.0, 3540.5], [1080.0, 245.42857142857142], [1076.0, 212.45454545454547], [1084.0, 1102.4285714285713], [1056.0, 29.0], [1058.0, 6030.75], [1060.0, 4040.5], [1062.0, 1028.0], [1064.0, 3402.5200000000004], [1066.0, 27.0], [1068.0, 1035.142857142857], [1070.0, 28.0], [1086.0, 89.05555555555554], [1082.0, 364.1111111111111], [1078.0, 613.8611111111112], [1074.0, 28.0], [1072.0, 704.0], [1024.0, 1176.4285714285713], [1026.0, 42.0], [1028.0, 1304.4545454545457], [1030.0, 1145.2222222222222], [1032.0, 28.2], [1034.0, 195.66666666666666], [1036.0, 324.52941176470586], [1038.0, 1595.125], [1054.0, 603.2142857142858], [1052.0, 28.666666666666668], [1050.0, 1273.1764705882354], [1048.0, 1197.5], [1046.0, 1783.0833333333333], [1044.0, 3371.0], [1042.0, 2993.4583333333335], [1040.0, 28.0], [1144.0, 1529.0434782608695], [1140.0, 1042.0], [1148.0, 65.25], [1120.0, 266.3529411764706], [1122.0, 29.0], [1124.0, 221.12499999999991], [1126.0, 8070.25], [1128.0, 2351.9999999999995], [1130.0, 2848.5], [1132.0, 843.3571428571424], [1134.0, 27.5], [1150.0, 521.7931034482759], [1146.0, 58.5], [1142.0, 28.0], [1138.0, 640.0], [1136.0, 28.5], [1088.0, 30.0], [1090.0, 294.25], [1092.0, 130.8181818181818], [1094.0, 376.6666666666667], [1096.0, 249.2], [1098.0, 215.88888888888886], [1100.0, 1035.4285714285713], [1102.0, 129.8], [1118.0, 562.0], [1116.0, 30.0], [1114.0, 644.9230769230769], [1112.0, 298.923076923077], [1110.0, 535.0], [1108.0, 532.3333333333334], [1106.0, 28.0], [1104.0, 1032.0], [1208.0, 27.666666666666668], [1204.0, 363.66666666666663], [1212.0, 1606.7142857142858], [1184.0, 637.75], [1186.0, 832.6250000000001], [1188.0, 1726.3333333333333], [1190.0, 40.666666666666664], [1192.0, 33.0], [1194.0, 699.4], [1196.0, 614.9583333333333], [1198.0, 28.0], [1214.0, 529.0], [1210.0, 283.25], [1206.0, 810.2592592592594], [1202.0, 3042.0], [1200.0, 30.0], [1152.0, 1379.1333333333334], [1154.0, 724.5], [1156.0, 64.5], [1158.0, 66.0], [1160.0, 319.17391304347825], [1162.0, 105.33333333333334], [1164.0, 106.89999999999999], [1166.0, 861.25], [1182.0, 202.46153846153848], [1180.0, 556.44], [1178.0, 196.75], [1176.0, 2746.987012987012], [1174.0, 1541.4], [1172.0, 431.15789473684214], [1170.0, 126.875], [1168.0, 1326.5], [1272.0, 123.2], [1268.0, 478.71428571428567], [1276.0, 811.3333333333334], [1248.0, 1702.9090909090908], [1250.0, 297.3333333333333], [1252.0, 74.0], [1254.0, 94.5], [1256.0, 97.0], [1258.0, 95.66666666666667], [1260.0, 210.0], [1262.0, 405.6], [1278.0, 394.34999999999997], [1274.0, 279.95], [1270.0, 120.2], [1266.0, 403.8571428571429], [1264.0, 1227.1111111111109], [1216.0, 173.42857142857144], [1218.0, 353.00000000000006], [1220.0, 926.0], [1222.0, 835.4], [1224.0, 30.5], [1226.0, 672.64], [1228.0, 388.42857142857144], [1230.0, 36.0], [1246.0, 1065.0], [1244.0, 2064.25], [1242.0, 44.0], [1240.0, 30.0], [1238.0, 387.9285714285714], [1236.0, 864.8333333333334], [1234.0, 47.4], [1232.0, 377.22222222222223], [1336.0, 371.0], [1332.0, 346.20000000000005], [1340.0, 408.5], [1312.0, 716.9285714285714], [1314.0, 896.625], [1316.0, 348.8421052631579], [1318.0, 410.90909090909093], [1320.0, 332.3636363636364], [1322.0, 683.5999999999999], [1324.0, 414.66666666666674], [1326.0, 291.3888888888889], [1342.0, 474.6896551724138], [1338.0, 777.4583333333334], [1334.0, 1399.0000000000005], [1330.0, 203.8], [1328.0, 198.0], [1280.0, 552.2], [1282.0, 648.5], [1284.0, 572.5925925925928], [1286.0, 577.0], [1288.0, 570.6785714285713], [1290.0, 308.125], [1292.0, 601.6206896551726], [1294.0, 1199.2], [1310.0, 660.5151515151516], [1308.0, 626.0526315789473], [1306.0, 1250.7826086956522], [1304.0, 413.70000000000005], [1302.0, 622.4545454545455], [1298.0, 1140.1818181818178], [1296.0, 385.6], [1400.0, 647.33679864704], [1384.0, 998.9054054054054], [1376.0, 694.5084745762713], [1378.0, 1204.8656716417909], [1380.0, 695.4999999999999], [1382.0, 709.0120481927712], [1386.0, 773.3241379310344], [1388.0, 336.375], [1390.0, 791.3793103448274], [1402.0, 508.0], [1398.0, 1469.5365853658539], [1396.0, 807.413165266107], [1394.0, 616.5500000000001], [1392.0, 337.16666666666663], [1344.0, 945.909090909091], [1346.0, 396.0], [1348.0, 598.5], [1350.0, 942.3125000000001], [1352.0, 382.75], [1354.0, 867.5714285714286], [1356.0, 772.75], [1358.0, 842.5], [1374.0, 540.1875], [1372.0, 873.3636363636363], [1370.0, 510.4133333333332], [1368.0, 962.5], [1366.0, 372.72413793103453], [1364.0, 884.7916666666667], [1362.0, 382.0], [1360.0, 1822.1875], [1464.0, 512.0], [1440.0, 662.875], [1428.0, 613.3416666666664], [1408.0, 508.125], [1530.0, 37.5], [1482.0, 59.833333333333336], [1480.0, 67.66666666666667], [1488.0, 58.333333333333336], [1500.0, 36.0], [1504.0, 36.666666666666664], [1534.0, 41.0], [1532.0, 40.16666666666667], [1526.0, 35.0], [1524.0, 33.0], [1512.0, 38.666666666666664], [1544.0, 50.333333333333336], [1540.0, 47.0], [1566.0, 51.5], [1562.0, 51.0], [1548.0, 51.0], [1550.0, 53.714285714285715], [1570.0, 50.0], [1598.0, 138.0], [1596.0, 134.0], [1594.0, 133.0], [1592.0, 125.96923076923079], [1590.0, 95.0], [1574.0, 117.85714285714286], [1576.0, 553.0], [1578.0, 53.0], [1582.0, 56.0], [1554.0, 50.0], [1558.0, 51.714285714285715], [1556.0, 540.0], [1610.0, 142.0], [1636.0, 150.5], [1614.0, 145.0], [1612.0, 142.5], [1608.0, 147.5], [1606.0, 138.0], [1602.0, 137.66666666666666], [1600.0, 136.0], [1604.0, 138.0], [1628.0, 149.0], [1626.0, 149.0], [1624.0, 148.0], [1620.0, 148.0], [1616.0, 148.0], [1632.0, 149.0], [1642.0, 154.0], [1640.0, 155.33333333333334], [1638.0, 164.0], [1676.0, 114.3], [1682.0, 113.5], [1688.0, 115.0], [1780.0, 88.6], [1788.0, 95.5], [1770.0, 81.25], [1772.0, 84.38461538461539], [1776.0, 92.05714285714286], [1800.0, 106.0], [1794.0, 103.22222222222223], [1822.0, 128.125], [1796.0, 103.71428571428571], [1802.0, 108.61538461538461], [1842.0, 110.0], [1846.0, 105.0], [1848.0, 102.5], [1852.0, 158.33333333333331], [1854.0, 105.90909090909092], [1824.0, 133.0], [1830.0, 135.0], [1832.0, 136.125], [1834.0, 138.0], [1838.0, 112.16666666666667], [1810.0, 116.0], [1814.0, 120.0], [1864.0, 96.74999999999999], [1870.0, 101.0], [1856.0, 91.0], [1886.0, 112.71428571428571], [1882.0, 109.57142857142857], [1860.0, 92.5], [1866.0, 98.6], [1868.0, 99.5], [1904.0, 127.5], [1908.0, 132.0], [1912.0, 135.5], [1914.0, 137.0], [1918.0, 233.75], [1888.0, 515.0], [1898.0, 121.5], [1902.0, 125.0], [1970.0, 180.0], [1920.0, 143.0], [1922.0, 143.0], [1930.0, 150.0], [1974.0, 186.75], [1982.0, 193.0], [1958.0, 178.0], [1962.0, 181.6], [1966.0, 185.0], [1942.0, 162.0], [1950.0, 171.0], [1990.0, 204.0], [1984.0, 202.5], [2014.0, 257.0], [2012.0, 257.0], [2006.0, 208.3], [1986.0, 201.66666666666666], [1998.0, 201.0], [2046.0, 261.0], [2040.0, 269.0], [2042.0, 271.0], [2034.0, 260.0], [2018.0, 257.0], [2004.0, 200.0], [2100.0, 508.2532150776052], [2096.0, 244.0], [2048.0, 261.0], [2092.0, 252.5], [2088.0, 267.5], [2052.0, 269.0], [2076.0, 255.4], [2097.0, 244.0], [2061.0, 263.0], [2085.0, 267.0], [2065.0, 255.5], [1085.0, 256.5555555555555], [1087.0, 833.4], [1057.0, 1283.75], [1059.0, 4037.5], [1061.0, 360.66666666666663], [1063.0, 2538.7000000000003], [1065.0, 28.0], [1067.0, 532.1666666666666], [1069.0, 833.6], [1071.0, 923.5555555555555], [1083.0, 31.5], [1081.0, 30.125], [1079.0, 195.66666666666669], [1077.0, 30.0], [1075.0, 535.6666666666667], [1073.0, 859.1764705882354], [1055.0, 4192.076923076924], [1025.0, 1087.8947368421052], [1027.0, 1453.0], [1029.0, 27.0], [1031.0, 1476.1428571428569], [1033.0, 1520.4390243902449], [1035.0, 316.49999999999994], [1037.0, 1103.8409090909095], [1039.0, 1032.7142857142856], [1053.0, 6806.307692307691], [1051.0, 2034.7500000000002], [1049.0, 28.0], [1047.0, 2368.333333333333], [1045.0, 1783.75], [1043.0, 27.0], [1041.0, 1310.2777777777778], [1149.0, 63.0], [1151.0, 467.71428571428567], [1121.0, 1532.0], [1123.0, 27.5], [1125.0, 1230.1666666666667], [1129.0, 3105.666666666667], [1131.0, 1598.558823529412], [1133.0, 633.4666666666667], [1135.0, 29.0], [1147.0, 61.0], [1145.0, 62.0], [1143.0, 633.9999999999998], [1141.0, 1041.5], [1139.0, 944.1], [1137.0, 954.6216216216216], [1119.0, 403.44444444444446], [1089.0, 309.1818181818182], [1091.0, 630.9166666666666], [1093.0, 538.75], [1097.0, 1551.0], [1099.0, 28.0], [1101.0, 29.0], [1103.0, 588.3333333333334], [1117.0, 475.34375], [1115.0, 29.0], [1113.0, 28.666666666666668], [1111.0, 1031.0], [1109.0, 27.333333333333332], [1107.0, 230.8], [1105.0, 28.25], [1213.0, 605.6428571428571], [1215.0, 416.1538461538461], [1187.0, 524.361111111111], [1189.0, 40.0], [1191.0, 802.7142857142856], [1193.0, 1091.8918918918923], [1195.0, 1559.7017543859652], [1197.0, 871.8000000000002], [1199.0, 29.22222222222222], [1211.0, 1235.8000000000002], [1209.0, 400.1578947368421], [1207.0, 933.4], [1205.0, 29.25], [1203.0, 172.14285714285714], [1201.0, 1373.2222222222222], [1183.0, 613.1999999999999], [1153.0, 715.8333333333333], [1155.0, 351.85714285714283], [1157.0, 64.25], [1159.0, 193.75], [1161.0, 103.25], [1163.0, 107.5], [1165.0, 273.5], [1167.0, 108.0], [1181.0, 198.42857142857144], [1179.0, 157.33333333333334], [1177.0, 1422.6857142857143], [1175.0, 1218.1176470588234], [1173.0, 1050.32], [1171.0, 123.25], [1169.0, 6385.75], [1277.0, 344.4666666666667], [1279.0, 148.5], [1249.0, 568.5], [1251.0, 78.0], [1253.0, 223.9824561403509], [1255.0, 296.4], [1257.0, 98.0], [1259.0, 602.5], [1261.0, 230.5217391304348], [1263.0, 234.62500000000003], [1275.0, 283.3703703703704], [1273.0, 524.5], [1271.0, 290.33333333333337], [1269.0, 120.5], [1267.0, 308.56250000000006], [1265.0, 364.625], [1247.0, 1231.3333333333333], [1217.0, 369.0], [1219.0, 460.0], [1221.0, 31.0], [1223.0, 528.5], [1225.0, 782.75], [1227.0, 1112.9199999999996], [1229.0, 34.0], [1231.0, 604.1428571428572], [1245.0, 1063.0], [1243.0, 53.333333333333336], [1241.0, 419.8461538461538], [1239.0, 154.5], [1237.0, 3232.8], [1235.0, 560.157894736842], [1233.0, 552.5], [1341.0, 411.5333333333334], [1343.0, 399.0], [1313.0, 376.5384615384616], [1317.0, 703.75], [1319.0, 1251.8947368421052], [1321.0, 671.5200000000001], [1323.0, 423.9333333333334], [1325.0, 993.4545454545454], [1327.0, 312.4117647058823], [1339.0, 1187.3333333333333], [1337.0, 618.3541666666666], [1335.0, 373.3333333333333], [1333.0, 838.3137254901959], [1331.0, 764.730769230769], [1329.0, 199.6], [1311.0, 758.2307692307693], [1281.0, 244.8], [1283.0, 308.59375], [1285.0, 671.8749999999999], [1287.0, 173.0], [1289.0, 295.55555555555554], [1293.0, 652.3076923076924], [1295.0, 332.0], [1309.0, 1053.9], [1307.0, 1036.625], [1305.0, 1163.0], [1303.0, 320.6923076923077], [1301.0, 564.7391304347826], [1299.0, 476.0], [1297.0, 611.6842105263158], [1401.0, 504.0], [1403.0, 514.1818181818181], [1377.0, 366.33333333333337], [1379.0, 948.4999999999999], [1381.0, 1114.5714285714284], [1383.0, 1197.2891566265066], [1385.0, 1147.2777777777778], [1387.0, 614.2478632478629], [1389.0, 391.05000000000007], [1391.0, 1057.4857142857143], [1399.0, 946.685814771395], [1397.0, 1042.7660818713446], [1395.0, 1141.264705882353], [1393.0, 582.5670995670993], [1375.0, 789.7027027027026], [1345.0, 396.8], [1347.0, 1072.111111111111], [1349.0, 570.3125], [1351.0, 431.3636363636364], [1353.0, 2391.3333333333335], [1355.0, 642.25], [1357.0, 426.6444444444444], [1359.0, 373.0], [1373.0, 462.77777777777777], [1371.0, 665.8660714285712], [1369.0, 559.0645161290324], [1367.0, 356.5], [1365.0, 464.92307692307696], [1363.0, 1046.027027027027], [1361.0, 384.3333333333333], [1429.0, 539.764705882353], [1419.0, 504.1111111111111], [1481.0, 46.666666666666664], [1483.0, 50.72727272727273], [1479.0, 44.5], [1489.0, 55.0], [1491.0, 73.0], [1493.0, 60.875], [1477.0, 514.6428571428572], [1533.0, 42.0], [1527.0, 39.0], [1529.0, 293.64705882352945], [1525.0, 35.0], [1523.0, 35.4], [1505.0, 36.0], [1507.0, 36.0], [1511.0, 36.0], [1589.0, 78.0], [1551.0, 209.83333333333331], [1537.0, 45.0], [1567.0, 546.0], [1561.0, 544.0], [1563.0, 48.57142857142857], [1597.0, 334.12500000000006], [1595.0, 136.0], [1591.0, 95.0], [1587.0, 71.0], [1571.0, 47.0], [1573.0, 301.0], [1577.0, 421.5], [1581.0, 56.0], [1583.0, 65.77777777777777], [1555.0, 49.0], [1559.0, 50.0], [1651.0, 116.0], [1641.0, 157.0], [1647.0, 158.0], [1643.0, 156.33333333333334], [1615.0, 145.0], [1613.0, 143.0], [1611.0, 144.0], [1609.0, 144.0], [1607.0, 139.66666666666666], [1605.0, 139.0], [1601.0, 136.0], [1631.0, 525.0], [1627.0, 149.0], [1625.0, 274.0], [1619.0, 147.0], [1635.0, 152.0], [1639.0, 157.0], [1679.0, 111.66666666666667], [1687.0, 116.5], [1689.0, 116.0], [1677.0, 518.3333333333334], [1767.0, 110.26666666666668], [1769.0, 88.0], [1777.0, 284.84615384615387], [1779.0, 92.88888888888889], [1783.0, 91.0], [1787.0, 95.0], [1853.0, 146.74], [1819.0, 124.33333333333333], [1795.0, 103.0], [1849.0, 93.83333333333334], [1855.0, 93.25], [1829.0, 134.2857142857143], [1831.0, 136.0], [1835.0, 133.12500000000003], [1837.0, 124.0], [1839.0, 147.11111111111111], [1809.0, 118.10000000000002], [1863.0, 96.5], [1885.0, 113.0], [1883.0, 110.5], [1875.0, 105.83333333333333], [1879.0, 107.0], [1857.0, 92.5], [1871.0, 102.0], [1911.0, 135.0], [1915.0, 137.5], [1919.0, 510.1666666666667], [1897.0, 121.0], [1903.0, 127.0], [1929.0, 149.875], [1921.0, 144.0], [1969.0, 184.4], [1973.0, 183.0], [1977.0, 183.0], [1981.0, 186.6], [1983.0, 202.0], [1937.0, 158.0], [1941.0, 162.0], [1987.0, 203.0], [2013.0, 256.5], [2009.0, 250.0423728813559], [2011.0, 255.5], [2005.0, 200.0], [1991.0, 441.1428571428572], [1993.0, 204.0], [1997.0, 198.13333333333335], [2017.0, 257.0], [2047.0, 261.0], [2039.0, 270.0], [2025.0, 259.5], [2027.0, 260.0], [2001.0, 196.0], [2098.0, 244.0], [2094.0, 252.33333333333334], [2086.0, 266.0], [2058.0, 262.0], [2054.0, 505.0], [2074.0, 264.0], [2091.0, 267.0], [2087.0, 266.0], [2055.0, 508.0], [2075.0, 264.0], [2079.0, 271.0], [1.0, 21042.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1375.7751558835316, 862.4920199073296]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[1403.0, 13597.0], [1402.0, 13035.0], [1401.0, 13042.0], [1464.0, 12255.913043478262], [1441.0, 12167.0], [1440.0, 12174.545454545456], [1429.0, 12180.0], [1428.0, 13292.888888888889], [1419.0, 13344.545454545454], [1408.0, 13295.8], [1526.0, 12473.833333333334], [1529.0, 12462.0], [1528.0, 12403.25], [1527.0, 12592.5], [1525.0, 12713.0], [1524.0, 12442.0], [1523.0, 12405.0], [1522.0, 12540.6], [1521.0, 12572.333333333334], [1477.0, 12493.23076923077], [1594.0, 12458.833333333334], [1597.0, 12457.500000000002], [1582.0, 12475.666666666666], [1596.0, 12359.5], [1595.0, 12600.8], [1593.0, 12348.181818181818], [1592.0, 12537.25], [1591.0, 12453.833333333334], [1590.0, 12475.75], [1589.0, 12326.0], [1588.0, 12423.5], [1587.0, 12757.0], [1586.0, 12403.0], [1585.0, 12496.5], [1673.0, 12447.0], [1677.0, 12436.349999999999], [1676.0, 12500.0], [1675.0, 12468.0], [1674.0, 12360.11111111111], [1672.0, 12301.0], [1671.0, 12465.538461538461], [1670.0, 12523.0], [1669.0, 12202.0], [1668.0, 12464.333333333332], [1667.0, 12548.0], [1666.0, 12121.0], [1665.0, 12123.0], [1772.0, 12445.6], [1777.0, 12367.782608695652], [1776.0, 12477.666666666666], [1775.0, 12376.571428571428], [1774.0, 12414.0], [1773.0, 12319.5], [1771.0, 12333.8], [1770.0, 12499.333333333334], [1769.0, 12217.666666666666], [1767.0, 12437.75], [1766.0, 12504.833333333334], [1916.0, 12363.5], [1919.0, 12429.812499999998], [1889.0, 12545.0], [1894.0, 12544.0], [1892.0, 12233.0], [1897.0, 12473.0], [1896.0, 12429.625], [1899.0, 12533.0], [1898.0, 12301.6], [1901.0, 12656.0], [1900.0, 12379.555555555555], [1903.0, 12443.375], [1902.0, 12580.8], [1918.0, 12439.75], [1917.0, 12520.0], [1915.0, 12353.4], [1914.0, 12412.4], [1913.0, 12477.5], [1912.0, 12419.777777777777], [1911.0, 12490.0], [1910.0, 12427.0], [1909.0, 12353.0], [1908.0, 12577.0], [1907.0, 12440.666666666666], [1906.0, 12487.4], [1905.0, 12469.333333333332], [1904.0, 12527.75], [1983.0, 12698.0], [1991.0, 12359.846153846156], [1990.0, 12446.0], [1989.0, 12444.42857142857], [1988.0, 12401.0], [1987.0, 12477.5], [1986.0, 12426.9], [1985.0, 12659.0], [1984.0, 12465.5], [2090.0, 12127.333333333334], [2094.0, 12389.666666666666], [2100.0, 12445.894736842107], [2059.0, 12095.0], [2062.0, 12452.0], [2060.0, 12351.0], [2066.0, 12533.0], [2063.0, 12220.0], [2069.0, 12218.5], [2068.0, 12359.0], [2071.0, 12406.0], [2070.0, 12327.0], [2073.0, 12119.0], [2072.0, 12642.0], [2076.0, 12248.0], [2074.0, 12228.0], [2078.0, 12416.0], [2077.0, 12636.5], [2096.0, 12107.0], [2095.0, 12280.0], [2093.0, 12464.0], [2092.0, 12357.57142857143], [2091.0, 12262.333333333332], [2089.0, 12504.0], [2088.0, 12224.5], [2087.0, 12419.5], [2086.0, 12401.2], [2085.0, 12688.0], [2084.0, 12309.25], [2083.0, 12494.9], [2082.0, 12238.3], [2081.0, 12419.5], [2080.0, 12531.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1788.0428571428565, 12449.317142857135]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61758098E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758098E12, 0.0], [1.61758104E12, 0.0], [1.6175811E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61758098E12, 0.0], [1.61758104E12, 0.0], [1.6175811E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6175811E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 776.1625608496843, "minX": 1.61758098E12, "maxY": 60092.12142857141, "series": [{"data": [[1.61758104E12, 60092.12142857141]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758098E12, 776.1625608496843], [1.61758104E12, 3313.191304347825], [1.6175811E12, 13039.468750000002]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758098E12, 12449.317142857135]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6175811E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758098E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758104E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758098E12, 0.0], [1.61758104E12, 0.0], [1.6175811E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758098E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6175811E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758098E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758104E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758098E12, 0.0], [1.61758104E12, 0.0], [1.6175811E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758098E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6175811E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61758098E12, "maxY": 61115.0, "series": [{"data": [[1.61758098E12, 15503.0], [1.61758104E12, 61115.0], [1.6175811E12, 15080.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61758098E12, 1459.0], [1.61758104E12, 60039.0], [1.6175811E12, 15070.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61758098E12, 7385.990000000002], [1.61758104E12, 61041.0], [1.6175811E12, 15080.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61758098E12, 3049.0], [1.61758104E12, 60068.6], [1.6175811E12, 15080.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61758098E12, 26.0], [1.61758104E12, 26.0], [1.6175811E12, 27.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61758098E12, 464.0], [1.61758104E12, 3034.0], [1.6175811E12, 28.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6175811E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 60030.0, "series": [{"data": [[2.0, 28.5], [562.0, 110.0], [580.0, 98.0], [699.0, 525.0], [739.0, 104.0], [744.0, 500.0], [750.0, 343.0], [792.0, 483.0], [787.0, 460.0], [3.0, 28.0], [826.0, 549.0], [805.0, 483.0], [800.0, 402.0], [844.0, 558.0], [860.0, 494.0], [847.0, 386.0], [846.0, 505.0], [864.0, 427.0], [914.0, 385.0], [907.0, 184.0], [1016.0, 570.0], [1033.0, 542.0], [1030.0, 604.0], [1087.0, 351.0], [4.0, 38.0], [1193.0, 586.0], [1200.0, 436.0], [1264.0, 416.0], [1271.0, 537.0], [1233.0, 530.0], [1266.0, 507.0], [1249.0, 534.0], [1337.0, 450.0], [1334.0, 513.0], [5.0, 29.0], [6.0, 28.0], [7.0, 28.0], [1870.0, 543.0], [9.0, 28.0], [10.0, 1042.0], [11.0, 29.0], [13.0, 31.0], [15.0, 28.0], [16.0, 29.0], [17.0, 29.0], [18.0, 34039.5], [19.0, 28.0], [22.0, 28.0], [24.0, 45.5], [29.0, 1034.0], [30.0, 30.0], [37.0, 28.0], [41.0, 1036.0], [52.0, 1028.0], [55.0, 28.0], [56.0, 29.0], [61.0, 28.0], [66.0, 1029.5], [68.0, 30.0], [73.0, 1028.0], [81.0, 29.0], [80.0, 29.0], [114.0, 28.5], [137.0, 29.0], [140.0, 29.0], [136.0, 28.0], [157.0, 29.0], [174.0, 29.5], [190.0, 28.0], [203.0, 29.0], [250.0, 30.0], [255.0, 30.0], [1.0, 15060.0], [491.0, 7046.0], [499.0, 46.0], [504.0, 33.0], [503.0, 60030.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21041.5], [37.0, 21026.0], [3.0, 21041.0], [52.0, 21032.0], [56.0, 21045.0], [61.0, 21030.0], [4.0, 21036.0], [68.0, 21028.0], [73.0, 21032.0], [81.0, 21031.0], [5.0, 21042.0], [6.0, 21033.5], [114.0, 21036.0], [7.0, 21040.5], [140.0, 21037.5], [136.0, 21031.0], [9.0, 21043.0], [157.0, 21046.0], [11.0, 21032.0], [190.0, 21035.0], [15.0, 21029.0], [250.0, 21025.0], [1.0, 21045.0], [16.0, 21034.0], [17.0, 21042.0], [19.0, 21037.0], [22.0, 21047.0], [24.0, 21048.5], [30.0, 21035.0], [504.0, 21052.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1870.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [562.0, 0.0], [580.0, 0.0], [699.0, 0.0], [739.0, 0.0], [744.0, 0.0], [750.0, 0.0], [792.0, 0.0], [787.0, 0.0], [3.0, 0.0], [826.0, 0.0], [805.0, 0.0], [800.0, 0.0], [844.0, 0.0], [860.0, 0.0], [847.0, 0.0], [846.0, 0.0], [864.0, 0.0], [914.0, 0.0], [907.0, 0.0], [1016.0, 0.0], [1033.0, 0.0], [1030.0, 0.0], [1087.0, 0.0], [4.0, 0.0], [1193.0, 0.0], [1200.0, 0.0], [1264.0, 0.0], [1271.0, 0.0], [1233.0, 0.0], [1266.0, 0.0], [1249.0, 0.0], [1337.0, 0.0], [1334.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [1870.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [13.0, 0.0], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [22.0, 0.0], [24.0, 0.0], [29.0, 0.0], [30.0, 0.0], [37.0, 0.0], [41.0, 0.0], [52.0, 0.0], [55.0, 0.0], [56.0, 0.0], [61.0, 0.0], [66.0, 0.0], [68.0, 0.0], [73.0, 0.0], [81.0, 0.0], [80.0, 0.0], [114.0, 0.0], [137.0, 0.0], [140.0, 0.0], [136.0, 0.0], [157.0, 0.0], [174.0, 0.0], [190.0, 0.0], [203.0, 0.0], [250.0, 0.0], [255.0, 0.0], [1.0, 0.0], [491.0, 0.0], [499.0, 0.0], [504.0, 0.0], [503.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [37.0, 0.0], [3.0, 0.0], [52.0, 0.0], [56.0, 0.0], [61.0, 0.0], [4.0, 0.0], [68.0, 0.0], [73.0, 0.0], [81.0, 0.0], [5.0, 0.0], [6.0, 0.0], [114.0, 0.0], [7.0, 0.0], [140.0, 0.0], [136.0, 0.0], [9.0, 0.0], [157.0, 0.0], [11.0, 0.0], [190.0, 0.0], [15.0, 0.0], [250.0, 0.0], [1.0, 0.0], [16.0, 0.0], [17.0, 0.0], [19.0, 0.0], [22.0, 0.0], [24.0, 0.0], [30.0, 0.0], [504.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1870.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.61758092E12, "maxY": 579.1833333333333, "series": [{"data": [[1.61758098E12, 579.1833333333333], [1.61758104E12, 14.866666666666667], [1.6175811E12, 0.31666666666666665], [1.61758092E12, 11.666666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6175811E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.61758098E12, "maxY": 574.6, "series": [{"data": [[1.61758098E12, 574.6], [1.61758104E12, 26.883333333333333], [1.6175811E12, 0.23333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61758098E12, 1.9833333333333334], [1.61758104E12, 2.033333333333333], [1.6175811E12, 0.3]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6175811E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.61758098E12, "maxY": 562.9333333333333, "series": [{"data": [[1.61758098E12, 11.666666666666666]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61758104E12, 11.666666666666666]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.61758098E12, 562.9333333333333], [1.61758104E12, 15.216666666666667], [1.6175811E12, 0.23333333333333334]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61758098E12, 1.9833333333333334], [1.61758104E12, 2.033333333333333], [1.6175811E12, 0.3]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6175811E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.61758098E12, "maxY": 574.6, "series": [{"data": [[1.61758098E12, 574.6], [1.61758104E12, 26.883333333333333], [1.6175811E12, 0.23333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61758098E12, 1.9833333333333334], [1.61758104E12, 2.033333333333333], [1.6175811E12, 0.3]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6175811E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

