/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 60074.0, "series": [{"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 26.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 28.0], [5.1, 28.0], [5.2, 28.0], [5.3, 28.0], [5.4, 28.0], [5.5, 28.0], [5.6, 28.0], [5.7, 28.0], [5.8, 28.0], [5.9, 28.0], [6.0, 28.0], [6.1, 28.0], [6.2, 28.0], [6.3, 28.0], [6.4, 28.0], [6.5, 28.0], [6.6, 28.0], [6.7, 29.0], [6.8, 29.0], [6.9, 29.0], [7.0, 29.0], [7.1, 29.0], [7.2, 29.0], [7.3, 29.0], [7.4, 29.0], [7.5, 29.0], [7.6, 29.0], [7.7, 29.0], [7.8, 29.0], [7.9, 29.0], [8.0, 29.0], [8.1, 29.0], [8.2, 29.0], [8.3, 29.0], [8.4, 29.0], [8.5, 29.0], [8.6, 29.0], [8.7, 30.0], [8.8, 30.0], [8.9, 30.0], [9.0, 30.0], [9.1, 30.0], [9.2, 30.0], [9.3, 30.0], [9.4, 30.0], [9.5, 30.0], [9.6, 30.0], [9.7, 30.0], [9.8, 30.0], [9.9, 30.0], [10.0, 30.0], [10.1, 31.0], [10.2, 31.0], [10.3, 31.0], [10.4, 31.0], [10.5, 31.0], [10.6, 31.0], [10.7, 31.0], [10.8, 31.0], [10.9, 31.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 32.0], [11.5, 32.0], [11.6, 32.0], [11.7, 33.0], [11.8, 33.0], [11.9, 33.0], [12.0, 33.0], [12.1, 33.0], [12.2, 33.0], [12.3, 34.0], [12.4, 34.0], [12.5, 34.0], [12.6, 34.0], [12.7, 35.0], [12.8, 35.0], [12.9, 35.0], [13.0, 35.0], [13.1, 35.0], [13.2, 36.0], [13.3, 36.0], [13.4, 36.0], [13.5, 36.0], [13.6, 36.0], [13.7, 37.0], [13.8, 37.0], [13.9, 37.0], [14.0, 37.0], [14.1, 37.0], [14.2, 38.0], [14.3, 38.0], [14.4, 38.0], [14.5, 38.0], [14.6, 39.0], [14.7, 39.0], [14.8, 39.0], [14.9, 39.0], [15.0, 40.0], [15.1, 40.0], [15.2, 40.0], [15.3, 40.0], [15.4, 41.0], [15.5, 41.0], [15.6, 41.0], [15.7, 41.0], [15.8, 41.0], [15.9, 42.0], [16.0, 42.0], [16.1, 42.0], [16.2, 42.0], [16.3, 43.0], [16.4, 43.0], [16.5, 43.0], [16.6, 44.0], [16.7, 44.0], [16.8, 44.0], [16.9, 45.0], [17.0, 45.0], [17.1, 45.0], [17.2, 46.0], [17.3, 46.0], [17.4, 46.0], [17.5, 46.0], [17.6, 47.0], [17.7, 47.0], [17.8, 48.0], [17.9, 48.0], [18.0, 49.0], [18.1, 49.0], [18.2, 50.0], [18.3, 50.0], [18.4, 51.0], [18.5, 51.0], [18.6, 51.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 52.0], [19.1, 53.0], [19.2, 53.0], [19.3, 53.0], [19.4, 53.0], [19.5, 54.0], [19.6, 54.0], [19.7, 54.0], [19.8, 54.0], [19.9, 55.0], [20.0, 55.0], [20.1, 55.0], [20.2, 55.0], [20.3, 55.0], [20.4, 55.0], [20.5, 55.0], [20.6, 56.0], [20.7, 56.0], [20.8, 56.0], [20.9, 56.0], [21.0, 56.0], [21.1, 56.0], [21.2, 56.0], [21.3, 56.0], [21.4, 56.0], [21.5, 57.0], [21.6, 57.0], [21.7, 57.0], [21.8, 57.0], [21.9, 57.0], [22.0, 57.0], [22.1, 57.0], [22.2, 57.0], [22.3, 58.0], [22.4, 58.0], [22.5, 58.0], [22.6, 58.0], [22.7, 58.0], [22.8, 58.0], [22.9, 58.0], [23.0, 58.0], [23.1, 58.0], [23.2, 59.0], [23.3, 59.0], [23.4, 59.0], [23.5, 59.0], [23.6, 59.0], [23.7, 59.0], [23.8, 59.0], [23.9, 59.0], [24.0, 59.0], [24.1, 60.0], [24.2, 60.0], [24.3, 60.0], [24.4, 60.0], [24.5, 60.0], [24.6, 60.0], [24.7, 60.0], [24.8, 60.0], [24.9, 60.0], [25.0, 61.0], [25.1, 61.0], [25.2, 61.0], [25.3, 61.0], [25.4, 61.0], [25.5, 61.0], [25.6, 61.0], [25.7, 61.0], [25.8, 61.0], [25.9, 62.0], [26.0, 62.0], [26.1, 62.0], [26.2, 62.0], [26.3, 62.0], [26.4, 62.0], [26.5, 62.0], [26.6, 62.0], [26.7, 62.0], [26.8, 62.0], [26.9, 63.0], [27.0, 63.0], [27.1, 63.0], [27.2, 63.0], [27.3, 63.0], [27.4, 63.0], [27.5, 63.0], [27.6, 64.0], [27.7, 64.0], [27.8, 64.0], [27.9, 64.0], [28.0, 64.0], [28.1, 64.0], [28.2, 64.0], [28.3, 64.0], [28.4, 65.0], [28.5, 65.0], [28.6, 65.0], [28.7, 65.0], [28.8, 65.0], [28.9, 65.0], [29.0, 65.0], [29.1, 65.0], [29.2, 65.0], [29.3, 66.0], [29.4, 66.0], [29.5, 66.0], [29.6, 66.0], [29.7, 66.0], [29.8, 66.0], [29.9, 66.0], [30.0, 67.0], [30.1, 67.0], [30.2, 67.0], [30.3, 67.0], [30.4, 67.0], [30.5, 68.0], [30.6, 68.0], [30.7, 68.0], [30.8, 68.0], [30.9, 68.0], [31.0, 69.0], [31.1, 69.0], [31.2, 69.0], [31.3, 69.0], [31.4, 70.0], [31.5, 70.0], [31.6, 70.0], [31.7, 70.0], [31.8, 71.0], [31.9, 71.0], [32.0, 71.0], [32.1, 72.0], [32.2, 72.0], [32.3, 72.0], [32.4, 72.0], [32.5, 73.0], [32.6, 73.0], [32.7, 73.0], [32.8, 74.0], [32.9, 74.0], [33.0, 74.0], [33.1, 75.0], [33.2, 75.0], [33.3, 76.0], [33.4, 76.0], [33.5, 77.0], [33.6, 77.0], [33.7, 77.0], [33.8, 78.0], [33.9, 78.0], [34.0, 79.0], [34.1, 79.0], [34.2, 80.0], [34.3, 80.0], [34.4, 81.0], [34.5, 81.0], [34.6, 82.0], [34.7, 82.0], [34.8, 83.0], [34.9, 83.0], [35.0, 84.0], [35.1, 84.0], [35.2, 85.0], [35.3, 86.0], [35.4, 86.0], [35.5, 87.0], [35.6, 88.0], [35.7, 88.0], [35.8, 89.0], [35.9, 89.0], [36.0, 90.0], [36.1, 90.0], [36.2, 91.0], [36.3, 91.0], [36.4, 91.0], [36.5, 92.0], [36.6, 92.0], [36.7, 92.0], [36.8, 93.0], [36.9, 93.0], [37.0, 93.0], [37.1, 94.0], [37.2, 94.0], [37.3, 94.0], [37.4, 95.0], [37.5, 95.0], [37.6, 96.0], [37.7, 96.0], [37.8, 96.0], [37.9, 96.0], [38.0, 97.0], [38.1, 97.0], [38.2, 97.0], [38.3, 97.0], [38.4, 97.0], [38.5, 98.0], [38.6, 98.0], [38.7, 98.0], [38.8, 98.0], [38.9, 98.0], [39.0, 98.0], [39.1, 99.0], [39.2, 99.0], [39.3, 99.0], [39.4, 99.0], [39.5, 100.0], [39.6, 100.0], [39.7, 100.0], [39.8, 100.0], [39.9, 100.0], [40.0, 100.0], [40.1, 100.0], [40.2, 101.0], [40.3, 101.0], [40.4, 101.0], [40.5, 101.0], [40.6, 101.0], [40.7, 101.0], [40.8, 101.0], [40.9, 101.0], [41.0, 101.0], [41.1, 102.0], [41.2, 102.0], [41.3, 102.0], [41.4, 102.0], [41.5, 102.0], [41.6, 102.0], [41.7, 102.0], [41.8, 103.0], [41.9, 103.0], [42.0, 103.0], [42.1, 103.0], [42.2, 103.0], [42.3, 103.0], [42.4, 104.0], [42.5, 104.0], [42.6, 104.0], [42.7, 104.0], [42.8, 104.0], [42.9, 104.0], [43.0, 104.0], [43.1, 104.0], [43.2, 105.0], [43.3, 105.0], [43.4, 105.0], [43.5, 105.0], [43.6, 105.0], [43.7, 105.0], [43.8, 105.0], [43.9, 105.0], [44.0, 106.0], [44.1, 106.0], [44.2, 106.0], [44.3, 106.0], [44.4, 106.0], [44.5, 107.0], [44.6, 107.0], [44.7, 107.0], [44.8, 107.0], [44.9, 108.0], [45.0, 108.0], [45.1, 108.0], [45.2, 108.0], [45.3, 108.0], [45.4, 108.0], [45.5, 108.0], [45.6, 109.0], [45.7, 109.0], [45.8, 109.0], [45.9, 109.0], [46.0, 109.0], [46.1, 109.0], [46.2, 109.0], [46.3, 110.0], [46.4, 110.0], [46.5, 110.0], [46.6, 110.0], [46.7, 110.0], [46.8, 110.0], [46.9, 110.0], [47.0, 111.0], [47.1, 111.0], [47.2, 111.0], [47.3, 111.0], [47.4, 111.0], [47.5, 111.0], [47.6, 112.0], [47.7, 112.0], [47.8, 112.0], [47.9, 112.0], [48.0, 112.0], [48.1, 112.0], [48.2, 112.0], [48.3, 112.0], [48.4, 113.0], [48.5, 113.0], [48.6, 113.0], [48.7, 113.0], [48.8, 113.0], [48.9, 113.0], [49.0, 113.0], [49.1, 113.0], [49.2, 113.0], [49.3, 113.0], [49.4, 113.0], [49.5, 113.0], [49.6, 113.0], [49.7, 114.0], [49.8, 114.0], [49.9, 114.0], [50.0, 114.0], [50.1, 114.0], [50.2, 114.0], [50.3, 114.0], [50.4, 114.0], [50.5, 114.0], [50.6, 114.0], [50.7, 114.0], [50.8, 115.0], [50.9, 115.0], [51.0, 115.0], [51.1, 115.0], [51.2, 115.0], [51.3, 115.0], [51.4, 115.0], [51.5, 116.0], [51.6, 116.0], [51.7, 116.0], [51.8, 116.0], [51.9, 116.0], [52.0, 116.0], [52.1, 116.0], [52.2, 116.0], [52.3, 116.0], [52.4, 117.0], [52.5, 117.0], [52.6, 117.0], [52.7, 117.0], [52.8, 117.0], [52.9, 117.0], [53.0, 117.0], [53.1, 117.0], [53.2, 117.0], [53.3, 117.0], [53.4, 117.0], [53.5, 118.0], [53.6, 118.0], [53.7, 118.0], [53.8, 118.0], [53.9, 118.0], [54.0, 118.0], [54.1, 118.0], [54.2, 118.0], [54.3, 119.0], [54.4, 119.0], [54.5, 119.0], [54.6, 119.0], [54.7, 119.0], [54.8, 119.0], [54.9, 120.0], [55.0, 120.0], [55.1, 120.0], [55.2, 120.0], [55.3, 120.0], [55.4, 121.0], [55.5, 121.0], [55.6, 121.0], [55.7, 121.0], [55.8, 121.0], [55.9, 122.0], [56.0, 122.0], [56.1, 122.0], [56.2, 122.0], [56.3, 122.0], [56.4, 123.0], [56.5, 123.0], [56.6, 123.0], [56.7, 123.0], [56.8, 123.0], [56.9, 123.0], [57.0, 123.0], [57.1, 124.0], [57.2, 124.0], [57.3, 124.0], [57.4, 124.0], [57.5, 124.0], [57.6, 124.0], [57.7, 125.0], [57.8, 125.0], [57.9, 125.0], [58.0, 125.0], [58.1, 125.0], [58.2, 125.0], [58.3, 125.0], [58.4, 126.0], [58.5, 126.0], [58.6, 126.0], [58.7, 126.0], [58.8, 126.0], [58.9, 126.0], [59.0, 126.0], [59.1, 126.0], [59.2, 127.0], [59.3, 127.0], [59.4, 127.0], [59.5, 127.0], [59.6, 127.0], [59.7, 128.0], [59.8, 128.0], [59.9, 128.0], [60.0, 128.0], [60.1, 128.0], [60.2, 128.0], [60.3, 128.0], [60.4, 128.0], [60.5, 128.0], [60.6, 128.0], [60.7, 129.0], [60.8, 129.0], [60.9, 129.0], [61.0, 129.0], [61.1, 129.0], [61.2, 129.0], [61.3, 129.0], [61.4, 129.0], [61.5, 129.0], [61.6, 129.0], [61.7, 130.0], [61.8, 130.0], [61.9, 130.0], [62.0, 130.0], [62.1, 130.0], [62.2, 130.0], [62.3, 130.0], [62.4, 130.0], [62.5, 131.0], [62.6, 131.0], [62.7, 131.0], [62.8, 131.0], [62.9, 131.0], [63.0, 131.0], [63.1, 131.0], [63.2, 131.0], [63.3, 132.0], [63.4, 132.0], [63.5, 132.0], [63.6, 132.0], [63.7, 132.0], [63.8, 132.0], [63.9, 132.0], [64.0, 132.0], [64.1, 132.0], [64.2, 132.0], [64.3, 133.0], [64.4, 133.0], [64.5, 133.0], [64.6, 133.0], [64.7, 133.0], [64.8, 133.0], [64.9, 133.0], [65.0, 133.0], [65.1, 133.0], [65.2, 134.0], [65.3, 134.0], [65.4, 134.0], [65.5, 134.0], [65.6, 134.0], [65.7, 134.0], [65.8, 134.0], [65.9, 134.0], [66.0, 134.0], [66.1, 134.0], [66.2, 135.0], [66.3, 135.0], [66.4, 135.0], [66.5, 135.0], [66.6, 135.0], [66.7, 135.0], [66.8, 135.0], [66.9, 135.0], [67.0, 135.0], [67.1, 135.0], [67.2, 136.0], [67.3, 136.0], [67.4, 136.0], [67.5, 136.0], [67.6, 136.0], [67.7, 136.0], [67.8, 136.0], [67.9, 136.0], [68.0, 136.0], [68.1, 136.0], [68.2, 136.0], [68.3, 137.0], [68.4, 137.0], [68.5, 137.0], [68.6, 137.0], [68.7, 137.0], [68.8, 137.0], [68.9, 137.0], [69.0, 137.0], [69.1, 137.0], [69.2, 137.0], [69.3, 138.0], [69.4, 138.0], [69.5, 138.0], [69.6, 138.0], [69.7, 138.0], [69.8, 138.0], [69.9, 138.0], [70.0, 138.0], [70.1, 138.0], [70.2, 138.0], [70.3, 138.0], [70.4, 138.0], [70.5, 138.0], [70.6, 139.0], [70.7, 139.0], [70.8, 139.0], [70.9, 139.0], [71.0, 139.0], [71.1, 139.0], [71.2, 139.0], [71.3, 139.0], [71.4, 139.0], [71.5, 139.0], [71.6, 139.0], [71.7, 139.0], [71.8, 139.0], [71.9, 139.0], [72.0, 140.0], [72.1, 140.0], [72.2, 140.0], [72.3, 140.0], [72.4, 140.0], [72.5, 140.0], [72.6, 140.0], [72.7, 140.0], [72.8, 140.0], [72.9, 140.0], [73.0, 140.0], [73.1, 140.0], [73.2, 141.0], [73.3, 141.0], [73.4, 141.0], [73.5, 141.0], [73.6, 141.0], [73.7, 141.0], [73.8, 141.0], [73.9, 141.0], [74.0, 141.0], [74.1, 141.0], [74.2, 141.0], [74.3, 141.0], [74.4, 142.0], [74.5, 142.0], [74.6, 142.0], [74.7, 142.0], [74.8, 142.0], [74.9, 142.0], [75.0, 142.0], [75.1, 142.0], [75.2, 142.0], [75.3, 142.0], [75.4, 142.0], [75.5, 142.0], [75.6, 142.0], [75.7, 142.0], [75.8, 143.0], [75.9, 143.0], [76.0, 143.0], [76.1, 143.0], [76.2, 143.0], [76.3, 143.0], [76.4, 143.0], [76.5, 143.0], [76.6, 143.0], [76.7, 143.0], [76.8, 144.0], [76.9, 144.0], [77.0, 144.0], [77.1, 144.0], [77.2, 144.0], [77.3, 144.0], [77.4, 144.0], [77.5, 144.0], [77.6, 145.0], [77.7, 145.0], [77.8, 145.0], [77.9, 145.0], [78.0, 145.0], [78.1, 145.0], [78.2, 145.0], [78.3, 146.0], [78.4, 146.0], [78.5, 146.0], [78.6, 146.0], [78.7, 146.0], [78.8, 146.0], [78.9, 146.0], [79.0, 147.0], [79.1, 147.0], [79.2, 147.0], [79.3, 147.0], [79.4, 147.0], [79.5, 147.0], [79.6, 148.0], [79.7, 148.0], [79.8, 148.0], [79.9, 148.0], [80.0, 148.0], [80.1, 148.0], [80.2, 148.0], [80.3, 149.0], [80.4, 149.0], [80.5, 149.0], [80.6, 149.0], [80.7, 149.0], [80.8, 149.0], [80.9, 149.0], [81.0, 150.0], [81.1, 150.0], [81.2, 150.0], [81.3, 150.0], [81.4, 150.0], [81.5, 150.0], [81.6, 150.0], [81.7, 151.0], [81.8, 151.0], [81.9, 151.0], [82.0, 151.0], [82.1, 151.0], [82.2, 151.0], [82.3, 152.0], [82.4, 152.0], [82.5, 152.0], [82.6, 152.0], [82.7, 152.0], [82.8, 152.0], [82.9, 153.0], [83.0, 153.0], [83.1, 153.0], [83.2, 153.0], [83.3, 154.0], [83.4, 154.0], [83.5, 154.0], [83.6, 154.0], [83.7, 155.0], [83.8, 155.0], [83.9, 155.0], [84.0, 155.0], [84.1, 155.0], [84.2, 155.0], [84.3, 156.0], [84.4, 156.0], [84.5, 156.0], [84.6, 157.0], [84.7, 157.0], [84.8, 157.0], [84.9, 157.0], [85.0, 158.0], [85.1, 158.0], [85.2, 158.0], [85.3, 158.0], [85.4, 159.0], [85.5, 159.0], [85.6, 160.0], [85.7, 160.0], [85.8, 160.0], [85.9, 160.0], [86.0, 161.0], [86.1, 161.0], [86.2, 161.0], [86.3, 162.0], [86.4, 162.0], [86.5, 162.0], [86.6, 163.0], [86.7, 163.0], [86.8, 163.0], [86.9, 164.0], [87.0, 164.0], [87.1, 165.0], [87.2, 165.0], [87.3, 165.0], [87.4, 166.0], [87.5, 167.0], [87.6, 167.0], [87.7, 167.0], [87.8, 168.0], [87.9, 168.0], [88.0, 169.0], [88.1, 169.0], [88.2, 170.0], [88.3, 171.0], [88.4, 172.0], [88.5, 172.0], [88.6, 173.0], [88.7, 176.0], [88.8, 177.0], [88.9, 178.0], [89.0, 179.0], [89.1, 182.0], [89.2, 191.0], [89.3, 196.0], [89.4, 200.0], [89.5, 205.0], [89.6, 210.0], [89.7, 215.0], [89.8, 219.0], [89.9, 221.0], [90.0, 225.0], [90.1, 230.0], [90.2, 237.0], [90.3, 240.0], [90.4, 244.0], [90.5, 246.0], [90.6, 257.0], [90.7, 296.0], [90.8, 351.0], [90.9, 358.0], [91.0, 362.0], [91.1, 367.0], [91.2, 374.0], [91.3, 377.0], [91.4, 380.0], [91.5, 383.0], [91.6, 386.0], [91.7, 394.0], [91.8, 396.0], [91.9, 404.0], [92.0, 411.0], [92.1, 435.0], [92.2, 441.0], [92.3, 445.0], [92.4, 453.0], [92.5, 1035.0], [92.6, 1044.0], [92.7, 1055.0], [92.8, 1060.0], [92.9, 1063.0], [93.0, 1067.0], [93.1, 1070.0], [93.2, 1073.0], [93.3, 1078.0], [93.4, 1083.0], [93.5, 1086.0], [93.6, 1090.0], [93.7, 1093.0], [93.8, 1099.0], [93.9, 1108.0], [94.0, 1116.0], [94.1, 1121.0], [94.2, 1130.0], [94.3, 1136.0], [94.4, 1141.0], [94.5, 1145.0], [94.6, 1164.0], [94.7, 1290.0], [94.8, 1302.0], [94.9, 1309.0], [95.0, 1316.0], [95.1, 1321.0], [95.2, 1332.0], [95.3, 1345.0], [95.4, 1360.0], [95.5, 1377.0], [95.6, 3032.0], [95.7, 3037.0], [95.8, 3040.0], [95.9, 3041.0], [96.0, 3044.0], [96.1, 3045.0], [96.2, 3046.0], [96.3, 3048.0], [96.4, 3049.0], [96.5, 3050.0], [96.6, 3052.0], [96.7, 3054.0], [96.8, 3055.0], [96.9, 3056.0], [97.0, 3057.0], [97.1, 3058.0], [97.2, 3059.0], [97.3, 3061.0], [97.4, 3063.0], [97.5, 3065.0], [97.6, 3067.0], [97.7, 3070.0], [97.8, 3072.0], [97.9, 3074.0], [98.0, 3077.0], [98.1, 3079.0], [98.2, 3080.0], [98.3, 3082.0], [98.4, 3084.0], [98.5, 3086.0], [98.6, 3088.0], [98.7, 3091.0], [98.8, 3095.0], [98.9, 3107.0], [99.0, 3117.0], [99.1, 3123.0], [99.2, 3130.0], [99.3, 3136.0], [99.4, 3145.0], [99.5, 3172.0], [99.6, 15055.0], [99.7, 15059.0], [99.8, 15065.0], [99.9, 15069.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12737.0], [0.1, 12737.0], [0.2, 12737.0], [0.3, 12737.0], [0.4, 12737.0], [0.5, 12747.0], [0.6, 12747.0], [0.7, 12747.0], [0.8, 12747.0], [0.9, 12747.0], [1.0, 12755.0], [1.1, 12755.0], [1.2, 12755.0], [1.3, 12755.0], [1.4, 12755.0], [1.5, 12761.0], [1.6, 12761.0], [1.7, 12761.0], [1.8, 12761.0], [1.9, 12761.0], [2.0, 12766.0], [2.1, 12766.0], [2.2, 12766.0], [2.3, 12766.0], [2.4, 12766.0], [2.5, 12771.0], [2.6, 12771.0], [2.7, 12771.0], [2.8, 12771.0], [2.9, 12771.0], [3.0, 12778.0], [3.1, 12778.0], [3.2, 12778.0], [3.3, 12778.0], [3.4, 12778.0], [3.5, 12780.0], [3.6, 12780.0], [3.7, 12780.0], [3.8, 12780.0], [3.9, 12780.0], [4.0, 12787.0], [4.1, 12787.0], [4.2, 12787.0], [4.3, 12787.0], [4.4, 12787.0], [4.5, 12797.0], [4.6, 12797.0], [4.7, 12797.0], [4.8, 12797.0], [4.9, 12797.0], [5.0, 12798.0], [5.1, 12798.0], [5.2, 12798.0], [5.3, 12798.0], [5.4, 12798.0], [5.5, 12799.0], [5.6, 12799.0], [5.7, 12799.0], [5.8, 12799.0], [5.9, 12799.0], [6.0, 12799.0], [6.1, 12799.0], [6.2, 12799.0], [6.3, 12799.0], [6.4, 12799.0], [6.5, 12800.0], [6.6, 12800.0], [6.7, 12800.0], [6.8, 12800.0], [6.9, 12800.0], [7.0, 12802.0], [7.1, 12802.0], [7.2, 12802.0], [7.3, 12802.0], [7.4, 12802.0], [7.5, 12808.0], [7.6, 12808.0], [7.7, 12808.0], [7.8, 12808.0], [7.9, 12808.0], [8.0, 12809.0], [8.1, 12809.0], [8.2, 12809.0], [8.3, 12809.0], [8.4, 12809.0], [8.5, 12816.0], [8.6, 12816.0], [8.7, 12816.0], [8.8, 12816.0], [8.9, 12816.0], [9.0, 12816.0], [9.1, 12816.0], [9.2, 12816.0], [9.3, 12816.0], [9.4, 12816.0], [9.5, 12817.0], [9.6, 12817.0], [9.7, 12817.0], [9.8, 12817.0], [9.9, 12817.0], [10.0, 12820.0], [10.1, 12820.0], [10.2, 12820.0], [10.3, 12820.0], [10.4, 12820.0], [10.5, 12821.0], [10.6, 12821.0], [10.7, 12821.0], [10.8, 12821.0], [10.9, 12821.0], [11.0, 12821.0], [11.1, 12821.0], [11.2, 12821.0], [11.3, 12821.0], [11.4, 12821.0], [11.5, 12821.0], [11.6, 12821.0], [11.7, 12821.0], [11.8, 12821.0], [11.9, 12821.0], [12.0, 12822.0], [12.1, 12822.0], [12.2, 12822.0], [12.3, 12822.0], [12.4, 12822.0], [12.5, 12823.0], [12.6, 12823.0], [12.7, 12823.0], [12.8, 12823.0], [12.9, 12823.0], [13.0, 12824.0], [13.1, 12824.0], [13.2, 12824.0], [13.3, 12824.0], [13.4, 12824.0], [13.5, 12824.0], [13.6, 12824.0], [13.7, 12824.0], [13.8, 12824.0], [13.9, 12824.0], [14.0, 12824.0], [14.1, 12824.0], [14.2, 12824.0], [14.3, 12824.0], [14.4, 12824.0], [14.5, 12824.0], [14.6, 12824.0], [14.7, 12824.0], [14.8, 12824.0], [14.9, 12824.0], [15.0, 12824.0], [15.1, 12824.0], [15.2, 12824.0], [15.3, 12824.0], [15.4, 12824.0], [15.5, 12831.0], [15.6, 12831.0], [15.7, 12831.0], [15.8, 12831.0], [15.9, 12831.0], [16.0, 12852.0], [16.1, 12852.0], [16.2, 12852.0], [16.3, 12852.0], [16.4, 12852.0], [16.5, 12853.0], [16.6, 12853.0], [16.7, 12853.0], [16.8, 12853.0], [16.9, 12853.0], [17.0, 12856.0], [17.1, 12856.0], [17.2, 12856.0], [17.3, 12856.0], [17.4, 12856.0], [17.5, 12858.0], [17.6, 12858.0], [17.7, 12858.0], [17.8, 12858.0], [17.9, 12858.0], [18.0, 12859.0], [18.1, 12859.0], [18.2, 12859.0], [18.3, 12859.0], [18.4, 12859.0], [18.5, 12859.0], [18.6, 12859.0], [18.7, 12859.0], [18.8, 12859.0], [18.9, 12859.0], [19.0, 12860.0], [19.1, 12860.0], [19.2, 12860.0], [19.3, 12860.0], [19.4, 12860.0], [19.5, 12861.0], [19.6, 12861.0], [19.7, 12861.0], [19.8, 12861.0], [19.9, 12861.0], [20.0, 12938.0], [20.1, 12938.0], [20.2, 12938.0], [20.3, 12938.0], [20.4, 12938.0], [20.5, 12954.0], [20.6, 12954.0], [20.7, 12954.0], [20.8, 12954.0], [20.9, 12954.0], [21.0, 12955.0], [21.1, 12955.0], [21.2, 12955.0], [21.3, 12955.0], [21.4, 12955.0], [21.5, 12955.0], [21.6, 12955.0], [21.7, 12955.0], [21.8, 12955.0], [21.9, 12955.0], [22.0, 12967.0], [22.1, 12967.0], [22.2, 12967.0], [22.3, 12967.0], [22.4, 12967.0], [22.5, 12973.0], [22.6, 12973.0], [22.7, 12973.0], [22.8, 12973.0], [22.9, 12973.0], [23.0, 12978.0], [23.1, 12978.0], [23.2, 12978.0], [23.3, 12978.0], [23.4, 12978.0], [23.5, 12982.0], [23.6, 12982.0], [23.7, 12982.0], [23.8, 12982.0], [23.9, 12982.0], [24.0, 12987.0], [24.1, 12987.0], [24.2, 12987.0], [24.3, 12987.0], [24.4, 12987.0], [24.5, 12987.0], [24.6, 12987.0], [24.7, 12987.0], [24.8, 12987.0], [24.9, 12987.0], [25.0, 12999.0], [25.1, 12999.0], [25.2, 12999.0], [25.3, 12999.0], [25.4, 12999.0], [25.5, 13006.0], [25.6, 13006.0], [25.7, 13006.0], [25.8, 13006.0], [25.9, 13006.0], [26.0, 13007.0], [26.1, 13007.0], [26.2, 13007.0], [26.3, 13007.0], [26.4, 13007.0], [26.5, 13009.0], [26.6, 13009.0], [26.7, 13009.0], [26.8, 13009.0], [26.9, 13009.0], [27.0, 13014.0], [27.1, 13014.0], [27.2, 13014.0], [27.3, 13014.0], [27.4, 13014.0], [27.5, 13026.0], [27.6, 13026.0], [27.7, 13026.0], [27.8, 13026.0], [27.9, 13026.0], [28.0, 13028.0], [28.1, 13028.0], [28.2, 13028.0], [28.3, 13028.0], [28.4, 13028.0], [28.5, 13028.0], [28.6, 13028.0], [28.7, 13028.0], [28.8, 13028.0], [28.9, 13028.0], [29.0, 13029.0], [29.1, 13029.0], [29.2, 13029.0], [29.3, 13029.0], [29.4, 13029.0], [29.5, 13029.0], [29.6, 13029.0], [29.7, 13029.0], [29.8, 13029.0], [29.9, 13029.0], [30.0, 13030.0], [30.1, 13030.0], [30.2, 13030.0], [30.3, 13030.0], [30.4, 13030.0], [30.5, 13031.0], [30.6, 13031.0], [30.7, 13031.0], [30.8, 13031.0], [30.9, 13031.0], [31.0, 13031.0], [31.1, 13031.0], [31.2, 13031.0], [31.3, 13031.0], [31.4, 13031.0], [31.5, 13033.0], [31.6, 13033.0], [31.7, 13033.0], [31.8, 13033.0], [31.9, 13033.0], [32.0, 13033.0], [32.1, 13033.0], [32.2, 13033.0], [32.3, 13033.0], [32.4, 13033.0], [32.5, 13033.0], [32.6, 13033.0], [32.7, 13033.0], [32.8, 13033.0], [32.9, 13033.0], [33.0, 13034.0], [33.1, 13034.0], [33.2, 13034.0], [33.3, 13034.0], [33.4, 13034.0], [33.5, 13034.0], [33.6, 13034.0], [33.7, 13034.0], [33.8, 13034.0], [33.9, 13034.0], [34.0, 13034.0], [34.1, 13034.0], [34.2, 13034.0], [34.3, 13034.0], [34.4, 13034.0], [34.5, 13034.0], [34.6, 13034.0], [34.7, 13034.0], [34.8, 13034.0], [34.9, 13034.0], [35.0, 13036.0], [35.1, 13036.0], [35.2, 13036.0], [35.3, 13036.0], [35.4, 13036.0], [35.5, 13036.0], [35.6, 13036.0], [35.7, 13036.0], [35.8, 13036.0], [35.9, 13036.0], [36.0, 13038.0], [36.1, 13038.0], [36.2, 13038.0], [36.3, 13038.0], [36.4, 13038.0], [36.5, 13038.0], [36.6, 13038.0], [36.7, 13038.0], [36.8, 13038.0], [36.9, 13038.0], [37.0, 13039.0], [37.1, 13039.0], [37.2, 13039.0], [37.3, 13039.0], [37.4, 13039.0], [37.5, 13039.0], [37.6, 13039.0], [37.7, 13039.0], [37.8, 13039.0], [37.9, 13039.0], [38.0, 13048.0], [38.1, 13048.0], [38.2, 13048.0], [38.3, 13048.0], [38.4, 13048.0], [38.5, 13057.0], [38.6, 13057.0], [38.7, 13057.0], [38.8, 13057.0], [38.9, 13057.0], [39.0, 13059.0], [39.1, 13059.0], [39.2, 13059.0], [39.3, 13059.0], [39.4, 13059.0], [39.5, 13060.0], [39.6, 13060.0], [39.7, 13060.0], [39.8, 13060.0], [39.9, 13060.0], [40.0, 13088.0], [40.1, 13088.0], [40.2, 13088.0], [40.3, 13088.0], [40.4, 13088.0], [40.5, 13096.0], [40.6, 13096.0], [40.7, 13096.0], [40.8, 13096.0], [40.9, 13096.0], [41.0, 13105.0], [41.1, 13105.0], [41.2, 13105.0], [41.3, 13105.0], [41.4, 13105.0], [41.5, 13125.0], [41.6, 13125.0], [41.7, 13125.0], [41.8, 13125.0], [41.9, 13125.0], [42.0, 13127.0], [42.1, 13127.0], [42.2, 13127.0], [42.3, 13127.0], [42.4, 13127.0], [42.5, 13160.0], [42.6, 13160.0], [42.7, 13160.0], [42.8, 13160.0], [42.9, 13160.0], [43.0, 13171.0], [43.1, 13171.0], [43.2, 13171.0], [43.3, 13171.0], [43.4, 13171.0], [43.5, 13174.0], [43.6, 13174.0], [43.7, 13174.0], [43.8, 13174.0], [43.9, 13174.0], [44.0, 13177.0], [44.1, 13177.0], [44.2, 13177.0], [44.3, 13177.0], [44.4, 13177.0], [44.5, 13178.0], [44.6, 13178.0], [44.7, 13178.0], [44.8, 13178.0], [44.9, 13178.0], [45.0, 13179.0], [45.1, 13179.0], [45.2, 13179.0], [45.3, 13179.0], [45.4, 13179.0], [45.5, 13181.0], [45.6, 13181.0], [45.7, 13181.0], [45.8, 13181.0], [45.9, 13181.0], [46.0, 13202.0], [46.1, 13202.0], [46.2, 13202.0], [46.3, 13202.0], [46.4, 13202.0], [46.5, 13205.0], [46.6, 13205.0], [46.7, 13205.0], [46.8, 13205.0], [46.9, 13205.0], [47.0, 13205.0], [47.1, 13205.0], [47.2, 13205.0], [47.3, 13205.0], [47.4, 13205.0], [47.5, 13208.0], [47.6, 13208.0], [47.7, 13208.0], [47.8, 13208.0], [47.9, 13208.0], [48.0, 13209.0], [48.1, 13209.0], [48.2, 13209.0], [48.3, 13209.0], [48.4, 13209.0], [48.5, 13214.0], [48.6, 13214.0], [48.7, 13214.0], [48.8, 13214.0], [48.9, 13214.0], [49.0, 13216.0], [49.1, 13216.0], [49.2, 13216.0], [49.3, 13216.0], [49.4, 13216.0], [49.5, 13221.0], [49.6, 13221.0], [49.7, 13221.0], [49.8, 13221.0], [49.9, 13221.0], [50.0, 13222.0], [50.1, 13222.0], [50.2, 13222.0], [50.3, 13222.0], [50.4, 13222.0], [50.5, 13222.0], [50.6, 13222.0], [50.7, 13222.0], [50.8, 13222.0], [50.9, 13222.0], [51.0, 13225.0], [51.1, 13225.0], [51.2, 13225.0], [51.3, 13225.0], [51.4, 13225.0], [51.5, 13226.0], [51.6, 13226.0], [51.7, 13226.0], [51.8, 13226.0], [51.9, 13226.0], [52.0, 13228.0], [52.1, 13228.0], [52.2, 13228.0], [52.3, 13228.0], [52.4, 13228.0], [52.5, 13228.0], [52.6, 13228.0], [52.7, 13228.0], [52.8, 13228.0], [52.9, 13228.0], [53.0, 13230.0], [53.1, 13230.0], [53.2, 13230.0], [53.3, 13230.0], [53.4, 13230.0], [53.5, 13234.0], [53.6, 13234.0], [53.7, 13234.0], [53.8, 13234.0], [53.9, 13234.0], [54.0, 13236.0], [54.1, 13236.0], [54.2, 13236.0], [54.3, 13236.0], [54.4, 13236.0], [54.5, 13266.0], [54.6, 13266.0], [54.7, 13266.0], [54.8, 13266.0], [54.9, 13266.0], [55.0, 13271.0], [55.1, 13271.0], [55.2, 13271.0], [55.3, 13271.0], [55.4, 13271.0], [55.5, 13271.0], [55.6, 13271.0], [55.7, 13271.0], [55.8, 13271.0], [55.9, 13271.0], [56.0, 13271.0], [56.1, 13271.0], [56.2, 13271.0], [56.3, 13271.0], [56.4, 13271.0], [56.5, 13272.0], [56.6, 13272.0], [56.7, 13272.0], [56.8, 13272.0], [56.9, 13272.0], [57.0, 13273.0], [57.1, 13273.0], [57.2, 13273.0], [57.3, 13273.0], [57.4, 13273.0], [57.5, 13276.0], [57.6, 13276.0], [57.7, 13276.0], [57.8, 13276.0], [57.9, 13276.0], [58.0, 13279.0], [58.1, 13279.0], [58.2, 13279.0], [58.3, 13279.0], [58.4, 13279.0], [58.5, 13282.0], [58.6, 13282.0], [58.7, 13282.0], [58.8, 13282.0], [58.9, 13282.0], [59.0, 13287.0], [59.1, 13287.0], [59.2, 13287.0], [59.3, 13287.0], [59.4, 13287.0], [59.5, 13298.0], [59.6, 13298.0], [59.7, 13298.0], [59.8, 13298.0], [59.9, 13298.0], [60.0, 13299.0], [60.1, 13299.0], [60.2, 13299.0], [60.3, 13299.0], [60.4, 13299.0], [60.5, 13299.0], [60.6, 13299.0], [60.7, 13299.0], [60.8, 13299.0], [60.9, 13299.0], [61.0, 13304.0], [61.1, 13304.0], [61.2, 13304.0], [61.3, 13304.0], [61.4, 13304.0], [61.5, 13305.0], [61.6, 13305.0], [61.7, 13305.0], [61.8, 13305.0], [61.9, 13305.0], [62.0, 13305.0], [62.1, 13305.0], [62.2, 13305.0], [62.3, 13305.0], [62.4, 13305.0], [62.5, 13305.0], [62.6, 13305.0], [62.7, 13305.0], [62.8, 13305.0], [62.9, 13305.0], [63.0, 13306.0], [63.1, 13306.0], [63.2, 13306.0], [63.3, 13306.0], [63.4, 13306.0], [63.5, 13307.0], [63.6, 13307.0], [63.7, 13307.0], [63.8, 13307.0], [63.9, 13307.0], [64.0, 13309.0], [64.1, 13309.0], [64.2, 13309.0], [64.3, 13309.0], [64.4, 13309.0], [64.5, 13309.0], [64.6, 13309.0], [64.7, 13309.0], [64.8, 13309.0], [64.9, 13309.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13313.0], [66.1, 13313.0], [66.2, 13313.0], [66.3, 13313.0], [66.4, 13313.0], [66.5, 13320.0], [66.6, 13320.0], [66.7, 13320.0], [66.8, 13320.0], [66.9, 13320.0], [67.0, 13321.0], [67.1, 13321.0], [67.2, 13321.0], [67.3, 13321.0], [67.4, 13321.0], [67.5, 13322.0], [67.6, 13322.0], [67.7, 13322.0], [67.8, 13322.0], [67.9, 13322.0], [68.0, 13322.0], [68.1, 13322.0], [68.2, 13322.0], [68.3, 13322.0], [68.4, 13322.0], [68.5, 13324.0], [68.6, 13324.0], [68.7, 13324.0], [68.8, 13324.0], [68.9, 13324.0], [69.0, 13324.0], [69.1, 13324.0], [69.2, 13324.0], [69.3, 13324.0], [69.4, 13324.0], [69.5, 13324.0], [69.6, 13324.0], [69.7, 13324.0], [69.8, 13324.0], [69.9, 13324.0], [70.0, 13325.0], [70.1, 13325.0], [70.2, 13325.0], [70.3, 13325.0], [70.4, 13325.0], [70.5, 13325.0], [70.6, 13325.0], [70.7, 13325.0], [70.8, 13325.0], [70.9, 13325.0], [71.0, 13326.0], [71.1, 13326.0], [71.2, 13326.0], [71.3, 13326.0], [71.4, 13326.0], [71.5, 13328.0], [71.6, 13328.0], [71.7, 13328.0], [71.8, 13328.0], [71.9, 13328.0], [72.0, 13378.0], [72.1, 13378.0], [72.2, 13378.0], [72.3, 13378.0], [72.4, 13378.0], [72.5, 13400.0], [72.6, 13400.0], [72.7, 13400.0], [72.8, 13400.0], [72.9, 13400.0], [73.0, 13424.0], [73.1, 13424.0], [73.2, 13424.0], [73.3, 13424.0], [73.4, 13424.0], [73.5, 13431.0], [73.6, 13431.0], [73.7, 13431.0], [73.8, 13431.0], [73.9, 13431.0], [74.0, 13437.0], [74.1, 13437.0], [74.2, 13437.0], [74.3, 13437.0], [74.4, 13437.0], [74.5, 13440.0], [74.6, 13440.0], [74.7, 13440.0], [74.8, 13440.0], [74.9, 13440.0], [75.0, 13442.0], [75.1, 13442.0], [75.2, 13442.0], [75.3, 13442.0], [75.4, 13442.0], [75.5, 13453.0], [75.6, 13453.0], [75.7, 13453.0], [75.8, 13453.0], [75.9, 13453.0], [76.0, 13463.0], [76.1, 13463.0], [76.2, 13463.0], [76.3, 13463.0], [76.4, 13463.0], [76.5, 13499.0], [76.6, 13499.0], [76.7, 13499.0], [76.8, 13499.0], [76.9, 13499.0], [77.0, 13506.0], [77.1, 13506.0], [77.2, 13506.0], [77.3, 13506.0], [77.4, 13506.0], [77.5, 13506.0], [77.6, 13506.0], [77.7, 13506.0], [77.8, 13506.0], [77.9, 13506.0], [78.0, 13514.0], [78.1, 13514.0], [78.2, 13514.0], [78.3, 13514.0], [78.4, 13514.0], [78.5, 13530.0], [78.6, 13530.0], [78.7, 13530.0], [78.8, 13530.0], [78.9, 13530.0], [79.0, 13536.0], [79.1, 13536.0], [79.2, 13536.0], [79.3, 13536.0], [79.4, 13536.0], [79.5, 13539.0], [79.6, 13539.0], [79.7, 13539.0], [79.8, 13539.0], [79.9, 13539.0], [80.0, 13544.0], [80.1, 13544.0], [80.2, 13544.0], [80.3, 13544.0], [80.4, 13544.0], [80.5, 13551.0], [80.6, 13551.0], [80.7, 13551.0], [80.8, 13551.0], [80.9, 13551.0], [81.0, 13554.0], [81.1, 13554.0], [81.2, 13554.0], [81.3, 13554.0], [81.4, 13554.0], [81.5, 13568.0], [81.6, 13568.0], [81.7, 13568.0], [81.8, 13568.0], [81.9, 13568.0], [82.0, 13568.0], [82.1, 13568.0], [82.2, 13568.0], [82.3, 13568.0], [82.4, 13568.0], [82.5, 13570.0], [82.6, 13570.0], [82.7, 13570.0], [82.8, 13570.0], [82.9, 13570.0], [83.0, 13572.0], [83.1, 13572.0], [83.2, 13572.0], [83.3, 13572.0], [83.4, 13572.0], [83.5, 13579.0], [83.6, 13579.0], [83.7, 13579.0], [83.8, 13579.0], [83.9, 13579.0], [84.0, 13582.0], [84.1, 13582.0], [84.2, 13582.0], [84.3, 13582.0], [84.4, 13582.0], [84.5, 13588.0], [84.6, 13588.0], [84.7, 13588.0], [84.8, 13588.0], [84.9, 13588.0], [85.0, 13602.0], [85.1, 13602.0], [85.2, 13602.0], [85.3, 13602.0], [85.4, 13602.0], [85.5, 13607.0], [85.6, 13607.0], [85.7, 13607.0], [85.8, 13607.0], [85.9, 13607.0], [86.0, 13609.0], [86.1, 13609.0], [86.2, 13609.0], [86.3, 13609.0], [86.4, 13609.0], [86.5, 13609.0], [86.6, 13609.0], [86.7, 13609.0], [86.8, 13609.0], [86.9, 13609.0], [87.0, 13620.0], [87.1, 13620.0], [87.2, 13620.0], [87.3, 13620.0], [87.4, 13620.0], [87.5, 13623.0], [87.6, 13623.0], [87.7, 13623.0], [87.8, 13623.0], [87.9, 13623.0], [88.0, 13625.0], [88.1, 13625.0], [88.2, 13625.0], [88.3, 13625.0], [88.4, 13625.0], [88.5, 13630.0], [88.6, 13630.0], [88.7, 13630.0], [88.8, 13630.0], [88.9, 13630.0], [89.0, 13639.0], [89.1, 13639.0], [89.2, 13639.0], [89.3, 13639.0], [89.4, 13639.0], [89.5, 13647.0], [89.6, 13647.0], [89.7, 13647.0], [89.8, 13647.0], [89.9, 13647.0], [90.0, 13650.0], [90.1, 13650.0], [90.2, 13650.0], [90.3, 13650.0], [90.4, 13650.0], [90.5, 13653.0], [90.6, 13653.0], [90.7, 13653.0], [90.8, 13653.0], [90.9, 13653.0], [91.0, 13660.0], [91.1, 13660.0], [91.2, 13660.0], [91.3, 13660.0], [91.4, 13660.0], [91.5, 13660.0], [91.6, 13660.0], [91.7, 13660.0], [91.8, 13660.0], [91.9, 13660.0], [92.0, 13665.0], [92.1, 13665.0], [92.2, 13665.0], [92.3, 13665.0], [92.4, 13665.0], [92.5, 13668.0], [92.6, 13668.0], [92.7, 13668.0], [92.8, 13668.0], [92.9, 13668.0], [93.0, 13678.0], [93.1, 13678.0], [93.2, 13678.0], [93.3, 13678.0], [93.4, 13678.0], [93.5, 13680.0], [93.6, 13680.0], [93.7, 13680.0], [93.8, 13680.0], [93.9, 13680.0], [94.0, 13684.0], [94.1, 13684.0], [94.2, 13684.0], [94.3, 13684.0], [94.4, 13684.0], [94.5, 13687.0], [94.6, 13687.0], [94.7, 13687.0], [94.8, 13687.0], [94.9, 13687.0], [95.0, 13692.0], [95.1, 13692.0], [95.2, 13692.0], [95.3, 13692.0], [95.4, 13692.0], [95.5, 13700.0], [95.6, 13700.0], [95.7, 13700.0], [95.8, 13700.0], [95.9, 13700.0], [96.0, 13700.0], [96.1, 13700.0], [96.2, 13700.0], [96.3, 13700.0], [96.4, 13700.0], [96.5, 13706.0], [96.6, 13706.0], [96.7, 13706.0], [96.8, 13706.0], [96.9, 13706.0], [97.0, 13710.0], [97.1, 13710.0], [97.2, 13710.0], [97.3, 13710.0], [97.4, 13710.0], [97.5, 13712.0], [97.6, 13712.0], [97.7, 13712.0], [97.8, 13712.0], [97.9, 13712.0], [98.0, 13714.0], [98.1, 13714.0], [98.2, 13714.0], [98.3, 13714.0], [98.4, 13714.0], [98.5, 13727.0], [98.6, 13727.0], [98.7, 13727.0], [98.8, 13727.0], [98.9, 13727.0], [99.0, 13728.0], [99.1, 13728.0], [99.2, 13728.0], [99.3, 13728.0], [99.4, 13728.0], [99.5, 13737.0], [99.6, 13737.0], [99.7, 13737.0], [99.8, 13737.0], [99.9, 13737.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 60026.0], [0.1, 60026.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60027.0], [1.6, 60027.0], [1.7, 60027.0], [1.8, 60027.0], [1.9, 60027.0], [2.0, 60027.0], [2.1, 60027.0], [2.2, 60027.0], [2.3, 60027.0], [2.4, 60027.0], [2.5, 60027.0], [2.6, 60027.0], [2.7, 60027.0], [2.8, 60027.0], [2.9, 60027.0], [3.0, 60027.0], [3.1, 60027.0], [3.2, 60027.0], [3.3, 60027.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60027.0], [12.4, 60027.0], [12.5, 60027.0], [12.6, 60027.0], [12.7, 60027.0], [12.8, 60027.0], [12.9, 60027.0], [13.0, 60027.0], [13.1, 60027.0], [13.2, 60027.0], [13.3, 60027.0], [13.4, 60027.0], [13.5, 60027.0], [13.6, 60027.0], [13.7, 60027.0], [13.8, 60027.0], [13.9, 60027.0], [14.0, 60027.0], [14.1, 60027.0], [14.2, 60027.0], [14.3, 60027.0], [14.4, 60027.0], [14.5, 60027.0], [14.6, 60027.0], [14.7, 60027.0], [14.8, 60027.0], [14.9, 60027.0], [15.0, 60027.0], [15.1, 60027.0], [15.2, 60027.0], [15.3, 60027.0], [15.4, 60027.0], [15.5, 60027.0], [15.6, 60027.0], [15.7, 60027.0], [15.8, 60027.0], [15.9, 60027.0], [16.0, 60027.0], [16.1, 60027.0], [16.2, 60027.0], [16.3, 60027.0], [16.4, 60027.0], [16.5, 60027.0], [16.6, 60027.0], [16.7, 60027.0], [16.8, 60027.0], [16.9, 60027.0], [17.0, 60027.0], [17.1, 60027.0], [17.2, 60027.0], [17.3, 60027.0], [17.4, 60027.0], [17.5, 60027.0], [17.6, 60027.0], [17.7, 60027.0], [17.8, 60027.0], [17.9, 60027.0], [18.0, 60027.0], [18.1, 60027.0], [18.2, 60027.0], [18.3, 60027.0], [18.4, 60027.0], [18.5, 60027.0], [18.6, 60027.0], [18.7, 60027.0], [18.8, 60027.0], [18.9, 60027.0], [19.0, 60027.0], [19.1, 60027.0], [19.2, 60027.0], [19.3, 60027.0], [19.4, 60027.0], [19.5, 60027.0], [19.6, 60027.0], [19.7, 60027.0], [19.8, 60027.0], [19.9, 60027.0], [20.0, 60027.0], [20.1, 60027.0], [20.2, 60027.0], [20.3, 60027.0], [20.4, 60027.0], [20.5, 60027.0], [20.6, 60027.0], [20.7, 60027.0], [20.8, 60027.0], [20.9, 60027.0], [21.0, 60027.0], [21.1, 60027.0], [21.2, 60027.0], [21.3, 60027.0], [21.4, 60027.0], [21.5, 60027.0], [21.6, 60027.0], [21.7, 60027.0], [21.8, 60027.0], [21.9, 60027.0], [22.0, 60027.0], [22.1, 60027.0], [22.2, 60027.0], [22.3, 60027.0], [22.4, 60027.0], [22.5, 60027.0], [22.6, 60027.0], [22.7, 60027.0], [22.8, 60027.0], [22.9, 60027.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60028.0], [30.5, 60028.0], [30.6, 60028.0], [30.7, 60028.0], [30.8, 60028.0], [30.9, 60028.0], [31.0, 60028.0], [31.1, 60028.0], [31.2, 60028.0], [31.3, 60028.0], [31.4, 60028.0], [31.5, 60028.0], [31.6, 60028.0], [31.7, 60028.0], [31.8, 60028.0], [31.9, 60028.0], [32.0, 60028.0], [32.1, 60028.0], [32.2, 60028.0], [32.3, 60028.0], [32.4, 60028.0], [32.5, 60028.0], [32.6, 60028.0], [32.7, 60028.0], [32.8, 60028.0], [32.9, 60028.0], [33.0, 60028.0], [33.1, 60028.0], [33.2, 60028.0], [33.3, 60028.0], [33.4, 60028.0], [33.5, 60028.0], [33.6, 60028.0], [33.7, 60028.0], [33.8, 60028.0], [33.9, 60028.0], [34.0, 60028.0], [34.1, 60028.0], [34.2, 60028.0], [34.3, 60028.0], [34.4, 60028.0], [34.5, 60028.0], [34.6, 60028.0], [34.7, 60028.0], [34.8, 60028.0], [34.9, 60028.0], [35.0, 60028.0], [35.1, 60028.0], [35.2, 60028.0], [35.3, 60028.0], [35.4, 60028.0], [35.5, 60028.0], [35.6, 60028.0], [35.7, 60028.0], [35.8, 60028.0], [35.9, 60028.0], [36.0, 60028.0], [36.1, 60028.0], [36.2, 60028.0], [36.3, 60028.0], [36.4, 60028.0], [36.5, 60028.0], [36.6, 60028.0], [36.7, 60028.0], [36.8, 60028.0], [36.9, 60028.0], [37.0, 60028.0], [37.1, 60028.0], [37.2, 60028.0], [37.3, 60028.0], [37.4, 60028.0], [37.5, 60028.0], [37.6, 60028.0], [37.7, 60028.0], [37.8, 60028.0], [37.9, 60028.0], [38.0, 60028.0], [38.1, 60028.0], [38.2, 60028.0], [38.3, 60028.0], [38.4, 60028.0], [38.5, 60028.0], [38.6, 60028.0], [38.7, 60028.0], [38.8, 60028.0], [38.9, 60028.0], [39.0, 60028.0], [39.1, 60028.0], [39.2, 60028.0], [39.3, 60028.0], [39.4, 60028.0], [39.5, 60028.0], [39.6, 60028.0], [39.7, 60028.0], [39.8, 60028.0], [39.9, 60028.0], [40.0, 60028.0], [40.1, 60028.0], [40.2, 60028.0], [40.3, 60028.0], [40.4, 60028.0], [40.5, 60028.0], [40.6, 60028.0], [40.7, 60028.0], [40.8, 60028.0], [40.9, 60028.0], [41.0, 60028.0], [41.1, 60028.0], [41.2, 60028.0], [41.3, 60028.0], [41.4, 60028.0], [41.5, 60028.0], [41.6, 60028.0], [41.7, 60028.0], [41.8, 60028.0], [41.9, 60028.0], [42.0, 60028.0], [42.1, 60028.0], [42.2, 60028.0], [42.3, 60028.0], [42.4, 60028.0], [42.5, 60028.0], [42.6, 60028.0], [42.7, 60028.0], [42.8, 60028.0], [42.9, 60028.0], [43.0, 60028.0], [43.1, 60028.0], [43.2, 60028.0], [43.3, 60028.0], [43.4, 60028.0], [43.5, 60028.0], [43.6, 60028.0], [43.7, 60028.0], [43.8, 60028.0], [43.9, 60028.0], [44.0, 60028.0], [44.1, 60028.0], [44.2, 60028.0], [44.3, 60028.0], [44.4, 60028.0], [44.5, 60028.0], [44.6, 60028.0], [44.7, 60028.0], [44.8, 60028.0], [44.9, 60028.0], [45.0, 60028.0], [45.1, 60028.0], [45.2, 60028.0], [45.3, 60028.0], [45.4, 60028.0], [45.5, 60028.0], [45.6, 60028.0], [45.7, 60028.0], [45.8, 60028.0], [45.9, 60028.0], [46.0, 60028.0], [46.1, 60028.0], [46.2, 60028.0], [46.3, 60028.0], [46.4, 60028.0], [46.5, 60028.0], [46.6, 60028.0], [46.7, 60028.0], [46.8, 60028.0], [46.9, 60028.0], [47.0, 60028.0], [47.1, 60028.0], [47.2, 60028.0], [47.3, 60028.0], [47.4, 60028.0], [47.5, 60028.0], [47.6, 60028.0], [47.7, 60028.0], [47.8, 60028.0], [47.9, 60028.0], [48.0, 60028.0], [48.1, 60028.0], [48.2, 60028.0], [48.3, 60028.0], [48.4, 60028.0], [48.5, 60028.0], [48.6, 60028.0], [48.7, 60028.0], [48.8, 60028.0], [48.9, 60028.0], [49.0, 60028.0], [49.1, 60028.0], [49.2, 60028.0], [49.3, 60028.0], [49.4, 60028.0], [49.5, 60028.0], [49.6, 60028.0], [49.7, 60028.0], [49.8, 60028.0], [49.9, 60028.0], [50.0, 60028.0], [50.1, 60028.0], [50.2, 60028.0], [50.3, 60028.0], [50.4, 60028.0], [50.5, 60028.0], [50.6, 60028.0], [50.7, 60028.0], [50.8, 60028.0], [50.9, 60028.0], [51.0, 60028.0], [51.1, 60028.0], [51.2, 60028.0], [51.3, 60028.0], [51.4, 60028.0], [51.5, 60028.0], [51.6, 60028.0], [51.7, 60028.0], [51.8, 60028.0], [51.9, 60028.0], [52.0, 60028.0], [52.1, 60028.0], [52.2, 60028.0], [52.3, 60028.0], [52.4, 60028.0], [52.5, 60028.0], [52.6, 60028.0], [52.7, 60028.0], [52.8, 60028.0], [52.9, 60028.0], [53.0, 60028.0], [53.1, 60028.0], [53.2, 60028.0], [53.3, 60028.0], [53.4, 60028.0], [53.5, 60028.0], [53.6, 60028.0], [53.7, 60028.0], [53.8, 60028.0], [53.9, 60028.0], [54.0, 60028.0], [54.1, 60028.0], [54.2, 60028.0], [54.3, 60028.0], [54.4, 60028.0], [54.5, 60028.0], [54.6, 60028.0], [54.7, 60028.0], [54.8, 60028.0], [54.9, 60028.0], [55.0, 60029.0], [55.1, 60029.0], [55.2, 60029.0], [55.3, 60029.0], [55.4, 60029.0], [55.5, 60029.0], [55.6, 60029.0], [55.7, 60029.0], [55.8, 60029.0], [55.9, 60029.0], [56.0, 60029.0], [56.1, 60029.0], [56.2, 60029.0], [56.3, 60029.0], [56.4, 60029.0], [56.5, 60029.0], [56.6, 60029.0], [56.7, 60029.0], [56.8, 60029.0], [56.9, 60029.0], [57.0, 60029.0], [57.1, 60029.0], [57.2, 60029.0], [57.3, 60029.0], [57.4, 60029.0], [57.5, 60029.0], [57.6, 60029.0], [57.7, 60029.0], [57.8, 60029.0], [57.9, 60029.0], [58.0, 60029.0], [58.1, 60029.0], [58.2, 60029.0], [58.3, 60029.0], [58.4, 60029.0], [58.5, 60029.0], [58.6, 60029.0], [58.7, 60029.0], [58.8, 60029.0], [58.9, 60029.0], [59.0, 60029.0], [59.1, 60029.0], [59.2, 60029.0], [59.3, 60029.0], [59.4, 60029.0], [59.5, 60029.0], [59.6, 60029.0], [59.7, 60029.0], [59.8, 60029.0], [59.9, 60029.0], [60.0, 60029.0], [60.1, 60029.0], [60.2, 60029.0], [60.3, 60029.0], [60.4, 60029.0], [60.5, 60029.0], [60.6, 60029.0], [60.7, 60029.0], [60.8, 60029.0], [60.9, 60029.0], [61.0, 60029.0], [61.1, 60029.0], [61.2, 60029.0], [61.3, 60029.0], [61.4, 60029.0], [61.5, 60029.0], [61.6, 60029.0], [61.7, 60029.0], [61.8, 60029.0], [61.9, 60029.0], [62.0, 60029.0], [62.1, 60029.0], [62.2, 60029.0], [62.3, 60029.0], [62.4, 60029.0], [62.5, 60029.0], [62.6, 60029.0], [62.7, 60029.0], [62.8, 60029.0], [62.9, 60029.0], [63.0, 60029.0], [63.1, 60029.0], [63.2, 60029.0], [63.3, 60029.0], [63.4, 60029.0], [63.5, 60029.0], [63.6, 60029.0], [63.7, 60029.0], [63.8, 60029.0], [63.9, 60029.0], [64.0, 60029.0], [64.1, 60029.0], [64.2, 60029.0], [64.3, 60029.0], [64.4, 60029.0], [64.5, 60029.0], [64.6, 60029.0], [64.7, 60029.0], [64.8, 60029.0], [64.9, 60029.0], [65.0, 60029.0], [65.1, 60029.0], [65.2, 60029.0], [65.3, 60029.0], [65.4, 60029.0], [65.5, 60029.0], [65.6, 60029.0], [65.7, 60029.0], [65.8, 60029.0], [65.9, 60029.0], [66.0, 60029.0], [66.1, 60029.0], [66.2, 60029.0], [66.3, 60029.0], [66.4, 60029.0], [66.5, 60029.0], [66.6, 60029.0], [66.7, 60029.0], [66.8, 60029.0], [66.9, 60029.0], [67.0, 60029.0], [67.1, 60029.0], [67.2, 60029.0], [67.3, 60029.0], [67.4, 60029.0], [67.5, 60029.0], [67.6, 60029.0], [67.7, 60029.0], [67.8, 60029.0], [67.9, 60029.0], [68.0, 60029.0], [68.1, 60029.0], [68.2, 60029.0], [68.3, 60029.0], [68.4, 60029.0], [68.5, 60029.0], [68.6, 60029.0], [68.7, 60029.0], [68.8, 60029.0], [68.9, 60029.0], [69.0, 60029.0], [69.1, 60029.0], [69.2, 60029.0], [69.3, 60029.0], [69.4, 60029.0], [69.5, 60029.0], [69.6, 60029.0], [69.7, 60029.0], [69.8, 60029.0], [69.9, 60029.0], [70.0, 60029.0], [70.1, 60029.0], [70.2, 60029.0], [70.3, 60029.0], [70.4, 60029.0], [70.5, 60029.0], [70.6, 60029.0], [70.7, 60029.0], [70.8, 60029.0], [70.9, 60029.0], [71.0, 60029.0], [71.1, 60029.0], [71.2, 60029.0], [71.3, 60029.0], [71.4, 60029.0], [71.5, 60030.0], [71.6, 60030.0], [71.7, 60030.0], [71.8, 60030.0], [71.9, 60030.0], [72.0, 60030.0], [72.1, 60030.0], [72.2, 60030.0], [72.3, 60030.0], [72.4, 60030.0], [72.5, 60030.0], [72.6, 60030.0], [72.7, 60030.0], [72.8, 60030.0], [72.9, 60030.0], [73.0, 60030.0], [73.1, 60030.0], [73.2, 60030.0], [73.3, 60030.0], [73.4, 60030.0], [73.5, 60030.0], [73.6, 60030.0], [73.7, 60030.0], [73.8, 60030.0], [73.9, 60030.0], [74.0, 60030.0], [74.1, 60030.0], [74.2, 60030.0], [74.3, 60030.0], [74.4, 60030.0], [74.5, 60030.0], [74.6, 60030.0], [74.7, 60030.0], [74.8, 60030.0], [74.9, 60030.0], [75.0, 60030.0], [75.1, 60030.0], [75.2, 60030.0], [75.3, 60030.0], [75.4, 60030.0], [75.5, 60030.0], [75.6, 60030.0], [75.7, 60030.0], [75.8, 60030.0], [75.9, 60030.0], [76.0, 60030.0], [76.1, 60030.0], [76.2, 60030.0], [76.3, 60030.0], [76.4, 60030.0], [76.5, 60030.0], [76.6, 60030.0], [76.7, 60030.0], [76.8, 60030.0], [76.9, 60030.0], [77.0, 60030.0], [77.1, 60030.0], [77.2, 60030.0], [77.3, 60030.0], [77.4, 60030.0], [77.5, 60030.0], [77.6, 60030.0], [77.7, 60030.0], [77.8, 60030.0], [77.9, 60030.0], [78.0, 60031.0], [78.1, 60031.0], [78.2, 60031.0], [78.3, 60031.0], [78.4, 60031.0], [78.5, 60031.0], [78.6, 60031.0], [78.7, 60031.0], [78.8, 60031.0], [78.9, 60031.0], [79.0, 60031.0], [79.1, 60031.0], [79.2, 60031.0], [79.3, 60031.0], [79.4, 60031.0], [79.5, 60031.0], [79.6, 60031.0], [79.7, 60031.0], [79.8, 60031.0], [79.9, 60031.0], [80.0, 60032.0], [80.1, 60032.0], [80.2, 60032.0], [80.3, 60032.0], [80.4, 60032.0], [80.5, 60032.0], [80.6, 60032.0], [80.7, 60032.0], [80.8, 60032.0], [80.9, 60032.0], [81.0, 60033.0], [81.1, 60033.0], [81.2, 60033.0], [81.3, 60033.0], [81.4, 60033.0], [81.5, 60033.0], [81.6, 60033.0], [81.7, 60033.0], [81.8, 60033.0], [81.9, 60033.0], [82.0, 60034.0], [82.1, 60034.0], [82.2, 60034.0], [82.3, 60034.0], [82.4, 60034.0], [82.5, 60034.0], [82.6, 60034.0], [82.7, 60034.0], [82.8, 60034.0], [82.9, 60034.0], [83.0, 60034.0], [83.1, 60034.0], [83.2, 60034.0], [83.3, 60034.0], [83.4, 60034.0], [83.5, 60035.0], [83.6, 60035.0], [83.7, 60035.0], [83.8, 60035.0], [83.9, 60035.0], [84.0, 60035.0], [84.1, 60035.0], [84.2, 60035.0], [84.3, 60035.0], [84.4, 60035.0], [84.5, 60035.0], [84.6, 60035.0], [84.7, 60035.0], [84.8, 60035.0], [84.9, 60035.0], [85.0, 60037.0], [85.1, 60037.0], [85.2, 60037.0], [85.3, 60037.0], [85.4, 60037.0], [85.5, 60039.0], [85.6, 60039.0], [85.7, 60039.0], [85.8, 60039.0], [85.9, 60039.0], [86.0, 60040.0], [86.1, 60040.0], [86.2, 60040.0], [86.3, 60040.0], [86.4, 60040.0], [86.5, 60040.0], [86.6, 60040.0], [86.7, 60040.0], [86.8, 60040.0], [86.9, 60040.0], [87.0, 60040.0], [87.1, 60040.0], [87.2, 60040.0], [87.3, 60040.0], [87.4, 60040.0], [87.5, 60040.0], [87.6, 60040.0], [87.7, 60040.0], [87.8, 60040.0], [87.9, 60040.0], [88.0, 60040.0], [88.1, 60040.0], [88.2, 60040.0], [88.3, 60040.0], [88.4, 60040.0], [88.5, 60043.0], [88.6, 60043.0], [88.7, 60043.0], [88.8, 60043.0], [88.9, 60043.0], [89.0, 60043.0], [89.1, 60043.0], [89.2, 60043.0], [89.3, 60043.0], [89.4, 60043.0], [89.5, 60048.0], [89.6, 60048.0], [89.7, 60048.0], [89.8, 60048.0], [89.9, 60048.0], [90.0, 60048.0], [90.1, 60048.0], [90.2, 60048.0], [90.3, 60048.0], [90.4, 60048.0], [90.5, 60048.0], [90.6, 60048.0], [90.7, 60048.0], [90.8, 60048.0], [90.9, 60048.0], [91.0, 60049.0], [91.1, 60049.0], [91.2, 60049.0], [91.3, 60049.0], [91.4, 60049.0], [91.5, 60049.0], [91.6, 60049.0], [91.7, 60049.0], [91.8, 60049.0], [91.9, 60049.0], [92.0, 60050.0], [92.1, 60050.0], [92.2, 60050.0], [92.3, 60050.0], [92.4, 60050.0], [92.5, 60050.0], [92.6, 60050.0], [92.7, 60050.0], [92.8, 60050.0], [92.9, 60050.0], [93.0, 60053.0], [93.1, 60053.0], [93.2, 60053.0], [93.3, 60053.0], [93.4, 60053.0], [93.5, 60053.0], [93.6, 60053.0], [93.7, 60053.0], [93.8, 60053.0], [93.9, 60053.0], [94.0, 60054.0], [94.1, 60054.0], [94.2, 60054.0], [94.3, 60054.0], [94.4, 60054.0], [94.5, 60054.0], [94.6, 60054.0], [94.7, 60054.0], [94.8, 60054.0], [94.9, 60054.0], [95.0, 60054.0], [95.1, 60054.0], [95.2, 60054.0], [95.3, 60054.0], [95.4, 60054.0], [95.5, 60054.0], [95.6, 60054.0], [95.7, 60054.0], [95.8, 60054.0], [95.9, 60054.0], [96.0, 60055.0], [96.1, 60055.0], [96.2, 60055.0], [96.3, 60055.0], [96.4, 60055.0], [96.5, 60059.0], [96.6, 60059.0], [96.7, 60059.0], [96.8, 60059.0], [96.9, 60059.0], [97.0, 60059.0], [97.1, 60059.0], [97.2, 60059.0], [97.3, 60059.0], [97.4, 60059.0], [97.5, 60059.0], [97.6, 60059.0], [97.7, 60059.0], [97.8, 60059.0], [97.9, 60059.0], [98.0, 60059.0], [98.1, 60059.0], [98.2, 60059.0], [98.3, 60059.0], [98.4, 60059.0], [98.5, 60060.0], [98.6, 60060.0], [98.7, 60060.0], [98.8, 60060.0], [98.9, 60060.0], [99.0, 60069.0], [99.1, 60069.0], [99.2, 60069.0], [99.3, 60069.0], [99.4, 60069.0], [99.5, 60074.0], [99.6, 60074.0], [99.7, 60074.0], [99.8, 60074.0], [99.9, 60074.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9984.0, "series": [{"data": [[0.0, 7894.0], [2100.0, 3.0], [3000.0, 653.0], [3100.0, 136.0], [200.0, 264.0], [3400.0, 1.0], [15000.0, 90.0], [1000.0, 275.0], [4100.0, 1.0], [1100.0, 163.0], [1200.0, 28.0], [300.0, 230.0], [1300.0, 155.0], [1400.0, 6.0], [100.0, 9984.0], [400.0, 115.0], [7000.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12700.0, 13.0], [12800.0, 27.0], [13200.0, 30.0], [13000.0, 31.0], [12900.0, 11.0], [13300.0, 23.0], [13100.0, 10.0], [13400.0, 9.0], [13700.0, 9.0], [13600.0, 21.0], [13500.0, 16.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[60000.0, 200.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1913.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 10448.0, "series": [{"data": [[0.0, 8039.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 10448.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 1913.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 100.64, "minX": 1.61757672E12, "maxY": 178.42124999999987, "series": [{"data": [[1.61757672E12, 116.2799999999999]], "isOverall": false, "label": "CreateRoom-SelectFC-Ready", "isController": false}, {"data": [[1.61757672E12, 178.42124999999987]], "isOverall": false, "label": "JoinServer+ChangeNickName+JoinRoom&Ready", "isController": false}, {"data": [[1.61757678E12, 100.64]], "isOverall": false, "label": "JoinServer+JoinRoom&waitfor(1min)ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757678E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 2.0, "maxY": 60060.0, "series": [{"data": [[207.0, 30.0], [206.0, 28.5], [205.0, 27.333333333333332], [204.0, 28.42857142857143], [203.0, 27.666666666666664], [202.0, 28.0], [201.0, 27.5], [215.0, 28.307692307692307], [214.0, 27.333333333333332], [213.0, 28.071428571428573], [212.0, 27.875], [211.0, 27.8], [210.0, 28.181818181818183], [209.0, 40.6], [208.0, 28.727272727272727], [223.0, 27.8], [222.0, 28.333333333333332], [221.0, 27.8], [220.0, 28.0], [219.0, 30.0], [218.0, 27.5], [217.0, 29.0], [216.0, 28.28571428571429], [231.0, 29.428571428571427], [230.0, 28.03225806451613], [229.0, 27.69230769230769], [228.0, 28.12], [227.0, 27.837209302325583], [226.0, 28.0], [225.0, 28.095238095238095], [224.0, 28.0], [239.0, 182.28571428571428], [238.0, 172.16666666666669], [237.0, 161.16666666666669], [236.0, 116.23809523809524], [235.0, 42.5], [234.0, 35.88461538461539], [233.0, 27.5], [232.0, 28.363636363636363], [247.0, 36.22222222222223], [246.0, 34.09090909090909], [245.0, 31.366666666666664], [244.0, 36.5], [243.0, 49.35], [242.0, 95.78260869565217], [241.0, 169.5], [240.0, 183.33333333333334], [255.0, 40.42857142857143], [254.0, 42.0], [253.0, 41.27272727272727], [252.0, 38.68750000000001], [251.0, 37.40625], [250.0, 37.333333333333336], [249.0, 35.32142857142856], [248.0, 35.77777777777778], [270.0, 8056.599999999999], [271.0, 15067.75], [269.0, 700.2173913043479], [268.0, 57.625], [267.0, 66.33333333333333], [266.0, 63.77777777777778], [265.0, 62.17857142857142], [264.0, 62.0], [263.0, 62.625], [257.0, 40.0], [256.0, 41.625], [259.0, 44.0], [258.0, 43.57142857142857], [262.0, 53.052631578947384], [261.0, 49.333333333333336], [260.0, 43.9591836734694], [286.0, 28.2], [287.0, 27.941176470588232], [285.0, 27.789473684210527], [284.0, 28.243243243243246], [283.0, 28.166666666666664], [282.0, 27.81818181818182], [281.0, 27.5], [279.0, 560.1176470588234], [273.0, 3302.217391304348], [272.0, 11653.636363636362], [275.0, 14178.529411764708], [274.0, 15058.666666666666], [278.0, 27.555555555555557], [277.0, 29.2], [276.0, 15057.952380952382], [302.0, 28.7], [303.0, 27.0], [301.0, 28.04347826086957], [300.0, 27.909090909090907], [299.0, 27.5], [298.0, 28.25], [297.0, 27.0], [296.0, 30.0], [295.0, 27.4], [289.0, 29.076923076923077], [288.0, 29.257142857142856], [291.0, 27.75], [290.0, 1469.4383561643824], [294.0, 27.6], [293.0, 28.0], [292.0, 28.26315789473684], [318.0, 28.111111111111114], [319.0, 28.239130434782613], [317.0, 28.5], [316.0, 29.0], [315.0, 28.333333333333332], [314.0, 28.589743589743588], [313.0, 29.166666666666668], [312.0, 27.684210526315788], [311.0, 28.0], [305.0, 28.0], [304.0, 27.9], [307.0, 27.666666666666668], [306.0, 27.0], [310.0, 27.875], [309.0, 28.099999999999998], [308.0, 27.87878787878788], [334.0, 1683.464285714286], [335.0, 99.99999999999997], [333.0, 56.0], [332.0, 57.72222222222222], [331.0, 47.75], [330.0, 36.526315789473685], [329.0, 28.857142857142858], [328.0, 28.0], [327.0, 32.078947368421055], [321.0, 28.42857142857143], [320.0, 29.147058823529413], [323.0, 30.500000000000004], [322.0, 31.8], [326.0, 34.07692307692307], [325.0, 31.666666666666668], [324.0, 32.230769230769226], [350.0, 103.35714285714286], [351.0, 102.71428571428571], [349.0, 107.64285714285712], [348.0, 101.92857142857143], [347.0, 102.54878048780492], [346.0, 101.73076923076921], [345.0, 95.1935483870968], [344.0, 92.49999999999999], [343.0, 93.46153846153845], [337.0, 95.77777777777777], [336.0, 97.15], [339.0, 94.77777777777777], [338.0, 97.0], [342.0, 94.125], [341.0, 95.5], [340.0, 95.45454545454545], [366.0, 1579.7500000000002], [367.0, 1517.0545454545454], [365.0, 136.92499999999998], [364.0, 96.5], [363.0, 102.33333333333333], [362.0, 101.25000000000001], [361.0, 104.76666666666668], [360.0, 102.21428571428571], [359.0, 99.21276595744683], [353.0, 99.8], [352.0, 102.99999999999999], [355.0, 106.74285714285715], [354.0, 100.0], [358.0, 102.4], [357.0, 100.75], [356.0, 105.40000000000002], [382.0, 102.33333333333334], [383.0, 101.66666666666667], [381.0, 111.11340206185565], [380.0, 115.65811965811966], [379.0, 114.74418604651167], [378.0, 117.4236111111111], [377.0, 118.58490566037737], [376.0, 124.16000000000003], [375.0, 120.4814814814815], [369.0, 1364.22340425532], [368.0, 1382.1176470588239], [371.0, 112.87500000000003], [370.0, 112.85714285714283], [374.0, 112.66666666666667], [373.0, 114.64406779661014], [372.0, 115.66666666666667], [398.0, 288.1147842056931], [399.0, 854.738023952096], [397.0, 27.0], [396.0, 28.549999999999997], [395.0, 28.780487804878046], [394.0, 27.0], [393.0, 28.000000000000004], [392.0, 1469.2615384615383], [391.0, 837.2499999999999], [385.0, 1430.1393442622948], [384.0, 942.9904306220096], [387.0, 737.9880382775115], [386.0, 2890.0], [390.0, 1967.0172413793105], [389.0, 1344.619047619048], [388.0, 1154.272727272727], [411.0, 45.0], [412.0, 28.0], [413.0, 48.5], [414.0, 49.0], [400.0, 179.49272550921484], [417.0, 33.0], [416.0, 59.75], [418.0, 28.0], [419.0, 27.0], [420.0, 30.0], [421.0, 29.5], [422.0, 28.25], [423.0, 28.166666666666664], [424.0, 28.2], [430.0, 29.2], [431.0, 28.75], [428.0, 28.75], [429.0, 29.75], [425.0, 27.0], [426.0, 27.0], [427.0, 27.333333333333332], [433.0, 27.75], [432.0, 28.0], [434.0, 28.2], [435.0, 29.833333333333336], [436.0, 29.428571428571427], [437.0, 30.0], [438.0, 30.4], [439.0, 29.142857142857142], [440.0, 29.25], [446.0, 31.285714285714285], [447.0, 31.5], [444.0, 31.142857142857146], [445.0, 30.666666666666668], [441.0, 28.714285714285715], [442.0, 30.714285714285715], [443.0, 30.6], [449.0, 33.625], [448.0, 33.166666666666664], [450.0, 32.833333333333336], [451.0, 34.375], [452.0, 35.33333333333333], [453.0, 35.666666666666664], [454.0, 37.857142857142854], [455.0, 37.8], [456.0, 38.44444444444444], [462.0, 43.833333333333336], [463.0, 44.666666666666664], [460.0, 43.0], [461.0, 44.0], [457.0, 37.4], [458.0, 40.142857142857146], [459.0, 39.8], [465.0, 45.16666666666667], [464.0, 44.75000000000001], [466.0, 46.125], [467.0, 47.25], [468.0, 47.6], [469.0, 50.0], [470.0, 51.77777777777778], [471.0, 51.0], [472.0, 50.16666666666667], [478.0, 55.16666666666667], [479.0, 57.333333333333336], [476.0, 54.0], [477.0, 55.333333333333336], [473.0, 58.0], [474.0, 52.375], [475.0, 53.111111111111114], [481.0, 55.666666666666664], [480.0, 57.44444444444444], [482.0, 56.16666666666667], [483.0, 58.0], [484.0, 58.0], [485.0, 58.74999999999999], [486.0, 61.666666666666664], [487.0, 63.2], [488.0, 64.42857142857143], [494.0, 63.333333333333336], [495.0, 66.44444444444444], [492.0, 61.0], [493.0, 62.44444444444444], [489.0, 65.83333333333333], [490.0, 64.44444444444444], [491.0, 63.5], [497.0, 68.33333333333334], [496.0, 69.0], [498.0, 71.0], [499.0, 69.0], [500.0, 70.0], [501.0, 68.10000000000001], [502.0, 68.0], [503.0, 67.0], [504.0, 71.625], [510.0, 74.71428571428571], [511.0, 76.4], [508.0, 74.66666666666666], [509.0, 76.57142857142857], [505.0, 72.0], [506.0, 73.2], [507.0, 74.16666666666666], [515.0, 76.45454545454545], [512.0, 75.9], [527.0, 99.8], [513.0, 74.4], [514.0, 76.0], [516.0, 76.5], [517.0, 80.28571428571429], [518.0, 80.4], [519.0, 83.0], [539.0, 171.0], [538.0, 70.0], [537.0, 1068.0], [541.0, 125.22222222222224], [542.0, 30.0], [543.0, 30.5], [532.0, 67.0], [530.0, 68.0], [520.0, 78.71428571428571], [522.0, 68.0], [524.0, 96.0], [547.0, 30.6], [544.0, 28.5], [558.0, 29.75], [559.0, 31.818181818181817], [556.0, 32.857142857142854], [557.0, 33.111111111111114], [554.0, 38.42857142857143], [555.0, 31.333333333333332], [545.0, 27.0], [546.0, 28.0], [548.0, 35.12499999999999], [549.0, 39.77777777777778], [550.0, 40.0], [551.0, 34.75], [560.0, 29.0], [574.0, 35.125], [575.0, 36.8], [572.0, 33.909090909090914], [573.0, 39.6], [570.0, 34.083333333333336], [571.0, 36.0], [568.0, 33.666666666666664], [569.0, 33.22222222222222], [561.0, 41.666666666666664], [562.0, 30.166666666666664], [563.0, 30.714285714285715], [564.0, 31.83333333333332], [565.0, 32.0], [566.0, 33.4], [567.0, 33.111111111111114], [552.0, 40.0], [553.0, 30.25], [579.0, 40.27272727272727], [576.0, 35.0], [590.0, 41.77777777777778], [591.0, 42.5], [588.0, 40.5], [589.0, 172.64285714285714], [586.0, 53.20689655172415], [587.0, 44.714285714285715], [577.0, 35.833333333333336], [578.0, 35.25], [580.0, 38.666666666666664], [581.0, 35.77777777777778], [582.0, 38.25], [583.0, 37.285714285714285], [592.0, 45.50000000000001], [600.0, 188.0781114389864], [594.0, 54.5], [595.0, 56.2], [596.0, 55.333333333333336], [597.0, 55.125], [598.0, 56.888888888888886], [599.0, 54.699999999999996], [584.0, 36.0], [585.0, 40.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[446.91385000000145, 323.13050000000186]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[415.0, 13378.0], [413.0, 13276.0], [411.0, 13009.0], [431.0, 13313.0], [429.0, 13396.5], [427.0, 13039.0], [426.0, 13328.0], [425.0, 13257.0], [423.0, 12861.0], [421.0, 13039.0], [417.0, 13358.5], [446.0, 13033.0], [443.0, 13166.0], [442.0, 13602.0], [437.0, 12824.0], [433.0, 13627.0], [450.0, 13048.0], [463.0, 12903.0], [462.0, 12904.333333333334], [459.0, 12955.0], [458.0, 13093.5], [456.0, 12893.5], [453.0, 13019.5], [452.0, 12954.0], [449.0, 12859.0], [448.0, 12860.0], [467.0, 13660.0], [478.0, 13362.0], [477.0, 13084.5], [474.0, 13161.5], [472.0, 13426.5], [471.0, 12973.0], [470.0, 13067.0], [469.0, 13160.333333333334], [468.0, 13179.0], [466.0, 12946.5], [465.0, 13327.75], [482.0, 13471.0], [494.0, 13047.5], [488.0, 13336.5], [487.0, 13231.0], [485.0, 13609.0], [484.0, 13320.0], [483.0, 12822.0], [481.0, 13620.0], [480.0, 13680.0], [498.0, 12967.0], [509.0, 13209.0], [510.0, 13102.0], [508.0, 13205.0], [506.0, 13271.0], [505.0, 13440.0], [503.0, 13179.333333333334], [501.0, 13088.0], [500.0, 13260.0], [497.0, 12824.0], [496.0, 13406.5], [519.0, 13380.5], [540.0, 13692.0], [541.0, 13244.0], [536.0, 12823.0], [517.0, 13078.5], [515.0, 13063.0], [513.0, 13268.0], [512.0, 13134.0], [533.0, 12747.0], [530.0, 13706.0], [525.0, 13151.333333333334], [522.0, 12816.0], [521.0, 13544.0], [520.0, 13324.0], [568.0, 13269.57142857143], [574.0, 12938.0], [575.0, 13452.5], [561.0, 13267.5], [573.0, 12991.4], [572.0, 13678.0], [571.0, 12821.0], [557.0, 13321.0], [556.0, 13700.0], [554.0, 13031.0], [553.0, 13322.0], [552.0, 13660.0], [559.0, 13174.0], [544.0, 13315.5], [547.0, 13156.333333333334], [546.0, 12766.0], [551.0, 13630.0], [549.0, 13551.0], [567.0, 13499.0], [566.0, 13146.0], [565.0, 13405.5], [563.0, 13260.0], [600.0, 13194.285714285716], [586.0, 13296.5], [584.0, 13327.333333333334], [582.0, 13446.5], [581.0, 13386.666666666666], [580.0, 13059.0], [578.0, 13130.5], [577.0, 12923.0], [576.0, 13580.5]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[516.2600000000001, 13211.935000000001]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[2.0, 60037.5], [5.0, 60035.0], [6.0, 60030.0], [7.0, 60028.0], [8.0, 60028.0], [9.0, 60027.0], [10.0, 60027.0], [11.0, 60029.0], [12.0, 60027.0], [13.0, 60028.0], [14.0, 60028.0], [15.0, 60029.0], [16.0, 60027.0], [17.0, 60027.0], [18.0, 60026.0], [19.0, 60028.0], [20.0, 60028.0], [21.0, 60031.0], [22.0, 60029.0], [23.0, 60028.0], [24.0, 60027.0], [25.0, 60028.0], [26.0, 60034.0], [27.0, 60028.0], [28.0, 60028.0], [29.0, 60030.0], [30.0, 60027.0], [31.0, 60028.0], [33.0, 60028.0], [32.0, 60029.0], [35.0, 60027.0], [34.0, 60027.0], [37.0, 60027.0], [36.0, 60027.0], [39.0, 60028.0], [38.0, 60029.0], [41.0, 60027.0], [40.0, 60027.0], [43.0, 60027.0], [42.0, 60027.0], [45.0, 60027.0], [44.0, 60028.0], [47.0, 60028.0], [46.0, 60028.0], [49.0, 60027.0], [48.0, 60027.0], [51.0, 60028.0], [50.0, 60028.0], [53.0, 60027.0], [52.0, 60026.0], [55.0, 60028.0], [54.0, 60028.0], [57.0, 60028.0], [56.0, 60028.0], [59.0, 60029.0], [58.0, 60029.0], [61.0, 60028.0], [60.0, 60028.0], [63.0, 60028.0], [62.0, 60028.0], [67.0, 60028.0], [66.0, 60027.0], [65.0, 60027.0], [64.0, 60027.0], [71.0, 60031.5], [69.0, 60029.0], [68.0, 60029.0], [75.0, 60028.0], [74.0, 60029.0], [73.0, 60030.0], [72.0, 60028.0], [79.0, 60027.0], [78.0, 60027.0], [77.0, 60028.0], [76.0, 60027.0], [83.0, 60029.0], [82.0, 60026.0], [81.0, 60028.0], [80.0, 60029.0], [87.0, 60028.0], [86.0, 60027.0], [85.0, 60028.0], [84.0, 60027.0], [91.0, 60028.0], [90.0, 60028.0], [89.0, 60028.0], [88.0, 60028.0], [95.0, 60029.0], [94.0, 60027.0], [93.0, 60028.0], [92.0, 60028.0], [99.0, 60027.0], [98.0, 60028.0], [97.0, 60027.0], [96.0, 60028.0], [103.0, 60028.0], [102.0, 60028.0], [101.0, 60028.0], [100.0, 60029.0], [107.0, 60029.0], [106.0, 60027.0], [105.0, 60027.0], [104.0, 60029.0], [111.0, 60030.0], [110.0, 60027.0], [109.0, 60028.0], [108.0, 60027.0], [115.0, 60031.0], [114.0, 60030.5], [112.0, 60029.0], [119.0, 60029.0], [118.0, 60027.0], [117.0, 60030.0], [116.0, 60028.0], [123.0, 60027.0], [122.0, 60028.0], [121.0, 60032.0], [120.0, 60029.0], [127.0, 60028.0], [126.0, 60027.0], [125.0, 60031.5], [135.0, 60029.0], [134.0, 60028.0], [133.0, 60029.0], [132.0, 60030.0], [131.0, 60029.0], [130.0, 60028.0], [129.0, 60027.0], [128.0, 60028.0], [139.0, 60030.0], [138.0, 60029.0], [137.0, 60028.0], [136.0, 60028.0], [151.0, 60028.0], [150.0, 60049.0], [149.0, 60027.0], [148.0, 60028.0], [147.0, 60060.0], [146.0, 60029.0], [145.0, 60030.0], [144.0, 60055.4], [159.0, 60059.0], [158.0, 60056.5], [156.0, 60031.0], [155.0, 60028.0], [154.0, 60051.5], [152.0, 60027.0], [167.0, 60050.0], [166.0, 60030.0], [165.0, 60059.0], [164.0, 60027.0], [163.0, 60028.0], [162.0, 60048.0], [161.0, 60030.0], [160.0, 60029.0], [175.0, 60056.5], [173.0, 60031.0], [172.0, 60054.0], [171.0, 60050.0], [170.0, 60028.0], [169.0, 60028.0], [168.0, 60029.0], [183.0, 60029.0], [182.0, 60030.0], [181.0, 60028.0], [180.0, 60045.5], [178.0, 60028.0], [177.0, 60029.0], [176.0, 60028.0], [191.0, 60040.0], [190.0, 60029.0], [189.0, 60037.5], [187.0, 60027.0], [186.0, 60034.5], [184.0, 60030.0], [198.0, 60033.5], [196.0, 60041.333333333336], [193.0, 60027.0], [192.0, 60029.0], [200.0, 60048.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}, {"data": [[100.64, 60031.79499999999]], "isOverall": false, "label": "JoinRoom&Wait60sec-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61757672E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757678E12, 0.0], [1.61757672E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61757678E12, 0.0], [1.61757672E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757678E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 323.13050000000186, "minX": 1.61757672E12, "maxY": 60031.79499999999, "series": [{"data": [[1.61757672E12, 323.13050000000186]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757672E12, 13211.935000000001]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757678E12, 60031.79499999999]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757678E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757672E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757672E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757672E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757678E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757678E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757672E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757672E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757672E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757678E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757678E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61757672E12, "maxY": 60074.0, "series": [{"data": [[1.61757678E12, 60074.0], [1.61757672E12, 15078.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61757678E12, 60048.0], [1.61757672E12, 362.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61757678E12, 60068.91], [1.61757672E12, 13178.990000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61757678E12, 60054.0], [1.61757672E12, 3044.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61757678E12, 60026.0], [1.61757672E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61757678E12, 60028.0], [1.61757672E12, 115.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757678E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 60043.0, "series": [{"data": [[516.0, 29.0], [734.0, 161.0], [704.0, 39.0], [46.0, 28.0], [778.0, 149.0], [820.0, 149.0], [881.0, 77.0], [941.0, 100.0], [979.0, 129.0], [1087.0, 41.0], [1067.0, 120.0], [4.0, 1030.5], [70.0, 28.0], [1208.0, 63.0], [1247.0, 115.0], [1285.0, 114.0], [1315.0, 135.0], [1313.0, 133.0], [5.0, 28.0], [1450.0, 65.0], [1437.0, 138.0], [199.0, 60028.0], [14.0, 1035.0], [239.0, 33.0], [241.0, 109.0], [1.0, 60043.0], [285.0, 3043.0], [315.0, 28.0], [333.0, 28.0], [382.0, 31.0], [29.0, 28.0], [475.0, 46.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1450.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[516.0, 0.0], [734.0, 0.0], [704.0, 0.0], [46.0, 0.0], [778.0, 0.0], [820.0, 0.0], [881.0, 0.0], [941.0, 0.0], [979.0, 0.0], [1087.0, 0.0], [1067.0, 0.0], [4.0, 0.0], [70.0, 0.0], [1208.0, 0.0], [1247.0, 0.0], [1285.0, 0.0], [1315.0, 0.0], [1313.0, 0.0], [5.0, 0.0], [1450.0, 0.0], [1437.0, 0.0], [199.0, 0.0], [14.0, 0.0], [239.0, 0.0], [241.0, 0.0], [1.0, 0.0], [285.0, 0.0], [315.0, 0.0], [333.0, 0.0], [382.0, 0.0], [29.0, 0.0], [475.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1450.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 340.0, "minX": 1.61757672E12, "maxY": 340.0, "series": [{"data": [[1.61757672E12, 340.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757672E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.61757672E12, "maxY": 336.6666666666667, "series": [{"data": [[1.61757678E12, 3.3333333333333335], [1.61757672E12, 336.6666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757678E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.61757672E12, "maxY": 333.3333333333333, "series": [{"data": [[1.61757678E12, 3.3333333333333335]], "isOverall": false, "label": "JoinRoom&Wait60sec-success", "isController": false}, {"data": [[1.61757672E12, 3.3333333333333335]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61757672E12, 333.3333333333333]], "isOverall": false, "label": "JoinRoom-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757678E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.61757672E12, "maxY": 336.6666666666667, "series": [{"data": [[1.61757678E12, 3.3333333333333335], [1.61757672E12, 336.6666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757678E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

