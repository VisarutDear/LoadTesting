/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 60190.0, "series": [{"data": [[0.0, 60026.0], [0.1, 60026.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60026.0], [1.6, 60026.0], [1.7, 60026.0], [1.8, 60026.0], [1.9, 60026.0], [2.0, 60026.0], [2.1, 60026.0], [2.2, 60026.0], [2.3, 60027.0], [2.4, 60027.0], [2.5, 60027.0], [2.6, 60027.0], [2.7, 60027.0], [2.8, 60027.0], [2.9, 60027.0], [3.0, 60027.0], [3.1, 60027.0], [3.2, 60027.0], [3.3, 60027.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60027.0], [12.4, 60027.0], [12.5, 60027.0], [12.6, 60027.0], [12.7, 60027.0], [12.8, 60027.0], [12.9, 60027.0], [13.0, 60027.0], [13.1, 60027.0], [13.2, 60027.0], [13.3, 60027.0], [13.4, 60027.0], [13.5, 60027.0], [13.6, 60027.0], [13.7, 60027.0], [13.8, 60027.0], [13.9, 60027.0], [14.0, 60027.0], [14.1, 60027.0], [14.2, 60027.0], [14.3, 60027.0], [14.4, 60027.0], [14.5, 60027.0], [14.6, 60027.0], [14.7, 60027.0], [14.8, 60027.0], [14.9, 60027.0], [15.0, 60027.0], [15.1, 60027.0], [15.2, 60027.0], [15.3, 60027.0], [15.4, 60027.0], [15.5, 60027.0], [15.6, 60027.0], [15.7, 60027.0], [15.8, 60027.0], [15.9, 60027.0], [16.0, 60028.0], [16.1, 60028.0], [16.2, 60028.0], [16.3, 60028.0], [16.4, 60028.0], [16.5, 60028.0], [16.6, 60028.0], [16.7, 60028.0], [16.8, 60028.0], [16.9, 60028.0], [17.0, 60028.0], [17.1, 60028.0], [17.2, 60028.0], [17.3, 60028.0], [17.4, 60028.0], [17.5, 60028.0], [17.6, 60028.0], [17.7, 60028.0], [17.8, 60028.0], [17.9, 60028.0], [18.0, 60028.0], [18.1, 60028.0], [18.2, 60028.0], [18.3, 60028.0], [18.4, 60028.0], [18.5, 60028.0], [18.6, 60028.0], [18.7, 60028.0], [18.8, 60028.0], [18.9, 60028.0], [19.0, 60028.0], [19.1, 60028.0], [19.2, 60028.0], [19.3, 60028.0], [19.4, 60028.0], [19.5, 60028.0], [19.6, 60028.0], [19.7, 60028.0], [19.8, 60028.0], [19.9, 60028.0], [20.0, 60028.0], [20.1, 60028.0], [20.2, 60028.0], [20.3, 60028.0], [20.4, 60028.0], [20.5, 60028.0], [20.6, 60028.0], [20.7, 60028.0], [20.8, 60028.0], [20.9, 60028.0], [21.0, 60028.0], [21.1, 60028.0], [21.2, 60028.0], [21.3, 60028.0], [21.4, 60028.0], [21.5, 60028.0], [21.6, 60028.0], [21.7, 60028.0], [21.8, 60028.0], [21.9, 60028.0], [22.0, 60028.0], [22.1, 60028.0], [22.2, 60028.0], [22.3, 60028.0], [22.4, 60028.0], [22.5, 60028.0], [22.6, 60028.0], [22.7, 60028.0], [22.8, 60028.0], [22.9, 60028.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60028.0], [30.5, 60028.0], [30.6, 60028.0], [30.7, 60028.0], [30.8, 60028.0], [30.9, 60028.0], [31.0, 60028.0], [31.1, 60028.0], [31.2, 60028.0], [31.3, 60028.0], [31.4, 60028.0], [31.5, 60028.0], [31.6, 60028.0], [31.7, 60028.0], [31.8, 60028.0], [31.9, 60028.0], [32.0, 60028.0], [32.1, 60028.0], [32.2, 60028.0], [32.3, 60028.0], [32.4, 60028.0], [32.5, 60028.0], [32.6, 60028.0], [32.7, 60028.0], [32.8, 60028.0], [32.9, 60028.0], [33.0, 60028.0], [33.1, 60028.0], [33.2, 60028.0], [33.3, 60028.0], [33.4, 60028.0], [33.5, 60028.0], [33.6, 60028.0], [33.7, 60028.0], [33.8, 60028.0], [33.9, 60028.0], [34.0, 60028.0], [34.1, 60028.0], [34.2, 60028.0], [34.3, 60028.0], [34.4, 60028.0], [34.5, 60028.0], [34.6, 60028.0], [34.7, 60028.0], [34.8, 60028.0], [34.9, 60028.0], [35.0, 60028.0], [35.1, 60028.0], [35.2, 60028.0], [35.3, 60028.0], [35.4, 60028.0], [35.5, 60028.0], [35.6, 60028.0], [35.7, 60028.0], [35.8, 60028.0], [35.9, 60028.0], [36.0, 60028.0], [36.1, 60028.0], [36.2, 60028.0], [36.3, 60028.0], [36.4, 60028.0], [36.5, 60028.0], [36.6, 60028.0], [36.7, 60028.0], [36.8, 60029.0], [36.9, 60029.0], [37.0, 60029.0], [37.1, 60029.0], [37.2, 60029.0], [37.3, 60029.0], [37.4, 60029.0], [37.5, 60029.0], [37.6, 60029.0], [37.7, 60029.0], [37.8, 60029.0], [37.9, 60029.0], [38.0, 60029.0], [38.1, 60029.0], [38.2, 60029.0], [38.3, 60029.0], [38.4, 60029.0], [38.5, 60029.0], [38.6, 60029.0], [38.7, 60029.0], [38.8, 60029.0], [38.9, 60029.0], [39.0, 60029.0], [39.1, 60029.0], [39.2, 60029.0], [39.3, 60029.0], [39.4, 60029.0], [39.5, 60029.0], [39.6, 60029.0], [39.7, 60029.0], [39.8, 60029.0], [39.9, 60029.0], [40.0, 60029.0], [40.1, 60029.0], [40.2, 60029.0], [40.3, 60029.0], [40.4, 60029.0], [40.5, 60029.0], [40.6, 60029.0], [40.7, 60029.0], [40.8, 60029.0], [40.9, 60029.0], [41.0, 60029.0], [41.1, 60029.0], [41.2, 60029.0], [41.3, 60029.0], [41.4, 60029.0], [41.5, 60029.0], [41.6, 60029.0], [41.7, 60029.0], [41.8, 60029.0], [41.9, 60029.0], [42.0, 60029.0], [42.1, 60029.0], [42.2, 60029.0], [42.3, 60029.0], [42.4, 60029.0], [42.5, 60029.0], [42.6, 60029.0], [42.7, 60029.0], [42.8, 60029.0], [42.9, 60029.0], [43.0, 60029.0], [43.1, 60029.0], [43.2, 60029.0], [43.3, 60029.0], [43.4, 60029.0], [43.5, 60029.0], [43.6, 60029.0], [43.7, 60029.0], [43.8, 60029.0], [43.9, 60029.0], [44.0, 60029.0], [44.1, 60029.0], [44.2, 60029.0], [44.3, 60029.0], [44.4, 60029.0], [44.5, 60029.0], [44.6, 60029.0], [44.7, 60029.0], [44.8, 60029.0], [44.9, 60029.0], [45.0, 60029.0], [45.1, 60029.0], [45.2, 60029.0], [45.3, 60029.0], [45.4, 60029.0], [45.5, 60029.0], [45.6, 60029.0], [45.7, 60029.0], [45.8, 60029.0], [45.9, 60029.0], [46.0, 60029.0], [46.1, 60029.0], [46.2, 60029.0], [46.3, 60029.0], [46.4, 60029.0], [46.5, 60029.0], [46.6, 60029.0], [46.7, 60029.0], [46.8, 60029.0], [46.9, 60029.0], [47.0, 60029.0], [47.1, 60029.0], [47.2, 60029.0], [47.3, 60029.0], [47.4, 60029.0], [47.5, 60029.0], [47.6, 60029.0], [47.7, 60029.0], [47.8, 60029.0], [47.9, 60029.0], [48.0, 60029.0], [48.1, 60029.0], [48.2, 60029.0], [48.3, 60029.0], [48.4, 60029.0], [48.5, 60029.0], [48.6, 60029.0], [48.7, 60029.0], [48.8, 60029.0], [48.9, 60029.0], [49.0, 60029.0], [49.1, 60029.0], [49.2, 60029.0], [49.3, 60030.0], [49.4, 60030.0], [49.5, 60030.0], [49.6, 60030.0], [49.7, 60030.0], [49.8, 60030.0], [49.9, 60030.0], [50.0, 60030.0], [50.1, 60030.0], [50.2, 60030.0], [50.3, 60030.0], [50.4, 60030.0], [50.5, 60030.0], [50.6, 60030.0], [50.7, 60030.0], [50.8, 60030.0], [50.9, 60030.0], [51.0, 60030.0], [51.1, 60030.0], [51.2, 60030.0], [51.3, 60030.0], [51.4, 60030.0], [51.5, 60030.0], [51.6, 60030.0], [51.7, 60030.0], [51.8, 60030.0], [51.9, 60030.0], [52.0, 60030.0], [52.1, 60030.0], [52.2, 60030.0], [52.3, 60030.0], [52.4, 60030.0], [52.5, 60030.0], [52.6, 60030.0], [52.7, 60030.0], [52.8, 60030.0], [52.9, 60030.0], [53.0, 60030.0], [53.1, 60030.0], [53.2, 60030.0], [53.3, 60030.0], [53.4, 60030.0], [53.5, 60030.0], [53.6, 60030.0], [53.7, 60030.0], [53.8, 60030.0], [53.9, 60030.0], [54.0, 60030.0], [54.1, 60030.0], [54.2, 60030.0], [54.3, 60030.0], [54.4, 60030.0], [54.5, 60030.0], [54.6, 60030.0], [54.7, 60030.0], [54.8, 60030.0], [54.9, 60030.0], [55.0, 60030.0], [55.1, 60030.0], [55.2, 60030.0], [55.3, 60030.0], [55.4, 60030.0], [55.5, 60031.0], [55.6, 60031.0], [55.7, 60031.0], [55.8, 60031.0], [55.9, 60031.0], [56.0, 60031.0], [56.1, 60031.0], [56.2, 60031.0], [56.3, 60031.0], [56.4, 60031.0], [56.5, 60031.0], [56.6, 60031.0], [56.7, 60031.0], [56.8, 60031.0], [56.9, 60031.0], [57.0, 60031.0], [57.1, 60031.0], [57.2, 60031.0], [57.3, 60031.0], [57.4, 60031.0], [57.5, 60031.0], [57.6, 60031.0], [57.7, 60031.0], [57.8, 60031.0], [57.9, 60031.0], [58.0, 60031.0], [58.1, 60031.0], [58.2, 60031.0], [58.3, 60031.0], [58.4, 60031.0], [58.5, 60031.0], [58.6, 60031.0], [58.7, 60031.0], [58.8, 60031.0], [58.9, 60031.0], [59.0, 60032.0], [59.1, 60032.0], [59.2, 60032.0], [59.3, 60032.0], [59.4, 60032.0], [59.5, 60032.0], [59.6, 60032.0], [59.7, 60032.0], [59.8, 60032.0], [59.9, 60032.0], [60.0, 60032.0], [60.1, 60032.0], [60.2, 60032.0], [60.3, 60032.0], [60.4, 60032.0], [60.5, 60032.0], [60.6, 60032.0], [60.7, 60032.0], [60.8, 60032.0], [60.9, 60032.0], [61.0, 60032.0], [61.1, 60033.0], [61.2, 60033.0], [61.3, 60033.0], [61.4, 60033.0], [61.5, 60033.0], [61.6, 60033.0], [61.7, 60033.0], [61.8, 60033.0], [61.9, 60033.0], [62.0, 60033.0], [62.1, 60033.0], [62.2, 60033.0], [62.3, 60033.0], [62.4, 60033.0], [62.5, 60033.0], [62.6, 60033.0], [62.7, 60033.0], [62.8, 60033.0], [62.9, 60034.0], [63.0, 60034.0], [63.1, 60034.0], [63.2, 60034.0], [63.3, 60034.0], [63.4, 60034.0], [63.5, 60034.0], [63.6, 60034.0], [63.7, 60034.0], [63.8, 60034.0], [63.9, 60034.0], [64.0, 60034.0], [64.1, 60034.0], [64.2, 60034.0], [64.3, 60035.0], [64.4, 60035.0], [64.5, 60035.0], [64.6, 60035.0], [64.7, 60035.0], [64.8, 60035.0], [64.9, 60035.0], [65.0, 60035.0], [65.1, 60035.0], [65.2, 60035.0], [65.3, 60035.0], [65.4, 60035.0], [65.5, 60035.0], [65.6, 60035.0], [65.7, 60035.0], [65.8, 60035.0], [65.9, 60035.0], [66.0, 60036.0], [66.1, 60036.0], [66.2, 60036.0], [66.3, 60036.0], [66.4, 60036.0], [66.5, 60036.0], [66.6, 60036.0], [66.7, 60036.0], [66.8, 60036.0], [66.9, 60036.0], [67.0, 60036.0], [67.1, 60036.0], [67.2, 60037.0], [67.3, 60037.0], [67.4, 60037.0], [67.5, 60037.0], [67.6, 60037.0], [67.7, 60037.0], [67.8, 60037.0], [67.9, 60038.0], [68.0, 60038.0], [68.1, 60038.0], [68.2, 60039.0], [68.3, 60039.0], [68.4, 60039.0], [68.5, 60039.0], [68.6, 60040.0], [68.7, 60040.0], [68.8, 60040.0], [68.9, 60040.0], [69.0, 60040.0], [69.1, 60040.0], [69.2, 60040.0], [69.3, 60041.0], [69.4, 60041.0], [69.5, 60041.0], [69.6, 60041.0], [69.7, 60041.0], [69.8, 60042.0], [69.9, 60042.0], [70.0, 60042.0], [70.1, 60042.0], [70.2, 60042.0], [70.3, 60042.0], [70.4, 60042.0], [70.5, 60042.0], [70.6, 60042.0], [70.7, 60042.0], [70.8, 60042.0], [70.9, 60042.0], [71.0, 60043.0], [71.1, 60043.0], [71.2, 60043.0], [71.3, 60043.0], [71.4, 60043.0], [71.5, 60043.0], [71.6, 60043.0], [71.7, 60043.0], [71.8, 60043.0], [71.9, 60043.0], [72.0, 60043.0], [72.1, 60043.0], [72.2, 60043.0], [72.3, 60043.0], [72.4, 60043.0], [72.5, 60043.0], [72.6, 60044.0], [72.7, 60044.0], [72.8, 60044.0], [72.9, 60044.0], [73.0, 60044.0], [73.1, 60044.0], [73.2, 60044.0], [73.3, 60044.0], [73.4, 60044.0], [73.5, 60044.0], [73.6, 60044.0], [73.7, 60044.0], [73.8, 60044.0], [73.9, 60044.0], [74.0, 60044.0], [74.1, 60044.0], [74.2, 60045.0], [74.3, 60045.0], [74.4, 60045.0], [74.5, 60045.0], [74.6, 60045.0], [74.7, 60045.0], [74.8, 60045.0], [74.9, 60045.0], [75.0, 60045.0], [75.1, 60045.0], [75.2, 60045.0], [75.3, 60045.0], [75.4, 60045.0], [75.5, 60045.0], [75.6, 60045.0], [75.7, 60045.0], [75.8, 60045.0], [75.9, 60046.0], [76.0, 60046.0], [76.1, 60046.0], [76.2, 60046.0], [76.3, 60046.0], [76.4, 60046.0], [76.5, 60046.0], [76.6, 60046.0], [76.7, 60046.0], [76.8, 60046.0], [76.9, 60047.0], [77.0, 60047.0], [77.1, 60047.0], [77.2, 60047.0], [77.3, 60047.0], [77.4, 60047.0], [77.5, 60047.0], [77.6, 60047.0], [77.7, 60047.0], [77.8, 60047.0], [77.9, 60048.0], [78.0, 60048.0], [78.1, 60048.0], [78.2, 60048.0], [78.3, 60048.0], [78.4, 60048.0], [78.5, 60048.0], [78.6, 60048.0], [78.7, 60049.0], [78.8, 60049.0], [78.9, 60049.0], [79.0, 60049.0], [79.1, 60049.0], [79.2, 60049.0], [79.3, 60050.0], [79.4, 60050.0], [79.5, 60050.0], [79.6, 60050.0], [79.7, 60050.0], [79.8, 60051.0], [79.9, 60051.0], [80.0, 60051.0], [80.1, 60051.0], [80.2, 60051.0], [80.3, 60051.0], [80.4, 60052.0], [80.5, 60052.0], [80.6, 60052.0], [80.7, 60052.0], [80.8, 60053.0], [80.9, 60053.0], [81.0, 60053.0], [81.1, 60053.0], [81.2, 60053.0], [81.3, 60054.0], [81.4, 60054.0], [81.5, 60054.0], [81.6, 60054.0], [81.7, 60055.0], [81.8, 60055.0], [81.9, 60055.0], [82.0, 60056.0], [82.1, 60056.0], [82.2, 60056.0], [82.3, 60057.0], [82.4, 60057.0], [82.5, 60057.0], [82.6, 60058.0], [82.7, 60058.0], [82.8, 60058.0], [82.9, 60058.0], [83.0, 60059.0], [83.1, 60059.0], [83.2, 60059.0], [83.3, 60059.0], [83.4, 60060.0], [83.5, 60060.0], [83.6, 60060.0], [83.7, 60060.0], [83.8, 60060.0], [83.9, 60060.0], [84.0, 60060.0], [84.1, 60060.0], [84.2, 60061.0], [84.3, 60061.0], [84.4, 60061.0], [84.5, 60061.0], [84.6, 60061.0], [84.7, 60061.0], [84.8, 60061.0], [84.9, 60061.0], [85.0, 60061.0], [85.1, 60061.0], [85.2, 60061.0], [85.3, 60061.0], [85.4, 60061.0], [85.5, 60061.0], [85.6, 60061.0], [85.7, 60062.0], [85.8, 60062.0], [85.9, 60062.0], [86.0, 60062.0], [86.1, 60062.0], [86.2, 60062.0], [86.3, 60062.0], [86.4, 60062.0], [86.5, 60062.0], [86.6, 60062.0], [86.7, 60063.0], [86.8, 60063.0], [86.9, 60063.0], [87.0, 60063.0], [87.1, 60063.0], [87.2, 60063.0], [87.3, 60063.0], [87.4, 60064.0], [87.5, 60064.0], [87.6, 60064.0], [87.7, 60065.0], [87.8, 60065.0], [87.9, 60065.0], [88.0, 60065.0], [88.1, 60066.0], [88.2, 60066.0], [88.3, 60067.0], [88.4, 60069.0], [88.5, 60069.0], [88.6, 60069.0], [88.7, 60071.0], [88.8, 60074.0], [88.9, 60074.0], [89.0, 60075.0], [89.1, 60075.0], [89.2, 60076.0], [89.3, 60077.0], [89.4, 60078.0], [89.5, 60079.0], [89.6, 60079.0], [89.7, 60082.0], [89.8, 60082.0], [89.9, 60083.0], [90.0, 60083.0], [90.1, 60085.0], [90.2, 60086.0], [90.3, 60087.0], [90.4, 60087.0], [90.5, 60090.0], [90.6, 60099.0], [90.7, 60099.0], [90.8, 60101.0], [90.9, 60101.0], [91.0, 60101.0], [91.1, 60102.0], [91.2, 60102.0], [91.3, 60102.0], [91.4, 60102.0], [91.5, 60103.0], [91.6, 60106.0], [91.7, 60106.0], [91.8, 60106.0], [91.9, 60111.0], [92.0, 60112.0], [92.1, 60112.0], [92.2, 60112.0], [92.3, 60116.0], [92.4, 60116.0], [92.5, 60116.0], [92.6, 60116.0], [92.7, 60116.0], [92.8, 60121.0], [92.9, 60121.0], [93.0, 60123.0], [93.1, 60123.0], [93.2, 60124.0], [93.3, 60126.0], [93.4, 60128.0], [93.5, 60128.0], [93.6, 60128.0], [93.7, 60128.0], [93.8, 60130.0], [93.9, 60130.0], [94.0, 60131.0], [94.1, 60131.0], [94.2, 60131.0], [94.3, 60131.0], [94.4, 60131.0], [94.5, 60131.0], [94.6, 60131.0], [94.7, 60131.0], [94.8, 60131.0], [94.9, 60131.0], [95.0, 60134.0], [95.1, 60134.0], [95.2, 60134.0], [95.3, 60135.0], [95.4, 60137.0], [95.5, 60138.0], [95.6, 60138.0], [95.7, 60138.0], [95.8, 60138.0], [95.9, 60138.0], [96.0, 60138.0], [96.1, 60138.0], [96.2, 60139.0], [96.3, 60140.0], [96.4, 60144.0], [96.5, 60146.0], [96.6, 60148.0], [96.7, 60150.0], [96.8, 60150.0], [96.9, 60151.0], [97.0, 60154.0], [97.1, 60154.0], [97.2, 60154.0], [97.3, 60158.0], [97.4, 60158.0], [97.5, 60159.0], [97.6, 60164.0], [97.7, 60165.0], [97.8, 60165.0], [97.9, 60170.0], [98.0, 60171.0], [98.1, 60172.0], [98.2, 60173.0], [98.3, 60173.0], [98.4, 60175.0], [98.5, 60176.0], [98.6, 60177.0], [98.7, 60177.0], [98.8, 60179.0], [98.9, 60180.0], [99.0, 60180.0], [99.1, 60181.0], [99.2, 60182.0], [99.3, 60182.0], [99.4, 60182.0], [99.5, 60184.0], [99.6, 60185.0], [99.7, 60187.0], [99.8, 60189.0], [99.9, 60190.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 26.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 28.0], [0.7, 28.0], [0.8, 28.0], [0.9, 28.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 28.0], [1.4, 28.0], [1.5, 28.0], [1.6, 29.0], [1.7, 29.0], [1.8, 29.0], [1.9, 29.0], [2.0, 29.0], [2.1, 29.0], [2.2, 29.0], [2.3, 30.0], [2.4, 30.0], [2.5, 30.0], [2.6, 30.0], [2.7, 30.0], [2.8, 31.0], [2.9, 31.0], [3.0, 31.0], [3.1, 31.0], [3.2, 32.0], [3.3, 32.0], [3.4, 32.0], [3.5, 32.0], [3.6, 33.0], [3.7, 33.0], [3.8, 33.0], [3.9, 34.0], [4.0, 34.0], [4.1, 34.0], [4.2, 35.0], [4.3, 35.0], [4.4, 36.0], [4.5, 36.0], [4.6, 37.0], [4.7, 37.0], [4.8, 38.0], [4.9, 39.0], [5.0, 39.0], [5.1, 40.0], [5.2, 41.0], [5.3, 42.0], [5.4, 42.0], [5.5, 43.0], [5.6, 44.0], [5.7, 44.0], [5.8, 46.0], [5.9, 47.0], [6.0, 47.0], [6.1, 48.0], [6.2, 49.0], [6.3, 51.0], [6.4, 52.0], [6.5, 53.0], [6.6, 54.0], [6.7, 55.0], [6.8, 56.0], [6.9, 57.0], [7.0, 58.0], [7.1, 59.0], [7.2, 61.0], [7.3, 62.0], [7.4, 63.0], [7.5, 65.0], [7.6, 67.0], [7.7, 68.0], [7.8, 69.0], [7.9, 71.0], [8.0, 73.0], [8.1, 74.0], [8.2, 76.0], [8.3, 80.0], [8.4, 84.0], [8.5, 86.0], [8.6, 89.0], [8.7, 91.0], [8.8, 94.0], [8.9, 98.0], [9.0, 101.0], [9.1, 102.0], [9.2, 104.0], [9.3, 105.0], [9.4, 107.0], [9.5, 109.0], [9.6, 110.0], [9.7, 112.0], [9.8, 113.0], [9.9, 115.0], [10.0, 117.0], [10.1, 119.0], [10.2, 121.0], [10.3, 125.0], [10.4, 127.0], [10.5, 129.0], [10.6, 134.0], [10.7, 138.0], [10.8, 141.0], [10.9, 143.0], [11.0, 145.0], [11.1, 147.0], [11.2, 149.0], [11.3, 151.0], [11.4, 152.0], [11.5, 157.0], [11.6, 161.0], [11.7, 167.0], [11.8, 173.0], [11.9, 179.0], [12.0, 184.0], [12.1, 186.0], [12.2, 188.0], [12.3, 190.0], [12.4, 193.0], [12.5, 196.0], [12.6, 200.0], [12.7, 205.0], [12.8, 209.0], [12.9, 212.0], [13.0, 216.0], [13.1, 218.0], [13.2, 221.0], [13.3, 227.0], [13.4, 240.0], [13.5, 244.0], [13.6, 248.0], [13.7, 250.0], [13.8, 253.0], [13.9, 257.0], [14.0, 260.0], [14.1, 263.0], [14.2, 265.0], [14.3, 267.0], [14.4, 270.0], [14.5, 272.0], [14.6, 283.0], [14.7, 314.0], [14.8, 318.0], [14.9, 320.0], [15.0, 322.0], [15.1, 323.0], [15.2, 325.0], [15.3, 328.0], [15.4, 333.0], [15.5, 337.0], [15.6, 342.0], [15.7, 346.0], [15.8, 349.0], [15.9, 353.0], [16.0, 358.0], [16.1, 361.0], [16.2, 363.0], [16.3, 365.0], [16.4, 367.0], [16.5, 369.0], [16.6, 371.0], [16.7, 373.0], [16.8, 376.0], [16.9, 380.0], [17.0, 382.0], [17.1, 384.0], [17.2, 386.0], [17.3, 390.0], [17.4, 393.0], [17.5, 394.0], [17.6, 396.0], [17.7, 398.0], [17.8, 399.0], [17.9, 400.0], [18.0, 402.0], [18.1, 403.0], [18.2, 406.0], [18.3, 409.0], [18.4, 411.0], [18.5, 413.0], [18.6, 415.0], [18.7, 416.0], [18.8, 419.0], [18.9, 421.0], [19.0, 426.0], [19.1, 431.0], [19.2, 435.0], [19.3, 437.0], [19.4, 439.0], [19.5, 442.0], [19.6, 444.0], [19.7, 446.0], [19.8, 448.0], [19.9, 449.0], [20.0, 450.0], [20.1, 452.0], [20.2, 454.0], [20.3, 456.0], [20.4, 457.0], [20.5, 460.0], [20.6, 462.0], [20.7, 465.0], [20.8, 468.0], [20.9, 472.0], [21.0, 475.0], [21.1, 476.0], [21.2, 478.0], [21.3, 480.0], [21.4, 481.0], [21.5, 483.0], [21.6, 485.0], [21.7, 487.0], [21.8, 488.0], [21.9, 490.0], [22.0, 491.0], [22.1, 492.0], [22.2, 493.0], [22.3, 494.0], [22.4, 495.0], [22.5, 497.0], [22.6, 499.0], [22.7, 500.0], [22.8, 501.0], [22.9, 503.0], [23.0, 504.0], [23.1, 504.0], [23.2, 505.0], [23.3, 505.0], [23.4, 506.0], [23.5, 507.0], [23.6, 508.0], [23.7, 509.0], [23.8, 510.0], [23.9, 510.0], [24.0, 512.0], [24.1, 513.0], [24.2, 514.0], [24.3, 515.0], [24.4, 516.0], [24.5, 517.0], [24.6, 519.0], [24.7, 521.0], [24.8, 521.0], [24.9, 522.0], [25.0, 523.0], [25.1, 524.0], [25.2, 525.0], [25.3, 527.0], [25.4, 528.0], [25.5, 528.0], [25.6, 529.0], [25.7, 530.0], [25.8, 531.0], [25.9, 532.0], [26.0, 533.0], [26.1, 534.0], [26.2, 535.0], [26.3, 536.0], [26.4, 537.0], [26.5, 538.0], [26.6, 538.0], [26.7, 539.0], [26.8, 539.0], [26.9, 540.0], [27.0, 541.0], [27.1, 542.0], [27.2, 543.0], [27.3, 544.0], [27.4, 545.0], [27.5, 545.0], [27.6, 546.0], [27.7, 547.0], [27.8, 547.0], [27.9, 548.0], [28.0, 549.0], [28.1, 549.0], [28.2, 550.0], [28.3, 550.0], [28.4, 551.0], [28.5, 551.0], [28.6, 552.0], [28.7, 552.0], [28.8, 553.0], [28.9, 554.0], [29.0, 554.0], [29.1, 555.0], [29.2, 556.0], [29.3, 556.0], [29.4, 558.0], [29.5, 558.0], [29.6, 559.0], [29.7, 560.0], [29.8, 560.0], [29.9, 561.0], [30.0, 562.0], [30.1, 562.0], [30.2, 563.0], [30.3, 564.0], [30.4, 564.0], [30.5, 565.0], [30.6, 565.0], [30.7, 566.0], [30.8, 567.0], [30.9, 567.0], [31.0, 568.0], [31.1, 569.0], [31.2, 569.0], [31.3, 570.0], [31.4, 571.0], [31.5, 572.0], [31.6, 573.0], [31.7, 573.0], [31.8, 574.0], [31.9, 575.0], [32.0, 576.0], [32.1, 576.0], [32.2, 577.0], [32.3, 578.0], [32.4, 578.0], [32.5, 579.0], [32.6, 579.0], [32.7, 580.0], [32.8, 581.0], [32.9, 582.0], [33.0, 582.0], [33.1, 583.0], [33.2, 584.0], [33.3, 584.0], [33.4, 585.0], [33.5, 586.0], [33.6, 586.0], [33.7, 587.0], [33.8, 587.0], [33.9, 588.0], [34.0, 588.0], [34.1, 589.0], [34.2, 589.0], [34.3, 590.0], [34.4, 591.0], [34.5, 591.0], [34.6, 592.0], [34.7, 592.0], [34.8, 593.0], [34.9, 593.0], [35.0, 594.0], [35.1, 594.0], [35.2, 595.0], [35.3, 596.0], [35.4, 596.0], [35.5, 597.0], [35.6, 597.0], [35.7, 598.0], [35.8, 598.0], [35.9, 599.0], [36.0, 599.0], [36.1, 599.0], [36.2, 600.0], [36.3, 600.0], [36.4, 601.0], [36.5, 601.0], [36.6, 601.0], [36.7, 601.0], [36.8, 602.0], [36.9, 602.0], [37.0, 603.0], [37.1, 603.0], [37.2, 603.0], [37.3, 604.0], [37.4, 604.0], [37.5, 605.0], [37.6, 605.0], [37.7, 606.0], [37.8, 606.0], [37.9, 607.0], [38.0, 607.0], [38.1, 608.0], [38.2, 608.0], [38.3, 609.0], [38.4, 609.0], [38.5, 610.0], [38.6, 610.0], [38.7, 611.0], [38.8, 612.0], [38.9, 612.0], [39.0, 613.0], [39.1, 613.0], [39.2, 613.0], [39.3, 614.0], [39.4, 614.0], [39.5, 615.0], [39.6, 615.0], [39.7, 616.0], [39.8, 617.0], [39.9, 617.0], [40.0, 618.0], [40.1, 619.0], [40.2, 620.0], [40.3, 620.0], [40.4, 621.0], [40.5, 621.0], [40.6, 622.0], [40.7, 622.0], [40.8, 623.0], [40.9, 623.0], [41.0, 624.0], [41.1, 624.0], [41.2, 624.0], [41.3, 625.0], [41.4, 625.0], [41.5, 626.0], [41.6, 627.0], [41.7, 627.0], [41.8, 627.0], [41.9, 628.0], [42.0, 628.0], [42.1, 629.0], [42.2, 629.0], [42.3, 630.0], [42.4, 630.0], [42.5, 631.0], [42.6, 631.0], [42.7, 632.0], [42.8, 632.0], [42.9, 632.0], [43.0, 633.0], [43.1, 633.0], [43.2, 634.0], [43.3, 634.0], [43.4, 634.0], [43.5, 635.0], [43.6, 635.0], [43.7, 636.0], [43.8, 636.0], [43.9, 637.0], [44.0, 637.0], [44.1, 638.0], [44.2, 638.0], [44.3, 638.0], [44.4, 639.0], [44.5, 639.0], [44.6, 640.0], [44.7, 640.0], [44.8, 641.0], [44.9, 641.0], [45.0, 641.0], [45.1, 642.0], [45.2, 643.0], [45.3, 643.0], [45.4, 643.0], [45.5, 644.0], [45.6, 644.0], [45.7, 645.0], [45.8, 645.0], [45.9, 646.0], [46.0, 646.0], [46.1, 646.0], [46.2, 646.0], [46.3, 647.0], [46.4, 647.0], [46.5, 648.0], [46.6, 648.0], [46.7, 649.0], [46.8, 649.0], [46.9, 650.0], [47.0, 650.0], [47.1, 651.0], [47.2, 651.0], [47.3, 651.0], [47.4, 652.0], [47.5, 652.0], [47.6, 653.0], [47.7, 653.0], [47.8, 654.0], [47.9, 654.0], [48.0, 655.0], [48.1, 655.0], [48.2, 655.0], [48.3, 656.0], [48.4, 656.0], [48.5, 657.0], [48.6, 657.0], [48.7, 658.0], [48.8, 658.0], [48.9, 658.0], [49.0, 659.0], [49.1, 659.0], [49.2, 659.0], [49.3, 659.0], [49.4, 660.0], [49.5, 660.0], [49.6, 660.0], [49.7, 660.0], [49.8, 661.0], [49.9, 661.0], [50.0, 662.0], [50.1, 662.0], [50.2, 662.0], [50.3, 662.0], [50.4, 663.0], [50.5, 663.0], [50.6, 663.0], [50.7, 664.0], [50.8, 664.0], [50.9, 664.0], [51.0, 664.0], [51.1, 665.0], [51.2, 665.0], [51.3, 666.0], [51.4, 666.0], [51.5, 666.0], [51.6, 667.0], [51.7, 667.0], [51.8, 668.0], [51.9, 668.0], [52.0, 669.0], [52.1, 669.0], [52.2, 669.0], [52.3, 670.0], [52.4, 670.0], [52.5, 671.0], [52.6, 671.0], [52.7, 672.0], [52.8, 672.0], [52.9, 672.0], [53.0, 673.0], [53.1, 673.0], [53.2, 674.0], [53.3, 674.0], [53.4, 675.0], [53.5, 675.0], [53.6, 675.0], [53.7, 676.0], [53.8, 676.0], [53.9, 677.0], [54.0, 677.0], [54.1, 678.0], [54.2, 678.0], [54.3, 678.0], [54.4, 679.0], [54.5, 680.0], [54.6, 680.0], [54.7, 681.0], [54.8, 681.0], [54.9, 682.0], [55.0, 683.0], [55.1, 684.0], [55.2, 685.0], [55.3, 687.0], [55.4, 688.0], [55.5, 689.0], [55.6, 690.0], [55.7, 691.0], [55.8, 691.0], [55.9, 692.0], [56.0, 692.0], [56.1, 692.0], [56.2, 693.0], [56.3, 693.0], [56.4, 693.0], [56.5, 694.0], [56.6, 694.0], [56.7, 694.0], [56.8, 694.0], [56.9, 695.0], [57.0, 695.0], [57.1, 696.0], [57.2, 696.0], [57.3, 697.0], [57.4, 697.0], [57.5, 698.0], [57.6, 698.0], [57.7, 699.0], [57.8, 699.0], [57.9, 699.0], [58.0, 700.0], [58.1, 700.0], [58.2, 701.0], [58.3, 702.0], [58.4, 702.0], [58.5, 703.0], [58.6, 703.0], [58.7, 704.0], [58.8, 704.0], [58.9, 704.0], [59.0, 705.0], [59.1, 705.0], [59.2, 706.0], [59.3, 706.0], [59.4, 707.0], [59.5, 707.0], [59.6, 708.0], [59.7, 708.0], [59.8, 709.0], [59.9, 709.0], [60.0, 710.0], [60.1, 710.0], [60.2, 711.0], [60.3, 711.0], [60.4, 712.0], [60.5, 712.0], [60.6, 712.0], [60.7, 713.0], [60.8, 713.0], [60.9, 714.0], [61.0, 714.0], [61.1, 715.0], [61.2, 715.0], [61.3, 715.0], [61.4, 716.0], [61.5, 716.0], [61.6, 717.0], [61.7, 717.0], [61.8, 718.0], [61.9, 718.0], [62.0, 719.0], [62.1, 719.0], [62.2, 720.0], [62.3, 720.0], [62.4, 720.0], [62.5, 721.0], [62.6, 721.0], [62.7, 722.0], [62.8, 722.0], [62.9, 723.0], [63.0, 723.0], [63.1, 724.0], [63.2, 725.0], [63.3, 725.0], [63.4, 725.0], [63.5, 726.0], [63.6, 727.0], [63.7, 727.0], [63.8, 727.0], [63.9, 728.0], [64.0, 728.0], [64.1, 728.0], [64.2, 729.0], [64.3, 730.0], [64.4, 730.0], [64.5, 731.0], [64.6, 731.0], [64.7, 731.0], [64.8, 732.0], [64.9, 732.0], [65.0, 733.0], [65.1, 733.0], [65.2, 733.0], [65.3, 734.0], [65.4, 735.0], [65.5, 735.0], [65.6, 736.0], [65.7, 736.0], [65.8, 737.0], [65.9, 737.0], [66.0, 738.0], [66.1, 740.0], [66.2, 741.0], [66.3, 742.0], [66.4, 743.0], [66.5, 744.0], [66.6, 745.0], [66.7, 745.0], [66.8, 746.0], [66.9, 747.0], [67.0, 748.0], [67.1, 749.0], [67.2, 750.0], [67.3, 752.0], [67.4, 753.0], [67.5, 755.0], [67.6, 756.0], [67.7, 758.0], [67.8, 760.0], [67.9, 762.0], [68.0, 768.0], [68.1, 771.0], [68.2, 773.0], [68.3, 777.0], [68.4, 781.0], [68.5, 1028.0], [68.6, 1030.0], [68.7, 1032.0], [68.8, 1033.0], [68.9, 1034.0], [69.0, 1035.0], [69.1, 1036.0], [69.2, 1036.0], [69.3, 1037.0], [69.4, 1038.0], [69.5, 1039.0], [69.6, 1040.0], [69.7, 1041.0], [69.8, 1041.0], [69.9, 1042.0], [70.0, 1043.0], [70.1, 1044.0], [70.2, 1046.0], [70.3, 1048.0], [70.4, 1051.0], [70.5, 1054.0], [70.6, 1057.0], [70.7, 1060.0], [70.8, 1063.0], [70.9, 1068.0], [71.0, 1072.0], [71.1, 1076.0], [71.2, 1083.0], [71.3, 1089.0], [71.4, 1096.0], [71.5, 1104.0], [71.6, 1110.0], [71.7, 1116.0], [71.8, 1125.0], [71.9, 1134.0], [72.0, 1151.0], [72.1, 1168.0], [72.2, 1187.0], [72.3, 1206.0], [72.4, 1222.0], [72.5, 1251.0], [72.6, 1258.0], [72.7, 1265.0], [72.8, 1273.0], [72.9, 1287.0], [73.0, 1324.0], [73.1, 1331.0], [73.2, 1338.0], [73.3, 1352.0], [73.4, 1363.0], [73.5, 1365.0], [73.6, 1370.0], [73.7, 1381.0], [73.8, 1400.0], [73.9, 1414.0], [74.0, 1430.0], [74.1, 1437.0], [74.2, 1443.0], [74.3, 1448.0], [74.4, 1451.0], [74.5, 1454.0], [74.6, 1458.0], [74.7, 1463.0], [74.8, 1472.0], [74.9, 1484.0], [75.0, 1492.0], [75.1, 1499.0], [75.2, 1513.0], [75.3, 1524.0], [75.4, 1531.0], [75.5, 1539.0], [75.6, 1545.0], [75.7, 1551.0], [75.8, 1556.0], [75.9, 1559.0], [76.0, 1563.0], [76.1, 1565.0], [76.2, 1569.0], [76.3, 1572.0], [76.4, 1575.0], [76.5, 1578.0], [76.6, 1581.0], [76.7, 1584.0], [76.8, 1586.0], [76.9, 1589.0], [77.0, 1590.0], [77.1, 1592.0], [77.2, 1594.0], [77.3, 1596.0], [77.4, 1598.0], [77.5, 1600.0], [77.6, 1602.0], [77.7, 1603.0], [77.8, 1605.0], [77.9, 1607.0], [78.0, 1609.0], [78.1, 1612.0], [78.2, 1613.0], [78.3, 1615.0], [78.4, 1617.0], [78.5, 1620.0], [78.6, 1622.0], [78.7, 1624.0], [78.8, 1626.0], [78.9, 1629.0], [79.0, 1631.0], [79.1, 1634.0], [79.2, 1637.0], [79.3, 1639.0], [79.4, 1641.0], [79.5, 1642.0], [79.6, 1644.0], [79.7, 1646.0], [79.8, 1647.0], [79.9, 1649.0], [80.0, 1651.0], [80.1, 1653.0], [80.2, 1654.0], [80.3, 1655.0], [80.4, 1657.0], [80.5, 1658.0], [80.6, 1660.0], [80.7, 1662.0], [80.8, 1663.0], [80.9, 1665.0], [81.0, 1666.0], [81.1, 1668.0], [81.2, 1670.0], [81.3, 1672.0], [81.4, 1673.0], [81.5, 1675.0], [81.6, 1677.0], [81.7, 1680.0], [81.8, 1681.0], [81.9, 1684.0], [82.0, 1686.0], [82.1, 1689.0], [82.2, 1692.0], [82.3, 1695.0], [82.4, 1699.0], [82.5, 1702.0], [82.6, 1705.0], [82.7, 1708.0], [82.8, 1710.0], [82.9, 1713.0], [83.0, 1716.0], [83.1, 1717.0], [83.2, 1719.0], [83.3, 1722.0], [83.4, 1724.0], [83.5, 1727.0], [83.6, 1730.0], [83.7, 1734.0], [83.8, 1738.0], [83.9, 1744.0], [84.0, 2153.0], [84.1, 2597.0], [84.2, 2694.0], [84.3, 3031.0], [84.4, 3038.0], [84.5, 3042.0], [84.6, 3045.0], [84.7, 3047.0], [84.8, 3050.0], [84.9, 3052.0], [85.0, 3056.0], [85.1, 3059.0], [85.2, 3064.0], [85.3, 3071.0], [85.4, 3081.0], [85.5, 3092.0], [85.6, 3109.0], [85.7, 3121.0], [85.8, 3132.0], [85.9, 3147.0], [86.0, 3193.0], [86.1, 3253.0], [86.2, 3328.0], [86.3, 3356.0], [86.4, 3414.0], [86.5, 3467.0], [86.6, 3526.0], [86.7, 3563.0], [86.8, 3581.0], [86.9, 3591.0], [87.0, 3606.0], [87.1, 3618.0], [87.2, 3632.0], [87.3, 3644.0], [87.4, 3658.0], [87.5, 3670.0], [87.6, 3679.0], [87.7, 3688.0], [87.8, 3696.0], [87.9, 3723.0], [88.0, 4750.0], [88.1, 7043.0], [88.2, 7045.0], [88.3, 7047.0], [88.4, 7048.0], [88.5, 7049.0], [88.6, 7050.0], [88.7, 7051.0], [88.8, 7053.0], [88.9, 7055.0], [89.0, 7057.0], [89.1, 7059.0], [89.2, 7061.0], [89.3, 7063.0], [89.4, 7065.0], [89.5, 7068.0], [89.6, 7072.0], [89.7, 7077.0], [89.8, 7090.0], [89.9, 7111.0], [90.0, 7141.0], [90.1, 7229.0], [90.2, 7459.0], [90.3, 7618.0], [90.4, 7661.0], [90.5, 15039.0], [90.6, 15055.0], [90.7, 15060.0], [90.8, 15065.0], [90.9, 15070.0], [91.0, 15076.0], [91.1, 15166.0], [91.2, 21011.0], [91.3, 21020.0], [91.4, 21021.0], [91.5, 21023.0], [91.6, 21024.0], [91.7, 21025.0], [91.8, 21026.0], [91.9, 21026.0], [92.0, 21027.0], [92.1, 21028.0], [92.2, 21028.0], [92.3, 21029.0], [92.4, 21029.0], [92.5, 21029.0], [92.6, 21030.0], [92.7, 21030.0], [92.8, 21031.0], [92.9, 21031.0], [93.0, 21032.0], [93.1, 21032.0], [93.2, 21033.0], [93.3, 21033.0], [93.4, 21034.0], [93.5, 21034.0], [93.6, 21034.0], [93.7, 21035.0], [93.8, 21035.0], [93.9, 21035.0], [94.0, 21036.0], [94.1, 21036.0], [94.2, 21036.0], [94.3, 21037.0], [94.4, 21037.0], [94.5, 21037.0], [94.6, 21038.0], [94.7, 21038.0], [94.8, 21038.0], [94.9, 21038.0], [95.0, 21039.0], [95.1, 21039.0], [95.2, 21039.0], [95.3, 21039.0], [95.4, 21040.0], [95.5, 21040.0], [95.6, 21040.0], [95.7, 21040.0], [95.8, 21041.0], [95.9, 21041.0], [96.0, 21041.0], [96.1, 21042.0], [96.2, 21042.0], [96.3, 21042.0], [96.4, 21043.0], [96.5, 21043.0], [96.6, 21043.0], [96.7, 21043.0], [96.8, 21044.0], [96.9, 21044.0], [97.0, 21044.0], [97.1, 21044.0], [97.2, 21045.0], [97.3, 21045.0], [97.4, 21045.0], [97.5, 21046.0], [97.6, 21046.0], [97.7, 21046.0], [97.8, 21047.0], [97.9, 21047.0], [98.0, 21047.0], [98.1, 21048.0], [98.2, 21048.0], [98.3, 21048.0], [98.4, 21049.0], [98.5, 21049.0], [98.6, 21049.0], [98.7, 21050.0], [98.8, 21050.0], [98.9, 21051.0], [99.0, 21051.0], [99.1, 21052.0], [99.2, 21053.0], [99.3, 21054.0], [99.4, 21054.0], [99.5, 21056.0], [99.6, 21057.0], [99.7, 21058.0], [99.8, 21061.0], [99.9, 21065.0], [100.0, 21090.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12113.0], [0.1, 12116.0], [0.2, 12117.0], [0.3, 12117.0], [0.4, 12118.0], [0.5, 12118.0], [0.6, 12118.0], [0.7, 12120.0], [0.8, 12122.0], [0.9, 12122.0], [1.0, 12123.0], [1.1, 12128.0], [1.2, 12128.0], [1.3, 12129.0], [1.4, 12130.0], [1.5, 12131.0], [1.6, 12132.0], [1.7, 12132.0], [1.8, 12133.0], [1.9, 12137.0], [2.0, 12137.0], [2.1, 12138.0], [2.2, 12140.0], [2.3, 12140.0], [2.4, 12141.0], [2.5, 12141.0], [2.6, 12141.0], [2.7, 12142.0], [2.8, 12143.0], [2.9, 12146.0], [3.0, 12147.0], [3.1, 12149.0], [3.2, 12149.0], [3.3, 12152.0], [3.4, 12153.0], [3.5, 12153.0], [3.6, 12153.0], [3.7, 12153.0], [3.8, 12153.0], [3.9, 12153.0], [4.0, 12153.0], [4.1, 12153.0], [4.2, 12153.0], [4.3, 12154.0], [4.4, 12158.0], [4.5, 12159.0], [4.6, 12160.0], [4.7, 12161.0], [4.8, 12161.0], [4.9, 12162.0], [5.0, 12163.0], [5.1, 12163.0], [5.2, 12163.0], [5.3, 12163.0], [5.4, 12163.0], [5.5, 12165.0], [5.6, 12165.0], [5.7, 12166.0], [5.8, 12166.0], [5.9, 12166.0], [6.0, 12167.0], [6.1, 12167.0], [6.2, 12168.0], [6.3, 12169.0], [6.4, 12169.0], [6.5, 12169.0], [6.6, 12170.0], [6.7, 12170.0], [6.8, 12170.0], [6.9, 12170.0], [7.0, 12170.0], [7.1, 12171.0], [7.2, 12171.0], [7.3, 12175.0], [7.4, 12177.0], [7.5, 12178.0], [7.6, 12178.0], [7.7, 12179.0], [7.8, 12180.0], [7.9, 12180.0], [8.0, 12181.0], [8.1, 12182.0], [8.2, 12183.0], [8.3, 12183.0], [8.4, 12185.0], [8.5, 12186.0], [8.6, 12186.0], [8.7, 12186.0], [8.8, 12187.0], [8.9, 12187.0], [9.0, 12187.0], [9.1, 12188.0], [9.2, 12188.0], [9.3, 12190.0], [9.4, 12190.0], [9.5, 12191.0], [9.6, 12191.0], [9.7, 12191.0], [9.8, 12191.0], [9.9, 12191.0], [10.0, 12191.0], [10.1, 12191.0], [10.2, 12192.0], [10.3, 12192.0], [10.4, 12192.0], [10.5, 12193.0], [10.6, 12193.0], [10.7, 12193.0], [10.8, 12194.0], [10.9, 12194.0], [11.0, 12194.0], [11.1, 12195.0], [11.2, 12195.0], [11.3, 12195.0], [11.4, 12195.0], [11.5, 12195.0], [11.6, 12195.0], [11.7, 12196.0], [11.8, 12196.0], [11.9, 12196.0], [12.0, 12196.0], [12.1, 12196.0], [12.2, 12196.0], [12.3, 12196.0], [12.4, 12197.0], [12.5, 12197.0], [12.6, 12197.0], [12.7, 12197.0], [12.8, 12198.0], [12.9, 12199.0], [13.0, 12199.0], [13.1, 12200.0], [13.2, 12200.0], [13.3, 12200.0], [13.4, 12200.0], [13.5, 12200.0], [13.6, 12201.0], [13.7, 12201.0], [13.8, 12202.0], [13.9, 12202.0], [14.0, 12202.0], [14.1, 12203.0], [14.2, 12203.0], [14.3, 12205.0], [14.4, 12205.0], [14.5, 12205.0], [14.6, 12205.0], [14.7, 12206.0], [14.8, 12206.0], [14.9, 12207.0], [15.0, 12207.0], [15.1, 12207.0], [15.2, 12207.0], [15.3, 12208.0], [15.4, 12208.0], [15.5, 12209.0], [15.6, 12209.0], [15.7, 12209.0], [15.8, 12209.0], [15.9, 12210.0], [16.0, 12210.0], [16.1, 12211.0], [16.2, 12212.0], [16.3, 12212.0], [16.4, 12213.0], [16.5, 12213.0], [16.6, 12213.0], [16.7, 12214.0], [16.8, 12214.0], [16.9, 12215.0], [17.0, 12215.0], [17.1, 12216.0], [17.2, 12216.0], [17.3, 12216.0], [17.4, 12217.0], [17.5, 12218.0], [17.6, 12218.0], [17.7, 12218.0], [17.8, 12218.0], [17.9, 12218.0], [18.0, 12219.0], [18.1, 12220.0], [18.2, 12220.0], [18.3, 12220.0], [18.4, 12221.0], [18.5, 12221.0], [18.6, 12221.0], [18.7, 12222.0], [18.8, 12222.0], [18.9, 12222.0], [19.0, 12222.0], [19.1, 12222.0], [19.2, 12222.0], [19.3, 12222.0], [19.4, 12223.0], [19.5, 12223.0], [19.6, 12223.0], [19.7, 12223.0], [19.8, 12224.0], [19.9, 12224.0], [20.0, 12224.0], [20.1, 12224.0], [20.2, 12224.0], [20.3, 12224.0], [20.4, 12224.0], [20.5, 12224.0], [20.6, 12225.0], [20.7, 12225.0], [20.8, 12225.0], [20.9, 12226.0], [21.0, 12226.0], [21.1, 12227.0], [21.2, 12228.0], [21.3, 12228.0], [21.4, 12228.0], [21.5, 12228.0], [21.6, 12228.0], [21.7, 12228.0], [21.8, 12228.0], [21.9, 12228.0], [22.0, 12229.0], [22.1, 12229.0], [22.2, 12229.0], [22.3, 12229.0], [22.4, 12229.0], [22.5, 12229.0], [22.6, 12229.0], [22.7, 12229.0], [22.8, 12229.0], [22.9, 12229.0], [23.0, 12229.0], [23.1, 12230.0], [23.2, 12230.0], [23.3, 12230.0], [23.4, 12230.0], [23.5, 12231.0], [23.6, 12231.0], [23.7, 12231.0], [23.8, 12232.0], [23.9, 12232.0], [24.0, 12232.0], [24.1, 12232.0], [24.2, 12232.0], [24.3, 12233.0], [24.4, 12233.0], [24.5, 12233.0], [24.6, 12234.0], [24.7, 12234.0], [24.8, 12234.0], [24.9, 12234.0], [25.0, 12234.0], [25.1, 12234.0], [25.2, 12234.0], [25.3, 12235.0], [25.4, 12235.0], [25.5, 12235.0], [25.6, 12235.0], [25.7, 12235.0], [25.8, 12235.0], [25.9, 12235.0], [26.0, 12235.0], [26.1, 12236.0], [26.2, 12236.0], [26.3, 12236.0], [26.4, 12236.0], [26.5, 12236.0], [26.6, 12236.0], [26.7, 12236.0], [26.8, 12236.0], [26.9, 12236.0], [27.0, 12236.0], [27.1, 12236.0], [27.2, 12236.0], [27.3, 12237.0], [27.4, 12237.0], [27.5, 12237.0], [27.6, 12237.0], [27.7, 12238.0], [27.8, 12239.0], [27.9, 12239.0], [28.0, 12239.0], [28.1, 12239.0], [28.2, 12239.0], [28.3, 12239.0], [28.4, 12239.0], [28.5, 12239.0], [28.6, 12240.0], [28.7, 12240.0], [28.8, 12241.0], [28.9, 12241.0], [29.0, 12241.0], [29.1, 12241.0], [29.2, 12242.0], [29.3, 12242.0], [29.4, 12242.0], [29.5, 12242.0], [29.6, 12242.0], [29.7, 12243.0], [29.8, 12243.0], [29.9, 12243.0], [30.0, 12243.0], [30.1, 12244.0], [30.2, 12244.0], [30.3, 12244.0], [30.4, 12244.0], [30.5, 12245.0], [30.6, 12245.0], [30.7, 12245.0], [30.8, 12246.0], [30.9, 12246.0], [31.0, 12247.0], [31.1, 12248.0], [31.2, 12248.0], [31.3, 12248.0], [31.4, 12248.0], [31.5, 12248.0], [31.6, 12248.0], [31.7, 12249.0], [31.8, 12249.0], [31.9, 12249.0], [32.0, 12249.0], [32.1, 12250.0], [32.2, 12250.0], [32.3, 12250.0], [32.4, 12251.0], [32.5, 12251.0], [32.6, 12252.0], [32.7, 12252.0], [32.8, 12252.0], [32.9, 12252.0], [33.0, 12252.0], [33.1, 12253.0], [33.2, 12253.0], [33.3, 12253.0], [33.4, 12253.0], [33.5, 12253.0], [33.6, 12253.0], [33.7, 12254.0], [33.8, 12254.0], [33.9, 12254.0], [34.0, 12255.0], [34.1, 12255.0], [34.2, 12255.0], [34.3, 12255.0], [34.4, 12256.0], [34.5, 12256.0], [34.6, 12257.0], [34.7, 12257.0], [34.8, 12257.0], [34.9, 12258.0], [35.0, 12258.0], [35.1, 12259.0], [35.2, 12259.0], [35.3, 12261.0], [35.4, 12261.0], [35.5, 12261.0], [35.6, 12261.0], [35.7, 12262.0], [35.8, 12262.0], [35.9, 12263.0], [36.0, 12263.0], [36.1, 12263.0], [36.2, 12264.0], [36.3, 12264.0], [36.4, 12264.0], [36.5, 12265.0], [36.6, 12266.0], [36.7, 12266.0], [36.8, 12267.0], [36.9, 12267.0], [37.0, 12267.0], [37.1, 12267.0], [37.2, 12267.0], [37.3, 12268.0], [37.4, 12268.0], [37.5, 12269.0], [37.6, 12269.0], [37.7, 12269.0], [37.8, 12269.0], [37.9, 12269.0], [38.0, 12270.0], [38.1, 12270.0], [38.2, 12270.0], [38.3, 12270.0], [38.4, 12271.0], [38.5, 12271.0], [38.6, 12271.0], [38.7, 12271.0], [38.8, 12271.0], [38.9, 12272.0], [39.0, 12272.0], [39.1, 12272.0], [39.2, 12272.0], [39.3, 12272.0], [39.4, 12272.0], [39.5, 12272.0], [39.6, 12272.0], [39.7, 12272.0], [39.8, 12273.0], [39.9, 12273.0], [40.0, 12273.0], [40.1, 12273.0], [40.2, 12273.0], [40.3, 12274.0], [40.4, 12274.0], [40.5, 12274.0], [40.6, 12274.0], [40.7, 12274.0], [40.8, 12274.0], [40.9, 12275.0], [41.0, 12275.0], [41.1, 12275.0], [41.2, 12275.0], [41.3, 12275.0], [41.4, 12276.0], [41.5, 12276.0], [41.6, 12276.0], [41.7, 12276.0], [41.8, 12276.0], [41.9, 12276.0], [42.0, 12277.0], [42.1, 12277.0], [42.2, 12277.0], [42.3, 12277.0], [42.4, 12277.0], [42.5, 12277.0], [42.6, 12278.0], [42.7, 12278.0], [42.8, 12278.0], [42.9, 12278.0], [43.0, 12278.0], [43.1, 12278.0], [43.2, 12279.0], [43.3, 12279.0], [43.4, 12279.0], [43.5, 12279.0], [43.6, 12279.0], [43.7, 12279.0], [43.8, 12280.0], [43.9, 12280.0], [44.0, 12280.0], [44.1, 12280.0], [44.2, 12280.0], [44.3, 12281.0], [44.4, 12281.0], [44.5, 12281.0], [44.6, 12281.0], [44.7, 12281.0], [44.8, 12281.0], [44.9, 12282.0], [45.0, 12282.0], [45.1, 12282.0], [45.2, 12282.0], [45.3, 12282.0], [45.4, 12282.0], [45.5, 12282.0], [45.6, 12282.0], [45.7, 12282.0], [45.8, 12283.0], [45.9, 12283.0], [46.0, 12283.0], [46.1, 12283.0], [46.2, 12283.0], [46.3, 12283.0], [46.4, 12283.0], [46.5, 12284.0], [46.6, 12284.0], [46.7, 12284.0], [46.8, 12285.0], [46.9, 12285.0], [47.0, 12285.0], [47.1, 12285.0], [47.2, 12286.0], [47.3, 12286.0], [47.4, 12286.0], [47.5, 12287.0], [47.6, 12287.0], [47.7, 12288.0], [47.8, 12288.0], [47.9, 12288.0], [48.0, 12289.0], [48.1, 12290.0], [48.2, 12290.0], [48.3, 12290.0], [48.4, 12291.0], [48.5, 12292.0], [48.6, 12292.0], [48.7, 12292.0], [48.8, 12294.0], [48.9, 12295.0], [49.0, 12295.0], [49.1, 12296.0], [49.2, 12297.0], [49.3, 12297.0], [49.4, 12301.0], [49.5, 12301.0], [49.6, 12302.0], [49.7, 12308.0], [49.8, 12308.0], [49.9, 12309.0], [50.0, 12310.0], [50.1, 12312.0], [50.2, 12314.0], [50.3, 12315.0], [50.4, 12317.0], [50.5, 12317.0], [50.6, 12318.0], [50.7, 12318.0], [50.8, 12319.0], [50.9, 12319.0], [51.0, 12319.0], [51.1, 12320.0], [51.2, 12322.0], [51.3, 12323.0], [51.4, 12324.0], [51.5, 12324.0], [51.6, 12324.0], [51.7, 12325.0], [51.8, 12325.0], [51.9, 12329.0], [52.0, 12329.0], [52.1, 12330.0], [52.2, 12330.0], [52.3, 12330.0], [52.4, 12330.0], [52.5, 12332.0], [52.6, 12333.0], [52.7, 12333.0], [52.8, 12333.0], [52.9, 12334.0], [53.0, 12335.0], [53.1, 12336.0], [53.2, 12336.0], [53.3, 12337.0], [53.4, 12337.0], [53.5, 12339.0], [53.6, 12339.0], [53.7, 12340.0], [53.8, 12343.0], [53.9, 12344.0], [54.0, 12344.0], [54.1, 12349.0], [54.2, 12350.0], [54.3, 12351.0], [54.4, 12351.0], [54.5, 12352.0], [54.6, 12353.0], [54.7, 12356.0], [54.8, 12357.0], [54.9, 12359.0], [55.0, 12362.0], [55.1, 12363.0], [55.2, 12365.0], [55.3, 12366.0], [55.4, 12367.0], [55.5, 12368.0], [55.6, 12369.0], [55.7, 12370.0], [55.8, 12370.0], [55.9, 12371.0], [56.0, 12372.0], [56.1, 12373.0], [56.2, 12376.0], [56.3, 12376.0], [56.4, 12377.0], [56.5, 12378.0], [56.6, 12380.0], [56.7, 12381.0], [56.8, 12382.0], [56.9, 12383.0], [57.0, 12383.0], [57.1, 12384.0], [57.2, 12384.0], [57.3, 12387.0], [57.4, 12388.0], [57.5, 12389.0], [57.6, 12389.0], [57.7, 12390.0], [57.8, 12391.0], [57.9, 12396.0], [58.0, 12399.0], [58.1, 12399.0], [58.2, 12400.0], [58.3, 12401.0], [58.4, 12403.0], [58.5, 12403.0], [58.6, 12403.0], [58.7, 12403.0], [58.8, 12405.0], [58.9, 12408.0], [59.0, 12413.0], [59.1, 12414.0], [59.2, 12415.0], [59.3, 12415.0], [59.4, 12416.0], [59.5, 12417.0], [59.6, 12418.0], [59.7, 12418.0], [59.8, 12418.0], [59.9, 12420.0], [60.0, 12420.0], [60.1, 12421.0], [60.2, 12422.0], [60.3, 12422.0], [60.4, 12423.0], [60.5, 12424.0], [60.6, 12424.0], [60.7, 12425.0], [60.8, 12425.0], [60.9, 12425.0], [61.0, 12425.0], [61.1, 12428.0], [61.2, 12429.0], [61.3, 12430.0], [61.4, 12430.0], [61.5, 12431.0], [61.6, 12431.0], [61.7, 12431.0], [61.8, 12432.0], [61.9, 12433.0], [62.0, 12433.0], [62.1, 12434.0], [62.2, 12435.0], [62.3, 12436.0], [62.4, 12436.0], [62.5, 12436.0], [62.6, 12438.0], [62.7, 12439.0], [62.8, 12440.0], [62.9, 12441.0], [63.0, 12441.0], [63.1, 12442.0], [63.2, 12444.0], [63.3, 12445.0], [63.4, 12448.0], [63.5, 12450.0], [63.6, 12452.0], [63.7, 12453.0], [63.8, 12453.0], [63.9, 12454.0], [64.0, 12454.0], [64.1, 12454.0], [64.2, 12455.0], [64.3, 12456.0], [64.4, 12456.0], [64.5, 12457.0], [64.6, 12457.0], [64.7, 12457.0], [64.8, 12457.0], [64.9, 12458.0], [65.0, 12458.0], [65.1, 12460.0], [65.2, 12461.0], [65.3, 12461.0], [65.4, 12462.0], [65.5, 12464.0], [65.6, 12464.0], [65.7, 12467.0], [65.8, 12469.0], [65.9, 12470.0], [66.0, 12470.0], [66.1, 12471.0], [66.2, 12471.0], [66.3, 12471.0], [66.4, 12472.0], [66.5, 12472.0], [66.6, 12474.0], [66.7, 12475.0], [66.8, 12475.0], [66.9, 12477.0], [67.0, 12480.0], [67.1, 12480.0], [67.2, 12481.0], [67.3, 12482.0], [67.4, 12482.0], [67.5, 12490.0], [67.6, 12490.0], [67.7, 12490.0], [67.8, 12491.0], [67.9, 12491.0], [68.0, 12492.0], [68.1, 12493.0], [68.2, 12494.0], [68.3, 12494.0], [68.4, 12494.0], [68.5, 12496.0], [68.6, 12497.0], [68.7, 12498.0], [68.8, 12499.0], [68.9, 12500.0], [69.0, 12502.0], [69.1, 12503.0], [69.2, 12505.0], [69.3, 12507.0], [69.4, 12510.0], [69.5, 12511.0], [69.6, 12511.0], [69.7, 12512.0], [69.8, 12512.0], [69.9, 12512.0], [70.0, 12512.0], [70.1, 12512.0], [70.2, 12514.0], [70.3, 12515.0], [70.4, 12519.0], [70.5, 12519.0], [70.6, 12519.0], [70.7, 12520.0], [70.8, 12521.0], [70.9, 12521.0], [71.0, 12523.0], [71.1, 12523.0], [71.2, 12527.0], [71.3, 12527.0], [71.4, 12527.0], [71.5, 12528.0], [71.6, 12528.0], [71.7, 12528.0], [71.8, 12529.0], [71.9, 12529.0], [72.0, 12530.0], [72.1, 12531.0], [72.2, 12535.0], [72.3, 12535.0], [72.4, 12536.0], [72.5, 12538.0], [72.6, 12540.0], [72.7, 12541.0], [72.8, 12542.0], [72.9, 12543.0], [73.0, 12543.0], [73.1, 12544.0], [73.2, 12545.0], [73.3, 12547.0], [73.4, 12547.0], [73.5, 12547.0], [73.6, 12550.0], [73.7, 12554.0], [73.8, 12555.0], [73.9, 12557.0], [74.0, 12557.0], [74.1, 12559.0], [74.2, 12560.0], [74.3, 12560.0], [74.4, 12562.0], [74.5, 12564.0], [74.6, 12564.0], [74.7, 12564.0], [74.8, 12564.0], [74.9, 12564.0], [75.0, 12564.0], [75.1, 12566.0], [75.2, 12566.0], [75.3, 12568.0], [75.4, 12569.0], [75.5, 12569.0], [75.6, 12570.0], [75.7, 12570.0], [75.8, 12571.0], [75.9, 12572.0], [76.0, 12572.0], [76.1, 12572.0], [76.2, 12573.0], [76.3, 12574.0], [76.4, 12577.0], [76.5, 12577.0], [76.6, 12577.0], [76.7, 12580.0], [76.8, 12581.0], [76.9, 12584.0], [77.0, 12584.0], [77.1, 12584.0], [77.2, 12585.0], [77.3, 12586.0], [77.4, 12587.0], [77.5, 12587.0], [77.6, 12588.0], [77.7, 12589.0], [77.8, 12590.0], [77.9, 12591.0], [78.0, 12592.0], [78.1, 12593.0], [78.2, 12595.0], [78.3, 12595.0], [78.4, 12596.0], [78.5, 12597.0], [78.6, 12600.0], [78.7, 12600.0], [78.8, 12601.0], [78.9, 12601.0], [79.0, 12601.0], [79.1, 12602.0], [79.2, 12605.0], [79.3, 12605.0], [79.4, 12605.0], [79.5, 12605.0], [79.6, 12605.0], [79.7, 12606.0], [79.8, 12609.0], [79.9, 12610.0], [80.0, 12612.0], [80.1, 12612.0], [80.2, 12613.0], [80.3, 12616.0], [80.4, 12617.0], [80.5, 12618.0], [80.6, 12618.0], [80.7, 12620.0], [80.8, 12622.0], [80.9, 12623.0], [81.0, 12623.0], [81.1, 12625.0], [81.2, 12626.0], [81.3, 12628.0], [81.4, 12629.0], [81.5, 12629.0], [81.6, 12630.0], [81.7, 12631.0], [81.8, 12634.0], [81.9, 12636.0], [82.0, 12636.0], [82.1, 12636.0], [82.2, 12637.0], [82.3, 12638.0], [82.4, 12641.0], [82.5, 12641.0], [82.6, 12642.0], [82.7, 12644.0], [82.8, 12646.0], [82.9, 12647.0], [83.0, 12647.0], [83.1, 12649.0], [83.2, 12650.0], [83.3, 12650.0], [83.4, 12651.0], [83.5, 12652.0], [83.6, 12652.0], [83.7, 12653.0], [83.8, 12654.0], [83.9, 12654.0], [84.0, 12655.0], [84.1, 12657.0], [84.2, 12657.0], [84.3, 12658.0], [84.4, 12659.0], [84.5, 12659.0], [84.6, 12661.0], [84.7, 12662.0], [84.8, 12662.0], [84.9, 12664.0], [85.0, 12665.0], [85.1, 12665.0], [85.2, 12667.0], [85.3, 12668.0], [85.4, 12668.0], [85.5, 12670.0], [85.6, 12670.0], [85.7, 12670.0], [85.8, 12671.0], [85.9, 12673.0], [86.0, 12675.0], [86.1, 12676.0], [86.2, 12679.0], [86.3, 12681.0], [86.4, 12683.0], [86.5, 12683.0], [86.6, 12685.0], [86.7, 12685.0], [86.8, 12687.0], [86.9, 12687.0], [87.0, 12692.0], [87.1, 12693.0], [87.2, 12694.0], [87.3, 12694.0], [87.4, 12694.0], [87.5, 12695.0], [87.6, 12696.0], [87.7, 12697.0], [87.8, 12697.0], [87.9, 12698.0], [88.0, 12699.0], [88.1, 12701.0], [88.2, 12703.0], [88.3, 12704.0], [88.4, 12704.0], [88.5, 12704.0], [88.6, 12706.0], [88.7, 12707.0], [88.8, 12707.0], [88.9, 12708.0], [89.0, 12708.0], [89.1, 12708.0], [89.2, 12710.0], [89.3, 12710.0], [89.4, 12711.0], [89.5, 12711.0], [89.6, 12712.0], [89.7, 12713.0], [89.8, 12714.0], [89.9, 12715.0], [90.0, 12717.0], [90.1, 12718.0], [90.2, 12719.0], [90.3, 12719.0], [90.4, 12720.0], [90.5, 12720.0], [90.6, 12721.0], [90.7, 12721.0], [90.8, 12722.0], [90.9, 12723.0], [91.0, 12724.0], [91.1, 12727.0], [91.2, 12727.0], [91.3, 12728.0], [91.4, 12731.0], [91.5, 12732.0], [91.6, 12732.0], [91.7, 12733.0], [91.8, 12735.0], [91.9, 12737.0], [92.0, 12738.0], [92.1, 12740.0], [92.2, 12741.0], [92.3, 12741.0], [92.4, 12742.0], [92.5, 12742.0], [92.6, 12744.0], [92.7, 12745.0], [92.8, 12746.0], [92.9, 12746.0], [93.0, 12747.0], [93.1, 12751.0], [93.2, 12751.0], [93.3, 12751.0], [93.4, 12751.0], [93.5, 12751.0], [93.6, 12752.0], [93.7, 12752.0], [93.8, 12753.0], [93.9, 12755.0], [94.0, 12756.0], [94.1, 12756.0], [94.2, 12756.0], [94.3, 12757.0], [94.4, 12759.0], [94.5, 12764.0], [94.6, 12764.0], [94.7, 12765.0], [94.8, 12771.0], [94.9, 12772.0], [95.0, 12772.0], [95.1, 12773.0], [95.2, 12775.0], [95.3, 12775.0], [95.4, 12776.0], [95.5, 12777.0], [95.6, 12779.0], [95.7, 12780.0], [95.8, 12780.0], [95.9, 12781.0], [96.0, 12783.0], [96.1, 12783.0], [96.2, 12784.0], [96.3, 12784.0], [96.4, 12786.0], [96.5, 12790.0], [96.6, 12791.0], [96.7, 12791.0], [96.8, 12796.0], [96.9, 12800.0], [97.0, 12800.0], [97.1, 12801.0], [97.2, 12806.0], [97.3, 12806.0], [97.4, 12819.0], [97.5, 12824.0], [97.6, 12826.0], [97.7, 12830.0], [97.8, 12831.0], [97.9, 12834.0], [98.0, 12834.0], [98.1, 12834.0], [98.2, 13035.0], [98.3, 13044.0], [98.4, 13077.0], [98.5, 13077.0], [98.6, 13122.0], [98.7, 13122.0], [98.8, 13188.0], [98.9, 13217.0], [99.0, 13278.0], [99.1, 13336.0], [99.2, 13402.0], [99.3, 13404.0], [99.4, 13459.0], [99.5, 13515.0], [99.6, 13534.0], [99.7, 13620.0], [99.8, 13687.0], [99.9, 13716.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8878.0, "series": [{"data": [[60100.0, 92.0], [60000.0, 908.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 3654.0], [600.0, 8878.0], [700.0, 4307.0], [800.0, 2.0], [1000.0, 1222.0], [1100.0, 330.0], [1200.0, 266.0], [1300.0, 360.0], [1400.0, 533.0], [1500.0, 973.0], [1600.0, 2007.0], [1700.0, 648.0], [2100.0, 20.0], [2500.0, 25.0], [2600.0, 40.0], [2700.0, 28.0], [3000.0, 516.0], [3100.0, 196.0], [3300.0, 82.0], [3200.0, 69.0], [3400.0, 62.0], [3500.0, 168.0], [3600.0, 355.0], [3700.0, 67.0], [4100.0, 1.0], [4500.0, 5.0], [4700.0, 2.0], [5600.0, 1.0], [6700.0, 1.0], [7100.0, 96.0], [7000.0, 750.0], [7400.0, 18.0], [7300.0, 13.0], [7200.0, 26.0], [7600.0, 83.0], [7500.0, 20.0], [7700.0, 3.0], [8700.0, 2.0], [8600.0, 3.0], [15300.0, 15.0], [15200.0, 7.0], [15100.0, 23.0], [15000.0, 232.0], [15600.0, 1.0], [15500.0, 2.0], [15400.0, 6.0], [16100.0, 1.0], [21000.0, 3592.0], [100.0, 1487.0], [200.0, 834.0], [300.0, 1298.0], [400.0, 1969.0], [500.0, 5507.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12200.0, 362.0], [12100.0, 131.0], [12400.0, 107.0], [12500.0, 98.0], [12700.0, 88.0], [12600.0, 95.0], [12300.0, 88.0], [12800.0, 13.0], [13100.0, 3.0], [13300.0, 1.0], [13000.0, 4.0], [13200.0, 2.0], [13400.0, 3.0], [13600.0, 2.0], [13700.0, 1.0], [13500.0, 2.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3592.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 24274.0, "series": [{"data": [[0.0, 3662.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 24274.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 11278.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 3592.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 502.5650000000003, "minX": 1.61758074E12, "maxY": 979.6829575369065, "series": [{"data": [[1.6175808E12, 502.5650000000003]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.61758074E12, 558.0189999999999]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.6175808E12, 923.8233430799223], [1.61758086E12, 658.8734321550737], [1.61758074E12, 979.6829575369065]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758086E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 60167.799999999996, "series": [{"data": [[939.0, 60041.46666666667], [938.0, 60040.0], [984.0, 60032.8], [979.0, 60033.0], [978.0, 60035.5], [976.0, 60035.0], [974.0, 60034.0], [973.0, 60034.666666666664], [970.0, 60035.833333333336], [964.0, 60042.240000000005], [1022.0, 60028.5], [1023.0, 60029.0], [1008.0, 60034.0], [1020.0, 60028.0], [1019.0, 60027.0], [1018.0, 60028.0], [1016.0, 60027.0], [1007.0, 60034.0], [994.0, 60033.700000000004], [1001.0, 60033.857142857145], [1015.0, 60028.0], [1014.0, 60027.0], [1013.0, 60039.0], [1012.0, 60037.25], [1084.0, 60028.0], [1062.0, 60028.0], [1087.0, 60032.333333333336], [1057.0, 60027.333333333336], [1061.0, 60027.0], [1060.0, 60027.666666666664], [1081.0, 60028.5], [1080.0, 60029.0], [1074.0, 60030.2], [1039.0, 60027.5], [1037.0, 60027.0], [1036.0, 60028.0], [1035.0, 60027.0], [1034.0, 60029.0], [1033.0, 60026.0], [1032.0, 60028.0], [1031.0, 60027.5], [1029.0, 60028.0], [1028.0, 60031.0], [1027.0, 60028.0], [1026.0, 60029.0], [1025.0, 60029.0], [1024.0, 60029.0], [1054.0, 60032.0], [1053.0, 60028.0], [1051.0, 60028.0], [1049.0, 60027.0], [1047.0, 60028.0], [1046.0, 60026.5], [1044.0, 60028.0], [1043.0, 60028.0], [1041.0, 60029.5], [1069.0, 60029.75], [1065.0, 60030.0], [1064.0, 60028.5], [1147.0, 60028.0], [1150.0, 60028.0], [1120.0, 60028.666666666664], [1126.0, 60028.0], [1124.0, 60028.75], [1130.0, 60027.0], [1129.0, 60028.0], [1134.0, 60033.0], [1133.0, 60027.666666666664], [1149.0, 60028.0], [1148.0, 60027.0], [1145.0, 60027.0], [1143.0, 60026.0], [1142.0, 60026.0], [1141.0, 60027.0], [1140.0, 60031.0], [1139.0, 60026.5], [1137.0, 60027.0], [1136.0, 60027.0], [1117.0, 60029.0], [1088.0, 60026.0], [1097.0, 60031.5], [1092.0, 60031.5], [1099.0, 60030.0], [1098.0, 60032.0], [1102.0, 60037.0], [1100.0, 60031.0], [1114.0, 60029.0], [1111.0, 60029.333333333336], [1108.0, 60033.33333333333], [1207.0, 60029.0], [1189.0, 60028.0], [1212.0, 60028.0], [1215.0, 60027.0], [1186.0, 60028.5], [1184.0, 60028.0], [1188.0, 60028.0], [1187.0, 60028.0], [1191.0, 60029.0], [1193.0, 60027.0], [1192.0, 60031.0], [1195.0, 60028.0], [1194.0, 60028.0], [1198.0, 60027.5], [1196.0, 60027.0], [1214.0, 60026.0], [1213.0, 60029.0], [1211.0, 60031.0], [1210.0, 60028.0], [1208.0, 60029.0], [1205.0, 60029.0], [1204.0, 60027.0], [1203.0, 60029.0], [1202.0, 60028.0], [1201.0, 60029.0], [1167.0, 60029.0], [1166.0, 60029.0], [1165.0, 60028.0], [1164.0, 60028.0], [1163.0, 60031.0], [1162.0, 60029.0], [1159.0, 60029.0], [1158.0, 60029.0], [1157.0, 60028.0], [1156.0, 60029.0], [1153.0, 60028.0], [1152.0, 60028.5], [1183.0, 60028.0], [1182.0, 60027.0], [1181.0, 60028.0], [1180.0, 60029.5], [1178.0, 60033.0], [1177.0, 60028.0], [1175.0, 60031.0], [1174.0, 60030.0], [1173.0, 60028.0], [1172.0, 60030.0], [1171.0, 60028.0], [1170.0, 60029.0], [1169.0, 60030.0], [1168.0, 60029.0], [1255.0, 60028.0], [1274.0, 60028.0], [1278.0, 60027.0], [1249.0, 60028.0], [1252.0, 60028.0], [1251.0, 60026.0], [1254.0, 60027.0], [1253.0, 60027.0], [1256.0, 60030.0], [1258.0, 60029.0], [1257.0, 60029.0], [1261.0, 60029.5], [1259.0, 60029.0], [1263.0, 60028.0], [1262.0, 60028.0], [1277.0, 60028.0], [1275.0, 60029.0], [1273.0, 60028.0], [1272.0, 60028.0], [1271.0, 60029.0], [1270.0, 60028.0], [1269.0, 60030.0], [1268.0, 60028.0], [1265.0, 60028.5], [1231.0, 60029.0], [1230.0, 60027.0], [1229.0, 60027.0], [1228.0, 60027.0], [1227.0, 60028.0], [1226.0, 60028.0], [1224.0, 60026.5], [1222.0, 60027.0], [1221.0, 60027.0], [1220.0, 60027.0], [1218.0, 60028.0], [1217.0, 60027.5], [1247.0, 60028.333333333336], [1244.0, 60028.0], [1243.0, 60028.0], [1242.0, 60028.0], [1241.0, 60028.0], [1240.0, 60028.2], [1235.0, 60027.5], [1233.0, 60027.0], [1232.0, 60027.0], [1337.0, 60029.0], [1342.0, 60029.0], [1315.0, 60027.5], [1314.0, 60027.5], [1317.0, 60028.0], [1316.0, 60028.0], [1323.0, 60028.0], [1321.0, 60027.75], [1325.0, 60028.0], [1324.0, 60028.0], [1327.0, 60027.0], [1326.0, 60029.0], [1340.0, 60027.0], [1339.0, 60027.5], [1336.0, 60028.0], [1334.0, 60028.0], [1332.0, 60028.0], [1331.0, 60027.0], [1330.0, 60030.0], [1329.0, 60029.0], [1311.0, 60028.0], [1280.0, 60027.5], [1285.0, 60029.5], [1283.0, 60028.0], [1288.0, 60029.0], [1286.0, 60030.0], [1292.0, 60028.666666666664], [1289.0, 60033.0], [1295.0, 60028.5], [1293.0, 60034.0], [1309.0, 60027.0], [1308.0, 60027.5], [1306.0, 60027.0], [1305.0, 60027.0], [1304.0, 60027.0], [1303.0, 60028.0], [1301.0, 60027.0], [1300.0, 60026.5], [1298.0, 60029.0], [1297.0, 60028.0], [1296.0, 60027.0], [1380.0, 60027.0], [1401.0, 60028.0], [1406.0, 60028.0], [1376.0, 60026.0], [1379.0, 60029.0], [1377.0, 60027.0], [1381.0, 60027.0], [1384.0, 60027.5], [1382.0, 60027.0], [1387.0, 60029.0], [1385.0, 60027.0], [1390.0, 60028.0], [1389.0, 60028.5], [1405.0, 60028.0], [1404.0, 60028.666666666664], [1400.0, 60028.0], [1399.0, 60029.0], [1397.0, 60028.0], [1395.0, 60029.0], [1394.0, 60029.0], [1393.0, 60028.0], [1392.0, 60028.5], [1358.0, 60029.0], [1357.0, 60028.0], [1356.0, 60028.5], [1354.0, 60029.0], [1352.0, 60028.5], [1348.0, 60027.0], [1347.0, 60027.0], [1346.0, 60028.0], [1345.0, 60029.0], [1375.0, 60029.5], [1373.0, 60030.0], [1372.0, 60029.0], [1371.0, 60028.0], [1370.0, 60030.0], [1369.0, 60031.0], [1368.0, 60028.5], [1366.0, 60028.0], [1365.0, 60029.5], [1363.0, 60028.0], [1362.0, 60028.0], [1361.0, 60029.0], [1360.0, 60029.0], [1446.0, 60027.5], [1467.0, 60028.0], [1471.0, 60028.0], [1440.0, 60028.0], [1442.0, 60028.0], [1441.0, 60029.0], [1444.0, 60029.0], [1443.0, 60029.0], [1448.0, 60029.5], [1450.0, 60029.0], [1449.0, 60028.0], [1452.0, 60029.0], [1451.0, 60029.0], [1455.0, 60028.0], [1454.0, 60028.5], [1470.0, 60027.5], [1468.0, 60027.0], [1466.0, 60027.5], [1464.0, 60028.0], [1463.0, 60028.0], [1460.0, 60028.0], [1459.0, 60028.5], [1457.0, 60028.0], [1456.0, 60028.0], [1423.0, 60028.0], [1422.0, 60028.0], [1421.0, 60028.0], [1420.0, 60027.5], [1418.0, 60027.0], [1417.0, 60027.0], [1416.0, 60027.333333333336], [1413.0, 60032.0], [1412.0, 60026.0], [1411.0, 60029.0], [1409.0, 60028.0], [1408.0, 60028.0], [1439.0, 60029.0], [1438.0, 60029.0], [1437.0, 60029.0], [1436.0, 60028.0], [1434.0, 60029.0], [1432.0, 60028.5], [1430.0, 60029.0], [1429.0, 60030.0], [1428.0, 60029.666666666664], [1425.0, 60028.0], [1531.0, 60029.5], [1535.0, 60029.0], [1505.0, 60029.0], [1504.0, 60028.0], [1508.0, 60027.5], [1506.0, 60028.0], [1510.0, 60029.0], [1509.0, 60028.0], [1514.0, 60028.0], [1512.0, 60029.0], [1519.0, 60028.333333333336], [1516.0, 60028.5], [1534.0, 60028.0], [1533.0, 60029.5], [1529.0, 60030.0], [1528.0, 60029.0], [1526.0, 60028.0], [1525.0, 60028.5], [1523.0, 60028.0], [1522.0, 60028.0], [1521.0, 60027.0], [1486.0, 60029.0], [1485.0, 60028.0], [1484.0, 60028.5], [1482.0, 60028.0], [1481.0, 60028.0], [1480.0, 60029.666666666664], [1477.0, 60031.0], [1475.0, 60028.0], [1474.0, 60027.0], [1503.0, 60029.0], [1502.0, 60029.0], [1500.0, 60027.5], [1498.0, 60028.0], [1497.0, 60029.0], [1496.0, 60029.0], [1495.0, 60032.0], [1494.0, 60030.0], [1491.0, 60029.0], [1595.0, 60028.0], [1599.0, 60027.0], [1568.0, 60029.0], [1572.0, 60028.0], [1571.0, 60029.0], [1576.0, 60028.666666666664], [1573.0, 60029.0], [1578.0, 60027.0], [1577.0, 60028.0], [1581.0, 60029.0], [1580.0, 60028.0], [1598.0, 60028.0], [1597.0, 60027.0], [1594.0, 60026.5], [1592.0, 60027.0], [1591.0, 60026.0], [1590.0, 60027.0], [1589.0, 60027.0], [1588.0, 60027.0], [1587.0, 60028.0], [1585.0, 60027.0], [1584.0, 60028.666666666664], [1551.0, 60027.0], [1550.0, 60032.333333333336], [1549.0, 60028.0], [1545.0, 60029.0], [1542.0, 60028.0], [1541.0, 60028.0], [1539.0, 60026.5], [1537.0, 60028.0], [1536.0, 60027.0], [1566.0, 60027.5], [1564.0, 60029.0], [1562.0, 60027.0], [1561.0, 60027.0], [1560.0, 60029.0], [1559.0, 60028.333333333336], [1556.0, 60026.5], [1554.0, 60028.0], [1553.0, 60026.0], [1552.0, 60030.0], [1657.0, 60049.0], [1663.0, 60050.0], [1635.0, 60043.0], [1637.0, 60044.0], [1636.0, 60041.75], [1640.0, 60045.0], [1639.0, 60043.5], [1643.0, 60042.0], [1641.0, 60047.0], [1662.0, 60053.0], [1661.0, 60053.75], [1656.0, 60048.0], [1655.0, 60051.0], [1652.0, 60048.0], [1649.0, 60043.5], [1631.0, 60042.5], [1600.0, 60028.0], [1604.0, 60028.333333333336], [1601.0, 60028.0], [1606.0, 60029.0], [1605.0, 60029.0], [1609.0, 60029.5], [1607.0, 60029.0], [1612.0, 60031.0], [1611.0, 60030.5], [1615.0, 60030.0], [1614.0, 60032.0], [1629.0, 60032.0], [1627.0, 60031.0], [1626.0, 60031.0], [1625.0, 60031.0], [1624.0, 60032.0], [1623.0, 60031.0], [1622.0, 60031.0], [1621.0, 60030.0], [1620.0, 60031.0], [1618.0, 60030.0], [1617.0, 60029.0], [1616.0, 60031.0], [1647.0, 60042.0], [1646.0, 60048.0], [1722.0, 60062.25], [1727.0, 60061.0], [1698.0, 60061.5], [1696.0, 60062.0], [1702.0, 60061.0], [1701.0, 60063.0], [1704.0, 60062.0], [1703.0, 60063.0], [1726.0, 60063.333333333336], [1723.0, 60063.0], [1718.0, 60060.0], [1715.0, 60057.0], [1714.0, 60060.5], [1712.0, 60062.0], [1695.0, 60062.0], [1666.0, 60051.333333333336], [1668.0, 60051.0], [1667.0, 60052.0], [1678.0, 60056.0], [1671.0, 60052.0], [1692.0, 60061.0], [1691.0, 60060.0], [1690.0, 60061.0], [1682.0, 60058.75], [1709.0, 60066.0], [1708.0, 60064.25], [1770.0, 60045.0], [1790.0, 60076.72727272727], [1789.0, 60073.0], [1743.0, 60062.0], [1742.0, 60075.23076923076], [1741.0, 60066.5], [1757.0, 60048.0], [1756.0, 60049.0], [1755.0, 60088.0], [1745.0, 60052.5], [1775.0, 60046.0], [1774.0, 60045.666666666664], [1771.0, 60042.0], [1769.0, 60044.0], [1768.0, 60045.0], [1767.0, 60136.4], [1803.0, 60103.0], [1855.0, 60167.799999999996], [1830.0, 60052.71428571428], [1828.0, 60063.333333333336], [1820.0, 60090.4], [1819.0, 60100.6], [1818.0, 60046.0], [1802.0, 60106.0], [1799.0, 60087.428571428565], [1792.0, 60106.5], [1909.0, 60138.0], [1913.0, 60095.0], [1912.0, 60032.0], [1910.0, 60139.0], [1908.0, 60135.0], [1906.0, 60087.666666666664], [1905.0, 60117.333333333336], [1904.0, 60140.0], [1880.0, 60123.0], [1857.0, 60058.818181818184], [1856.0, 60104.33333333333], [1879.0, 60123.0], [1878.0, 60039.5], [1877.0, 60068.0], [1873.0, 60100.9375], [1893.0, 60161.0], [1891.0, 60164.0], [1889.0, 60150.444444444445], [1923.0, 60131.0], [1922.0, 60130.0], [1920.0, 60088.42857142857]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1425.5560000000005, 60044.99199999996]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 15049.0], [3.0, 15057.0], [4.0, 15089.0], [5.0, 15072.0], [7.0, 15064.5], [8.0, 15074.0], [9.0, 15057.0], [10.0, 15056.0], [11.0, 15057.0], [12.0, 15056.0], [13.0, 15060.0], [14.0, 15056.0], [15.0, 15062.0], [17.0, 15085.5], [18.0, 15074.0], [19.0, 15070.0], [20.0, 15069.0], [22.0, 15070.0], [24.0, 15070.666666666666], [26.0, 15069.0], [27.0, 15069.0], [28.0, 15072.0], [29.0, 15075.0], [30.0, 15069.0], [31.0, 15072.0], [32.0, 15070.0], [35.0, 15069.0], [34.0, 15071.5], [37.0, 15066.0], [36.0, 15070.0], [38.0, 15069.0], [41.0, 15074.333333333334], [42.0, 15072.0], [45.0, 15071.0], [44.0, 15069.0], [47.0, 15073.0], [46.0, 15071.5], [49.0, 15068.0], [48.0, 15073.0], [51.0, 15076.0], [55.0, 15069.0], [54.0, 15071.666666666666], [57.0, 15070.0], [59.0, 15070.0], [61.0, 15072.0], [60.0, 15070.0], [63.0, 15058.0], [66.0, 15061.0], [65.0, 15060.0], [64.0, 15059.0], [71.0, 15070.0], [70.0, 15060.0], [69.0, 15061.0], [68.0, 15059.5], [75.0, 15063.0], [74.0, 15064.0], [73.0, 15069.0], [72.0, 15069.0], [79.0, 15061.0], [78.0, 15059.0], [77.0, 15062.0], [83.0, 15061.5], [81.0, 15065.0], [80.0, 15060.0], [87.0, 15064.0], [86.0, 15063.0], [85.0, 15060.5], [91.0, 15063.0], [90.0, 15067.0], [89.0, 15066.0], [88.0, 15064.0], [95.0, 21033.0], [94.0, 15078.0], [93.0, 15080.0], [92.0, 15065.0], [99.0, 21044.0], [98.0, 21022.0], [97.0, 15066.0], [96.0, 15083.0], [103.0, 21046.0], [102.0, 21043.666666666668], [106.0, 21037.0], [105.0, 21037.0], [104.0, 21050.0], [111.0, 21058.0], [109.0, 21046.0], [108.0, 21033.0], [115.0, 21045.666666666668], [114.0, 21034.0], [119.0, 21040.0], [118.0, 21033.0], [117.0, 21042.0], [116.0, 21061.0], [123.0, 21031.0], [122.0, 21032.0], [121.0, 21056.0], [120.0, 21055.0], [127.0, 21051.0], [126.0, 21035.0], [125.0, 21050.0], [124.0, 21049.0], [135.0, 21022.0], [134.0, 21022.0], [133.0, 21028.0], [132.0, 21050.0], [131.0, 21050.0], [130.0, 21023.0], [129.0, 21032.0], [128.0, 21032.0], [143.0, 21029.0], [142.0, 21041.0], [141.0, 21046.0], [140.0, 21032.0], [139.0, 21024.0], [138.0, 21044.0], [137.0, 21031.0], [136.0, 21024.0], [151.0, 21039.0], [150.0, 21031.333333333332], [147.0, 21032.0], [146.0, 15051.0], [145.0, 21024.0], [144.0, 21029.0], [159.0, 21032.0], [158.0, 21024.0], [157.0, 21027.0], [156.0, 21034.0], [155.0, 21037.0], [154.0, 21025.0], [153.0, 21027.0], [152.0, 21027.0], [167.0, 21018.0], [166.0, 21018.0], [165.0, 21023.0], [164.0, 21026.0], [163.0, 21026.0], [162.0, 21030.0], [161.0, 21033.0], [160.0, 21029.0], [175.0, 21028.0], [174.0, 21023.0], [173.0, 21015.0], [172.0, 21022.0], [171.0, 21021.0], [170.0, 21026.0], [169.0, 21028.0], [168.0, 21020.0], [183.0, 15066.0], [182.0, 15068.0], [181.0, 21027.0], [180.0, 21012.0], [179.0, 21027.0], [178.0, 21029.0], [177.0, 21028.0], [176.0, 21029.0], [191.0, 21043.0], [190.0, 21031.0], [189.0, 21038.0], [188.0, 21043.0], [186.0, 21043.5], [184.0, 15068.0], [199.0, 21035.0], [198.0, 21045.0], [197.0, 21032.0], [196.0, 21042.0], [194.0, 21031.0], [193.0, 21030.0], [192.0, 21032.0], [207.0, 21024.0], [206.0, 21026.0], [205.0, 21043.0], [204.0, 21033.0], [203.0, 21028.0], [202.0, 21030.0], [201.0, 21033.0], [200.0, 21032.0], [215.0, 21030.0], [214.0, 15065.0], [213.0, 21034.0], [212.0, 21029.0], [211.0, 21021.0], [210.0, 21026.0], [209.0, 21033.0], [208.0, 21032.0], [223.0, 21020.0], [222.0, 21022.0], [221.0, 21024.5], [219.0, 21017.0], [218.0, 21025.0], [217.0, 21030.0], [216.0, 21021.0], [231.0, 21027.0], [230.0, 21027.0], [229.0, 21014.0], [228.0, 21021.0], [227.0, 21024.0], [226.0, 21018.0], [225.0, 21024.0], [224.0, 21022.0], [239.0, 21051.0], [238.0, 21056.0], [237.0, 21054.0], [236.0, 21026.0], [235.0, 21027.0], [234.0, 21027.0], [233.0, 21041.0], [232.0, 21027.0], [247.0, 21039.0], [246.0, 21039.0], [245.0, 21036.0], [244.0, 21056.0], [243.0, 21057.0], [242.0, 21041.0], [241.0, 21057.0], [240.0, 21051.0], [255.0, 21053.0], [254.0, 21055.0], [253.0, 21049.0], [252.0, 21020.0], [251.0, 21022.0], [250.0, 21038.0], [249.0, 21024.0], [248.0, 21035.0], [270.0, 21034.0], [271.0, 21035.0], [269.0, 21035.0], [268.0, 21031.0], [267.0, 21020.0], [266.0, 21031.0], [265.0, 21031.0], [264.0, 21021.0], [263.0, 21046.0], [257.0, 21051.0], [256.0, 21052.0], [259.0, 21049.0], [258.0, 21054.0], [262.0, 21048.0], [261.0, 21051.0], [260.0, 21051.0], [286.0, 21031.0], [287.0, 21030.0], [285.0, 21031.0], [284.0, 21032.0], [283.0, 21032.0], [282.0, 21033.0], [281.0, 21032.0], [280.0, 21031.0], [279.0, 21034.0], [272.0, 21033.0], [275.0, 21037.5], [273.0, 21034.0], [278.0, 21035.0], [277.0, 21035.0], [276.0, 21034.0], [302.0, 21044.0], [303.0, 21043.0], [301.0, 21044.0], [300.0, 21031.0], [298.0, 21014.0], [297.0, 21030.0], [296.0, 21031.0], [295.0, 21029.0], [289.0, 21031.0], [288.0, 21031.0], [291.0, 21033.0], [290.0, 21032.0], [294.0, 21029.0], [293.0, 21030.0], [292.0, 21032.0], [316.0, 21041.0], [318.0, 21014.0], [319.0, 21031.0], [317.0, 21030.0], [315.0, 21044.0], [312.0, 21029.0], [311.0, 21030.0], [305.0, 21046.0], [304.0, 21031.0], [307.0, 21031.0], [306.0, 21047.0], [310.0, 21044.0], [309.0, 21045.0], [308.0, 21046.0], [334.0, 21027.0], [335.0, 21029.0], [333.0, 21029.0], [332.0, 21044.0], [331.0, 21044.0], [330.0, 21011.0], [329.0, 21015.0], [328.0, 21010.0], [327.0, 21013.0], [321.0, 21015.0], [320.0, 21016.0], [323.0, 21027.0], [322.0, 21030.0], [326.0, 21029.0], [325.0, 21029.0], [324.0, 21026.0], [349.0, 21014.0], [351.0, 21020.0], [348.0, 21045.0], [339.0, 21025.0], [338.0, 21040.0], [337.0, 21042.0], [336.0, 21012.0], [347.0, 21026.0], [346.0, 21026.0], [345.0, 21026.0], [344.0, 21027.0], [343.0, 21026.0], [342.0, 21027.0], [341.0, 21028.0], [340.0, 21011.0], [366.0, 21054.0], [367.0, 21052.0], [365.0, 21025.0], [364.0, 21072.0], [363.0, 21027.0], [362.0, 21025.0], [361.0, 21026.0], [360.0, 21012.0], [359.0, 21013.0], [353.0, 21026.0], [352.0, 21011.0], [355.0, 21040.0], [354.0, 21028.0], [358.0, 21027.0], [357.0, 21015.0], [356.0, 21030.0], [382.0, 21039.0], [383.0, 7047.0], [381.0, 21022.0], [380.0, 21024.0], [379.0, 21026.0], [378.0, 21026.0], [377.0, 21025.0], [376.0, 21011.0], [375.0, 21024.0], [368.0, 21042.0], [370.0, 21025.0], [369.0, 21040.0], [374.0, 21026.0], [373.0, 21024.0], [372.0, 7049.5], [398.0, 21036.0], [399.0, 7065.0], [397.0, 21036.0], [396.0, 21036.0], [395.0, 21037.0], [394.0, 15057.0], [393.0, 7048.0], [392.0, 21037.0], [391.0, 21024.0], [385.0, 7049.0], [384.0, 7052.0], [387.0, 7049.0], [386.0, 7049.0], [390.0, 7050.0], [389.0, 7048.0], [388.0, 7050.0], [414.0, 7050.0], [415.0, 21037.0], [413.0, 7049.0], [412.0, 7051.0], [411.0, 7051.0], [410.0, 7051.0], [409.0, 15060.0], [408.0, 7053.0], [407.0, 21036.0], [401.0, 15069.0], [400.0, 7066.0], [403.0, 7053.0], [402.0, 21037.0], [406.0, 21037.0], [405.0, 15060.0], [404.0, 21036.0], [430.0, 7049.0], [431.0, 7048.0], [429.0, 7056.0], [428.0, 7059.0], [427.0, 21035.0], [426.0, 21020.0], [425.0, 21020.0], [424.0, 7050.0], [423.0, 7049.5], [417.0, 21035.0], [416.0, 15056.0], [419.0, 21034.0], [418.0, 21035.0], [421.0, 7052.0], [420.0, 7051.0], [446.0, 7046.0], [447.0, 7048.0], [445.0, 7050.0], [444.0, 21031.0], [443.0, 7047.0], [442.0, 21031.0], [441.0, 7047.0], [440.0, 7046.0], [439.0, 15053.0], [433.0, 21035.0], [432.0, 21035.0], [435.0, 7049.0], [434.0, 21033.0], [438.0, 7047.0], [437.0, 7048.0], [436.0, 7047.0], [462.0, 21031.0], [463.0, 21030.0], [461.0, 21045.0], [460.0, 21044.0], [459.0, 21046.0], [458.0, 21045.0], [457.0, 21033.0], [456.0, 21032.0], [455.0, 15052.0], [449.0, 7047.0], [448.0, 7046.0], [451.0, 7043.0], [450.0, 7047.0], [454.0, 21045.0], [453.0, 7045.5], [477.0, 7046.0], [476.0, 21031.0], [467.0, 7046.0], [465.0, 7045.0], [464.0, 21045.0], [475.0, 21031.0], [474.0, 7049.0], [473.0, 21030.0], [472.0, 21030.0], [471.0, 7044.5], [469.0, 7044.0], [468.0, 7045.0], [494.0, 21030.0], [495.0, 7048.0], [493.0, 7047.5], [483.0, 7047.2], [482.0, 7047.0], [491.0, 21031.0], [490.0, 21031.0], [489.0, 21031.0], [488.0, 21031.0], [487.0, 21031.0], [486.0, 7050.0], [485.0, 7046.0], [510.0, 21027.0], [511.0, 7059.0], [509.0, 21028.0], [508.0, 21043.0], [507.0, 21045.0], [506.0, 21030.0], [505.0, 21046.0], [504.0, 21028.0], [503.0, 15049.0], [497.0, 7046.0], [496.0, 15051.0], [499.0, 15055.0], [498.0, 7046.0], [502.0, 7045.0], [501.0, 15050.0], [500.0, 7048.0], [540.0, 21029.0], [543.0, 7065.0], [529.0, 7062.0], [528.0, 7062.0], [531.0, 7048.0], [530.0, 7060.0], [533.0, 21028.0], [532.0, 7047.0], [542.0, 21029.0], [541.0, 21030.0], [539.0, 21029.0], [538.0, 21028.0], [537.0, 7047.0], [536.0, 21028.0], [527.0, 21030.0], [513.0, 7062.0], [512.0, 21027.0], [515.0, 21029.0], [514.0, 7061.0], [517.0, 21027.0], [516.0, 21028.0], [519.0, 7061.0], [518.0, 7062.0], [526.0, 7062.0], [525.0, 21029.0], [524.0, 21029.0], [523.0, 7061.0], [522.0, 21027.0], [521.0, 21028.5], [535.0, 21028.0], [534.0, 21028.0], [569.0, 21045.0], [574.0, 21044.0], [575.0, 21045.0], [560.0, 21029.5], [562.0, 21044.0], [561.0, 21029.0], [565.0, 21045.0], [564.0, 7047.0], [572.0, 21044.0], [571.0, 21044.0], [570.0, 15049.0], [568.0, 7049.0], [551.0, 7062.0], [550.0, 11056.5], [548.0, 7062.0], [547.0, 21028.0], [546.0, 7060.0], [545.0, 7062.0], [544.0, 7061.0], [558.0, 7046.0], [557.0, 7046.0], [556.0, 7047.0], [555.0, 21029.5], [553.0, 15048.0], [552.0, 15048.0], [567.0, 21044.0], [566.0, 21043.0], [601.0, 21044.0], [606.0, 7050.5], [607.0, 7065.0], [592.0, 21043.0], [595.0, 7056.0], [594.0, 7060.5], [597.0, 21045.0], [596.0, 21046.0], [604.0, 21045.0], [603.0, 7048.0], [602.0, 7049.0], [600.0, 21043.0], [583.0, 7049.0], [582.0, 21044.0], [581.0, 21045.0], [580.0, 7048.0], [579.0, 21043.0], [578.0, 21043.0], [577.0, 21045.0], [576.0, 21044.0], [591.0, 21043.0], [590.0, 7064.0], [588.0, 7056.0], [587.0, 7064.5], [585.0, 21044.0], [584.0, 7048.0], [599.0, 21043.0], [598.0, 21045.0], [632.0, 21045.0], [636.0, 21044.0], [639.0, 21045.0], [625.0, 21044.0], [624.0, 7050.5], [628.0, 7050.0], [627.0, 7049.5], [638.0, 7050.0], [637.0, 21042.0], [635.0, 21045.0], [634.0, 21046.0], [633.0, 21045.0], [622.0, 21045.0], [609.0, 21046.0], [608.0, 21045.0], [611.0, 21044.0], [610.0, 21045.0], [613.0, 21045.0], [612.0, 21044.0], [615.0, 21043.0], [614.0, 21044.0], [621.0, 21045.0], [620.0, 7051.0], [619.0, 7050.0], [618.0, 7051.0], [617.0, 7050.0], [631.0, 21042.0], [630.0, 21043.5], [668.0, 7051.0], [671.0, 21046.0], [657.0, 21045.0], [656.0, 21045.0], [659.0, 7050.0], [658.0, 21044.0], [661.0, 7050.0], [660.0, 7049.0], [670.0, 7054.0], [669.0, 7055.0], [667.0, 7051.0], [666.0, 21045.0], [665.0, 21047.0], [664.0, 21046.0], [655.0, 21045.0], [641.0, 21046.0], [640.0, 21046.0], [643.0, 21045.0], [642.0, 21045.0], [645.0, 21043.0], [644.0, 21043.0], [647.0, 21045.0], [646.0, 7051.0], [654.0, 7052.0], [653.0, 7052.0], [652.0, 21046.0], [651.0, 21045.0], [650.0, 21047.0], [649.0, 21048.0], [648.0, 21046.0], [663.0, 7051.0], [662.0, 7049.0], [696.0, 3046.0], [702.0, 7049.333333333333], [703.0, 7050.0], [688.0, 7048.0], [690.0, 7047.0], [689.0, 7048.0], [699.0, 3044.0], [698.0, 7055.0], [697.0, 15053.0], [687.0, 7044.0], [672.0, 21045.0], [674.0, 21045.0], [673.0, 21046.0], [676.0, 21045.0], [675.0, 21044.0], [679.0, 7047.0], [677.0, 21045.0], [686.0, 7044.5], [684.0, 7047.0], [683.0, 7045.5], [681.0, 7046.0], [680.0, 7048.0], [694.0, 15052.0], [693.0, 3044.0], [692.0, 7050.0], [691.0, 7047.0], [728.0, 7049.0], [734.0, 5711.666666666667], [735.0, 21044.0], [720.0, 7059.0], [723.0, 7060.0], [722.0, 7059.0], [731.0, 7049.0], [730.0, 21043.0], [729.0, 7049.0], [719.0, 7045.0], [704.0, 7050.0], [707.0, 7050.0], [705.0, 7052.0], [709.0, 7048.0], [708.0, 7050.0], [711.0, 7052.0], [710.0, 3061.0], [717.0, 7046.0], [714.0, 7046.0], [713.0, 7049.0], [712.0, 7051.0], [727.0, 21043.0], [726.0, 21042.0], [725.0, 7056.0], [724.0, 7057.0], [743.0, 7048.0], [756.0, 7048.0], [765.0, 7047.0], [763.0, 7049.25], [741.0, 7049.0], [740.0, 7049.0], [739.0, 21062.0], [738.0, 21060.0], [737.0, 15042.0], [736.0, 21046.0], [751.0, 7053.0], [750.0, 15057.0], [749.0, 21062.0], [748.0, 7049.0], [747.0, 7050.0], [746.0, 7051.0], [745.0, 7047.5], [759.0, 7050.0], [758.0, 21047.0], [757.0, 3037.0], [755.0, 7049.5], [753.0, 7050.0], [752.0, 7051.0], [793.0, 7049.0], [798.0, 21046.0], [799.0, 21029.0], [785.0, 7034.0], [784.0, 7048.5], [787.0, 7050.0], [786.0, 7050.0], [789.0, 7049.0], [788.0, 7049.0], [797.0, 5043.0], [795.0, 3035.0], [794.0, 7052.0], [792.0, 7050.0], [775.0, 21048.0], [774.0, 7048.0], [773.0, 21047.0], [772.0, 21047.0], [771.0, 3036.0], [770.0, 3039.0], [769.0, 21048.0], [768.0, 7048.333333333333], [782.0, 7049.0], [781.0, 7046.0], [780.0, 7046.0], [779.0, 7048.0], [778.0, 7049.0], [777.0, 7047.0], [776.0, 7050.0], [791.0, 7049.0], [790.0, 7052.0], [825.0, 7066.0], [830.0, 7075.0], [831.0, 7072.0], [816.0, 21047.0], [818.0, 7065.0], [817.0, 21045.0], [820.0, 7066.0], [819.0, 7064.0], [829.0, 7066.0], [828.0, 7067.0], [826.0, 21031.0], [824.0, 7065.0], [807.0, 7064.0], [806.0, 7055.0], [805.0, 7055.0], [804.0, 7056.0], [803.0, 21047.0], [802.0, 7062.0], [801.0, 7063.0], [800.0, 21028.0], [815.0, 3053.0], [814.0, 21047.0], [813.0, 7069.0], [812.0, 7054.0], [811.0, 7074.0], [810.0, 7073.0], [809.0, 21048.0], [808.0, 21032.0], [823.0, 7063.0], [821.0, 7064.0], [860.0, 21043.0], [863.0, 21044.0], [849.0, 21043.0], [848.0, 7071.0], [851.0, 21044.0], [850.0, 21044.0], [853.0, 21043.0], [852.0, 21044.0], [862.0, 21060.0], [861.0, 21044.0], [859.0, 21042.0], [858.0, 21042.0], [857.0, 21043.0], [856.0, 21043.0], [847.0, 3053.0], [833.0, 21031.0], [832.0, 3050.0], [835.0, 21029.0], [834.0, 3046.0], [837.0, 3044.0], [836.0, 21028.0], [839.0, 21044.0], [838.0, 3047.0], [846.0, 7077.0], [845.0, 3045.0], [844.0, 3047.0], [843.0, 3047.0], [842.0, 7051.0], [841.0, 21044.0], [840.0, 21045.0], [855.0, 21043.0], [854.0, 21043.0], [892.0, 21042.13432835822], [895.0, 21039.339130434786], [881.0, 21051.666666666668], [880.0, 21051.538461538465], [883.0, 21044.33333333333], [882.0, 21050.0], [885.0, 21051.8], [884.0, 21045.75925925926], [894.0, 21043.713114754097], [893.0, 21034.22222222222], [891.0, 21042.602150537637], [890.0, 21040.603773584906], [889.0, 21041.222222222223], [888.0, 21050.000000000004], [879.0, 21047.5], [865.0, 21040.0], [864.0, 21041.0], [867.0, 21040.0], [866.0, 21039.0], [869.0, 21031.777777777777], [868.0, 21041.69230769231], [871.0, 21046.036529680372], [870.0, 21034.45454545454], [878.0, 21059.388888888887], [877.0, 21050.862745098042], [876.0, 21053.0], [875.0, 21049.100000000002], [874.0, 21047.606060606064], [873.0, 21038.948275862054], [872.0, 21043.666666666668], [887.0, 21049.0], [886.0, 21050.344827586207], [922.0, 21039.0], [916.0, 21035.285714285717], [923.0, 21035.313725490192], [913.0, 21039.296296296296], [912.0, 21033.666666666668], [921.0, 21032.0], [920.0, 21036.785714285717], [911.0, 21037.0], [897.0, 21031.47674418605], [896.0, 21037.440000000002], [899.0, 21039.200000000004], [898.0, 21039.916666666668], [901.0, 21039.629629629628], [900.0, 21040.980392156864], [903.0, 21043.857142857138], [902.0, 21044.139784946234], [910.0, 21034.0], [909.0, 21035.714285714286], [908.0, 21038.761904761905], [907.0, 21035.777777777777], [906.0, 21039.250825082494], [905.0, 21041.556603773584], [904.0, 20723.268656716416], [919.0, 21040.0], [918.0, 21038.731343283573], [917.0, 21030.258064516125], [915.0, 21045.444444444445], [914.0, 21044.133333333335], [964.0, 21029.0], [1088.0, 21045.0], [1286.0, 21044.0], [1790.0, 21057.0], [1742.0, 21052.0], [1820.0, 21056.0], [1976.0, 1683.9809523809524], [1972.0, 1524.5094339622642], [1980.0, 1394.4923076923078], [1952.0, 1687.1], [1954.0, 976.2499999999999], [1956.0, 1542.8686868686875], [1958.0, 2013.2588235294122], [1960.0, 2472.4313725490188], [1962.0, 572.2692307692308], [1964.0, 1145.7716535433074], [1966.0, 1471.8228571428574], [1982.0, 28.0], [1978.0, 1554.5555555555554], [1974.0, 900.0729166666669], [1970.0, 1338.6274509803925], [1968.0, 1512.098214285714], [1924.0, 21039.388888888883], [1926.0, 8433.876106194692], [1928.0, 14804.63888888889], [1930.0, 1173.2578125], [1932.0, 968.8682170542642], [1934.0, 1107.8148148148148], [1950.0, 1286.40625], [1948.0, 2282.1111111111113], [1946.0, 2869.1428571428582], [1944.0, 28.0], [1942.0, 471.8679245283019], [1940.0, 895.1111111111114], [1938.0, 563.2222222222222], [1936.0, 2231.8571428571436], [1996.0, 1056.2152466367716], [2018.0, 776.6414565826323], [2030.0, 524.0], [2002.0, 656.2095238095236], [2000.0, 940.925803151215], [1998.0, 1620.3396226415077], [1994.0, 1058.6295454545452], [1992.0, 1469.8732394366198], [1990.0, 1692.049618320611], [1988.0, 554.9398496240601], [1986.0, 939.7472527472531], [1984.0, 919.4782608695654], [2152.0, 47.0], [2160.0, 493.8888888888889], [2092.0, 55.57142857142858], [2148.0, 47.375], [2144.0, 41.25], [2048.0, 525.0], [2120.0, 40.666666666666664], [2124.0, 354.3333333333333], [2128.0, 42.0], [2096.0, 68.0], [2180.0, 70.66666666666667], [2192.0, 72.55555555555554], [2220.0, 74.0], [2232.0, 488.25], [2216.0, 491.3333333333334], [2208.0, 470.5], [2188.0, 450.2352941176471], [2196.0, 72.5], [2200.0, 72.5], [2204.0, 63.5], [2276.0, 115.0], [2284.0, 1443.0], [2288.0, 109.0], [2296.0, 864.5], [2248.0, 457.3076923076923], [2256.0, 426.0], [2320.0, 120.0], [2304.0, 1295.2439024390246], [2344.0, 300.5], [2336.0, 131.0], [2340.0, 132.75], [2324.0, 744.4285714285713], [2328.0, 124.0], [2332.0, 127.6], [2400.0, 256.5], [2404.0, 280.0], [2408.0, 259.0], [2412.0, 728.4166666666667], [2388.0, 156.0], [2392.0, 161.75], [2396.0, 232.85185185185188], [2552.0, 195.5], [2448.0, 273.0], [2504.0, 230.25], [2500.0, 226.5], [2496.0, 227.5], [2436.0, 410.6666666666667], [2440.0, 275.5], [2444.0, 272.0], [2540.0, 187.0], [2556.0, 190.0], [2492.0, 205.0], [2488.0, 476.0], [2472.0, 205.625], [2464.0, 258.4], [2792.0, 462.0], [2804.0, 462.0], [2788.0, 463.0], [2940.0, 456.0], [2880.0, 459.0], [2932.0, 388.8], [2924.0, 457.0], [2912.0, 369.8], [2848.0, 460.0], [2888.0, 472.5], [2892.0, 458.0], [2908.0, 366.18181818181824], [2944.0, 395.47368421052624], [3000.0, 639.2032115171639], [2952.0, 399.5], [2972.0, 543.0], [2984.0, 518.0], [2976.0, 540.0], [2992.0, 559.0], [2153.0, 48.0], [2101.0, 81.66666666666666], [2105.0, 69.0], [2093.0, 55.15384615384615], [2097.0, 53.111111111111114], [2081.0, 498.3333333333333], [2113.0, 41.0], [2161.0, 56.0], [2157.0, 51.0], [2149.0, 46.875], [2145.0, 42.2], [2133.0, 506.1666666666667], [2293.0, 106.75], [2217.0, 483.2], [2281.0, 108.5], [2289.0, 108.0], [2297.0, 999.6666666666666], [2301.0, 1082.7333333333333], [2241.0, 92.0], [2261.0, 418.3333333333333], [2401.0, 257.0], [2305.0, 1238.0], [2353.0, 141.75], [2345.0, 300.5], [2349.0, 138.33333333333334], [2341.0, 132.0], [2405.0, 365.5], [2409.0, 260.0], [2417.0, 261.0], [2421.0, 263.0], [2425.0, 811.8333333333334], [2429.0, 268.0], [2393.0, 163.85714285714283], [2397.0, 256.0], [2453.0, 195.0], [2513.0, 222.32], [2521.0, 185.66666666666666], [2509.0, 232.0], [2433.0, 268.0], [2437.0, 268.5], [2445.0, 272.0], [2449.0, 274.0], [2457.0, 197.0], [2541.0, 187.75], [2553.0, 193.7], [2493.0, 216.4], [2489.0, 209.33333333333334], [2485.0, 220.0], [2481.0, 217.75], [2477.0, 825.0], [2469.0, 207.83333333333334], [2465.0, 480.0], [2561.0, 190.0], [2805.0, 463.0], [2785.0, 463.0], [2933.0, 457.0], [2941.0, 393.9333333333333], [2925.0, 381.7], [2901.0, 365.0], [2881.0, 475.0], [2937.0, 387.66666666666663], [2929.0, 386.4074074074074], [2921.0, 381.4], [2849.0, 460.0], [2905.0, 362.235294117647], [2909.0, 364.0], [2953.0, 400.0], [2997.0, 555.125], [2973.0, 542.8333333333334], [2969.0, 547.0], [2965.0, 547.1111111111111], [2957.0, 413.4], [2989.0, 510.6666666666667], [2985.0, 519.0], [2977.0, 524.4], [1029.0, 21026.0], [1423.0, 21055.0], [1981.0, 2157.3448275862065], [1983.0, 1342.2741935483866], [1953.0, 1581.027272727273], [1955.0, 2887.7307692307695], [1957.0, 1575.0894736842106], [1959.0, 1705.6363636363635], [1961.0, 1007.0000000000001], [1963.0, 1672.533333333333], [1965.0, 1536.4444444444446], [1967.0, 1173.2201834862383], [1979.0, 750.5999999999999], [1977.0, 2328.5736040609127], [1975.0, 814.8703703703702], [1973.0, 698.9166666666666], [1971.0, 1806.158119658119], [1969.0, 223.06249999999997], [1951.0, 32.0], [1923.0, 21039.75], [1925.0, 14038.287499999991], [1927.0, 8552.611111111111], [1929.0, 3935.3265306122453], [1931.0, 792.3], [1933.0, 1072.0], [1935.0, 61.72727272727273], [1949.0, 1542.925925925926], [1945.0, 1078.6373626373627], [1943.0, 3112.2608695652175], [1941.0, 1508.6907216494842], [1939.0, 1574.1142857142856], [1937.0, 3109.333333333334], [1997.0, 611.7714285714285], [2033.0, 524.0], [2029.0, 524.0], [2019.0, 524.0], [2001.0, 645.5714285714286], [1999.0, 1282.0821621621603], [1995.0, 997.8124999999997], [1993.0, 1377.4831460674152], [1991.0, 1768.9722222222222], [1989.0, 975.2781456953643], [1987.0, 1994.9097472924182], [1985.0, 2943.8015564202324], [2150.0, 51.0], [2098.0, 72.0], [2102.0, 79.0], [2118.0, 510.0], [2170.0, 65.0], [2162.0, 56.0], [2146.0, 43.666666666666664], [2050.0, 525.0], [2142.0, 44.0], [2094.0, 37.0], [2206.0, 63.0], [2230.0, 83.66666666666667], [2226.0, 79.6], [2218.0, 73.0], [2214.0, 70.0], [2210.0, 67.0], [2274.0, 862.7727272727274], [2278.0, 394.92857142857144], [2282.0, 690.625], [2286.0, 110.0], [2290.0, 105.5], [2294.0, 242.4], [2298.0, 105.6], [2302.0, 108.66666666666667], [2242.0, 469.2608695652174], [2250.0, 100.75], [2254.0, 104.8], [2262.0, 110.0], [2266.0, 112.5], [2314.0, 115.66666666666667], [2330.0, 127.0], [2306.0, 111.5], [2358.0, 144.0], [2362.0, 147.8], [2350.0, 966.0], [2354.0, 142.0], [2310.0, 114.25], [2318.0, 118.42857142857143], [2322.0, 121.5], [2406.0, 258.0], [2410.0, 261.0], [2414.0, 261.5], [2422.0, 264.5], [2430.0, 268.0], [2370.0, 395.0], [2378.0, 166.49999999999997], [2382.0, 175.0], [2386.0, 161.0], [2390.0, 472.0], [2442.0, 275.0], [2454.0, 196.4], [2502.0, 228.0], [2510.0, 234.0], [2506.0, 184.0], [2494.0, 226.0], [2434.0, 268.0], [2438.0, 271.0], [2446.0, 273.0], [2462.0, 984.8333333333334], [2458.0, 198.6], [2550.0, 186.0], [2554.0, 190.0], [2490.0, 221.0], [2486.0, 221.0], [2478.0, 215.33333333333334], [2470.0, 210.0], [2466.0, 259.4], [2586.0, 187.6111111111111], [2674.0, 467.0], [2930.0, 381.6666666666667], [2938.0, 400.2307692307692], [2942.0, 391.0], [2934.0, 393.85714285714283], [2926.0, 386.0], [2922.0, 380.92307692307696], [2918.0, 376.375], [2838.0, 460.0], [2862.0, 460.0], [2914.0, 369.0], [2902.0, 371.5], [2906.0, 363.74999999999994], [2910.0, 369.0], [2954.0, 402.0], [2950.0, 400.1666666666667], [2998.0, 561.0], [2994.0, 503.0], [2974.0, 540.6315789473683], [2970.0, 547.0], [2966.0, 545.8], [2958.0, 477.3076923076923], [2962.0, 551.0], [2990.0, 510.2], [2986.0, 519.0], [2982.0, 523.5], [2978.0, 524.0], [2171.0, 500.2799999999999], [2099.0, 65.8], [2087.0, 506.90000000000003], [2103.0, 50.5], [2175.0, 64.33333333333333], [2147.0, 43.333333333333336], [2055.0, 522.9565217391304], [2127.0, 45.42857142857143], [2139.0, 500.0], [2143.0, 40.9375], [2207.0, 65.0], [2199.0, 73.0], [2203.0, 69.5], [2235.0, 455.8666666666667], [2239.0, 91.33333333333333], [2231.0, 84.6], [2227.0, 80.4], [2219.0, 340.6], [2215.0, 70.0], [2211.0, 67.375], [2191.0, 72.5], [2279.0, 108.0], [2291.0, 1078.0625], [2299.0, 1438.5], [2247.0, 98.33333333333333], [2243.0, 461.0], [2251.0, 416.4117647058824], [2255.0, 104.57142857142857], [2259.0, 171.2], [2263.0, 110.14285714285715], [2267.0, 109.0], [2271.0, 111.0], [2323.0, 121.0], [2315.0, 830.0], [2307.0, 1461.3333333333333], [2363.0, 146.5], [2367.0, 151.0], [2359.0, 1467.25], [2343.0, 1457.2727272727277], [2311.0, 1466.0], [2319.0, 119.0], [2327.0, 127.0], [2331.0, 127.5], [2335.0, 130.5], [2403.0, 261.0], [2411.0, 368.0], [2415.0, 261.0], [2427.0, 267.3333333333333], [2423.0, 271.0], [2371.0, 152.0], [2375.0, 152.75], [2379.0, 172.66666666666666], [2383.0, 176.75], [2387.0, 160.0], [2395.0, 162.85714285714283], [2399.0, 364.75], [2455.0, 480.5], [2523.0, 188.66666666666666], [2439.0, 270.0], [2447.0, 377.0], [2451.0, 214.75], [2459.0, 200.66666666666666], [2547.0, 187.0], [2551.0, 187.0], [2555.0, 189.18181818181816], [2463.0, 848.25], [2491.0, 186.0], [2483.0, 218.75], [2479.0, 392.8333333333333], [2471.0, 213.0], [2467.0, 958.8148148148148], [2587.0, 185.0], [2591.0, 186.0], [2595.0, 193.0], [2723.0, 317.0], [2803.0, 462.3333333333333], [2791.0, 462.0], [2775.0, 463.0], [2943.0, 393.0], [2883.0, 459.0], [2935.0, 393.29411764705884], [2931.0, 395.6666666666667], [2919.0, 377.3636363636363], [2915.0, 372.83333333333337], [2887.0, 464.0], [2903.0, 364.0], [2907.0, 371.0], [2911.0, 370.4], [2951.0, 399.0], [2995.0, 538.6428571428572], [2999.0, 561.25], [2947.0, 402.1739130434782], [2955.0, 408.0], [2975.0, 509.25], [2971.0, 487.4], [2967.0, 543.6666666666666], [2963.0, 514.9999999999999], [2959.0, 553.0], [2991.0, 481.6611570247936], [2987.0, 526.0000000000001], [2983.0, 521.5], [2979.0, 524.0], [1.0, 21043.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1959.9689261383237, 2833.8955790815094]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[2018.0, 13359.625000000002], [2002.0, 13035.0], [2001.0, 13044.0], [2130.0, 12259.92857142857], [2171.0, 12277.81818181818], [2127.0, 12248.0], [2160.0, 12274.59090909091], [2159.0, 12271.0], [2079.0, 12235.666666666666], [2078.0, 12211.0], [2077.0, 12210.6], [2076.0, 12205.0], [2055.0, 12231.692307692309], [2087.0, 12241.5], [2081.0, 12218.5], [2080.0, 12233.111111111111], [2133.0, 12255.333333333332], [2132.0, 12250.333333333334], [2131.0, 12257.75], [2129.0, 12250.111111111111], [2128.0, 12241.166666666666], [2296.0, 12190.5], [2301.0, 12176.0], [2242.0, 12231.0], [2248.0, 12223.4], [2243.0, 12224.0], [2259.0, 12197.750000000002], [2251.0, 12218.0], [2266.0, 12185.8], [2261.0, 12191.5], [2299.0, 12179.0], [2297.0, 12193.0], [2294.0, 12196.0], [2293.0, 12196.0], [2291.0, 12197.142857142859], [2284.0, 12195.5], [2282.0, 12193.0], [2278.0, 12188.5], [2274.0, 12194.75], [2188.0, 12276.882352941178], [2235.0, 12237.333333333334], [2232.0, 12247.384615384615], [2219.0, 12254.5], [2217.0, 12268.0], [2216.0, 12278.25], [2208.0, 12280.250000000002], [2317.0, 12180.5], [2425.0, 12514.538461538463], [2412.0, 12520.307692307693], [2324.0, 12172.0], [2320.0, 12162.333333333334], [2315.0, 12170.5], [2311.0, 12169.5], [2307.0, 12168.5], [2305.0, 12169.0], [2304.0, 12179.333333333334], [2399.0, 12557.0], [2398.0, 12458.125], [2390.0, 12515.76923076923], [2377.0, 12418.142857142857], [2370.0, 12508.142857142857], [2363.0, 12308.0], [2359.0, 12232.777777777777], [2350.0, 12233.333333333334], [2347.0, 12182.5], [2345.0, 12196.5], [2343.0, 12163.0], [2342.0, 12232.222222222224], [2489.0, 12159.0], [2505.0, 12536.999999999998], [2488.0, 12529.75], [2480.0, 12542.0], [2479.0, 12506.5], [2477.0, 12452.3], [2467.0, 12581.2], [2462.0, 12578.142857142859], [2455.0, 12544.8], [2454.0, 12532.666666666666], [2442.0, 12587.666666666666], [2436.0, 12496.25], [2432.0, 12549.428571428572], [2676.0, 12472.0], [2679.0, 12448.111111111111], [2678.0, 12429.7], [2677.0, 12293.666666666666], [2609.0, 12250.75], [2562.0, 12500.5], [2566.0, 12594.875], [2565.0, 12772.0], [2564.0, 12536.25], [2563.0, 12742.0], [2809.0, 12321.5], [2778.0, 12505.0], [2810.0, 12461.416666666666], [2752.0, 12414.3], [2753.0, 12567.0], [2808.0, 12141.0], [2784.0, 12539.142857142857], [2728.0, 12355.533333333333], [2695.0, 12426.333333333334], [2697.0, 12450.6], [2696.0, 12781.0], [2699.0, 12585.666666666666], [2698.0, 12572.0], [2701.0, 12420.727272727274], [2700.0, 12361.5], [2727.0, 12465.5], [2726.0, 12360.5], [2724.0, 12483.0], [2723.0, 12207.333333333334], [2722.0, 12345.42857142857], [2721.0, 12219.0], [2783.0, 12454.666666666668], [2782.0, 12493.076923076922], [2781.0, 12462.666666666666], [2755.0, 12494.0], [2754.0, 12594.8], [2932.0, 12248.0], [2938.0, 12438.666666666666], [2943.0, 12440.0], [2893.0, 12585.0], [2892.0, 12423.42857142857], [2942.0, 12436.0], [2940.0, 12548.5], [2937.0, 12132.0], [2936.0, 12401.25], [2935.0, 12453.6], [2931.0, 12676.0], [2929.0, 12236.0], [2928.0, 12381.0], [2927.0, 12297.5], [2926.0, 12333.5], [2925.0, 12630.5], [2916.0, 12324.2], [2873.0, 12731.0], [2872.0, 12362.0], [2854.0, 12541.875], [2853.0, 12536.5], [2960.0, 12504.636363636364], [2986.0, 12438.0], [2995.0, 12440.857142857143], [3000.0, 12525.36842105263], [2945.0, 12652.5], [2944.0, 12532.6], [2947.0, 12620.5], [2946.0, 12546.0], [2949.0, 12439.666666666666], [2948.0, 12381.0], [2951.0, 12660.0], [2950.0, 12181.5], [2953.0, 12389.5], [2952.0, 12547.0], [2955.0, 12402.0], [2954.0, 12371.166666666668], [2957.0, 12476.142857142857], [2956.0, 12586.5], [2959.0, 12668.0], [2958.0, 12421.333333333334], [2961.0, 12486.0], [2963.0, 12492.066666666668], [2962.0, 12217.333333333334], [2965.0, 12599.75], [2964.0, 12595.8], [2967.0, 12479.333333333334], [2966.0, 12500.5], [2969.0, 12372.5], [2968.0, 12272.0], [2971.0, 12601.0], [2970.0, 12450.0], [2973.0, 12201.666666666666], [2972.0, 12659.0], [2975.0, 12380.5], [2974.0, 12445.0], [2998.0, 12329.5], [2996.0, 12427.142857142857], [2994.0, 12652.57142857143], [2988.0, 12514.5], [2987.0, 12310.8], [2985.0, 12410.75], [2984.0, 12289.333333333334], [2983.0, 12336.25], [2982.0, 12242.0], [2981.0, 12532.333333333334], [2980.0, 12356.0], [2979.0, 12355.5], [2978.0, 12688.5], [2977.0, 12413.5], [2976.0, 12385.5]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[2558.0069999999973, 12406.023000000007]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61758074E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175808E12, 0.0], [1.61758086E12, 0.0], [1.61758074E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6175808E12, 0.0], [1.61758086E12, 0.0], [1.61758074E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758086E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 966.9195662126587, "minX": 1.61758074E12, "maxY": 60044.99199999996, "series": [{"data": [[1.6175808E12, 60044.99199999996]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175808E12, 12073.866715399618], [1.61758086E12, 18413.277651083255], [1.61758074E12, 966.9195662126587]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758074E12, 12406.023000000007]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758086E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758074E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175808E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175808E12, 0.0], [1.61758086E12, 0.0], [1.61758074E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758074E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758086E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758074E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175808E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175808E12, 0.0], [1.61758086E12, 0.0], [1.61758074E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758074E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758086E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61758074E12, "maxY": 60190.0, "series": [{"data": [[1.6175808E12, 60190.0], [1.61758086E12, 15089.0], [1.61758074E12, 16185.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6175808E12, 60043.0], [1.61758086E12, 15070.0], [1.61758074E12, 3032.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6175808E12, 60154.0], [1.61758086E12, 15083.14], [1.61758074E12, 7547.410000000094]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6175808E12, 60061.05], [1.61758086E12, 15072.0], [1.61758074E12, 3635.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6175808E12, 26.0], [1.61758086E12, 3035.0], [1.61758074E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6175808E12, 1085.5], [1.61758086E12, 7051.0], [1.61758074E12, 644.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758086E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 60035.0, "series": [{"data": [[567.0, 98.0], [544.0, 154.0], [601.0, 219.0], [586.0, 60035.0], [663.0, 1031.5], [640.0, 63.0], [684.0, 150.0], [727.0, 600.0], [730.0, 562.0], [725.0, 70.0], [762.0, 40.5], [791.0, 604.0], [3.0, 1034.0], [823.0, 726.0], [813.0, 662.0], [818.0, 668.0], [815.0, 402.0], [803.0, 271.0], [830.0, 126.0], [854.0, 659.0], [838.0, 597.0], [870.0, 692.0], [896.0, 557.0], [911.0, 679.0], [932.0, 667.0], [939.0, 625.0], [1022.0, 668.0], [1070.0, 744.0], [1065.0, 542.0], [4.0, 15074.5], [1134.0, 639.0], [1122.0, 723.0], [1095.0, 627.0], [1173.0, 609.0], [1210.0, 733.0], [1266.0, 660.5], [1277.0, 524.0], [1400.0, 688.0], [1520.0, 388.0], [2450.0, 1441.0], [12.0, 7053.0], [14.0, 15064.0], [21.0, 3050.0], [45.0, 29.0], [55.0, 28.0], [59.0, 1036.5], [77.0, 15069.0], [99.0, 1038.0], [96.0, 7049.0], [107.0, 7050.0], [150.0, 7049.0], [153.0, 7053.5], [203.0, 33.5], [224.0, 1036.0], [238.0, 15066.0], [1.0, 15053.0], [307.0, 38.0], [367.0, 33.0], [382.0, 62.0], [435.0, 60029.0], [472.0, 33.0], [502.0, 47.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21037.0], [544.0, 21029.0], [586.0, 21052.5], [663.0, 21042.0], [640.0, 21053.0], [684.0, 21039.0], [725.0, 21028.0], [3.0, 21044.0], [803.0, 21059.0], [830.0, 21035.0], [4.0, 21027.5], [5.0, 21029.0], [6.0, 21030.0], [7.0, 21026.5], [8.0, 21033.0], [9.0, 21042.0], [10.0, 21041.0], [11.0, 21038.0], [12.0, 21028.0], [15.0, 21046.0], [16.0, 21038.0], [17.0, 21054.0], [18.0, 21036.0], [19.0, 21043.0], [21.0, 21043.0], [24.0, 21043.5], [25.0, 21036.0], [26.0, 21034.0], [40.0, 21042.0], [42.0, 21056.0], [45.0, 21045.0], [46.0, 21037.5], [50.0, 21037.0], [52.0, 21030.0], [55.0, 21030.0], [59.0, 21039.5], [61.0, 21053.0], [63.0, 21059.0], [66.0, 21043.0], [67.0, 21048.0], [68.0, 21048.0], [70.0, 21034.0], [73.0, 21038.0], [78.0, 21041.5], [79.0, 21040.5], [77.0, 21035.0], [76.0, 21041.0], [83.0, 21041.0], [80.0, 21047.0], [86.0, 21049.5], [89.0, 21040.0], [94.0, 21030.0], [99.0, 21039.0], [96.0, 21045.0], [107.0, 21046.0], [150.0, 21030.5], [153.0, 21043.0], [203.0, 21031.0], [224.0, 21043.0], [238.0, 21032.0], [240.0, 21039.0], [242.0, 21038.0], [244.0, 21050.0], [1.0, 21043.0], [307.0, 21038.0], [382.0, 21047.0], [435.0, 21034.0], [472.0, 21030.0], [502.0, 21044.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2450.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[567.0, 0.0], [544.0, 0.0], [601.0, 0.0], [586.0, 0.0], [663.0, 0.0], [640.0, 0.0], [684.0, 0.0], [727.0, 0.0], [730.0, 0.0], [725.0, 0.0], [762.0, 0.0], [791.0, 0.0], [3.0, 0.0], [823.0, 0.0], [813.0, 0.0], [818.0, 0.0], [815.0, 0.0], [803.0, 0.0], [830.0, 0.0], [854.0, 0.0], [838.0, 0.0], [870.0, 0.0], [896.0, 0.0], [911.0, 0.0], [932.0, 0.0], [939.0, 0.0], [1022.0, 0.0], [1070.0, 0.0], [1065.0, 0.0], [4.0, 0.0], [1134.0, 0.0], [1122.0, 0.0], [1095.0, 0.0], [1173.0, 0.0], [1210.0, 0.0], [1266.0, 0.0], [1277.0, 0.0], [1400.0, 0.0], [1520.0, 0.0], [2450.0, 0.0], [12.0, 0.0], [14.0, 0.0], [21.0, 0.0], [45.0, 0.0], [55.0, 0.0], [59.0, 0.0], [77.0, 0.0], [99.0, 0.0], [96.0, 0.0], [107.0, 0.0], [150.0, 0.0], [153.0, 0.0], [203.0, 0.0], [224.0, 0.0], [238.0, 0.0], [1.0, 0.0], [307.0, 0.0], [367.0, 0.0], [382.0, 0.0], [435.0, 0.0], [472.0, 0.0], [502.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [544.0, 0.0], [586.0, 0.0], [663.0, 0.0], [640.0, 0.0], [684.0, 0.0], [725.0, 0.0], [3.0, 0.0], [803.0, 0.0], [830.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [21.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [40.0, 0.0], [42.0, 0.0], [45.0, 0.0], [46.0, 0.0], [50.0, 0.0], [52.0, 0.0], [55.0, 0.0], [59.0, 0.0], [61.0, 0.0], [63.0, 0.0], [66.0, 0.0], [67.0, 0.0], [68.0, 0.0], [70.0, 0.0], [73.0, 0.0], [78.0, 0.0], [79.0, 0.0], [77.0, 0.0], [76.0, 0.0], [83.0, 0.0], [80.0, 0.0], [86.0, 0.0], [89.0, 0.0], [94.0, 0.0], [99.0, 0.0], [96.0, 0.0], [107.0, 0.0], [150.0, 0.0], [153.0, 0.0], [203.0, 0.0], [224.0, 0.0], [238.0, 0.0], [240.0, 0.0], [242.0, 0.0], [244.0, 0.0], [1.0, 0.0], [307.0, 0.0], [382.0, 0.0], [435.0, 0.0], [472.0, 0.0], [502.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2450.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 14.383333333333333, "minX": 1.61758074E12, "maxY": 631.8, "series": [{"data": [[1.6175808E12, 67.25], [1.61758086E12, 14.383333333333333], [1.61758074E12, 631.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758086E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.61758074E12, "maxY": 598.7333333333333, "series": [{"data": [[1.6175808E12, 48.3], [1.61758086E12, 6.533333333333333], [1.61758074E12, 598.7333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6175808E12, 36.766666666666666], [1.61758086E12, 22.7], [1.61758074E12, 0.4]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758086E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.61758074E12, "maxY": 582.0666666666667, "series": [{"data": [[1.61758074E12, 16.666666666666668]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.6175808E12, 16.666666666666668]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.6175808E12, 31.633333333333333], [1.61758086E12, 6.533333333333333], [1.61758074E12, 582.0666666666667]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.6175808E12, 36.766666666666666], [1.61758086E12, 22.7], [1.61758074E12, 0.4]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758086E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.61758074E12, "maxY": 598.7333333333333, "series": [{"data": [[1.6175808E12, 48.3], [1.61758086E12, 6.533333333333333], [1.61758074E12, 598.7333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6175808E12, 36.766666666666666], [1.61758086E12, 22.7], [1.61758074E12, 0.4]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758086E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

