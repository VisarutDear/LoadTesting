/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 60165.0, "series": [{"data": [[0.0, 60026.0], [0.1, 60026.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60026.0], [1.6, 60026.0], [1.7, 60026.0], [1.8, 60026.0], [1.9, 60026.0], [2.0, 60026.0], [2.1, 60026.0], [2.2, 60026.0], [2.3, 60026.0], [2.4, 60026.0], [2.5, 60026.0], [2.6, 60026.0], [2.7, 60026.0], [2.8, 60026.0], [2.9, 60026.0], [3.0, 60026.0], [3.1, 60026.0], [3.2, 60026.0], [3.3, 60026.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60027.0], [12.4, 60027.0], [12.5, 60027.0], [12.6, 60027.0], [12.7, 60027.0], [12.8, 60027.0], [12.9, 60027.0], [13.0, 60027.0], [13.1, 60027.0], [13.2, 60027.0], [13.3, 60027.0], [13.4, 60027.0], [13.5, 60027.0], [13.6, 60027.0], [13.7, 60027.0], [13.8, 60027.0], [13.9, 60027.0], [14.0, 60027.0], [14.1, 60027.0], [14.2, 60027.0], [14.3, 60027.0], [14.4, 60027.0], [14.5, 60027.0], [14.6, 60027.0], [14.7, 60027.0], [14.8, 60027.0], [14.9, 60027.0], [15.0, 60027.0], [15.1, 60027.0], [15.2, 60027.0], [15.3, 60027.0], [15.4, 60027.0], [15.5, 60027.0], [15.6, 60027.0], [15.7, 60027.0], [15.8, 60027.0], [15.9, 60027.0], [16.0, 60027.0], [16.1, 60027.0], [16.2, 60027.0], [16.3, 60027.0], [16.4, 60027.0], [16.5, 60027.0], [16.6, 60027.0], [16.7, 60027.0], [16.8, 60027.0], [16.9, 60027.0], [17.0, 60027.0], [17.1, 60027.0], [17.2, 60027.0], [17.3, 60027.0], [17.4, 60027.0], [17.5, 60027.0], [17.6, 60027.0], [17.7, 60027.0], [17.8, 60027.0], [17.9, 60027.0], [18.0, 60027.0], [18.1, 60027.0], [18.2, 60027.0], [18.3, 60027.0], [18.4, 60027.0], [18.5, 60027.0], [18.6, 60027.0], [18.7, 60027.0], [18.8, 60027.0], [18.9, 60027.0], [19.0, 60027.0], [19.1, 60027.0], [19.2, 60027.0], [19.3, 60027.0], [19.4, 60027.0], [19.5, 60027.0], [19.6, 60027.0], [19.7, 60027.0], [19.8, 60027.0], [19.9, 60027.0], [20.0, 60027.0], [20.1, 60027.0], [20.2, 60027.0], [20.3, 60027.0], [20.4, 60027.0], [20.5, 60027.0], [20.6, 60028.0], [20.7, 60028.0], [20.8, 60028.0], [20.9, 60028.0], [21.0, 60028.0], [21.1, 60028.0], [21.2, 60028.0], [21.3, 60028.0], [21.4, 60028.0], [21.5, 60028.0], [21.6, 60028.0], [21.7, 60028.0], [21.8, 60028.0], [21.9, 60028.0], [22.0, 60028.0], [22.1, 60028.0], [22.2, 60028.0], [22.3, 60028.0], [22.4, 60028.0], [22.5, 60028.0], [22.6, 60028.0], [22.7, 60028.0], [22.8, 60028.0], [22.9, 60028.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60028.0], [30.5, 60028.0], [30.6, 60028.0], [30.7, 60028.0], [30.8, 60028.0], [30.9, 60028.0], [31.0, 60028.0], [31.1, 60028.0], [31.2, 60028.0], [31.3, 60028.0], [31.4, 60028.0], [31.5, 60028.0], [31.6, 60028.0], [31.7, 60028.0], [31.8, 60028.0], [31.9, 60028.0], [32.0, 60028.0], [32.1, 60028.0], [32.2, 60028.0], [32.3, 60028.0], [32.4, 60028.0], [32.5, 60028.0], [32.6, 60028.0], [32.7, 60028.0], [32.8, 60028.0], [32.9, 60028.0], [33.0, 60028.0], [33.1, 60028.0], [33.2, 60028.0], [33.3, 60028.0], [33.4, 60028.0], [33.5, 60028.0], [33.6, 60028.0], [33.7, 60028.0], [33.8, 60028.0], [33.9, 60028.0], [34.0, 60028.0], [34.1, 60028.0], [34.2, 60028.0], [34.3, 60028.0], [34.4, 60028.0], [34.5, 60028.0], [34.6, 60028.0], [34.7, 60028.0], [34.8, 60028.0], [34.9, 60028.0], [35.0, 60028.0], [35.1, 60028.0], [35.2, 60028.0], [35.3, 60028.0], [35.4, 60028.0], [35.5, 60028.0], [35.6, 60028.0], [35.7, 60028.0], [35.8, 60028.0], [35.9, 60028.0], [36.0, 60028.0], [36.1, 60028.0], [36.2, 60028.0], [36.3, 60028.0], [36.4, 60028.0], [36.5, 60028.0], [36.6, 60028.0], [36.7, 60028.0], [36.8, 60028.0], [36.9, 60028.0], [37.0, 60028.0], [37.1, 60028.0], [37.2, 60028.0], [37.3, 60028.0], [37.4, 60028.0], [37.5, 60028.0], [37.6, 60028.0], [37.7, 60028.0], [37.8, 60028.0], [37.9, 60028.0], [38.0, 60028.0], [38.1, 60028.0], [38.2, 60028.0], [38.3, 60028.0], [38.4, 60028.0], [38.5, 60028.0], [38.6, 60028.0], [38.7, 60028.0], [38.8, 60028.0], [38.9, 60028.0], [39.0, 60028.0], [39.1, 60028.0], [39.2, 60028.0], [39.3, 60028.0], [39.4, 60028.0], [39.5, 60028.0], [39.6, 60028.0], [39.7, 60028.0], [39.8, 60028.0], [39.9, 60028.0], [40.0, 60028.0], [40.1, 60028.0], [40.2, 60028.0], [40.3, 60028.0], [40.4, 60028.0], [40.5, 60028.0], [40.6, 60028.0], [40.7, 60028.0], [40.8, 60028.0], [40.9, 60028.0], [41.0, 60028.0], [41.1, 60029.0], [41.2, 60029.0], [41.3, 60029.0], [41.4, 60029.0], [41.5, 60029.0], [41.6, 60029.0], [41.7, 60029.0], [41.8, 60029.0], [41.9, 60029.0], [42.0, 60029.0], [42.1, 60029.0], [42.2, 60029.0], [42.3, 60029.0], [42.4, 60029.0], [42.5, 60029.0], [42.6, 60029.0], [42.7, 60029.0], [42.8, 60029.0], [42.9, 60029.0], [43.0, 60029.0], [43.1, 60029.0], [43.2, 60029.0], [43.3, 60029.0], [43.4, 60029.0], [43.5, 60029.0], [43.6, 60029.0], [43.7, 60029.0], [43.8, 60029.0], [43.9, 60029.0], [44.0, 60029.0], [44.1, 60029.0], [44.2, 60029.0], [44.3, 60029.0], [44.4, 60029.0], [44.5, 60029.0], [44.6, 60029.0], [44.7, 60029.0], [44.8, 60029.0], [44.9, 60029.0], [45.0, 60029.0], [45.1, 60029.0], [45.2, 60029.0], [45.3, 60029.0], [45.4, 60029.0], [45.5, 60029.0], [45.6, 60029.0], [45.7, 60029.0], [45.8, 60029.0], [45.9, 60029.0], [46.0, 60029.0], [46.1, 60029.0], [46.2, 60029.0], [46.3, 60029.0], [46.4, 60029.0], [46.5, 60029.0], [46.6, 60029.0], [46.7, 60029.0], [46.8, 60029.0], [46.9, 60029.0], [47.0, 60029.0], [47.1, 60029.0], [47.2, 60029.0], [47.3, 60029.0], [47.4, 60029.0], [47.5, 60029.0], [47.6, 60029.0], [47.7, 60029.0], [47.8, 60029.0], [47.9, 60029.0], [48.0, 60029.0], [48.1, 60029.0], [48.2, 60029.0], [48.3, 60029.0], [48.4, 60029.0], [48.5, 60029.0], [48.6, 60029.0], [48.7, 60029.0], [48.8, 60029.0], [48.9, 60029.0], [49.0, 60029.0], [49.1, 60029.0], [49.2, 60029.0], [49.3, 60029.0], [49.4, 60029.0], [49.5, 60029.0], [49.6, 60029.0], [49.7, 60029.0], [49.8, 60029.0], [49.9, 60029.0], [50.0, 60029.0], [50.1, 60029.0], [50.2, 60029.0], [50.3, 60029.0], [50.4, 60029.0], [50.5, 60029.0], [50.6, 60029.0], [50.7, 60029.0], [50.8, 60029.0], [50.9, 60029.0], [51.0, 60029.0], [51.1, 60029.0], [51.2, 60029.0], [51.3, 60029.0], [51.4, 60029.0], [51.5, 60029.0], [51.6, 60029.0], [51.7, 60029.0], [51.8, 60029.0], [51.9, 60030.0], [52.0, 60030.0], [52.1, 60030.0], [52.2, 60030.0], [52.3, 60030.0], [52.4, 60030.0], [52.5, 60030.0], [52.6, 60030.0], [52.7, 60030.0], [52.8, 60030.0], [52.9, 60030.0], [53.0, 60030.0], [53.1, 60030.0], [53.2, 60030.0], [53.3, 60030.0], [53.4, 60030.0], [53.5, 60030.0], [53.6, 60030.0], [53.7, 60030.0], [53.8, 60030.0], [53.9, 60030.0], [54.0, 60030.0], [54.1, 60030.0], [54.2, 60030.0], [54.3, 60030.0], [54.4, 60030.0], [54.5, 60030.0], [54.6, 60030.0], [54.7, 60030.0], [54.8, 60030.0], [54.9, 60030.0], [55.0, 60030.0], [55.1, 60030.0], [55.2, 60030.0], [55.3, 60030.0], [55.4, 60030.0], [55.5, 60030.0], [55.6, 60030.0], [55.7, 60030.0], [55.8, 60030.0], [55.9, 60030.0], [56.0, 60030.0], [56.1, 60030.0], [56.2, 60030.0], [56.3, 60030.0], [56.4, 60030.0], [56.5, 60030.0], [56.6, 60030.0], [56.7, 60030.0], [56.8, 60030.0], [56.9, 60030.0], [57.0, 60030.0], [57.1, 60030.0], [57.2, 60030.0], [57.3, 60030.0], [57.4, 60030.0], [57.5, 60030.0], [57.6, 60030.0], [57.7, 60030.0], [57.8, 60030.0], [57.9, 60030.0], [58.0, 60030.0], [58.1, 60030.0], [58.2, 60030.0], [58.3, 60030.0], [58.4, 60030.0], [58.5, 60030.0], [58.6, 60031.0], [58.7, 60031.0], [58.8, 60031.0], [58.9, 60031.0], [59.0, 60031.0], [59.1, 60031.0], [59.2, 60031.0], [59.3, 60031.0], [59.4, 60031.0], [59.5, 60031.0], [59.6, 60031.0], [59.7, 60031.0], [59.8, 60031.0], [59.9, 60031.0], [60.0, 60031.0], [60.1, 60031.0], [60.2, 60031.0], [60.3, 60031.0], [60.4, 60031.0], [60.5, 60031.0], [60.6, 60031.0], [60.7, 60031.0], [60.8, 60031.0], [60.9, 60031.0], [61.0, 60031.0], [61.1, 60031.0], [61.2, 60031.0], [61.3, 60031.0], [61.4, 60031.0], [61.5, 60031.0], [61.6, 60031.0], [61.7, 60031.0], [61.8, 60031.0], [61.9, 60031.0], [62.0, 60031.0], [62.1, 60031.0], [62.2, 60031.0], [62.3, 60031.0], [62.4, 60031.0], [62.5, 60031.0], [62.6, 60031.0], [62.7, 60031.0], [62.8, 60031.0], [62.9, 60031.0], [63.0, 60031.0], [63.1, 60031.0], [63.2, 60031.0], [63.3, 60031.0], [63.4, 60032.0], [63.5, 60032.0], [63.6, 60032.0], [63.7, 60032.0], [63.8, 60032.0], [63.9, 60032.0], [64.0, 60032.0], [64.1, 60032.0], [64.2, 60032.0], [64.3, 60032.0], [64.4, 60032.0], [64.5, 60032.0], [64.6, 60032.0], [64.7, 60032.0], [64.8, 60032.0], [64.9, 60032.0], [65.0, 60032.0], [65.1, 60032.0], [65.2, 60032.0], [65.3, 60032.0], [65.4, 60032.0], [65.5, 60032.0], [65.6, 60032.0], [65.7, 60032.0], [65.8, 60032.0], [65.9, 60032.0], [66.0, 60032.0], [66.1, 60032.0], [66.2, 60032.0], [66.3, 60033.0], [66.4, 60033.0], [66.5, 60033.0], [66.6, 60033.0], [66.7, 60033.0], [66.8, 60033.0], [66.9, 60033.0], [67.0, 60033.0], [67.1, 60033.0], [67.2, 60033.0], [67.3, 60033.0], [67.4, 60033.0], [67.5, 60033.0], [67.6, 60033.0], [67.7, 60033.0], [67.8, 60033.0], [67.9, 60033.0], [68.0, 60033.0], [68.1, 60034.0], [68.2, 60034.0], [68.3, 60034.0], [68.4, 60034.0], [68.5, 60034.0], [68.6, 60034.0], [68.7, 60034.0], [68.8, 60034.0], [68.9, 60034.0], [69.0, 60034.0], [69.1, 60034.0], [69.2, 60034.0], [69.3, 60034.0], [69.4, 60034.0], [69.5, 60034.0], [69.6, 60034.0], [69.7, 60034.0], [69.8, 60034.0], [69.9, 60034.0], [70.0, 60035.0], [70.1, 60035.0], [70.2, 60035.0], [70.3, 60035.0], [70.4, 60035.0], [70.5, 60035.0], [70.6, 60035.0], [70.7, 60035.0], [70.8, 60035.0], [70.9, 60035.0], [71.0, 60035.0], [71.1, 60036.0], [71.2, 60036.0], [71.3, 60036.0], [71.4, 60036.0], [71.5, 60036.0], [71.6, 60036.0], [71.7, 60036.0], [71.8, 60036.0], [71.9, 60036.0], [72.0, 60036.0], [72.1, 60036.0], [72.2, 60036.0], [72.3, 60036.0], [72.4, 60036.0], [72.5, 60036.0], [72.6, 60036.0], [72.7, 60036.0], [72.8, 60037.0], [72.9, 60037.0], [73.0, 60037.0], [73.1, 60037.0], [73.2, 60037.0], [73.3, 60037.0], [73.4, 60037.0], [73.5, 60037.0], [73.6, 60037.0], [73.7, 60037.0], [73.8, 60037.0], [73.9, 60037.0], [74.0, 60037.0], [74.1, 60037.0], [74.2, 60038.0], [74.3, 60038.0], [74.4, 60038.0], [74.5, 60038.0], [74.6, 60038.0], [74.7, 60038.0], [74.8, 60038.0], [74.9, 60038.0], [75.0, 60038.0], [75.1, 60038.0], [75.2, 60039.0], [75.3, 60039.0], [75.4, 60039.0], [75.5, 60039.0], [75.6, 60039.0], [75.7, 60039.0], [75.8, 60039.0], [75.9, 60039.0], [76.0, 60039.0], [76.1, 60039.0], [76.2, 60039.0], [76.3, 60039.0], [76.4, 60039.0], [76.5, 60040.0], [76.6, 60040.0], [76.7, 60040.0], [76.8, 60040.0], [76.9, 60040.0], [77.0, 60040.0], [77.1, 60040.0], [77.2, 60040.0], [77.3, 60040.0], [77.4, 60040.0], [77.5, 60040.0], [77.6, 60040.0], [77.7, 60040.0], [77.8, 60041.0], [77.9, 60041.0], [78.0, 60041.0], [78.1, 60041.0], [78.2, 60041.0], [78.3, 60041.0], [78.4, 60041.0], [78.5, 60041.0], [78.6, 60041.0], [78.7, 60042.0], [78.8, 60042.0], [78.9, 60042.0], [79.0, 60042.0], [79.1, 60042.0], [79.2, 60043.0], [79.3, 60043.0], [79.4, 60043.0], [79.5, 60043.0], [79.6, 60043.0], [79.7, 60043.0], [79.8, 60043.0], [79.9, 60044.0], [80.0, 60044.0], [80.1, 60044.0], [80.2, 60044.0], [80.3, 60044.0], [80.4, 60044.0], [80.5, 60044.0], [80.6, 60044.0], [80.7, 60044.0], [80.8, 60044.0], [80.9, 60045.0], [81.0, 60045.0], [81.1, 60045.0], [81.2, 60045.0], [81.3, 60045.0], [81.4, 60046.0], [81.5, 60046.0], [81.6, 60046.0], [81.7, 60046.0], [81.8, 60046.0], [81.9, 60046.0], [82.0, 60046.0], [82.1, 60046.0], [82.2, 60046.0], [82.3, 60046.0], [82.4, 60046.0], [82.5, 60046.0], [82.6, 60046.0], [82.7, 60047.0], [82.8, 60047.0], [82.9, 60047.0], [83.0, 60047.0], [83.1, 60047.0], [83.2, 60047.0], [83.3, 60047.0], [83.4, 60047.0], [83.5, 60047.0], [83.6, 60048.0], [83.7, 60048.0], [83.8, 60048.0], [83.9, 60048.0], [84.0, 60048.0], [84.1, 60048.0], [84.2, 60048.0], [84.3, 60048.0], [84.4, 60049.0], [84.5, 60049.0], [84.6, 60049.0], [84.7, 60049.0], [84.8, 60049.0], [84.9, 60049.0], [85.0, 60049.0], [85.1, 60049.0], [85.2, 60049.0], [85.3, 60049.0], [85.4, 60049.0], [85.5, 60049.0], [85.6, 60050.0], [85.7, 60050.0], [85.8, 60051.0], [85.9, 60051.0], [86.0, 60051.0], [86.1, 60051.0], [86.2, 60051.0], [86.3, 60051.0], [86.4, 60051.0], [86.5, 60052.0], [86.6, 60052.0], [86.7, 60052.0], [86.8, 60052.0], [86.9, 60052.0], [87.0, 60052.0], [87.1, 60053.0], [87.2, 60053.0], [87.3, 60053.0], [87.4, 60053.0], [87.5, 60053.0], [87.6, 60053.0], [87.7, 60053.0], [87.8, 60053.0], [87.9, 60054.0], [88.0, 60054.0], [88.1, 60054.0], [88.2, 60054.0], [88.3, 60054.0], [88.4, 60055.0], [88.5, 60055.0], [88.6, 60055.0], [88.7, 60056.0], [88.8, 60056.0], [88.9, 60056.0], [89.0, 60056.0], [89.1, 60056.0], [89.2, 60056.0], [89.3, 60056.0], [89.4, 60056.0], [89.5, 60056.0], [89.6, 60056.0], [89.7, 60056.0], [89.8, 60056.0], [89.9, 60057.0], [90.0, 60057.0], [90.1, 60057.0], [90.2, 60057.0], [90.3, 60057.0], [90.4, 60058.0], [90.5, 60058.0], [90.6, 60058.0], [90.7, 60058.0], [90.8, 60058.0], [90.9, 60058.0], [91.0, 60058.0], [91.1, 60058.0], [91.2, 60058.0], [91.3, 60058.0], [91.4, 60058.0], [91.5, 60058.0], [91.6, 60058.0], [91.7, 60059.0], [91.8, 60059.0], [91.9, 60059.0], [92.0, 60059.0], [92.1, 60060.0], [92.2, 60060.0], [92.3, 60060.0], [92.4, 60060.0], [92.5, 60061.0], [92.6, 60061.0], [92.7, 60061.0], [92.8, 60062.0], [92.9, 60062.0], [93.0, 60063.0], [93.1, 60063.0], [93.2, 60063.0], [93.3, 60064.0], [93.4, 60064.0], [93.5, 60064.0], [93.6, 60064.0], [93.7, 60066.0], [93.8, 60066.0], [93.9, 60077.0], [94.0, 60084.0], [94.1, 60084.0], [94.2, 60087.0], [94.3, 60087.0], [94.4, 60092.0], [94.5, 60092.0], [94.6, 60094.0], [94.7, 60095.0], [94.8, 60095.0], [94.9, 60095.0], [95.0, 60096.0], [95.1, 60097.0], [95.2, 60097.0], [95.3, 60097.0], [95.4, 60097.0], [95.5, 60097.0], [95.6, 60098.0], [95.7, 60098.0], [95.8, 60098.0], [95.9, 60104.0], [96.0, 60104.0], [96.1, 60104.0], [96.2, 60104.0], [96.3, 60104.0], [96.4, 60107.0], [96.5, 60109.0], [96.6, 60112.0], [96.7, 60112.0], [96.8, 60113.0], [96.9, 60115.0], [97.0, 60115.0], [97.1, 60122.0], [97.2, 60123.0], [97.3, 60123.0], [97.4, 60125.0], [97.5, 60126.0], [97.6, 60127.0], [97.7, 60127.0], [97.8, 60128.0], [97.9, 60130.0], [98.0, 60131.0], [98.1, 60131.0], [98.2, 60132.0], [98.3, 60133.0], [98.4, 60135.0], [98.5, 60136.0], [98.6, 60138.0], [98.7, 60138.0], [98.8, 60139.0], [98.9, 60140.0], [99.0, 60143.0], [99.1, 60143.0], [99.2, 60144.0], [99.3, 60150.0], [99.4, 60150.0], [99.5, 60151.0], [99.6, 60153.0], [99.7, 60155.0], [99.8, 60158.0], [99.9, 60165.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 26.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 28.0], [0.8, 28.0], [0.9, 28.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 28.0], [1.4, 28.0], [1.5, 28.0], [1.6, 29.0], [1.7, 29.0], [1.8, 29.0], [1.9, 29.0], [2.0, 29.0], [2.1, 29.0], [2.2, 30.0], [2.3, 30.0], [2.4, 30.0], [2.5, 31.0], [2.6, 31.0], [2.7, 32.0], [2.8, 32.0], [2.9, 33.0], [3.0, 35.0], [3.1, 36.0], [3.2, 39.0], [3.3, 41.0], [3.4, 43.0], [3.5, 48.0], [3.6, 50.0], [3.7, 52.0], [3.8, 55.0], [3.9, 58.0], [4.0, 61.0], [4.1, 64.0], [4.2, 68.0], [4.3, 75.0], [4.4, 76.0], [4.5, 84.0], [4.6, 89.0], [4.7, 97.0], [4.8, 102.0], [4.9, 105.0], [5.0, 115.0], [5.1, 119.0], [5.2, 123.0], [5.3, 127.0], [5.4, 131.0], [5.5, 135.0], [5.6, 138.0], [5.7, 141.0], [5.8, 144.0], [5.9, 146.0], [6.0, 148.0], [6.1, 150.0], [6.2, 152.0], [6.3, 154.0], [6.4, 156.0], [6.5, 158.0], [6.6, 159.0], [6.7, 161.0], [6.8, 163.0], [6.9, 165.0], [7.0, 167.0], [7.1, 170.0], [7.2, 172.0], [7.3, 174.0], [7.4, 176.0], [7.5, 179.0], [7.6, 182.0], [7.7, 185.0], [7.8, 188.0], [7.9, 193.0], [8.0, 196.0], [8.1, 198.0], [8.2, 201.0], [8.3, 202.0], [8.4, 204.0], [8.5, 207.0], [8.6, 209.0], [8.7, 213.0], [8.8, 217.0], [8.9, 220.0], [9.0, 223.0], [9.1, 226.0], [9.2, 228.0], [9.3, 230.0], [9.4, 232.0], [9.5, 234.0], [9.6, 236.0], [9.7, 238.0], [9.8, 240.0], [9.9, 242.0], [10.0, 245.0], [10.1, 250.0], [10.2, 255.0], [10.3, 277.0], [10.4, 282.0], [10.5, 292.0], [10.6, 295.0], [10.7, 297.0], [10.8, 301.0], [10.9, 305.0], [11.0, 307.0], [11.1, 309.0], [11.2, 310.0], [11.3, 311.0], [11.4, 312.0], [11.5, 313.0], [11.6, 314.0], [11.7, 316.0], [11.8, 317.0], [11.9, 319.0], [12.0, 320.0], [12.1, 321.0], [12.2, 323.0], [12.3, 324.0], [12.4, 325.0], [12.5, 326.0], [12.6, 327.0], [12.7, 328.0], [12.8, 329.0], [12.9, 329.0], [13.0, 330.0], [13.1, 331.0], [13.2, 333.0], [13.3, 334.0], [13.4, 336.0], [13.5, 337.0], [13.6, 339.0], [13.7, 343.0], [13.8, 347.0], [13.9, 351.0], [14.0, 356.0], [14.1, 361.0], [14.2, 366.0], [14.3, 369.0], [14.4, 375.0], [14.5, 382.0], [14.6, 385.0], [14.7, 386.0], [14.8, 388.0], [14.9, 390.0], [15.0, 392.0], [15.1, 394.0], [15.2, 397.0], [15.3, 402.0], [15.4, 404.0], [15.5, 408.0], [15.6, 412.0], [15.7, 413.0], [15.8, 415.0], [15.9, 417.0], [16.0, 419.0], [16.1, 425.0], [16.2, 429.0], [16.3, 432.0], [16.4, 436.0], [16.5, 449.0], [16.6, 458.0], [16.7, 466.0], [16.8, 471.0], [16.9, 478.0], [17.0, 481.0], [17.1, 484.0], [17.2, 486.0], [17.3, 489.0], [17.4, 491.0], [17.5, 493.0], [17.6, 494.0], [17.7, 497.0], [17.8, 500.0], [17.9, 501.0], [18.0, 503.0], [18.1, 503.0], [18.2, 505.0], [18.3, 507.0], [18.4, 507.0], [18.5, 508.0], [18.6, 509.0], [18.7, 510.0], [18.8, 511.0], [18.9, 512.0], [19.0, 513.0], [19.1, 514.0], [19.2, 515.0], [19.3, 515.0], [19.4, 516.0], [19.5, 517.0], [19.6, 518.0], [19.7, 518.0], [19.8, 519.0], [19.9, 521.0], [20.0, 522.0], [20.1, 523.0], [20.2, 523.0], [20.3, 524.0], [20.4, 526.0], [20.5, 526.0], [20.6, 527.0], [20.7, 528.0], [20.8, 529.0], [20.9, 530.0], [21.0, 530.0], [21.1, 532.0], [21.2, 532.0], [21.3, 533.0], [21.4, 534.0], [21.5, 534.0], [21.6, 535.0], [21.7, 535.0], [21.8, 536.0], [21.9, 537.0], [22.0, 537.0], [22.1, 538.0], [22.2, 538.0], [22.3, 539.0], [22.4, 539.0], [22.5, 540.0], [22.6, 540.0], [22.7, 541.0], [22.8, 542.0], [22.9, 542.0], [23.0, 543.0], [23.1, 543.0], [23.2, 543.0], [23.3, 544.0], [23.4, 544.0], [23.5, 545.0], [23.6, 545.0], [23.7, 546.0], [23.8, 546.0], [23.9, 547.0], [24.0, 547.0], [24.1, 548.0], [24.2, 548.0], [24.3, 549.0], [24.4, 550.0], [24.5, 551.0], [24.6, 551.0], [24.7, 552.0], [24.8, 552.0], [24.9, 553.0], [25.0, 554.0], [25.1, 554.0], [25.2, 555.0], [25.3, 556.0], [25.4, 556.0], [25.5, 557.0], [25.6, 557.0], [25.7, 558.0], [25.8, 559.0], [25.9, 559.0], [26.0, 560.0], [26.1, 561.0], [26.2, 562.0], [26.3, 562.0], [26.4, 563.0], [26.5, 564.0], [26.6, 564.0], [26.7, 565.0], [26.8, 565.0], [26.9, 566.0], [27.0, 567.0], [27.1, 568.0], [27.2, 569.0], [27.3, 569.0], [27.4, 571.0], [27.5, 571.0], [27.6, 572.0], [27.7, 573.0], [27.8, 574.0], [27.9, 575.0], [28.0, 575.0], [28.1, 576.0], [28.2, 577.0], [28.3, 577.0], [28.4, 578.0], [28.5, 579.0], [28.6, 579.0], [28.7, 580.0], [28.8, 581.0], [28.9, 582.0], [29.0, 583.0], [29.1, 584.0], [29.2, 585.0], [29.3, 586.0], [29.4, 586.0], [29.5, 587.0], [29.6, 587.0], [29.7, 588.0], [29.8, 588.0], [29.9, 589.0], [30.0, 589.0], [30.1, 590.0], [30.2, 590.0], [30.3, 590.0], [30.4, 591.0], [30.5, 591.0], [30.6, 592.0], [30.7, 592.0], [30.8, 592.0], [30.9, 593.0], [31.0, 593.0], [31.1, 594.0], [31.2, 594.0], [31.3, 595.0], [31.4, 595.0], [31.5, 596.0], [31.6, 596.0], [31.7, 596.0], [31.8, 597.0], [31.9, 597.0], [32.0, 598.0], [32.1, 598.0], [32.2, 599.0], [32.3, 599.0], [32.4, 599.0], [32.5, 600.0], [32.6, 600.0], [32.7, 601.0], [32.8, 601.0], [32.9, 602.0], [33.0, 602.0], [33.1, 603.0], [33.2, 603.0], [33.3, 603.0], [33.4, 604.0], [33.5, 604.0], [33.6, 605.0], [33.7, 605.0], [33.8, 606.0], [33.9, 606.0], [34.0, 606.0], [34.1, 607.0], [34.2, 607.0], [34.3, 607.0], [34.4, 608.0], [34.5, 608.0], [34.6, 608.0], [34.7, 609.0], [34.8, 609.0], [34.9, 609.0], [35.0, 610.0], [35.1, 610.0], [35.2, 610.0], [35.3, 610.0], [35.4, 611.0], [35.5, 611.0], [35.6, 611.0], [35.7, 612.0], [35.8, 612.0], [35.9, 612.0], [36.0, 612.0], [36.1, 613.0], [36.2, 613.0], [36.3, 613.0], [36.4, 614.0], [36.5, 614.0], [36.6, 614.0], [36.7, 615.0], [36.8, 615.0], [36.9, 615.0], [37.0, 615.0], [37.1, 616.0], [37.2, 616.0], [37.3, 616.0], [37.4, 616.0], [37.5, 617.0], [37.6, 617.0], [37.7, 617.0], [37.8, 617.0], [37.9, 618.0], [38.0, 618.0], [38.1, 618.0], [38.2, 619.0], [38.3, 619.0], [38.4, 619.0], [38.5, 619.0], [38.6, 620.0], [38.7, 620.0], [38.8, 620.0], [38.9, 621.0], [39.0, 621.0], [39.1, 621.0], [39.2, 622.0], [39.3, 622.0], [39.4, 622.0], [39.5, 622.0], [39.6, 623.0], [39.7, 623.0], [39.8, 623.0], [39.9, 624.0], [40.0, 624.0], [40.1, 625.0], [40.2, 625.0], [40.3, 625.0], [40.4, 626.0], [40.5, 626.0], [40.6, 627.0], [40.7, 627.0], [40.8, 627.0], [40.9, 628.0], [41.0, 628.0], [41.1, 628.0], [41.2, 629.0], [41.3, 629.0], [41.4, 629.0], [41.5, 630.0], [41.6, 630.0], [41.7, 630.0], [41.8, 631.0], [41.9, 631.0], [42.0, 631.0], [42.1, 631.0], [42.2, 632.0], [42.3, 632.0], [42.4, 633.0], [42.5, 633.0], [42.6, 633.0], [42.7, 633.0], [42.8, 634.0], [42.9, 634.0], [43.0, 634.0], [43.1, 635.0], [43.2, 635.0], [43.3, 636.0], [43.4, 636.0], [43.5, 636.0], [43.6, 637.0], [43.7, 637.0], [43.8, 637.0], [43.9, 637.0], [44.0, 638.0], [44.1, 638.0], [44.2, 638.0], [44.3, 639.0], [44.4, 639.0], [44.5, 639.0], [44.6, 640.0], [44.7, 640.0], [44.8, 640.0], [44.9, 641.0], [45.0, 641.0], [45.1, 641.0], [45.2, 642.0], [45.3, 642.0], [45.4, 643.0], [45.5, 643.0], [45.6, 644.0], [45.7, 644.0], [45.8, 645.0], [45.9, 645.0], [46.0, 645.0], [46.1, 646.0], [46.2, 646.0], [46.3, 647.0], [46.4, 647.0], [46.5, 648.0], [46.6, 649.0], [46.7, 649.0], [46.8, 650.0], [46.9, 651.0], [47.0, 651.0], [47.1, 652.0], [47.2, 652.0], [47.3, 653.0], [47.4, 653.0], [47.5, 654.0], [47.6, 655.0], [47.7, 655.0], [47.8, 656.0], [47.9, 657.0], [48.0, 657.0], [48.1, 658.0], [48.2, 658.0], [48.3, 659.0], [48.4, 660.0], [48.5, 661.0], [48.6, 661.0], [48.7, 662.0], [48.8, 663.0], [48.9, 664.0], [49.0, 664.0], [49.1, 665.0], [49.2, 666.0], [49.3, 667.0], [49.4, 667.0], [49.5, 668.0], [49.6, 669.0], [49.7, 669.0], [49.8, 670.0], [49.9, 671.0], [50.0, 672.0], [50.1, 672.0], [50.2, 673.0], [50.3, 674.0], [50.4, 674.0], [50.5, 675.0], [50.6, 676.0], [50.7, 676.0], [50.8, 677.0], [50.9, 677.0], [51.0, 678.0], [51.1, 678.0], [51.2, 679.0], [51.3, 679.0], [51.4, 679.0], [51.5, 680.0], [51.6, 680.0], [51.7, 681.0], [51.8, 681.0], [51.9, 682.0], [52.0, 682.0], [52.1, 683.0], [52.2, 683.0], [52.3, 684.0], [52.4, 684.0], [52.5, 684.0], [52.6, 685.0], [52.7, 686.0], [52.8, 686.0], [52.9, 687.0], [53.0, 687.0], [53.1, 688.0], [53.2, 689.0], [53.3, 689.0], [53.4, 689.0], [53.5, 690.0], [53.6, 691.0], [53.7, 691.0], [53.8, 692.0], [53.9, 692.0], [54.0, 693.0], [54.1, 693.0], [54.2, 694.0], [54.3, 694.0], [54.4, 695.0], [54.5, 695.0], [54.6, 696.0], [54.7, 696.0], [54.8, 697.0], [54.9, 697.0], [55.0, 697.0], [55.1, 698.0], [55.2, 698.0], [55.3, 699.0], [55.4, 699.0], [55.5, 700.0], [55.6, 700.0], [55.7, 701.0], [55.8, 701.0], [55.9, 702.0], [56.0, 702.0], [56.1, 703.0], [56.2, 703.0], [56.3, 704.0], [56.4, 704.0], [56.5, 705.0], [56.6, 705.0], [56.7, 706.0], [56.8, 706.0], [56.9, 707.0], [57.0, 707.0], [57.1, 708.0], [57.2, 708.0], [57.3, 709.0], [57.4, 710.0], [57.5, 711.0], [57.6, 711.0], [57.7, 712.0], [57.8, 713.0], [57.9, 713.0], [58.0, 714.0], [58.1, 714.0], [58.2, 715.0], [58.3, 716.0], [58.4, 717.0], [58.5, 717.0], [58.6, 717.0], [58.7, 718.0], [58.8, 718.0], [58.9, 719.0], [59.0, 719.0], [59.1, 720.0], [59.2, 721.0], [59.3, 721.0], [59.4, 722.0], [59.5, 722.0], [59.6, 723.0], [59.7, 724.0], [59.8, 725.0], [59.9, 725.0], [60.0, 726.0], [60.1, 726.0], [60.2, 727.0], [60.3, 728.0], [60.4, 730.0], [60.5, 731.0], [60.6, 732.0], [60.7, 734.0], [60.8, 735.0], [60.9, 737.0], [61.0, 738.0], [61.1, 739.0], [61.2, 740.0], [61.3, 741.0], [61.4, 743.0], [61.5, 744.0], [61.6, 747.0], [61.7, 749.0], [61.8, 752.0], [61.9, 753.0], [62.0, 754.0], [62.1, 757.0], [62.2, 759.0], [62.3, 760.0], [62.4, 761.0], [62.5, 764.0], [62.6, 766.0], [62.7, 768.0], [62.8, 769.0], [62.9, 770.0], [63.0, 772.0], [63.1, 775.0], [63.2, 778.0], [63.3, 782.0], [63.4, 786.0], [63.5, 789.0], [63.6, 790.0], [63.7, 792.0], [63.8, 793.0], [63.9, 794.0], [64.0, 796.0], [64.1, 798.0], [64.2, 799.0], [64.3, 802.0], [64.4, 803.0], [64.5, 805.0], [64.6, 806.0], [64.7, 807.0], [64.8, 808.0], [64.9, 808.0], [65.0, 810.0], [65.1, 811.0], [65.2, 811.0], [65.3, 812.0], [65.4, 813.0], [65.5, 814.0], [65.6, 815.0], [65.7, 816.0], [65.8, 818.0], [65.9, 820.0], [66.0, 823.0], [66.1, 826.0], [66.2, 828.0], [66.3, 830.0], [66.4, 836.0], [66.5, 843.0], [66.6, 848.0], [66.7, 854.0], [66.8, 861.0], [66.9, 865.0], [67.0, 870.0], [67.1, 872.0], [67.2, 874.0], [67.3, 877.0], [67.4, 879.0], [67.5, 881.0], [67.6, 893.0], [67.7, 898.0], [67.8, 1029.0], [67.9, 1030.0], [68.0, 1031.0], [68.1, 1032.0], [68.2, 1032.0], [68.3, 1033.0], [68.4, 1034.0], [68.5, 1035.0], [68.6, 1036.0], [68.7, 1037.0], [68.8, 1037.0], [68.9, 1038.0], [69.0, 1039.0], [69.1, 1039.0], [69.2, 1040.0], [69.3, 1041.0], [69.4, 1042.0], [69.5, 1043.0], [69.6, 1044.0], [69.7, 1046.0], [69.8, 1048.0], [69.9, 1055.0], [70.0, 1062.0], [70.1, 1073.0], [70.2, 1114.0], [70.3, 1141.0], [70.4, 1154.0], [70.5, 1165.0], [70.6, 1180.0], [70.7, 1200.0], [70.8, 1211.0], [70.9, 1219.0], [71.0, 1231.0], [71.1, 1243.0], [71.2, 1256.0], [71.3, 1286.0], [71.4, 1305.0], [71.5, 1312.0], [71.6, 1320.0], [71.7, 1325.0], [71.8, 1330.0], [71.9, 1336.0], [72.0, 1343.0], [72.1, 1354.0], [72.2, 1372.0], [72.3, 1392.0], [72.4, 1399.0], [72.5, 1407.0], [72.6, 1415.0], [72.7, 1425.0], [72.8, 1447.0], [72.9, 1481.0], [73.0, 1492.0], [73.1, 1499.0], [73.2, 1508.0], [73.3, 1514.0], [73.4, 1521.0], [73.5, 1526.0], [73.6, 1531.0], [73.7, 1534.0], [73.8, 1539.0], [73.9, 1542.0], [74.0, 1546.0], [74.1, 1549.0], [74.2, 1551.0], [74.3, 1555.0], [74.4, 1558.0], [74.5, 1560.0], [74.6, 1563.0], [74.7, 1567.0], [74.8, 1572.0], [74.9, 1575.0], [75.0, 1578.0], [75.1, 1581.0], [75.2, 1584.0], [75.3, 1586.0], [75.4, 1590.0], [75.5, 1592.0], [75.6, 1594.0], [75.7, 1596.0], [75.8, 1597.0], [75.9, 1599.0], [76.0, 1601.0], [76.1, 1603.0], [76.2, 1604.0], [76.3, 1605.0], [76.4, 1607.0], [76.5, 1608.0], [76.6, 1609.0], [76.7, 1610.0], [76.8, 1612.0], [76.9, 1613.0], [77.0, 1614.0], [77.1, 1616.0], [77.2, 1617.0], [77.3, 1618.0], [77.4, 1619.0], [77.5, 1621.0], [77.6, 1622.0], [77.7, 1624.0], [77.8, 1625.0], [77.9, 1626.0], [78.0, 1628.0], [78.1, 1629.0], [78.2, 1631.0], [78.3, 1632.0], [78.4, 1634.0], [78.5, 1635.0], [78.6, 1636.0], [78.7, 1638.0], [78.8, 1639.0], [78.9, 1640.0], [79.0, 1642.0], [79.1, 1644.0], [79.2, 1645.0], [79.3, 1648.0], [79.4, 1649.0], [79.5, 1652.0], [79.6, 1654.0], [79.7, 1655.0], [79.8, 1657.0], [79.9, 1659.0], [80.0, 1661.0], [80.1, 1664.0], [80.2, 1666.0], [80.3, 1669.0], [80.4, 1673.0], [80.5, 1676.0], [80.6, 1679.0], [80.7, 1681.0], [80.8, 1685.0], [80.9, 1686.0], [81.0, 1689.0], [81.1, 1691.0], [81.2, 1693.0], [81.3, 1695.0], [81.4, 1698.0], [81.5, 1700.0], [81.6, 1702.0], [81.7, 1705.0], [81.8, 1709.0], [81.9, 1712.0], [82.0, 1715.0], [82.1, 1719.0], [82.2, 1723.0], [82.3, 1728.0], [82.4, 1734.0], [82.5, 1761.0], [82.6, 1766.0], [82.7, 1770.0], [82.8, 1777.0], [82.9, 1787.0], [83.0, 1799.0], [83.1, 1808.0], [83.2, 1812.0], [83.3, 1827.0], [83.4, 1856.0], [83.5, 1885.0], [83.6, 2574.0], [83.7, 2661.0], [83.8, 3031.0], [83.9, 3034.0], [84.0, 3036.0], [84.1, 3039.0], [84.2, 3042.0], [84.3, 3044.0], [84.4, 3045.0], [84.5, 3048.0], [84.6, 3049.0], [84.7, 3052.0], [84.8, 3055.0], [84.9, 3064.0], [85.0, 3080.0], [85.1, 3131.0], [85.2, 3168.0], [85.3, 3209.0], [85.4, 3243.0], [85.5, 3287.0], [85.6, 3311.0], [85.7, 3331.0], [85.8, 3347.0], [85.9, 3373.0], [86.0, 3408.0], [86.1, 3428.0], [86.2, 3461.0], [86.3, 3497.0], [86.4, 3533.0], [86.5, 3549.0], [86.6, 3565.0], [86.7, 3576.0], [86.8, 3592.0], [86.9, 3609.0], [87.0, 3617.0], [87.1, 3626.0], [87.2, 3630.0], [87.3, 3636.0], [87.4, 3646.0], [87.5, 3653.0], [87.6, 3662.0], [87.7, 3677.0], [87.8, 3690.0], [87.9, 3705.0], [88.0, 3720.0], [88.1, 4133.0], [88.2, 7043.0], [88.3, 7048.0], [88.4, 7050.0], [88.5, 7052.0], [88.6, 7055.0], [88.7, 7057.0], [88.8, 7060.0], [88.9, 7063.0], [89.0, 7065.0], [89.1, 7070.0], [89.2, 7089.0], [89.3, 7134.0], [89.4, 7160.0], [89.5, 7198.0], [89.6, 7256.0], [89.7, 7330.0], [89.8, 7367.0], [89.9, 7438.0], [90.0, 7608.0], [90.1, 7641.0], [90.2, 7687.0], [90.3, 7737.0], [90.4, 15047.0], [90.5, 15053.0], [90.6, 15055.0], [90.7, 15057.0], [90.8, 15059.0], [90.9, 15062.0], [91.0, 15067.0], [91.1, 15072.0], [91.2, 15078.0], [91.3, 15149.0], [91.4, 15310.0], [91.5, 15396.0], [91.6, 21016.0], [91.7, 21020.0], [91.8, 21023.0], [91.9, 21025.0], [92.0, 21026.0], [92.1, 21028.0], [92.2, 21028.0], [92.3, 21029.0], [92.4, 21029.0], [92.5, 21030.0], [92.6, 21031.0], [92.7, 21031.0], [92.8, 21032.0], [92.9, 21032.0], [93.0, 21032.0], [93.1, 21033.0], [93.2, 21033.0], [93.3, 21033.0], [93.4, 21034.0], [93.5, 21034.0], [93.6, 21034.0], [93.7, 21035.0], [93.8, 21035.0], [93.9, 21035.0], [94.0, 21036.0], [94.1, 21036.0], [94.2, 21036.0], [94.3, 21036.0], [94.4, 21037.0], [94.5, 21037.0], [94.6, 21037.0], [94.7, 21038.0], [94.8, 21038.0], [94.9, 21038.0], [95.0, 21039.0], [95.1, 21039.0], [95.2, 21039.0], [95.3, 21039.0], [95.4, 21040.0], [95.5, 21040.0], [95.6, 21040.0], [95.7, 21040.0], [95.8, 21041.0], [95.9, 21041.0], [96.0, 21041.0], [96.1, 21042.0], [96.2, 21042.0], [96.3, 21042.0], [96.4, 21043.0], [96.5, 21043.0], [96.6, 21043.0], [96.7, 21044.0], [96.8, 21044.0], [96.9, 21044.0], [97.0, 21045.0], [97.1, 21045.0], [97.2, 21045.0], [97.3, 21046.0], [97.4, 21046.0], [97.5, 21047.0], [97.6, 21047.0], [97.7, 21047.0], [97.8, 21048.0], [97.9, 21048.0], [98.0, 21048.0], [98.1, 21049.0], [98.2, 21049.0], [98.3, 21050.0], [98.4, 21050.0], [98.5, 21051.0], [98.6, 21051.0], [98.7, 21052.0], [98.8, 21052.0], [98.9, 21052.0], [99.0, 21053.0], [99.1, 21053.0], [99.2, 21054.0], [99.3, 21054.0], [99.4, 21055.0], [99.5, 21056.0], [99.6, 21057.0], [99.7, 21059.0], [99.8, 21060.0], [99.9, 21063.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12066.0], [0.1, 12069.0], [0.2, 12070.0], [0.3, 12070.0], [0.4, 12072.0], [0.5, 12076.0], [0.6, 12077.0], [0.7, 12081.0], [0.8, 12088.0], [0.9, 12089.0], [1.0, 12089.0], [1.1, 12090.0], [1.2, 12094.0], [1.3, 12094.0], [1.4, 12094.0], [1.5, 12094.0], [1.6, 12097.0], [1.7, 12097.0], [1.8, 12098.0], [1.9, 12098.0], [2.0, 12098.0], [2.1, 12099.0], [2.2, 12099.0], [2.3, 12099.0], [2.4, 12100.0], [2.5, 12101.0], [2.6, 12102.0], [2.7, 12102.0], [2.8, 12102.0], [2.9, 12103.0], [3.0, 12103.0], [3.1, 12103.0], [3.2, 12105.0], [3.3, 12105.0], [3.4, 12108.0], [3.5, 12108.0], [3.6, 12110.0], [3.7, 12110.0], [3.8, 12111.0], [3.9, 12113.0], [4.0, 12114.0], [4.1, 12114.0], [4.2, 12119.0], [4.3, 12120.0], [4.4, 12133.0], [4.5, 12133.0], [4.6, 12144.0], [4.7, 12146.0], [4.8, 12148.0], [4.9, 12148.0], [5.0, 12150.0], [5.1, 12152.0], [5.2, 12152.0], [5.3, 12153.0], [5.4, 12153.0], [5.5, 12154.0], [5.6, 12154.0], [5.7, 12155.0], [5.8, 12159.0], [5.9, 12161.0], [6.0, 12162.0], [6.1, 12166.0], [6.2, 12167.0], [6.3, 12168.0], [6.4, 12170.0], [6.5, 12172.0], [6.6, 12177.0], [6.7, 12180.0], [6.8, 12180.0], [6.9, 12180.0], [7.0, 12181.0], [7.1, 12181.0], [7.2, 12183.0], [7.3, 12183.0], [7.4, 12184.0], [7.5, 12187.0], [7.6, 12187.0], [7.7, 12189.0], [7.8, 12190.0], [7.9, 12190.0], [8.0, 12190.0], [8.1, 12190.0], [8.2, 12191.0], [8.3, 12191.0], [8.4, 12191.0], [8.5, 12191.0], [8.6, 12192.0], [8.7, 12192.0], [8.8, 12192.0], [8.9, 12194.0], [9.0, 12194.0], [9.1, 12196.0], [9.2, 12196.0], [9.3, 12196.0], [9.4, 12197.0], [9.5, 12198.0], [9.6, 12199.0], [9.7, 12199.0], [9.8, 12201.0], [9.9, 12202.0], [10.0, 12202.0], [10.1, 12204.0], [10.2, 12204.0], [10.3, 12206.0], [10.4, 12208.0], [10.5, 12213.0], [10.6, 12218.0], [10.7, 12219.0], [10.8, 12220.0], [10.9, 12221.0], [11.0, 12221.0], [11.1, 12221.0], [11.2, 12221.0], [11.3, 12223.0], [11.4, 12223.0], [11.5, 12223.0], [11.6, 12223.0], [11.7, 12224.0], [11.8, 12226.0], [11.9, 12226.0], [12.0, 12227.0], [12.1, 12227.0], [12.2, 12228.0], [12.3, 12229.0], [12.4, 12229.0], [12.5, 12229.0], [12.6, 12231.0], [12.7, 12231.0], [12.8, 12231.0], [12.9, 12232.0], [13.0, 12232.0], [13.1, 12232.0], [13.2, 12232.0], [13.3, 12234.0], [13.4, 12235.0], [13.5, 12235.0], [13.6, 12235.0], [13.7, 12235.0], [13.8, 12237.0], [13.9, 12238.0], [14.0, 12239.0], [14.1, 12239.0], [14.2, 12239.0], [14.3, 12239.0], [14.4, 12240.0], [14.5, 12241.0], [14.6, 12241.0], [14.7, 12242.0], [14.8, 12242.0], [14.9, 12243.0], [15.0, 12243.0], [15.1, 12243.0], [15.2, 12244.0], [15.3, 12244.0], [15.4, 12244.0], [15.5, 12244.0], [15.6, 12244.0], [15.7, 12245.0], [15.8, 12245.0], [15.9, 12245.0], [16.0, 12246.0], [16.1, 12246.0], [16.2, 12246.0], [16.3, 12247.0], [16.4, 12247.0], [16.5, 12248.0], [16.6, 12248.0], [16.7, 12248.0], [16.8, 12249.0], [16.9, 12249.0], [17.0, 12249.0], [17.1, 12250.0], [17.2, 12250.0], [17.3, 12250.0], [17.4, 12250.0], [17.5, 12250.0], [17.6, 12251.0], [17.7, 12251.0], [17.8, 12251.0], [17.9, 12251.0], [18.0, 12252.0], [18.1, 12252.0], [18.2, 12253.0], [18.3, 12253.0], [18.4, 12254.0], [18.5, 12254.0], [18.6, 12255.0], [18.7, 12255.0], [18.8, 12255.0], [18.9, 12255.0], [19.0, 12255.0], [19.1, 12255.0], [19.2, 12256.0], [19.3, 12256.0], [19.4, 12257.0], [19.5, 12257.0], [19.6, 12257.0], [19.7, 12257.0], [19.8, 12258.0], [19.9, 12258.0], [20.0, 12258.0], [20.1, 12260.0], [20.2, 12260.0], [20.3, 12260.0], [20.4, 12261.0], [20.5, 12261.0], [20.6, 12261.0], [20.7, 12262.0], [20.8, 12262.0], [20.9, 12263.0], [21.0, 12263.0], [21.1, 12264.0], [21.2, 12264.0], [21.3, 12264.0], [21.4, 12265.0], [21.5, 12265.0], [21.6, 12266.0], [21.7, 12266.0], [21.8, 12267.0], [21.9, 12267.0], [22.0, 12267.0], [22.1, 12267.0], [22.2, 12267.0], [22.3, 12268.0], [22.4, 12268.0], [22.5, 12268.0], [22.6, 12268.0], [22.7, 12268.0], [22.8, 12268.0], [22.9, 12269.0], [23.0, 12269.0], [23.1, 12269.0], [23.2, 12270.0], [23.3, 12270.0], [23.4, 12270.0], [23.5, 12270.0], [23.6, 12270.0], [23.7, 12270.0], [23.8, 12271.0], [23.9, 12271.0], [24.0, 12271.0], [24.1, 12271.0], [24.2, 12271.0], [24.3, 12271.0], [24.4, 12271.0], [24.5, 12272.0], [24.6, 12272.0], [24.7, 12273.0], [24.8, 12273.0], [24.9, 12273.0], [25.0, 12273.0], [25.1, 12273.0], [25.2, 12273.0], [25.3, 12274.0], [25.4, 12274.0], [25.5, 12274.0], [25.6, 12274.0], [25.7, 12275.0], [25.8, 12275.0], [25.9, 12275.0], [26.0, 12275.0], [26.1, 12275.0], [26.2, 12275.0], [26.3, 12275.0], [26.4, 12275.0], [26.5, 12275.0], [26.6, 12275.0], [26.7, 12275.0], [26.8, 12275.0], [26.9, 12276.0], [27.0, 12276.0], [27.1, 12276.0], [27.2, 12276.0], [27.3, 12276.0], [27.4, 12276.0], [27.5, 12276.0], [27.6, 12276.0], [27.7, 12276.0], [27.8, 12277.0], [27.9, 12277.0], [28.0, 12277.0], [28.1, 12277.0], [28.2, 12278.0], [28.3, 12278.0], [28.4, 12278.0], [28.5, 12278.0], [28.6, 12278.0], [28.7, 12279.0], [28.8, 12279.0], [28.9, 12279.0], [29.0, 12280.0], [29.1, 12280.0], [29.2, 12280.0], [29.3, 12280.0], [29.4, 12281.0], [29.5, 12281.0], [29.6, 12282.0], [29.7, 12283.0], [29.8, 12284.0], [29.9, 12284.0], [30.0, 12285.0], [30.1, 12285.0], [30.2, 12285.0], [30.3, 12285.0], [30.4, 12286.0], [30.5, 12286.0], [30.6, 12286.0], [30.7, 12287.0], [30.8, 12287.0], [30.9, 12288.0], [31.0, 12288.0], [31.1, 12288.0], [31.2, 12288.0], [31.3, 12288.0], [31.4, 12289.0], [31.5, 12289.0], [31.6, 12289.0], [31.7, 12289.0], [31.8, 12289.0], [31.9, 12290.0], [32.0, 12290.0], [32.1, 12290.0], [32.2, 12291.0], [32.3, 12291.0], [32.4, 12291.0], [32.5, 12291.0], [32.6, 12291.0], [32.7, 12291.0], [32.8, 12292.0], [32.9, 12292.0], [33.0, 12292.0], [33.1, 12292.0], [33.2, 12292.0], [33.3, 12293.0], [33.4, 12293.0], [33.5, 12293.0], [33.6, 12293.0], [33.7, 12293.0], [33.8, 12293.0], [33.9, 12293.0], [34.0, 12293.0], [34.1, 12294.0], [34.2, 12294.0], [34.3, 12294.0], [34.4, 12294.0], [34.5, 12294.0], [34.6, 12294.0], [34.7, 12294.0], [34.8, 12295.0], [34.9, 12295.0], [35.0, 12295.0], [35.1, 12295.0], [35.2, 12295.0], [35.3, 12295.0], [35.4, 12295.0], [35.5, 12295.0], [35.6, 12296.0], [35.7, 12296.0], [35.8, 12296.0], [35.9, 12296.0], [36.0, 12296.0], [36.1, 12296.0], [36.2, 12296.0], [36.3, 12297.0], [36.4, 12297.0], [36.5, 12297.0], [36.6, 12297.0], [36.7, 12297.0], [36.8, 12297.0], [36.9, 12297.0], [37.0, 12297.0], [37.1, 12298.0], [37.2, 12298.0], [37.3, 12298.0], [37.4, 12298.0], [37.5, 12298.0], [37.6, 12298.0], [37.7, 12298.0], [37.8, 12299.0], [37.9, 12299.0], [38.0, 12299.0], [38.1, 12299.0], [38.2, 12299.0], [38.3, 12299.0], [38.4, 12299.0], [38.5, 12299.0], [38.6, 12300.0], [38.7, 12300.0], [38.8, 12300.0], [38.9, 12300.0], [39.0, 12300.0], [39.1, 12300.0], [39.2, 12300.0], [39.3, 12300.0], [39.4, 12300.0], [39.5, 12301.0], [39.6, 12301.0], [39.7, 12301.0], [39.8, 12301.0], [39.9, 12301.0], [40.0, 12302.0], [40.1, 12302.0], [40.2, 12302.0], [40.3, 12302.0], [40.4, 12302.0], [40.5, 12302.0], [40.6, 12302.0], [40.7, 12303.0], [40.8, 12303.0], [40.9, 12303.0], [41.0, 12303.0], [41.1, 12303.0], [41.2, 12303.0], [41.3, 12304.0], [41.4, 12304.0], [41.5, 12304.0], [41.6, 12304.0], [41.7, 12304.0], [41.8, 12304.0], [41.9, 12304.0], [42.0, 12305.0], [42.1, 12305.0], [42.2, 12305.0], [42.3, 12305.0], [42.4, 12306.0], [42.5, 12306.0], [42.6, 12306.0], [42.7, 12307.0], [42.8, 12307.0], [42.9, 12307.0], [43.0, 12308.0], [43.1, 12309.0], [43.2, 12309.0], [43.3, 12309.0], [43.4, 12310.0], [43.5, 12311.0], [43.6, 12311.0], [43.7, 12312.0], [43.8, 12312.0], [43.9, 12312.0], [44.0, 12312.0], [44.1, 12313.0], [44.2, 12313.0], [44.3, 12313.0], [44.4, 12314.0], [44.5, 12314.0], [44.6, 12315.0], [44.7, 12316.0], [44.8, 12318.0], [44.9, 12319.0], [45.0, 12322.0], [45.1, 12324.0], [45.2, 12325.0], [45.3, 12325.0], [45.4, 12327.0], [45.5, 12333.0], [45.6, 12334.0], [45.7, 12334.0], [45.8, 12334.0], [45.9, 12336.0], [46.0, 12336.0], [46.1, 12336.0], [46.2, 12337.0], [46.3, 12338.0], [46.4, 12338.0], [46.5, 12339.0], [46.6, 12340.0], [46.7, 12341.0], [46.8, 12342.0], [46.9, 12342.0], [47.0, 12345.0], [47.1, 12345.0], [47.2, 12345.0], [47.3, 12346.0], [47.4, 12347.0], [47.5, 12349.0], [47.6, 12350.0], [47.7, 12350.0], [47.8, 12350.0], [47.9, 12351.0], [48.0, 12352.0], [48.1, 12352.0], [48.2, 12355.0], [48.3, 12355.0], [48.4, 12355.0], [48.5, 12355.0], [48.6, 12359.0], [48.7, 12360.0], [48.8, 12364.0], [48.9, 12364.0], [49.0, 12369.0], [49.1, 12370.0], [49.2, 12371.0], [49.3, 12371.0], [49.4, 12371.0], [49.5, 12372.0], [49.6, 12373.0], [49.7, 12374.0], [49.8, 12375.0], [49.9, 12375.0], [50.0, 12376.0], [50.1, 12376.0], [50.2, 12377.0], [50.3, 12379.0], [50.4, 12380.0], [50.5, 12381.0], [50.6, 12382.0], [50.7, 12385.0], [50.8, 12386.0], [50.9, 12390.0], [51.0, 12391.0], [51.1, 12391.0], [51.2, 12393.0], [51.3, 12394.0], [51.4, 12397.0], [51.5, 12401.0], [51.6, 12401.0], [51.7, 12402.0], [51.8, 12403.0], [51.9, 12403.0], [52.0, 12403.0], [52.1, 12403.0], [52.2, 12405.0], [52.3, 12406.0], [52.4, 12406.0], [52.5, 12407.0], [52.6, 12408.0], [52.7, 12408.0], [52.8, 12410.0], [52.9, 12410.0], [53.0, 12412.0], [53.1, 12412.0], [53.2, 12413.0], [53.3, 12415.0], [53.4, 12415.0], [53.5, 12416.0], [53.6, 12416.0], [53.7, 12417.0], [53.8, 12419.0], [53.9, 12420.0], [54.0, 12422.0], [54.1, 12423.0], [54.2, 12423.0], [54.3, 12425.0], [54.4, 12427.0], [54.5, 12428.0], [54.6, 12429.0], [54.7, 12429.0], [54.8, 12430.0], [54.9, 12432.0], [55.0, 12433.0], [55.1, 12435.0], [55.2, 12435.0], [55.3, 12437.0], [55.4, 12438.0], [55.5, 12439.0], [55.6, 12440.0], [55.7, 12440.0], [55.8, 12440.0], [55.9, 12441.0], [56.0, 12442.0], [56.1, 12444.0], [56.2, 12446.0], [56.3, 12447.0], [56.4, 12452.0], [56.5, 12453.0], [56.6, 12453.0], [56.7, 12455.0], [56.8, 12455.0], [56.9, 12455.0], [57.0, 12457.0], [57.1, 12458.0], [57.2, 12458.0], [57.3, 12459.0], [57.4, 12459.0], [57.5, 12460.0], [57.6, 12460.0], [57.7, 12462.0], [57.8, 12463.0], [57.9, 12464.0], [58.0, 12465.0], [58.1, 12465.0], [58.2, 12465.0], [58.3, 12466.0], [58.4, 12466.0], [58.5, 12467.0], [58.6, 12468.0], [58.7, 12469.0], [58.8, 12470.0], [58.9, 12470.0], [59.0, 12471.0], [59.1, 12473.0], [59.2, 12475.0], [59.3, 12476.0], [59.4, 12476.0], [59.5, 12477.0], [59.6, 12478.0], [59.7, 12478.0], [59.8, 12478.0], [59.9, 12479.0], [60.0, 12479.0], [60.1, 12481.0], [60.2, 12482.0], [60.3, 12483.0], [60.4, 12483.0], [60.5, 12484.0], [60.6, 12487.0], [60.7, 12488.0], [60.8, 12488.0], [60.9, 12488.0], [61.0, 12490.0], [61.1, 12490.0], [61.2, 12491.0], [61.3, 12492.0], [61.4, 12492.0], [61.5, 12492.0], [61.6, 12493.0], [61.7, 12494.0], [61.8, 12494.0], [61.9, 12494.0], [62.0, 12495.0], [62.1, 12498.0], [62.2, 12498.0], [62.3, 12499.0], [62.4, 12500.0], [62.5, 12501.0], [62.6, 12504.0], [62.7, 12504.0], [62.8, 12505.0], [62.9, 12506.0], [63.0, 12507.0], [63.1, 12508.0], [63.2, 12511.0], [63.3, 12511.0], [63.4, 12511.0], [63.5, 12512.0], [63.6, 12515.0], [63.7, 12515.0], [63.8, 12515.0], [63.9, 12518.0], [64.0, 12519.0], [64.1, 12519.0], [64.2, 12520.0], [64.3, 12521.0], [64.4, 12522.0], [64.5, 12523.0], [64.6, 12523.0], [64.7, 12524.0], [64.8, 12526.0], [64.9, 12526.0], [65.0, 12530.0], [65.1, 12530.0], [65.2, 12534.0], [65.3, 12534.0], [65.4, 12534.0], [65.5, 12537.0], [65.6, 12538.0], [65.7, 12539.0], [65.8, 12541.0], [65.9, 12543.0], [66.0, 12543.0], [66.1, 12550.0], [66.2, 12551.0], [66.3, 12552.0], [66.4, 12553.0], [66.5, 12556.0], [66.6, 12557.0], [66.7, 12557.0], [66.8, 12558.0], [66.9, 12560.0], [67.0, 12561.0], [67.1, 12562.0], [67.2, 12562.0], [67.3, 12563.0], [67.4, 12567.0], [67.5, 12568.0], [67.6, 12569.0], [67.7, 12569.0], [67.8, 12569.0], [67.9, 12571.0], [68.0, 12572.0], [68.1, 12574.0], [68.2, 12575.0], [68.3, 12575.0], [68.4, 12575.0], [68.5, 12575.0], [68.6, 12579.0], [68.7, 12580.0], [68.8, 12582.0], [68.9, 12583.0], [69.0, 12584.0], [69.1, 12585.0], [69.2, 12585.0], [69.3, 12585.0], [69.4, 12589.0], [69.5, 12590.0], [69.6, 12591.0], [69.7, 12592.0], [69.8, 12594.0], [69.9, 12596.0], [70.0, 12596.0], [70.1, 12597.0], [70.2, 12597.0], [70.3, 12597.0], [70.4, 12597.0], [70.5, 12597.0], [70.6, 12598.0], [70.7, 12599.0], [70.8, 12599.0], [70.9, 12599.0], [71.0, 12600.0], [71.1, 12600.0], [71.2, 12601.0], [71.3, 12606.0], [71.4, 12607.0], [71.5, 12607.0], [71.6, 12607.0], [71.7, 12608.0], [71.8, 12608.0], [71.9, 12609.0], [72.0, 12610.0], [72.1, 12612.0], [72.2, 12612.0], [72.3, 12612.0], [72.4, 12615.0], [72.5, 12615.0], [72.6, 12615.0], [72.7, 12617.0], [72.8, 12617.0], [72.9, 12618.0], [73.0, 12619.0], [73.1, 12620.0], [73.2, 12620.0], [73.3, 12621.0], [73.4, 12624.0], [73.5, 12626.0], [73.6, 12629.0], [73.7, 12629.0], [73.8, 12629.0], [73.9, 12630.0], [74.0, 12632.0], [74.1, 12632.0], [74.2, 12633.0], [74.3, 12635.0], [74.4, 12635.0], [74.5, 12637.0], [74.6, 12638.0], [74.7, 12640.0], [74.8, 12641.0], [74.9, 12643.0], [75.0, 12643.0], [75.1, 12644.0], [75.2, 12645.0], [75.3, 12646.0], [75.4, 12648.0], [75.5, 12648.0], [75.6, 12650.0], [75.7, 12651.0], [75.8, 12653.0], [75.9, 12654.0], [76.0, 12654.0], [76.1, 12655.0], [76.2, 12655.0], [76.3, 12656.0], [76.4, 12658.0], [76.5, 12658.0], [76.6, 12659.0], [76.7, 12659.0], [76.8, 12659.0], [76.9, 12660.0], [77.0, 12661.0], [77.1, 12662.0], [77.2, 12663.0], [77.3, 12663.0], [77.4, 12666.0], [77.5, 12666.0], [77.6, 12667.0], [77.7, 12668.0], [77.8, 12670.0], [77.9, 12672.0], [78.0, 12672.0], [78.1, 12672.0], [78.2, 12672.0], [78.3, 12673.0], [78.4, 12673.0], [78.5, 12674.0], [78.6, 12675.0], [78.7, 12675.0], [78.8, 12676.0], [78.9, 12676.0], [79.0, 12678.0], [79.1, 12678.0], [79.2, 12678.0], [79.3, 12679.0], [79.4, 12679.0], [79.5, 12681.0], [79.6, 12682.0], [79.7, 12682.0], [79.8, 12683.0], [79.9, 12683.0], [80.0, 12684.0], [80.1, 12686.0], [80.2, 12688.0], [80.3, 12689.0], [80.4, 12690.0], [80.5, 12691.0], [80.6, 12694.0], [80.7, 12696.0], [80.8, 12696.0], [80.9, 12698.0], [81.0, 12700.0], [81.1, 12700.0], [81.2, 12701.0], [81.3, 12701.0], [81.4, 12702.0], [81.5, 12702.0], [81.6, 12703.0], [81.7, 12703.0], [81.8, 12706.0], [81.9, 12711.0], [82.0, 12712.0], [82.1, 12712.0], [82.2, 12712.0], [82.3, 12713.0], [82.4, 12713.0], [82.5, 12713.0], [82.6, 12715.0], [82.7, 12715.0], [82.8, 12717.0], [82.9, 12717.0], [83.0, 12718.0], [83.1, 12726.0], [83.2, 12726.0], [83.3, 12728.0], [83.4, 12729.0], [83.5, 12730.0], [83.6, 12730.0], [83.7, 12730.0], [83.8, 12731.0], [83.9, 12731.0], [84.0, 12731.0], [84.1, 12732.0], [84.2, 12733.0], [84.3, 12734.0], [84.4, 12734.0], [84.5, 12735.0], [84.6, 12735.0], [84.7, 12739.0], [84.8, 12739.0], [84.9, 12739.0], [85.0, 12744.0], [85.1, 12747.0], [85.2, 12747.0], [85.3, 12747.0], [85.4, 12748.0], [85.5, 12749.0], [85.6, 12751.0], [85.7, 12751.0], [85.8, 12751.0], [85.9, 12752.0], [86.0, 12753.0], [86.1, 12755.0], [86.2, 12758.0], [86.3, 12761.0], [86.4, 12761.0], [86.5, 12764.0], [86.6, 12764.0], [86.7, 12766.0], [86.8, 12767.0], [86.9, 12768.0], [87.0, 12768.0], [87.1, 12769.0], [87.2, 12769.0], [87.3, 12770.0], [87.4, 12774.0], [87.5, 12774.0], [87.6, 12776.0], [87.7, 12776.0], [87.8, 12776.0], [87.9, 12777.0], [88.0, 12777.0], [88.1, 12780.0], [88.2, 12781.0], [88.3, 12781.0], [88.4, 12783.0], [88.5, 12789.0], [88.6, 12789.0], [88.7, 12789.0], [88.8, 12789.0], [88.9, 12792.0], [89.0, 12793.0], [89.1, 12795.0], [89.2, 12795.0], [89.3, 12797.0], [89.4, 12799.0], [89.5, 12800.0], [89.6, 12801.0], [89.7, 12803.0], [89.8, 12804.0], [89.9, 12804.0], [90.0, 12805.0], [90.1, 12806.0], [90.2, 12806.0], [90.3, 12806.0], [90.4, 12807.0], [90.5, 12809.0], [90.6, 12810.0], [90.7, 12811.0], [90.8, 12813.0], [90.9, 12817.0], [91.0, 12818.0], [91.1, 12818.0], [91.2, 12819.0], [91.3, 12820.0], [91.4, 12822.0], [91.5, 12824.0], [91.6, 12827.0], [91.7, 12827.0], [91.8, 12827.0], [91.9, 12829.0], [92.0, 12830.0], [92.1, 12830.0], [92.2, 12831.0], [92.3, 12831.0], [92.4, 12831.0], [92.5, 12832.0], [92.6, 12832.0], [92.7, 12833.0], [92.8, 12833.0], [92.9, 12834.0], [93.0, 12835.0], [93.1, 12835.0], [93.2, 12836.0], [93.3, 12836.0], [93.4, 12840.0], [93.5, 12840.0], [93.6, 12841.0], [93.7, 12841.0], [93.8, 12842.0], [93.9, 12842.0], [94.0, 12852.0], [94.1, 12855.0], [94.2, 12856.0], [94.3, 12858.0], [94.4, 12859.0], [94.5, 12860.0], [94.6, 12860.0], [94.7, 12865.0], [94.8, 12866.0], [94.9, 12866.0], [95.0, 12866.0], [95.1, 12867.0], [95.2, 12868.0], [95.3, 12869.0], [95.4, 12870.0], [95.5, 12870.0], [95.6, 12870.0], [95.7, 12873.0], [95.8, 12877.0], [95.9, 12879.0], [96.0, 12881.0], [96.1, 12884.0], [96.2, 12887.0], [96.3, 12887.0], [96.4, 12888.0], [96.5, 12889.0], [96.6, 12890.0], [96.7, 12890.0], [96.8, 12891.0], [96.9, 12891.0], [97.0, 12896.0], [97.1, 12899.0], [97.2, 12902.0], [97.3, 12902.0], [97.4, 12904.0], [97.5, 12905.0], [97.6, 12913.0], [97.7, 12915.0], [97.8, 12916.0], [97.9, 12918.0], [98.0, 12920.0], [98.1, 12920.0], [98.2, 12921.0], [98.3, 12921.0], [98.4, 12926.0], [98.5, 12939.0], [98.6, 12947.0], [98.7, 12950.0], [98.8, 12953.0], [98.9, 12957.0], [99.0, 12967.0], [99.1, 12971.0], [99.2, 12974.0], [99.3, 12974.0], [99.4, 12974.0], [99.5, 12990.0], [99.6, 12998.0], [99.7, 13041.0], [99.8, 13052.0], [99.9, 13502.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9854.0, "series": [{"data": [[60000.0, 958.0], [60100.0, 42.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 2025.0], [600.0, 9854.0], [700.0, 3744.0], [800.0, 1502.0], [900.0, 9.0], [1000.0, 1041.0], [1100.0, 227.0], [1200.0, 278.0], [1300.0, 455.0], [1400.0, 296.0], [1500.0, 1211.0], [1600.0, 2370.0], [1700.0, 661.0], [1800.0, 223.0], [1900.0, 2.0], [2100.0, 1.0], [2300.0, 7.0], [2500.0, 32.0], [2600.0, 44.0], [2700.0, 18.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 535.0], [3100.0, 106.0], [3300.0, 177.0], [3200.0, 114.0], [3400.0, 147.0], [3500.0, 226.0], [3600.0, 436.0], [3700.0, 104.0], [3800.0, 2.0], [4100.0, 2.0], [4600.0, 2.0], [4700.0, 2.0], [5300.0, 1.0], [5500.0, 1.0], [6700.0, 1.0], [7100.0, 115.0], [7000.0, 476.0], [7400.0, 30.0], [7300.0, 71.0], [7200.0, 73.0], [7500.0, 32.0], [7600.0, 102.0], [7700.0, 45.0], [8500.0, 1.0], [15300.0, 46.0], [15200.0, 31.0], [15100.0, 20.0], [15000.0, 405.0], [15600.0, 10.0], [15500.0, 11.0], [15400.0, 9.0], [16100.0, 1.0], [21000.0, 3607.0], [100.0, 1464.0], [200.0, 1111.0], [300.0, 1925.0], [400.0, 1092.0], [500.0, 6265.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12000.0, 24.0], [12200.0, 288.0], [12100.0, 74.0], [12500.0, 87.0], [12400.0, 109.0], [12600.0, 100.0], [12300.0, 128.0], [12700.0, 85.0], [12800.0, 77.0], [12900.0, 25.0], [13000.0, 2.0], [13500.0, 1.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2036.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 26955.0, "series": [{"data": [[0.0, 2036.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 26955.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 12203.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 3607.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.61758044E12, "maxY": 1000.0, "series": [{"data": [[1.6175805E12, 502.28800000000007]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.6175805E12, 1.5], [1.61758044E12, 508.615230460921]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.6175805E12, 1000.0], [1.61758056E12, 950.7845161290328], [1.61758062E12, 224.09172259507818], [1.61758044E12, 862.2338727554879]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758062E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.0, "maxY": 60114.0, "series": [{"data": [[1009.0, 60037.1111111111], [1062.0, 60027.0], [1081.0, 60026.0], [1086.0, 60028.0], [1057.0, 60028.0], [1056.0, 60028.0], [1060.0, 60027.5], [1058.0, 60027.0], [1063.0, 60027.0], [1065.0, 60027.0], [1064.0, 60026.0], [1069.0, 60029.5], [1067.0, 60027.5], [1071.0, 60028.0], [1070.0, 60028.0], [1085.0, 60029.0], [1084.0, 60028.0], [1080.0, 60029.0], [1079.0, 60027.0], [1078.0, 60028.0], [1077.0, 60027.5], [1075.0, 60028.0], [1074.0, 60026.0], [1073.0, 60029.5], [1039.0, 60028.0], [1038.0, 60028.0], [1037.0, 60028.0], [1036.0, 60028.0], [1035.0, 60028.5], [1033.0, 60029.5], [1027.0, 60033.666666666664], [1055.0, 60026.5], [1053.0, 60029.0], [1052.0, 60026.0], [1051.0, 60028.0], [1050.0, 60028.0], [1049.0, 60027.0], [1048.0, 60029.0], [1047.0, 60027.5], [1045.0, 60028.0], [1044.0, 60027.0], [1043.0, 60027.0], [1041.0, 60031.0], [1040.0, 60028.0], [1142.0, 60029.0], [1125.0, 60029.0], [1148.0, 60028.0], [1151.0, 60030.0], [1122.0, 60028.333333333336], [1124.0, 60029.0], [1123.0, 60029.0], [1126.0, 60028.0], [1128.0, 60029.0], [1127.0, 60028.0], [1131.0, 60028.0], [1130.0, 60027.5], [1134.0, 60029.0], [1132.0, 60027.0], [1150.0, 60029.0], [1149.0, 60027.0], [1147.0, 60029.0], [1145.0, 60027.5], [1143.0, 60027.0], [1140.0, 60027.0], [1139.0, 60028.0], [1138.0, 60028.5], [1136.0, 60027.0], [1119.0, 60027.5], [1090.0, 60030.5], [1089.0, 60029.5], [1093.0, 60027.5], [1092.0, 60028.0], [1095.0, 60028.0], [1094.0, 60029.0], [1097.0, 60028.0], [1096.0, 60027.0], [1099.0, 60026.0], [1098.0, 60026.0], [1103.0, 60027.0], [1102.0, 60027.0], [1117.0, 60027.5], [1115.0, 60026.5], [1113.0, 60028.0], [1112.0, 60029.5], [1110.0, 60027.0], [1109.0, 60030.0], [1108.0, 60028.0], [1106.0, 60027.5], [1104.0, 60027.0], [1210.0, 60028.0], [1214.0, 60028.0], [1184.0, 60027.333333333336], [1188.0, 60027.5], [1186.0, 60028.5], [1191.0, 60028.0], [1190.0, 60027.5], [1194.0, 60026.5], [1192.0, 60027.0], [1199.0, 60030.0], [1197.0, 60027.333333333336], [1213.0, 60026.5], [1211.0, 60030.0], [1209.0, 60032.0], [1208.0, 60028.0], [1207.0, 60027.5], [1205.0, 60027.0], [1204.0, 60027.0], [1203.0, 60030.0], [1202.0, 60028.0], [1201.0, 60028.0], [1200.0, 60027.5], [1167.0, 60028.0], [1166.0, 60029.5], [1164.0, 60029.0], [1162.0, 60029.5], [1160.0, 60029.75], [1156.0, 60028.0], [1155.0, 60028.5], [1152.0, 60028.0], [1181.0, 60027.5], [1179.0, 60027.0], [1178.0, 60027.0], [1177.0, 60028.0], [1176.0, 60027.5], [1174.0, 60027.0], [1173.0, 60027.0], [1172.0, 60028.666666666664], [1169.0, 60027.0], [1168.0, 60028.0], [1269.0, 60027.0], [1255.0, 60027.0], [1273.0, 60027.0], [1278.0, 60026.5], [1249.0, 60028.0], [1248.0, 60028.0], [1251.0, 60026.0], [1250.0, 60028.0], [1254.0, 60027.0], [1253.0, 60029.5], [1256.0, 60027.0], [1258.0, 60029.0], [1257.0, 60027.0], [1260.0, 60030.0], [1259.0, 60027.0], [1262.0, 60027.0], [1261.0, 60027.0], [1277.0, 60028.0], [1275.0, 60028.5], [1272.0, 60027.0], [1271.0, 60026.0], [1270.0, 60029.0], [1268.0, 60029.0], [1267.0, 60028.0], [1266.0, 60028.0], [1265.0, 60028.666666666664], [1247.0, 60032.0], [1216.0, 60028.5], [1218.0, 60027.0], [1217.0, 60026.0], [1222.0, 60027.0], [1221.0, 60026.666666666664], [1225.0, 60029.0], [1223.0, 60027.0], [1229.0, 60026.5], [1227.0, 60029.5], [1231.0, 60028.0], [1230.0, 60027.0], [1246.0, 60028.0], [1245.0, 60029.5], [1243.0, 60028.0], [1242.0, 60027.0], [1241.0, 60028.0], [1240.0, 60031.0], [1239.0, 60027.0], [1238.0, 60028.5], [1236.0, 60027.0], [1235.0, 60028.0], [1234.0, 60029.0], [1318.0, 60027.0], [1338.0, 60029.0], [1342.0, 60026.0], [1312.0, 60027.0], [1315.0, 60027.5], [1313.0, 60027.0], [1317.0, 60027.0], [1316.0, 60030.0], [1319.0, 60028.0], [1322.0, 60027.5], [1320.0, 60028.0], [1324.0, 60029.0], [1323.0, 60028.0], [1326.0, 60028.0], [1325.0, 60029.0], [1341.0, 60027.0], [1339.0, 60026.0], [1336.0, 60031.0], [1335.0, 60026.5], [1333.0, 60030.0], [1331.0, 60029.0], [1329.0, 60028.0], [1328.0, 60027.5], [1311.0, 60026.5], [1281.0, 60027.0], [1280.0, 60026.5], [1283.0, 60028.0], [1282.0, 60027.0], [1286.0, 60026.5], [1284.0, 60027.0], [1288.0, 60027.0], [1287.0, 60027.0], [1292.0, 60029.0], [1289.0, 60027.0], [1294.0, 60027.0], [1293.0, 60027.0], [1309.0, 60027.0], [1307.0, 60028.0], [1305.0, 60027.5], [1303.0, 60028.0], [1302.0, 60028.0], [1301.0, 60028.0], [1300.0, 60028.5], [1298.0, 60028.0], [1297.0, 60028.0], [1296.0, 60028.0], [1404.0, 60027.0], [1407.0, 60028.0], [1377.0, 60027.0], [1376.0, 60028.5], [1382.0, 60028.5], [1380.0, 60030.0], [1385.0, 60028.5], [1383.0, 60028.0], [1389.0, 60029.0], [1387.0, 60029.5], [1391.0, 60028.0], [1390.0, 60028.0], [1406.0, 60028.0], [1405.0, 60027.0], [1403.0, 60030.0], [1402.0, 60028.0], [1401.0, 60027.0], [1400.0, 60029.0], [1399.0, 60027.0], [1398.0, 60029.0], [1397.0, 60027.5], [1395.0, 60028.0], [1394.0, 60028.0], [1393.0, 60028.0], [1392.0, 60028.0], [1359.0, 60028.0], [1358.0, 60027.0], [1357.0, 60027.5], [1355.0, 60027.666666666664], [1352.0, 60028.0], [1350.0, 60028.0], [1349.0, 60028.0], [1348.0, 60028.0], [1347.0, 60027.5], [1345.0, 60027.0], [1344.0, 60026.5], [1375.0, 60028.666666666664], [1371.0, 60030.0], [1370.0, 60027.666666666664], [1367.0, 60030.0], [1366.0, 60029.0], [1365.0, 60028.0], [1364.0, 60027.5], [1363.0, 60027.0], [1361.0, 60027.0], [1470.0, 60041.5], [1447.0, 60028.0], [1471.0, 60049.333333333336], [1442.0, 60036.666666666664], [1441.0, 60035.0], [1458.0, 60039.4], [1457.0, 60038.0], [1435.0, 60030.75], [1410.0, 60028.0], [1408.0, 60028.0], [1417.0, 60034.0], [1413.0, 60029.0], [1422.0, 60032.0], [1418.0, 60031.0], [1431.0, 60030.5], [1430.0, 60030.666666666664], [1426.0, 60033.0], [1425.0, 60034.0], [1452.0, 60031.0], [1449.0, 60031.0], [1448.0, 60027.5], [1445.0, 60028.0], [1444.0, 60028.0], [1522.0, 60027.0], [1510.0, 60029.0], [1532.0, 60030.0], [1535.0, 60028.0], [1504.0, 60027.0], [1506.0, 60027.0], [1505.0, 60027.0], [1508.0, 60027.0], [1507.0, 60030.0], [1511.0, 60028.0], [1513.0, 60031.0], [1512.0, 60028.0], [1516.0, 60028.5], [1514.0, 60027.0], [1519.0, 60029.0], [1517.0, 60026.0], [1534.0, 60028.0], [1533.0, 60027.0], [1531.0, 60029.666666666664], [1525.0, 60027.5], [1523.0, 60027.0], [1520.0, 60028.0], [1487.0, 60027.0], [1486.0, 60029.0], [1485.0, 60026.0], [1484.0, 60027.5], [1483.0, 60027.0], [1481.0, 60031.0], [1480.0, 60027.5], [1478.0, 60029.0], [1477.0, 60032.0], [1474.0, 60027.0], [1473.0, 60034.5], [1503.0, 60027.0], [1502.0, 60028.0], [1501.0, 60027.0], [1500.0, 60028.0], [1498.0, 60028.0], [1497.0, 60027.5], [1495.0, 60027.0], [1494.0, 60027.0], [1493.0, 60028.0], [1492.0, 60026.0], [1491.0, 60028.0], [1490.0, 60027.0], [1489.0, 60029.0], [1488.0, 60028.0], [1594.0, 60030.0], [1598.0, 60028.0], [1571.0, 60028.5], [1569.0, 60030.0], [1573.0, 60028.0], [1572.0, 60028.0], [1577.0, 60027.0], [1576.0, 60028.0], [1580.0, 60029.0], [1579.0, 60029.0], [1582.0, 60028.0], [1581.0, 60029.0], [1597.0, 60030.5], [1595.0, 60029.0], [1592.0, 60029.0], [1589.0, 60028.0], [1588.0, 60028.0], [1587.0, 60028.0], [1585.0, 60029.666666666664], [1547.0, 60029.0], [1546.0, 60028.0], [1545.0, 60029.0], [1544.0, 60030.666666666664], [1541.0, 60028.333333333336], [1538.0, 60027.0], [1537.0, 60026.0], [1536.0, 60029.0], [1566.0, 60029.25], [1562.0, 60028.5], [1560.0, 60033.0], [1559.0, 60028.0], [1558.0, 60027.0], [1557.0, 60030.0], [1556.0, 60028.0], [1555.0, 60033.625], [1659.0, 60028.0], [1663.0, 60029.0], [1636.0, 60028.0], [1635.0, 60031.25], [1638.0, 60028.0], [1637.0, 60028.0], [1640.0, 60028.0], [1639.0, 60028.0], [1643.0, 60027.5], [1641.0, 60028.0], [1646.0, 60028.0], [1645.0, 60030.0], [1662.0, 60027.0], [1661.0, 60029.5], [1658.0, 60032.0], [1657.0, 60028.5], [1655.0, 60029.0], [1654.0, 60029.0], [1652.0, 60033.0], [1651.0, 60030.0], [1650.0, 60028.0], [1649.0, 60031.333333333336], [1631.0, 60028.5], [1603.0, 60030.0], [1601.0, 60028.666666666664], [1606.0, 60031.0], [1605.0, 60029.0], [1608.0, 60031.0], [1607.0, 60029.0], [1613.0, 60027.666666666664], [1610.0, 60032.0], [1615.0, 60027.0], [1614.0, 60029.0], [1629.0, 60029.0], [1628.0, 60029.5], [1626.0, 60029.5], [1624.0, 60029.0], [1623.0, 60029.0], [1622.0, 60030.0], [1621.0, 60029.0], [1620.0, 60029.0], [1619.0, 60030.0], [1618.0, 60029.0], [1617.0, 60029.0], [1616.0, 60028.0], [1717.0, 60031.0], [1727.0, 60044.0], [1696.0, 60028.0], [1699.0, 60032.0], [1698.0, 60028.0], [1702.0, 60029.5], [1700.0, 60028.0], [1725.0, 60043.0], [1718.0, 60031.0], [1716.0, 60030.0], [1715.0, 60031.0], [1714.0, 60028.0], [1712.0, 60034.25], [1695.0, 60028.0], [1667.0, 60028.333333333336], [1664.0, 60027.0], [1670.0, 60028.0], [1669.0, 60028.5], [1672.0, 60027.0], [1671.0, 60028.0], [1677.0, 60029.666666666664], [1674.0, 60028.5], [1679.0, 60029.0], [1678.0, 60030.0], [1694.0, 60028.0], [1693.0, 60030.5], [1691.0, 60030.75], [1687.0, 60028.0], [1686.0, 60028.5], [1684.0, 60035.0], [1683.0, 60037.0], [1682.0, 60034.0], [1680.0, 60031.0], [1704.0, 60029.0], [1703.0, 60029.0], [1787.0, 60046.5], [1791.0, 60048.5], [1760.0, 60035.0], [1763.0, 60037.5], [1761.0, 60040.0], [1789.0, 60045.0], [1788.0, 60049.0], [1785.0, 60048.0], [1781.0, 60043.666666666664], [1780.0, 60045.0], [1777.0, 60041.75], [1759.0, 60036.8], [1734.0, 60037.333333333336], [1733.0, 60045.0], [1738.0, 60032.0], [1735.0, 60030.0], [1743.0, 60036.0], [1742.0, 60033.75], [1749.0, 60032.0], [1748.0, 60032.0], [1747.0, 60035.0], [1746.0, 60033.666666666664], [1773.0, 60042.5], [1771.0, 60039.875], [1853.0, 60053.5], [1855.0, 60049.0], [1828.0, 60064.0], [1827.0, 60061.333333333336], [1831.0, 60064.0], [1830.0, 60063.5], [1833.0, 60064.0], [1832.0, 60063.0], [1835.0, 60060.0], [1834.0, 60062.0], [1851.0, 60056.0], [1849.0, 60059.333333333336], [1846.0, 60056.0], [1844.0, 60058.0], [1843.0, 60056.25], [1806.0, 60054.5], [1804.0, 60053.625], [1796.0, 60052.0], [1795.0, 60049.0], [1794.0, 60048.333333333336], [1818.0, 60057.0], [1811.0, 60054.0], [1810.0, 60058.0], [1808.0, 60054.0], [1839.0, 60056.0], [1836.0, 60058.0], [1906.0, 60057.0], [1918.0, 60051.0], [1917.0, 60069.16666666667], [1911.0, 60070.2], [1898.0, 60098.05263157894], [1879.0, 60048.166666666664], [1873.0, 60043.8], [1868.0, 60038.0], [1866.0, 60036.0], [1864.0, 60036.5], [1862.0, 60044.0], [1861.0, 60047.0], [1860.0, 60047.0], [1859.0, 60050.0], [1858.0, 60048.0], [1856.0, 60051.0], [1983.0, 60065.0], [1980.0, 60051.0], [1976.0, 60084.94444444445], [1975.0, 60113.28571428571], [1951.0, 60067.625000000015], [1935.0, 60089.0], [1933.0, 60044.0], [1932.0, 60078.92857142858], [2000.0, 60114.0], [1998.0, 60074.4], [1993.0, 60097.69999999999]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1502.285000000001, 60038.435000000056]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 15080.0], [3.0, 15075.0], [4.0, 15071.0], [5.0, 15075.0], [6.0, 15074.0], [7.0, 15059.0], [8.0, 15063.0], [9.0, 15061.0], [11.0, 15060.0], [12.0, 15058.0], [14.0, 15059.0], [15.0, 15048.0], [16.0, 15082.0], [17.0, 15065.0], [18.0, 15063.0], [20.0, 15061.5], [21.0, 15066.0], [22.0, 15064.0], [23.0, 15064.0], [24.0, 15065.0], [26.0, 15052.5], [27.0, 15052.0], [30.0, 15050.666666666666], [31.0, 15054.0], [33.0, 15053.0], [32.0, 15052.0], [34.0, 15054.0], [36.0, 15055.0], [39.0, 15056.0], [38.0, 15053.0], [41.0, 15055.0], [40.0, 15059.0], [43.0, 15056.0], [42.0, 15055.0], [45.0, 15057.0], [44.0, 15057.0], [47.0, 21036.0], [46.0, 15083.0], [49.0, 21021.0], [48.0, 21036.0], [51.0, 21034.0], [50.0, 21035.0], [53.0, 21033.0], [52.0, 21034.0], [55.0, 21033.0], [54.0, 21034.0], [57.0, 21033.0], [56.0, 21036.0], [59.0, 21033.0], [58.0, 21034.0], [61.0, 21050.0], [60.0, 21035.0], [63.0, 21050.0], [62.0, 21050.0], [66.0, 21047.0], [65.0, 21049.0], [64.0, 21049.0], [71.0, 21048.0], [70.0, 21050.0], [69.0, 21033.0], [68.0, 21041.5], [75.0, 21062.0], [74.0, 21063.0], [73.0, 21063.0], [72.0, 21049.0], [79.0, 21062.0], [78.0, 21047.0], [77.0, 21047.0], [76.0, 21047.0], [83.0, 21061.0], [82.0, 21062.0], [81.0, 21062.0], [80.0, 21046.0], [87.0, 21061.0], [86.0, 21046.0], [85.0, 21060.0], [84.0, 21061.0], [91.0, 21045.0], [90.0, 21046.0], [89.0, 21062.0], [88.0, 21060.0], [95.0, 21028.0], [94.0, 21028.0], [93.0, 21028.0], [92.0, 21045.0], [99.0, 21011.0], [98.0, 21028.0], [97.0, 21043.0], [96.0, 21058.0], [103.0, 21050.0], [102.0, 21051.0], [101.0, 21055.0], [100.0, 21056.0], [107.0, 21050.0], [106.0, 21051.0], [105.0, 21036.0], [104.0, 21051.0], [111.0, 21057.0], [110.0, 21051.0], [109.0, 21050.0], [108.0, 21049.0], [115.0, 21049.0], [114.0, 21049.0], [113.0, 21048.0], [112.0, 21049.0], [119.0, 21048.0], [118.0, 21048.0], [117.0, 21048.0], [116.0, 21049.0], [123.0, 21049.0], [122.0, 15059.0], [121.0, 21048.0], [120.0, 15057.0], [127.0, 21050.5], [125.0, 21050.0], [124.0, 21050.0], [135.0, 21047.0], [134.0, 21047.0], [133.0, 21048.0], [132.0, 21048.0], [131.0, 21047.0], [129.0, 21047.0], [128.0, 21049.0], [143.0, 21046.0], [142.0, 21040.0], [141.0, 21048.0], [140.0, 21041.0], [139.0, 21047.0], [138.0, 21047.0], [137.0, 21046.0], [136.0, 21047.0], [151.0, 21045.0], [150.0, 7063.0], [149.0, 7047.0], [148.0, 21045.0], [147.0, 7062.333333333333], [144.0, 21046.0], [159.0, 7063.0], [156.0, 7062.0], [155.0, 21045.0], [154.0, 21045.0], [153.0, 21044.0], [152.0, 21044.0], [167.0, 21046.0], [166.0, 7063.0], [165.0, 7063.0], [164.0, 7065.0], [163.0, 21045.0], [162.0, 21045.0], [161.0, 21047.0], [160.0, 7062.0], [175.0, 7065.0], [174.0, 21045.0], [173.0, 21044.0], [172.0, 21046.0], [171.0, 21047.0], [170.0, 21045.0], [169.0, 21046.0], [168.0, 21045.0], [183.0, 21048.0], [182.0, 21048.0], [181.0, 21048.0], [180.0, 21048.0], [179.0, 21050.0], [178.0, 21052.0], [177.0, 21047.0], [191.0, 21045.0], [190.0, 21042.0], [189.0, 21047.0], [188.0, 21042.0], [187.0, 21048.0], [186.0, 21050.0], [185.0, 21049.0], [184.0, 21045.0], [199.0, 21046.0], [198.0, 21048.0], [197.0, 21046.0], [196.0, 21048.0], [195.0, 21048.0], [194.0, 15052.0], [193.0, 21046.0], [192.0, 21042.0], [207.0, 7063.333333333333], [204.0, 21046.0], [203.0, 21046.0], [202.0, 21047.0], [201.0, 21048.0], [200.0, 21045.0], [215.0, 21050.0], [214.0, 7063.0], [213.0, 21046.0], [212.0, 21046.0], [211.0, 21046.0], [210.0, 21047.0], [209.0, 21047.0], [208.0, 21047.0], [223.0, 21043.0], [222.0, 21047.0], [221.0, 21042.0], [220.0, 21044.0], [219.0, 21047.0], [218.0, 21049.0], [217.0, 21046.5], [231.0, 21039.0], [230.0, 21038.0], [229.0, 21042.0], [228.0, 21044.0], [227.0, 21044.0], [226.0, 21045.0], [225.0, 21041.0], [224.0, 21045.0], [239.0, 21045.0], [238.0, 21046.0], [237.0, 21045.0], [236.0, 21045.0], [235.0, 21045.0], [234.0, 21045.0], [233.0, 21041.0], [232.0, 21042.0], [247.0, 21046.0], [246.0, 21045.0], [245.0, 21044.0], [244.0, 21045.0], [243.0, 21044.0], [242.0, 21045.0], [241.0, 21044.0], [240.0, 21044.0], [255.0, 21043.0], [254.0, 21045.0], [253.0, 21044.0], [252.0, 21045.0], [251.0, 21044.0], [250.0, 21046.0], [248.0, 21045.0], [270.0, 21044.0], [271.0, 21042.0], [269.0, 21043.0], [268.0, 21043.0], [267.0, 21044.0], [266.0, 21047.0], [265.0, 21048.0], [264.0, 21033.0], [263.0, 21043.0], [257.0, 21044.0], [256.0, 21043.0], [259.0, 21044.0], [258.0, 21044.0], [262.0, 21043.0], [261.0, 21043.0], [286.0, 21044.0], [287.0, 21042.0], [284.0, 21042.0], [275.0, 21045.0], [274.0, 21042.0], [273.0, 21043.0], [272.0, 21041.0], [283.0, 21043.0], [282.0, 21044.0], [281.0, 21042.0], [280.0, 21042.0], [279.0, 21044.0], [278.0, 21043.0], [277.0, 21047.0], [276.0, 21044.0], [302.0, 21040.0], [303.0, 21041.0], [301.0, 21044.0], [300.0, 21043.0], [299.0, 21046.0], [298.0, 21042.0], [297.0, 21044.0], [296.0, 21047.0], [295.0, 21045.0], [289.0, 21040.0], [288.0, 21042.0], [291.0, 21043.0], [290.0, 21043.0], [293.0, 21043.0], [292.0, 21043.0], [318.0, 7054.0], [319.0, 21043.0], [316.0, 21041.0], [307.0, 21047.0], [306.0, 21045.0], [305.0, 7057.0], [304.0, 21042.0], [315.0, 21039.0], [314.0, 21040.0], [313.0, 21041.0], [312.0, 21042.0], [311.0, 21044.0], [310.0, 21041.0], [309.0, 21045.0], [308.0, 21045.0], [334.0, 21057.0], [335.0, 21055.0], [333.0, 21059.0], [332.0, 21044.0], [331.0, 21057.0], [330.0, 21059.0], [329.0, 21060.0], [328.0, 21059.0], [327.0, 21059.0], [321.0, 21044.0], [320.0, 21041.0], [323.0, 21044.0], [322.0, 21044.0], [326.0, 21044.0], [325.0, 21042.0], [324.0, 21044.0], [350.0, 21044.0], [351.0, 21034.0], [349.0, 21046.666666666668], [339.0, 21057.0], [338.0, 21055.0], [337.0, 21057.0], [336.0, 21058.0], [346.0, 21043.0], [345.0, 7054.0], [344.0, 7056.0], [343.0, 21042.0], [342.0, 21054.0], [341.0, 21057.0], [340.0, 21054.0], [364.0, 21042.0], [367.0, 21048.0], [366.0, 21046.0], [365.0, 21062.0], [363.0, 21041.5], [359.0, 21039.0], [353.0, 21043.0], [352.0, 21045.0], [355.0, 21042.0], [354.0, 21041.0], [358.0, 21044.0], [357.0, 21045.0], [356.0, 21041.0], [382.0, 21042.0], [383.0, 21039.0], [381.0, 21043.0], [380.0, 21040.0], [379.0, 21056.0], [378.0, 21042.0], [377.0, 21042.0], [376.0, 21041.0], [375.0, 21057.0], [369.0, 21046.0], [368.0, 21062.0], [371.0, 21043.0], [370.0, 21043.0], [374.0, 21045.0], [373.0, 21043.0], [372.0, 21042.0], [398.0, 21036.0], [399.0, 21037.0], [397.0, 21041.0], [396.0, 21044.0], [395.0, 21040.0], [394.0, 21044.0], [393.0, 21045.0], [392.0, 21042.0], [391.0, 21044.0], [385.0, 21040.0], [384.0, 21040.0], [387.0, 21038.0], [386.0, 21040.0], [390.0, 21044.5], [388.0, 21042.0], [414.0, 21038.0], [415.0, 21038.0], [413.0, 7052.0], [403.0, 21037.0], [402.0, 21034.0], [401.0, 21036.0], [400.0, 21034.0], [411.0, 7051.0], [410.0, 21039.0], [409.0, 21040.0], [408.0, 21039.0], [407.0, 21039.0], [406.0, 21039.0], [405.0, 21039.0], [404.0, 21038.0], [430.0, 21054.0], [431.0, 21051.0], [429.0, 21056.0], [428.0, 21036.0], [427.0, 7048.0], [426.0, 21036.0], [425.0, 21037.0], [424.0, 21037.0], [423.0, 21037.0], [416.0, 21036.0], [419.0, 21038.0], [417.0, 7049.0], [422.0, 21039.0], [421.0, 21040.0], [420.0, 21036.0], [446.0, 21050.0], [447.0, 21052.0], [445.0, 21050.0], [444.0, 21051.5], [442.0, 21048.0], [441.0, 21046.0], [440.0, 21052.0], [439.0, 21051.0], [433.0, 21051.0], [432.0, 21051.0], [435.0, 21054.0], [434.0, 21054.0], [438.0, 21050.0], [437.0, 21049.0], [436.0, 21050.0], [462.0, 21050.0], [463.0, 21050.0], [461.0, 21052.0], [460.0, 21051.0], [459.0, 15062.0], [458.0, 7048.0], [457.0, 21052.0], [456.0, 21051.0], [455.0, 21051.0], [449.0, 21052.0], [448.0, 21052.0], [451.0, 21052.0], [450.0, 21051.0], [454.0, 21052.0], [453.0, 21052.0], [452.0, 7046.0], [478.0, 21033.0], [479.0, 21034.0], [477.0, 21034.0], [476.0, 21036.0], [475.0, 21034.0], [474.0, 21034.0], [473.0, 7047.0], [472.0, 21034.0], [471.0, 21034.0], [465.0, 21051.0], [464.0, 21051.0], [467.0, 7051.0], [466.0, 21050.0], [470.0, 21036.0], [469.0, 7047.0], [468.0, 7049.0], [494.0, 21030.0], [495.0, 21035.0], [493.0, 21031.0], [492.0, 21031.0], [491.0, 21032.0], [490.0, 21030.0], [489.0, 21028.0], [488.0, 7044.0], [487.0, 21048.0], [481.0, 21032.0], [480.0, 21032.0], [483.0, 21049.0], [482.0, 21032.0], [486.0, 21033.0], [485.0, 21047.0], [484.0, 21048.0], [510.0, 21032.0], [511.0, 21031.0], [509.0, 21030.0], [508.0, 21027.0], [507.0, 21029.0], [506.0, 21031.0], [505.0, 21027.0], [504.0, 21030.0], [503.0, 21029.0], [496.0, 21033.0], [499.0, 21034.0], [498.0, 21029.5], [502.0, 21027.0], [501.0, 21028.0], [500.0, 21030.0], [540.0, 21031.0], [543.0, 21030.0], [529.0, 21027.0], [528.0, 21026.0], [531.0, 21031.0], [530.0, 21028.0], [533.0, 21028.0], [532.0, 21029.0], [542.0, 21029.0], [541.0, 21032.0], [539.0, 21029.0], [538.0, 21029.0], [537.0, 21029.0], [536.0, 21031.0], [527.0, 21029.0], [513.0, 21031.0], [512.0, 21029.0], [515.0, 21029.0], [514.0, 21027.0], [517.0, 21027.0], [516.0, 21026.0], [519.0, 21029.0], [518.0, 21029.0], [526.0, 21030.0], [525.0, 21027.0], [524.0, 21029.0], [523.0, 21029.0], [522.0, 21046.0], [521.0, 7057.0], [520.0, 21044.0], [535.0, 21028.0], [534.0, 21029.0], [572.0, 21044.0], [575.0, 21044.0], [560.0, 21049.0], [563.0, 21061.0], [562.0, 21057.0], [565.0, 21047.0], [564.0, 21054.0], [574.0, 21046.0], [573.0, 21048.0], [571.0, 21056.0], [570.0, 21046.0], [569.0, 21046.0], [568.0, 21056.0], [559.0, 21054.0], [544.0, 3038.0], [547.0, 21032.0], [546.0, 21031.5], [549.0, 21029.0], [548.0, 21029.0], [551.0, 21026.0], [550.0, 21028.0], [558.0, 21053.0], [557.0, 21053.0], [556.0, 21042.0], [555.0, 21029.0], [554.0, 7056.0], [553.0, 21026.0], [552.0, 21026.0], [567.0, 21051.0], [566.0, 21053.0], [602.0, 21040.0], [606.0, 21041.0], [607.0, 21039.0], [593.0, 21040.0], [592.0, 21041.0], [595.0, 21041.0], [594.0, 21041.0], [597.0, 21041.0], [596.0, 21041.0], [605.0, 21040.0], [604.0, 21040.0], [603.0, 21040.0], [601.0, 21041.5], [583.0, 21042.0], [582.0, 21037.0], [581.0, 21044.5], [579.0, 21040.0], [578.0, 21043.0], [577.0, 21040.0], [576.0, 21048.0], [591.0, 21036.0], [590.0, 21035.0], [589.0, 21035.0], [588.0, 21040.0], [587.0, 21042.0], [586.0, 21035.0], [585.0, 21037.0], [584.0, 21044.0], [599.0, 21043.0], [598.0, 21041.0], [636.0, 21039.0], [639.0, 21060.0], [625.0, 21040.0], [624.0, 21040.0], [627.0, 21041.0], [626.0, 7054.0], [629.0, 21042.0], [628.0, 21042.0], [638.0, 21059.0], [637.0, 21058.0], [635.0, 21041.0], [634.0, 21040.0], [633.0, 21040.0], [632.0, 21042.0], [623.0, 21040.0], [609.0, 21039.0], [608.0, 21038.0], [611.0, 3048.0], [610.0, 21040.0], [614.0, 3047.0], [613.0, 3046.5], [622.0, 3059.5], [620.0, 21041.0], [619.0, 21039.0], [618.0, 3047.0], [631.0, 21042.0], [630.0, 21041.0], [668.0, 21054.0], [671.0, 21046.0], [657.0, 15055.0], [659.0, 15057.0], [658.0, 21059.0], [661.0, 15059.0], [660.0, 15056.0], [670.0, 21047.0], [669.0, 21047.0], [667.0, 21046.0], [666.0, 15058.0], [665.0, 21045.0], [664.0, 21045.0], [655.0, 15055.0], [640.0, 21043.0], [642.0, 21057.0], [641.0, 21057.0], [644.0, 21058.0], [643.0, 21056.0], [646.0, 21057.0], [645.0, 21059.0], [654.0, 21059.0], [653.0, 15054.0], [652.0, 21058.0], [651.0, 21043.0], [650.0, 21058.0], [649.0, 15064.0], [648.0, 3053.5], [663.0, 15058.0], [662.0, 15058.0], [696.0, 21046.0], [701.0, 15059.0], [703.0, 11055.5], [689.0, 21045.0], [688.0, 21045.0], [691.0, 15055.0], [690.0, 15057.0], [700.0, 21046.0], [699.0, 18054.0], [697.0, 21048.0], [687.0, 21047.0], [673.0, 21051.0], [672.0, 21044.0], [675.0, 21049.0], [674.0, 21048.0], [677.0, 21046.0], [676.0, 21042.0], [679.0, 21044.0], [678.0, 21044.0], [686.0, 21045.0], [685.0, 21043.0], [684.0, 21043.0], [683.0, 21045.0], [682.0, 21043.0], [681.0, 21047.0], [680.0, 21049.0], [695.0, 7054.0], [694.0, 21044.0], [693.0, 15057.0], [692.0, 15057.0], [732.0, 21032.0], [735.0, 21065.0], [721.0, 21042.0], [720.0, 21043.0], [723.0, 21045.0], [722.0, 21047.0], [725.0, 21039.0], [724.0, 21039.0], [734.0, 21064.0], [733.0, 21046.0], [731.0, 21033.0], [730.0, 21061.0], [729.0, 21047.0], [728.0, 21046.0], [719.0, 21046.0], [704.0, 21048.0], [706.0, 15058.0], [705.0, 21046.0], [708.0, 21054.0], [707.0, 3054.0], [711.0, 21050.0], [709.0, 21052.0], [718.0, 21045.0], [717.0, 21046.0], [716.0, 21048.0], [715.0, 21048.0], [714.0, 21051.0], [713.0, 21050.0], [712.0, 21047.0], [727.0, 21063.0], [726.0, 21047.0], [762.0, 6051.25], [755.0, 15057.0], [767.0, 7047.0], [766.0, 7046.0], [765.0, 7050.0], [751.0, 7049.0], [737.0, 21062.0], [736.0, 21062.0], [739.0, 21048.0], [738.0, 21050.0], [741.0, 21059.0], [740.0, 21062.0], [743.0, 21059.0], [742.0, 21058.0], [749.0, 7050.0], [747.0, 15060.0], [746.0, 15056.0], [745.0, 7049.0], [744.0, 21046.0], [758.0, 7055.0], [757.0, 7054.0], [756.0, 15060.0], [754.0, 7048.0], [752.0, 11054.0], [793.0, 21045.0], [798.0, 21053.0], [799.0, 21043.0], [784.0, 3056.0], [787.0, 15057.0], [786.0, 11056.0], [789.0, 21060.0], [788.0, 21064.0], [796.0, 21043.0], [795.0, 21047.0], [794.0, 21058.0], [792.0, 21061.0], [775.0, 21048.0], [774.0, 21040.5], [772.0, 21047.0], [771.0, 15072.0], [770.0, 7047.0], [769.0, 7046.0], [768.0, 3054.0], [782.0, 7059.0], [781.0, 7061.0], [780.0, 7050.0], [779.0, 21031.0], [778.0, 21046.0], [777.0, 21047.0], [776.0, 21046.0], [791.0, 21031.0], [790.0, 21061.0], [825.0, 21045.0], [830.0, 7048.5], [831.0, 3053.0], [816.0, 21044.0], [818.0, 7049.0], [817.0, 21044.0], [820.0, 7049.0], [819.0, 7049.0], [828.0, 7049.0], [827.0, 7051.0], [826.0, 21043.0], [824.0, 21044.0], [806.0, 7050.0], [805.0, 7051.0], [804.0, 21044.0], [803.0, 7052.0], [802.0, 21043.0], [801.0, 21060.0], [800.0, 21046.0], [815.0, 21044.0], [814.0, 7052.5], [812.0, 7054.0], [811.0, 7049.0], [810.0, 21043.0], [809.0, 7051.0], [808.0, 7050.5], [823.0, 21044.0], [821.0, 7049.0], [857.0, 21043.0], [861.0, 15100.0], [862.0, 15098.0], [849.0, 7062.0], [848.0, 7061.0], [851.0, 21043.0], [850.0, 7061.0], [853.0, 7067.0], [852.0, 7067.0], [860.0, 21041.0], [859.0, 21042.0], [858.0, 21044.0], [856.0, 7074.0], [839.0, 7060.0], [838.0, 7062.0], [837.0, 7062.0], [836.0, 3049.0], [835.0, 5057.5], [833.0, 7051.0], [832.0, 7052.0], [847.0, 7065.0], [846.0, 7065.0], [845.0, 7063.0], [842.0, 7066.0], [841.0, 3060.0], [840.0, 7059.0], [855.0, 7065.0], [854.0, 7065.0], [888.0, 7091.0], [892.0, 21040.0], [895.0, 21040.0], [882.0, 7082.0], [881.0, 21041.5], [885.0, 5080.0], [883.0, 21041.0], [894.0, 21041.0], [893.0, 21042.0], [891.0, 7091.0], [890.0, 7091.0], [889.0, 7092.0], [879.0, 21035.0], [865.0, 21047.0], [867.0, 21043.0], [866.0, 21042.0], [869.0, 21043.0], [868.0, 21044.0], [871.0, 21040.0], [870.0, 21045.0], [878.0, 21041.0], [877.0, 21039.0], [876.0, 21040.0], [875.0, 21044.0], [874.0, 21044.0], [873.0, 21041.0], [872.0, 21043.0], [887.0, 7093.0], [886.0, 7080.0], [924.0, 7077.0], [927.0, 3072.0], [913.0, 21039.0], [912.0, 21040.0], [915.0, 21041.0], [914.0, 21039.0], [917.0, 21039.0], [916.0, 21041.0], [926.0, 3083.0], [925.0, 7074.0], [923.0, 21039.0], [922.0, 21039.0], [921.0, 21041.0], [920.0, 3060.0], [911.0, 21042.0], [897.0, 21039.0], [896.0, 21041.0], [899.0, 21041.0], [898.0, 21042.0], [901.0, 7087.0], [900.0, 7087.0], [903.0, 7089.0], [902.0, 7088.0], [910.0, 21042.0], [909.0, 21041.0], [908.0, 21043.0], [907.0, 5754.666666666667], [906.0, 7087.0], [919.0, 21040.0], [918.0, 21041.0], [953.0, 21033.0], [957.0, 21033.0], [959.0, 21036.5], [945.0, 21036.0], [944.0, 21036.0], [947.0, 21039.0], [946.0, 21036.0], [949.0, 21036.0], [948.0, 21035.0], [956.0, 21035.0], [955.0, 21036.0], [954.0, 21034.0], [952.0, 21034.0], [935.0, 21035.0], [934.0, 21036.0], [933.0, 21034.0], [932.0, 21038.0], [931.0, 5080.5], [929.0, 7086.0], [928.0, 21039.0], [943.0, 21036.0], [942.0, 21036.0], [941.0, 21036.0], [940.0, 21036.0], [939.0, 21035.0], [938.0, 21035.0], [937.0, 21035.0], [936.0, 21036.0], [951.0, 21036.0], [950.0, 21034.0], [988.0, 21037.0], [991.0, 21040.0], [977.0, 21038.0], [976.0, 21038.0], [979.0, 21040.0], [978.0, 21039.0], [981.0, 21039.0], [980.0, 21038.0], [990.0, 21040.0], [989.0, 21041.0], [987.0, 21039.0], [986.0, 21039.0], [985.0, 21040.0], [984.0, 21040.0], [975.0, 21039.0], [961.0, 21036.0], [960.0, 21036.0], [963.0, 21036.0], [962.0, 21036.0], [965.0, 21034.0], [964.0, 21032.0], [967.0, 21034.0], [966.0, 21033.0], [974.0, 21040.0], [973.0, 21036.0], [972.0, 21035.0], [971.0, 21036.0], [970.0, 21036.0], [969.0, 21037.0], [968.0, 21036.0], [983.0, 21039.0], [982.0, 21042.0], [996.0, 21040.0], [1009.0, 4383.666666666667], [1000.0, 14765.07677067856], [999.0, 21039.0], [998.0, 21048.0], [995.0, 21040.0], [994.0, 21042.0], [993.0, 21039.0], [992.0, 21041.0], [1086.0, 3315.0], [1060.0, 21028.0], [1040.0, 279.0], [1104.0, 15335.5], [1090.0, 308.5], [1166.0, 15340.5], [1164.0, 21039.0], [1268.0, 3363.0], [1230.0, 21029.0], [1262.0, 21034.0], [1254.0, 3337.0], [1246.0, 3348.0], [1234.0, 10335.0], [1338.0, 1395.0], [1326.0, 6466.857142857143], [1296.0, 21032.0], [1380.0, 21032.5], [1376.0, 9674.857142857143], [1370.0, 1379.0], [1448.0, 14440.666666666668], [1532.0, 21035.0], [1516.0, 21026.0], [1506.0, 18146.0], [1494.0, 21032.0], [1636.0, 21036.0], [1624.0, 21032.0], [1664.0, 21033.0], [1760.0, 1047.0], [2040.0, 718.125], [2002.0, 999.6135593220337], [2000.0, 1245.0390365701373], [2164.0, 184.0], [2100.0, 57.285714285714285], [2096.0, 89.0], [2092.0, 95.0], [2116.0, 41.333333333333336], [2172.0, 193.0], [2168.0, 187.5], [2160.0, 178.5], [2156.0, 161.69565217391306], [2144.0, 42.83333333333333], [2120.0, 683.0], [2136.0, 37.0], [2140.0, 41.666666666666664], [2204.0, 161.5], [2208.0, 162.0], [2188.0, 662.0], [2212.0, 160.0], [2184.0, 579.8181818181819], [2400.0, 617.0], [2308.0, 214.0], [2336.0, 572.3846153846154], [2328.0, 575.9166666666667], [2412.0, 612.25], [2420.0, 106.57142857142857], [2368.0, 61.0], [2372.0, 90.06666666666666], [2380.0, 73.75], [2384.0, 203.75], [2456.0, 151.0], [2484.0, 120.0], [2472.0, 132.5], [2464.0, 153.92857142857144], [2468.0, 144.94444444444443], [2440.0, 135.8], [2528.0, 154.0], [2532.0, 156.66666666666666], [2536.0, 490.7142857142857], [2540.0, 159.0], [2548.0, 167.0], [2556.0, 622.5], [2508.0, 628.0], [2512.0, 143.5], [2516.0, 146.5], [2616.0, 229.0], [2572.0, 185.5], [2612.0, 226.0], [2608.0, 221.0], [2604.0, 217.25], [2600.0, 213.33333333333334], [2576.0, 190.0], [2580.0, 193.0], [2584.0, 198.0], [2588.0, 636.0], [2660.0, 316.1111111111111], [2632.0, 241.5], [2636.0, 242.6], [2784.0, 363.6666666666667], [2732.0, 337.5], [2708.0, 652.5714285714286], [2704.0, 651.0], [2696.0, 651.0], [2792.0, 638.0], [2796.0, 366.0], [2800.0, 375.5], [2804.0, 347.0], [2808.0, 375.0], [2812.0, 593.6428571428572], [2760.0, 567.3043478260869], [2764.0, 351.3333333333333], [2768.0, 334.4], [2772.0, 589.6666666666666], [2776.0, 384.1818181818182], [2780.0, 426.25], [2736.0, 652.0], [2740.0, 338.0], [2744.0, 535.8], [2692.0, 653.5], [2720.0, 351.0], [2724.0, 354.0], [2840.0, 330.0], [2836.0, 327.8], [2816.0, 375.0], [2876.0, 323.0], [2864.0, 328.8], [2860.0, 327.0], [2856.0, 326.6], [2852.0, 439.875], [2848.0, 325.25], [2844.0, 329.6666666666667], [2912.0, 312.1111111111111], [2920.0, 309.25], [2924.0, 309.0], [2928.0, 310.0], [2936.0, 656.0], [2940.0, 326.45454545454544], [2880.0, 639.0], [2888.0, 642.2307692307693], [2892.0, 1026.7222222222222], [2900.0, 1300.142857142857], [2908.0, 311.5], [2996.0, 368.5], [3000.0, 635.5556130367303], [2944.0, 1279.625], [2157.0, 174.0], [2165.0, 649.0], [2093.0, 62.0], [2101.0, 72.57894736842105], [2109.0, 694.0], [2173.0, 193.0], [2169.0, 191.0], [2161.0, 181.0], [2057.0, 707.25], [2053.0, 716.0], [2125.0, 679.0], [2137.0, 38.5], [2141.0, 198.0], [2201.0, 165.0], [2185.0, 194.5], [2285.0, 231.0], [2269.0, 165.66666666666666], [2189.0, 662.0], [2221.0, 624.0], [2177.0, 544.125], [2401.0, 394.77777777777777], [2369.0, 139.5], [2373.0, 80.0], [2377.0, 78.53846153846153], [2385.0, 82.48], [2389.0, 592.0], [2445.0, 137.93750000000003], [2453.0, 144.0], [2493.0, 124.28571428571428], [2489.0, 120.0], [2485.0, 121.5], [2473.0, 138.5], [2449.0, 141.0], [2461.0, 151.0], [2529.0, 155.25], [2533.0, 157.0], [2549.0, 622.0], [2505.0, 138.0], [2561.0, 178.0], [2617.0, 230.33333333333334], [2657.0, 242.0], [2625.0, 237.8], [2633.0, 240.4], [2637.0, 240.25], [2649.0, 240.0], [2805.0, 455.19047619047615], [2809.0, 503.0], [2717.0, 364.90000000000003], [2793.0, 352.5], [2801.0, 327.0], [2753.0, 338.0], [2757.0, 339.5], [2761.0, 337.0], [2765.0, 355.15624999999994], [2769.0, 466.5], [2773.0, 330.4285714285714], [2781.0, 374.00000000000006], [2741.0, 363.0], [2745.0, 647.0], [2749.0, 390.0], [2733.0, 459.6666666666667], [2721.0, 348.75], [2725.0, 347.0], [2841.0, 328.5], [2825.0, 531.6666666666666], [2877.0, 323.0], [2869.0, 634.8125], [2865.0, 329.0], [2821.0, 329.0], [2829.0, 330.75], [2833.0, 329.3333333333333], [2837.0, 326.57142857142856], [2845.0, 329.0], [2913.0, 310.6666666666667], [2917.0, 312.0], [2921.0, 656.5], [2925.0, 310.0], [2929.0, 657.0], [2937.0, 855.8], [2881.0, 535.5], [2885.0, 324.3333333333333], [2889.0, 645.2], [2897.0, 1154.5], [2965.0, 348.0], [2997.0, 372.0], [2949.0, 653.0], [1077.0, 21029.0], [1067.0, 5294.0], [1045.0, 6688.6], [1033.0, 283.0], [1027.0, 887.4], [1147.0, 21042.0], [1115.0, 3314.0], [1113.0, 3319.0], [1095.0, 7243.500000000001], [1169.0, 3338.0], [1231.0, 1811.25], [1267.0, 2360.5], [1227.0, 7821.5], [1261.0, 21026.0], [1253.0, 3340.0], [1249.0, 15354.0], [1245.0, 11844.25], [1241.0, 6673.666666666666], [1239.0, 1829.0], [1333.0, 6389.0], [1341.0, 21027.0], [1335.0, 6734.333333333333], [1331.0, 9396.0], [1329.0, 8385.0], [1309.0, 21025.0], [1397.0, 21028.0], [1413.0, 21028.0], [1493.0, 21036.0], [1581.0, 21034.0], [1569.0, 21032.0], [1635.0, 21034.0], [1623.0, 21028.0], [1615.0, 21023.333333333332], [1773.0, 9547.25], [1771.0, 1047.0], [1763.0, 3050.5714285714284], [1851.0, 8048.5], [1849.0, 7056.0], [1861.0, 1037.0], [2023.0, 718.3571428571429], [2021.0, 719.0], [2017.0, 719.0], [2003.0, 789.6462809917355], [2001.0, 716.2941176470588], [2106.0, 34.0], [2162.0, 178.0], [2094.0, 58.333333333333336], [2098.0, 58.142857142857146], [2102.0, 48.36363636363636], [2174.0, 421.5], [2170.0, 190.0], [2166.0, 184.0], [2066.0, 699.8333333333334], [2118.0, 42.0], [2134.0, 46.75], [2250.0, 610.0], [2370.0, 321.83333333333337], [2330.0, 574.3333333333333], [2374.0, 65.80000000000001], [2406.0, 92.0], [2422.0, 107.75], [2378.0, 596.0], [2382.0, 73.16666666666667], [2386.0, 77.42], [2434.0, 121.52380952380953], [2446.0, 137.0], [2482.0, 127.83333333333334], [2490.0, 119.0], [2486.0, 118.33333333333333], [2478.0, 124.85714285714285], [2474.0, 135.25], [2530.0, 154.5], [2534.0, 158.0], [2538.0, 159.0], [2542.0, 620.25], [2554.0, 173.0], [2558.0, 175.0], [2498.0, 131.5], [2502.0, 205.57142857142856], [2518.0, 627.25], [2526.0, 152.875], [2562.0, 178.6], [2622.0, 294.57142857142856], [2618.0, 230.0], [2598.0, 653.6666666666666], [2578.0, 408.0], [2590.0, 204.0], [2658.0, 254.5], [2670.0, 650.2], [2630.0, 239.25], [2634.0, 235.0], [2638.0, 236.375], [2642.0, 402.9], [2646.0, 238.5], [2650.0, 239.49999999999997], [2654.0, 240.75], [2794.0, 640.5], [2790.0, 501.0], [2746.0, 358.0], [2786.0, 364.0], [2802.0, 347.5], [2754.0, 329.0], [2758.0, 331.8333333333333], [2762.0, 376.0], [2770.0, 346.8], [2774.0, 364.0], [2778.0, 390.0], [2782.0, 362.0], [2750.0, 390.0], [2734.0, 353.6666666666667], [2722.0, 573.75], [2822.0, 326.5], [2878.0, 452.58333333333337], [2874.0, 327.3333333333333], [2870.0, 328.0], [2866.0, 328.6], [2862.0, 329.0], [2858.0, 329.0], [2854.0, 633.5], [2850.0, 328.0], [2826.0, 628.0], [2830.0, 329.14285714285717], [2834.0, 327.16666666666663], [2842.0, 327.0], [2918.0, 310.57142857142856], [2922.0, 309.6666666666667], [2926.0, 310.5], [2930.0, 657.0], [2882.0, 322.0], [2886.0, 324.8333333333333], [2894.0, 328.00000000000006], [2898.0, 328.0], [2902.0, 324.8], [2906.0, 315.962962962963], [2990.0, 653.0], [2111.0, 37.0], [2095.0, 58.4], [2091.0, 58.37500000000001], [2099.0, 67.0], [2167.0, 184.5], [2151.0, 50.0], [2147.0, 46.0], [2119.0, 42.0], [2135.0, 39.0], [2139.0, 40.583333333333336], [2143.0, 44.0], [2291.0, 230.0], [2275.0, 160.0], [2271.0, 166.0], [2211.0, 162.0], [2187.0, 198.0], [2199.0, 641.6], [2191.0, 654.3125], [2235.0, 620.0], [2415.0, 127.4], [2427.0, 112.66666666666667], [2351.0, 579.0], [2331.0, 572.0], [2411.0, 97.16666666666667], [2419.0, 105.0], [2423.0, 110.5], [2431.0, 141.33333333333334], [2371.0, 62.42857142857142], [2375.0, 202.0], [2379.0, 121.3], [2383.0, 593.0], [2391.0, 78.62499999999999], [2387.0, 593.0], [2395.0, 123.16666666666667], [2547.0, 620.8571428571429], [2471.0, 132.5], [2443.0, 136.0], [2543.0, 163.0], [2551.0, 170.33333333333334], [2555.0, 172.0], [2559.0, 175.0], [2507.0, 139.0], [2511.0, 351.14285714285717], [2515.0, 516.7692307692308], [2519.0, 626.0], [2615.0, 642.5], [2563.0, 621.625], [2623.0, 234.5], [2619.0, 232.0], [2611.0, 224.5], [2607.0, 220.75], [2603.0, 216.66666666666666], [2595.0, 209.0], [2571.0, 185.66666666666669], [2575.0, 623.7272727272727], [2579.0, 194.0], [2583.0, 633.0], [2591.0, 266.7142857142857], [2647.0, 651.0], [2811.0, 371.5], [2723.0, 324.5], [2787.0, 364.0], [2795.0, 637.9230769230769], [2755.0, 325.0], [2759.0, 516.5714285714286], [2763.0, 337.5], [2771.0, 365.42857142857144], [2779.0, 389.0], [2783.0, 500.25], [2695.0, 388.0], [2735.0, 390.5], [2743.0, 364.0], [2751.0, 646.8333333333334], [2731.0, 342.0], [2871.0, 327.5555555555555], [2875.0, 325.0], [2867.0, 328.14285714285717], [2863.0, 329.16666666666663], [2859.0, 328.5714285714286], [2855.0, 327.5], [2851.0, 325.0], [2835.0, 327.0], [2847.0, 328.83333333333337], [2927.0, 310.0], [2935.0, 316.0], [2939.0, 319.0], [2943.0, 327.3333333333333], [2891.0, 1161.9705882352937], [2895.0, 379.6666666666667], [2899.0, 326.8181818181818], [2903.0, 432.8666666666666], [2907.0, 311.3333333333333], [2971.0, 653.0], [1.0, 15061.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1939.1923085909232, 2872.757902852727]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[2040.0, 12294.5], [2039.0, 12296.8], [2023.0, 12284.6875], [2022.0, 12279.75], [2003.0, 13502.0], [2002.0, 13041.0], [2001.0, 13052.0], [2165.0, 12271.846153846154], [2152.0, 12273.846153846152], [2066.0, 12294.444444444445], [2057.0, 12297.529411764706], [2139.0, 12278.999999999998], [2132.0, 12286.714285714286], [2125.0, 12296.0], [2120.0, 12302.727272727272], [2109.0, 12305.888888888889], [2108.0, 12308.5], [2107.0, 12297.8], [2106.0, 12298.8], [2088.0, 12295.0], [2297.0, 12623.125], [2300.0, 12727.857142857143], [2299.0, 12569.09090909091], [2298.0, 12696.57142857143], [2296.0, 12679.0], [2295.0, 12399.5], [2250.0, 12505.551724137933], [2221.0, 12247.27272727273], [2184.0, 12263.142857142857], [2177.0, 12268.833333333332], [2199.0, 12247.5], [2191.0, 12255.142857142857], [2401.0, 12615.0], [2425.0, 12628.076923076922], [2426.0, 12403.0], [2370.0, 12519.5], [2383.0, 12552.75], [2379.0, 12585.555555555555], [2390.0, 12887.0], [2389.0, 12808.833333333334], [2412.0, 12865.0], [2411.0, 12613.0], [2404.0, 12409.0], [2400.0, 12847.5], [2331.0, 12789.0], [2330.0, 12584.0], [2328.0, 12680.909090909092], [2317.0, 12663.0], [2311.0, 12457.0], [2310.0, 12643.0], [2305.0, 12726.2], [2364.0, 12722.857142857143], [2357.0, 12635.833333333334], [2351.0, 12666.57142857143], [2350.0, 12557.0], [2336.0, 12536.6], [2398.0, 12516.0], [2396.0, 12403.833333333332], [2549.0, 12322.5], [2556.0, 12535.42857142857], [2511.0, 12385.666666666668], [2510.0, 12512.5], [2515.0, 12405.333333333334], [2512.0, 12334.0], [2547.0, 12459.333333333334], [2544.0, 12818.5], [2542.0, 12700.333333333334], [2536.0, 12707.0], [2489.0, 12541.4], [2448.0, 12585.0], [2459.0, 12551.4], [2449.0, 12573.75], [2479.0, 12527.875], [2471.0, 12485.5], [2469.0, 12493.5], [2468.0, 12905.0], [2464.0, 12292.4], [2526.0, 12180.0], [2525.0, 12647.166666666666], [2519.0, 12183.0], [2518.0, 12235.666666666666], [2684.0, 12471.642857142857], [2686.0, 12340.0], [2670.0, 12769.0], [2669.0, 12479.076923076924], [2656.0, 12473.666666666668], [2591.0, 12224.333333333334], [2588.0, 12437.2], [2583.0, 12537.125], [2575.0, 12399.25], [2563.0, 12418.571428571428], [2647.0, 12533.8], [2642.0, 12405.235294117649], [2641.0, 12478.666666666666], [2622.0, 12365.57142857143], [2615.0, 12505.866666666667], [2600.0, 12391.625], [2599.0, 12557.0], [2809.0, 12416.0], [2772.0, 12441.333333333334], [2812.0, 12542.333333333334], [2760.0, 12833.0], [2759.0, 12434.499999999998], [2769.0, 12543.5], [2765.0, 12476.0], [2805.0, 12482.3], [2795.0, 12316.0], [2794.0, 12569.090909090908], [2712.0, 12338.75], [2708.0, 12485.4], [2707.0, 12451.0], [2751.0, 12444.5], [2745.0, 12177.0], [2744.0, 12471.4], [2739.0, 12566.333333333334], [2736.0, 12563.166666666668], [2730.0, 12800.0], [2729.0, 12473.0], [2722.0, 12430.2], [2783.0, 12453.0], [2776.0, 12342.0], [2775.0, 12472.666666666666], [2891.0, 12459.0], [2930.0, 12255.0], [2937.0, 12456.285714285714], [2881.0, 12356.666666666666], [2889.0, 12100.0], [2888.0, 12288.142857142857], [2929.0, 12551.363636363636], [2928.0, 12481.4], [2913.0, 12371.1], [2831.0, 12236.2], [2826.0, 12325.0], [2825.0, 12383.09090909091], [2824.0, 12749.0], [2878.0, 12313.888888888889], [2869.0, 12361.411764705885], [2852.0, 12350.176470588236], [2851.0, 12526.25], [2903.0, 12205.0], [2900.0, 12560.0], [2892.0, 12655.0], [2995.0, 12201.0], [3000.0, 12402.25925925926], [2944.0, 12371.714285714286], [2965.0, 12290.666666666666], [2949.0, 12457.2], [2998.0, 12076.0], [2997.0, 12314.25], [2994.0, 12097.0], [2984.0, 12347.0], [2983.0, 12288.75], [2982.0, 12239.0], [2981.0, 12410.5], [2979.0, 12279.0], [2978.0, 12488.0], [2977.0, 12345.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[2507.5959999999973, 12450.759999999984]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61758044E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175805E12, 0.0], [1.61758056E12, 0.0], [1.61758062E12, 0.0], [1.61758044E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6175805E12, 0.0], [1.61758056E12, 0.0], [1.61758062E12, 0.0], [1.61758044E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758062E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 544.5597428508088, "minX": 1.61758044E12, "maxY": 60038.435000000056, "series": [{"data": [[1.6175805E12, 60038.435000000056]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175805E12, 1584.432230952996], [1.61758056E12, 18300.054193548393], [1.61758062E12, 19512.98657718123], [1.61758044E12, 544.5597428508088]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175805E12, 13046.5], [1.61758044E12, 12449.566132264512]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758062E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758044E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175805E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175805E12, 0.0], [1.61758056E12, 0.0], [1.61758062E12, 0.0], [1.61758044E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175805E12, 0.0], [1.61758044E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758062E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758044E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175805E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175805E12, 0.0], [1.61758056E12, 0.0], [1.61758062E12, 0.0], [1.61758044E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175805E12, 0.0], [1.61758044E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758062E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61758044E12, "maxY": 60165.0, "series": [{"data": [[1.6175805E12, 60165.0], [1.61758056E12, 15100.0], [1.61758062E12, 15083.0], [1.61758044E12, 13502.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6175805E12, 7055.0], [1.61758056E12, 15057.0], [1.61758062E12, 15067.0], [1.61758044E12, 12316.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6175805E12, 60044.0], [1.61758056E12, 15078.0], [1.61758062E12, 15083.0], [1.61758044E12, 12857.8]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6175805E12, 57832.450000031924], [1.61758056E12, 15061.0], [1.61758062E12, 15075.5], [1.61758044E12, 12612.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6175805E12, 26.0], [1.61758056E12, 26.0], [1.61758062E12, 7047.0], [1.61758044E12, 31.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6175805E12, 628.0], [1.61758056E12, 3044.5], [1.61758062E12, 15053.0], [1.61758044E12, 622.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758062E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 29.0, "minX": 1.0, "maxY": 60030.0, "series": [{"data": [[527.0, 202.0], [551.0, 330.0], [599.0, 1182.0], [660.0, 60026.0], [700.0, 608.0], [680.0, 363.0], [682.0, 177.0], [721.0, 416.0], [711.0, 304.0], [737.0, 702.0], [753.0, 683.0], [766.0, 626.0], [740.0, 595.0], [767.0, 508.0], [785.0, 697.0], [802.0, 627.0], [826.0, 188.0], [800.0, 60030.0], [852.0, 135.0], [842.0, 674.0], [839.0, 413.0], [883.0, 874.0], [884.0, 546.0], [887.0, 675.0], [879.0, 716.0], [881.0, 586.0], [924.0, 595.0], [926.0, 694.0], [928.0, 604.0], [980.0, 696.0], [1005.0, 624.0], [1068.0, 808.0], [1039.0, 600.0], [1127.0, 718.0], [1120.0, 631.0], [1176.0, 777.5], [1284.0, 560.0], [1424.0, 510.0], [1572.0, 741.0], [1540.0, 619.0], [1661.0, 655.0], [11.0, 7054.0], [16.0, 15083.0], [22.0, 15054.0], [23.0, 15063.0], [33.0, 29.0], [45.0, 1034.0], [62.0, 1037.0], [77.0, 3049.5], [123.0, 1043.0], [138.0, 1041.0], [144.0, 7063.0], [156.0, 1036.0], [165.0, 1033.0], [160.0, 29.0], [183.0, 7062.0], [178.0, 3060.0], [198.0, 45.5], [196.0, 7053.0], [207.0, 29.0], [208.0, 1037.0], [218.0, 1030.0], [230.0, 1040.0], [284.0, 1042.0], [273.0, 1041.0], [331.0, 59.0], [323.0, 1038.0], [356.0, 62.0], [463.0, 1036.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[551.0, 21035.0], [599.0, 21037.5], [660.0, 21044.0], [680.0, 21047.0], [682.0, 21035.0], [721.0, 21042.0], [711.0, 21037.0], [3.0, 21040.5], [826.0, 21021.0], [800.0, 21032.0], [4.0, 21040.0], [7.0, 21046.0], [9.0, 21040.0], [10.0, 21038.0], [14.0, 21043.0], [15.0, 21049.0], [16.0, 21034.0], [18.0, 21038.0], [22.0, 21038.0], [25.0, 21041.0], [29.0, 21037.0], [30.0, 21037.0], [32.0, 21033.0], [33.0, 21029.0], [37.0, 21040.0], [36.0, 21039.0], [39.0, 21034.0], [44.0, 21039.0], [45.0, 21050.0], [46.0, 21041.5], [47.0, 21036.0], [62.0, 21040.5], [75.0, 21050.0], [77.0, 21043.0], [85.0, 21039.0], [97.0, 21054.0], [105.0, 21032.0], [113.0, 21045.0], [116.0, 21035.0], [123.0, 21040.0], [138.0, 21048.0], [144.0, 21046.0], [156.0, 21030.0], [165.0, 21047.0], [160.0, 21049.0], [174.0, 21050.0], [177.0, 21038.0], [183.0, 21040.0], [178.0, 21036.0], [191.0, 21051.0], [198.0, 21048.5], [196.0, 21043.0], [208.0, 21051.5], [230.0, 21041.0], [1.0, 21035.0], [284.0, 21032.0], [273.0, 21034.0], [331.0, 21032.0], [323.0, 21038.0], [356.0, 21040.0], [463.0, 21039.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1661.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[527.0, 0.0], [551.0, 0.0], [599.0, 0.0], [660.0, 0.0], [700.0, 0.0], [680.0, 0.0], [682.0, 0.0], [721.0, 0.0], [711.0, 0.0], [737.0, 0.0], [753.0, 0.0], [766.0, 0.0], [740.0, 0.0], [767.0, 0.0], [785.0, 0.0], [802.0, 0.0], [826.0, 0.0], [800.0, 0.0], [852.0, 0.0], [842.0, 0.0], [839.0, 0.0], [883.0, 0.0], [884.0, 0.0], [887.0, 0.0], [879.0, 0.0], [881.0, 0.0], [924.0, 0.0], [926.0, 0.0], [928.0, 0.0], [980.0, 0.0], [1005.0, 0.0], [1068.0, 0.0], [1039.0, 0.0], [1127.0, 0.0], [1120.0, 0.0], [1176.0, 0.0], [1284.0, 0.0], [1424.0, 0.0], [1572.0, 0.0], [1540.0, 0.0], [1661.0, 0.0], [11.0, 0.0], [16.0, 0.0], [22.0, 0.0], [23.0, 0.0], [33.0, 0.0], [45.0, 0.0], [62.0, 0.0], [77.0, 0.0], [123.0, 0.0], [138.0, 0.0], [144.0, 0.0], [156.0, 0.0], [165.0, 0.0], [160.0, 0.0], [183.0, 0.0], [178.0, 0.0], [198.0, 0.0], [196.0, 0.0], [207.0, 0.0], [208.0, 0.0], [218.0, 0.0], [230.0, 0.0], [284.0, 0.0], [273.0, 0.0], [331.0, 0.0], [323.0, 0.0], [356.0, 0.0], [463.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[551.0, 0.0], [599.0, 0.0], [660.0, 0.0], [680.0, 0.0], [682.0, 0.0], [721.0, 0.0], [711.0, 0.0], [3.0, 0.0], [826.0, 0.0], [800.0, 0.0], [4.0, 0.0], [7.0, 0.0], [9.0, 0.0], [10.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [18.0, 0.0], [22.0, 0.0], [25.0, 0.0], [29.0, 0.0], [30.0, 0.0], [32.0, 0.0], [33.0, 0.0], [37.0, 0.0], [36.0, 0.0], [39.0, 0.0], [44.0, 0.0], [45.0, 0.0], [46.0, 0.0], [47.0, 0.0], [62.0, 0.0], [75.0, 0.0], [77.0, 0.0], [85.0, 0.0], [97.0, 0.0], [105.0, 0.0], [113.0, 0.0], [116.0, 0.0], [123.0, 0.0], [138.0, 0.0], [144.0, 0.0], [156.0, 0.0], [165.0, 0.0], [160.0, 0.0], [174.0, 0.0], [177.0, 0.0], [183.0, 0.0], [178.0, 0.0], [191.0, 0.0], [198.0, 0.0], [196.0, 0.0], [208.0, 0.0], [230.0, 0.0], [1.0, 0.0], [284.0, 0.0], [273.0, 0.0], [331.0, 0.0], [323.0, 0.0], [356.0, 0.0], [463.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1661.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 42.45, "minX": 1.61758044E12, "maxY": 579.05, "series": [{"data": [[1.6175805E12, 579.05], [1.61758056E12, 42.45], [1.61758044E12, 125.18333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758056E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.2833333333333334, "minX": 1.61758044E12, "maxY": 584.7333333333333, "series": [{"data": [[1.6175805E12, 584.7333333333333], [1.61758056E12, 8.733333333333333], [1.61758062E12, 1.2833333333333334], [1.61758044E12, 91.81666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6175805E12, 11.016666666666667], [1.61758056E12, 42.93333333333333], [1.61758062E12, 6.166666666666667]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758062E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61758044E12, "maxY": 568.0333333333333, "series": [{"data": [[1.6175805E12, 0.03333333333333333], [1.61758044E12, 16.633333333333333]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.6175805E12, 16.666666666666668]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.6175805E12, 568.0333333333333], [1.61758056E12, 8.733333333333333], [1.61758062E12, 1.2833333333333334], [1.61758044E12, 75.18333333333334]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.6175805E12, 11.016666666666667], [1.61758056E12, 42.93333333333333], [1.61758062E12, 6.166666666666667]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758062E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.2833333333333334, "minX": 1.61758044E12, "maxY": 584.7333333333333, "series": [{"data": [[1.6175805E12, 584.7333333333333], [1.61758056E12, 8.733333333333333], [1.61758062E12, 1.2833333333333334], [1.61758044E12, 91.81666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6175805E12, 11.016666666666667], [1.61758056E12, 42.93333333333333], [1.61758062E12, 6.166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758062E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

