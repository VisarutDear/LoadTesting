/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 62639.0, "series": [{"data": [[0.0, 26.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 28.0], [1.3, 28.0], [1.4, 28.0], [1.5, 28.0], [1.6, 28.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 28.0], [2.1, 28.0], [2.2, 28.0], [2.3, 28.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 29.0], [2.8, 29.0], [2.9, 29.0], [3.0, 29.0], [3.1, 29.0], [3.2, 29.0], [3.3, 29.0], [3.4, 29.0], [3.5, 30.0], [3.6, 30.0], [3.7, 30.0], [3.8, 30.0], [3.9, 30.0], [4.0, 30.0], [4.1, 31.0], [4.2, 31.0], [4.3, 31.0], [4.4, 31.0], [4.5, 32.0], [4.6, 32.0], [4.7, 32.0], [4.8, 33.0], [4.9, 33.0], [5.0, 33.0], [5.1, 34.0], [5.2, 34.0], [5.3, 34.0], [5.4, 35.0], [5.5, 35.0], [5.6, 35.0], [5.7, 35.0], [5.8, 36.0], [5.9, 36.0], [6.0, 37.0], [6.1, 38.0], [6.2, 38.0], [6.3, 39.0], [6.4, 40.0], [6.5, 40.0], [6.6, 41.0], [6.7, 42.0], [6.8, 43.0], [6.9, 44.0], [7.0, 44.0], [7.1, 45.0], [7.2, 45.0], [7.3, 46.0], [7.4, 47.0], [7.5, 48.0], [7.6, 49.0], [7.7, 50.0], [7.8, 50.0], [7.9, 52.0], [8.0, 52.0], [8.1, 53.0], [8.2, 54.0], [8.3, 55.0], [8.4, 56.0], [8.5, 57.0], [8.6, 58.0], [8.7, 58.0], [8.8, 58.0], [8.9, 59.0], [9.0, 60.0], [9.1, 60.0], [9.2, 61.0], [9.3, 61.0], [9.4, 62.0], [9.5, 62.0], [9.6, 62.0], [9.7, 63.0], [9.8, 63.0], [9.9, 64.0], [10.0, 64.0], [10.1, 65.0], [10.2, 65.0], [10.3, 66.0], [10.4, 66.0], [10.5, 67.0], [10.6, 68.0], [10.7, 68.0], [10.8, 69.0], [10.9, 69.0], [11.0, 69.0], [11.1, 70.0], [11.2, 71.0], [11.3, 71.0], [11.4, 72.0], [11.5, 72.0], [11.6, 73.0], [11.7, 74.0], [11.8, 74.0], [11.9, 75.0], [12.0, 76.0], [12.1, 76.0], [12.2, 77.0], [12.3, 77.0], [12.4, 78.0], [12.5, 79.0], [12.6, 79.0], [12.7, 80.0], [12.8, 81.0], [12.9, 82.0], [13.0, 82.0], [13.1, 83.0], [13.2, 84.0], [13.3, 85.0], [13.4, 85.0], [13.5, 86.0], [13.6, 86.0], [13.7, 87.0], [13.8, 87.0], [13.9, 88.0], [14.0, 88.0], [14.1, 89.0], [14.2, 89.0], [14.3, 90.0], [14.4, 91.0], [14.5, 92.0], [14.6, 93.0], [14.7, 94.0], [14.8, 95.0], [14.9, 95.0], [15.0, 96.0], [15.1, 96.0], [15.2, 97.0], [15.3, 98.0], [15.4, 98.0], [15.5, 99.0], [15.6, 99.0], [15.7, 100.0], [15.8, 101.0], [15.9, 102.0], [16.0, 102.0], [16.1, 103.0], [16.2, 104.0], [16.3, 105.0], [16.4, 106.0], [16.5, 108.0], [16.6, 110.0], [16.7, 111.0], [16.8, 111.0], [16.9, 112.0], [17.0, 112.0], [17.1, 112.0], [17.2, 113.0], [17.3, 113.0], [17.4, 113.0], [17.5, 113.0], [17.6, 114.0], [17.7, 114.0], [17.8, 114.0], [17.9, 114.0], [18.0, 115.0], [18.1, 116.0], [18.2, 116.0], [18.3, 116.0], [18.4, 117.0], [18.5, 118.0], [18.6, 118.0], [18.7, 119.0], [18.8, 119.0], [18.9, 120.0], [19.0, 120.0], [19.1, 122.0], [19.2, 123.0], [19.3, 125.0], [19.4, 126.0], [19.5, 126.0], [19.6, 127.0], [19.7, 127.0], [19.8, 127.0], [19.9, 128.0], [20.0, 128.0], [20.1, 128.0], [20.2, 129.0], [20.3, 129.0], [20.4, 130.0], [20.5, 130.0], [20.6, 130.0], [20.7, 131.0], [20.8, 131.0], [20.9, 131.0], [21.0, 132.0], [21.1, 133.0], [21.2, 133.0], [21.3, 134.0], [21.4, 134.0], [21.5, 134.0], [21.6, 135.0], [21.7, 135.0], [21.8, 135.0], [21.9, 136.0], [22.0, 136.0], [22.1, 137.0], [22.2, 137.0], [22.3, 137.0], [22.4, 138.0], [22.5, 138.0], [22.6, 138.0], [22.7, 138.0], [22.8, 138.0], [22.9, 139.0], [23.0, 139.0], [23.1, 139.0], [23.2, 139.0], [23.3, 139.0], [23.4, 140.0], [23.5, 140.0], [23.6, 140.0], [23.7, 141.0], [23.8, 141.0], [23.9, 141.0], [24.0, 142.0], [24.1, 142.0], [24.2, 142.0], [24.3, 143.0], [24.4, 143.0], [24.5, 143.0], [24.6, 143.0], [24.7, 144.0], [24.8, 144.0], [24.9, 145.0], [25.0, 145.0], [25.1, 145.0], [25.2, 146.0], [25.3, 146.0], [25.4, 146.0], [25.5, 147.0], [25.6, 147.0], [25.7, 147.0], [25.8, 147.0], [25.9, 147.0], [26.0, 148.0], [26.1, 148.0], [26.2, 148.0], [26.3, 148.0], [26.4, 149.0], [26.5, 149.0], [26.6, 149.0], [26.7, 149.0], [26.8, 150.0], [26.9, 150.0], [27.0, 150.0], [27.1, 151.0], [27.2, 151.0], [27.3, 151.0], [27.4, 151.0], [27.5, 151.0], [27.6, 152.0], [27.7, 152.0], [27.8, 152.0], [27.9, 152.0], [28.0, 153.0], [28.1, 153.0], [28.2, 153.0], [28.3, 154.0], [28.4, 154.0], [28.5, 154.0], [28.6, 154.0], [28.7, 154.0], [28.8, 155.0], [28.9, 155.0], [29.0, 155.0], [29.1, 155.0], [29.2, 155.0], [29.3, 156.0], [29.4, 156.0], [29.5, 156.0], [29.6, 156.0], [29.7, 156.0], [29.8, 157.0], [29.9, 157.0], [30.0, 157.0], [30.1, 157.0], [30.2, 158.0], [30.3, 158.0], [30.4, 158.0], [30.5, 158.0], [30.6, 159.0], [30.7, 159.0], [30.8, 159.0], [30.9, 160.0], [31.0, 160.0], [31.1, 160.0], [31.2, 161.0], [31.3, 161.0], [31.4, 161.0], [31.5, 162.0], [31.6, 162.0], [31.7, 162.0], [31.8, 163.0], [31.9, 163.0], [32.0, 163.0], [32.1, 163.0], [32.2, 164.0], [32.3, 164.0], [32.4, 164.0], [32.5, 164.0], [32.6, 164.0], [32.7, 165.0], [32.8, 165.0], [32.9, 165.0], [33.0, 165.0], [33.1, 165.0], [33.2, 166.0], [33.3, 166.0], [33.4, 166.0], [33.5, 166.0], [33.6, 166.0], [33.7, 167.0], [33.8, 167.0], [33.9, 167.0], [34.0, 167.0], [34.1, 167.0], [34.2, 167.0], [34.3, 168.0], [34.4, 168.0], [34.5, 168.0], [34.6, 168.0], [34.7, 168.0], [34.8, 168.0], [34.9, 169.0], [35.0, 169.0], [35.1, 169.0], [35.2, 169.0], [35.3, 169.0], [35.4, 169.0], [35.5, 169.0], [35.6, 170.0], [35.7, 170.0], [35.8, 170.0], [35.9, 170.0], [36.0, 170.0], [36.1, 171.0], [36.2, 171.0], [36.3, 171.0], [36.4, 171.0], [36.5, 172.0], [36.6, 172.0], [36.7, 172.0], [36.8, 173.0], [36.9, 173.0], [37.0, 173.0], [37.1, 173.0], [37.2, 174.0], [37.3, 174.0], [37.4, 174.0], [37.5, 174.0], [37.6, 175.0], [37.7, 175.0], [37.8, 175.0], [37.9, 175.0], [38.0, 176.0], [38.1, 176.0], [38.2, 176.0], [38.3, 177.0], [38.4, 177.0], [38.5, 177.0], [38.6, 178.0], [38.7, 178.0], [38.8, 178.0], [38.9, 179.0], [39.0, 179.0], [39.1, 179.0], [39.2, 180.0], [39.3, 180.0], [39.4, 180.0], [39.5, 180.0], [39.6, 181.0], [39.7, 181.0], [39.8, 181.0], [39.9, 182.0], [40.0, 182.0], [40.1, 182.0], [40.2, 182.0], [40.3, 183.0], [40.4, 183.0], [40.5, 183.0], [40.6, 184.0], [40.7, 184.0], [40.8, 184.0], [40.9, 184.0], [41.0, 184.0], [41.1, 185.0], [41.2, 185.0], [41.3, 185.0], [41.4, 185.0], [41.5, 185.0], [41.6, 186.0], [41.7, 186.0], [41.8, 186.0], [41.9, 187.0], [42.0, 187.0], [42.1, 187.0], [42.2, 188.0], [42.3, 188.0], [42.4, 188.0], [42.5, 188.0], [42.6, 189.0], [42.7, 189.0], [42.8, 190.0], [42.9, 190.0], [43.0, 191.0], [43.1, 192.0], [43.2, 192.0], [43.3, 193.0], [43.4, 194.0], [43.5, 195.0], [43.6, 195.0], [43.7, 196.0], [43.8, 196.0], [43.9, 197.0], [44.0, 198.0], [44.1, 199.0], [44.2, 199.0], [44.3, 200.0], [44.4, 200.0], [44.5, 201.0], [44.6, 201.0], [44.7, 202.0], [44.8, 202.0], [44.9, 203.0], [45.0, 203.0], [45.1, 204.0], [45.2, 205.0], [45.3, 205.0], [45.4, 206.0], [45.5, 206.0], [45.6, 207.0], [45.7, 208.0], [45.8, 208.0], [45.9, 209.0], [46.0, 209.0], [46.1, 210.0], [46.2, 210.0], [46.3, 210.0], [46.4, 211.0], [46.5, 211.0], [46.6, 212.0], [46.7, 212.0], [46.8, 212.0], [46.9, 212.0], [47.0, 212.0], [47.1, 213.0], [47.2, 213.0], [47.3, 213.0], [47.4, 213.0], [47.5, 213.0], [47.6, 214.0], [47.7, 214.0], [47.8, 214.0], [47.9, 214.0], [48.0, 214.0], [48.1, 214.0], [48.2, 215.0], [48.3, 215.0], [48.4, 215.0], [48.5, 215.0], [48.6, 215.0], [48.7, 216.0], [48.8, 216.0], [48.9, 216.0], [49.0, 216.0], [49.1, 216.0], [49.2, 217.0], [49.3, 217.0], [49.4, 217.0], [49.5, 217.0], [49.6, 217.0], [49.7, 218.0], [49.8, 218.0], [49.9, 218.0], [50.0, 218.0], [50.1, 218.0], [50.2, 219.0], [50.3, 219.0], [50.4, 219.0], [50.5, 219.0], [50.6, 219.0], [50.7, 219.0], [50.8, 220.0], [50.9, 220.0], [51.0, 220.0], [51.1, 220.0], [51.2, 221.0], [51.3, 221.0], [51.4, 221.0], [51.5, 221.0], [51.6, 221.0], [51.7, 222.0], [51.8, 222.0], [51.9, 222.0], [52.0, 222.0], [52.1, 222.0], [52.2, 223.0], [52.3, 223.0], [52.4, 223.0], [52.5, 223.0], [52.6, 223.0], [52.7, 223.0], [52.8, 224.0], [52.9, 224.0], [53.0, 224.0], [53.1, 224.0], [53.2, 225.0], [53.3, 225.0], [53.4, 225.0], [53.5, 225.0], [53.6, 226.0], [53.7, 226.0], [53.8, 226.0], [53.9, 226.0], [54.0, 227.0], [54.1, 227.0], [54.2, 227.0], [54.3, 227.0], [54.4, 227.0], [54.5, 228.0], [54.6, 228.0], [54.7, 228.0], [54.8, 228.0], [54.9, 228.0], [55.0, 229.0], [55.1, 229.0], [55.2, 229.0], [55.3, 229.0], [55.4, 229.0], [55.5, 230.0], [55.6, 230.0], [55.7, 230.0], [55.8, 230.0], [55.9, 230.0], [56.0, 230.0], [56.1, 230.0], [56.2, 231.0], [56.3, 231.0], [56.4, 231.0], [56.5, 231.0], [56.6, 231.0], [56.7, 232.0], [56.8, 232.0], [56.9, 232.0], [57.0, 232.0], [57.1, 232.0], [57.2, 233.0], [57.3, 233.0], [57.4, 233.0], [57.5, 233.0], [57.6, 233.0], [57.7, 234.0], [57.8, 234.0], [57.9, 234.0], [58.0, 234.0], [58.1, 234.0], [58.2, 235.0], [58.3, 235.0], [58.4, 235.0], [58.5, 235.0], [58.6, 236.0], [58.7, 236.0], [58.8, 236.0], [58.9, 236.0], [59.0, 236.0], [59.1, 236.0], [59.2, 237.0], [59.3, 237.0], [59.4, 237.0], [59.5, 237.0], [59.6, 237.0], [59.7, 237.0], [59.8, 237.0], [59.9, 238.0], [60.0, 238.0], [60.1, 238.0], [60.2, 238.0], [60.3, 238.0], [60.4, 238.0], [60.5, 238.0], [60.6, 239.0], [60.7, 239.0], [60.8, 239.0], [60.9, 239.0], [61.0, 240.0], [61.1, 240.0], [61.2, 240.0], [61.3, 240.0], [61.4, 240.0], [61.5, 241.0], [61.6, 241.0], [61.7, 241.0], [61.8, 241.0], [61.9, 241.0], [62.0, 242.0], [62.1, 242.0], [62.2, 242.0], [62.3, 242.0], [62.4, 242.0], [62.5, 242.0], [62.6, 242.0], [62.7, 243.0], [62.8, 243.0], [62.9, 243.0], [63.0, 243.0], [63.1, 243.0], [63.2, 243.0], [63.3, 243.0], [63.4, 244.0], [63.5, 244.0], [63.6, 244.0], [63.7, 244.0], [63.8, 244.0], [63.9, 244.0], [64.0, 245.0], [64.1, 245.0], [64.2, 245.0], [64.3, 245.0], [64.4, 245.0], [64.5, 245.0], [64.6, 245.0], [64.7, 245.0], [64.8, 245.0], [64.9, 246.0], [65.0, 246.0], [65.1, 246.0], [65.2, 246.0], [65.3, 246.0], [65.4, 246.0], [65.5, 246.0], [65.6, 246.0], [65.7, 246.0], [65.8, 247.0], [65.9, 247.0], [66.0, 247.0], [66.1, 247.0], [66.2, 247.0], [66.3, 247.0], [66.4, 247.0], [66.5, 247.0], [66.6, 248.0], [66.7, 248.0], [66.8, 248.0], [66.9, 248.0], [67.0, 248.0], [67.1, 248.0], [67.2, 248.0], [67.3, 248.0], [67.4, 249.0], [67.5, 249.0], [67.6, 249.0], [67.7, 249.0], [67.8, 249.0], [67.9, 249.0], [68.0, 249.0], [68.1, 249.0], [68.2, 249.0], [68.3, 249.0], [68.4, 250.0], [68.5, 250.0], [68.6, 250.0], [68.7, 250.0], [68.8, 250.0], [68.9, 250.0], [69.0, 250.0], [69.1, 250.0], [69.2, 250.0], [69.3, 250.0], [69.4, 251.0], [69.5, 251.0], [69.6, 251.0], [69.7, 251.0], [69.8, 251.0], [69.9, 251.0], [70.0, 252.0], [70.1, 252.0], [70.2, 252.0], [70.3, 252.0], [70.4, 252.0], [70.5, 252.0], [70.6, 252.0], [70.7, 252.0], [70.8, 253.0], [70.9, 253.0], [71.0, 253.0], [71.1, 253.0], [71.2, 253.0], [71.3, 253.0], [71.4, 254.0], [71.5, 254.0], [71.6, 254.0], [71.7, 254.0], [71.8, 255.0], [71.9, 255.0], [72.0, 255.0], [72.1, 255.0], [72.2, 256.0], [72.3, 256.0], [72.4, 256.0], [72.5, 256.0], [72.6, 256.0], [72.7, 257.0], [72.8, 257.0], [72.9, 258.0], [73.0, 258.0], [73.1, 259.0], [73.2, 259.0], [73.3, 260.0], [73.4, 261.0], [73.5, 261.0], [73.6, 262.0], [73.7, 262.0], [73.8, 263.0], [73.9, 264.0], [74.0, 264.0], [74.1, 265.0], [74.2, 265.0], [74.3, 265.0], [74.4, 266.0], [74.5, 266.0], [74.6, 266.0], [74.7, 266.0], [74.8, 267.0], [74.9, 267.0], [75.0, 268.0], [75.1, 268.0], [75.2, 268.0], [75.3, 269.0], [75.4, 269.0], [75.5, 269.0], [75.6, 270.0], [75.7, 270.0], [75.8, 270.0], [75.9, 270.0], [76.0, 271.0], [76.1, 271.0], [76.2, 272.0], [76.3, 272.0], [76.4, 273.0], [76.5, 274.0], [76.6, 275.0], [76.7, 277.0], [76.8, 278.0], [76.9, 280.0], [77.0, 283.0], [77.1, 284.0], [77.2, 287.0], [77.3, 289.0], [77.4, 292.0], [77.5, 293.0], [77.6, 295.0], [77.7, 297.0], [77.8, 300.0], [77.9, 302.0], [78.0, 304.0], [78.1, 305.0], [78.2, 306.0], [78.3, 307.0], [78.4, 308.0], [78.5, 309.0], [78.6, 311.0], [78.7, 312.0], [78.8, 314.0], [78.9, 316.0], [79.0, 317.0], [79.1, 319.0], [79.2, 320.0], [79.3, 322.0], [79.4, 325.0], [79.5, 326.0], [79.6, 328.0], [79.7, 329.0], [79.8, 330.0], [79.9, 331.0], [80.0, 332.0], [80.1, 332.0], [80.2, 333.0], [80.3, 334.0], [80.4, 334.0], [80.5, 335.0], [80.6, 336.0], [80.7, 337.0], [80.8, 338.0], [80.9, 340.0], [81.0, 344.0], [81.1, 347.0], [81.2, 352.0], [81.3, 359.0], [81.4, 360.0], [81.5, 361.0], [81.6, 362.0], [81.7, 363.0], [81.8, 365.0], [81.9, 369.0], [82.0, 373.0], [82.1, 375.0], [82.2, 378.0], [82.3, 381.0], [82.4, 383.0], [82.5, 388.0], [82.6, 396.0], [82.7, 407.0], [82.8, 411.0], [82.9, 417.0], [83.0, 421.0], [83.1, 424.0], [83.2, 426.0], [83.3, 427.0], [83.4, 428.0], [83.5, 430.0], [83.6, 434.0], [83.7, 436.0], [83.8, 438.0], [83.9, 439.0], [84.0, 441.0], [84.1, 443.0], [84.2, 445.0], [84.3, 446.0], [84.4, 447.0], [84.5, 449.0], [84.6, 450.0], [84.7, 451.0], [84.8, 452.0], [84.9, 454.0], [85.0, 458.0], [85.1, 459.0], [85.2, 465.0], [85.3, 467.0], [85.4, 468.0], [85.5, 471.0], [85.6, 474.0], [85.7, 485.0], [85.8, 497.0], [85.9, 507.0], [86.0, 555.0], [86.1, 590.0], [86.2, 1027.0], [86.3, 1032.0], [86.4, 1034.0], [86.5, 1035.0], [86.6, 1038.0], [86.7, 1040.0], [86.8, 1041.0], [86.9, 1044.0], [87.0, 1052.0], [87.1, 1060.0], [87.2, 1073.0], [87.3, 1080.0], [87.4, 1088.0], [87.5, 1096.0], [87.6, 1105.0], [87.7, 1136.0], [87.8, 1142.0], [87.9, 1144.0], [88.0, 1147.0], [88.1, 1150.0], [88.2, 1153.0], [88.3, 1155.0], [88.4, 1159.0], [88.5, 1161.0], [88.6, 1164.0], [88.7, 1167.0], [88.8, 1169.0], [88.9, 1172.0], [89.0, 1175.0], [89.1, 1179.0], [89.2, 1181.0], [89.3, 1183.0], [89.4, 1187.0], [89.5, 1190.0], [89.6, 1192.0], [89.7, 1195.0], [89.8, 1199.0], [89.9, 1203.0], [90.0, 1205.0], [90.1, 1213.0], [90.2, 1217.0], [90.3, 1221.0], [90.4, 1222.0], [90.5, 1227.0], [90.6, 1230.0], [90.7, 1232.0], [90.8, 1234.0], [90.9, 1247.0], [91.0, 1285.0], [91.1, 1315.0], [91.2, 1343.0], [91.3, 1378.0], [91.4, 1403.0], [91.5, 1439.0], [91.6, 1456.0], [91.7, 1487.0], [91.8, 1562.0], [91.9, 2211.0], [92.0, 3081.0], [92.1, 3101.0], [92.2, 3109.0], [92.3, 3122.0], [92.4, 3126.0], [92.5, 3129.0], [92.6, 3131.0], [92.7, 3134.0], [92.8, 3143.0], [92.9, 3148.0], [93.0, 3152.0], [93.1, 3163.0], [93.2, 3186.0], [93.3, 3224.0], [93.4, 3246.0], [93.5, 3259.0], [93.6, 3443.0], [93.7, 4245.0], [93.8, 7041.0], [93.9, 7045.0], [94.0, 7048.0], [94.1, 7050.0], [94.2, 7053.0], [94.3, 7055.0], [94.4, 7056.0], [94.5, 7058.0], [94.6, 7059.0], [94.7, 7060.0], [94.8, 7062.0], [94.9, 7063.0], [95.0, 7064.0], [95.1, 7065.0], [95.2, 7067.0], [95.3, 7069.0], [95.4, 7071.0], [95.5, 7073.0], [95.6, 7075.0], [95.7, 7078.0], [95.8, 7080.0], [95.9, 7082.0], [96.0, 7085.0], [96.1, 7087.0], [96.2, 7088.0], [96.3, 7090.0], [96.4, 7091.0], [96.5, 7093.0], [96.6, 7095.0], [96.7, 7096.0], [96.8, 7099.0], [96.9, 7106.0], [97.0, 7109.0], [97.1, 7113.0], [97.2, 7116.0], [97.3, 7119.0], [97.4, 7122.0], [97.5, 7125.0], [97.6, 7129.0], [97.7, 7134.0], [97.8, 7140.0], [97.9, 7155.0], [98.0, 7160.0], [98.1, 7163.0], [98.2, 7168.0], [98.3, 7174.0], [98.4, 7178.0], [98.5, 7186.0], [98.6, 7192.0], [98.7, 7196.0], [98.8, 7203.0], [98.9, 7353.0], [99.0, 7362.0], [99.1, 7368.0], [99.2, 7372.0], [99.3, 7383.0], [99.4, 7396.0], [99.5, 7411.0], [99.6, 7426.0], [99.7, 7433.0], [99.8, 7442.0], [99.9, 15042.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 15584.0], [0.1, 15584.0], [0.2, 15584.0], [0.3, 15605.0], [0.4, 15605.0], [0.5, 15609.0], [0.6, 15609.0], [0.7, 15609.0], [0.8, 15618.0], [0.9, 15618.0], [1.0, 15619.0], [1.1, 15619.0], [1.2, 15619.0], [1.3, 15642.0], [1.4, 15642.0], [1.5, 15656.0], [1.6, 15656.0], [1.7, 15656.0], [1.8, 15675.0], [1.9, 15675.0], [2.0, 15676.0], [2.1, 15676.0], [2.2, 15676.0], [2.3, 15684.0], [2.4, 15684.0], [2.5, 15688.0], [2.6, 15688.0], [2.7, 15688.0], [2.8, 15691.0], [2.9, 15691.0], [3.0, 15692.0], [3.1, 15692.0], [3.2, 15692.0], [3.3, 15693.0], [3.4, 15693.0], [3.5, 15693.0], [3.6, 15693.0], [3.7, 15693.0], [3.8, 15696.0], [3.9, 15696.0], [4.0, 15701.0], [4.1, 15701.0], [4.2, 15701.0], [4.3, 15703.0], [4.4, 15703.0], [4.5, 15717.0], [4.6, 15717.0], [4.7, 15717.0], [4.8, 15736.0], [4.9, 15736.0], [5.0, 15740.0], [5.1, 15740.0], [5.2, 15740.0], [5.3, 15740.0], [5.4, 15740.0], [5.5, 15741.0], [5.6, 15741.0], [5.7, 15741.0], [5.8, 15742.0], [5.9, 15742.0], [6.0, 15744.0], [6.1, 15744.0], [6.2, 15744.0], [6.3, 15756.0], [6.4, 15756.0], [6.5, 15757.0], [6.6, 15757.0], [6.7, 15757.0], [6.8, 15757.0], [6.9, 15757.0], [7.0, 15759.0], [7.1, 15759.0], [7.2, 15759.0], [7.3, 15759.0], [7.4, 15759.0], [7.5, 15765.0], [7.6, 15765.0], [7.7, 15765.0], [7.8, 15770.0], [7.9, 15770.0], [8.0, 15773.0], [8.1, 15773.0], [8.2, 15773.0], [8.3, 15782.0], [8.4, 15782.0], [8.5, 15782.0], [8.6, 15782.0], [8.7, 15782.0], [8.8, 15786.0], [8.9, 15786.0], [9.0, 15788.0], [9.1, 15788.0], [9.2, 15788.0], [9.3, 15788.0], [9.4, 15788.0], [9.5, 15799.0], [9.6, 15799.0], [9.7, 15799.0], [9.8, 15801.0], [9.9, 15801.0], [10.0, 15801.0], [10.1, 15801.0], [10.2, 15801.0], [10.3, 15808.0], [10.4, 15808.0], [10.5, 15812.0], [10.6, 15812.0], [10.7, 15812.0], [10.8, 15815.0], [10.9, 15815.0], [11.0, 15815.0], [11.1, 15815.0], [11.2, 15815.0], [11.3, 15818.0], [11.4, 15818.0], [11.5, 15822.0], [11.6, 15822.0], [11.7, 15822.0], [11.8, 15825.0], [11.9, 15825.0], [12.0, 15826.0], [12.1, 15826.0], [12.2, 15826.0], [12.3, 15827.0], [12.4, 15827.0], [12.5, 15827.0], [12.6, 15827.0], [12.7, 15827.0], [12.8, 15827.0], [12.9, 15827.0], [13.0, 15829.0], [13.1, 15829.0], [13.2, 15829.0], [13.3, 15830.0], [13.4, 15830.0], [13.5, 15831.0], [13.6, 15831.0], [13.7, 15831.0], [13.8, 15831.0], [13.9, 15831.0], [14.0, 15835.0], [14.1, 15835.0], [14.2, 15835.0], [14.3, 15835.0], [14.4, 15835.0], [14.5, 15835.0], [14.6, 15835.0], [14.7, 15835.0], [14.8, 15836.0], [14.9, 15836.0], [15.0, 15839.0], [15.1, 15839.0], [15.2, 15839.0], [15.3, 15841.0], [15.4, 15841.0], [15.5, 15844.0], [15.6, 15844.0], [15.7, 15844.0], [15.8, 15846.0], [15.9, 15846.0], [16.0, 15846.0], [16.1, 15846.0], [16.2, 15846.0], [16.3, 15847.0], [16.4, 15847.0], [16.5, 15851.0], [16.6, 15851.0], [16.7, 15851.0], [16.8, 15858.0], [16.9, 15858.0], [17.0, 15861.0], [17.1, 15861.0], [17.2, 15861.0], [17.3, 15861.0], [17.4, 15861.0], [17.5, 15864.0], [17.6, 15864.0], [17.7, 15864.0], [17.8, 15866.0], [17.9, 15866.0], [18.0, 15867.0], [18.1, 15867.0], [18.2, 15867.0], [18.3, 15867.0], [18.4, 15867.0], [18.5, 15870.0], [18.6, 15870.0], [18.7, 15870.0], [18.8, 15874.0], [18.9, 15874.0], [19.0, 15876.0], [19.1, 15876.0], [19.2, 15876.0], [19.3, 15876.0], [19.4, 15876.0], [19.5, 15878.0], [19.6, 15878.0], [19.7, 15878.0], [19.8, 15881.0], [19.9, 15881.0], [20.0, 15882.0], [20.1, 15882.0], [20.2, 15882.0], [20.3, 15882.0], [20.4, 15882.0], [20.5, 15884.0], [20.6, 15884.0], [20.7, 15884.0], [20.8, 15888.0], [20.9, 15888.0], [21.0, 15895.0], [21.1, 15895.0], [21.2, 15895.0], [21.3, 15906.0], [21.4, 15906.0], [21.5, 15908.0], [21.6, 15908.0], [21.7, 15908.0], [21.8, 15910.0], [21.9, 15910.0], [22.0, 15915.0], [22.1, 15915.0], [22.2, 15915.0], [22.3, 15915.0], [22.4, 15915.0], [22.5, 15917.0], [22.6, 15917.0], [22.7, 15917.0], [22.8, 15919.0], [22.9, 15919.0], [23.0, 15922.0], [23.1, 15922.0], [23.2, 15922.0], [23.3, 15923.0], [23.4, 15923.0], [23.5, 15924.0], [23.6, 15924.0], [23.7, 15924.0], [23.8, 15927.0], [23.9, 15927.0], [24.0, 15928.0], [24.1, 15928.0], [24.2, 15928.0], [24.3, 15933.0], [24.4, 15933.0], [24.5, 15938.0], [24.6, 15938.0], [24.7, 15938.0], [24.8, 15939.0], [24.9, 15939.0], [25.0, 15942.0], [25.1, 15942.0], [25.2, 15942.0], [25.3, 15953.0], [25.4, 15953.0], [25.5, 15957.0], [25.6, 15957.0], [25.7, 15957.0], [25.8, 15963.0], [25.9, 15963.0], [26.0, 15967.0], [26.1, 15967.0], [26.2, 15967.0], [26.3, 15970.0], [26.4, 15970.0], [26.5, 15981.0], [26.6, 15981.0], [26.7, 15981.0], [26.8, 15983.0], [26.9, 15983.0], [27.0, 15985.0], [27.1, 15985.0], [27.2, 15985.0], [27.3, 15993.0], [27.4, 15993.0], [27.5, 15999.0], [27.6, 15999.0], [27.7, 15999.0], [27.8, 16002.0], [27.9, 16002.0], [28.0, 16006.0], [28.1, 16006.0], [28.2, 16006.0], [28.3, 16007.0], [28.4, 16007.0], [28.5, 16025.0], [28.6, 16025.0], [28.7, 16025.0], [28.8, 16027.0], [28.9, 16027.0], [29.0, 16027.0], [29.1, 16027.0], [29.2, 16027.0], [29.3, 16028.0], [29.4, 16028.0], [29.5, 16029.0], [29.6, 16029.0], [29.7, 16029.0], [29.8, 16033.0], [29.9, 16033.0], [30.0, 16044.0], [30.1, 16044.0], [30.2, 16044.0], [30.3, 16047.0], [30.4, 16047.0], [30.5, 16051.0], [30.6, 16051.0], [30.7, 16051.0], [30.8, 16051.0], [30.9, 16051.0], [31.0, 16067.0], [31.1, 16067.0], [31.2, 16067.0], [31.3, 16068.0], [31.4, 16068.0], [31.5, 16069.0], [31.6, 16069.0], [31.7, 16069.0], [31.8, 16069.0], [31.9, 16069.0], [32.0, 16073.0], [32.1, 16073.0], [32.2, 16073.0], [32.3, 16073.0], [32.4, 16073.0], [32.5, 16074.0], [32.6, 16074.0], [32.7, 16074.0], [32.8, 16080.0], [32.9, 16080.0], [33.0, 16081.0], [33.1, 16081.0], [33.2, 16081.0], [33.3, 16090.0], [33.4, 16090.0], [33.5, 16091.0], [33.6, 16091.0], [33.7, 16091.0], [33.8, 16096.0], [33.9, 16096.0], [34.0, 16100.0], [34.1, 16100.0], [34.2, 16100.0], [34.3, 16102.0], [34.4, 16102.0], [34.5, 16103.0], [34.6, 16103.0], [34.7, 16103.0], [34.8, 16104.0], [34.9, 16104.0], [35.0, 16104.0], [35.1, 16104.0], [35.2, 16104.0], [35.3, 16107.0], [35.4, 16107.0], [35.5, 16109.0], [35.6, 16109.0], [35.7, 16109.0], [35.8, 16111.0], [35.9, 16111.0], [36.0, 16111.0], [36.1, 16111.0], [36.2, 16111.0], [36.3, 16112.0], [36.4, 16112.0], [36.5, 16118.0], [36.6, 16118.0], [36.7, 16118.0], [36.8, 16118.0], [36.9, 16118.0], [37.0, 16121.0], [37.1, 16121.0], [37.2, 16121.0], [37.3, 16126.0], [37.4, 16126.0], [37.5, 16127.0], [37.6, 16127.0], [37.7, 16127.0], [37.8, 16128.0], [37.9, 16128.0], [38.0, 16130.0], [38.1, 16130.0], [38.2, 16130.0], [38.3, 16131.0], [38.4, 16131.0], [38.5, 16135.0], [38.6, 16135.0], [38.7, 16135.0], [38.8, 16136.0], [38.9, 16136.0], [39.0, 16136.0], [39.1, 16136.0], [39.2, 16136.0], [39.3, 16137.0], [39.4, 16137.0], [39.5, 16138.0], [39.6, 16138.0], [39.7, 16138.0], [39.8, 16139.0], [39.9, 16139.0], [40.0, 16140.0], [40.1, 16140.0], [40.2, 16140.0], [40.3, 16151.0], [40.4, 16151.0], [40.5, 16161.0], [40.6, 16161.0], [40.7, 16161.0], [40.8, 16163.0], [40.9, 16163.0], [41.0, 16167.0], [41.1, 16167.0], [41.2, 16167.0], [41.3, 16168.0], [41.4, 16168.0], [41.5, 16170.0], [41.6, 16170.0], [41.7, 16170.0], [41.8, 16174.0], [41.9, 16174.0], [42.0, 16178.0], [42.1, 16178.0], [42.2, 16178.0], [42.3, 16184.0], [42.4, 16184.0], [42.5, 16192.0], [42.6, 16192.0], [42.7, 16192.0], [42.8, 16195.0], [42.9, 16195.0], [43.0, 16196.0], [43.1, 16196.0], [43.2, 16196.0], [43.3, 16200.0], [43.4, 16200.0], [43.5, 16201.0], [43.6, 16201.0], [43.7, 16201.0], [43.8, 16203.0], [43.9, 16203.0], [44.0, 16204.0], [44.1, 16204.0], [44.2, 16204.0], [44.3, 16212.0], [44.4, 16212.0], [44.5, 16214.0], [44.6, 16214.0], [44.7, 16214.0], [44.8, 16215.0], [44.9, 16215.0], [45.0, 16217.0], [45.1, 16217.0], [45.2, 16217.0], [45.3, 16222.0], [45.4, 16222.0], [45.5, 16231.0], [45.6, 16231.0], [45.7, 16231.0], [45.8, 16231.0], [45.9, 16231.0], [46.0, 16234.0], [46.1, 16234.0], [46.2, 16234.0], [46.3, 16237.0], [46.4, 16237.0], [46.5, 16238.0], [46.6, 16238.0], [46.7, 16238.0], [46.8, 16241.0], [46.9, 16241.0], [47.0, 16251.0], [47.1, 16251.0], [47.2, 16251.0], [47.3, 16253.0], [47.4, 16253.0], [47.5, 16253.0], [47.6, 16253.0], [47.7, 16253.0], [47.8, 16254.0], [47.9, 16254.0], [48.0, 16282.0], [48.1, 16282.0], [48.2, 16282.0], [48.3, 16282.0], [48.4, 16282.0], [48.5, 16284.0], [48.6, 16284.0], [48.7, 16284.0], [48.8, 16295.0], [48.9, 16295.0], [49.0, 16295.0], [49.1, 16295.0], [49.2, 16295.0], [49.3, 16295.0], [49.4, 16295.0], [49.5, 16296.0], [49.6, 16296.0], [49.7, 16296.0], [49.8, 16297.0], [49.9, 16297.0], [50.0, 16300.0], [50.1, 16300.0], [50.2, 16300.0], [50.3, 16301.0], [50.4, 16301.0], [50.5, 16301.0], [50.6, 16301.0], [50.7, 16301.0], [50.8, 16305.0], [50.9, 16305.0], [51.0, 16307.0], [51.1, 16307.0], [51.2, 16307.0], [51.3, 16312.0], [51.4, 16312.0], [51.5, 16312.0], [51.6, 16312.0], [51.7, 16312.0], [51.8, 16314.0], [51.9, 16314.0], [52.0, 16314.0], [52.1, 16314.0], [52.2, 16314.0], [52.3, 16314.0], [52.4, 16314.0], [52.5, 16314.0], [52.6, 16314.0], [52.7, 16314.0], [52.8, 16315.0], [52.9, 16315.0], [53.0, 16318.0], [53.1, 16318.0], [53.2, 16318.0], [53.3, 16319.0], [53.4, 16319.0], [53.5, 16320.0], [53.6, 16320.0], [53.7, 16320.0], [53.8, 16320.0], [53.9, 16320.0], [54.0, 16320.0], [54.1, 16320.0], [54.2, 16320.0], [54.3, 16321.0], [54.4, 16321.0], [54.5, 16332.0], [54.6, 16332.0], [54.7, 16332.0], [54.8, 16335.0], [54.9, 16335.0], [55.0, 16336.0], [55.1, 16336.0], [55.2, 16336.0], [55.3, 16340.0], [55.4, 16340.0], [55.5, 16344.0], [55.6, 16344.0], [55.7, 16344.0], [55.8, 16348.0], [55.9, 16348.0], [56.0, 16349.0], [56.1, 16349.0], [56.2, 16349.0], [56.3, 16350.0], [56.4, 16350.0], [56.5, 16351.0], [56.6, 16351.0], [56.7, 16351.0], [56.8, 16352.0], [56.9, 16352.0], [57.0, 16355.0], [57.1, 16355.0], [57.2, 16355.0], [57.3, 16355.0], [57.4, 16355.0], [57.5, 16355.0], [57.6, 16355.0], [57.7, 16355.0], [57.8, 16361.0], [57.9, 16361.0], [58.0, 16362.0], [58.1, 16362.0], [58.2, 16362.0], [58.3, 16368.0], [58.4, 16368.0], [58.5, 16369.0], [58.6, 16369.0], [58.7, 16369.0], [58.8, 16374.0], [58.9, 16374.0], [59.0, 16374.0], [59.1, 16374.0], [59.2, 16374.0], [59.3, 16380.0], [59.4, 16380.0], [59.5, 16388.0], [59.6, 16388.0], [59.7, 16388.0], [59.8, 16393.0], [59.9, 16393.0], [60.0, 16394.0], [60.1, 16394.0], [60.2, 16394.0], [60.3, 16409.0], [60.4, 16409.0], [60.5, 16415.0], [60.6, 16415.0], [60.7, 16415.0], [60.8, 16417.0], [60.9, 16417.0], [61.0, 16421.0], [61.1, 16421.0], [61.2, 16421.0], [61.3, 16421.0], [61.4, 16421.0], [61.5, 16422.0], [61.6, 16422.0], [61.7, 16422.0], [61.8, 16424.0], [61.9, 16424.0], [62.0, 16425.0], [62.1, 16425.0], [62.2, 16425.0], [62.3, 16425.0], [62.4, 16425.0], [62.5, 16426.0], [62.6, 16426.0], [62.7, 16426.0], [62.8, 16426.0], [62.9, 16426.0], [63.0, 16433.0], [63.1, 16433.0], [63.2, 16433.0], [63.3, 16441.0], [63.4, 16441.0], [63.5, 16443.0], [63.6, 16443.0], [63.7, 16443.0], [63.8, 16446.0], [63.9, 16446.0], [64.0, 16447.0], [64.1, 16447.0], [64.2, 16447.0], [64.3, 16448.0], [64.4, 16448.0], [64.5, 16452.0], [64.6, 16452.0], [64.7, 16452.0], [64.8, 16453.0], [64.9, 16453.0], [65.0, 16456.0], [65.1, 16456.0], [65.2, 16456.0], [65.3, 16457.0], [65.4, 16457.0], [65.5, 16463.0], [65.6, 16463.0], [65.7, 16463.0], [65.8, 16463.0], [65.9, 16463.0], [66.0, 16464.0], [66.1, 16464.0], [66.2, 16464.0], [66.3, 16466.0], [66.4, 16466.0], [66.5, 16469.0], [66.6, 16469.0], [66.7, 16469.0], [66.8, 16470.0], [66.9, 16470.0], [67.0, 16477.0], [67.1, 16477.0], [67.2, 16477.0], [67.3, 16477.0], [67.4, 16477.0], [67.5, 16477.0], [67.6, 16477.0], [67.7, 16477.0], [67.8, 16478.0], [67.9, 16478.0], [68.0, 16478.0], [68.1, 16478.0], [68.2, 16478.0], [68.3, 16482.0], [68.4, 16482.0], [68.5, 16484.0], [68.6, 16484.0], [68.7, 16484.0], [68.8, 16492.0], [68.9, 16492.0], [69.0, 16493.0], [69.1, 16493.0], [69.2, 16493.0], [69.3, 16493.0], [69.4, 16493.0], [69.5, 16494.0], [69.6, 16494.0], [69.7, 16494.0], [69.8, 16496.0], [69.9, 16496.0], [70.0, 16496.0], [70.1, 16496.0], [70.2, 16496.0], [70.3, 16500.0], [70.4, 16500.0], [70.5, 16508.0], [70.6, 16508.0], [70.7, 16508.0], [70.8, 16509.0], [70.9, 16509.0], [71.0, 16513.0], [71.1, 16513.0], [71.2, 16513.0], [71.3, 16514.0], [71.4, 16514.0], [71.5, 16521.0], [71.6, 16521.0], [71.7, 16521.0], [71.8, 16526.0], [71.9, 16526.0], [72.0, 16527.0], [72.1, 16527.0], [72.2, 16527.0], [72.3, 16528.0], [72.4, 16528.0], [72.5, 16529.0], [72.6, 16529.0], [72.7, 16529.0], [72.8, 16529.0], [72.9, 16529.0], [73.0, 16533.0], [73.1, 16533.0], [73.2, 16533.0], [73.3, 16541.0], [73.4, 16541.0], [73.5, 16547.0], [73.6, 16547.0], [73.7, 16547.0], [73.8, 16553.0], [73.9, 16553.0], [74.0, 16553.0], [74.1, 16553.0], [74.2, 16553.0], [74.3, 16555.0], [74.4, 16555.0], [74.5, 16558.0], [74.6, 16558.0], [74.7, 16558.0], [74.8, 16559.0], [74.9, 16559.0], [75.0, 16564.0], [75.1, 16564.0], [75.2, 16564.0], [75.3, 16566.0], [75.4, 16566.0], [75.5, 16568.0], [75.6, 16568.0], [75.7, 16568.0], [75.8, 16568.0], [75.9, 16568.0], [76.0, 16580.0], [76.1, 16580.0], [76.2, 16580.0], [76.3, 16584.0], [76.4, 16584.0], [76.5, 16589.0], [76.6, 16589.0], [76.7, 16589.0], [76.8, 16600.0], [76.9, 16600.0], [77.0, 16601.0], [77.1, 16601.0], [77.2, 16601.0], [77.3, 16601.0], [77.4, 16601.0], [77.5, 16602.0], [77.6, 16602.0], [77.7, 16602.0], [77.8, 16602.0], [77.9, 16602.0], [78.0, 16604.0], [78.1, 16604.0], [78.2, 16604.0], [78.3, 16608.0], [78.4, 16608.0], [78.5, 16610.0], [78.6, 16610.0], [78.7, 16610.0], [78.8, 16611.0], [78.9, 16611.0], [79.0, 16612.0], [79.1, 16612.0], [79.2, 16612.0], [79.3, 16614.0], [79.4, 16614.0], [79.5, 16615.0], [79.6, 16615.0], [79.7, 16615.0], [79.8, 16616.0], [79.9, 16616.0], [80.0, 16626.0], [80.1, 16626.0], [80.2, 16626.0], [80.3, 16633.0], [80.4, 16633.0], [80.5, 16646.0], [80.6, 16646.0], [80.7, 16646.0], [80.8, 16650.0], [80.9, 16650.0], [81.0, 16654.0], [81.1, 16654.0], [81.2, 16654.0], [81.3, 16654.0], [81.4, 16654.0], [81.5, 16657.0], [81.6, 16657.0], [81.7, 16657.0], [81.8, 16659.0], [81.9, 16659.0], [82.0, 16662.0], [82.1, 16662.0], [82.2, 16662.0], [82.3, 16662.0], [82.4, 16662.0], [82.5, 16671.0], [82.6, 16671.0], [82.7, 16671.0], [82.8, 16672.0], [82.9, 16672.0], [83.0, 16673.0], [83.1, 16673.0], [83.2, 16673.0], [83.3, 16678.0], [83.4, 16678.0], [83.5, 16680.0], [83.6, 16680.0], [83.7, 16680.0], [83.8, 16681.0], [83.9, 16681.0], [84.0, 16687.0], [84.1, 16687.0], [84.2, 16687.0], [84.3, 16689.0], [84.4, 16689.0], [84.5, 16698.0], [84.6, 16698.0], [84.7, 16698.0], [84.8, 16698.0], [84.9, 16698.0], [85.0, 16700.0], [85.1, 16700.0], [85.2, 16700.0], [85.3, 16703.0], [85.4, 16703.0], [85.5, 16707.0], [85.6, 16707.0], [85.7, 16707.0], [85.8, 16709.0], [85.9, 16709.0], [86.0, 16710.0], [86.1, 16710.0], [86.2, 16710.0], [86.3, 16710.0], [86.4, 16710.0], [86.5, 16713.0], [86.6, 16713.0], [86.7, 16713.0], [86.8, 16718.0], [86.9, 16718.0], [87.0, 16721.0], [87.1, 16721.0], [87.2, 16721.0], [87.3, 16722.0], [87.4, 16722.0], [87.5, 16723.0], [87.6, 16723.0], [87.7, 16723.0], [87.8, 16724.0], [87.9, 16724.0], [88.0, 16732.0], [88.1, 16732.0], [88.2, 16732.0], [88.3, 16737.0], [88.4, 16737.0], [88.5, 16747.0], [88.6, 16747.0], [88.7, 16747.0], [88.8, 16752.0], [88.9, 16752.0], [89.0, 16752.0], [89.1, 16752.0], [89.2, 16752.0], [89.3, 16756.0], [89.4, 16756.0], [89.5, 16758.0], [89.6, 16758.0], [89.7, 16758.0], [89.8, 16761.0], [89.9, 16761.0], [90.0, 16767.0], [90.1, 16767.0], [90.2, 16767.0], [90.3, 16767.0], [90.4, 16767.0], [90.5, 16770.0], [90.6, 16770.0], [90.7, 16770.0], [90.8, 16775.0], [90.9, 16775.0], [91.0, 16778.0], [91.1, 16778.0], [91.2, 16778.0], [91.3, 16783.0], [91.4, 16783.0], [91.5, 16789.0], [91.6, 16789.0], [91.7, 16789.0], [91.8, 16790.0], [91.9, 16790.0], [92.0, 16791.0], [92.1, 16791.0], [92.2, 16791.0], [92.3, 16793.0], [92.4, 16793.0], [92.5, 16794.0], [92.6, 16794.0], [92.7, 16794.0], [92.8, 16794.0], [92.9, 16794.0], [93.0, 16797.0], [93.1, 16797.0], [93.2, 16797.0], [93.3, 16797.0], [93.4, 16797.0], [93.5, 16802.0], [93.6, 16802.0], [93.7, 16802.0], [93.8, 16808.0], [93.9, 16808.0], [94.0, 16819.0], [94.1, 16819.0], [94.2, 16819.0], [94.3, 16821.0], [94.4, 16821.0], [94.5, 16824.0], [94.6, 16824.0], [94.7, 16824.0], [94.8, 16825.0], [94.9, 16825.0], [95.0, 16829.0], [95.1, 16829.0], [95.2, 16829.0], [95.3, 16830.0], [95.4, 16830.0], [95.5, 16836.0], [95.6, 16836.0], [95.7, 16836.0], [95.8, 16838.0], [95.9, 16838.0], [96.0, 16841.0], [96.1, 16841.0], [96.2, 16841.0], [96.3, 16850.0], [96.4, 16850.0], [96.5, 16861.0], [96.6, 16861.0], [96.7, 16861.0], [96.8, 16865.0], [96.9, 16865.0], [97.0, 16894.0], [97.1, 16894.0], [97.2, 16894.0], [97.3, 16905.0], [97.4, 16905.0], [97.5, 16909.0], [97.6, 16909.0], [97.7, 16909.0], [97.8, 16912.0], [97.9, 16912.0], [98.0, 16917.0], [98.1, 16917.0], [98.2, 16917.0], [98.3, 16929.0], [98.4, 16929.0], [98.5, 16930.0], [98.6, 16930.0], [98.7, 16930.0], [98.8, 17018.0], [98.9, 17018.0], [99.0, 17043.0], [99.1, 17043.0], [99.2, 17043.0], [99.3, 17046.0], [99.4, 17046.0], [99.5, 17464.0], [99.6, 17464.0], [99.7, 17464.0], [99.8, 17569.0], [99.9, 17569.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 60621.0], [0.1, 60621.0], [0.2, 60621.0], [0.3, 60627.0], [0.4, 60627.0], [0.5, 60628.0], [0.6, 60628.0], [0.7, 60628.0], [0.8, 60628.0], [0.9, 60628.0], [1.0, 60628.0], [1.1, 60628.0], [1.2, 60628.0], [1.3, 60632.0], [1.4, 60632.0], [1.5, 60637.0], [1.6, 60637.0], [1.7, 60637.0], [1.8, 60654.0], [1.9, 60654.0], [2.0, 60676.0], [2.1, 60676.0], [2.2, 60676.0], [2.3, 60685.0], [2.4, 60685.0], [2.5, 60691.0], [2.6, 60691.0], [2.7, 60691.0], [2.8, 60693.0], [2.9, 60693.0], [3.0, 60697.0], [3.1, 60697.0], [3.2, 60697.0], [3.3, 60703.0], [3.4, 60703.0], [3.5, 60706.0], [3.6, 60706.0], [3.7, 60706.0], [3.8, 60709.0], [3.9, 60709.0], [4.0, 60710.0], [4.1, 60710.0], [4.2, 60710.0], [4.3, 60715.0], [4.4, 60715.0], [4.5, 60718.0], [4.6, 60718.0], [4.7, 60718.0], [4.8, 60724.0], [4.9, 60724.0], [5.0, 60724.0], [5.1, 60724.0], [5.2, 60724.0], [5.3, 60727.0], [5.4, 60727.0], [5.5, 60727.0], [5.6, 60727.0], [5.7, 60727.0], [5.8, 60730.0], [5.9, 60730.0], [6.0, 60730.0], [6.1, 60730.0], [6.2, 60730.0], [6.3, 60730.0], [6.4, 60730.0], [6.5, 60731.0], [6.6, 60731.0], [6.7, 60731.0], [6.8, 60733.0], [6.9, 60733.0], [7.0, 60733.0], [7.1, 60733.0], [7.2, 60733.0], [7.3, 60736.0], [7.4, 60736.0], [7.5, 60736.0], [7.6, 60736.0], [7.7, 60736.0], [7.8, 60737.0], [7.9, 60737.0], [8.0, 60739.0], [8.1, 60739.0], [8.2, 60739.0], [8.3, 60742.0], [8.4, 60742.0], [8.5, 60746.0], [8.6, 60746.0], [8.7, 60746.0], [8.8, 60749.0], [8.9, 60749.0], [9.0, 60751.0], [9.1, 60751.0], [9.2, 60751.0], [9.3, 60751.0], [9.4, 60751.0], [9.5, 60754.0], [9.6, 60754.0], [9.7, 60754.0], [9.8, 60754.0], [9.9, 60754.0], [10.0, 60757.0], [10.1, 60757.0], [10.2, 60757.0], [10.3, 60757.0], [10.4, 60757.0], [10.5, 60760.0], [10.6, 60760.0], [10.7, 60760.0], [10.8, 60763.0], [10.9, 60763.0], [11.0, 60763.0], [11.1, 60763.0], [11.2, 60763.0], [11.3, 60766.0], [11.4, 60766.0], [11.5, 60768.0], [11.6, 60768.0], [11.7, 60768.0], [11.8, 60770.0], [11.9, 60770.0], [12.0, 60770.0], [12.1, 60770.0], [12.2, 60770.0], [12.3, 60770.0], [12.4, 60770.0], [12.5, 60770.0], [12.6, 60770.0], [12.7, 60770.0], [12.8, 60770.0], [12.9, 60770.0], [13.0, 60788.0], [13.1, 60788.0], [13.2, 60788.0], [13.3, 60790.0], [13.4, 60790.0], [13.5, 60794.0], [13.6, 60794.0], [13.7, 60794.0], [13.8, 60794.0], [13.9, 60794.0], [14.0, 60797.0], [14.1, 60797.0], [14.2, 60797.0], [14.3, 60800.0], [14.4, 60800.0], [14.5, 60800.0], [14.6, 60800.0], [14.7, 60800.0], [14.8, 60803.0], [14.9, 60803.0], [15.0, 60806.0], [15.1, 60806.0], [15.2, 60806.0], [15.3, 60806.0], [15.4, 60806.0], [15.5, 60809.0], [15.6, 60809.0], [15.7, 60809.0], [15.8, 60812.0], [15.9, 60812.0], [16.0, 60815.0], [16.1, 60815.0], [16.2, 60815.0], [16.3, 60818.0], [16.4, 60818.0], [16.5, 60821.0], [16.6, 60821.0], [16.7, 60821.0], [16.8, 60824.0], [16.9, 60824.0], [17.0, 60827.0], [17.1, 60827.0], [17.2, 60827.0], [17.3, 60828.0], [17.4, 60828.0], [17.5, 60828.0], [17.6, 60828.0], [17.7, 60828.0], [17.8, 60828.0], [17.9, 60828.0], [18.0, 60828.0], [18.1, 60828.0], [18.2, 60828.0], [18.3, 60828.0], [18.4, 60828.0], [18.5, 60844.0], [18.6, 60844.0], [18.7, 60844.0], [18.8, 60845.0], [18.9, 60845.0], [19.0, 60847.0], [19.1, 60847.0], [19.2, 60847.0], [19.3, 60848.0], [19.4, 60848.0], [19.5, 60849.0], [19.6, 60849.0], [19.7, 60849.0], [19.8, 60851.0], [19.9, 60851.0], [20.0, 60852.0], [20.1, 60852.0], [20.2, 60852.0], [20.3, 60855.0], [20.4, 60855.0], [20.5, 60858.0], [20.6, 60858.0], [20.7, 60858.0], [20.8, 60861.0], [20.9, 60861.0], [21.0, 60864.0], [21.1, 60864.0], [21.2, 60864.0], [21.3, 60869.0], [21.4, 60869.0], [21.5, 60871.0], [21.6, 60871.0], [21.7, 60871.0], [21.8, 60871.0], [21.9, 60871.0], [22.0, 60872.0], [22.1, 60872.0], [22.2, 60872.0], [22.3, 60874.0], [22.4, 60874.0], [22.5, 60875.0], [22.6, 60875.0], [22.7, 60875.0], [22.8, 60877.0], [22.9, 60877.0], [23.0, 60877.0], [23.1, 60877.0], [23.2, 60877.0], [23.3, 60880.0], [23.4, 60880.0], [23.5, 60883.0], [23.6, 60883.0], [23.7, 60883.0], [23.8, 60883.0], [23.9, 60883.0], [24.0, 60886.0], [24.1, 60886.0], [24.2, 60886.0], [24.3, 60892.0], [24.4, 60892.0], [24.5, 60895.0], [24.6, 60895.0], [24.7, 60895.0], [24.8, 60895.0], [24.9, 60895.0], [25.0, 60898.0], [25.1, 60898.0], [25.2, 60898.0], [25.3, 60899.0], [25.4, 60899.0], [25.5, 60901.0], [25.6, 60901.0], [25.7, 60901.0], [25.8, 60901.0], [25.9, 60901.0], [26.0, 60904.0], [26.1, 60904.0], [26.2, 60904.0], [26.3, 60905.0], [26.4, 60905.0], [26.5, 60907.0], [26.6, 60907.0], [26.7, 60907.0], [26.8, 60908.0], [26.9, 60908.0], [27.0, 60910.0], [27.1, 60910.0], [27.2, 60910.0], [27.3, 60911.0], [27.4, 60911.0], [27.5, 60913.0], [27.6, 60913.0], [27.7, 60913.0], [27.8, 60920.0], [27.9, 60920.0], [28.0, 60920.0], [28.1, 60920.0], [28.2, 60920.0], [28.3, 60920.0], [28.4, 60920.0], [28.5, 60922.0], [28.6, 60922.0], [28.7, 60922.0], [28.8, 60925.0], [28.9, 60925.0], [29.0, 60928.0], [29.1, 60928.0], [29.2, 60928.0], [29.3, 60931.0], [29.4, 60931.0], [29.5, 60934.0], [29.6, 60934.0], [29.7, 60934.0], [29.8, 60934.0], [29.9, 60934.0], [30.0, 60934.0], [30.1, 60934.0], [30.2, 60934.0], [30.3, 60935.0], [30.4, 60935.0], [30.5, 60937.0], [30.6, 60937.0], [30.7, 60937.0], [30.8, 60940.0], [30.9, 60940.0], [31.0, 60940.0], [31.1, 60940.0], [31.2, 60940.0], [31.3, 60943.0], [31.4, 60943.0], [31.5, 60946.0], [31.6, 60946.0], [31.7, 60946.0], [31.8, 60946.0], [31.9, 60946.0], [32.0, 60949.0], [32.1, 60949.0], [32.2, 60949.0], [32.3, 60958.0], [32.4, 60958.0], [32.5, 60961.0], [32.6, 60961.0], [32.7, 60961.0], [32.8, 60964.0], [32.9, 60964.0], [33.0, 60964.0], [33.1, 60964.0], [33.2, 60964.0], [33.3, 60967.0], [33.4, 60967.0], [33.5, 60970.0], [33.6, 60970.0], [33.7, 60970.0], [33.8, 60973.0], [33.9, 60973.0], [34.0, 60976.0], [34.1, 60976.0], [34.2, 60976.0], [34.3, 60982.0], [34.4, 60982.0], [34.5, 60985.0], [34.6, 60985.0], [34.7, 60985.0], [34.8, 60988.0], [34.9, 60988.0], [35.0, 60991.0], [35.1, 60991.0], [35.2, 60991.0], [35.3, 60997.0], [35.4, 60997.0], [35.5, 61000.0], [35.6, 61000.0], [35.7, 61000.0], [35.8, 61000.0], [35.9, 61000.0], [36.0, 61003.0], [36.1, 61003.0], [36.2, 61003.0], [36.3, 61003.0], [36.4, 61003.0], [36.5, 61006.0], [36.6, 61006.0], [36.7, 61006.0], [36.8, 61009.0], [36.9, 61009.0], [37.0, 61012.0], [37.1, 61012.0], [37.2, 61012.0], [37.3, 61024.0], [37.4, 61024.0], [37.5, 61027.0], [37.6, 61027.0], [37.7, 61027.0], [37.8, 61030.0], [37.9, 61030.0], [38.0, 61033.0], [38.1, 61033.0], [38.2, 61033.0], [38.3, 61036.0], [38.4, 61036.0], [38.5, 61063.0], [38.6, 61063.0], [38.7, 61063.0], [38.8, 61102.0], [38.9, 61102.0], [39.0, 61105.0], [39.1, 61105.0], [39.2, 61105.0], [39.3, 61109.0], [39.4, 61109.0], [39.5, 61109.0], [39.6, 61109.0], [39.7, 61109.0], [39.8, 61115.0], [39.9, 61115.0], [40.0, 61117.0], [40.1, 61117.0], [40.2, 61117.0], [40.3, 61118.0], [40.4, 61118.0], [40.5, 61124.0], [40.6, 61124.0], [40.7, 61124.0], [40.8, 61144.0], [40.9, 61144.0], [41.0, 61145.0], [41.1, 61145.0], [41.2, 61145.0], [41.3, 61147.0], [41.4, 61147.0], [41.5, 61157.0], [41.6, 61157.0], [41.7, 61157.0], [41.8, 61160.0], [41.9, 61160.0], [42.0, 61160.0], [42.1, 61160.0], [42.2, 61160.0], [42.3, 61161.0], [42.4, 61161.0], [42.5, 61163.0], [42.6, 61163.0], [42.7, 61163.0], [42.8, 61169.0], [42.9, 61169.0], [43.0, 61172.0], [43.1, 61172.0], [43.2, 61172.0], [43.3, 61175.0], [43.4, 61175.0], [43.5, 61178.0], [43.6, 61178.0], [43.7, 61178.0], [43.8, 61181.0], [43.9, 61181.0], [44.0, 61196.0], [44.1, 61196.0], [44.2, 61196.0], [44.3, 61196.0], [44.4, 61196.0], [44.5, 61202.0], [44.6, 61202.0], [44.7, 61202.0], [44.8, 61205.0], [44.9, 61205.0], [45.0, 61207.0], [45.1, 61207.0], [45.2, 61207.0], [45.3, 61208.0], [45.4, 61208.0], [45.5, 61210.0], [45.6, 61210.0], [45.7, 61210.0], [45.8, 61214.0], [45.9, 61214.0], [46.0, 61216.0], [46.1, 61216.0], [46.2, 61216.0], [46.3, 61217.0], [46.4, 61217.0], [46.5, 61220.0], [46.6, 61220.0], [46.7, 61220.0], [46.8, 61223.0], [46.9, 61223.0], [47.0, 61224.0], [47.1, 61224.0], [47.2, 61224.0], [47.3, 61226.0], [47.4, 61226.0], [47.5, 61228.0], [47.6, 61228.0], [47.7, 61228.0], [47.8, 61228.0], [47.9, 61228.0], [48.0, 61229.0], [48.1, 61229.0], [48.2, 61229.0], [48.3, 61229.0], [48.4, 61229.0], [48.5, 61230.0], [48.6, 61230.0], [48.7, 61230.0], [48.8, 61231.0], [48.9, 61231.0], [49.0, 61232.0], [49.1, 61232.0], [49.2, 61232.0], [49.3, 61234.0], [49.4, 61234.0], [49.5, 61235.0], [49.6, 61235.0], [49.7, 61235.0], [49.8, 61235.0], [49.9, 61235.0], [50.0, 61236.0], [50.1, 61236.0], [50.2, 61236.0], [50.3, 61236.0], [50.4, 61236.0], [50.5, 61236.0], [50.6, 61236.0], [50.7, 61236.0], [50.8, 61236.0], [50.9, 61236.0], [51.0, 61236.0], [51.1, 61236.0], [51.2, 61236.0], [51.3, 61236.0], [51.4, 61236.0], [51.5, 61237.0], [51.6, 61237.0], [51.7, 61237.0], [51.8, 61237.0], [51.9, 61237.0], [52.0, 61238.0], [52.1, 61238.0], [52.2, 61238.0], [52.3, 61240.0], [52.4, 61240.0], [52.5, 61241.0], [52.6, 61241.0], [52.7, 61241.0], [52.8, 61242.0], [52.9, 61242.0], [53.0, 61244.0], [53.1, 61244.0], [53.2, 61244.0], [53.3, 61247.0], [53.4, 61247.0], [53.5, 61248.0], [53.6, 61248.0], [53.7, 61248.0], [53.8, 61251.0], [53.9, 61251.0], [54.0, 61251.0], [54.1, 61251.0], [54.2, 61251.0], [54.3, 61251.0], [54.4, 61251.0], [54.5, 61256.0], [54.6, 61256.0], [54.7, 61256.0], [54.8, 61259.0], [54.9, 61259.0], [55.0, 61262.0], [55.1, 61262.0], [55.2, 61262.0], [55.3, 61262.0], [55.4, 61262.0], [55.5, 61265.0], [55.6, 61265.0], [55.7, 61265.0], [55.8, 61266.0], [55.9, 61266.0], [56.0, 61271.0], [56.1, 61271.0], [56.2, 61271.0], [56.3, 61272.0], [56.4, 61272.0], [56.5, 61274.0], [56.6, 61274.0], [56.7, 61274.0], [56.8, 61275.0], [56.9, 61275.0], [57.0, 61277.0], [57.1, 61277.0], [57.2, 61277.0], [57.3, 61278.0], [57.4, 61278.0], [57.5, 61282.0], [57.6, 61282.0], [57.7, 61282.0], [57.8, 61282.0], [57.9, 61282.0], [58.0, 61282.0], [58.1, 61282.0], [58.2, 61282.0], [58.3, 61282.0], [58.4, 61282.0], [58.5, 61284.0], [58.6, 61284.0], [58.7, 61284.0], [58.8, 61295.0], [58.9, 61295.0], [59.0, 61297.0], [59.1, 61297.0], [59.2, 61297.0], [59.3, 61304.0], [59.4, 61304.0], [59.5, 61307.0], [59.6, 61307.0], [59.7, 61307.0], [59.8, 61308.0], [59.9, 61308.0], [60.0, 61310.0], [60.1, 61310.0], [60.2, 61310.0], [60.3, 61316.0], [60.4, 61316.0], [60.5, 61319.0], [60.6, 61319.0], [60.7, 61319.0], [60.8, 61325.0], [60.9, 61325.0], [61.0, 61326.0], [61.1, 61326.0], [61.2, 61326.0], [61.3, 61328.0], [61.4, 61328.0], [61.5, 61335.0], [61.6, 61335.0], [61.7, 61335.0], [61.8, 61338.0], [61.9, 61338.0], [62.0, 61338.0], [62.1, 61338.0], [62.2, 61338.0], [62.3, 61341.0], [62.4, 61341.0], [62.5, 61344.0], [62.6, 61344.0], [62.7, 61344.0], [62.8, 61344.0], [62.9, 61344.0], [63.0, 61347.0], [63.1, 61347.0], [63.2, 61347.0], [63.3, 61347.0], [63.4, 61347.0], [63.5, 61347.0], [63.6, 61347.0], [63.7, 61347.0], [63.8, 61350.0], [63.9, 61350.0], [64.0, 61350.0], [64.1, 61350.0], [64.2, 61350.0], [64.3, 61356.0], [64.4, 61356.0], [64.5, 61357.0], [64.6, 61357.0], [64.7, 61357.0], [64.8, 61359.0], [64.9, 61359.0], [65.0, 61359.0], [65.1, 61359.0], [65.2, 61359.0], [65.3, 61362.0], [65.4, 61362.0], [65.5, 61362.0], [65.6, 61362.0], [65.7, 61362.0], [65.8, 61368.0], [65.9, 61368.0], [66.0, 61371.0], [66.1, 61371.0], [66.2, 61371.0], [66.3, 61374.0], [66.4, 61374.0], [66.5, 61383.0], [66.6, 61383.0], [66.7, 61383.0], [66.8, 61386.0], [66.9, 61386.0], [67.0, 61411.0], [67.1, 61411.0], [67.2, 61411.0], [67.3, 61429.0], [67.4, 61429.0], [67.5, 61444.0], [67.6, 61444.0], [67.7, 61444.0], [67.8, 61447.0], [67.9, 61447.0], [68.0, 61449.0], [68.1, 61449.0], [68.2, 61449.0], [68.3, 61450.0], [68.4, 61450.0], [68.5, 61452.0], [68.6, 61452.0], [68.7, 61452.0], [68.8, 61453.0], [68.9, 61453.0], [69.0, 61455.0], [69.1, 61455.0], [69.2, 61455.0], [69.3, 61455.0], [69.4, 61455.0], [69.5, 61456.0], [69.6, 61456.0], [69.7, 61456.0], [69.8, 61458.0], [69.9, 61458.0], [70.0, 61459.0], [70.1, 61459.0], [70.2, 61459.0], [70.3, 61461.0], [70.4, 61461.0], [70.5, 61462.0], [70.6, 61462.0], [70.7, 61462.0], [70.8, 61464.0], [70.9, 61464.0], [71.0, 61467.0], [71.1, 61467.0], [71.2, 61467.0], [71.3, 61467.0], [71.4, 61467.0], [71.5, 61468.0], [71.6, 61468.0], [71.7, 61468.0], [71.8, 61470.0], [71.9, 61470.0], [72.0, 61470.0], [72.1, 61470.0], [72.2, 61470.0], [72.3, 61473.0], [72.4, 61473.0], [72.5, 61479.0], [72.6, 61479.0], [72.7, 61479.0], [72.8, 61480.0], [72.9, 61480.0], [73.0, 61492.0], [73.1, 61492.0], [73.2, 61492.0], [73.3, 61501.0], [73.4, 61501.0], [73.5, 61504.0], [73.6, 61504.0], [73.7, 61504.0], [73.8, 61507.0], [73.9, 61507.0], [74.0, 61507.0], [74.1, 61507.0], [74.2, 61507.0], [74.3, 61507.0], [74.4, 61507.0], [74.5, 61507.0], [74.6, 61507.0], [74.7, 61507.0], [74.8, 61515.0], [74.9, 61515.0], [75.0, 61522.0], [75.1, 61522.0], [75.2, 61522.0], [75.3, 61525.0], [75.4, 61525.0], [75.5, 61528.0], [75.6, 61528.0], [75.7, 61528.0], [75.8, 61531.0], [75.9, 61531.0], [76.0, 61534.0], [76.1, 61534.0], [76.2, 61534.0], [76.3, 61537.0], [76.4, 61537.0], [76.5, 61537.0], [76.6, 61537.0], [76.7, 61537.0], [76.8, 61540.0], [76.9, 61540.0], [77.0, 61546.0], [77.1, 61546.0], [77.2, 61546.0], [77.3, 61552.0], [77.4, 61552.0], [77.5, 61555.0], [77.6, 61555.0], [77.7, 61555.0], [77.8, 61558.0], [77.9, 61558.0], [78.0, 61558.0], [78.1, 61558.0], [78.2, 61558.0], [78.3, 61564.0], [78.4, 61564.0], [78.5, 61594.0], [78.6, 61594.0], [78.7, 61594.0], [78.8, 61600.0], [78.9, 61600.0], [79.0, 61608.0], [79.1, 61608.0], [79.2, 61608.0], [79.3, 61609.0], [79.4, 61609.0], [79.5, 61612.0], [79.6, 61612.0], [79.7, 61612.0], [79.8, 61613.0], [79.9, 61613.0], [80.0, 61614.0], [80.1, 61614.0], [80.2, 61614.0], [80.3, 61615.0], [80.4, 61615.0], [80.5, 61617.0], [80.6, 61617.0], [80.7, 61617.0], [80.8, 61621.0], [80.9, 61621.0], [81.0, 61623.0], [81.1, 61623.0], [81.2, 61623.0], [81.3, 61627.0], [81.4, 61627.0], [81.5, 61627.0], [81.6, 61627.0], [81.7, 61627.0], [81.8, 61629.0], [81.9, 61629.0], [82.0, 61633.0], [82.1, 61633.0], [82.2, 61633.0], [82.3, 61633.0], [82.4, 61633.0], [82.5, 61635.0], [82.6, 61635.0], [82.7, 61635.0], [82.8, 61636.0], [82.9, 61636.0], [83.0, 61638.0], [83.1, 61638.0], [83.2, 61638.0], [83.3, 61641.0], [83.4, 61641.0], [83.5, 61642.0], [83.6, 61642.0], [83.7, 61642.0], [83.8, 61651.0], [83.9, 61651.0], [84.0, 61653.0], [84.1, 61653.0], [84.2, 61653.0], [84.3, 61656.0], [84.4, 61656.0], [84.5, 61659.0], [84.6, 61659.0], [84.7, 61659.0], [84.8, 61660.0], [84.9, 61660.0], [85.0, 61662.0], [85.1, 61662.0], [85.2, 61662.0], [85.3, 61663.0], [85.4, 61663.0], [85.5, 61666.0], [85.6, 61666.0], [85.7, 61666.0], [85.8, 61671.0], [85.9, 61671.0], [86.0, 61682.0], [86.1, 61682.0], [86.2, 61682.0], [86.3, 61688.0], [86.4, 61688.0], [86.5, 61689.0], [86.6, 61689.0], [86.7, 61689.0], [86.8, 61692.0], [86.9, 61692.0], [87.0, 61695.0], [87.1, 61695.0], [87.2, 61695.0], [87.3, 61713.0], [87.4, 61713.0], [87.5, 61726.0], [87.6, 61726.0], [87.7, 61726.0], [87.8, 61728.0], [87.9, 61728.0], [88.0, 61732.0], [88.1, 61732.0], [88.2, 61732.0], [88.3, 61734.0], [88.4, 61734.0], [88.5, 61738.0], [88.6, 61738.0], [88.7, 61738.0], [88.8, 61740.0], [88.9, 61740.0], [89.0, 61743.0], [89.1, 61743.0], [89.2, 61743.0], [89.3, 61746.0], [89.4, 61746.0], [89.5, 61749.0], [89.6, 61749.0], [89.7, 61749.0], [89.8, 61753.0], [89.9, 61753.0], [90.0, 61753.0], [90.1, 61753.0], [90.2, 61753.0], [90.3, 61756.0], [90.4, 61756.0], [90.5, 61757.0], [90.6, 61757.0], [90.7, 61757.0], [90.8, 61758.0], [90.9, 61758.0], [91.0, 61760.0], [91.1, 61760.0], [91.2, 61760.0], [91.3, 61762.0], [91.4, 61762.0], [91.5, 61762.0], [91.6, 61762.0], [91.7, 61762.0], [91.8, 61763.0], [91.9, 61763.0], [92.0, 61763.0], [92.1, 61763.0], [92.2, 61763.0], [92.3, 61765.0], [92.4, 61765.0], [92.5, 61765.0], [92.6, 61765.0], [92.7, 61765.0], [92.8, 61766.0], [92.9, 61766.0], [93.0, 61771.0], [93.1, 61771.0], [93.2, 61771.0], [93.3, 61772.0], [93.4, 61772.0], [93.5, 61774.0], [93.6, 61774.0], [93.7, 61774.0], [93.8, 61775.0], [93.9, 61775.0], [94.0, 61781.0], [94.1, 61781.0], [94.2, 61781.0], [94.3, 61784.0], [94.4, 61784.0], [94.5, 61799.0], [94.6, 61799.0], [94.7, 61799.0], [94.8, 61802.0], [94.9, 61802.0], [95.0, 61804.0], [95.1, 61804.0], [95.2, 61804.0], [95.3, 61808.0], [95.4, 61808.0], [95.5, 61811.0], [95.6, 61811.0], [95.7, 61811.0], [95.8, 61811.0], [95.9, 61811.0], [96.0, 61829.0], [96.1, 61829.0], [96.2, 61829.0], [96.3, 61831.0], [96.4, 61831.0], [96.5, 61832.0], [96.6, 61832.0], [96.7, 61832.0], [96.8, 61835.0], [96.9, 61835.0], [97.0, 61838.0], [97.1, 61838.0], [97.2, 61838.0], [97.3, 61841.0], [97.4, 61841.0], [97.5, 61843.0], [97.6, 61843.0], [97.7, 61843.0], [97.8, 61847.0], [97.9, 61847.0], [98.0, 61849.0], [98.1, 61849.0], [98.2, 61849.0], [98.3, 61850.0], [98.4, 61850.0], [98.5, 61852.0], [98.6, 61852.0], [98.7, 61852.0], [98.8, 61855.0], [98.9, 61855.0], [99.0, 61859.0], [99.1, 61859.0], [99.2, 61859.0], [99.3, 61867.0], [99.4, 61867.0], [99.5, 62488.0], [99.6, 62488.0], [99.7, 62488.0], [99.8, 62639.0], [99.9, 62639.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 6710.0, "series": [{"data": [[0.0, 3128.0], [8200.0, 12.0], [600.0, 15.0], [15100.0, 9.0], [15000.0, 14.0], [1000.0, 271.0], [1100.0, 451.0], [1200.0, 247.0], [1300.0, 70.0], [21000.0, 2.0], [1400.0, 66.0], [1500.0, 21.0], [100.0, 5714.0], [1600.0, 11.0], [2100.0, 5.0], [2200.0, 19.0], [2300.0, 1.0], [3000.0, 20.0], [3100.0, 223.0], [200.0, 6710.0], [3200.0, 70.0], [3300.0, 4.0], [3400.0, 15.0], [4100.0, 2.0], [4200.0, 11.0], [300.0, 971.0], [400.0, 644.0], [7000.0, 617.0], [7100.0, 393.0], [7200.0, 23.0], [7300.0, 103.0], [7400.0, 82.0], [500.0, 56.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[15700.0, 23.0], [15800.0, 46.0], [15600.0, 15.0], [15500.0, 1.0], [16000.0, 25.0], [16300.0, 41.0], [16200.0, 27.0], [16100.0, 37.0], [15900.0, 26.0], [16700.0, 34.0], [16400.0, 40.0], [16600.0, 33.0], [16500.0, 26.0], [16800.0, 15.0], [16900.0, 6.0], [17000.0, 3.0], [17400.0, 1.0], [17500.0, 1.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[61200.0, 59.0], [61100.0, 23.0], [60900.0, 40.0], [61000.0, 13.0], [61300.0, 31.0], [60800.0, 45.0], [61400.0, 25.0], [60600.0, 13.0], [60700.0, 44.0], [61700.0, 30.0], [61500.0, 22.0], [61600.0, 34.0], [61800.0, 19.0], [62600.0, 1.0], [62400.0, 1.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 62600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 14089.0, "series": [{"data": [[0.0, 3149.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 14089.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 3560.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 2.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 212.25000000000009, "minX": 1.61758218E12, "maxY": 356.0607039429735, "series": [{"data": [[1.61758224E12, 212.25000000000009]], "isOverall": false, "label": "CreateRoom-SelectFC-Ready", "isController": false}, {"data": [[1.61758224E12, 356.0607039429735], [1.61758218E12, 270.3532289628179]], "isOverall": false, "label": "JoinServer+ChangeNickName+JoinRoom&Ready", "isController": false}, {"data": [[1.61758224E12, 220.99499999999983]], "isOverall": false, "label": "JoinServer+JoinRoom&waitfor(1min)ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758224E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 26.0, "minX": 5.0, "maxY": 62022.0, "series": [{"data": [[414.0, 15044.5], [415.0, 28.285714285714285], [413.0, 15048.5], [412.0, 30.090909090909093], [411.0, 28.57142857142857], [410.0, 28.545454545454547], [409.0, 28.0], [408.0, 27.875], [407.0, 28.0], [401.0, 29.5], [403.0, 32.0], [402.0, 28.625], [406.0, 28.0], [405.0, 28.18181818181818], [404.0, 35.75], [430.0, 29.0], [431.0, 27.666666666666668], [429.0, 28.0], [428.0, 27.5], [427.0, 28.0], [426.0, 28.0], [425.0, 27.5], [424.0, 27.75], [423.0, 26.0], [417.0, 27.5], [416.0, 27.0], [419.0, 27.0], [418.0, 28.615384615384613], [422.0, 28.0], [421.0, 27.666666666666668], [420.0, 28.42857142857143], [446.0, 32.333333333333336], [447.0, 34.0], [445.0, 32.0], [444.0, 30.166666666666664], [443.0, 30.0], [442.0, 29.285714285714285], [441.0, 29.5], [440.0, 28.25], [439.0, 28.75], [433.0, 28.0], [432.0, 29.5], [435.0, 29.11111111111111], [434.0, 27.5], [438.0, 28.6], [437.0, 28.5], [436.0, 28.22222222222222], [462.0, 51.5], [463.0, 49.5], [461.0, 49.5], [460.0, 48.0], [459.0, 54.666666666666664], [458.0, 52.5], [457.0, 50.5], [456.0, 45.25], [455.0, 45.00000000000001], [449.0, 35.625], [448.0, 36.5], [451.0, 42.6], [450.0, 41.2], [454.0, 41.0], [453.0, 43.0], [452.0, 42.2], [478.0, 56.5], [479.0, 57.0], [477.0, 55.333333333333336], [476.0, 55.0], [475.0, 53.0], [474.0, 52.285714285714285], [473.0, 52.333333333333336], [472.0, 54.0], [471.0, 51.75], [465.0, 48.25], [464.0, 49.333333333333336], [467.0, 53.0], [466.0, 50.83333333333333], [470.0, 51.0], [469.0, 49.0], [468.0, 49.0], [494.0, 72.0], [495.0, 74.0], [493.0, 70.29411764705881], [492.0, 66.57142857142857], [491.0, 68.5], [490.0, 68.07692307692308], [489.0, 73.5], [488.0, 70.16666666666666], [487.0, 71.33333333333333], [481.0, 56.7], [480.0, 57.5], [483.0, 57.77777777777778], [482.0, 59.194444444444436], [486.0, 67.53333333333333], [485.0, 66.0], [484.0, 60.5], [510.0, 94.0], [511.0, 94.0], [509.0, 93.10000000000001], [508.0, 94.5], [507.0, 80.22222222222223], [506.0, 82.5], [505.0, 81.33333333333333], [504.0, 80.02083333333333], [503.0, 72.8], [497.0, 75.5], [496.0, 72.8], [499.0, 75.66666666666667], [498.0, 76.33333333333333], [502.0, 73.42857142857143], [501.0, 75.0], [500.0, 76.0], [540.0, 65.22222222222223], [543.0, 56.25], [529.0, 69.77777777777779], [528.0, 76.0], [531.0, 58.75], [530.0, 61.25], [533.0, 57.333333333333336], [532.0, 3578.0], [542.0, 56.0], [541.0, 61.18181818181818], [539.0, 3583.75], [538.0, 5692.0], [537.0, 5534.777777777777], [536.0, 7094.0], [527.0, 76.33333333333333], [513.0, 91.85714285714286], [512.0, 94.0], [515.0, 84.89473684210525], [514.0, 89.89999999999999], [517.0, 98.0], [516.0, 93.65000000000002], [519.0, 88.66666666666667], [518.0, 92.44444444444444], [526.0, 77.64285714285714], [525.0, 78.0], [524.0, 75.83333333333333], [523.0, 74.0], [522.0, 71.0], [521.0, 69.0], [520.0, 81.46153846153845], [535.0, 7088.0], [534.0, 6212.624999999999], [572.0, 111.66666666666667], [575.0, 112.86666666666666], [561.0, 113.94117647058822], [560.0, 113.0], [563.0, 114.66666666666667], [562.0, 114.72727272727273], [565.0, 112.66666666666667], [564.0, 113.75], [574.0, 111.6923076923077], [573.0, 113.0], [571.0, 114.7], [570.0, 114.66666666666667], [569.0, 114.36363636363637], [568.0, 114.0], [559.0, 112.375], [544.0, 3403.714285714285], [546.0, 2247.9375], [545.0, 7084.0], [548.0, 3571.5], [547.0, 51.5], [550.0, 4118.105263157895], [549.0, 7089.5], [558.0, 112.71428571428571], [557.0, 113.33333333333333], [556.0, 3587.5], [555.0, 7058.666666666667], [554.0, 7062.333333333333], [553.0, 7057.75], [552.0, 4941.75], [567.0, 113.12500000000001], [566.0, 112.0], [604.0, 128.0], [607.0, 2144.666666666667], [593.0, 125.0], [592.0, 125.0], [595.0, 126.0], [594.0, 129.0], [597.0, 129.75], [596.0, 131.00000000000003], [606.0, 395.4347826086956], [605.0, 128.38461538461542], [603.0, 127.35294117647061], [602.0, 129.74999999999997], [601.0, 126.5], [600.0, 127.09090909090908], [591.0, 122.5], [577.0, 111.0], [576.0, 112.46153846153845], [579.0, 117.0], [578.0, 113.73333333333333], [581.0, 119.22222222222223], [580.0, 118.63636363636363], [583.0, 117.75], [582.0, 117.4642857142857], [590.0, 116.72413793103448], [589.0, 112.8], [588.0, 114.55555555555556], [587.0, 115.0], [586.0, 114.9090909090909], [585.0, 114.0], [584.0, 115.77777777777777], [599.0, 130.5], [598.0, 130.06250000000003], [636.0, 113.2], [639.0, 130.25000000000003], [625.0, 150.58823529411762], [624.0, 144.25], [627.0, 150.33333333333334], [626.0, 153.0], [629.0, 148.27272727272728], [628.0, 149.25], [638.0, 2259.352941176471], [637.0, 330.17857142857144], [635.0, 116.5], [634.0, 119.11538461538463], [633.0, 125.57142857142857], [632.0, 127.0], [623.0, 138.10000000000002], [609.0, 140.45000000000005], [608.0, 139.0], [611.0, 144.6153846153846], [610.0, 144.22222222222223], [613.0, 142.5], [612.0, 140.72727272727272], [615.0, 141.625], [614.0, 140.2105263157895], [622.0, 140.0], [621.0, 141.89999999999998], [620.0, 139.75], [619.0, 137.95652173913047], [618.0, 138.9090909090909], [617.0, 139.22222222222226], [616.0, 140.7142857142857], [631.0, 132.96153846153845], [630.0, 143.57142857142856], [668.0, 247.60606060606062], [671.0, 468.49999999999994], [657.0, 3133.8], [656.0, 3125.0], [659.0, 3139.040816326531], [658.0, 3122.4], [661.0, 3169.285714285714], [660.0, 3160.9374999999995], [670.0, 456.0], [669.0, 312.90476190476187], [667.0, 251.2142857142857], [666.0, 254.33333333333334], [665.0, 259.125], [664.0, 264.85714285714283], [655.0, 3130.5294117647054], [641.0, 498.75], [640.0, 127.0], [643.0, 867.0], [642.0, 1928.8999999999999], [645.0, 89.3125], [644.0, 104.12499999999999], [647.0, 81.5], [646.0, 83.0], [654.0, 3118.370370370371], [653.0, 2207.0], [652.0, 2284.0000000000005], [651.0, 70.66666666666667], [650.0, 71.0], [649.0, 76.72727272727273], [648.0, 80.66666666666667], [663.0, 571.0357142857142], [662.0, 2957.388888888889], [700.0, 188.82142857142858], [703.0, 180.047619047619], [689.0, 227.27272727272728], [688.0, 228.55555555555554], [691.0, 215.2173913043478], [690.0, 224.77586206896544], [693.0, 218.42857142857142], [692.0, 218.0], [702.0, 186.6], [701.0, 183.0], [699.0, 194.83333333333331], [698.0, 200.39130434782604], [697.0, 202.83333333333331], [696.0, 200.6153846153846], [687.0, 223.47058823529412], [673.0, 467.27777777777777], [672.0, 470.73913043478257], [675.0, 467.42857142857144], [674.0, 467.0], [677.0, 428.6499999999999], [676.0, 436.0], [679.0, 441.86363636363643], [678.0, 436.00000000000006], [686.0, 223.6], [685.0, 227.9047619047619], [684.0, 231.69230769230768], [683.0, 229.8], [682.0, 342.63157894736844], [681.0, 452.44444444444446], [680.0, 444.66666666666663], [695.0, 205.7027027027027], [694.0, 210.6086956521739], [732.0, 246.75], [735.0, 243.57142857142864], [721.0, 1435.780487804878], [720.0, 2129.1764705882347], [723.0, 7066.3], [722.0, 2859.9500000000003], [725.0, 37.0], [724.0, 6282.555555555556], [734.0, 240.725], [733.0, 244.18181818181816], [731.0, 244.8301886792453], [730.0, 6726.142857142858], [729.0, 7056.0], [728.0, 4937.396226415096], [719.0, 5085.5714285714275], [705.0, 1501.0], [704.0, 3318.9420289855075], [707.0, 2818.105263157895], [706.0, 146.75], [709.0, 4038.4444444444443], [708.0, 4559.629629629629], [711.0, 132.5], [710.0, 1986.5263157894738], [718.0, 5339.75], [717.0, 73.0], [716.0, 1424.9482758620686], [715.0, 3555.1949152542384], [714.0, 123.0], [713.0, 1528.0], [712.0, 128.30769230769232], [727.0, 5306.25], [726.0, 3884.9056603773574], [764.0, 1825.3516483516482], [767.0, 2973.447619047619], [753.0, 5041.421875], [752.0, 109.25], [755.0, 4002.3555555555563], [754.0, 4786.000000000001], [757.0, 84.4], [756.0, 96.69565217391306], [766.0, 1684.9019607843138], [765.0, 3003.153846153846], [763.0, 4929.15625], [762.0, 5793.7037037037035], [761.0, 3998.6799999999994], [760.0, 6212.875], [751.0, 120.2727272727273], [737.0, 250.9], [736.0, 241.21875], [739.0, 246.65384615384616], [738.0, 251.00000000000003], [741.0, 237.55555555555554], [740.0, 523.7931034482764], [743.0, 226.94444444444443], [742.0, 235.4], [750.0, 3695.837398373983], [749.0, 168.5], [748.0, 1730.4444444444443], [747.0, 4378.2], [746.0, 1502.228070175439], [745.0, 232.8947368421053], [744.0, 221.5], [759.0, 7085.0], [758.0, 4511.736842105262], [796.0, 5355.969696969698], [799.0, 315.4172461752431], [785.0, 326.89743589743597], [784.0, 336.0], [787.0, 272.69565217391306], [786.0, 257.61734693877554], [789.0, 5217.515151515152], [788.0, 238.1165048543689], [798.0, 266.8862068965515], [797.0, 843.4987080103359], [795.0, 3683.659863945582], [794.0, 2123.243902439024], [793.0, 2004.2516129032256], [792.0, 1400.6538461538462], [783.0, 2027.3730158730157], [769.0, 28.8], [768.0, 29.0], [771.0, 27.0], [770.0, 28.000000000000004], [773.0, 27.0], [772.0, 27.5], [775.0, 28.0], [774.0, 28.0], [782.0, 27.94736842105263], [781.0, 27.6], [780.0, 27.75], [779.0, 28.24390243902438], [778.0, 28.111111111111114], [777.0, 27.71428571428572], [776.0, 28.250000000000004], [791.0, 2319.2605042016803], [790.0, 6175.469798657719], [826.0, 53.5625], [827.0, 31.0], [829.0, 34.0], [831.0, 203.47826086956522], [815.0, 169.0], [806.0, 206.95305580159442], [800.0, 350.56293072179795], [839.0, 28.0], [835.0, 29.0], [833.0, 34.0], [846.0, 32.0], [847.0, 33.125], [836.0, 29.5], [837.0, 32.25], [838.0, 33.25], [848.0, 33.75], [862.0, 38.666666666666664], [863.0, 40.4], [860.0, 38.0], [861.0, 37.5], [858.0, 34.25], [859.0, 35.33333333333333], [856.0, 33.5], [857.0, 34.333333333333336], [849.0, 32.5], [850.0, 33.75], [851.0, 34.25], [852.0, 33.666666666666664], [853.0, 32.75], [854.0, 33.666666666666664], [855.0, 35.0], [840.0, 28.8], [841.0, 28.0], [842.0, 29.0], [843.0, 28.0], [844.0, 28.0], [845.0, 28.0], [870.0, 48.333333333333336], [865.0, 42.0], [864.0, 43.5], [879.0, 53.0], [877.0, 55.72727272727273], [878.0, 50.75], [875.0, 47.5], [876.0, 48.666666666666664], [866.0, 90.33333333333334], [867.0, 43.666666666666664], [868.0, 46.25], [869.0, 176.68181818181816], [871.0, 47.111111111111114], [888.0, 61.62500000000001], [889.0, 63.0], [890.0, 60.0], [891.0, 62.0], [893.0, 63.8], [894.0, 169.05555555555557], [895.0, 71.75000000000001], [881.0, 54.0], [882.0, 170.81481481481484], [883.0, 56.333333333333336], [885.0, 60.0], [872.0, 50.0], [874.0, 49.5], [901.0, 61.83333333333333], [897.0, 59.666666666666664], [896.0, 65.69230769230771], [910.0, 67.75], [911.0, 69.0], [908.0, 69.5], [909.0, 70.0], [906.0, 68.0], [907.0, 67.0], [898.0, 62.6], [899.0, 63.75], [900.0, 62.25], [903.0, 63.0], [920.0, 145.76190476190476], [921.0, 73.8], [922.0, 76.4], [923.0, 75.4], [924.0, 76.0], [925.0, 77.75], [926.0, 78.25], [927.0, 83.0], [912.0, 68.6], [913.0, 68.33333333333333], [914.0, 160.78571428571433], [915.0, 64.4], [916.0, 66.2], [918.0, 69.0], [917.0, 185.0], [919.0, 71.125], [904.0, 66.0], [905.0, 66.5], [933.0, 75.75], [929.0, 76.33333333333333], [928.0, 78.88888888888889], [942.0, 85.0], [943.0, 88.33333333333333], [940.0, 84.0], [941.0, 84.0], [938.0, 81.0], [939.0, 82.0], [930.0, 76.33333333333333], [931.0, 77.5], [932.0, 76.0], [934.0, 76.33333333333333], [952.0, 86.8], [953.0, 88.0], [955.0, 110.6], [956.0, 92.14285714285714], [957.0, 90.16666666666667], [958.0, 92.2], [959.0, 94.0], [944.0, 86.5], [945.0, 88.0], [946.0, 88.5], [947.0, 86.75], [948.0, 85.77777777777777], [949.0, 86.375], [950.0, 86.5], [951.0, 154.72727272727275], [936.0, 80.0], [937.0, 157.91304347826087], [967.0, 99.2], [961.0, 96.0], [960.0, 142.5], [972.0, 96.33333333333333], [973.0, 94.5], [963.0, 96.25], [962.0, 247.9411764705882], [964.0, 98.0], [966.0, 100.16666666666667], [976.0, 102.8], [989.0, 106.6], [991.0, 129.5], [986.0, 103.42857142857143], [987.0, 117.16666666666667], [984.0, 104.66666666666667], [985.0, 116.0], [977.0, 99.33333333333333], [979.0, 98.25], [980.0, 97.5], [981.0, 99.85714285714285], [982.0, 99.0], [983.0, 102.71428571428571], [968.0, 97.71428571428571], [969.0, 97.8], [970.0, 98.66666666666667], [971.0, 99.0], [997.0, 179.1052631578947], [1005.0, 126.66666666666667], [994.0, 114.375], [993.0, 113.0], [1006.0, 132.0], [996.0, 117.5], [999.0, 120.22222222222223], [1016.0, 130.2], [1017.0, 134.5], [1018.0, 130.5], [1019.0, 129.66666666666666], [1020.0, 132.66666666666666], [1021.0, 136.0], [1022.0, 135.25], [1023.0, 137.22222222222223], [1008.0, 131.75], [1010.0, 143.2857142857143], [1011.0, 135.0], [1012.0, 143.0], [1013.0, 134.42857142857142], [1014.0, 134.25], [1015.0, 132.14285714285714], [1001.0, 121.6], [1002.0, 124.0], [1003.0, 125.0], [1054.0, 174.91666666666663], [1049.0, 183.16666666666666], [1024.0, 139.66666666666666], [1056.0, 166.83333333333334], [1087.0, 155.5], [1085.0, 166.2], [1086.0, 155.0], [1083.0, 541.04], [1084.0, 181.2], [1080.0, 175.75], [1082.0, 178.00000000000003], [1078.0, 176.0], [1079.0, 176.0], [1075.0, 173.16666666666666], [1076.0, 174.0], [1073.0, 169.0], [1030.0, 539.0384615384614], [1074.0, 172.25], [1057.0, 160.8461538461538], [1058.0, 166.24999999999997], [1059.0, 147.0], [1060.0, 149.14285714285714], [1061.0, 149.33333333333331], [1062.0, 150.33333333333334], [1063.0, 153.5], [1065.0, 155.5], [1066.0, 158.2], [1067.0, 160.0], [1068.0, 161.75], [1069.0, 164.25], [1070.0, 168.0], [1055.0, 168.83333333333334], [1046.0, 193.75], [1042.0, 665.421052631579], [1047.0, 192.37499999999997], [1048.0, 184.5], [1050.0, 182.66666666666666], [1052.0, 181.33333333333331], [1053.0, 177.11111111111111], [1099.0, 133.0], [1091.0, 128.6], [1088.0, 139.375], [1119.0, 149.0], [1115.0, 145.25], [1116.0, 566.8095238095239], [1117.0, 147.85714285714286], [1113.0, 151.36363636363637], [1114.0, 146.14285714285714], [1110.0, 145.0], [1111.0, 147.83333333333334], [1108.0, 149.85714285714283], [1109.0, 147.0], [1106.0, 147.66666666666669], [1107.0, 143.66666666666666], [1104.0, 140.25], [1105.0, 142.0], [1089.0, 128.28571428571428], [1090.0, 129.1], [1092.0, 128.5], [1093.0, 128.57142857142858], [1094.0, 126.625], [1095.0, 126.11111111111111], [1096.0, 126.63636363636363], [1097.0, 126.0], [1098.0, 129.0], [1100.0, 133.5], [1101.0, 132.0], [1102.0, 135.5], [1103.0, 137.14285714285714], [1120.0, 144.88888888888889], [1151.0, 160.16666666666666], [1149.0, 158.5], [1150.0, 155.0], [1147.0, 154.0], [1148.0, 155.77777777777777], [1144.0, 149.66666666666666], [1145.0, 2245.0], [1146.0, 151.0], [1142.0, 147.5], [1143.0, 147.88888888888889], [1140.0, 144.66666666666669], [1141.0, 149.2], [1138.0, 144.0], [1139.0, 145.55555555555554], [1136.0, 142.16666666666666], [1137.0, 142.6], [1121.0, 143.33333333333334], [1122.0, 145.0], [1123.0, 403.375], [1124.0, 440.57142857142856], [1125.0, 142.16666666666666], [1126.0, 141.5], [1128.0, 140.85714285714286], [1129.0, 315.3333333333333], [1130.0, 140.2], [1131.0, 141.4], [1132.0, 138.0], [1133.0, 138.0], [1134.0, 1179.5], [1135.0, 140.0], [1156.0, 166.75], [1153.0, 159.2], [1182.0, 165.0], [1183.0, 164.0], [1180.0, 167.33333333333334], [1181.0, 164.20000000000002], [1178.0, 165.25], [1179.0, 166.66666666666666], [1176.0, 165.5], [1177.0, 165.0], [1174.0, 166.0], [1175.0, 166.0], [1172.0, 165.75], [1173.0, 851.0], [1170.0, 168.33333333333334], [1171.0, 167.66666666666666], [1168.0, 164.66666666666666], [1169.0, 165.5], [1154.0, 160.0], [1155.0, 161.66666666666666], [1157.0, 163.0], [1158.0, 164.5], [1159.0, 164.27272727272728], [1160.0, 171.0], [1161.0, 164.0], [1162.0, 163.16666666666666], [1163.0, 164.66666666666666], [1164.0, 167.0], [1165.0, 165.83333333333334], [1166.0, 166.125], [1167.0, 169.0], [1200.0, 379.40910753474725], [1184.0, 165.6], [1185.0, 167.5], [1186.0, 167.0], [1187.0, 167.33333333333331], [1188.0, 168.66666666666666], [1189.0, 170.6], [1190.0, 169.0], [1191.0, 171.5], [1192.0, 171.6], [1193.0, 170.4], [1194.0, 171.75], [1195.0, 169.42857142857142], [1196.0, 170.4], [1197.0, 170.75], [1199.0, 171.6]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[889.4958500000009, 751.0097000000004]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[831.0, 16267.449999999999], [830.0, 16177.8], [806.0, 17178.333333333336], [894.0, 16624.0], [882.0, 16367.846153846154], [869.0, 16304.837837837837], [868.0, 15864.0], [920.0, 16441.5], [914.0, 16225.176470588234], [913.0, 16588.333333333332], [951.0, 16183.142857142857], [937.0, 16394.470588235294], [962.0, 16424.81818181818], [997.0, 16333.133333333335], [996.0, 16208.4], [995.0, 15927.666666666666], [994.0, 16495.75], [992.0, 16124.125], [1083.0, 16247.08], [1058.0, 16269.812500000002], [1042.0, 16275.166666666666], [1030.0, 16248.318181818182], [1029.0, 16219.000000000002], [1028.0, 16306.5], [1027.0, 16162.5], [1144.0, 16778.0], [1151.0, 15618.0], [1150.0, 16347.5], [1146.0, 16068.0], [1143.0, 15917.0], [1142.0, 15642.0], [1141.0, 16234.0], [1140.0, 16002.0], [1138.0, 16752.0], [1137.0, 15970.666666666666], [1136.0, 16216.0], [1116.0, 16203.51851851852], [1114.0, 16678.0], [1111.0, 16044.5], [1110.0, 16114.0], [1183.0, 16011.333333333334], [1200.0, 16249.1875], [1166.0, 16426.0], [1165.0, 16722.0], [1164.0, 16142.5], [1162.0, 16330.0], [1161.0, 15801.0], [1160.0, 15967.0], [1158.0, 15888.0], [1157.0, 16241.0], [1156.0, 16233.0], [1155.0, 16382.0], [1154.0, 15910.0], [1153.0, 16267.0], [1185.0, 16313.0], [1184.0, 16161.0], [1182.0, 15910.5], [1181.0, 16320.5], [1180.0, 15881.0], [1179.0, 15993.2], [1178.0, 15758.5], [1177.0, 16654.0], [1174.0, 16470.0], [1173.0, 16602.0], [1171.0, 16047.42857142857], [1170.0, 16360.0], [1168.0, 16394.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1012.2374999999998, 16276.510000000004]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[130.0, 61284.91428571429], [149.0, 61125.73684210527], [196.0, 61192.391304347824], [195.0, 60768.0], [254.0, 61122.40625], [253.0, 61184.884615384624], [284.0, 61149.9], [305.0, 61089.761904761916], [5.0, 62022.0], [336.0, 61173.87096774193], [380.0, 61084.454545454544], [95.0, 61487.926470588216], [400.0, 61159.249999999985], [27.0, 61185.99999999999], [7.0, 61196.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}, {"data": [[220.99499999999983, 61226.942499999976]], "isOverall": false, "label": "JoinRoom&Wait60sec-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61758218E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758224E12, 0.0], [1.61758218E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61758224E12, 0.0], [1.61758218E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758224E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 121.94569471624276, "minX": 1.61758218E12, "maxY": 61226.942499999976, "series": [{"data": [[1.61758224E12, 822.6184562263309], [1.61758218E12, 121.94569471624276]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758224E12, 16276.510000000004]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61758224E12, 61226.942499999976]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758224E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758218E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758224E12, 0.0], [1.61758218E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758224E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61758224E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758224E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758218E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758224E12, 0.0], [1.61758218E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758224E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61758224E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758224E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61758218E12, "maxY": 62639.0, "series": [{"data": [[1.61758224E12, 62639.0], [1.61758218E12, 1044.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61758224E12, 7059.0], [1.61758218E12, 171.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61758224E12, 61245.350000000006], [1.61758218E12, 1036.1]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61758224E12, 7383.5], [1.61758218E12, 178.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61758224E12, 26.0], [1.61758218E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61758224E12, 232.0], [1.61758218E12, 104.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758224E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 75.0, "maxY": 61300.5, "series": [{"data": [[534.0, 57.0], [716.0, 119.5], [723.0, 178.0], [843.0, 85.0], [1020.0, 225.0], [1092.0, 277.0], [1201.0, 140.0], [1157.0, 216.0], [75.0, 28.0], [1161.0, 130.0], [1225.0, 248.0], [1291.0, 234.0], [1363.0, 200.0], [1388.0, 238.0], [1435.0, 231.0], [1429.0, 259.0], [1701.0, 171.0], [112.0, 29.0], [176.0, 253.0], [196.0, 61300.5], [204.0, 61107.0], [258.0, 28.0], [338.0, 360.0], [378.0, 85.0], [385.0, 330.0], [399.0, 7049.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1388.0, 21057.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1701.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 75.0, "maxY": 4.9E-324, "series": [{"data": [[534.0, 0.0], [716.0, 0.0], [723.0, 0.0], [843.0, 0.0], [1020.0, 0.0], [1092.0, 0.0], [1201.0, 0.0], [1157.0, 0.0], [75.0, 0.0], [1161.0, 0.0], [1225.0, 0.0], [1291.0, 0.0], [1363.0, 0.0], [1388.0, 0.0], [1435.0, 0.0], [1429.0, 0.0], [1701.0, 0.0], [112.0, 0.0], [176.0, 0.0], [196.0, 0.0], [204.0, 0.0], [258.0, 0.0], [338.0, 0.0], [378.0, 0.0], [385.0, 0.0], [399.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1388.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1701.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 54.06666666666667, "minX": 1.61758218E12, "maxY": 292.6, "series": [{"data": [[1.61758224E12, 292.6], [1.61758218E12, 54.06666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758224E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61758218E12, "maxY": 312.56666666666666, "series": [{"data": [[1.61758224E12, 312.56666666666666], [1.61758218E12, 34.06666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61758224E12, 0.03333333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758224E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61758218E12, "maxY": 299.23333333333335, "series": [{"data": [[1.61758224E12, 6.666666666666667]], "isOverall": false, "label": "JoinRoom&Wait60sec-success", "isController": false}, {"data": [[1.61758224E12, 6.666666666666667]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61758224E12, 299.23333333333335], [1.61758218E12, 34.06666666666667]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61758224E12, 0.03333333333333333]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758224E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61758218E12, "maxY": 312.56666666666666, "series": [{"data": [[1.61758224E12, 312.56666666666666], [1.61758218E12, 34.06666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61758224E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758224E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

