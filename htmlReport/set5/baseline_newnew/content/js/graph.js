/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 60120.0, "series": [{"data": [[0.0, 60026.0], [0.1, 60026.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60026.0], [1.6, 60027.0], [1.7, 60027.0], [1.8, 60027.0], [1.9, 60027.0], [2.0, 60027.0], [2.1, 60027.0], [2.2, 60027.0], [2.3, 60027.0], [2.4, 60027.0], [2.5, 60027.0], [2.6, 60027.0], [2.7, 60027.0], [2.8, 60027.0], [2.9, 60027.0], [3.0, 60027.0], [3.1, 60027.0], [3.2, 60027.0], [3.3, 60027.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60028.0], [12.4, 60028.0], [12.5, 60028.0], [12.6, 60028.0], [12.7, 60028.0], [12.8, 60028.0], [12.9, 60028.0], [13.0, 60028.0], [13.1, 60028.0], [13.2, 60028.0], [13.3, 60028.0], [13.4, 60028.0], [13.5, 60028.0], [13.6, 60028.0], [13.7, 60028.0], [13.8, 60028.0], [13.9, 60028.0], [14.0, 60028.0], [14.1, 60028.0], [14.2, 60028.0], [14.3, 60028.0], [14.4, 60028.0], [14.5, 60028.0], [14.6, 60028.0], [14.7, 60028.0], [14.8, 60028.0], [14.9, 60028.0], [15.0, 60028.0], [15.1, 60028.0], [15.2, 60028.0], [15.3, 60028.0], [15.4, 60028.0], [15.5, 60028.0], [15.6, 60028.0], [15.7, 60028.0], [15.8, 60028.0], [15.9, 60028.0], [16.0, 60028.0], [16.1, 60028.0], [16.2, 60028.0], [16.3, 60028.0], [16.4, 60028.0], [16.5, 60028.0], [16.6, 60028.0], [16.7, 60028.0], [16.8, 60028.0], [16.9, 60028.0], [17.0, 60028.0], [17.1, 60028.0], [17.2, 60028.0], [17.3, 60028.0], [17.4, 60028.0], [17.5, 60028.0], [17.6, 60028.0], [17.7, 60028.0], [17.8, 60028.0], [17.9, 60028.0], [18.0, 60028.0], [18.1, 60028.0], [18.2, 60028.0], [18.3, 60028.0], [18.4, 60028.0], [18.5, 60028.0], [18.6, 60028.0], [18.7, 60028.0], [18.8, 60028.0], [18.9, 60028.0], [19.0, 60028.0], [19.1, 60028.0], [19.2, 60028.0], [19.3, 60028.0], [19.4, 60028.0], [19.5, 60028.0], [19.6, 60028.0], [19.7, 60028.0], [19.8, 60028.0], [19.9, 60028.0], [20.0, 60028.0], [20.1, 60028.0], [20.2, 60028.0], [20.3, 60028.0], [20.4, 60028.0], [20.5, 60028.0], [20.6, 60028.0], [20.7, 60028.0], [20.8, 60028.0], [20.9, 60028.0], [21.0, 60028.0], [21.1, 60028.0], [21.2, 60028.0], [21.3, 60028.0], [21.4, 60028.0], [21.5, 60028.0], [21.6, 60028.0], [21.7, 60028.0], [21.8, 60028.0], [21.9, 60028.0], [22.0, 60028.0], [22.1, 60028.0], [22.2, 60028.0], [22.3, 60028.0], [22.4, 60028.0], [22.5, 60028.0], [22.6, 60028.0], [22.7, 60028.0], [22.8, 60028.0], [22.9, 60028.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60028.0], [30.5, 60028.0], [30.6, 60028.0], [30.7, 60028.0], [30.8, 60028.0], [30.9, 60028.0], [31.0, 60028.0], [31.1, 60028.0], [31.2, 60028.0], [31.3, 60028.0], [31.4, 60028.0], [31.5, 60028.0], [31.6, 60028.0], [31.7, 60028.0], [31.8, 60028.0], [31.9, 60028.0], [32.0, 60028.0], [32.1, 60028.0], [32.2, 60028.0], [32.3, 60028.0], [32.4, 60028.0], [32.5, 60028.0], [32.6, 60028.0], [32.7, 60028.0], [32.8, 60028.0], [32.9, 60028.0], [33.0, 60028.0], [33.1, 60028.0], [33.2, 60028.0], [33.3, 60028.0], [33.4, 60028.0], [33.5, 60028.0], [33.6, 60028.0], [33.7, 60028.0], [33.8, 60028.0], [33.9, 60028.0], [34.0, 60028.0], [34.1, 60028.0], [34.2, 60028.0], [34.3, 60028.0], [34.4, 60028.0], [34.5, 60028.0], [34.6, 60028.0], [34.7, 60028.0], [34.8, 60029.0], [34.9, 60029.0], [35.0, 60029.0], [35.1, 60029.0], [35.2, 60029.0], [35.3, 60029.0], [35.4, 60029.0], [35.5, 60029.0], [35.6, 60029.0], [35.7, 60029.0], [35.8, 60029.0], [35.9, 60029.0], [36.0, 60029.0], [36.1, 60029.0], [36.2, 60029.0], [36.3, 60029.0], [36.4, 60029.0], [36.5, 60029.0], [36.6, 60029.0], [36.7, 60029.0], [36.8, 60029.0], [36.9, 60029.0], [37.0, 60029.0], [37.1, 60029.0], [37.2, 60029.0], [37.3, 60029.0], [37.4, 60029.0], [37.5, 60029.0], [37.6, 60029.0], [37.7, 60029.0], [37.8, 60029.0], [37.9, 60029.0], [38.0, 60029.0], [38.1, 60029.0], [38.2, 60029.0], [38.3, 60029.0], [38.4, 60029.0], [38.5, 60029.0], [38.6, 60029.0], [38.7, 60029.0], [38.8, 60029.0], [38.9, 60029.0], [39.0, 60029.0], [39.1, 60029.0], [39.2, 60029.0], [39.3, 60029.0], [39.4, 60029.0], [39.5, 60029.0], [39.6, 60029.0], [39.7, 60029.0], [39.8, 60029.0], [39.9, 60029.0], [40.0, 60029.0], [40.1, 60029.0], [40.2, 60029.0], [40.3, 60029.0], [40.4, 60029.0], [40.5, 60029.0], [40.6, 60029.0], [40.7, 60029.0], [40.8, 60029.0], [40.9, 60029.0], [41.0, 60029.0], [41.1, 60029.0], [41.2, 60029.0], [41.3, 60029.0], [41.4, 60029.0], [41.5, 60029.0], [41.6, 60029.0], [41.7, 60029.0], [41.8, 60029.0], [41.9, 60029.0], [42.0, 60029.0], [42.1, 60029.0], [42.2, 60029.0], [42.3, 60029.0], [42.4, 60029.0], [42.5, 60029.0], [42.6, 60029.0], [42.7, 60029.0], [42.8, 60029.0], [42.9, 60029.0], [43.0, 60029.0], [43.1, 60029.0], [43.2, 60029.0], [43.3, 60029.0], [43.4, 60029.0], [43.5, 60029.0], [43.6, 60029.0], [43.7, 60029.0], [43.8, 60029.0], [43.9, 60029.0], [44.0, 60029.0], [44.1, 60029.0], [44.2, 60029.0], [44.3, 60029.0], [44.4, 60029.0], [44.5, 60029.0], [44.6, 60029.0], [44.7, 60029.0], [44.8, 60029.0], [44.9, 60029.0], [45.0, 60029.0], [45.1, 60029.0], [45.2, 60029.0], [45.3, 60029.0], [45.4, 60029.0], [45.5, 60029.0], [45.6, 60029.0], [45.7, 60029.0], [45.8, 60029.0], [45.9, 60029.0], [46.0, 60029.0], [46.1, 60029.0], [46.2, 60029.0], [46.3, 60029.0], [46.4, 60029.0], [46.5, 60029.0], [46.6, 60029.0], [46.7, 60029.0], [46.8, 60029.0], [46.9, 60029.0], [47.0, 60029.0], [47.1, 60029.0], [47.2, 60029.0], [47.3, 60029.0], [47.4, 60029.0], [47.5, 60029.0], [47.6, 60029.0], [47.7, 60029.0], [47.8, 60029.0], [47.9, 60029.0], [48.0, 60029.0], [48.1, 60029.0], [48.2, 60029.0], [48.3, 60029.0], [48.4, 60029.0], [48.5, 60029.0], [48.6, 60029.0], [48.7, 60029.0], [48.8, 60029.0], [48.9, 60029.0], [49.0, 60029.0], [49.1, 60029.0], [49.2, 60029.0], [49.3, 60029.0], [49.4, 60029.0], [49.5, 60029.0], [49.6, 60029.0], [49.7, 60029.0], [49.8, 60029.0], [49.9, 60029.0], [50.0, 60029.0], [50.1, 60029.0], [50.2, 60029.0], [50.3, 60029.0], [50.4, 60029.0], [50.5, 60029.0], [50.6, 60029.0], [50.7, 60029.0], [50.8, 60029.0], [50.9, 60029.0], [51.0, 60029.0], [51.1, 60029.0], [51.2, 60029.0], [51.3, 60029.0], [51.4, 60029.0], [51.5, 60029.0], [51.6, 60029.0], [51.7, 60029.0], [51.8, 60029.0], [51.9, 60029.0], [52.0, 60029.0], [52.1, 60029.0], [52.2, 60029.0], [52.3, 60030.0], [52.4, 60030.0], [52.5, 60030.0], [52.6, 60030.0], [52.7, 60030.0], [52.8, 60030.0], [52.9, 60030.0], [53.0, 60030.0], [53.1, 60030.0], [53.2, 60030.0], [53.3, 60030.0], [53.4, 60030.0], [53.5, 60030.0], [53.6, 60030.0], [53.7, 60030.0], [53.8, 60030.0], [53.9, 60030.0], [54.0, 60030.0], [54.1, 60030.0], [54.2, 60030.0], [54.3, 60030.0], [54.4, 60030.0], [54.5, 60030.0], [54.6, 60030.0], [54.7, 60030.0], [54.8, 60030.0], [54.9, 60030.0], [55.0, 60030.0], [55.1, 60030.0], [55.2, 60030.0], [55.3, 60030.0], [55.4, 60030.0], [55.5, 60030.0], [55.6, 60030.0], [55.7, 60030.0], [55.8, 60030.0], [55.9, 60030.0], [56.0, 60030.0], [56.1, 60030.0], [56.2, 60030.0], [56.3, 60030.0], [56.4, 60030.0], [56.5, 60030.0], [56.6, 60030.0], [56.7, 60030.0], [56.8, 60030.0], [56.9, 60030.0], [57.0, 60030.0], [57.1, 60030.0], [57.2, 60030.0], [57.3, 60030.0], [57.4, 60030.0], [57.5, 60030.0], [57.6, 60030.0], [57.7, 60030.0], [57.8, 60030.0], [57.9, 60030.0], [58.0, 60030.0], [58.1, 60030.0], [58.2, 60031.0], [58.3, 60031.0], [58.4, 60031.0], [58.5, 60031.0], [58.6, 60031.0], [58.7, 60031.0], [58.8, 60031.0], [58.9, 60031.0], [59.0, 60031.0], [59.1, 60031.0], [59.2, 60031.0], [59.3, 60031.0], [59.4, 60031.0], [59.5, 60031.0], [59.6, 60031.0], [59.7, 60031.0], [59.8, 60031.0], [59.9, 60031.0], [60.0, 60031.0], [60.1, 60031.0], [60.2, 60031.0], [60.3, 60031.0], [60.4, 60031.0], [60.5, 60031.0], [60.6, 60031.0], [60.7, 60031.0], [60.8, 60031.0], [60.9, 60031.0], [61.0, 60031.0], [61.1, 60031.0], [61.2, 60031.0], [61.3, 60031.0], [61.4, 60031.0], [61.5, 60031.0], [61.6, 60031.0], [61.7, 60031.0], [61.8, 60031.0], [61.9, 60031.0], [62.0, 60031.0], [62.1, 60031.0], [62.2, 60031.0], [62.3, 60031.0], [62.4, 60031.0], [62.5, 60031.0], [62.6, 60031.0], [62.7, 60031.0], [62.8, 60032.0], [62.9, 60032.0], [63.0, 60032.0], [63.1, 60032.0], [63.2, 60032.0], [63.3, 60032.0], [63.4, 60032.0], [63.5, 60032.0], [63.6, 60032.0], [63.7, 60032.0], [63.8, 60032.0], [63.9, 60032.0], [64.0, 60032.0], [64.1, 60032.0], [64.2, 60032.0], [64.3, 60032.0], [64.4, 60032.0], [64.5, 60032.0], [64.6, 60032.0], [64.7, 60032.0], [64.8, 60032.0], [64.9, 60032.0], [65.0, 60032.0], [65.1, 60032.0], [65.2, 60032.0], [65.3, 60032.0], [65.4, 60032.0], [65.5, 60032.0], [65.6, 60032.0], [65.7, 60032.0], [65.8, 60032.0], [65.9, 60033.0], [66.0, 60033.0], [66.1, 60033.0], [66.2, 60033.0], [66.3, 60033.0], [66.4, 60033.0], [66.5, 60033.0], [66.6, 60033.0], [66.7, 60033.0], [66.8, 60033.0], [66.9, 60033.0], [67.0, 60033.0], [67.1, 60033.0], [67.2, 60033.0], [67.3, 60033.0], [67.4, 60033.0], [67.5, 60033.0], [67.6, 60033.0], [67.7, 60033.0], [67.8, 60033.0], [67.9, 60033.0], [68.0, 60033.0], [68.1, 60033.0], [68.2, 60033.0], [68.3, 60033.0], [68.4, 60033.0], [68.5, 60033.0], [68.6, 60033.0], [68.7, 60033.0], [68.8, 60033.0], [68.9, 60033.0], [69.0, 60033.0], [69.1, 60033.0], [69.2, 60033.0], [69.3, 60034.0], [69.4, 60034.0], [69.5, 60034.0], [69.6, 60034.0], [69.7, 60034.0], [69.8, 60034.0], [69.9, 60034.0], [70.0, 60034.0], [70.1, 60034.0], [70.2, 60034.0], [70.3, 60034.0], [70.4, 60034.0], [70.5, 60034.0], [70.6, 60034.0], [70.7, 60034.0], [70.8, 60034.0], [70.9, 60034.0], [71.0, 60034.0], [71.1, 60034.0], [71.2, 60034.0], [71.3, 60035.0], [71.4, 60035.0], [71.5, 60035.0], [71.6, 60035.0], [71.7, 60035.0], [71.8, 60035.0], [71.9, 60035.0], [72.0, 60035.0], [72.1, 60035.0], [72.2, 60035.0], [72.3, 60035.0], [72.4, 60035.0], [72.5, 60035.0], [72.6, 60035.0], [72.7, 60035.0], [72.8, 60035.0], [72.9, 60035.0], [73.0, 60035.0], [73.1, 60035.0], [73.2, 60035.0], [73.3, 60035.0], [73.4, 60035.0], [73.5, 60035.0], [73.6, 60036.0], [73.7, 60036.0], [73.8, 60036.0], [73.9, 60036.0], [74.0, 60036.0], [74.1, 60036.0], [74.2, 60036.0], [74.3, 60036.0], [74.4, 60036.0], [74.5, 60036.0], [74.6, 60036.0], [74.7, 60036.0], [74.8, 60036.0], [74.9, 60036.0], [75.0, 60036.0], [75.1, 60036.0], [75.2, 60036.0], [75.3, 60036.0], [75.4, 60036.0], [75.5, 60036.0], [75.6, 60036.0], [75.7, 60036.0], [75.8, 60037.0], [75.9, 60037.0], [76.0, 60037.0], [76.1, 60037.0], [76.2, 60037.0], [76.3, 60037.0], [76.4, 60037.0], [76.5, 60037.0], [76.6, 60037.0], [76.7, 60037.0], [76.8, 60037.0], [76.9, 60037.0], [77.0, 60037.0], [77.1, 60037.0], [77.2, 60037.0], [77.3, 60037.0], [77.4, 60037.0], [77.5, 60037.0], [77.6, 60037.0], [77.7, 60037.0], [77.8, 60037.0], [77.9, 60037.0], [78.0, 60037.0], [78.1, 60037.0], [78.2, 60038.0], [78.3, 60038.0], [78.4, 60038.0], [78.5, 60038.0], [78.6, 60038.0], [78.7, 60038.0], [78.8, 60038.0], [78.9, 60038.0], [79.0, 60038.0], [79.1, 60038.0], [79.2, 60038.0], [79.3, 60038.0], [79.4, 60038.0], [79.5, 60038.0], [79.6, 60038.0], [79.7, 60038.0], [79.8, 60038.0], [79.9, 60038.0], [80.0, 60038.0], [80.1, 60038.0], [80.2, 60039.0], [80.3, 60039.0], [80.4, 60039.0], [80.5, 60039.0], [80.6, 60039.0], [80.7, 60039.0], [80.8, 60039.0], [80.9, 60039.0], [81.0, 60039.0], [81.1, 60039.0], [81.2, 60039.0], [81.3, 60039.0], [81.4, 60039.0], [81.5, 60039.0], [81.6, 60039.0], [81.7, 60039.0], [81.8, 60039.0], [81.9, 60039.0], [82.0, 60039.0], [82.1, 60039.0], [82.2, 60040.0], [82.3, 60040.0], [82.4, 60040.0], [82.5, 60040.0], [82.6, 60040.0], [82.7, 60040.0], [82.8, 60040.0], [82.9, 60040.0], [83.0, 60040.0], [83.1, 60040.0], [83.2, 60040.0], [83.3, 60040.0], [83.4, 60040.0], [83.5, 60040.0], [83.6, 60040.0], [83.7, 60040.0], [83.8, 60040.0], [83.9, 60040.0], [84.0, 60040.0], [84.1, 60040.0], [84.2, 60041.0], [84.3, 60041.0], [84.4, 60041.0], [84.5, 60041.0], [84.6, 60041.0], [84.7, 60041.0], [84.8, 60041.0], [84.9, 60041.0], [85.0, 60041.0], [85.1, 60041.0], [85.2, 60041.0], [85.3, 60041.0], [85.4, 60041.0], [85.5, 60041.0], [85.6, 60041.0], [85.7, 60041.0], [85.8, 60041.0], [85.9, 60042.0], [86.0, 60042.0], [86.1, 60042.0], [86.2, 60042.0], [86.3, 60042.0], [86.4, 60042.0], [86.5, 60042.0], [86.6, 60042.0], [86.7, 60042.0], [86.8, 60042.0], [86.9, 60042.0], [87.0, 60042.0], [87.1, 60042.0], [87.2, 60042.0], [87.3, 60042.0], [87.4, 60042.0], [87.5, 60042.0], [87.6, 60043.0], [87.7, 60043.0], [87.8, 60043.0], [87.9, 60043.0], [88.0, 60043.0], [88.1, 60043.0], [88.2, 60043.0], [88.3, 60043.0], [88.4, 60043.0], [88.5, 60043.0], [88.6, 60043.0], [88.7, 60043.0], [88.8, 60043.0], [88.9, 60043.0], [89.0, 60043.0], [89.1, 60043.0], [89.2, 60044.0], [89.3, 60044.0], [89.4, 60044.0], [89.5, 60044.0], [89.6, 60044.0], [89.7, 60044.0], [89.8, 60044.0], [89.9, 60044.0], [90.0, 60044.0], [90.1, 60044.0], [90.2, 60044.0], [90.3, 60044.0], [90.4, 60044.0], [90.5, 60044.0], [90.6, 60044.0], [90.7, 60044.0], [90.8, 60045.0], [90.9, 60045.0], [91.0, 60045.0], [91.1, 60045.0], [91.2, 60045.0], [91.3, 60045.0], [91.4, 60045.0], [91.5, 60046.0], [91.6, 60046.0], [91.7, 60046.0], [91.8, 60046.0], [91.9, 60047.0], [92.0, 60047.0], [92.1, 60047.0], [92.2, 60048.0], [92.3, 60049.0], [92.4, 60049.0], [92.5, 60050.0], [92.6, 60050.0], [92.7, 60050.0], [92.8, 60051.0], [92.9, 60052.0], [93.0, 60053.0], [93.1, 60053.0], [93.2, 60056.0], [93.3, 60061.0], [93.4, 60061.0], [93.5, 60069.0], [93.6, 60069.0], [93.7, 60069.0], [93.8, 60074.0], [93.9, 60076.0], [94.0, 60076.0], [94.1, 60076.0], [94.2, 60076.0], [94.3, 60078.0], [94.4, 60078.0], [94.5, 60078.0], [94.6, 60080.0], [94.7, 60080.0], [94.8, 60080.0], [94.9, 60082.0], [95.0, 60082.0], [95.1, 60082.0], [95.2, 60082.0], [95.3, 60083.0], [95.4, 60083.0], [95.5, 60083.0], [95.6, 60083.0], [95.7, 60083.0], [95.8, 60084.0], [95.9, 60085.0], [96.0, 60087.0], [96.1, 60087.0], [96.2, 60089.0], [96.3, 60095.0], [96.4, 60095.0], [96.5, 60097.0], [96.6, 60097.0], [96.7, 60097.0], [96.8, 60097.0], [96.9, 60098.0], [97.0, 60100.0], [97.1, 60100.0], [97.2, 60100.0], [97.3, 60100.0], [97.4, 60100.0], [97.5, 60101.0], [97.6, 60102.0], [97.7, 60102.0], [97.8, 60103.0], [97.9, 60104.0], [98.0, 60104.0], [98.1, 60104.0], [98.2, 60105.0], [98.3, 60106.0], [98.4, 60106.0], [98.5, 60106.0], [98.6, 60110.0], [98.7, 60110.0], [98.8, 60110.0], [98.9, 60111.0], [99.0, 60111.0], [99.1, 60111.0], [99.2, 60112.0], [99.3, 60113.0], [99.4, 60113.0], [99.5, 60114.0], [99.6, 60115.0], [99.7, 60115.0], [99.8, 60115.0], [99.9, 60120.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 26.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 28.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 28.0], [1.4, 28.0], [1.5, 28.0], [1.6, 28.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 28.0], [2.1, 28.0], [2.2, 29.0], [2.3, 29.0], [2.4, 29.0], [2.5, 29.0], [2.6, 29.0], [2.7, 29.0], [2.8, 30.0], [2.9, 30.0], [3.0, 31.0], [3.1, 31.0], [3.2, 32.0], [3.3, 33.0], [3.4, 34.0], [3.5, 36.0], [3.6, 39.0], [3.7, 43.0], [3.8, 47.0], [3.9, 49.0], [4.0, 51.0], [4.1, 52.0], [4.2, 53.0], [4.3, 54.0], [4.4, 56.0], [4.5, 59.0], [4.6, 62.0], [4.7, 64.0], [4.8, 66.0], [4.9, 69.0], [5.0, 73.0], [5.1, 79.0], [5.2, 82.0], [5.3, 86.0], [5.4, 99.0], [5.5, 112.0], [5.6, 119.0], [5.7, 122.0], [5.8, 125.0], [5.9, 128.0], [6.0, 145.0], [6.1, 162.0], [6.2, 163.0], [6.3, 165.0], [6.4, 167.0], [6.5, 168.0], [6.6, 169.0], [6.7, 170.0], [6.8, 174.0], [6.9, 178.0], [7.0, 182.0], [7.1, 186.0], [7.2, 191.0], [7.3, 196.0], [7.4, 200.0], [7.5, 203.0], [7.6, 207.0], [7.7, 210.0], [7.8, 214.0], [7.9, 216.0], [8.0, 218.0], [8.1, 221.0], [8.2, 224.0], [8.3, 226.0], [8.4, 227.0], [8.5, 229.0], [8.6, 230.0], [8.7, 231.0], [8.8, 233.0], [8.9, 235.0], [9.0, 236.0], [9.1, 238.0], [9.2, 240.0], [9.3, 241.0], [9.4, 242.0], [9.5, 244.0], [9.6, 245.0], [9.7, 246.0], [9.8, 248.0], [9.9, 251.0], [10.0, 254.0], [10.1, 255.0], [10.2, 256.0], [10.3, 258.0], [10.4, 260.0], [10.5, 263.0], [10.6, 271.0], [10.7, 278.0], [10.8, 326.0], [10.9, 344.0], [11.0, 351.0], [11.1, 354.0], [11.2, 357.0], [11.3, 358.0], [11.4, 360.0], [11.5, 361.0], [11.6, 362.0], [11.7, 363.0], [11.8, 364.0], [11.9, 366.0], [12.0, 368.0], [12.1, 370.0], [12.2, 372.0], [12.3, 374.0], [12.4, 376.0], [12.5, 377.0], [12.6, 378.0], [12.7, 379.0], [12.8, 380.0], [12.9, 381.0], [13.0, 382.0], [13.1, 383.0], [13.2, 384.0], [13.3, 385.0], [13.4, 386.0], [13.5, 386.0], [13.6, 387.0], [13.7, 388.0], [13.8, 388.0], [13.9, 389.0], [14.0, 389.0], [14.1, 390.0], [14.2, 390.0], [14.3, 391.0], [14.4, 392.0], [14.5, 393.0], [14.6, 393.0], [14.7, 394.0], [14.8, 395.0], [14.9, 396.0], [15.0, 396.0], [15.1, 396.0], [15.2, 397.0], [15.3, 398.0], [15.4, 398.0], [15.5, 399.0], [15.6, 399.0], [15.7, 400.0], [15.8, 400.0], [15.9, 400.0], [16.0, 401.0], [16.1, 401.0], [16.2, 402.0], [16.3, 402.0], [16.4, 403.0], [16.5, 404.0], [16.6, 404.0], [16.7, 405.0], [16.8, 405.0], [16.9, 406.0], [17.0, 406.0], [17.1, 407.0], [17.2, 407.0], [17.3, 408.0], [17.4, 408.0], [17.5, 409.0], [17.6, 409.0], [17.7, 410.0], [17.8, 410.0], [17.9, 411.0], [18.0, 411.0], [18.1, 412.0], [18.2, 412.0], [18.3, 412.0], [18.4, 413.0], [18.5, 414.0], [18.6, 414.0], [18.7, 415.0], [18.8, 415.0], [18.9, 416.0], [19.0, 416.0], [19.1, 416.0], [19.2, 417.0], [19.3, 417.0], [19.4, 417.0], [19.5, 418.0], [19.6, 418.0], [19.7, 418.0], [19.8, 419.0], [19.9, 419.0], [20.0, 419.0], [20.1, 420.0], [20.2, 420.0], [20.3, 420.0], [20.4, 421.0], [20.5, 421.0], [20.6, 422.0], [20.7, 422.0], [20.8, 422.0], [20.9, 423.0], [21.0, 423.0], [21.1, 424.0], [21.2, 424.0], [21.3, 425.0], [21.4, 425.0], [21.5, 425.0], [21.6, 426.0], [21.7, 427.0], [21.8, 427.0], [21.9, 428.0], [22.0, 428.0], [22.1, 429.0], [22.2, 429.0], [22.3, 430.0], [22.4, 430.0], [22.5, 431.0], [22.6, 431.0], [22.7, 432.0], [22.8, 432.0], [22.9, 433.0], [23.0, 433.0], [23.1, 434.0], [23.2, 434.0], [23.3, 434.0], [23.4, 435.0], [23.5, 435.0], [23.6, 435.0], [23.7, 436.0], [23.8, 436.0], [23.9, 437.0], [24.0, 437.0], [24.1, 438.0], [24.2, 438.0], [24.3, 438.0], [24.4, 439.0], [24.5, 439.0], [24.6, 440.0], [24.7, 440.0], [24.8, 440.0], [24.9, 441.0], [25.0, 441.0], [25.1, 441.0], [25.2, 442.0], [25.3, 442.0], [25.4, 443.0], [25.5, 443.0], [25.6, 443.0], [25.7, 443.0], [25.8, 444.0], [25.9, 444.0], [26.0, 444.0], [26.1, 445.0], [26.2, 445.0], [26.3, 445.0], [26.4, 446.0], [26.5, 446.0], [26.6, 446.0], [26.7, 446.0], [26.8, 446.0], [26.9, 447.0], [27.0, 447.0], [27.1, 447.0], [27.2, 447.0], [27.3, 448.0], [27.4, 448.0], [27.5, 448.0], [27.6, 448.0], [27.7, 448.0], [27.8, 449.0], [27.9, 449.0], [28.0, 449.0], [28.1, 449.0], [28.2, 450.0], [28.3, 450.0], [28.4, 450.0], [28.5, 450.0], [28.6, 451.0], [28.7, 451.0], [28.8, 451.0], [28.9, 451.0], [29.0, 452.0], [29.1, 452.0], [29.2, 452.0], [29.3, 452.0], [29.4, 452.0], [29.5, 453.0], [29.6, 453.0], [29.7, 453.0], [29.8, 453.0], [29.9, 453.0], [30.0, 454.0], [30.1, 454.0], [30.2, 454.0], [30.3, 454.0], [30.4, 455.0], [30.5, 455.0], [30.6, 455.0], [30.7, 455.0], [30.8, 455.0], [30.9, 456.0], [31.0, 456.0], [31.1, 456.0], [31.2, 456.0], [31.3, 456.0], [31.4, 457.0], [31.5, 457.0], [31.6, 457.0], [31.7, 457.0], [31.8, 457.0], [31.9, 458.0], [32.0, 458.0], [32.1, 458.0], [32.2, 458.0], [32.3, 459.0], [32.4, 459.0], [32.5, 459.0], [32.6, 459.0], [32.7, 459.0], [32.8, 459.0], [32.9, 460.0], [33.0, 460.0], [33.1, 460.0], [33.2, 460.0], [33.3, 461.0], [33.4, 461.0], [33.5, 461.0], [33.6, 461.0], [33.7, 462.0], [33.8, 462.0], [33.9, 462.0], [34.0, 462.0], [34.1, 462.0], [34.2, 463.0], [34.3, 463.0], [34.4, 463.0], [34.5, 463.0], [34.6, 464.0], [34.7, 464.0], [34.8, 464.0], [34.9, 464.0], [35.0, 464.0], [35.1, 465.0], [35.2, 465.0], [35.3, 465.0], [35.4, 465.0], [35.5, 465.0], [35.6, 466.0], [35.7, 466.0], [35.8, 466.0], [35.9, 466.0], [36.0, 466.0], [36.1, 467.0], [36.2, 467.0], [36.3, 467.0], [36.4, 467.0], [36.5, 467.0], [36.6, 468.0], [36.7, 468.0], [36.8, 468.0], [36.9, 468.0], [37.0, 468.0], [37.1, 469.0], [37.2, 469.0], [37.3, 469.0], [37.4, 469.0], [37.5, 469.0], [37.6, 470.0], [37.7, 470.0], [37.8, 470.0], [37.9, 470.0], [38.0, 470.0], [38.1, 470.0], [38.2, 471.0], [38.3, 471.0], [38.4, 471.0], [38.5, 471.0], [38.6, 471.0], [38.7, 472.0], [38.8, 472.0], [38.9, 472.0], [39.0, 472.0], [39.1, 472.0], [39.2, 472.0], [39.3, 472.0], [39.4, 473.0], [39.5, 473.0], [39.6, 473.0], [39.7, 473.0], [39.8, 473.0], [39.9, 474.0], [40.0, 474.0], [40.1, 474.0], [40.2, 474.0], [40.3, 474.0], [40.4, 474.0], [40.5, 475.0], [40.6, 475.0], [40.7, 475.0], [40.8, 475.0], [40.9, 475.0], [41.0, 475.0], [41.1, 476.0], [41.2, 476.0], [41.3, 476.0], [41.4, 476.0], [41.5, 476.0], [41.6, 477.0], [41.7, 477.0], [41.8, 477.0], [41.9, 477.0], [42.0, 478.0], [42.1, 478.0], [42.2, 478.0], [42.3, 478.0], [42.4, 478.0], [42.5, 479.0], [42.6, 479.0], [42.7, 479.0], [42.8, 479.0], [42.9, 479.0], [43.0, 479.0], [43.1, 480.0], [43.2, 480.0], [43.3, 480.0], [43.4, 480.0], [43.5, 481.0], [43.6, 481.0], [43.7, 481.0], [43.8, 481.0], [43.9, 481.0], [44.0, 482.0], [44.1, 482.0], [44.2, 482.0], [44.3, 482.0], [44.4, 482.0], [44.5, 483.0], [44.6, 483.0], [44.7, 483.0], [44.8, 483.0], [44.9, 483.0], [45.0, 483.0], [45.1, 484.0], [45.2, 484.0], [45.3, 484.0], [45.4, 484.0], [45.5, 485.0], [45.6, 485.0], [45.7, 485.0], [45.8, 485.0], [45.9, 485.0], [46.0, 486.0], [46.1, 486.0], [46.2, 486.0], [46.3, 486.0], [46.4, 487.0], [46.5, 487.0], [46.6, 487.0], [46.7, 487.0], [46.8, 487.0], [46.9, 488.0], [47.0, 488.0], [47.1, 488.0], [47.2, 488.0], [47.3, 488.0], [47.4, 489.0], [47.5, 489.0], [47.6, 489.0], [47.7, 489.0], [47.8, 489.0], [47.9, 490.0], [48.0, 490.0], [48.1, 490.0], [48.2, 490.0], [48.3, 490.0], [48.4, 491.0], [48.5, 491.0], [48.6, 491.0], [48.7, 491.0], [48.8, 491.0], [48.9, 491.0], [49.0, 492.0], [49.1, 492.0], [49.2, 492.0], [49.3, 492.0], [49.4, 492.0], [49.5, 493.0], [49.6, 493.0], [49.7, 493.0], [49.8, 493.0], [49.9, 493.0], [50.0, 494.0], [50.1, 494.0], [50.2, 494.0], [50.3, 494.0], [50.4, 495.0], [50.5, 495.0], [50.6, 495.0], [50.7, 495.0], [50.8, 496.0], [50.9, 496.0], [51.0, 496.0], [51.1, 497.0], [51.2, 497.0], [51.3, 497.0], [51.4, 497.0], [51.5, 498.0], [51.6, 498.0], [51.7, 498.0], [51.8, 499.0], [51.9, 499.0], [52.0, 499.0], [52.1, 500.0], [52.2, 500.0], [52.3, 500.0], [52.4, 501.0], [52.5, 501.0], [52.6, 501.0], [52.7, 502.0], [52.8, 502.0], [52.9, 502.0], [53.0, 502.0], [53.1, 503.0], [53.2, 503.0], [53.3, 503.0], [53.4, 503.0], [53.5, 504.0], [53.6, 504.0], [53.7, 504.0], [53.8, 504.0], [53.9, 504.0], [54.0, 505.0], [54.1, 505.0], [54.2, 505.0], [54.3, 505.0], [54.4, 505.0], [54.5, 505.0], [54.6, 506.0], [54.7, 506.0], [54.8, 506.0], [54.9, 506.0], [55.0, 506.0], [55.1, 506.0], [55.2, 506.0], [55.3, 507.0], [55.4, 507.0], [55.5, 507.0], [55.6, 507.0], [55.7, 507.0], [55.8, 507.0], [55.9, 507.0], [56.0, 508.0], [56.1, 508.0], [56.2, 508.0], [56.3, 508.0], [56.4, 508.0], [56.5, 508.0], [56.6, 508.0], [56.7, 509.0], [56.8, 509.0], [56.9, 509.0], [57.0, 509.0], [57.1, 509.0], [57.2, 509.0], [57.3, 509.0], [57.4, 509.0], [57.5, 510.0], [57.6, 510.0], [57.7, 510.0], [57.8, 510.0], [57.9, 510.0], [58.0, 510.0], [58.1, 511.0], [58.2, 511.0], [58.3, 511.0], [58.4, 511.0], [58.5, 511.0], [58.6, 511.0], [58.7, 512.0], [58.8, 512.0], [58.9, 512.0], [59.0, 512.0], [59.1, 512.0], [59.2, 513.0], [59.3, 513.0], [59.4, 513.0], [59.5, 513.0], [59.6, 513.0], [59.7, 513.0], [59.8, 514.0], [59.9, 514.0], [60.0, 514.0], [60.1, 514.0], [60.2, 515.0], [60.3, 515.0], [60.4, 515.0], [60.5, 516.0], [60.6, 516.0], [60.7, 516.0], [60.8, 516.0], [60.9, 517.0], [61.0, 517.0], [61.1, 517.0], [61.2, 517.0], [61.3, 518.0], [61.4, 518.0], [61.5, 519.0], [61.6, 519.0], [61.7, 520.0], [61.8, 520.0], [61.9, 520.0], [62.0, 521.0], [62.1, 521.0], [62.2, 522.0], [62.3, 522.0], [62.4, 523.0], [62.5, 523.0], [62.6, 524.0], [62.7, 524.0], [62.8, 525.0], [62.9, 525.0], [63.0, 525.0], [63.1, 526.0], [63.2, 527.0], [63.3, 527.0], [63.4, 527.0], [63.5, 528.0], [63.6, 528.0], [63.7, 529.0], [63.8, 529.0], [63.9, 529.0], [64.0, 530.0], [64.1, 530.0], [64.2, 531.0], [64.3, 531.0], [64.4, 531.0], [64.5, 532.0], [64.6, 532.0], [64.7, 532.0], [64.8, 533.0], [64.9, 533.0], [65.0, 533.0], [65.1, 534.0], [65.2, 534.0], [65.3, 534.0], [65.4, 534.0], [65.5, 535.0], [65.6, 535.0], [65.7, 536.0], [65.8, 536.0], [65.9, 536.0], [66.0, 537.0], [66.1, 537.0], [66.2, 537.0], [66.3, 538.0], [66.4, 538.0], [66.5, 539.0], [66.6, 539.0], [66.7, 539.0], [66.8, 540.0], [66.9, 540.0], [67.0, 540.0], [67.1, 540.0], [67.2, 541.0], [67.3, 541.0], [67.4, 541.0], [67.5, 542.0], [67.6, 542.0], [67.7, 542.0], [67.8, 542.0], [67.9, 543.0], [68.0, 543.0], [68.1, 543.0], [68.2, 544.0], [68.3, 544.0], [68.4, 544.0], [68.5, 545.0], [68.6, 545.0], [68.7, 545.0], [68.8, 545.0], [68.9, 546.0], [69.0, 546.0], [69.1, 546.0], [69.2, 546.0], [69.3, 547.0], [69.4, 547.0], [69.5, 548.0], [69.6, 548.0], [69.7, 548.0], [69.8, 549.0], [69.9, 549.0], [70.0, 549.0], [70.1, 550.0], [70.2, 550.0], [70.3, 550.0], [70.4, 551.0], [70.5, 551.0], [70.6, 552.0], [70.7, 552.0], [70.8, 553.0], [70.9, 553.0], [71.0, 554.0], [71.1, 554.0], [71.2, 555.0], [71.3, 555.0], [71.4, 556.0], [71.5, 556.0], [71.6, 556.0], [71.7, 557.0], [71.8, 557.0], [71.9, 558.0], [72.0, 558.0], [72.1, 559.0], [72.2, 559.0], [72.3, 559.0], [72.4, 560.0], [72.5, 561.0], [72.6, 562.0], [72.7, 562.0], [72.8, 563.0], [72.9, 563.0], [73.0, 564.0], [73.1, 565.0], [73.2, 565.0], [73.3, 566.0], [73.4, 567.0], [73.5, 567.0], [73.6, 568.0], [73.7, 568.0], [73.8, 569.0], [73.9, 569.0], [74.0, 570.0], [74.1, 570.0], [74.2, 570.0], [74.3, 571.0], [74.4, 571.0], [74.5, 571.0], [74.6, 572.0], [74.7, 572.0], [74.8, 573.0], [74.9, 573.0], [75.0, 574.0], [75.1, 574.0], [75.2, 574.0], [75.3, 575.0], [75.4, 575.0], [75.5, 576.0], [75.6, 577.0], [75.7, 577.0], [75.8, 578.0], [75.9, 578.0], [76.0, 578.0], [76.1, 579.0], [76.2, 579.0], [76.3, 580.0], [76.4, 580.0], [76.5, 581.0], [76.6, 581.0], [76.7, 582.0], [76.8, 583.0], [76.9, 583.0], [77.0, 583.0], [77.1, 584.0], [77.2, 584.0], [77.3, 585.0], [77.4, 585.0], [77.5, 585.0], [77.6, 586.0], [77.7, 586.0], [77.8, 587.0], [77.9, 587.0], [78.0, 588.0], [78.1, 588.0], [78.2, 588.0], [78.3, 589.0], [78.4, 589.0], [78.5, 589.0], [78.6, 590.0], [78.7, 590.0], [78.8, 591.0], [78.9, 591.0], [79.0, 591.0], [79.1, 592.0], [79.2, 593.0], [79.3, 593.0], [79.4, 594.0], [79.5, 595.0], [79.6, 595.0], [79.7, 596.0], [79.8, 597.0], [79.9, 597.0], [80.0, 598.0], [80.1, 599.0], [80.2, 599.0], [80.3, 600.0], [80.4, 601.0], [80.5, 601.0], [80.6, 602.0], [80.7, 602.0], [80.8, 603.0], [80.9, 603.0], [81.0, 604.0], [81.1, 605.0], [81.2, 606.0], [81.3, 607.0], [81.4, 608.0], [81.5, 608.0], [81.6, 610.0], [81.7, 611.0], [81.8, 611.0], [81.9, 612.0], [82.0, 613.0], [82.1, 613.0], [82.2, 614.0], [82.3, 615.0], [82.4, 616.0], [82.5, 617.0], [82.6, 617.0], [82.7, 618.0], [82.8, 618.0], [82.9, 619.0], [83.0, 620.0], [83.1, 620.0], [83.2, 620.0], [83.3, 621.0], [83.4, 621.0], [83.5, 622.0], [83.6, 623.0], [83.7, 623.0], [83.8, 624.0], [83.9, 625.0], [84.0, 625.0], [84.1, 626.0], [84.2, 626.0], [84.3, 627.0], [84.4, 628.0], [84.5, 629.0], [84.6, 629.0], [84.7, 630.0], [84.8, 631.0], [84.9, 632.0], [85.0, 632.0], [85.1, 633.0], [85.2, 634.0], [85.3, 635.0], [85.4, 636.0], [85.5, 638.0], [85.6, 639.0], [85.7, 641.0], [85.8, 643.0], [85.9, 646.0], [86.0, 651.0], [86.1, 660.0], [86.2, 664.0], [86.3, 671.0], [86.4, 1027.0], [86.5, 1030.0], [86.6, 1033.0], [86.7, 1035.0], [86.8, 1037.0], [86.9, 1039.0], [87.0, 1041.0], [87.1, 1044.0], [87.2, 1054.0], [87.3, 1081.0], [87.4, 1192.0], [87.5, 1221.0], [87.6, 1239.0], [87.7, 1247.0], [87.8, 1252.0], [87.9, 1260.0], [88.0, 1267.0], [88.1, 1342.0], [88.2, 1369.0], [88.3, 1378.0], [88.4, 1387.0], [88.5, 1392.0], [88.6, 1398.0], [88.7, 1405.0], [88.8, 1410.0], [88.9, 1415.0], [89.0, 1418.0], [89.1, 1422.0], [89.2, 1426.0], [89.3, 1431.0], [89.4, 1434.0], [89.5, 1436.0], [89.6, 1438.0], [89.7, 1441.0], [89.8, 1442.0], [89.9, 1445.0], [90.0, 1447.0], [90.1, 1449.0], [90.2, 1451.0], [90.3, 1453.0], [90.4, 1454.0], [90.5, 1456.0], [90.6, 1457.0], [90.7, 1458.0], [90.8, 1459.0], [90.9, 1461.0], [91.0, 1462.0], [91.1, 1463.0], [91.2, 1464.0], [91.3, 1465.0], [91.4, 1466.0], [91.5, 1466.0], [91.6, 1467.0], [91.7, 1468.0], [91.8, 1469.0], [91.9, 1469.0], [92.0, 1470.0], [92.1, 1471.0], [92.2, 1472.0], [92.3, 1473.0], [92.4, 1474.0], [92.5, 1475.0], [92.6, 1476.0], [92.7, 1477.0], [92.8, 1478.0], [92.9, 1479.0], [93.0, 1480.0], [93.1, 1481.0], [93.2, 1482.0], [93.3, 1483.0], [93.4, 1483.0], [93.5, 1484.0], [93.6, 1486.0], [93.7, 1487.0], [93.8, 1488.0], [93.9, 1490.0], [94.0, 1492.0], [94.1, 1493.0], [94.2, 1495.0], [94.3, 1496.0], [94.4, 1498.0], [94.5, 1500.0], [94.6, 1502.0], [94.7, 1503.0], [94.8, 1506.0], [94.9, 1508.0], [95.0, 1510.0], [95.1, 1513.0], [95.2, 1515.0], [95.3, 1518.0], [95.4, 1522.0], [95.5, 1525.0], [95.6, 1531.0], [95.7, 1536.0], [95.8, 1542.0], [95.9, 1550.0], [96.0, 1560.0], [96.1, 1586.0], [96.2, 1601.0], [96.3, 1610.0], [96.4, 2536.0], [96.5, 3036.0], [96.6, 3042.0], [96.7, 3047.0], [96.8, 3052.0], [96.9, 3061.0], [97.0, 3077.0], [97.1, 3096.0], [97.2, 3254.0], [97.3, 3286.0], [97.4, 3415.0], [97.5, 3442.0], [97.6, 3451.0], [97.7, 3459.0], [97.8, 3469.0], [97.9, 3482.0], [98.0, 3496.0], [98.1, 3507.0], [98.2, 3521.0], [98.3, 3543.0], [98.4, 3591.0], [98.5, 3667.0], [98.6, 7048.0], [98.7, 7058.0], [98.8, 7250.0], [98.9, 7483.0], [99.0, 7604.0], [99.1, 15058.0], [99.2, 15074.0], [99.3, 21024.0], [99.4, 21031.0], [99.5, 21036.0], [99.6, 21039.0], [99.7, 21043.0], [99.8, 21046.0], [99.9, 21050.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12093.0], [0.1, 12093.0], [0.2, 12105.0], [0.3, 12108.0], [0.4, 12108.0], [0.5, 12109.0], [0.6, 12123.0], [0.7, 12123.0], [0.8, 12123.0], [0.9, 12123.0], [1.0, 12127.0], [1.1, 12127.0], [1.2, 12129.0], [1.3, 12129.0], [1.4, 12129.0], [1.5, 12129.0], [1.6, 12130.0], [1.7, 12130.0], [1.8, 12130.0], [1.9, 12130.0], [2.0, 12132.0], [2.1, 12132.0], [2.2, 12132.0], [2.3, 12132.0], [2.4, 12132.0], [2.5, 12133.0], [2.6, 12134.0], [2.7, 12134.0], [2.8, 12134.0], [2.9, 12134.0], [3.0, 12135.0], [3.1, 12135.0], [3.2, 12135.0], [3.3, 12136.0], [3.4, 12136.0], [3.5, 12136.0], [3.6, 12137.0], [3.7, 12137.0], [3.8, 12137.0], [3.9, 12137.0], [4.0, 12138.0], [4.1, 12138.0], [4.2, 12138.0], [4.3, 12138.0], [4.4, 12138.0], [4.5, 12138.0], [4.6, 12139.0], [4.7, 12139.0], [4.8, 12139.0], [4.9, 12139.0], [5.0, 12139.0], [5.1, 12139.0], [5.2, 12139.0], [5.3, 12139.0], [5.4, 12139.0], [5.5, 12139.0], [5.6, 12140.0], [5.7, 12140.0], [5.8, 12141.0], [5.9, 12141.0], [6.0, 12143.0], [6.1, 12143.0], [6.2, 12144.0], [6.3, 12144.0], [6.4, 12144.0], [6.5, 12145.0], [6.6, 12145.0], [6.7, 12145.0], [6.8, 12149.0], [6.9, 12151.0], [7.0, 12152.0], [7.1, 12152.0], [7.2, 12154.0], [7.3, 12154.0], [7.4, 12154.0], [7.5, 12158.0], [7.6, 12158.0], [7.7, 12158.0], [7.8, 12160.0], [7.9, 12163.0], [8.0, 12163.0], [8.1, 12163.0], [8.2, 12164.0], [8.3, 12164.0], [8.4, 12164.0], [8.5, 12165.0], [8.6, 12166.0], [8.7, 12166.0], [8.8, 12166.0], [8.9, 12172.0], [9.0, 12172.0], [9.1, 12173.0], [9.2, 12177.0], [9.3, 12178.0], [9.4, 12178.0], [9.5, 12178.0], [9.6, 12182.0], [9.7, 12182.0], [9.8, 12184.0], [9.9, 12184.0], [10.0, 12184.0], [10.1, 12184.0], [10.2, 12185.0], [10.3, 12186.0], [10.4, 12186.0], [10.5, 12188.0], [10.6, 12190.0], [10.7, 12190.0], [10.8, 12190.0], [10.9, 12191.0], [11.0, 12193.0], [11.1, 12193.0], [11.2, 12195.0], [11.3, 12205.0], [11.4, 12205.0], [11.5, 12206.0], [11.6, 12210.0], [11.7, 12210.0], [11.8, 12210.0], [11.9, 12210.0], [12.0, 12211.0], [12.1, 12211.0], [12.2, 12212.0], [12.3, 12213.0], [12.4, 12213.0], [12.5, 12214.0], [12.6, 12216.0], [12.7, 12216.0], [12.8, 12217.0], [12.9, 12218.0], [13.0, 12219.0], [13.1, 12219.0], [13.2, 12219.0], [13.3, 12221.0], [13.4, 12221.0], [13.5, 12223.0], [13.6, 12223.0], [13.7, 12223.0], [13.8, 12225.0], [13.9, 12225.0], [14.0, 12225.0], [14.1, 12225.0], [14.2, 12226.0], [14.3, 12227.0], [14.4, 12227.0], [14.5, 12228.0], [14.6, 12232.0], [14.7, 12232.0], [14.8, 12232.0], [14.9, 12234.0], [15.0, 12234.0], [15.1, 12234.0], [15.2, 12235.0], [15.3, 12240.0], [15.4, 12240.0], [15.5, 12240.0], [15.6, 12240.0], [15.7, 12240.0], [15.8, 12241.0], [15.9, 12241.0], [16.0, 12243.0], [16.1, 12243.0], [16.2, 12244.0], [16.3, 12245.0], [16.4, 12245.0], [16.5, 12247.0], [16.6, 12248.0], [16.7, 12248.0], [16.8, 12249.0], [16.9, 12249.0], [17.0, 12249.0], [17.1, 12249.0], [17.2, 12250.0], [17.3, 12251.0], [17.4, 12251.0], [17.5, 12251.0], [17.6, 12253.0], [17.7, 12253.0], [17.8, 12253.0], [17.9, 12256.0], [18.0, 12258.0], [18.1, 12258.0], [18.2, 12260.0], [18.3, 12262.0], [18.4, 12262.0], [18.5, 12264.0], [18.6, 12265.0], [18.7, 12265.0], [18.8, 12265.0], [18.9, 12266.0], [19.0, 12266.0], [19.1, 12266.0], [19.2, 12267.0], [19.3, 12267.0], [19.4, 12267.0], [19.5, 12269.0], [19.6, 12269.0], [19.7, 12269.0], [19.8, 12270.0], [19.9, 12270.0], [20.0, 12270.0], [20.1, 12270.0], [20.2, 12271.0], [20.3, 12271.0], [20.4, 12271.0], [20.5, 12271.0], [20.6, 12272.0], [20.7, 12272.0], [20.8, 12272.0], [20.9, 12273.0], [21.0, 12273.0], [21.1, 12273.0], [21.2, 12274.0], [21.3, 12274.0], [21.4, 12274.0], [21.5, 12275.0], [21.6, 12275.0], [21.7, 12275.0], [21.8, 12275.0], [21.9, 12275.0], [22.0, 12275.0], [22.1, 12275.0], [22.2, 12275.0], [22.3, 12275.0], [22.4, 12275.0], [22.5, 12276.0], [22.6, 12276.0], [22.7, 12276.0], [22.8, 12276.0], [22.9, 12276.0], [23.0, 12276.0], [23.1, 12276.0], [23.2, 12276.0], [23.3, 12276.0], [23.4, 12276.0], [23.5, 12277.0], [23.6, 12277.0], [23.7, 12277.0], [23.8, 12278.0], [23.9, 12278.0], [24.0, 12279.0], [24.1, 12279.0], [24.2, 12279.0], [24.3, 12279.0], [24.4, 12279.0], [24.5, 12279.0], [24.6, 12280.0], [24.7, 12280.0], [24.8, 12280.0], [24.9, 12281.0], [25.0, 12281.0], [25.1, 12281.0], [25.2, 12281.0], [25.3, 12282.0], [25.4, 12282.0], [25.5, 12283.0], [25.6, 12283.0], [25.7, 12283.0], [25.8, 12283.0], [25.9, 12284.0], [26.0, 12285.0], [26.1, 12285.0], [26.2, 12285.0], [26.3, 12286.0], [26.4, 12286.0], [26.5, 12287.0], [26.6, 12287.0], [26.7, 12287.0], [26.8, 12288.0], [26.9, 12288.0], [27.0, 12288.0], [27.1, 12288.0], [27.2, 12289.0], [27.3, 12290.0], [27.4, 12290.0], [27.5, 12290.0], [27.6, 12290.0], [27.7, 12290.0], [27.8, 12290.0], [27.9, 12290.0], [28.0, 12291.0], [28.1, 12291.0], [28.2, 12291.0], [28.3, 12291.0], [28.4, 12291.0], [28.5, 12292.0], [28.6, 12294.0], [28.7, 12294.0], [28.8, 12295.0], [28.9, 12296.0], [29.0, 12296.0], [29.1, 12296.0], [29.2, 12297.0], [29.3, 12298.0], [29.4, 12298.0], [29.5, 12299.0], [29.6, 12299.0], [29.7, 12299.0], [29.8, 12299.0], [29.9, 12299.0], [30.0, 12302.0], [30.1, 12302.0], [30.2, 12304.0], [30.3, 12305.0], [30.4, 12305.0], [30.5, 12306.0], [30.6, 12307.0], [30.7, 12307.0], [30.8, 12307.0], [30.9, 12308.0], [31.0, 12312.0], [31.1, 12312.0], [31.2, 12312.0], [31.3, 12312.0], [31.4, 12312.0], [31.5, 12312.0], [31.6, 12313.0], [31.7, 12313.0], [31.8, 12314.0], [31.9, 12317.0], [32.0, 12318.0], [32.1, 12318.0], [32.2, 12321.0], [32.3, 12323.0], [32.4, 12323.0], [32.5, 12323.0], [32.6, 12324.0], [32.7, 12324.0], [32.8, 12326.0], [32.9, 12326.0], [33.0, 12326.0], [33.1, 12326.0], [33.2, 12329.0], [33.3, 12329.0], [33.4, 12329.0], [33.5, 12330.0], [33.6, 12332.0], [33.7, 12332.0], [33.8, 12332.0], [33.9, 12333.0], [34.0, 12334.0], [34.1, 12334.0], [34.2, 12336.0], [34.3, 12336.0], [34.4, 12336.0], [34.5, 12337.0], [34.6, 12340.0], [34.7, 12340.0], [34.8, 12341.0], [34.9, 12343.0], [35.0, 12343.0], [35.1, 12343.0], [35.2, 12349.0], [35.3, 12350.0], [35.4, 12350.0], [35.5, 12351.0], [35.6, 12351.0], [35.7, 12351.0], [35.8, 12352.0], [35.9, 12352.0], [36.0, 12353.0], [36.1, 12353.0], [36.2, 12357.0], [36.3, 12357.0], [36.4, 12357.0], [36.5, 12359.0], [36.6, 12359.0], [36.7, 12359.0], [36.8, 12361.0], [36.9, 12361.0], [37.0, 12364.0], [37.1, 12364.0], [37.2, 12365.0], [37.3, 12367.0], [37.4, 12367.0], [37.5, 12367.0], [37.6, 12368.0], [37.7, 12368.0], [37.8, 12369.0], [37.9, 12370.0], [38.0, 12372.0], [38.1, 12372.0], [38.2, 12372.0], [38.3, 12373.0], [38.4, 12373.0], [38.5, 12374.0], [38.6, 12374.0], [38.7, 12374.0], [38.8, 12374.0], [38.9, 12374.0], [39.0, 12374.0], [39.1, 12374.0], [39.2, 12376.0], [39.3, 12376.0], [39.4, 12376.0], [39.5, 12376.0], [39.6, 12376.0], [39.7, 12376.0], [39.8, 12377.0], [39.9, 12378.0], [40.0, 12378.0], [40.1, 12379.0], [40.2, 12379.0], [40.3, 12381.0], [40.4, 12381.0], [40.5, 12381.0], [40.6, 12382.0], [40.7, 12382.0], [40.8, 12383.0], [40.9, 12384.0], [41.0, 12384.0], [41.1, 12388.0], [41.2, 12390.0], [41.3, 12391.0], [41.4, 12391.0], [41.5, 12394.0], [41.6, 12394.0], [41.7, 12394.0], [41.8, 12395.0], [41.9, 12395.0], [42.0, 12395.0], [42.1, 12398.0], [42.2, 12402.0], [42.3, 12402.0], [42.4, 12402.0], [42.5, 12403.0], [42.6, 12403.0], [42.7, 12403.0], [42.8, 12403.0], [42.9, 12403.0], [43.0, 12403.0], [43.1, 12406.0], [43.2, 12407.0], [43.3, 12407.0], [43.4, 12407.0], [43.5, 12409.0], [43.6, 12411.0], [43.7, 12411.0], [43.8, 12413.0], [43.9, 12415.0], [44.0, 12415.0], [44.1, 12416.0], [44.2, 12417.0], [44.3, 12419.0], [44.4, 12419.0], [44.5, 12420.0], [44.6, 12421.0], [44.7, 12421.0], [44.8, 12421.0], [44.9, 12421.0], [45.0, 12421.0], [45.1, 12422.0], [45.2, 12422.0], [45.3, 12423.0], [45.4, 12423.0], [45.5, 12424.0], [45.6, 12424.0], [45.7, 12424.0], [45.8, 12425.0], [45.9, 12425.0], [46.0, 12425.0], [46.1, 12427.0], [46.2, 12430.0], [46.3, 12430.0], [46.4, 12430.0], [46.5, 12430.0], [46.6, 12433.0], [46.7, 12433.0], [46.8, 12433.0], [46.9, 12434.0], [47.0, 12434.0], [47.1, 12435.0], [47.2, 12436.0], [47.3, 12439.0], [47.4, 12439.0], [47.5, 12440.0], [47.6, 12441.0], [47.7, 12441.0], [47.8, 12444.0], [47.9, 12445.0], [48.0, 12445.0], [48.1, 12445.0], [48.2, 12446.0], [48.3, 12449.0], [48.4, 12449.0], [48.5, 12450.0], [48.6, 12451.0], [48.7, 12451.0], [48.8, 12452.0], [48.9, 12452.0], [49.0, 12452.0], [49.1, 12454.0], [49.2, 12455.0], [49.3, 12456.0], [49.4, 12456.0], [49.5, 12457.0], [49.6, 12458.0], [49.7, 12458.0], [49.8, 12459.0], [49.9, 12459.0], [50.0, 12459.0], [50.1, 12459.0], [50.2, 12459.0], [50.3, 12461.0], [50.4, 12461.0], [50.5, 12463.0], [50.6, 12463.0], [50.7, 12463.0], [50.8, 12464.0], [50.9, 12465.0], [51.0, 12465.0], [51.1, 12468.0], [51.2, 12468.0], [51.3, 12468.0], [51.4, 12468.0], [51.5, 12469.0], [51.6, 12470.0], [51.7, 12470.0], [51.8, 12472.0], [51.9, 12472.0], [52.0, 12472.0], [52.1, 12473.0], [52.2, 12474.0], [52.3, 12475.0], [52.4, 12475.0], [52.5, 12475.0], [52.6, 12476.0], [52.7, 12476.0], [52.8, 12478.0], [52.9, 12478.0], [53.0, 12478.0], [53.1, 12478.0], [53.2, 12479.0], [53.3, 12479.0], [53.4, 12479.0], [53.5, 12479.0], [53.6, 12481.0], [53.7, 12481.0], [53.8, 12481.0], [53.9, 12482.0], [54.0, 12482.0], [54.1, 12482.0], [54.2, 12483.0], [54.3, 12484.0], [54.4, 12484.0], [54.5, 12486.0], [54.6, 12486.0], [54.7, 12486.0], [54.8, 12487.0], [54.9, 12488.0], [55.0, 12488.0], [55.1, 12489.0], [55.2, 12490.0], [55.3, 12491.0], [55.4, 12491.0], [55.5, 12492.0], [55.6, 12492.0], [55.7, 12492.0], [55.8, 12494.0], [55.9, 12496.0], [56.0, 12496.0], [56.1, 12496.0], [56.2, 12497.0], [56.3, 12500.0], [56.4, 12500.0], [56.5, 12501.0], [56.6, 12502.0], [56.7, 12502.0], [56.8, 12503.0], [56.9, 12503.0], [57.0, 12503.0], [57.1, 12503.0], [57.2, 12506.0], [57.3, 12507.0], [57.4, 12507.0], [57.5, 12507.0], [57.6, 12509.0], [57.7, 12509.0], [57.8, 12509.0], [57.9, 12510.0], [58.0, 12510.0], [58.1, 12510.0], [58.2, 12511.0], [58.3, 12512.0], [58.4, 12512.0], [58.5, 12512.0], [58.6, 12512.0], [58.7, 12512.0], [58.8, 12513.0], [58.9, 12516.0], [59.0, 12516.0], [59.1, 12516.0], [59.2, 12517.0], [59.3, 12520.0], [59.4, 12520.0], [59.5, 12520.0], [59.6, 12521.0], [59.7, 12521.0], [59.8, 12522.0], [59.9, 12523.0], [60.0, 12523.0], [60.1, 12524.0], [60.2, 12525.0], [60.3, 12526.0], [60.4, 12526.0], [60.5, 12527.0], [60.6, 12528.0], [60.7, 12528.0], [60.8, 12528.0], [60.9, 12529.0], [61.0, 12529.0], [61.1, 12529.0], [61.2, 12531.0], [61.3, 12532.0], [61.4, 12532.0], [61.5, 12533.0], [61.6, 12536.0], [61.7, 12536.0], [61.8, 12537.0], [61.9, 12537.0], [62.0, 12537.0], [62.1, 12538.0], [62.2, 12538.0], [62.3, 12539.0], [62.4, 12539.0], [62.5, 12539.0], [62.6, 12540.0], [62.7, 12540.0], [62.8, 12541.0], [62.9, 12542.0], [63.0, 12542.0], [63.1, 12543.0], [63.2, 12543.0], [63.3, 12544.0], [63.4, 12544.0], [63.5, 12544.0], [63.6, 12545.0], [63.7, 12545.0], [63.8, 12547.0], [63.9, 12547.0], [64.0, 12547.0], [64.1, 12548.0], [64.2, 12548.0], [64.3, 12549.0], [64.4, 12549.0], [64.5, 12552.0], [64.6, 12552.0], [64.7, 12552.0], [64.8, 12554.0], [64.9, 12555.0], [65.0, 12555.0], [65.1, 12558.0], [65.2, 12560.0], [65.3, 12562.0], [65.4, 12562.0], [65.5, 12562.0], [65.6, 12565.0], [65.7, 12565.0], [65.8, 12566.0], [65.9, 12567.0], [66.0, 12567.0], [66.1, 12568.0], [66.2, 12568.0], [66.3, 12570.0], [66.4, 12570.0], [66.5, 12570.0], [66.6, 12572.0], [66.7, 12572.0], [66.8, 12572.0], [66.9, 12573.0], [67.0, 12573.0], [67.1, 12573.0], [67.2, 12574.0], [67.3, 12578.0], [67.4, 12578.0], [67.5, 12578.0], [67.6, 12579.0], [67.7, 12579.0], [67.8, 12581.0], [67.9, 12581.0], [68.0, 12581.0], [68.1, 12582.0], [68.2, 12583.0], [68.3, 12583.0], [68.4, 12583.0], [68.5, 12584.0], [68.6, 12585.0], [68.7, 12585.0], [68.8, 12586.0], [68.9, 12587.0], [69.0, 12587.0], [69.1, 12587.0], [69.2, 12589.0], [69.3, 12589.0], [69.4, 12589.0], [69.5, 12590.0], [69.6, 12592.0], [69.7, 12592.0], [69.8, 12592.0], [69.9, 12592.0], [70.0, 12592.0], [70.1, 12598.0], [70.2, 12599.0], [70.3, 12600.0], [70.4, 12600.0], [70.5, 12601.0], [70.6, 12601.0], [70.7, 12601.0], [70.8, 12602.0], [70.9, 12603.0], [71.0, 12603.0], [71.1, 12603.0], [71.2, 12609.0], [71.3, 12609.0], [71.4, 12609.0], [71.5, 12609.0], [71.6, 12613.0], [71.7, 12613.0], [71.8, 12613.0], [71.9, 12613.0], [72.0, 12613.0], [72.1, 12613.0], [72.2, 12614.0], [72.3, 12614.0], [72.4, 12614.0], [72.5, 12615.0], [72.6, 12617.0], [72.7, 12617.0], [72.8, 12618.0], [72.9, 12619.0], [73.0, 12619.0], [73.1, 12620.0], [73.2, 12620.0], [73.3, 12620.0], [73.4, 12620.0], [73.5, 12622.0], [73.6, 12622.0], [73.7, 12622.0], [73.8, 12623.0], [73.9, 12623.0], [74.0, 12623.0], [74.1, 12626.0], [74.2, 12628.0], [74.3, 12628.0], [74.4, 12628.0], [74.5, 12630.0], [74.6, 12631.0], [74.7, 12631.0], [74.8, 12633.0], [74.9, 12634.0], [75.0, 12634.0], [75.1, 12634.0], [75.2, 12635.0], [75.3, 12636.0], [75.4, 12636.0], [75.5, 12637.0], [75.6, 12639.0], [75.7, 12639.0], [75.8, 12639.0], [75.9, 12641.0], [76.0, 12641.0], [76.1, 12642.0], [76.2, 12643.0], [76.3, 12644.0], [76.4, 12644.0], [76.5, 12646.0], [76.6, 12648.0], [76.7, 12648.0], [76.8, 12648.0], [76.9, 12650.0], [77.0, 12650.0], [77.1, 12651.0], [77.2, 12653.0], [77.3, 12653.0], [77.4, 12653.0], [77.5, 12654.0], [77.6, 12655.0], [77.7, 12655.0], [77.8, 12655.0], [77.9, 12658.0], [78.0, 12658.0], [78.1, 12660.0], [78.2, 12661.0], [78.3, 12665.0], [78.4, 12665.0], [78.5, 12666.0], [78.6, 12667.0], [78.7, 12667.0], [78.8, 12667.0], [78.9, 12667.0], [79.0, 12667.0], [79.1, 12668.0], [79.2, 12669.0], [79.3, 12669.0], [79.4, 12669.0], [79.5, 12670.0], [79.6, 12670.0], [79.7, 12670.0], [79.8, 12670.0], [79.9, 12673.0], [80.0, 12673.0], [80.1, 12673.0], [80.2, 12674.0], [80.3, 12674.0], [80.4, 12674.0], [80.5, 12676.0], [80.6, 12677.0], [80.7, 12677.0], [80.8, 12677.0], [80.9, 12677.0], [81.0, 12677.0], [81.1, 12678.0], [81.2, 12678.0], [81.3, 12680.0], [81.4, 12680.0], [81.5, 12681.0], [81.6, 12681.0], [81.7, 12681.0], [81.8, 12681.0], [81.9, 12681.0], [82.0, 12681.0], [82.1, 12681.0], [82.2, 12684.0], [82.3, 12685.0], [82.4, 12685.0], [82.5, 12686.0], [82.6, 12686.0], [82.7, 12686.0], [82.8, 12686.0], [82.9, 12687.0], [83.0, 12687.0], [83.1, 12690.0], [83.2, 12691.0], [83.3, 12692.0], [83.4, 12692.0], [83.5, 12692.0], [83.6, 12693.0], [83.7, 12693.0], [83.8, 12696.0], [83.9, 12697.0], [84.0, 12697.0], [84.1, 12697.0], [84.2, 12697.0], [84.3, 12698.0], [84.4, 12698.0], [84.5, 12699.0], [84.6, 12699.0], [84.7, 12699.0], [84.8, 12701.0], [84.9, 12702.0], [85.0, 12702.0], [85.1, 12702.0], [85.2, 12704.0], [85.3, 12705.0], [85.4, 12705.0], [85.5, 12706.0], [85.6, 12707.0], [85.7, 12707.0], [85.8, 12708.0], [85.9, 12710.0], [86.0, 12710.0], [86.1, 12712.0], [86.2, 12712.0], [86.3, 12712.0], [86.4, 12712.0], [86.5, 12713.0], [86.6, 12713.0], [86.7, 12713.0], [86.8, 12713.0], [86.9, 12713.0], [87.0, 12713.0], [87.1, 12714.0], [87.2, 12714.0], [87.3, 12717.0], [87.4, 12717.0], [87.5, 12718.0], [87.6, 12718.0], [87.7, 12718.0], [87.8, 12721.0], [87.9, 12721.0], [88.0, 12721.0], [88.1, 12722.0], [88.2, 12722.0], [88.3, 12724.0], [88.4, 12724.0], [88.5, 12724.0], [88.6, 12724.0], [88.7, 12724.0], [88.8, 12725.0], [88.9, 12725.0], [89.0, 12725.0], [89.1, 12726.0], [89.2, 12727.0], [89.3, 12727.0], [89.4, 12727.0], [89.5, 12729.0], [89.6, 12729.0], [89.7, 12729.0], [89.8, 12730.0], [89.9, 12733.0], [90.0, 12733.0], [90.1, 12735.0], [90.2, 12735.0], [90.3, 12736.0], [90.4, 12736.0], [90.5, 12737.0], [90.6, 12737.0], [90.7, 12737.0], [90.8, 12738.0], [90.9, 12739.0], [91.0, 12739.0], [91.1, 12740.0], [91.2, 12740.0], [91.3, 12740.0], [91.4, 12740.0], [91.5, 12740.0], [91.6, 12743.0], [91.7, 12743.0], [91.8, 12743.0], [91.9, 12744.0], [92.0, 12744.0], [92.1, 12745.0], [92.2, 12748.0], [92.3, 12748.0], [92.4, 12748.0], [92.5, 12749.0], [92.6, 12749.0], [92.7, 12749.0], [92.8, 12750.0], [92.9, 12751.0], [93.0, 12751.0], [93.1, 12751.0], [93.2, 12751.0], [93.3, 12755.0], [93.4, 12755.0], [93.5, 12755.0], [93.6, 12755.0], [93.7, 12755.0], [93.8, 12755.0], [93.9, 12757.0], [94.0, 12757.0], [94.1, 12757.0], [94.2, 12759.0], [94.3, 12763.0], [94.4, 12763.0], [94.5, 12763.0], [94.6, 12766.0], [94.7, 12766.0], [94.8, 12766.0], [94.9, 12767.0], [95.0, 12767.0], [95.1, 12767.0], [95.2, 12767.0], [95.3, 12768.0], [95.4, 12768.0], [95.5, 12770.0], [95.6, 12772.0], [95.7, 12772.0], [95.8, 12773.0], [95.9, 12774.0], [96.0, 12774.0], [96.1, 12778.0], [96.2, 12778.0], [96.3, 12780.0], [96.4, 12780.0], [96.5, 12781.0], [96.6, 12781.0], [96.7, 12781.0], [96.8, 12784.0], [96.9, 12787.0], [97.0, 12787.0], [97.1, 12792.0], [97.2, 12793.0], [97.3, 12796.0], [97.4, 12796.0], [97.5, 12796.0], [97.6, 12798.0], [97.7, 12798.0], [97.8, 12806.0], [97.9, 12808.0], [98.0, 12808.0], [98.1, 12813.0], [98.2, 12817.0], [98.3, 12823.0], [98.4, 12823.0], [98.5, 12826.0], [98.6, 12829.0], [98.7, 12829.0], [98.8, 12858.0], [98.9, 12860.0], [99.0, 12860.0], [99.1, 12874.0], [99.2, 12874.0], [99.3, 12879.0], [99.4, 12879.0], [99.5, 12885.0], [99.6, 12893.0], [99.7, 12893.0], [99.8, 12895.0], [99.9, 12895.0], [100.0, 12895.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 12712.0, "series": [{"data": [[60000.0, 679.0], [60100.0, 21.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 1891.0], [600.0, 2167.0], [11200.0, 1.0], [15300.0, 2.0], [15200.0, 1.0], [15000.0, 74.0], [15400.0, 3.0], [15500.0, 1.0], [1000.0, 316.0], [1100.0, 43.0], [1200.0, 230.0], [1300.0, 195.0], [21000.0, 266.0], [1400.0, 2047.0], [1500.0, 591.0], [100.0, 695.0], [1600.0, 67.0], [2300.0, 4.0], [2500.0, 25.0], [2600.0, 2.0], [3000.0, 224.0], [3100.0, 9.0], [200.0, 1169.0], [3300.0, 15.0], [3200.0, 60.0], [3400.0, 240.0], [3500.0, 130.0], [3600.0, 34.0], [300.0, 1725.0], [400.0, 12712.0], [7100.0, 4.0], [7000.0, 100.0], [7300.0, 4.0], [7400.0, 37.0], [7200.0, 4.0], [7500.0, 24.0], [7600.0, 3.0], [500.0, 9851.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12100.0, 78.0], [12000.0, 1.0], [12200.0, 131.0], [12500.0, 98.0], [12400.0, 99.0], [12300.0, 85.0], [12600.0, 101.0], [12700.0, 91.0], [12800.0, 16.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 266.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 28316.0, "series": [{"data": [[0.0, 1894.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 28316.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 5890.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 266.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 23.96478873239434, "minX": 1.6175814E12, "maxY": 653.8680129716954, "series": [{"data": [[1.61758146E12, 352.1385714285715]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.6175814E12, 385.22285714285726]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.61758146E12, 105.08185840707958], [1.61758152E12, 23.96478873239434], [1.6175814E12, 653.8680129716954]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758152E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 26.5, "minX": 1.0, "maxY": 60120.0, "series": [{"data": [[135.0, 60038.090909090904], [134.0, 60043.8], [143.0, 60028.666666666664], [151.0, 60028.0], [150.0, 60027.666666666664], [147.0, 60032.0], [146.0, 60029.0], [145.0, 60028.0], [144.0, 60031.5], [157.0, 60030.0], [156.0, 60029.0], [155.0, 60029.333333333336], [152.0, 60029.0], [166.0, 60037.0], [165.0, 60036.5], [175.0, 60027.0], [174.0, 60028.666666666664], [171.0, 60033.0], [170.0, 60034.333333333336], [183.0, 60028.0], [182.0, 60026.5], [180.0, 60030.0], [179.0, 60027.5], [178.0, 60028.5], [191.0, 60026.5], [189.0, 60029.0], [187.0, 60027.0], [186.0, 60027.0], [185.0, 60027.0], [184.0, 60027.0], [198.0, 60027.0], [197.0, 60026.5], [195.0, 60026.0], [194.0, 60027.0], [193.0, 60027.0], [192.0, 60027.0], [205.0, 60027.0], [204.0, 60027.0], [203.0, 60027.0], [202.0, 60027.5], [200.0, 60027.5], [215.0, 60027.0], [214.0, 60027.0], [213.0, 60028.0], [212.0, 60028.0], [211.0, 60027.0], [210.0, 60028.0], [209.0, 60030.0], [208.0, 60027.333333333336], [223.0, 60027.0], [221.0, 60027.0], [220.0, 60027.0], [218.0, 60027.0], [217.0, 60027.0], [216.0, 60028.0], [230.0, 60028.0], [229.0, 60028.0], [228.0, 60029.0], [226.0, 60028.0], [225.0, 60028.0], [224.0, 60027.5], [239.0, 60029.0], [238.0, 60029.333333333336], [235.0, 60027.0], [234.0, 60027.0], [233.0, 60028.0], [232.0, 60027.5], [247.0, 60028.0], [246.0, 60027.0], [245.0, 60028.0], [244.0, 60033.0], [243.0, 60031.666666666664], [240.0, 60029.0], [255.0, 60028.0], [254.0, 60028.5], [252.0, 60028.0], [251.0, 60027.0], [250.0, 60029.0], [249.0, 60029.0], [248.0, 60026.0], [270.0, 60026.0], [271.0, 60030.0], [269.0, 60029.0], [268.0, 60029.0], [267.0, 60032.0], [266.0, 60028.5], [264.0, 60027.0], [263.0, 60029.0], [258.0, 60029.0], [257.0, 60028.5], [261.0, 60028.0], [260.0, 60028.5], [285.0, 60029.0], [287.0, 60028.0], [284.0, 60029.0], [273.0, 60029.0], [272.0, 60028.0], [283.0, 60029.5], [281.0, 60026.0], [280.0, 60029.0], [279.0, 60027.0], [278.0, 60028.0], [276.0, 60029.666666666664], [301.0, 60028.0], [303.0, 60029.5], [300.0, 60030.0], [290.0, 60029.333333333336], [299.0, 60028.0], [297.0, 60029.0], [295.0, 60029.0], [294.0, 60028.0], [293.0, 60029.0], [292.0, 60029.0], [317.0, 60032.0], [319.0, 60027.5], [316.0, 60028.5], [314.0, 60028.0], [313.0, 60028.0], [312.0, 60029.5], [310.0, 60029.0], [309.0, 60028.0], [307.0, 60029.0], [306.0, 60028.0], [305.0, 60029.0], [304.0, 60029.0], [333.0, 60030.0], [335.0, 60028.5], [332.0, 60033.0], [331.0, 60029.0], [330.0, 60029.5], [328.0, 60028.0], [327.0, 60029.0], [325.0, 60029.0], [323.0, 60028.0], [322.0, 60028.0], [321.0, 60028.0], [350.0, 60029.0], [351.0, 60027.0], [349.0, 60029.0], [348.0, 60029.0], [347.0, 60029.0], [346.0, 60030.0], [344.0, 60028.5], [342.0, 60028.0], [336.0, 60028.0], [339.0, 60029.5], [337.0, 60029.0], [341.0, 60027.0], [340.0, 60028.0], [365.0, 60029.0], [367.0, 60028.5], [364.0, 60029.0], [363.0, 60028.0], [362.0, 60028.0], [361.0, 60029.666666666664], [358.0, 60027.5], [356.0, 60028.0], [355.0, 60029.0], [354.0, 60029.0], [353.0, 60028.0], [352.0, 60028.0], [371.0, 60029.5], [382.0, 60028.5], [383.0, 60028.0], [380.0, 60030.0], [378.0, 60028.5], [376.0, 60027.5], [374.0, 60028.0], [373.0, 60031.0], [369.0, 60028.0], [368.0, 60030.0], [397.0, 60029.0], [399.0, 60028.5], [396.0, 60029.0], [387.0, 60028.0], [386.0, 60028.0], [385.0, 60028.0], [384.0, 60028.0], [395.0, 60029.0], [394.0, 60029.0], [393.0, 60029.0], [392.0, 60028.5], [390.0, 60028.0], [389.0, 60028.0], [388.0, 60028.0], [402.0, 60029.0], [415.0, 60029.0], [413.0, 60028.333333333336], [410.0, 60027.5], [408.0, 60027.5], [406.0, 60030.0], [405.0, 60029.0], [404.0, 60028.0], [401.0, 60029.0], [400.0, 60029.0], [419.0, 60028.0], [429.0, 60028.0], [431.0, 60028.5], [428.0, 60029.0], [418.0, 60028.0], [417.0, 60031.0], [416.0, 60028.0], [427.0, 60028.5], [425.0, 60028.5], [423.0, 60028.0], [422.0, 60028.0], [421.0, 60028.0], [420.0, 60028.0], [445.0, 60028.0], [447.0, 60027.5], [444.0, 60029.0], [434.0, 60028.5], [432.0, 60029.0], [443.0, 60028.5], [441.0, 60028.0], [440.0, 60028.0], [439.0, 60028.5], [437.0, 60029.0], [436.0, 60028.5], [461.0, 60027.0], [460.0, 60027.5], [458.0, 60029.0], [457.0, 60029.5], [455.0, 60029.0], [453.0, 60030.0], [452.0, 60029.0], [449.0, 60028.0], [448.0, 60028.0], [478.0, 60029.0], [477.0, 60028.5], [475.0, 60027.0], [474.0, 60027.0], [473.0, 60032.0], [472.0, 60030.0], [470.0, 60028.0], [469.0, 60030.0], [467.0, 60027.5], [465.0, 60027.0], [464.0, 60027.0], [482.0, 60029.0], [494.0, 60029.5], [495.0, 60028.0], [492.0, 60029.0], [481.0, 60029.0], [480.0, 60028.5], [491.0, 60029.5], [489.0, 60028.5], [487.0, 60028.0], [486.0, 60028.0], [485.0, 60028.0], [484.0, 60030.0], [508.0, 60027.0], [510.0, 60029.0], [511.0, 60029.0], [509.0, 60030.0], [506.0, 60029.0], [504.0, 60028.0], [503.0, 60028.0], [498.0, 60027.0], [497.0, 60028.5], [502.0, 60029.0], [500.0, 60027.5], [541.0, 60026.0], [543.0, 60030.0], [539.0, 60036.0], [537.0, 60029.0], [536.0, 60029.0], [514.0, 60031.333333333336], [530.0, 60030.0], [529.0, 60031.0], [528.0, 60030.8], [522.0, 60031.0], [521.0, 60036.0], [520.0, 60032.166666666664], [572.0, 60027.5], [575.0, 60029.0], [574.0, 60028.0], [573.0, 60028.0], [570.0, 60027.0], [569.0, 60030.0], [568.0, 60036.49999999999], [552.0, 60030.0], [545.0, 60030.0], [550.0, 60031.5], [548.0, 60032.0], [551.0, 60031.0], [605.0, 60030.0], [595.0, 60028.0], [606.0, 60028.5], [592.0, 60027.5], [594.0, 60027.0], [593.0, 60029.0], [603.0, 60028.0], [602.0, 60027.5], [600.0, 60027.5], [583.0, 60028.0], [580.0, 60028.0], [579.0, 60028.0], [578.0, 60027.5], [576.0, 60027.0], [590.0, 60027.0], [589.0, 60029.0], [588.0, 60028.5], [584.0, 60028.0], [598.0, 60028.0], [597.0, 60028.0], [596.0, 60028.0], [637.0, 60034.666666666664], [638.0, 60033.0], [634.0, 60034.0], [632.0, 60034.0], [631.0, 60033.5], [629.0, 60033.0], [628.0, 60032.0], [625.0, 60030.666666666664], [622.0, 60029.75], [608.0, 60029.5], [612.0, 60030.0], [610.0, 60030.5], [614.0, 60033.0], [613.0, 60030.0], [618.0, 60031.0], [617.0, 60030.0], [664.0, 60039.0], [668.0, 60039.0], [671.0, 60039.0], [667.0, 60040.666666666664], [663.0, 60043.0], [662.0, 60040.75000000001], [654.0, 60036.0], [643.0, 60034.5], [641.0, 60034.333333333336], [647.0, 60035.5], [645.0, 60036.5], [651.0, 60038.0], [650.0, 60038.0], [679.0, 60043.0], [701.0, 60039.0], [702.0, 60040.0], [700.0, 60047.0], [689.0, 60040.5], [687.0, 60043.0], [686.0, 60042.0], [685.0, 60041.5], [683.0, 60041.5], [678.0, 60042.0], [675.0, 60041.5], [711.0, 60037.5], [731.0, 60061.28571428571], [724.0, 60037.857142857145], [723.0, 60056.0], [716.0, 60036.0], [713.0, 60040.0], [709.0, 60037.666666666664], [706.0, 60037.0], [705.0, 60037.0], [704.0, 60037.5], [762.0, 60093.5], [750.0, 60080.33333333333], [744.0, 60069.28571428572], [737.0, 60047.6], [736.0, 60120.0], [799.0, 60034.0], [795.0, 60051.25], [791.0, 60048.2], [786.0, 60090.8], [781.0, 60082.263157894726], [814.0, 60037.333333333336], [808.0, 60032.88888888888]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[466.1385714285719, 60035.79571428565]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 15060.0], [3.0, 15049.0], [4.0, 15062.0], [5.0, 21028.0], [6.0, 21044.0], [7.0, 21046.0], [8.0, 15052.0], [9.0, 10534.0], [10.0, 7051.0], [11.0, 10535.0], [12.0, 10527.5], [13.0, 29.25], [14.0, 780.75], [15.0, 29.0], [16.0, 2391.7142857142853], [17.0, 27.75], [18.0, 9055.5], [19.0, 27.0], [20.0, 28.0], [21.0, 4128.999999999999], [22.0, 1791.5], [23.0, 7061.0], [24.0, 29.0], [25.0, 429.2], [26.0, 7550.5], [27.0, 28.2], [28.0, 1669.7272727272727], [29.0, 13150.249999999998], [30.0, 14044.666666666668], [31.0, 10524.0], [33.0, 10532.5], [32.0, 15781.5], [35.0, 8211.333333333332], [34.0, 9702.666666666668], [37.0, 21038.0], [36.0, 9371.222222222223], [39.0, 21045.0], [38.0, 21029.0], [41.0, 12638.8], [40.0, 7702.375000000001], [43.0, 10536.083333333334], [42.0, 41.0], [45.0, 1534.0], [44.0, 8034.333333333333], [47.0, 14031.0], [46.0, 21035.0], [49.0, 11813.777777777777], [48.0, 9032.999999999998], [51.0, 10532.75], [50.0, 15066.0], [53.0, 2367.0], [52.0, 15791.25], [55.0, 7839.4], [54.0, 5038.333333333334], [57.0, 11410.5], [56.0, 11700.0], [59.0, 7039.750000000001], [58.0, 14037.0], [61.0, 12640.8], [60.0, 11699.888888888887], [63.0, 21040.0], [62.0, 12042.857142857141], [67.0, 11243.736842105263], [66.0, 28.0], [65.0, 5535.0], [64.0, 10550.0], [71.0, 6053.666666666667], [70.0, 14049.333333333332], [69.0, 13163.125], [68.0, 5850.181818181818], [75.0, 533.5], [74.0, 9278.5], [73.0, 10527.285714285712], [72.0, 7034.0], [79.0, 7368.666666666666], [78.0, 7037.8], [77.0, 6039.0], [76.0, 8790.5], [83.0, 4034.2999999999997], [82.0, 535.5], [81.0, 199.16666666666666], [80.0, 2366.0], [87.0, 7034.5], [86.0, 9824.333333333334], [85.0, 28.0], [84.0, 27.666666666666668], [91.0, 28.0], [90.0, 10533.5], [89.0, 12280.583333333332], [88.0, 12036.4], [95.0, 13231.8], [94.0, 21032.0], [93.0, 1532.5], [92.0, 1535.5], [99.0, 1231.6], [98.0, 2036.6666666666667], [97.0, 34.0], [96.0, 1407.0416666666663], [103.0, 1785.75], [102.0, 278.5], [101.0, 3145.8518518518517], [100.0, 931.8], [107.0, 7030.0], [106.0, 5040.0], [105.0, 6270.153846153848], [104.0, 2316.5], [111.0, 1454.0], [110.0, 7790.666666666666], [109.0, 3718.823529411765], [108.0, 54.44444444444444], [114.0, 2462.0], [113.0, 2507.3333333333335], [112.0, 1392.0], [135.0, 3517.0], [151.0, 1498.0], [339.0, 7365.0], [421.0, 21039.0], [828.0, 27.0], [831.0, 21041.0], [817.0, 11084.73684210526], [816.0, 15035.714285714284], [819.0, 10532.5], [818.0, 21041.0], [821.0, 21032.0], [820.0, 14031.666666666668], [830.0, 28.375000000000004], [829.0, 14729.800000000001], [827.0, 1537.0], [826.0, 5186.153846153846], [825.0, 10539.666666666666], [824.0, 21029.0], [815.0, 4330.5], [823.0, 13161.5], [822.0, 21039.0], [860.0, 27.5], [863.0, 4066.25], [849.0, 5532.0], [848.0, 532.5], [851.0, 28.25], [850.0, 286.0], [853.0, 975.6], [852.0, 142.22222222222223], [862.0, 1102.6000000000001], [861.0, 1785.0], [859.0, 29.5], [858.0, 1779.8064516129032], [857.0, 27.285714285714285], [856.0, 1033.0], [847.0, 15053.0], [833.0, 21052.6], [832.0, 10537.5], [835.0, 11754.285714285714], [834.0, 7609.000000000001], [837.0, 7546.75], [836.0, 28.0], [839.0, 7542.4000000000015], [838.0, 9143.1], [846.0, 5675.545454545455], [845.0, 6038.0], [844.0, 2423.8695652173915], [843.0, 28.0], [842.0, 4250.947368421053], [841.0, 11301.75], [840.0, 28.0], [855.0, 28.6], [854.0, 1435.2], [892.0, 405.625], [895.0, 28.0], [881.0, 30.0], [880.0, 531.0], [883.0, 1264.6923076923078], [882.0, 1448.25], [885.0, 3041.0], [884.0, 28.0], [894.0, 28.0], [893.0, 28.666666666666668], [891.0, 27.0], [890.0, 28.0], [889.0, 26.5], [888.0, 3041.0], [879.0, 27.5], [865.0, 28.0], [864.0, 3040.6666666666665], [867.0, 28.0], [866.0, 2369.0], [869.0, 3349.923076923077], [868.0, 5876.0], [871.0, 112.99999999999999], [870.0, 3425.846153846154], [878.0, 1674.0], [877.0, 1031.857142857143], [876.0, 27.0], [875.0, 1608.0], [874.0, 27.0], [873.0, 609.3846153846154], [872.0, 27.333333333333332], [887.0, 27.0], [886.0, 27.0], [924.0, 74.0], [927.0, 209.35714285714286], [913.0, 1040.0], [912.0, 5043.5], [915.0, 3407.2000000000007], [914.0, 6375.333333333334], [917.0, 700.6666666666667], [916.0, 2985.2999999999997], [926.0, 89.88888888888889], [925.0, 77.0], [923.0, 817.25], [922.0, 588.3499999999999], [921.0, 2999.6000000000004], [920.0, 1461.857142857143], [911.0, 3707.666666666667], [897.0, 31.0], [896.0, 31.428571428571427], [899.0, 33.0], [898.0, 284.91666666666674], [901.0, 44.666666666666664], [900.0, 541.3333333333333], [903.0, 28.25], [902.0, 30.9], [910.0, 27.666666666666668], [909.0, 3342.1999999999994], [908.0, 28.666666666666668], [907.0, 1461.0], [906.0, 7045.0], [905.0, 7050.5], [904.0, 3145.6666666666665], [919.0, 588.0555555555555], [918.0, 1149.3333333333333], [953.0, 862.6], [958.0, 2072.4], [959.0, 62.0], [945.0, 71.0], [944.0, 2226.428571428571], [947.0, 1165.5], [946.0, 70.85714285714286], [949.0, 51.666666666666664], [948.0, 826.9999999999999], [957.0, 2300.307692307692], [956.0, 1397.0], [955.0, 846.1578947368419], [952.0, 3073.0], [935.0, 923.7142857142858], [934.0, 1298.6153846153843], [933.0, 62.75], [932.0, 972.3], [931.0, 2336.25], [930.0, 68.33333333333333], [929.0, 67.66666666666667], [928.0, 503.4782608695652], [943.0, 1581.5], [942.0, 72.0], [941.0, 447.75], [940.0, 393.16666666666663], [939.0, 62.666666666666664], [938.0, 65.7], [937.0, 1074.3333333333335], [936.0, 3079.3333333333335], [951.0, 2402.1666666666665], [950.0, 823.6470588235294], [988.0, 278.0], [991.0, 229.8], [977.0, 28.0], [976.0, 29.0], [979.0, 1537.8333333333333], [978.0, 1826.2432432432427], [981.0, 281.25], [980.0, 1028.0], [990.0, 1621.5], [989.0, 364.33333333333337], [987.0, 230.13333333333335], [986.0, 28.0], [985.0, 231.8], [984.0, 27.5], [975.0, 3049.6], [961.0, 1471.8], [960.0, 2442.375], [963.0, 649.0], [962.0, 62.333333333333336], [965.0, 34.333333333333336], [964.0, 1294.0], [967.0, 534.4166666666667], [966.0, 37.5], [974.0, 31.0], [973.0, 3721.0], [972.0, 786.25], [971.0, 534.5], [970.0, 499.5333333333333], [969.0, 3045.0], [968.0, 3045.6], [983.0, 551.5], [982.0, 390.0], [1020.0, 1050.0], [1023.0, 489.57142857142856], [1009.0, 32.0], [1008.0, 533.3], [1011.0, 762.2727272727273], [1010.0, 320.57142857142856], [1013.0, 631.4], [1012.0, 1038.0], [1022.0, 1728.3333333333333], [1021.0, 1051.0], [1019.0, 399.3636363636363], [1018.0, 30.6], [1017.0, 142.44444444444446], [1016.0, 140.66666666666663], [1007.0, 30.5], [993.0, 379.0], [992.0, 230.80000000000004], [995.0, 27.0], [994.0, 28.75], [997.0, 485.09090909090907], [996.0, 196.83333333333334], [999.0, 27.666666666666668], [998.0, 1034.0], [1006.0, 1136.1], [1005.0, 1440.75], [1004.0, 40.375], [1003.0, 849.0], [1002.0, 229.4], [1001.0, 28.0], [1000.0, 588.1111111111111], [1015.0, 531.6666666666667], [1014.0, 784.0833333333335], [1084.0, 344.6470588235294], [1056.0, 834.5], [1058.0, 1650.65], [1060.0, 698.8333333333333], [1062.0, 1785.75], [1064.0, 1170.6000000000001], [1066.0, 735.0999999999999], [1068.0, 863.3333333333333], [1070.0, 1435.8], [1086.0, 576.125], [1082.0, 343.3333333333333], [1080.0, 406.4285714285714], [1078.0, 547.4375], [1076.0, 677.1538461538462], [1074.0, 546.5], [1072.0, 631.0000000000001], [1038.0, 50.285714285714285], [1036.0, 287.125], [1034.0, 31.333333333333332], [1032.0, 1631.8999999999996], [1030.0, 197.08333333333337], [1028.0, 172.57142857142856], [1026.0, 1040.0], [1024.0, 301.75], [1054.0, 3047.8333333333335], [1052.0, 713.0], [1050.0, 1036.3636363636363], [1048.0, 422.21739130434787], [1046.0, 28.333333333333332], [1044.0, 27.0], [1042.0, 1034.0], [1040.0, 28.0], [1144.0, 472.1111111111111], [1140.0, 244.75], [1148.0, 502.8666666666667], [1120.0, 204.00000000000003], [1122.0, 460.375], [1124.0, 213.27272727272725], [1126.0, 217.66666666666666], [1128.0, 720.25], [1130.0, 218.0], [1132.0, 621.4], [1150.0, 219.0], [1146.0, 246.55555555555554], [1142.0, 684.08], [1138.0, 1162.5714285714284], [1136.0, 228.0], [1088.0, 200.0], [1090.0, 487.88235294117646], [1092.0, 381.0], [1094.0, 463.1333333333332], [1096.0, 192.33333333333334], [1098.0, 194.0], [1100.0, 365.40000000000003], [1102.0, 535.1481481481482], [1118.0, 621.8947368421053], [1116.0, 177.5], [1114.0, 179.23076923076923], [1112.0, 185.0], [1110.0, 184.25], [1108.0, 341.5], [1106.0, 170.8], [1104.0, 335.0], [1206.0, 677.923076923077], [1202.0, 1592.5999999999997], [1212.0, 444.4], [1184.0, 999.2727272727274], [1186.0, 593.5555555555555], [1188.0, 254.375], [1192.0, 425.0], [1194.0, 255.0], [1196.0, 255.66666666666666], [1198.0, 929.0], [1214.0, 1036.0810810810813], [1210.0, 241.0], [1204.0, 615.7647058823529], [1200.0, 860.1], [1152.0, 899.3333333333335], [1154.0, 376.8571428571429], [1156.0, 232.2727272727273], [1158.0, 239.0], [1162.0, 242.66666666666666], [1164.0, 966.75], [1166.0, 218.0], [1182.0, 255.45454545454547], [1180.0, 255.0], [1178.0, 345.97222222222223], [1176.0, 234.0], [1174.0, 227.0], [1172.0, 227.0], [1170.0, 730.3333333333334], [1272.0, 1163.4], [1268.0, 354.8], [1276.0, 610.25], [1248.0, 470.6], [1250.0, 418.2857142857143], [1252.0, 1287.9523809523812], [1254.0, 700.125], [1256.0, 849.2000000000002], [1258.0, 935.608695652174], [1260.0, 466.7333333333333], [1262.0, 858.7692307692307], [1278.0, 1358.0], [1274.0, 361.0], [1270.0, 355.6666666666667], [1266.0, 935.4444444444445], [1264.0, 690.6842105263157], [1216.0, 1105.5], [1218.0, 244.33333333333334], [1220.0, 1248.3], [1222.0, 548.7692307692308], [1224.0, 736.5], [1226.0, 1241.0], [1228.0, 838.4], [1230.0, 237.0], [1246.0, 1086.655172413793], [1244.0, 264.99999999999994], [1242.0, 234.33333333333334], [1240.0, 908.3333333333333], [1238.0, 285.7142857142857], [1236.0, 272.3636363636364], [1234.0, 222.4], [1232.0, 392.15384615384613], [1336.0, 514.6666666666666], [1332.0, 494.5], [1340.0, 735.1521739130435], [1312.0, 636.0799999999999], [1314.0, 433.375], [1316.0, 734.235294117647], [1318.0, 434.0], [1320.0, 947.7794117647057], [1322.0, 608.2187500000002], [1324.0, 450.8888888888889], [1326.0, 784.4666666666665], [1342.0, 693.2592592592592], [1338.0, 628.0], [1334.0, 693.3181818181818], [1330.0, 906.5468750000001], [1328.0, 562.6], [1280.0, 354.0], [1282.0, 358.0], [1284.0, 361.5], [1286.0, 372.0], [1288.0, 375.2857142857143], [1290.0, 778.2], [1292.0, 717.6666666666666], [1294.0, 506.3529411764707], [1310.0, 573.1428571428572], [1308.0, 424.4], [1306.0, 576.2307692307693], [1304.0, 914.75], [1302.0, 630.7142857142858], [1300.0, 410.5], [1298.0, 396.50000000000006], [1296.0, 542.5384615384615], [1398.0, 688.854625550661], [1384.0, 855.5243902439026], [1400.0, 642.3825052484243], [1376.0, 676.9095022624432], [1378.0, 764.088888888889], [1380.0, 688.1384615384615], [1382.0, 919.5172413793105], [1386.0, 771.3977272727274], [1388.0, 481.5714285714286], [1390.0, 1123.3333333333333], [1396.0, 858.0769230769231], [1394.0, 1019.8669275929554], [1392.0, 813.5214285714286], [1358.0, 652.2777777777777], [1356.0, 1416.888888888889], [1354.0, 458.2307692307692], [1352.0, 721.7708333333333], [1350.0, 534.25], [1348.0, 926.3750000000001], [1346.0, 683.7333333333333], [1344.0, 542.9999999999999], [1374.0, 925.8409090909092], [1372.0, 447.0], [1370.0, 452.5], [1368.0, 457.0], [1366.0, 457.2], [1364.0, 803.2959183673469], [1362.0, 794.4864864864866], [1360.0, 1026.2142857142858], [1470.0, 737.6923076923078], [1446.0, 475.0], [1444.0, 979.0], [1442.0, 887.0999999999998], [1438.0, 463.0], [1530.0, 460.0], [1514.0, 372.0], [1522.0, 177.33333333333334], [1496.0, 994.3157894736842], [1524.0, 459.0], [1526.0, 43.0], [1512.0, 39.5], [1510.0, 90.0], [1516.0, 84.8125], [1518.0, 63.37499999999999], [1592.0, 376.8571428571429], [1564.0, 50.35714285714286], [1536.0, 40.5], [1546.0, 903.9710144927537], [1568.0, 447.77142857142854], [1588.0, 342.4], [1570.0, 53.44444444444444], [1572.0, 54.63636363636363], [1574.0, 467.0], [1576.0, 54.333333333333336], [1582.0, 742.6800000000001], [1580.0, 57.0], [1558.0, 54.0], [1554.0, 464.0], [1562.0, 51.0], [1662.0, 458.66666666666663], [1626.0, 84.5], [1604.0, 74.75], [1612.0, 460.0], [1632.0, 79.5], [1654.0, 86.0], [1650.0, 82.33333333333334], [1634.0, 77.72727272727272], [1638.0, 74.33333333333333], [1642.0, 78.5], [1646.0, 80.25], [1620.0, 81.66666666666667], [1674.0, 127.25], [1678.0, 125.62500000000001], [1664.0, 108.5625], [1694.0, 123.5], [1690.0, 122.875], [1670.0, 122.25], [1724.0, 124.0], [1718.0, 122.33333333333334], [1714.0, 459.0], [1716.0, 121.5], [1712.0, 570.0], [1706.0, 122.14285714285715], [1710.0, 793.5], [1682.0, 123.0], [1686.0, 128.25], [1730.0, 459.0], [1752.0, 141.0], [1734.0, 141.33333333333334], [1736.0, 141.0], [1740.0, 146.0], [1748.0, 139.85714285714286], [1822.0, 506.0], [1818.0, 182.0], [1812.0, 212.0], [1820.0, 1471.0], [1814.0, 216.5], [1798.0, 165.66666666666666], [1800.0, 172.0], [1842.0, 713.6666666666666], [1844.0, 203.68000000000004], [1846.0, 215.0], [1852.0, 162.0], [1826.0, 204.33333333333334], [1832.0, 209.0], [1834.0, 210.0], [1836.0, 829.5], [1838.0, 210.0], [1810.0, 174.5], [1860.0, 164.5], [1884.0, 167.5], [1880.0, 167.33333333333331], [1876.0, 167.5], [1872.0, 165.0], [1858.0, 163.5], [1862.0, 163.0], [1864.0, 163.9], [1868.0, 163.0], [1870.0, 162.0], [1888.0, 168.0], [1916.0, 178.0], [1906.0, 171.4], [1890.0, 168.71428571428572], [1892.0, 168.6], [1900.0, 169.0], [1902.0, 168.75], [1926.0, 182.66666666666666], [1934.0, 192.0], [1944.0, 199.75], [1946.0, 199.0], [2000.0, 454.0], [1998.0, 451.0], [2048.0, 292.0], [2092.0, 317.0], [2096.0, 322.0], [2100.0, 462.27139364303173], [2097.0, 322.5], [2073.0, 450.42857142857144], [2053.0, 533.7199999999999], [1083.0, 150.0], [1075.0, 297.75], [1087.0, 201.8], [1057.0, 231.4], [1059.0, 2461.2857142857147], [1061.0, 1034.3], [1063.0, 602.0], [1065.0, 2562.736842105263], [1067.0, 1035.5], [1069.0, 1455.9473684210525], [1071.0, 403.625], [1085.0, 170.5], [1081.0, 117.0], [1077.0, 1657.2142857142858], [1073.0, 35.66666666666667], [1039.0, 294.0], [1037.0, 418.125], [1035.0, 447.5294117647059], [1033.0, 31.666666666666668], [1031.0, 28.25], [1029.0, 173.7142857142857], [1027.0, 172.47619047619045], [1025.0, 1031.0], [1055.0, 27.0], [1053.0, 1047.0], [1051.0, 1031.0], [1049.0, 28.0], [1047.0, 279.0], [1045.0, 280.59999999999997], [1043.0, 100.4285714285714], [1041.0, 363.33333333333337], [1149.0, 219.33333333333334], [1151.0, 499.1666666666667], [1121.0, 518.7499999999999], [1123.0, 711.8333333333334], [1125.0, 216.375], [1127.0, 217.16666666666669], [1129.0, 216.66666666666666], [1131.0, 221.0], [1135.0, 221.57142857142856], [1133.0, 347.375], [1147.0, 245.33333333333334], [1145.0, 247.0], [1143.0, 242.75], [1141.0, 243.0], [1139.0, 680.1428571428571], [1137.0, 447.8888888888889], [1119.0, 477.72727272727275], [1089.0, 318.375], [1091.0, 182.5], [1093.0, 1145.666666666667], [1095.0, 744.7222222222222], [1097.0, 193.0], [1099.0, 192.7142857142857], [1101.0, 1172.0], [1103.0, 164.25], [1117.0, 685.9166666666667], [1115.0, 443.0666666666666], [1113.0, 569.9230769230769], [1111.0, 186.0], [1109.0, 1132.1052631578943], [1107.0, 169.33333333333334], [1105.0, 413.04], [1213.0, 3264.0], [1215.0, 792.212121212121], [1185.0, 508.74999999999994], [1187.0, 256.53846153846155], [1191.0, 256.0], [1189.0, 612.2142857142857], [1193.0, 690.1428571428572], [1195.0, 255.0], [1197.0, 257.5], [1199.0, 1263.0], [1211.0, 242.5], [1209.0, 706.0000000000001], [1207.0, 901.9999999999999], [1205.0, 931.7222222222222], [1201.0, 1137.5], [1183.0, 402.7142857142858], [1153.0, 231.0], [1155.0, 874.2400000000004], [1157.0, 464.3333333333333], [1159.0, 728.0645161290323], [1163.0, 246.5], [1165.0, 506.88235294117646], [1167.0, 218.2], [1181.0, 252.0], [1179.0, 503.3333333333333], [1177.0, 232.0], [1175.0, 566.6111111111111], [1173.0, 502.77272727272725], [1171.0, 227.0], [1169.0, 358.8666666666667], [1277.0, 356.0], [1279.0, 357.2], [1249.0, 386.1666666666666], [1251.0, 1377.9473684210523], [1253.0, 778.7999999999998], [1255.0, 590.4285714285714], [1257.0, 555.6], [1259.0, 965.25], [1261.0, 673.2666666666667], [1263.0, 1145.5000000000002], [1275.0, 358.0], [1273.0, 671.5384615384615], [1271.0, 482.25], [1269.0, 522.6666666666666], [1267.0, 630.1], [1265.0, 562.0769230769231], [1247.0, 392.47826086956525], [1217.0, 245.0], [1219.0, 245.0], [1221.0, 242.25], [1223.0, 234.85714285714283], [1225.0, 736.3500000000001], [1227.0, 290.3], [1229.0, 408.64583333333337], [1231.0, 738.0], [1245.0, 257.8571428571429], [1243.0, 591.5714285714287], [1241.0, 352.5555555555555], [1239.0, 337.5333333333333], [1237.0, 218.33333333333334], [1235.0, 229.40000000000003], [1233.0, 227.2], [1341.0, 719.8000000000001], [1343.0, 1047.5], [1313.0, 1314.75], [1315.0, 687.5], [1317.0, 774.5000000000001], [1319.0, 436.0], [1321.0, 951.5], [1323.0, 542.8181818181819], [1325.0, 496.047619047619], [1327.0, 461.0], [1339.0, 748.6097560975609], [1337.0, 518.5], [1335.0, 1015.5], [1333.0, 1454.4545454545457], [1331.0, 493.6666666666667], [1329.0, 688.2777777777778], [1311.0, 637.5999999999999], [1281.0, 580.1111111111111], [1283.0, 3031.8333333333335], [1285.0, 365.5], [1287.0, 638.9565217391304], [1289.0, 712.7333333333335], [1291.0, 657.8333333333334], [1293.0, 444.8125], [1295.0, 418.84374999999994], [1309.0, 545.9629629629628], [1307.0, 774.0], [1305.0, 415.29999999999995], [1303.0, 411.8181818181818], [1301.0, 605.8928571428572], [1299.0, 594.6666666666669], [1297.0, 389.3333333333333], [1397.0, 585.5263157894738], [1377.0, 767.6482758620688], [1379.0, 689.2888888888888], [1381.0, 703.8888888888889], [1383.0, 446.8], [1385.0, 509.2000000000001], [1387.0, 874.7173913043478], [1389.0, 726.8672566371681], [1391.0, 836.2268041237115], [1399.0, 695.8204283360789], [1395.0, 573.5641025641025], [1393.0, 970.3357664233577], [1359.0, 917.2499999999999], [1357.0, 607.1016949152544], [1355.0, 624.9767441860465], [1353.0, 590.4153846153846], [1351.0, 731.0], [1349.0, 962.925925925926], [1347.0, 639.3030303030303], [1345.0, 788.32], [1375.0, 744.1744186046508], [1373.0, 630.0], [1371.0, 2235.555555555556], [1369.0, 703.8333333333334], [1367.0, 679.1111111111111], [1365.0, 461.0], [1363.0, 537.6999999999999], [1361.0, 452.0], [1437.0, 463.0], [1429.0, 463.0], [1425.0, 787.9642857142858], [1411.0, 467.10526315789474], [1511.0, 54.0], [1509.0, 81.0], [1535.0, 44.0], [1527.0, 44.57142857142858], [1531.0, 40.0], [1513.0, 60.294117647058826], [1515.0, 101.75], [1517.0, 62.5], [1519.0, 36.0], [1597.0, 1466.0], [1551.0, 47.5], [1541.0, 46.6], [1543.0, 44.5], [1599.0, 459.0], [1591.0, 65.0], [1569.0, 53.54545454545455], [1573.0, 54.0], [1575.0, 55.666666666666664], [1577.0, 637.4], [1581.0, 59.2], [1559.0, 54.0], [1565.0, 50.5], [1567.0, 52.333333333333336], [1653.0, 86.0], [1615.0, 82.5], [1607.0, 81.0], [1611.0, 80.0], [1609.0, 693.8666666666668], [1661.0, 91.0], [1651.0, 83.0], [1635.0, 73.75], [1639.0, 203.33333333333331], [1643.0, 78.85714285714285], [1645.0, 80.5], [1647.0, 80.0], [1619.0, 83.25], [1623.0, 83.0], [1627.0, 81.33333333333334], [1631.0, 81.0], [1665.0, 121.66666666666666], [1689.0, 126.25], [1677.0, 126.0], [1703.0, 123.83333333333333], [1719.0, 122.0], [1715.0, 121.5], [1713.0, 121.0], [1707.0, 121.0], [1709.0, 459.0], [1683.0, 122.75], [1687.0, 128.0], [1731.0, 174.42857142857144], [1729.0, 126.5], [1739.0, 144.5], [1741.0, 145.0], [1785.0, 515.2222222222223], [1789.0, 212.83333333333331], [1791.0, 213.0], [1751.0, 143.66666666666666], [1801.0, 218.0], [1797.0, 164.0], [1795.0, 164.66666666666666], [1823.0, 183.0], [1817.0, 181.5], [1813.0, 177.0], [1841.0, 197.71428571428572], [1843.0, 201.0], [1845.0, 203.42105263157896], [1847.0, 168.2272727272727], [1853.0, 163.00000000000003], [1829.0, 209.0], [1827.0, 1214.375], [1835.0, 832.0], [1809.0, 170.0], [1811.0, 176.5], [1883.0, 167.0], [1857.0, 163.0], [1881.0, 168.0], [1877.0, 167.8], [1879.0, 169.0], [1875.0, 168.0], [1873.0, 165.75], [1859.0, 163.33333333333334], [1861.0, 164.16666666666669], [1865.0, 161.25], [1919.0, 455.5], [1907.0, 168.0], [1905.0, 171.0], [1889.0, 169.0], [1893.0, 166.83333333333331], [1895.0, 455.25000000000006], [1897.0, 233.84615384615384], [1903.0, 168.33333333333334], [1943.0, 199.0], [1947.0, 198.0], [1965.0, 216.0], [1997.0, 243.0], [2043.0, 288.0], [2013.0, 452.3333333333333], [1999.0, 451.0], [2098.0, 323.0], [2091.0, 316.5], [2099.0, 327.75], [2087.0, 446.92307692307696], [1.0, 15049.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1392.8105874277883, 832.3497397471837]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[1470.0, 12620.464285714284], [1442.0, 12347.764705882353], [1425.0, 12277.92857142857], [1411.0, 12279.272727272728], [1525.0, 12498.333333333334], [1526.0, 12401.0], [1513.0, 12668.625], [1512.0, 12304.0], [1523.0, 12689.0], [1522.0, 12601.0], [1521.0, 12409.0], [1520.0, 12489.0], [1496.0, 12621.739130434782], [1495.0, 12521.0], [1518.0, 12684.666666666666], [1516.0, 12390.0], [1515.0, 12547.0], [1514.0, 12591.6], [1582.0, 12581.8], [1577.0, 12491.11111111111], [1568.0, 12623.923076923074], [1567.0, 12495.142857142857], [1565.0, 12583.0], [1546.0, 12574.0], [1658.0, 12526.5], [1662.0, 12515.249999999998], [1660.0, 12450.0], [1659.0, 12613.8], [1661.0, 12408.571428571428], [1657.0, 12618.666666666666], [1609.0, 12417.07142857143], [1608.0, 12510.5], [1607.0, 12456.0], [1606.0, 12403.0], [1605.0, 12510.0], [1768.0, 12537.0], [1782.0, 12761.0], [1785.0, 12416.000000000002], [1761.0, 12391.333333333334], [1760.0, 12450.0], [1763.0, 12436.0], [1762.0, 12568.0], [1765.0, 12412.0], [1764.0, 12238.0], [1767.0, 12453.6], [1766.0, 12395.384615384615], [1769.0, 12679.0], [1771.0, 12458.5], [1770.0, 12572.25], [1773.0, 12341.0], [1772.0, 12581.0], [1775.0, 12599.5], [1774.0, 12251.0], [1784.0, 12509.57142857143], [1783.0, 12465.647058823532], [1781.0, 12604.0], [1780.0, 12513.666666666666], [1779.0, 12422.0], [1778.0, 12467.714285714284], [1777.0, 12225.0], [1776.0, 12395.0], [1887.0, 12475.0], [1892.0, 12322.5], [1895.0, 12425.357142857143], [1894.0, 12445.75], [1893.0, 12473.333333333334], [1891.0, 12472.230769230768], [1890.0, 12565.142857142857], [1888.0, 12307.0], [1871.0, 12479.0], [1870.0, 12421.6], [1869.0, 12259.666666666666], [1868.0, 12476.25], [1886.0, 12350.0], [1884.0, 12476.333333333334], [1882.0, 12573.0], [1881.0, 12435.5], [1880.0, 12478.0], [1879.0, 12751.0], [1878.0, 12623.0], [1877.0, 12607.75], [1876.0, 12449.0], [1875.0, 12341.5], [1874.0, 12533.0], [1873.0, 12608.333333333334], [1872.0, 12299.166666666666], [1883.0, 12465.0], [2024.0, 12168.0], [2043.0, 12364.0], [2047.0, 12249.0], [2017.0, 12426.555555555555], [2016.0, 12394.249999999998], [2021.0, 12551.5], [2019.0, 12420.0], [2018.0, 12465.6], [2023.0, 12437.8], [2022.0, 12272.0], [2025.0, 12478.5], [2027.0, 12290.0], [2026.0, 12211.0], [2029.0, 12423.0], [2028.0, 12635.0], [2031.0, 12307.666666666666], [2030.0, 12363.142857142859], [2046.0, 12527.666666666666], [2044.0, 12478.0], [2041.0, 12453.666666666666], [2040.0, 12559.5], [2039.0, 12399.75], [2038.0, 12445.666666666668], [2036.0, 12394.733333333334], [2035.0, 12526.5], [2034.0, 12152.0], [2033.0, 12507.5], [2032.0, 12332.666666666666], [2100.0, 12348.307692307693], [2087.0, 12357.714285714284], [2073.0, 12450.526315789471], [2072.0, 12123.0], [2053.0, 12367.7], [2051.0, 12294.2], [2050.0, 12479.25], [2049.0, 12440.75], [2048.0, 12547.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1785.2128571428573, 12458.95857142858]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6175814E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758146E12, 0.0], [1.61758152E12, 0.0], [1.6175814E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61758146E12, 0.0], [1.61758152E12, 0.0], [1.6175814E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758152E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 652.8952830188683, "minX": 1.6175814E12, "maxY": 60035.79571428565, "series": [{"data": [[1.61758146E12, 60035.79571428565]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758146E12, 6644.598451327435], [1.61758152E12, 6697.295774647887], [1.6175814E12, 652.8952830188683]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175814E12, 12458.95857142858]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758152E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175814E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758146E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758146E12, 0.0], [1.61758152E12, 0.0], [1.6175814E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175814E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758152E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175814E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758146E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758146E12, 0.0], [1.61758152E12, 0.0], [1.6175814E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175814E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758152E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.6175814E12, "maxY": 60120.0, "series": [{"data": [[1.61758146E12, 60120.0], [1.61758152E12, 15081.0], [1.6175814E12, 15510.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61758146E12, 60039.0], [1.61758152E12, 15049.0], [1.6175814E12, 1473.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61758146E12, 60104.27], [1.61758152E12, 15080.2], [1.6175814E12, 3567.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61758146E12, 60044.0], [1.61758152E12, 15064.0], [1.6175814E12, 1557.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61758146E12, 26.0], [1.61758152E12, 27.0], [1.6175814E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61758146E12, 60027.0], [1.61758152E12, 28.0], [1.6175814E12, 480.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758152E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 60029.0, "series": [{"data": [[2.0, 32.0], [629.0, 60029.0], [701.0, 580.0], [672.0, 417.0], [797.0, 122.0], [774.0, 613.0], [3.0, 39.0], [830.0, 486.5], [838.0, 486.0], [840.0, 217.0], [882.0, 510.5], [876.0, 507.0], [870.0, 519.0], [910.0, 444.0], [903.0, 474.0], [944.0, 613.0], [951.0, 560.0], [954.0, 525.0], [928.0, 480.0], [987.0, 463.0], [1022.0, 452.0], [992.0, 254.0], [1078.0, 545.5], [1053.0, 406.0], [4.0, 28.5], [1112.0, 467.0], [1154.0, 546.0], [1269.0, 442.0], [1241.0, 458.0], [1231.0, 502.0], [1275.0, 505.0], [1296.0, 411.0], [1292.0, 493.0], [1281.0, 587.0], [5.0, 29.5], [1374.0, 508.0], [6.0, 28.0], [1802.0, 591.0], [7.0, 28.5], [8.0, 28.0], [9.0, 28.0], [10.0, 28.0], [11.0, 28.0], [12.0, 28.5], [13.0, 29.0], [14.0, 28.0], [15.0, 28.0], [16.0, 28.5], [18.0, 2037.5], [19.0, 30.0], [21.0, 37.5], [22.0, 28.0], [23.0, 29.0], [25.0, 28.0], [28.0, 28.5], [29.0, 28.0], [31.0, 30.0], [34.0, 28.5], [41.0, 28.0], [43.0, 1034.5], [55.0, 28.0], [66.0, 28.0], [70.0, 1032.5], [98.0, 28.0], [114.0, 29.0], [117.0, 32.0], [135.0, 60027.0], [244.0, 37.0], [1.0, 7053.0], [361.0, 31.0], [496.0, 66.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21038.0], [34.0, 21029.5], [629.0, 21041.5], [43.0, 21054.0], [3.0, 21039.0], [55.0, 21050.0], [66.0, 21037.0], [4.0, 21042.0], [5.0, 21035.0], [6.0, 21037.5], [7.0, 21033.0], [135.0, 21042.5], [8.0, 21041.0], [9.0, 21038.0], [10.0, 21046.0], [11.0, 21037.0], [12.0, 21045.5], [13.0, 21045.5], [14.0, 21042.5], [15.0, 21039.0], [1.0, 21039.0], [16.0, 21041.0], [19.0, 21035.0], [21.0, 21050.0], [22.0, 21033.0], [23.0, 21028.0], [29.0, 21033.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1802.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [629.0, 0.0], [701.0, 0.0], [672.0, 0.0], [797.0, 0.0], [774.0, 0.0], [3.0, 0.0], [830.0, 0.0], [838.0, 0.0], [840.0, 0.0], [882.0, 0.0], [876.0, 0.0], [870.0, 0.0], [910.0, 0.0], [903.0, 0.0], [944.0, 0.0], [951.0, 0.0], [954.0, 0.0], [928.0, 0.0], [987.0, 0.0], [1022.0, 0.0], [992.0, 0.0], [1078.0, 0.0], [1053.0, 0.0], [4.0, 0.0], [1112.0, 0.0], [1154.0, 0.0], [1269.0, 0.0], [1241.0, 0.0], [1231.0, 0.0], [1275.0, 0.0], [1296.0, 0.0], [1292.0, 0.0], [1281.0, 0.0], [5.0, 0.0], [1374.0, 0.0], [6.0, 0.0], [1802.0, 0.0], [7.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [18.0, 0.0], [19.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [25.0, 0.0], [28.0, 0.0], [29.0, 0.0], [31.0, 0.0], [34.0, 0.0], [41.0, 0.0], [43.0, 0.0], [55.0, 0.0], [66.0, 0.0], [70.0, 0.0], [98.0, 0.0], [114.0, 0.0], [117.0, 0.0], [135.0, 0.0], [244.0, 0.0], [1.0, 0.0], [361.0, 0.0], [496.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [34.0, 0.0], [629.0, 0.0], [43.0, 0.0], [3.0, 0.0], [55.0, 0.0], [66.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [135.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [1.0, 0.0], [16.0, 0.0], [19.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [29.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1802.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.7, "minX": 1.6175814E12, "maxY": 591.3833333333333, "series": [{"data": [[1.61758146E12, 13.016666666666667], [1.61758152E12, 1.7], [1.6175814E12, 591.3833333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758152E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6175814E12, "maxY": 576.9833333333333, "series": [{"data": [[1.61758146E12, 22.866666666666667], [1.61758152E12, 1.8166666666666667], [1.6175814E12, 576.9833333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61758146E12, 3.8666666666666667], [1.61758152E12, 0.55], [1.6175814E12, 0.016666666666666666]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758152E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6175814E12, "maxY": 565.3166666666667, "series": [{"data": [[1.6175814E12, 11.666666666666666]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61758146E12, 11.666666666666666]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.61758146E12, 11.2], [1.61758152E12, 1.8166666666666667], [1.6175814E12, 565.3166666666667]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61758146E12, 3.8666666666666667], [1.61758152E12, 0.55], [1.6175814E12, 0.016666666666666666]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758152E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6175814E12, "maxY": 576.9833333333333, "series": [{"data": [[1.61758146E12, 22.866666666666667], [1.61758152E12, 1.8166666666666667], [1.6175814E12, 576.9833333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61758146E12, 3.8666666666666667], [1.61758152E12, 0.55], [1.6175814E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758152E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

