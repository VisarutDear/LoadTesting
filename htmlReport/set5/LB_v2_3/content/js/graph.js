/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 60168.0, "series": [{"data": [[0.0, 60026.0], [0.1, 60026.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60026.0], [1.6, 60026.0], [1.7, 60026.0], [1.8, 60026.0], [1.9, 60026.0], [2.0, 60026.0], [2.1, 60026.0], [2.2, 60026.0], [2.3, 60026.0], [2.4, 60027.0], [2.5, 60027.0], [2.6, 60027.0], [2.7, 60027.0], [2.8, 60027.0], [2.9, 60027.0], [3.0, 60027.0], [3.1, 60027.0], [3.2, 60027.0], [3.3, 60027.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60027.0], [12.4, 60027.0], [12.5, 60027.0], [12.6, 60027.0], [12.7, 60027.0], [12.8, 60027.0], [12.9, 60027.0], [13.0, 60027.0], [13.1, 60027.0], [13.2, 60027.0], [13.3, 60027.0], [13.4, 60027.0], [13.5, 60027.0], [13.6, 60027.0], [13.7, 60027.0], [13.8, 60027.0], [13.9, 60027.0], [14.0, 60027.0], [14.1, 60027.0], [14.2, 60027.0], [14.3, 60027.0], [14.4, 60027.0], [14.5, 60027.0], [14.6, 60027.0], [14.7, 60027.0], [14.8, 60027.0], [14.9, 60027.0], [15.0, 60027.0], [15.1, 60027.0], [15.2, 60027.0], [15.3, 60027.0], [15.4, 60027.0], [15.5, 60027.0], [15.6, 60027.0], [15.7, 60027.0], [15.8, 60027.0], [15.9, 60027.0], [16.0, 60027.0], [16.1, 60027.0], [16.2, 60027.0], [16.3, 60027.0], [16.4, 60027.0], [16.5, 60027.0], [16.6, 60027.0], [16.7, 60027.0], [16.8, 60027.0], [16.9, 60027.0], [17.0, 60027.0], [17.1, 60027.0], [17.2, 60027.0], [17.3, 60027.0], [17.4, 60027.0], [17.5, 60027.0], [17.6, 60027.0], [17.7, 60027.0], [17.8, 60027.0], [17.9, 60027.0], [18.0, 60027.0], [18.1, 60027.0], [18.2, 60027.0], [18.3, 60027.0], [18.4, 60027.0], [18.5, 60027.0], [18.6, 60027.0], [18.7, 60027.0], [18.8, 60028.0], [18.9, 60028.0], [19.0, 60028.0], [19.1, 60028.0], [19.2, 60028.0], [19.3, 60028.0], [19.4, 60028.0], [19.5, 60028.0], [19.6, 60028.0], [19.7, 60028.0], [19.8, 60028.0], [19.9, 60028.0], [20.0, 60028.0], [20.1, 60028.0], [20.2, 60028.0], [20.3, 60028.0], [20.4, 60028.0], [20.5, 60028.0], [20.6, 60028.0], [20.7, 60028.0], [20.8, 60028.0], [20.9, 60028.0], [21.0, 60028.0], [21.1, 60028.0], [21.2, 60028.0], [21.3, 60028.0], [21.4, 60028.0], [21.5, 60028.0], [21.6, 60028.0], [21.7, 60028.0], [21.8, 60028.0], [21.9, 60028.0], [22.0, 60028.0], [22.1, 60028.0], [22.2, 60028.0], [22.3, 60028.0], [22.4, 60028.0], [22.5, 60028.0], [22.6, 60028.0], [22.7, 60028.0], [22.8, 60028.0], [22.9, 60028.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60029.0], [30.5, 60029.0], [30.6, 60029.0], [30.7, 60029.0], [30.8, 60029.0], [30.9, 60029.0], [31.0, 60029.0], [31.1, 60029.0], [31.2, 60029.0], [31.3, 60029.0], [31.4, 60029.0], [31.5, 60029.0], [31.6, 60029.0], [31.7, 60029.0], [31.8, 60029.0], [31.9, 60029.0], [32.0, 60029.0], [32.1, 60029.0], [32.2, 60029.0], [32.3, 60029.0], [32.4, 60029.0], [32.5, 60029.0], [32.6, 60029.0], [32.7, 60029.0], [32.8, 60029.0], [32.9, 60029.0], [33.0, 60029.0], [33.1, 60029.0], [33.2, 60029.0], [33.3, 60029.0], [33.4, 60029.0], [33.5, 60029.0], [33.6, 60029.0], [33.7, 60029.0], [33.8, 60029.0], [33.9, 60029.0], [34.0, 60029.0], [34.1, 60029.0], [34.2, 60029.0], [34.3, 60029.0], [34.4, 60029.0], [34.5, 60029.0], [34.6, 60029.0], [34.7, 60029.0], [34.8, 60029.0], [34.9, 60029.0], [35.0, 60029.0], [35.1, 60029.0], [35.2, 60029.0], [35.3, 60029.0], [35.4, 60029.0], [35.5, 60029.0], [35.6, 60029.0], [35.7, 60029.0], [35.8, 60029.0], [35.9, 60029.0], [36.0, 60029.0], [36.1, 60029.0], [36.2, 60029.0], [36.3, 60029.0], [36.4, 60029.0], [36.5, 60029.0], [36.6, 60029.0], [36.7, 60029.0], [36.8, 60029.0], [36.9, 60029.0], [37.0, 60029.0], [37.1, 60029.0], [37.2, 60029.0], [37.3, 60029.0], [37.4, 60029.0], [37.5, 60029.0], [37.6, 60029.0], [37.7, 60029.0], [37.8, 60029.0], [37.9, 60029.0], [38.0, 60029.0], [38.1, 60029.0], [38.2, 60029.0], [38.3, 60029.0], [38.4, 60029.0], [38.5, 60029.0], [38.6, 60029.0], [38.7, 60029.0], [38.8, 60029.0], [38.9, 60029.0], [39.0, 60029.0], [39.1, 60029.0], [39.2, 60029.0], [39.3, 60029.0], [39.4, 60029.0], [39.5, 60029.0], [39.6, 60029.0], [39.7, 60029.0], [39.8, 60029.0], [39.9, 60029.0], [40.0, 60029.0], [40.1, 60029.0], [40.2, 60030.0], [40.3, 60030.0], [40.4, 60030.0], [40.5, 60030.0], [40.6, 60030.0], [40.7, 60030.0], [40.8, 60030.0], [40.9, 60030.0], [41.0, 60030.0], [41.1, 60030.0], [41.2, 60030.0], [41.3, 60030.0], [41.4, 60030.0], [41.5, 60030.0], [41.6, 60030.0], [41.7, 60030.0], [41.8, 60030.0], [41.9, 60030.0], [42.0, 60030.0], [42.1, 60030.0], [42.2, 60030.0], [42.3, 60030.0], [42.4, 60030.0], [42.5, 60030.0], [42.6, 60030.0], [42.7, 60030.0], [42.8, 60030.0], [42.9, 60030.0], [43.0, 60030.0], [43.1, 60030.0], [43.2, 60030.0], [43.3, 60030.0], [43.4, 60030.0], [43.5, 60030.0], [43.6, 60030.0], [43.7, 60030.0], [43.8, 60030.0], [43.9, 60030.0], [44.0, 60030.0], [44.1, 60030.0], [44.2, 60030.0], [44.3, 60030.0], [44.4, 60030.0], [44.5, 60030.0], [44.6, 60030.0], [44.7, 60030.0], [44.8, 60030.0], [44.9, 60030.0], [45.0, 60030.0], [45.1, 60030.0], [45.2, 60030.0], [45.3, 60030.0], [45.4, 60030.0], [45.5, 60030.0], [45.6, 60030.0], [45.7, 60030.0], [45.8, 60030.0], [45.9, 60030.0], [46.0, 60030.0], [46.1, 60030.0], [46.2, 60031.0], [46.3, 60031.0], [46.4, 60031.0], [46.5, 60031.0], [46.6, 60031.0], [46.7, 60031.0], [46.8, 60031.0], [46.9, 60031.0], [47.0, 60031.0], [47.1, 60031.0], [47.2, 60031.0], [47.3, 60031.0], [47.4, 60031.0], [47.5, 60031.0], [47.6, 60031.0], [47.7, 60031.0], [47.8, 60031.0], [47.9, 60031.0], [48.0, 60031.0], [48.1, 60031.0], [48.2, 60031.0], [48.3, 60031.0], [48.4, 60031.0], [48.5, 60031.0], [48.6, 60031.0], [48.7, 60031.0], [48.8, 60031.0], [48.9, 60031.0], [49.0, 60031.0], [49.1, 60031.0], [49.2, 60031.0], [49.3, 60031.0], [49.4, 60031.0], [49.5, 60031.0], [49.6, 60031.0], [49.7, 60031.0], [49.8, 60031.0], [49.9, 60031.0], [50.0, 60031.0], [50.1, 60031.0], [50.2, 60031.0], [50.3, 60031.0], [50.4, 60031.0], [50.5, 60031.0], [50.6, 60031.0], [50.7, 60031.0], [50.8, 60031.0], [50.9, 60031.0], [51.0, 60031.0], [51.1, 60031.0], [51.2, 60031.0], [51.3, 60031.0], [51.4, 60031.0], [51.5, 60032.0], [51.6, 60032.0], [51.7, 60032.0], [51.8, 60032.0], [51.9, 60032.0], [52.0, 60032.0], [52.1, 60032.0], [52.2, 60032.0], [52.3, 60032.0], [52.4, 60032.0], [52.5, 60032.0], [52.6, 60032.0], [52.7, 60032.0], [52.8, 60032.0], [52.9, 60032.0], [53.0, 60032.0], [53.1, 60032.0], [53.2, 60032.0], [53.3, 60032.0], [53.4, 60032.0], [53.5, 60032.0], [53.6, 60032.0], [53.7, 60032.0], [53.8, 60032.0], [53.9, 60032.0], [54.0, 60032.0], [54.1, 60032.0], [54.2, 60032.0], [54.3, 60032.0], [54.4, 60032.0], [54.5, 60032.0], [54.6, 60032.0], [54.7, 60032.0], [54.8, 60033.0], [54.9, 60033.0], [55.0, 60033.0], [55.1, 60033.0], [55.2, 60033.0], [55.3, 60033.0], [55.4, 60033.0], [55.5, 60033.0], [55.6, 60033.0], [55.7, 60033.0], [55.8, 60033.0], [55.9, 60033.0], [56.0, 60033.0], [56.1, 60033.0], [56.2, 60033.0], [56.3, 60033.0], [56.4, 60033.0], [56.5, 60033.0], [56.6, 60033.0], [56.7, 60033.0], [56.8, 60033.0], [56.9, 60033.0], [57.0, 60033.0], [57.1, 60033.0], [57.2, 60033.0], [57.3, 60033.0], [57.4, 60033.0], [57.5, 60033.0], [57.6, 60033.0], [57.7, 60033.0], [57.8, 60033.0], [57.9, 60033.0], [58.0, 60033.0], [58.1, 60033.0], [58.2, 60033.0], [58.3, 60033.0], [58.4, 60034.0], [58.5, 60034.0], [58.6, 60034.0], [58.7, 60034.0], [58.8, 60034.0], [58.9, 60034.0], [59.0, 60034.0], [59.1, 60034.0], [59.2, 60034.0], [59.3, 60034.0], [59.4, 60034.0], [59.5, 60034.0], [59.6, 60034.0], [59.7, 60034.0], [59.8, 60034.0], [59.9, 60034.0], [60.0, 60034.0], [60.1, 60034.0], [60.2, 60034.0], [60.3, 60034.0], [60.4, 60034.0], [60.5, 60034.0], [60.6, 60034.0], [60.7, 60034.0], [60.8, 60034.0], [60.9, 60034.0], [61.0, 60034.0], [61.1, 60034.0], [61.2, 60034.0], [61.3, 60035.0], [61.4, 60035.0], [61.5, 60035.0], [61.6, 60035.0], [61.7, 60035.0], [61.8, 60035.0], [61.9, 60035.0], [62.0, 60035.0], [62.1, 60035.0], [62.2, 60035.0], [62.3, 60035.0], [62.4, 60035.0], [62.5, 60035.0], [62.6, 60035.0], [62.7, 60035.0], [62.8, 60035.0], [62.9, 60035.0], [63.0, 60035.0], [63.1, 60035.0], [63.2, 60035.0], [63.3, 60035.0], [63.4, 60035.0], [63.5, 60036.0], [63.6, 60036.0], [63.7, 60036.0], [63.8, 60036.0], [63.9, 60036.0], [64.0, 60036.0], [64.1, 60036.0], [64.2, 60036.0], [64.3, 60036.0], [64.4, 60036.0], [64.5, 60036.0], [64.6, 60036.0], [64.7, 60036.0], [64.8, 60036.0], [64.9, 60036.0], [65.0, 60036.0], [65.1, 60036.0], [65.2, 60036.0], [65.3, 60036.0], [65.4, 60036.0], [65.5, 60036.0], [65.6, 60036.0], [65.7, 60036.0], [65.8, 60036.0], [65.9, 60037.0], [66.0, 60037.0], [66.1, 60037.0], [66.2, 60037.0], [66.3, 60037.0], [66.4, 60037.0], [66.5, 60037.0], [66.6, 60037.0], [66.7, 60037.0], [66.8, 60037.0], [66.9, 60037.0], [67.0, 60037.0], [67.1, 60037.0], [67.2, 60037.0], [67.3, 60037.0], [67.4, 60037.0], [67.5, 60037.0], [67.6, 60037.0], [67.7, 60037.0], [67.8, 60037.0], [67.9, 60038.0], [68.0, 60038.0], [68.1, 60038.0], [68.2, 60038.0], [68.3, 60038.0], [68.4, 60038.0], [68.5, 60038.0], [68.6, 60038.0], [68.7, 60038.0], [68.8, 60038.0], [68.9, 60038.0], [69.0, 60038.0], [69.1, 60038.0], [69.2, 60038.0], [69.3, 60038.0], [69.4, 60038.0], [69.5, 60038.0], [69.6, 60038.0], [69.7, 60038.0], [69.8, 60038.0], [69.9, 60038.0], [70.0, 60038.0], [70.1, 60038.0], [70.2, 60038.0], [70.3, 60038.0], [70.4, 60038.0], [70.5, 60038.0], [70.6, 60038.0], [70.7, 60038.0], [70.8, 60038.0], [70.9, 60038.0], [71.0, 60038.0], [71.1, 60038.0], [71.2, 60038.0], [71.3, 60038.0], [71.4, 60038.0], [71.5, 60038.0], [71.6, 60038.0], [71.7, 60039.0], [71.8, 60039.0], [71.9, 60039.0], [72.0, 60039.0], [72.1, 60039.0], [72.2, 60039.0], [72.3, 60039.0], [72.4, 60039.0], [72.5, 60039.0], [72.6, 60039.0], [72.7, 60039.0], [72.8, 60039.0], [72.9, 60039.0], [73.0, 60039.0], [73.1, 60039.0], [73.2, 60039.0], [73.3, 60039.0], [73.4, 60039.0], [73.5, 60039.0], [73.6, 60039.0], [73.7, 60039.0], [73.8, 60039.0], [73.9, 60039.0], [74.0, 60039.0], [74.1, 60039.0], [74.2, 60040.0], [74.3, 60040.0], [74.4, 60040.0], [74.5, 60040.0], [74.6, 60040.0], [74.7, 60040.0], [74.8, 60040.0], [74.9, 60040.0], [75.0, 60040.0], [75.1, 60040.0], [75.2, 60040.0], [75.3, 60040.0], [75.4, 60040.0], [75.5, 60040.0], [75.6, 60040.0], [75.7, 60040.0], [75.8, 60040.0], [75.9, 60040.0], [76.0, 60040.0], [76.1, 60040.0], [76.2, 60040.0], [76.3, 60040.0], [76.4, 60040.0], [76.5, 60040.0], [76.6, 60040.0], [76.7, 60040.0], [76.8, 60040.0], [76.9, 60040.0], [77.0, 60041.0], [77.1, 60041.0], [77.2, 60041.0], [77.3, 60041.0], [77.4, 60041.0], [77.5, 60041.0], [77.6, 60041.0], [77.7, 60041.0], [77.8, 60041.0], [77.9, 60041.0], [78.0, 60041.0], [78.1, 60041.0], [78.2, 60041.0], [78.3, 60041.0], [78.4, 60041.0], [78.5, 60041.0], [78.6, 60041.0], [78.7, 60041.0], [78.8, 60041.0], [78.9, 60041.0], [79.0, 60041.0], [79.1, 60041.0], [79.2, 60041.0], [79.3, 60042.0], [79.4, 60042.0], [79.5, 60042.0], [79.6, 60042.0], [79.7, 60042.0], [79.8, 60042.0], [79.9, 60042.0], [80.0, 60042.0], [80.1, 60042.0], [80.2, 60042.0], [80.3, 60042.0], [80.4, 60042.0], [80.5, 60042.0], [80.6, 60042.0], [80.7, 60042.0], [80.8, 60042.0], [80.9, 60042.0], [81.0, 60042.0], [81.1, 60043.0], [81.2, 60043.0], [81.3, 60043.0], [81.4, 60043.0], [81.5, 60043.0], [81.6, 60043.0], [81.7, 60043.0], [81.8, 60043.0], [81.9, 60043.0], [82.0, 60043.0], [82.1, 60043.0], [82.2, 60043.0], [82.3, 60043.0], [82.4, 60043.0], [82.5, 60043.0], [82.6, 60043.0], [82.7, 60043.0], [82.8, 60043.0], [82.9, 60044.0], [83.0, 60044.0], [83.1, 60044.0], [83.2, 60044.0], [83.3, 60044.0], [83.4, 60044.0], [83.5, 60044.0], [83.6, 60044.0], [83.7, 60044.0], [83.8, 60044.0], [83.9, 60045.0], [84.0, 60045.0], [84.1, 60045.0], [84.2, 60045.0], [84.3, 60045.0], [84.4, 60045.0], [84.5, 60045.0], [84.6, 60045.0], [84.7, 60045.0], [84.8, 60045.0], [84.9, 60045.0], [85.0, 60045.0], [85.1, 60045.0], [85.2, 60045.0], [85.3, 60045.0], [85.4, 60046.0], [85.5, 60046.0], [85.6, 60046.0], [85.7, 60046.0], [85.8, 60046.0], [85.9, 60046.0], [86.0, 60047.0], [86.1, 60047.0], [86.2, 60047.0], [86.3, 60047.0], [86.4, 60047.0], [86.5, 60047.0], [86.6, 60047.0], [86.7, 60048.0], [86.8, 60048.0], [86.9, 60048.0], [87.0, 60048.0], [87.1, 60048.0], [87.2, 60048.0], [87.3, 60049.0], [87.4, 60049.0], [87.5, 60049.0], [87.6, 60049.0], [87.7, 60050.0], [87.8, 60050.0], [87.9, 60050.0], [88.0, 60051.0], [88.1, 60051.0], [88.2, 60051.0], [88.3, 60052.0], [88.4, 60052.0], [88.5, 60052.0], [88.6, 60053.0], [88.7, 60053.0], [88.8, 60053.0], [88.9, 60053.0], [89.0, 60054.0], [89.1, 60054.0], [89.2, 60055.0], [89.3, 60055.0], [89.4, 60055.0], [89.5, 60055.0], [89.6, 60055.0], [89.7, 60055.0], [89.8, 60055.0], [89.9, 60055.0], [90.0, 60056.0], [90.1, 60056.0], [90.2, 60057.0], [90.3, 60057.0], [90.4, 60057.0], [90.5, 60058.0], [90.6, 60058.0], [90.7, 60058.0], [90.8, 60059.0], [90.9, 60060.0], [91.0, 60060.0], [91.1, 60061.0], [91.2, 60061.0], [91.3, 60061.0], [91.4, 60061.0], [91.5, 60061.0], [91.6, 60061.0], [91.7, 60062.0], [91.8, 60062.0], [91.9, 60062.0], [92.0, 60064.0], [92.1, 60077.0], [92.2, 60079.0], [92.3, 60080.0], [92.4, 60080.0], [92.5, 60080.0], [92.6, 60080.0], [92.7, 60080.0], [92.8, 60080.0], [92.9, 60081.0], [93.0, 60081.0], [93.1, 60081.0], [93.2, 60081.0], [93.3, 60081.0], [93.4, 60081.0], [93.5, 60081.0], [93.6, 60082.0], [93.7, 60082.0], [93.8, 60082.0], [93.9, 60082.0], [94.0, 60083.0], [94.1, 60083.0], [94.2, 60083.0], [94.3, 60084.0], [94.4, 60084.0], [94.5, 60084.0], [94.6, 60084.0], [94.7, 60085.0], [94.8, 60089.0], [94.9, 60091.0], [95.0, 60094.0], [95.1, 60097.0], [95.2, 60101.0], [95.3, 60104.0], [95.4, 60108.0], [95.5, 60111.0], [95.6, 60113.0], [95.7, 60113.0], [95.8, 60114.0], [95.9, 60115.0], [96.0, 60115.0], [96.1, 60115.0], [96.2, 60115.0], [96.3, 60116.0], [96.4, 60116.0], [96.5, 60117.0], [96.6, 60118.0], [96.7, 60120.0], [96.8, 60121.0], [96.9, 60121.0], [97.0, 60121.0], [97.1, 60124.0], [97.2, 60126.0], [97.3, 60126.0], [97.4, 60131.0], [97.5, 60134.0], [97.6, 60134.0], [97.7, 60135.0], [97.8, 60135.0], [97.9, 60135.0], [98.0, 60136.0], [98.1, 60136.0], [98.2, 60138.0], [98.3, 60142.0], [98.4, 60144.0], [98.5, 60145.0], [98.6, 60146.0], [98.7, 60146.0], [98.8, 60147.0], [98.9, 60152.0], [99.0, 60152.0], [99.1, 60153.0], [99.2, 60154.0], [99.3, 60157.0], [99.4, 60158.0], [99.5, 60160.0], [99.6, 60163.0], [99.7, 60166.0], [99.8, 60167.0], [99.9, 60168.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 26.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 28.0], [0.7, 28.0], [0.8, 28.0], [0.9, 28.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 29.0], [1.4, 29.0], [1.5, 29.0], [1.6, 29.0], [1.7, 29.0], [1.8, 30.0], [1.9, 30.0], [2.0, 30.0], [2.1, 30.0], [2.2, 31.0], [2.3, 31.0], [2.4, 31.0], [2.5, 32.0], [2.6, 32.0], [2.7, 33.0], [2.8, 33.0], [2.9, 34.0], [3.0, 35.0], [3.1, 35.0], [3.2, 36.0], [3.3, 38.0], [3.4, 39.0], [3.5, 41.0], [3.6, 42.0], [3.7, 43.0], [3.8, 44.0], [3.9, 45.0], [4.0, 46.0], [4.1, 47.0], [4.2, 47.0], [4.3, 48.0], [4.4, 49.0], [4.5, 50.0], [4.6, 51.0], [4.7, 51.0], [4.8, 52.0], [4.9, 54.0], [5.0, 55.0], [5.1, 55.0], [5.2, 57.0], [5.3, 58.0], [5.4, 60.0], [5.5, 61.0], [5.6, 62.0], [5.7, 64.0], [5.8, 65.0], [5.9, 68.0], [6.0, 72.0], [6.1, 77.0], [6.2, 82.0], [6.3, 85.0], [6.4, 91.0], [6.5, 96.0], [6.6, 99.0], [6.7, 104.0], [6.8, 109.0], [6.9, 114.0], [7.0, 121.0], [7.1, 129.0], [7.2, 141.0], [7.3, 167.0], [7.4, 175.0], [7.5, 184.0], [7.6, 188.0], [7.7, 194.0], [7.8, 198.0], [7.9, 203.0], [8.0, 208.0], [8.1, 212.0], [8.2, 216.0], [8.3, 219.0], [8.4, 222.0], [8.5, 224.0], [8.6, 226.0], [8.7, 228.0], [8.8, 230.0], [8.9, 231.0], [9.0, 234.0], [9.1, 238.0], [9.2, 242.0], [9.3, 245.0], [9.4, 249.0], [9.5, 253.0], [9.6, 260.0], [9.7, 263.0], [9.8, 265.0], [9.9, 267.0], [10.0, 273.0], [10.1, 279.0], [10.2, 285.0], [10.3, 290.0], [10.4, 293.0], [10.5, 297.0], [10.6, 301.0], [10.7, 305.0], [10.8, 305.0], [10.9, 307.0], [11.0, 310.0], [11.1, 312.0], [11.2, 315.0], [11.3, 318.0], [11.4, 319.0], [11.5, 321.0], [11.6, 323.0], [11.7, 324.0], [11.8, 325.0], [11.9, 327.0], [12.0, 329.0], [12.1, 333.0], [12.2, 339.0], [12.3, 344.0], [12.4, 349.0], [12.5, 353.0], [12.6, 357.0], [12.7, 360.0], [12.8, 364.0], [12.9, 369.0], [13.0, 384.0], [13.1, 400.0], [13.2, 412.0], [13.3, 428.0], [13.4, 436.0], [13.5, 445.0], [13.6, 456.0], [13.7, 469.0], [13.8, 475.0], [13.9, 477.0], [14.0, 480.0], [14.1, 483.0], [14.2, 485.0], [14.3, 488.0], [14.4, 490.0], [14.5, 492.0], [14.6, 493.0], [14.7, 494.0], [14.8, 495.0], [14.9, 496.0], [15.0, 498.0], [15.1, 499.0], [15.2, 501.0], [15.3, 503.0], [15.4, 505.0], [15.5, 506.0], [15.6, 506.0], [15.7, 507.0], [15.8, 508.0], [15.9, 509.0], [16.0, 510.0], [16.1, 510.0], [16.2, 511.0], [16.3, 512.0], [16.4, 513.0], [16.5, 514.0], [16.6, 515.0], [16.7, 515.0], [16.8, 516.0], [16.9, 517.0], [17.0, 518.0], [17.1, 519.0], [17.2, 519.0], [17.3, 520.0], [17.4, 521.0], [17.5, 522.0], [17.6, 523.0], [17.7, 524.0], [17.8, 525.0], [17.9, 526.0], [18.0, 526.0], [18.1, 527.0], [18.2, 528.0], [18.3, 529.0], [18.4, 529.0], [18.5, 530.0], [18.6, 530.0], [18.7, 531.0], [18.8, 531.0], [18.9, 532.0], [19.0, 532.0], [19.1, 532.0], [19.2, 533.0], [19.3, 534.0], [19.4, 534.0], [19.5, 535.0], [19.6, 535.0], [19.7, 535.0], [19.8, 536.0], [19.9, 536.0], [20.0, 537.0], [20.1, 537.0], [20.2, 538.0], [20.3, 538.0], [20.4, 539.0], [20.5, 539.0], [20.6, 540.0], [20.7, 540.0], [20.8, 540.0], [20.9, 541.0], [21.0, 541.0], [21.1, 542.0], [21.2, 542.0], [21.3, 543.0], [21.4, 543.0], [21.5, 543.0], [21.6, 543.0], [21.7, 544.0], [21.8, 544.0], [21.9, 545.0], [22.0, 545.0], [22.1, 546.0], [22.2, 546.0], [22.3, 546.0], [22.4, 547.0], [22.5, 547.0], [22.6, 548.0], [22.7, 548.0], [22.8, 549.0], [22.9, 549.0], [23.0, 550.0], [23.1, 551.0], [23.2, 551.0], [23.3, 552.0], [23.4, 552.0], [23.5, 553.0], [23.6, 554.0], [23.7, 554.0], [23.8, 555.0], [23.9, 555.0], [24.0, 556.0], [24.1, 556.0], [24.2, 557.0], [24.3, 557.0], [24.4, 557.0], [24.5, 558.0], [24.6, 558.0], [24.7, 559.0], [24.8, 559.0], [24.9, 559.0], [25.0, 560.0], [25.1, 560.0], [25.2, 561.0], [25.3, 561.0], [25.4, 562.0], [25.5, 562.0], [25.6, 562.0], [25.7, 563.0], [25.8, 563.0], [25.9, 564.0], [26.0, 564.0], [26.1, 564.0], [26.2, 565.0], [26.3, 565.0], [26.4, 565.0], [26.5, 566.0], [26.6, 566.0], [26.7, 566.0], [26.8, 567.0], [26.9, 567.0], [27.0, 568.0], [27.1, 568.0], [27.2, 568.0], [27.3, 569.0], [27.4, 569.0], [27.5, 569.0], [27.6, 570.0], [27.7, 570.0], [27.8, 571.0], [27.9, 571.0], [28.0, 572.0], [28.1, 572.0], [28.2, 572.0], [28.3, 573.0], [28.4, 573.0], [28.5, 574.0], [28.6, 574.0], [28.7, 575.0], [28.8, 575.0], [28.9, 575.0], [29.0, 576.0], [29.1, 576.0], [29.2, 577.0], [29.3, 577.0], [29.4, 577.0], [29.5, 578.0], [29.6, 578.0], [29.7, 579.0], [29.8, 579.0], [29.9, 579.0], [30.0, 580.0], [30.1, 580.0], [30.2, 580.0], [30.3, 581.0], [30.4, 581.0], [30.5, 581.0], [30.6, 582.0], [30.7, 582.0], [30.8, 582.0], [30.9, 583.0], [31.0, 583.0], [31.1, 583.0], [31.2, 584.0], [31.3, 584.0], [31.4, 584.0], [31.5, 585.0], [31.6, 585.0], [31.7, 585.0], [31.8, 586.0], [31.9, 586.0], [32.0, 586.0], [32.1, 586.0], [32.2, 587.0], [32.3, 587.0], [32.4, 587.0], [32.5, 588.0], [32.6, 588.0], [32.7, 588.0], [32.8, 588.0], [32.9, 589.0], [33.0, 589.0], [33.1, 589.0], [33.2, 589.0], [33.3, 590.0], [33.4, 590.0], [33.5, 590.0], [33.6, 590.0], [33.7, 590.0], [33.8, 591.0], [33.9, 591.0], [34.0, 591.0], [34.1, 591.0], [34.2, 591.0], [34.3, 591.0], [34.4, 592.0], [34.5, 592.0], [34.6, 592.0], [34.7, 592.0], [34.8, 592.0], [34.9, 592.0], [35.0, 593.0], [35.1, 593.0], [35.2, 593.0], [35.3, 593.0], [35.4, 594.0], [35.5, 594.0], [35.6, 594.0], [35.7, 594.0], [35.8, 595.0], [35.9, 595.0], [36.0, 595.0], [36.1, 595.0], [36.2, 596.0], [36.3, 596.0], [36.4, 596.0], [36.5, 597.0], [36.6, 597.0], [36.7, 597.0], [36.8, 598.0], [36.9, 598.0], [37.0, 598.0], [37.1, 599.0], [37.2, 599.0], [37.3, 600.0], [37.4, 600.0], [37.5, 601.0], [37.6, 601.0], [37.7, 602.0], [37.8, 602.0], [37.9, 602.0], [38.0, 603.0], [38.1, 603.0], [38.2, 604.0], [38.3, 604.0], [38.4, 604.0], [38.5, 605.0], [38.6, 605.0], [38.7, 605.0], [38.8, 606.0], [38.9, 606.0], [39.0, 606.0], [39.1, 607.0], [39.2, 607.0], [39.3, 607.0], [39.4, 608.0], [39.5, 608.0], [39.6, 608.0], [39.7, 609.0], [39.8, 609.0], [39.9, 609.0], [40.0, 610.0], [40.1, 610.0], [40.2, 610.0], [40.3, 611.0], [40.4, 611.0], [40.5, 612.0], [40.6, 612.0], [40.7, 612.0], [40.8, 613.0], [40.9, 613.0], [41.0, 613.0], [41.1, 613.0], [41.2, 614.0], [41.3, 614.0], [41.4, 614.0], [41.5, 615.0], [41.6, 615.0], [41.7, 615.0], [41.8, 615.0], [41.9, 615.0], [42.0, 616.0], [42.1, 616.0], [42.2, 616.0], [42.3, 616.0], [42.4, 616.0], [42.5, 617.0], [42.6, 617.0], [42.7, 617.0], [42.8, 618.0], [42.9, 618.0], [43.0, 618.0], [43.1, 618.0], [43.2, 618.0], [43.3, 619.0], [43.4, 619.0], [43.5, 619.0], [43.6, 620.0], [43.7, 620.0], [43.8, 620.0], [43.9, 620.0], [44.0, 621.0], [44.1, 621.0], [44.2, 621.0], [44.3, 622.0], [44.4, 622.0], [44.5, 622.0], [44.6, 622.0], [44.7, 623.0], [44.8, 623.0], [44.9, 623.0], [45.0, 623.0], [45.1, 624.0], [45.2, 624.0], [45.3, 624.0], [45.4, 625.0], [45.5, 625.0], [45.6, 625.0], [45.7, 625.0], [45.8, 625.0], [45.9, 626.0], [46.0, 626.0], [46.1, 626.0], [46.2, 627.0], [46.3, 627.0], [46.4, 627.0], [46.5, 627.0], [46.6, 628.0], [46.7, 628.0], [46.8, 628.0], [46.9, 629.0], [47.0, 629.0], [47.1, 629.0], [47.2, 629.0], [47.3, 630.0], [47.4, 630.0], [47.5, 630.0], [47.6, 630.0], [47.7, 631.0], [47.8, 631.0], [47.9, 631.0], [48.0, 631.0], [48.1, 632.0], [48.2, 632.0], [48.3, 632.0], [48.4, 633.0], [48.5, 633.0], [48.6, 633.0], [48.7, 634.0], [48.8, 634.0], [48.9, 634.0], [49.0, 635.0], [49.1, 635.0], [49.2, 635.0], [49.3, 636.0], [49.4, 636.0], [49.5, 636.0], [49.6, 637.0], [49.7, 637.0], [49.8, 638.0], [49.9, 638.0], [50.0, 638.0], [50.1, 639.0], [50.2, 639.0], [50.3, 640.0], [50.4, 640.0], [50.5, 640.0], [50.6, 641.0], [50.7, 641.0], [50.8, 642.0], [50.9, 642.0], [51.0, 643.0], [51.1, 643.0], [51.2, 643.0], [51.3, 644.0], [51.4, 644.0], [51.5, 645.0], [51.6, 645.0], [51.7, 646.0], [51.8, 646.0], [51.9, 646.0], [52.0, 647.0], [52.1, 647.0], [52.2, 647.0], [52.3, 648.0], [52.4, 648.0], [52.5, 648.0], [52.6, 649.0], [52.7, 649.0], [52.8, 650.0], [52.9, 650.0], [53.0, 651.0], [53.1, 651.0], [53.2, 652.0], [53.3, 652.0], [53.4, 653.0], [53.5, 653.0], [53.6, 654.0], [53.7, 654.0], [53.8, 655.0], [53.9, 655.0], [54.0, 656.0], [54.1, 656.0], [54.2, 657.0], [54.3, 657.0], [54.4, 658.0], [54.5, 658.0], [54.6, 658.0], [54.7, 659.0], [54.8, 659.0], [54.9, 660.0], [55.0, 660.0], [55.1, 661.0], [55.2, 661.0], [55.3, 662.0], [55.4, 662.0], [55.5, 663.0], [55.6, 663.0], [55.7, 663.0], [55.8, 664.0], [55.9, 664.0], [56.0, 665.0], [56.1, 665.0], [56.2, 666.0], [56.3, 666.0], [56.4, 666.0], [56.5, 667.0], [56.6, 667.0], [56.7, 667.0], [56.8, 668.0], [56.9, 668.0], [57.0, 669.0], [57.1, 669.0], [57.2, 670.0], [57.3, 670.0], [57.4, 671.0], [57.5, 671.0], [57.6, 672.0], [57.7, 673.0], [57.8, 673.0], [57.9, 673.0], [58.0, 674.0], [58.1, 674.0], [58.2, 674.0], [58.3, 675.0], [58.4, 675.0], [58.5, 676.0], [58.6, 676.0], [58.7, 677.0], [58.8, 677.0], [58.9, 677.0], [59.0, 678.0], [59.1, 679.0], [59.2, 679.0], [59.3, 680.0], [59.4, 680.0], [59.5, 681.0], [59.6, 681.0], [59.7, 682.0], [59.8, 683.0], [59.9, 683.0], [60.0, 684.0], [60.1, 685.0], [60.2, 685.0], [60.3, 686.0], [60.4, 687.0], [60.5, 688.0], [60.6, 689.0], [60.7, 690.0], [60.8, 691.0], [60.9, 691.0], [61.0, 692.0], [61.1, 693.0], [61.2, 693.0], [61.3, 694.0], [61.4, 694.0], [61.5, 695.0], [61.6, 696.0], [61.7, 696.0], [61.8, 697.0], [61.9, 697.0], [62.0, 698.0], [62.1, 699.0], [62.2, 699.0], [62.3, 700.0], [62.4, 701.0], [62.5, 701.0], [62.6, 702.0], [62.7, 702.0], [62.8, 703.0], [62.9, 703.0], [63.0, 704.0], [63.1, 704.0], [63.2, 705.0], [63.3, 705.0], [63.4, 706.0], [63.5, 707.0], [63.6, 707.0], [63.7, 708.0], [63.8, 708.0], [63.9, 709.0], [64.0, 710.0], [64.1, 710.0], [64.2, 711.0], [64.3, 711.0], [64.4, 712.0], [64.5, 713.0], [64.6, 714.0], [64.7, 715.0], [64.8, 715.0], [64.9, 716.0], [65.0, 717.0], [65.1, 718.0], [65.2, 719.0], [65.3, 719.0], [65.4, 720.0], [65.5, 722.0], [65.6, 723.0], [65.7, 724.0], [65.8, 725.0], [65.9, 726.0], [66.0, 727.0], [66.1, 728.0], [66.2, 729.0], [66.3, 730.0], [66.4, 731.0], [66.5, 732.0], [66.6, 733.0], [66.7, 734.0], [66.8, 736.0], [66.9, 737.0], [67.0, 738.0], [67.1, 740.0], [67.2, 742.0], [67.3, 744.0], [67.4, 747.0], [67.5, 748.0], [67.6, 750.0], [67.7, 751.0], [67.8, 752.0], [67.9, 754.0], [68.0, 755.0], [68.1, 757.0], [68.2, 758.0], [68.3, 759.0], [68.4, 760.0], [68.5, 761.0], [68.6, 763.0], [68.7, 764.0], [68.8, 766.0], [68.9, 768.0], [69.0, 770.0], [69.1, 777.0], [69.2, 786.0], [69.3, 805.0], [69.4, 1028.0], [69.5, 1030.0], [69.6, 1031.0], [69.7, 1032.0], [69.8, 1033.0], [69.9, 1034.0], [70.0, 1035.0], [70.1, 1036.0], [70.2, 1036.0], [70.3, 1037.0], [70.4, 1038.0], [70.5, 1039.0], [70.6, 1039.0], [70.7, 1040.0], [70.8, 1041.0], [70.9, 1041.0], [71.0, 1042.0], [71.1, 1043.0], [71.2, 1044.0], [71.3, 1046.0], [71.4, 1048.0], [71.5, 1050.0], [71.6, 1053.0], [71.7, 1057.0], [71.8, 1061.0], [71.9, 1063.0], [72.0, 1070.0], [72.1, 1079.0], [72.2, 1102.0], [72.3, 1133.0], [72.4, 1190.0], [72.5, 1220.0], [72.6, 1236.0], [72.7, 1245.0], [72.8, 1255.0], [72.9, 1266.0], [73.0, 1276.0], [73.1, 1290.0], [73.2, 1327.0], [73.3, 1354.0], [73.4, 1402.0], [73.5, 1421.0], [73.6, 1459.0], [73.7, 1480.0], [73.8, 1489.0], [73.9, 1497.0], [74.0, 1500.0], [74.1, 1504.0], [74.2, 1506.0], [74.3, 1510.0], [74.4, 1512.0], [74.5, 1516.0], [74.6, 1518.0], [74.7, 1519.0], [74.8, 1521.0], [74.9, 1523.0], [75.0, 1526.0], [75.1, 1528.0], [75.2, 1530.0], [75.3, 1532.0], [75.4, 1535.0], [75.5, 1537.0], [75.6, 1539.0], [75.7, 1541.0], [75.8, 1543.0], [75.9, 1545.0], [76.0, 1547.0], [76.1, 1548.0], [76.2, 1550.0], [76.3, 1552.0], [76.4, 1554.0], [76.5, 1557.0], [76.6, 1558.0], [76.7, 1560.0], [76.8, 1562.0], [76.9, 1564.0], [77.0, 1565.0], [77.1, 1567.0], [77.2, 1568.0], [77.3, 1570.0], [77.4, 1571.0], [77.5, 1573.0], [77.6, 1574.0], [77.7, 1576.0], [77.8, 1577.0], [77.9, 1578.0], [78.0, 1580.0], [78.1, 1581.0], [78.2, 1582.0], [78.3, 1583.0], [78.4, 1584.0], [78.5, 1585.0], [78.6, 1587.0], [78.7, 1588.0], [78.8, 1589.0], [78.9, 1590.0], [79.0, 1591.0], [79.1, 1592.0], [79.2, 1593.0], [79.3, 1594.0], [79.4, 1595.0], [79.5, 1596.0], [79.6, 1597.0], [79.7, 1598.0], [79.8, 1599.0], [79.9, 1600.0], [80.0, 1601.0], [80.1, 1602.0], [80.2, 1603.0], [80.3, 1603.0], [80.4, 1604.0], [80.5, 1605.0], [80.6, 1607.0], [80.7, 1608.0], [80.8, 1609.0], [80.9, 1611.0], [81.0, 1612.0], [81.1, 1614.0], [81.2, 1615.0], [81.3, 1616.0], [81.4, 1618.0], [81.5, 1619.0], [81.6, 1621.0], [81.7, 1622.0], [81.8, 1623.0], [81.9, 1625.0], [82.0, 1626.0], [82.1, 1627.0], [82.2, 1629.0], [82.3, 1630.0], [82.4, 1631.0], [82.5, 1632.0], [82.6, 1634.0], [82.7, 1635.0], [82.8, 1636.0], [82.9, 1638.0], [83.0, 1639.0], [83.1, 1641.0], [83.2, 1642.0], [83.3, 1644.0], [83.4, 1646.0], [83.5, 1648.0], [83.6, 1650.0], [83.7, 1652.0], [83.8, 1654.0], [83.9, 1656.0], [84.0, 1659.0], [84.1, 1661.0], [84.2, 1666.0], [84.3, 1672.0], [84.4, 1677.0], [84.5, 1683.0], [84.6, 1686.0], [84.7, 1691.0], [84.8, 1695.0], [84.9, 1699.0], [85.0, 1702.0], [85.1, 1705.0], [85.2, 1708.0], [85.3, 1714.0], [85.4, 1724.0], [85.5, 1736.0], [85.6, 1745.0], [85.7, 1758.0], [85.8, 1765.0], [85.9, 1774.0], [86.0, 1781.0], [86.1, 1807.0], [86.2, 1822.0], [86.3, 2590.0], [86.4, 2626.0], [86.5, 2658.0], [86.6, 2703.0], [86.7, 3039.0], [86.8, 3041.0], [86.9, 3043.0], [87.0, 3045.0], [87.1, 3047.0], [87.2, 3048.0], [87.3, 3050.0], [87.4, 3052.0], [87.5, 3054.0], [87.6, 3057.0], [87.7, 3061.0], [87.8, 3066.0], [87.9, 3073.0], [88.0, 3083.0], [88.1, 3127.0], [88.2, 3220.0], [88.3, 3261.0], [88.4, 3399.0], [88.5, 3513.0], [88.6, 3532.0], [88.7, 3544.0], [88.8, 3554.0], [88.9, 3562.0], [89.0, 3567.0], [89.1, 3573.0], [89.2, 3580.0], [89.3, 3588.0], [89.4, 3598.0], [89.5, 3604.0], [89.6, 3611.0], [89.7, 3618.0], [89.8, 3627.0], [89.9, 3634.0], [90.0, 3644.0], [90.1, 3651.0], [90.2, 3660.0], [90.3, 3671.0], [90.4, 3677.0], [90.5, 3686.0], [90.6, 3693.0], [90.7, 3720.0], [90.8, 5158.0], [90.9, 7043.0], [91.0, 7047.0], [91.1, 7051.0], [91.2, 7054.0], [91.3, 7060.0], [91.4, 7067.0], [91.5, 7074.0], [91.6, 7088.0], [91.7, 7236.0], [91.8, 7284.0], [91.9, 7417.0], [92.0, 7537.0], [92.1, 7562.0], [92.2, 7579.0], [92.3, 7596.0], [92.4, 7613.0], [92.5, 7633.0], [92.6, 7708.0], [92.7, 15056.0], [92.8, 15060.0], [92.9, 15069.0], [93.0, 15186.0], [93.1, 15583.0], [93.2, 21015.0], [93.3, 21019.0], [93.4, 21020.0], [93.5, 21022.0], [93.6, 21023.0], [93.7, 21025.0], [93.8, 21026.0], [93.9, 21027.0], [94.0, 21028.0], [94.1, 21028.0], [94.2, 21029.0], [94.3, 21030.0], [94.4, 21030.0], [94.5, 21031.0], [94.6, 21031.0], [94.7, 21032.0], [94.8, 21032.0], [94.9, 21033.0], [95.0, 21033.0], [95.1, 21034.0], [95.2, 21034.0], [95.3, 21035.0], [95.4, 21035.0], [95.5, 21035.0], [95.6, 21036.0], [95.7, 21036.0], [95.8, 21037.0], [95.9, 21037.0], [96.0, 21037.0], [96.1, 21038.0], [96.2, 21038.0], [96.3, 21038.0], [96.4, 21038.0], [96.5, 21039.0], [96.6, 21039.0], [96.7, 21039.0], [96.8, 21040.0], [96.9, 21040.0], [97.0, 21040.0], [97.1, 21041.0], [97.2, 21041.0], [97.3, 21041.0], [97.4, 21042.0], [97.5, 21042.0], [97.6, 21042.0], [97.7, 21043.0], [97.8, 21043.0], [97.9, 21044.0], [98.0, 21044.0], [98.1, 21045.0], [98.2, 21045.0], [98.3, 21046.0], [98.4, 21046.0], [98.5, 21047.0], [98.6, 21048.0], [98.7, 21049.0], [98.8, 21049.0], [98.9, 21050.0], [99.0, 21050.0], [99.1, 21051.0], [99.2, 21052.0], [99.3, 21053.0], [99.4, 21054.0], [99.5, 21054.0], [99.6, 21056.0], [99.7, 21057.0], [99.8, 21058.0], [99.9, 21060.0], [100.0, 21092.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12077.0], [0.1, 12077.0], [0.2, 12078.0], [0.3, 12078.0], [0.4, 12082.0], [0.5, 12084.0], [0.6, 12084.0], [0.7, 12084.0], [0.8, 12084.0], [0.9, 12085.0], [1.0, 12086.0], [1.1, 12087.0], [1.2, 12087.0], [1.3, 12088.0], [1.4, 12088.0], [1.5, 12089.0], [1.6, 12089.0], [1.7, 12089.0], [1.8, 12090.0], [1.9, 12090.0], [2.0, 12091.0], [2.1, 12091.0], [2.2, 12091.0], [2.3, 12092.0], [2.4, 12092.0], [2.5, 12093.0], [2.6, 12093.0], [2.7, 12094.0], [2.8, 12094.0], [2.9, 12094.0], [3.0, 12095.0], [3.1, 12095.0], [3.2, 12096.0], [3.3, 12096.0], [3.4, 12096.0], [3.5, 12097.0], [3.6, 12097.0], [3.7, 12097.0], [3.8, 12100.0], [3.9, 12100.0], [4.0, 12101.0], [4.1, 12101.0], [4.2, 12101.0], [4.3, 12102.0], [4.4, 12104.0], [4.5, 12108.0], [4.6, 12108.0], [4.7, 12108.0], [4.8, 12109.0], [4.9, 12110.0], [5.0, 12111.0], [5.1, 12112.0], [5.2, 12113.0], [5.3, 12113.0], [5.4, 12115.0], [5.5, 12116.0], [5.6, 12118.0], [5.7, 12124.0], [5.8, 12127.0], [5.9, 12128.0], [6.0, 12131.0], [6.1, 12131.0], [6.2, 12132.0], [6.3, 12132.0], [6.4, 12136.0], [6.5, 12141.0], [6.6, 12144.0], [6.7, 12145.0], [6.8, 12147.0], [6.9, 12147.0], [7.0, 12148.0], [7.1, 12148.0], [7.2, 12148.0], [7.3, 12149.0], [7.4, 12149.0], [7.5, 12149.0], [7.6, 12150.0], [7.7, 12150.0], [7.8, 12150.0], [7.9, 12151.0], [8.0, 12151.0], [8.1, 12151.0], [8.2, 12152.0], [8.3, 12152.0], [8.4, 12153.0], [8.5, 12154.0], [8.6, 12154.0], [8.7, 12154.0], [8.8, 12154.0], [8.9, 12155.0], [9.0, 12156.0], [9.1, 12156.0], [9.2, 12156.0], [9.3, 12156.0], [9.4, 12157.0], [9.5, 12157.0], [9.6, 12158.0], [9.7, 12158.0], [9.8, 12158.0], [9.9, 12159.0], [10.0, 12159.0], [10.1, 12159.0], [10.2, 12160.0], [10.3, 12160.0], [10.4, 12160.0], [10.5, 12160.0], [10.6, 12160.0], [10.7, 12160.0], [10.8, 12161.0], [10.9, 12162.0], [11.0, 12162.0], [11.1, 12162.0], [11.2, 12163.0], [11.3, 12163.0], [11.4, 12163.0], [11.5, 12164.0], [11.6, 12164.0], [11.7, 12165.0], [11.8, 12165.0], [11.9, 12165.0], [12.0, 12165.0], [12.1, 12165.0], [12.2, 12165.0], [12.3, 12166.0], [12.4, 12166.0], [12.5, 12166.0], [12.6, 12166.0], [12.7, 12166.0], [12.8, 12166.0], [12.9, 12166.0], [13.0, 12166.0], [13.1, 12167.0], [13.2, 12167.0], [13.3, 12167.0], [13.4, 12167.0], [13.5, 12167.0], [13.6, 12167.0], [13.7, 12167.0], [13.8, 12167.0], [13.9, 12168.0], [14.0, 12168.0], [14.1, 12168.0], [14.2, 12168.0], [14.3, 12168.0], [14.4, 12168.0], [14.5, 12169.0], [14.6, 12169.0], [14.7, 12169.0], [14.8, 12169.0], [14.9, 12170.0], [15.0, 12170.0], [15.1, 12170.0], [15.2, 12170.0], [15.3, 12170.0], [15.4, 12171.0], [15.5, 12171.0], [15.6, 12171.0], [15.7, 12171.0], [15.8, 12171.0], [15.9, 12172.0], [16.0, 12172.0], [16.1, 12173.0], [16.2, 12173.0], [16.3, 12173.0], [16.4, 12173.0], [16.5, 12173.0], [16.6, 12173.0], [16.7, 12173.0], [16.8, 12174.0], [16.9, 12174.0], [17.0, 12174.0], [17.1, 12175.0], [17.2, 12175.0], [17.3, 12175.0], [17.4, 12176.0], [17.5, 12176.0], [17.6, 12177.0], [17.7, 12178.0], [17.8, 12178.0], [17.9, 12179.0], [18.0, 12179.0], [18.1, 12179.0], [18.2, 12179.0], [18.3, 12180.0], [18.4, 12180.0], [18.5, 12181.0], [18.6, 12181.0], [18.7, 12181.0], [18.8, 12182.0], [18.9, 12183.0], [19.0, 12183.0], [19.1, 12183.0], [19.2, 12183.0], [19.3, 12183.0], [19.4, 12183.0], [19.5, 12184.0], [19.6, 12184.0], [19.7, 12184.0], [19.8, 12184.0], [19.9, 12185.0], [20.0, 12185.0], [20.1, 12185.0], [20.2, 12185.0], [20.3, 12185.0], [20.4, 12186.0], [20.5, 12186.0], [20.6, 12186.0], [20.7, 12186.0], [20.8, 12187.0], [20.9, 12187.0], [21.0, 12187.0], [21.1, 12187.0], [21.2, 12187.0], [21.3, 12187.0], [21.4, 12187.0], [21.5, 12187.0], [21.6, 12188.0], [21.7, 12188.0], [21.8, 12190.0], [21.9, 12190.0], [22.0, 12190.0], [22.1, 12191.0], [22.2, 12191.0], [22.3, 12191.0], [22.4, 12191.0], [22.5, 12193.0], [22.6, 12193.0], [22.7, 12194.0], [22.8, 12194.0], [22.9, 12195.0], [23.0, 12196.0], [23.1, 12196.0], [23.2, 12197.0], [23.3, 12197.0], [23.4, 12197.0], [23.5, 12197.0], [23.6, 12198.0], [23.7, 12198.0], [23.8, 12198.0], [23.9, 12199.0], [24.0, 12199.0], [24.1, 12200.0], [24.2, 12200.0], [24.3, 12200.0], [24.4, 12200.0], [24.5, 12201.0], [24.6, 12201.0], [24.7, 12202.0], [24.8, 12202.0], [24.9, 12202.0], [25.0, 12202.0], [25.1, 12202.0], [25.2, 12202.0], [25.3, 12203.0], [25.4, 12203.0], [25.5, 12204.0], [25.6, 12204.0], [25.7, 12204.0], [25.8, 12204.0], [25.9, 12205.0], [26.0, 12205.0], [26.1, 12206.0], [26.2, 12206.0], [26.3, 12206.0], [26.4, 12206.0], [26.5, 12207.0], [26.6, 12207.0], [26.7, 12208.0], [26.8, 12208.0], [26.9, 12208.0], [27.0, 12208.0], [27.1, 12208.0], [27.2, 12209.0], [27.3, 12209.0], [27.4, 12209.0], [27.5, 12210.0], [27.6, 12210.0], [27.7, 12210.0], [27.8, 12210.0], [27.9, 12211.0], [28.0, 12211.0], [28.1, 12211.0], [28.2, 12212.0], [28.3, 12212.0], [28.4, 12212.0], [28.5, 12212.0], [28.6, 12212.0], [28.7, 12213.0], [28.8, 12213.0], [28.9, 12213.0], [29.0, 12213.0], [29.1, 12213.0], [29.2, 12213.0], [29.3, 12213.0], [29.4, 12213.0], [29.5, 12213.0], [29.6, 12213.0], [29.7, 12214.0], [29.8, 12214.0], [29.9, 12214.0], [30.0, 12214.0], [30.1, 12215.0], [30.2, 12215.0], [30.3, 12215.0], [30.4, 12216.0], [30.5, 12216.0], [30.6, 12217.0], [30.7, 12217.0], [30.8, 12217.0], [30.9, 12217.0], [31.0, 12218.0], [31.1, 12218.0], [31.2, 12219.0], [31.3, 12219.0], [31.4, 12220.0], [31.5, 12220.0], [31.6, 12220.0], [31.7, 12220.0], [31.8, 12221.0], [31.9, 12221.0], [32.0, 12221.0], [32.1, 12221.0], [32.2, 12221.0], [32.3, 12222.0], [32.4, 12222.0], [32.5, 12222.0], [32.6, 12223.0], [32.7, 12223.0], [32.8, 12224.0], [32.9, 12224.0], [33.0, 12224.0], [33.1, 12224.0], [33.2, 12225.0], [33.3, 12225.0], [33.4, 12225.0], [33.5, 12225.0], [33.6, 12225.0], [33.7, 12225.0], [33.8, 12226.0], [33.9, 12226.0], [34.0, 12226.0], [34.1, 12227.0], [34.2, 12227.0], [34.3, 12227.0], [34.4, 12228.0], [34.5, 12228.0], [34.6, 12228.0], [34.7, 12228.0], [34.8, 12228.0], [34.9, 12229.0], [35.0, 12229.0], [35.1, 12229.0], [35.2, 12230.0], [35.3, 12230.0], [35.4, 12230.0], [35.5, 12230.0], [35.6, 12230.0], [35.7, 12230.0], [35.8, 12231.0], [35.9, 12231.0], [36.0, 12231.0], [36.1, 12231.0], [36.2, 12231.0], [36.3, 12231.0], [36.4, 12231.0], [36.5, 12231.0], [36.6, 12231.0], [36.7, 12231.0], [36.8, 12231.0], [36.9, 12231.0], [37.0, 12231.0], [37.1, 12231.0], [37.2, 12231.0], [37.3, 12232.0], [37.4, 12232.0], [37.5, 12232.0], [37.6, 12232.0], [37.7, 12232.0], [37.8, 12232.0], [37.9, 12232.0], [38.0, 12232.0], [38.1, 12232.0], [38.2, 12232.0], [38.3, 12232.0], [38.4, 12232.0], [38.5, 12232.0], [38.6, 12232.0], [38.7, 12232.0], [38.8, 12232.0], [38.9, 12232.0], [39.0, 12233.0], [39.1, 12233.0], [39.2, 12233.0], [39.3, 12233.0], [39.4, 12233.0], [39.5, 12233.0], [39.6, 12234.0], [39.7, 12234.0], [39.8, 12234.0], [39.9, 12234.0], [40.0, 12234.0], [40.1, 12234.0], [40.2, 12235.0], [40.3, 12235.0], [40.4, 12235.0], [40.5, 12236.0], [40.6, 12236.0], [40.7, 12236.0], [40.8, 12236.0], [40.9, 12237.0], [41.0, 12237.0], [41.1, 12237.0], [41.2, 12237.0], [41.3, 12237.0], [41.4, 12238.0], [41.5, 12238.0], [41.6, 12238.0], [41.7, 12238.0], [41.8, 12239.0], [41.9, 12239.0], [42.0, 12239.0], [42.1, 12239.0], [42.2, 12240.0], [42.3, 12240.0], [42.4, 12240.0], [42.5, 12240.0], [42.6, 12240.0], [42.7, 12241.0], [42.8, 12241.0], [42.9, 12241.0], [43.0, 12241.0], [43.1, 12241.0], [43.2, 12241.0], [43.3, 12242.0], [43.4, 12242.0], [43.5, 12242.0], [43.6, 12242.0], [43.7, 12242.0], [43.8, 12242.0], [43.9, 12242.0], [44.0, 12243.0], [44.1, 12243.0], [44.2, 12243.0], [44.3, 12243.0], [44.4, 12243.0], [44.5, 12243.0], [44.6, 12244.0], [44.7, 12244.0], [44.8, 12244.0], [44.9, 12244.0], [45.0, 12244.0], [45.1, 12245.0], [45.2, 12245.0], [45.3, 12245.0], [45.4, 12245.0], [45.5, 12245.0], [45.6, 12245.0], [45.7, 12245.0], [45.8, 12246.0], [45.9, 12246.0], [46.0, 12246.0], [46.1, 12246.0], [46.2, 12246.0], [46.3, 12246.0], [46.4, 12246.0], [46.5, 12246.0], [46.6, 12246.0], [46.7, 12246.0], [46.8, 12246.0], [46.9, 12247.0], [47.0, 12247.0], [47.1, 12247.0], [47.2, 12248.0], [47.3, 12248.0], [47.4, 12249.0], [47.5, 12249.0], [47.6, 12249.0], [47.7, 12249.0], [47.8, 12249.0], [47.9, 12249.0], [48.0, 12250.0], [48.1, 12250.0], [48.2, 12250.0], [48.3, 12251.0], [48.4, 12251.0], [48.5, 12252.0], [48.6, 12252.0], [48.7, 12252.0], [48.8, 12253.0], [48.9, 12253.0], [49.0, 12254.0], [49.1, 12258.0], [49.2, 12258.0], [49.3, 12259.0], [49.4, 12260.0], [49.5, 12261.0], [49.6, 12262.0], [49.7, 12262.0], [49.8, 12263.0], [49.9, 12263.0], [50.0, 12265.0], [50.1, 12266.0], [50.2, 12266.0], [50.3, 12266.0], [50.4, 12268.0], [50.5, 12269.0], [50.6, 12271.0], [50.7, 12273.0], [50.8, 12273.0], [50.9, 12274.0], [51.0, 12274.0], [51.1, 12277.0], [51.2, 12278.0], [51.3, 12279.0], [51.4, 12280.0], [51.5, 12280.0], [51.6, 12281.0], [51.7, 12282.0], [51.8, 12282.0], [51.9, 12283.0], [52.0, 12288.0], [52.1, 12288.0], [52.2, 12289.0], [52.3, 12289.0], [52.4, 12291.0], [52.5, 12292.0], [52.6, 12295.0], [52.7, 12295.0], [52.8, 12295.0], [52.9, 12295.0], [53.0, 12296.0], [53.1, 12296.0], [53.2, 12296.0], [53.3, 12297.0], [53.4, 12300.0], [53.5, 12300.0], [53.6, 12301.0], [53.7, 12302.0], [53.8, 12303.0], [53.9, 12303.0], [54.0, 12303.0], [54.1, 12303.0], [54.2, 12303.0], [54.3, 12309.0], [54.4, 12311.0], [54.5, 12311.0], [54.6, 12311.0], [54.7, 12312.0], [54.8, 12313.0], [54.9, 12313.0], [55.0, 12315.0], [55.1, 12315.0], [55.2, 12315.0], [55.3, 12316.0], [55.4, 12316.0], [55.5, 12317.0], [55.6, 12317.0], [55.7, 12322.0], [55.8, 12323.0], [55.9, 12324.0], [56.0, 12324.0], [56.1, 12326.0], [56.2, 12326.0], [56.3, 12329.0], [56.4, 12330.0], [56.5, 12331.0], [56.6, 12332.0], [56.7, 12332.0], [56.8, 12333.0], [56.9, 12335.0], [57.0, 12335.0], [57.1, 12337.0], [57.2, 12339.0], [57.3, 12339.0], [57.4, 12340.0], [57.5, 12340.0], [57.6, 12343.0], [57.7, 12344.0], [57.8, 12346.0], [57.9, 12346.0], [58.0, 12346.0], [58.1, 12347.0], [58.2, 12347.0], [58.3, 12349.0], [58.4, 12350.0], [58.5, 12350.0], [58.6, 12351.0], [58.7, 12351.0], [58.8, 12352.0], [58.9, 12353.0], [59.0, 12353.0], [59.1, 12353.0], [59.2, 12355.0], [59.3, 12356.0], [59.4, 12356.0], [59.5, 12356.0], [59.6, 12356.0], [59.7, 12356.0], [59.8, 12357.0], [59.9, 12357.0], [60.0, 12357.0], [60.1, 12358.0], [60.2, 12359.0], [60.3, 12361.0], [60.4, 12361.0], [60.5, 12361.0], [60.6, 12363.0], [60.7, 12367.0], [60.8, 12368.0], [60.9, 12369.0], [61.0, 12369.0], [61.1, 12369.0], [61.2, 12371.0], [61.3, 12371.0], [61.4, 12372.0], [61.5, 12374.0], [61.6, 12376.0], [61.7, 12377.0], [61.8, 12377.0], [61.9, 12381.0], [62.0, 12382.0], [62.1, 12382.0], [62.2, 12382.0], [62.3, 12386.0], [62.4, 12386.0], [62.5, 12387.0], [62.6, 12387.0], [62.7, 12387.0], [62.8, 12389.0], [62.9, 12390.0], [63.0, 12392.0], [63.1, 12392.0], [63.2, 12394.0], [63.3, 12394.0], [63.4, 12395.0], [63.5, 12396.0], [63.6, 12396.0], [63.7, 12397.0], [63.8, 12399.0], [63.9, 12402.0], [64.0, 12402.0], [64.1, 12404.0], [64.2, 12406.0], [64.3, 12411.0], [64.4, 12412.0], [64.5, 12412.0], [64.6, 12413.0], [64.7, 12414.0], [64.8, 12414.0], [64.9, 12414.0], [65.0, 12415.0], [65.1, 12416.0], [65.2, 12417.0], [65.3, 12418.0], [65.4, 12419.0], [65.5, 12419.0], [65.6, 12419.0], [65.7, 12419.0], [65.8, 12420.0], [65.9, 12420.0], [66.0, 12423.0], [66.1, 12425.0], [66.2, 12426.0], [66.3, 12427.0], [66.4, 12428.0], [66.5, 12429.0], [66.6, 12429.0], [66.7, 12430.0], [66.8, 12431.0], [66.9, 12431.0], [67.0, 12431.0], [67.1, 12432.0], [67.2, 12432.0], [67.3, 12433.0], [67.4, 12434.0], [67.5, 12434.0], [67.6, 12436.0], [67.7, 12436.0], [67.8, 12436.0], [67.9, 12437.0], [68.0, 12437.0], [68.1, 12437.0], [68.2, 12437.0], [68.3, 12437.0], [68.4, 12437.0], [68.5, 12438.0], [68.6, 12439.0], [68.7, 12439.0], [68.8, 12440.0], [68.9, 12444.0], [69.0, 12444.0], [69.1, 12444.0], [69.2, 12446.0], [69.3, 12446.0], [69.4, 12447.0], [69.5, 12450.0], [69.6, 12452.0], [69.7, 12453.0], [69.8, 12454.0], [69.9, 12454.0], [70.0, 12456.0], [70.1, 12459.0], [70.2, 12463.0], [70.3, 12464.0], [70.4, 12465.0], [70.5, 12465.0], [70.6, 12466.0], [70.7, 12468.0], [70.8, 12468.0], [70.9, 12471.0], [71.0, 12474.0], [71.1, 12475.0], [71.2, 12476.0], [71.3, 12476.0], [71.4, 12477.0], [71.5, 12477.0], [71.6, 12477.0], [71.7, 12478.0], [71.8, 12481.0], [71.9, 12481.0], [72.0, 12482.0], [72.1, 12485.0], [72.2, 12487.0], [72.3, 12488.0], [72.4, 12488.0], [72.5, 12489.0], [72.6, 12492.0], [72.7, 12493.0], [72.8, 12494.0], [72.9, 12494.0], [73.0, 12495.0], [73.1, 12496.0], [73.2, 12496.0], [73.3, 12499.0], [73.4, 12500.0], [73.5, 12500.0], [73.6, 12501.0], [73.7, 12501.0], [73.8, 12502.0], [73.9, 12502.0], [74.0, 12502.0], [74.1, 12504.0], [74.2, 12505.0], [74.3, 12506.0], [74.4, 12506.0], [74.5, 12508.0], [74.6, 12509.0], [74.7, 12509.0], [74.8, 12510.0], [74.9, 12510.0], [75.0, 12511.0], [75.1, 12512.0], [75.2, 12513.0], [75.3, 12514.0], [75.4, 12515.0], [75.5, 12516.0], [75.6, 12516.0], [75.7, 12517.0], [75.8, 12519.0], [75.9, 12519.0], [76.0, 12521.0], [76.1, 12521.0], [76.2, 12522.0], [76.3, 12523.0], [76.4, 12524.0], [76.5, 12526.0], [76.6, 12526.0], [76.7, 12529.0], [76.8, 12530.0], [76.9, 12531.0], [77.0, 12531.0], [77.1, 12532.0], [77.2, 12533.0], [77.3, 12534.0], [77.4, 12534.0], [77.5, 12535.0], [77.6, 12535.0], [77.7, 12536.0], [77.8, 12536.0], [77.9, 12536.0], [78.0, 12536.0], [78.1, 12537.0], [78.2, 12537.0], [78.3, 12538.0], [78.4, 12538.0], [78.5, 12539.0], [78.6, 12539.0], [78.7, 12543.0], [78.8, 12544.0], [78.9, 12553.0], [79.0, 12554.0], [79.1, 12554.0], [79.2, 12556.0], [79.3, 12556.0], [79.4, 12557.0], [79.5, 12557.0], [79.6, 12558.0], [79.7, 12559.0], [79.8, 12559.0], [79.9, 12560.0], [80.0, 12560.0], [80.1, 12561.0], [80.2, 12562.0], [80.3, 12563.0], [80.4, 12563.0], [80.5, 12564.0], [80.6, 12564.0], [80.7, 12566.0], [80.8, 12567.0], [80.9, 12567.0], [81.0, 12568.0], [81.1, 12571.0], [81.2, 12571.0], [81.3, 12571.0], [81.4, 12572.0], [81.5, 12574.0], [81.6, 12574.0], [81.7, 12574.0], [81.8, 12575.0], [81.9, 12576.0], [82.0, 12577.0], [82.1, 12577.0], [82.2, 12578.0], [82.3, 12578.0], [82.4, 12579.0], [82.5, 12579.0], [82.6, 12579.0], [82.7, 12580.0], [82.8, 12583.0], [82.9, 12584.0], [83.0, 12585.0], [83.1, 12587.0], [83.2, 12587.0], [83.3, 12587.0], [83.4, 12588.0], [83.5, 12588.0], [83.6, 12589.0], [83.7, 12589.0], [83.8, 12590.0], [83.9, 12591.0], [84.0, 12591.0], [84.1, 12592.0], [84.2, 12595.0], [84.3, 12596.0], [84.4, 12596.0], [84.5, 12599.0], [84.6, 12599.0], [84.7, 12599.0], [84.8, 12601.0], [84.9, 12602.0], [85.0, 12603.0], [85.1, 12603.0], [85.2, 12605.0], [85.3, 12606.0], [85.4, 12606.0], [85.5, 12607.0], [85.6, 12608.0], [85.7, 12608.0], [85.8, 12608.0], [85.9, 12609.0], [86.0, 12610.0], [86.1, 12611.0], [86.2, 12612.0], [86.3, 12613.0], [86.4, 12615.0], [86.5, 12615.0], [86.6, 12618.0], [86.7, 12618.0], [86.8, 12619.0], [86.9, 12620.0], [87.0, 12620.0], [87.1, 12621.0], [87.2, 12624.0], [87.3, 12624.0], [87.4, 12625.0], [87.5, 12626.0], [87.6, 12627.0], [87.7, 12629.0], [87.8, 12629.0], [87.9, 12630.0], [88.0, 12632.0], [88.1, 12635.0], [88.2, 12635.0], [88.3, 12636.0], [88.4, 12636.0], [88.5, 12637.0], [88.6, 12643.0], [88.7, 12647.0], [88.8, 12650.0], [88.9, 12650.0], [89.0, 12651.0], [89.1, 12651.0], [89.2, 12652.0], [89.3, 12653.0], [89.4, 12653.0], [89.5, 12654.0], [89.6, 12654.0], [89.7, 12654.0], [89.8, 12656.0], [89.9, 12657.0], [90.0, 12659.0], [90.1, 12660.0], [90.2, 12660.0], [90.3, 12661.0], [90.4, 12663.0], [90.5, 12664.0], [90.6, 12665.0], [90.7, 12665.0], [90.8, 12666.0], [90.9, 12668.0], [91.0, 12669.0], [91.1, 12670.0], [91.2, 12672.0], [91.3, 12672.0], [91.4, 12673.0], [91.5, 12673.0], [91.6, 12675.0], [91.7, 12676.0], [91.8, 12676.0], [91.9, 12678.0], [92.0, 12679.0], [92.1, 12679.0], [92.2, 12681.0], [92.3, 12682.0], [92.4, 12682.0], [92.5, 12683.0], [92.6, 12683.0], [92.7, 12684.0], [92.8, 12685.0], [92.9, 12687.0], [93.0, 12688.0], [93.1, 12689.0], [93.2, 12690.0], [93.3, 12691.0], [93.4, 12691.0], [93.5, 12691.0], [93.6, 12692.0], [93.7, 12693.0], [93.8, 12694.0], [93.9, 12694.0], [94.0, 12695.0], [94.1, 12697.0], [94.2, 12697.0], [94.3, 12699.0], [94.4, 12700.0], [94.5, 12701.0], [94.6, 12701.0], [94.7, 12703.0], [94.8, 12704.0], [94.9, 12704.0], [95.0, 12705.0], [95.1, 12705.0], [95.2, 12706.0], [95.3, 12712.0], [95.4, 12713.0], [95.5, 12713.0], [95.6, 12713.0], [95.7, 12716.0], [95.8, 12716.0], [95.9, 12719.0], [96.0, 12719.0], [96.1, 12727.0], [96.2, 12728.0], [96.3, 12730.0], [96.4, 12732.0], [96.5, 12732.0], [96.6, 12733.0], [96.7, 12734.0], [96.8, 12734.0], [96.9, 12737.0], [97.0, 12738.0], [97.1, 12738.0], [97.2, 12739.0], [97.3, 12739.0], [97.4, 12740.0], [97.5, 12741.0], [97.6, 12742.0], [97.7, 12745.0], [97.8, 12745.0], [97.9, 12749.0], [98.0, 12751.0], [98.1, 12753.0], [98.2, 12753.0], [98.3, 12755.0], [98.4, 12756.0], [98.5, 12757.0], [98.6, 12758.0], [98.7, 12772.0], [98.8, 12786.0], [98.9, 12792.0], [99.0, 12794.0], [99.1, 12804.0], [99.2, 12804.0], [99.3, 12806.0], [99.4, 12815.0], [99.5, 12817.0], [99.6, 12818.0], [99.7, 12829.0], [99.8, 12835.0], [99.9, 12838.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10197.0, "series": [{"data": [[60000.0, 952.0], [60100.0, 48.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 2701.0], [600.0, 10197.0], [700.0, 2891.0], [800.0, 48.0], [1000.0, 1146.0], [1100.0, 100.0], [1200.0, 291.0], [1300.0, 103.0], [1400.0, 243.0], [1500.0, 2408.0], [1600.0, 2065.0], [1700.0, 472.0], [1800.0, 74.0], [2100.0, 3.0], [2300.0, 1.0], [2500.0, 25.0], [2600.0, 110.0], [2700.0, 13.0], [3000.0, 590.0], [3100.0, 40.0], [3300.0, 19.0], [3200.0, 79.0], [3400.0, 29.0], [3500.0, 393.0], [3600.0, 491.0], [3700.0, 47.0], [4100.0, 1.0], [4300.0, 3.0], [4600.0, 15.0], [4500.0, 1.0], [4700.0, 1.0], [5100.0, 1.0], [5600.0, 6.0], [5500.0, 1.0], [7100.0, 21.0], [7000.0, 327.0], [7400.0, 12.0], [7300.0, 26.0], [7200.0, 66.0], [7600.0, 111.0], [7500.0, 162.0], [7700.0, 6.0], [8600.0, 4.0], [8300.0, 1.0], [10600.0, 1.0], [15100.0, 7.0], [15000.0, 149.0], [15200.0, 15.0], [15600.0, 17.0], [15500.0, 38.0], [15700.0, 1.0], [15400.0, 5.0], [16600.0, 1.0], [21000.0, 2787.0], [100.0, 503.0], [200.0, 1120.0], [300.0, 1033.0], [400.0, 825.0], [500.0, 9076.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12200.0, 292.0], [12000.0, 38.0], [12100.0, 203.0], [12400.0, 96.0], [12500.0, 114.0], [12300.0, 105.0], [12600.0, 96.0], [12700.0, 47.0], [12800.0, 9.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2708.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 25686.0, "series": [{"data": [[0.0, 2708.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 25686.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 11741.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 2787.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 369.53116531165256, "minX": 1.6175799E12, "maxY": 996.2555872042071, "series": [{"data": [[1.61757996E12, 503.4260000000002]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.6175799E12, 509.80299999999954]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.61758002E12, 369.53116531165256], [1.6175799E12, 977.9044307058253], [1.61757996E12, 996.2555872042071]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758002E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 37.0, "minX": 1.0, "maxY": 60136.0, "series": [{"data": [[1020.0, 60036.26666666666], [1005.0, 60042.75], [1004.0, 60041.0], [1061.0, 60031.0], [1082.0, 60031.0], [1087.0, 60030.0], [1058.0, 60029.5], [1060.0, 60031.0], [1059.0, 60027.0], [1062.0, 60027.0], [1064.0, 60028.0], [1063.0, 60028.0], [1067.0, 60028.0], [1066.0, 60027.5], [1071.0, 60028.5], [1069.0, 60028.5], [1086.0, 60031.5], [1084.0, 60031.5], [1081.0, 60030.0], [1080.0, 60031.0], [1079.0, 60031.0], [1075.0, 60028.5], [1073.0, 60029.0], [1038.0, 60029.0], [1037.0, 60031.0], [1036.0, 60030.0], [1035.0, 60029.0], [1034.0, 60033.857142857145], [1054.0, 60028.5], [1052.0, 60029.0], [1051.0, 60033.0], [1050.0, 60028.5], [1049.0, 60030.0], [1047.0, 60033.0], [1046.0, 60032.5], [1044.0, 60033.0], [1043.0, 60033.0], [1041.0, 60027.0], [1040.0, 60028.5], [1139.0, 60042.5], [1127.0, 60041.5], [1137.0, 60040.333333333336], [1103.0, 60033.0], [1102.0, 60034.5], [1100.0, 60035.333333333336], [1097.0, 60033.0], [1096.0, 60033.25], [1092.0, 60036.0], [1091.0, 60034.0], [1090.0, 60034.0], [1088.0, 60033.0], [1117.0, 60039.0], [1116.0, 60040.0], [1115.0, 60038.0], [1114.0, 60038.5], [1112.0, 60038.0], [1111.0, 60035.0], [1109.0, 60038.5], [1107.0, 60037.0], [1106.0, 60035.0], [1105.0, 60034.0], [1134.0, 60043.0], [1133.0, 60041.5], [1131.0, 60041.75], [1126.0, 60043.0], [1123.0, 60040.5], [1121.0, 60039.0], [1120.0, 60038.0], [1209.0, 60041.5], [1211.0, 60043.0], [1214.0, 60042.333333333336], [1210.0, 60043.0], [1205.0, 60037.72727272727], [1164.0, 60036.0], [1163.0, 60037.0], [1162.0, 60041.0], [1161.0, 60043.0], [1160.0, 60047.0], [1159.0, 60044.333333333336], [1158.0, 60047.0], [1153.0, 60039.8], [1152.0, 60040.11111111111], [1194.0, 60049.25000000001], [1193.0, 60052.8], [1177.0, 60031.33333333333], [1171.0, 60040.333333333336], [1168.0, 60038.5], [1273.0, 60033.0], [1279.0, 60029.5], [1251.0, 60046.0], [1248.0, 60045.0], [1254.0, 60041.5], [1252.0, 60041.0], [1259.0, 60040.5], [1255.0, 60042.0], [1263.0, 60037.0], [1262.0, 60043.0], [1277.0, 60030.5], [1275.0, 60029.5], [1272.0, 60034.5], [1270.0, 60032.5], [1268.0, 60035.0], [1267.0, 60036.5], [1265.0, 60036.0], [1264.0, 60035.0], [1247.0, 60045.5], [1218.0, 60043.0], [1220.0, 60046.5], [1219.0, 60044.666666666664], [1226.0, 60044.75], [1222.0, 60045.0], [1228.0, 60044.0], [1227.0, 60043.0], [1245.0, 60054.0], [1244.0, 60054.666666666664], [1241.0, 60049.0], [1240.0, 60045.0], [1239.0, 60048.33333333333], [1233.0, 60047.0], [1232.0, 60045.5], [1330.0, 60036.5], [1337.0, 60041.5], [1343.0, 60034.5], [1317.0, 60033.666666666664], [1313.0, 60032.0], [1321.0, 60035.333333333336], [1318.0, 60032.0], [1326.0, 60032.5], [1325.0, 60041.0], [1341.0, 60034.0], [1340.0, 60032.0], [1335.0, 60036.5], [1333.0, 60036.0], [1332.0, 60038.5], [1329.0, 60034.5], [1295.0, 60035.0], [1294.0, 60029.0], [1293.0, 60029.0], [1292.0, 60030.0], [1291.0, 60030.0], [1290.0, 60030.0], [1289.0, 60031.333333333336], [1286.0, 60029.5], [1284.0, 60028.333333333336], [1281.0, 60028.0], [1280.0, 60029.0], [1311.0, 60032.666666666664], [1308.0, 60033.0], [1306.0, 60031.5], [1304.0, 60031.0], [1303.0, 60031.0], [1302.0, 60031.0], [1300.0, 60030.0], [1299.0, 60028.0], [1298.0, 60030.0], [1404.0, 60027.0], [1407.0, 60028.0], [1377.0, 60027.0], [1376.0, 60026.5], [1380.0, 60026.5], [1378.0, 60027.0], [1383.0, 60027.0], [1382.0, 60029.0], [1385.0, 60026.0], [1384.0, 60026.0], [1389.0, 60028.333333333336], [1386.0, 60027.0], [1406.0, 60028.0], [1405.0, 60027.0], [1403.0, 60027.0], [1402.0, 60027.0], [1401.0, 60028.0], [1400.0, 60029.0], [1398.0, 60029.0], [1397.0, 60028.0], [1394.0, 60030.0], [1393.0, 60028.0], [1392.0, 60028.0], [1357.0, 60029.0], [1356.0, 60028.0], [1351.0, 60029.0], [1350.0, 60027.0], [1347.0, 60030.333333333336], [1344.0, 60031.0], [1374.0, 60027.5], [1372.0, 60028.0], [1371.0, 60027.0], [1370.0, 60028.5], [1368.0, 60027.0], [1367.0, 60026.0], [1366.0, 60030.0], [1365.0, 60028.0], [1364.0, 60027.0], [1363.0, 60029.0], [1362.0, 60028.0], [1360.0, 60028.333333333336], [1457.0, 60028.0], [1445.0, 60029.0], [1464.0, 60029.0], [1470.0, 60031.0], [1440.0, 60028.0], [1442.0, 60028.0], [1441.0, 60029.0], [1444.0, 60028.0], [1443.0, 60028.0], [1446.0, 60028.0], [1449.0, 60027.5], [1447.0, 60029.0], [1452.0, 60028.0], [1450.0, 60029.0], [1454.0, 60028.0], [1453.0, 60027.0], [1469.0, 60031.666666666664], [1466.0, 60030.0], [1461.0, 60027.5], [1459.0, 60032.0], [1458.0, 60028.0], [1456.0, 60030.0], [1423.0, 60028.5], [1421.0, 60028.0], [1420.0, 60027.0], [1419.0, 60027.0], [1418.0, 60027.0], [1416.0, 60031.0], [1415.0, 60028.0], [1414.0, 60027.0], [1412.0, 60027.0], [1411.0, 60028.0], [1410.0, 60028.333333333336], [1438.0, 60029.0], [1437.0, 60028.0], [1436.0, 60029.0], [1435.0, 60027.0], [1434.0, 60028.0], [1433.0, 60030.0], [1432.0, 60027.5], [1430.0, 60027.0], [1429.0, 60027.0], [1428.0, 60027.0], [1427.0, 60028.0], [1426.0, 60033.0], [1425.0, 60027.0], [1424.0, 60027.0], [1527.0, 60029.0], [1535.0, 60028.333333333336], [1507.0, 60029.5], [1506.0, 60029.0], [1510.0, 60029.0], [1508.0, 60031.0], [1512.0, 60027.0], [1511.0, 60028.0], [1515.0, 60028.5], [1513.0, 60028.0], [1519.0, 60030.0], [1517.0, 60029.5], [1532.0, 60029.5], [1530.0, 60029.0], [1525.0, 60027.0], [1524.0, 60028.0], [1523.0, 60028.0], [1522.0, 60028.0], [1520.0, 60027.0], [1487.0, 60028.0], [1486.0, 60028.0], [1485.0, 60029.0], [1484.0, 60028.0], [1483.0, 60029.0], [1481.0, 60028.0], [1480.0, 60030.0], [1478.0, 60030.0], [1477.0, 60029.0], [1476.0, 60031.0], [1474.0, 60031.0], [1473.0, 60030.0], [1472.0, 60030.0], [1503.0, 60030.0], [1502.0, 60030.6], [1497.0, 60030.0], [1496.0, 60031.333333333336], [1493.0, 60030.666666666664], [1490.0, 60033.0], [1489.0, 60028.0], [1488.0, 60028.0], [1574.0, 60027.0], [1595.0, 60028.0], [1599.0, 60027.0], [1568.0, 60033.666666666664], [1570.0, 60027.0], [1569.0, 60041.0], [1573.0, 60029.0], [1571.0, 60027.0], [1575.0, 60027.0], [1577.0, 60027.0], [1576.0, 60028.0], [1580.0, 60028.0], [1579.0, 60029.0], [1583.0, 60026.5], [1581.0, 60027.0], [1598.0, 60028.0], [1596.0, 60027.0], [1594.0, 60027.5], [1592.0, 60028.5], [1590.0, 60027.0], [1589.0, 60026.0], [1588.0, 60028.0], [1586.0, 60028.333333333336], [1567.0, 60034.0], [1538.0, 60029.5], [1536.0, 60029.0], [1540.0, 60029.0], [1539.0, 60029.0], [1542.0, 60027.0], [1541.0, 60030.0], [1544.0, 60027.0], [1543.0, 60028.0], [1546.0, 60028.0], [1545.0, 60027.0], [1549.0, 60029.5], [1547.0, 60027.0], [1551.0, 60027.0], [1550.0, 60027.0], [1561.0, 60028.5], [1559.0, 60027.666666666664], [1556.0, 60028.5], [1554.0, 60027.0], [1553.0, 60027.0], [1552.0, 60028.0], [1660.0, 60027.0], [1663.0, 60027.0], [1633.0, 60030.0], [1632.0, 60027.666666666664], [1635.0, 60027.0], [1634.0, 60027.0], [1639.0, 60027.0], [1637.0, 60027.5], [1642.0, 60027.5], [1640.0, 60028.0], [1645.0, 60027.5], [1643.0, 60028.0], [1647.0, 60030.0], [1646.0, 60028.0], [1662.0, 60027.0], [1661.0, 60026.0], [1659.0, 60026.0], [1658.0, 60027.0], [1657.0, 60026.0], [1656.0, 60027.0], [1655.0, 60027.0], [1653.0, 60027.0], [1652.0, 60027.0], [1651.0, 60027.0], [1650.0, 60027.5], [1648.0, 60027.0], [1629.0, 60027.0], [1601.0, 60027.5], [1604.0, 60026.5], [1602.0, 60029.0], [1608.0, 60027.5], [1606.0, 60028.5], [1610.0, 60027.0], [1609.0, 60030.0], [1612.0, 60026.0], [1611.0, 60027.0], [1615.0, 60027.0], [1614.0, 60026.5], [1628.0, 60026.5], [1626.0, 60026.0], [1625.0, 60028.0], [1623.0, 60027.0], [1622.0, 60027.0], [1621.0, 60027.5], [1619.0, 60027.0], [1618.0, 60026.0], [1617.0, 60026.0], [1616.0, 60027.0], [1717.0, 60027.5], [1700.0, 60028.0], [1722.0, 60027.0], [1727.0, 60027.5], [1696.0, 60029.5], [1699.0, 60031.0], [1697.0, 60028.0], [1701.0, 60027.0], [1704.0, 60027.0], [1703.0, 60026.5], [1707.0, 60027.0], [1706.0, 60029.5], [1711.0, 60028.0], [1709.0, 60027.0], [1725.0, 60027.0], [1724.0, 60027.5], [1721.0, 60027.5], [1719.0, 60027.0], [1718.0, 60027.0], [1715.0, 60027.0], [1714.0, 60027.0], [1713.0, 60027.5], [1679.0, 60027.0], [1678.0, 60028.0], [1676.0, 60027.0], [1675.0, 60028.5], [1673.0, 60029.0], [1672.0, 60028.0], [1671.0, 60027.0], [1670.0, 60027.0], [1668.0, 60030.0], [1667.0, 60028.0], [1666.0, 60027.5], [1664.0, 60027.0], [1695.0, 60027.0], [1693.0, 60027.0], [1692.0, 60027.0], [1691.0, 60026.0], [1690.0, 60027.0], [1688.0, 60026.5], [1686.0, 60029.0], [1685.0, 60027.0], [1684.0, 60027.5], [1682.0, 60027.0], [1681.0, 60027.0], [1680.0, 60030.0], [1787.0, 60034.0], [1791.0, 60033.25], [1760.0, 60028.5], [1763.0, 60030.0], [1762.0, 60029.0], [1765.0, 60029.0], [1764.0, 60029.0], [1768.0, 60029.0], [1767.0, 60028.5], [1771.0, 60029.5], [1769.0, 60029.0], [1785.0, 60029.5], [1783.0, 60033.0], [1778.0, 60031.0], [1777.0, 60029.5], [1776.0, 60029.5], [1742.0, 60027.5], [1740.0, 60027.5], [1738.0, 60026.5], [1736.0, 60027.0], [1735.0, 60027.0], [1734.0, 60027.0], [1733.0, 60027.0], [1732.0, 60028.5], [1730.0, 60027.5], [1728.0, 60028.0], [1756.0, 60027.0], [1755.0, 60029.5], [1753.0, 60028.0], [1752.0, 60033.0], [1751.0, 60028.5], [1749.0, 60030.5], [1747.0, 60028.0], [1746.0, 60033.0], [1745.0, 60029.0], [1744.0, 60028.5], [1773.0, 60029.0], [1772.0, 60029.0], [1806.0, 60032.0], [1850.0, 60036.666666666664], [1855.0, 60037.6], [1847.0, 60037.5], [1845.0, 60038.25], [1833.0, 60041.0], [1831.0, 60041.0], [1828.0, 60039.0], [1826.0, 60040.0], [1822.0, 60037.5], [1794.0, 60032.0], [1798.0, 60032.5], [1796.0, 60031.5], [1800.0, 60029.0], [1799.0, 60029.0], [1804.0, 60028.0], [1803.0, 60031.0], [1807.0, 60030.5], [1821.0, 60037.0], [1819.0, 60036.0], [1814.0, 60035.0], [1813.0, 60032.0], [1812.0, 60034.5], [1809.0, 60032.0], [1916.0, 60102.5], [1919.0, 60080.333333333336], [1918.0, 60094.16666666667], [1917.0, 60091.6], [1915.0, 60081.5], [1914.0, 60106.0], [1912.0, 60114.5], [1913.0, 60082.0], [1911.0, 60114.666666666664], [1877.0, 60035.5], [1856.0, 60039.0], [1859.0, 60038.0], [1858.0, 60039.0], [1863.0, 60036.333333333336], [1860.0, 60037.0], [1864.0, 60034.0], [1924.0, 60084.5], [1976.0, 60057.75], [1983.0, 60061.42857142857], [1968.0, 60059.0], [1963.0, 60046.666666666664], [1960.0, 60117.75000000001], [1948.0, 60086.18749999999], [1947.0, 60093.333333333336], [1946.0, 60071.4], [1923.0, 60110.666666666664], [1922.0, 60102.0], [1921.0, 60049.333333333336], [1920.0, 60059.833333333336], [2000.0, 60064.0], [1999.0, 60101.0], [1998.0, 60084.5], [1996.0, 60095.8], [1991.0, 60052.0], [1990.0, 60136.0], [1989.0, 60103.83333333333]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1503.422000000001, 60039.83399999994]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 21026.0], [3.0, 21025.0], [4.0, 21026.0], [5.0, 21041.0], [6.0, 21026.0], [7.0, 21025.0], [8.0, 21022.0], [9.0, 21022.0], [10.0, 21020.0], [11.0, 21020.0], [12.0, 21020.0], [13.0, 21020.0], [15.0, 21019.5], [16.0, 21019.0], [17.0, 21018.0], [19.0, 21022.5], [20.0, 21021.0], [21.0, 21021.0], [22.0, 21023.0], [23.0, 21017.0], [24.0, 21021.0], [25.0, 21017.0], [26.0, 21021.0], [27.0, 21016.0], [28.0, 21019.0], [29.0, 21020.0], [30.0, 21050.0], [31.0, 21048.0], [33.0, 21047.0], [32.0, 21049.0], [35.0, 21032.0], [34.0, 21048.0], [37.0, 21047.0], [36.0, 21046.0], [39.0, 21044.0], [38.0, 21047.0], [41.0, 21040.0], [40.0, 21044.0], [43.0, 21041.0], [42.0, 21040.0], [45.0, 21039.0], [44.0, 21039.0], [47.0, 21036.0], [46.0, 21036.0], [49.0, 21036.0], [48.0, 21034.0], [51.0, 21036.0], [50.0, 21035.0], [52.0, 21032.0], [55.0, 21037.0], [54.0, 21037.0], [57.0, 21033.0], [56.0, 21035.0], [59.0, 21032.0], [58.0, 21033.0], [61.0, 21030.0], [60.0, 21030.0], [63.0, 21030.0], [62.0, 21032.0], [67.0, 21025.0], [66.0, 21026.0], [65.0, 21029.0], [64.0, 21030.0], [71.0, 21029.0], [70.0, 21025.0], [69.0, 21026.0], [68.0, 21026.0], [75.0, 21027.0], [74.0, 21027.0], [73.0, 21028.0], [72.0, 21028.0], [79.0, 21028.0], [78.0, 21027.0], [77.0, 21026.0], [76.0, 21026.0], [83.0, 21025.0], [82.0, 21025.0], [81.0, 21026.0], [80.0, 21027.0], [87.0, 21021.0], [86.0, 21021.0], [85.0, 21023.0], [84.0, 21024.0], [91.0, 21036.0], [90.0, 21037.0], [89.0, 21038.0], [88.0, 21021.0], [95.0, 21035.0], [94.0, 21035.0], [93.0, 21036.0], [92.0, 21035.0], [99.0, 21032.0], [98.0, 21031.0], [97.0, 21032.0], [96.0, 21034.0], [103.0, 21034.0], [102.0, 21033.0], [101.0, 21033.0], [100.0, 21032.0], [107.0, 21034.0], [106.0, 21034.0], [105.0, 21032.0], [104.0, 21031.0], [111.0, 21030.0], [110.0, 21031.0], [109.0, 21032.0], [108.0, 21034.0], [115.0, 21031.0], [114.0, 21030.0], [113.0, 21032.0], [112.0, 21032.0], [119.0, 21043.0], [118.0, 21028.0], [117.0, 21030.0], [116.0, 21032.0], [123.0, 21035.0], [122.0, 21037.0], [121.0, 21037.0], [120.0, 21037.0], [127.0, 21032.0], [126.0, 21033.0], [125.0, 21032.0], [124.0, 21035.0], [134.0, 21029.0], [133.0, 21031.0], [132.0, 21031.0], [131.0, 21031.0], [130.0, 21031.0], [129.0, 21032.0], [128.0, 21033.0], [143.0, 21046.0], [142.0, 21052.0], [141.0, 21047.0], [140.0, 21047.0], [139.0, 21047.0], [138.0, 21047.0], [137.0, 21029.0], [136.0, 21030.5], [151.0, 21044.0], [150.0, 21043.0], [149.0, 21045.0], [148.0, 21046.0], [147.0, 21050.0], [146.0, 21047.0], [144.0, 21046.0], [159.0, 21042.0], [158.0, 21044.0], [157.0, 21045.0], [156.0, 21044.0], [155.0, 21045.0], [154.0, 21044.0], [153.0, 21043.0], [152.0, 21045.0], [167.0, 21037.0], [166.0, 21039.0], [165.0, 21039.0], [164.0, 21039.0], [163.0, 21039.0], [162.0, 21041.0], [161.0, 21041.0], [160.0, 21040.0], [175.0, 21036.0], [174.0, 21038.0], [173.0, 21037.0], [172.0, 21039.0], [171.0, 21036.0], [170.0, 21038.0], [169.0, 21039.0], [168.0, 21039.0], [183.0, 21029.0], [182.0, 21029.0], [181.0, 21030.0], [180.0, 21035.0], [179.0, 21036.0], [178.0, 21037.0], [177.0, 21035.0], [176.0, 21037.0], [191.0, 21029.0], [190.0, 21029.0], [189.0, 21028.0], [188.0, 21030.0], [187.0, 21030.0], [186.0, 21030.5], [184.0, 21030.0], [199.0, 21052.0], [198.0, 21052.0], [197.0, 21046.0], [196.0, 21059.5], [194.0, 21027.0], [193.0, 21028.0], [192.0, 21044.0], [207.0, 21050.0], [206.0, 21043.0], [205.0, 21056.0], [204.0, 21057.0], [203.0, 21050.0], [202.0, 21056.0], [201.0, 21052.0], [200.0, 21054.0], [215.0, 21038.0], [214.0, 21036.0], [213.0, 21044.0], [212.0, 21035.0], [211.0, 21031.0], [210.0, 21036.0], [209.0, 21049.0], [208.0, 21052.0], [223.0, 21042.0], [222.0, 21027.0], [220.0, 21042.0], [219.0, 21026.0], [218.0, 21042.0], [217.0, 21037.0], [216.0, 21040.0], [231.0, 21042.0], [230.0, 21041.0], [229.0, 21041.0], [228.0, 21040.0], [227.0, 21045.0], [225.0, 21041.0], [224.0, 21046.0], [239.0, 21036.0], [238.0, 21038.0], [236.0, 21036.0], [235.0, 21030.0], [234.0, 21039.0], [233.0, 21039.0], [232.0, 21042.0], [246.0, 21038.0], [245.0, 21036.0], [244.0, 21037.0], [243.0, 21037.0], [242.0, 21022.0], [241.0, 21037.0], [240.0, 21038.0], [255.0, 21036.0], [254.0, 21036.0], [253.0, 21036.0], [252.0, 21037.0], [251.0, 21036.0], [250.0, 21036.0], [249.0, 21037.0], [248.0, 21036.5], [270.0, 21034.0], [271.0, 21017.0], [269.0, 21034.0], [268.0, 21035.0], [267.0, 21035.0], [266.0, 21037.0], [265.0, 21036.0], [264.0, 21035.0], [263.0, 21035.0], [259.0, 21036.333333333332], [256.0, 21035.0], [262.0, 21033.0], [261.0, 21036.0], [260.0, 21036.0], [286.0, 21018.0], [287.0, 21033.0], [285.0, 21019.0], [284.0, 21035.0], [283.0, 21015.0], [282.0, 21017.0], [281.0, 21031.0], [280.0, 21017.0], [279.0, 21016.0], [273.0, 21017.0], [272.0, 21017.0], [275.0, 21033.0], [274.0, 21019.0], [278.0, 21029.0], [277.0, 21030.0], [276.0, 21032.0], [302.0, 21047.0], [303.0, 21015.0], [301.0, 21017.0], [300.0, 21048.0], [299.0, 21042.0], [297.0, 21050.0], [296.0, 21035.0], [295.0, 21035.0], [289.0, 21016.0], [288.0, 21018.0], [291.0, 21016.0], [290.0, 21032.0], [294.0, 21019.0], [293.0, 21031.0], [292.0, 21030.0], [318.0, 21046.0], [319.0, 21045.0], [317.0, 21045.0], [316.0, 21046.0], [315.0, 21047.0], [314.0, 21045.0], [313.0, 21046.0], [312.0, 21047.0], [311.0, 21047.0], [305.0, 21049.0], [304.0, 21047.0], [307.0, 21046.0], [306.0, 21051.0], [310.0, 21046.0], [309.0, 21045.0], [308.0, 21046.0], [334.0, 21044.0], [335.0, 21043.0], [333.0, 21046.0], [332.0, 21043.0], [331.0, 21045.0], [330.0, 21045.0], [329.0, 21043.0], [328.0, 21042.0], [327.0, 21044.0], [321.0, 21045.0], [320.0, 21045.0], [323.0, 21047.0], [322.0, 21044.0], [326.0, 21044.0], [325.0, 21044.0], [324.0, 21044.0], [350.0, 21057.0], [351.0, 21057.0], [349.0, 21058.0], [348.0, 21050.5], [346.0, 21041.0], [345.0, 21042.0], [344.0, 21041.0], [343.0, 21057.0], [337.0, 21043.0], [336.0, 21042.0], [339.0, 21058.0], [338.0, 21057.0], [342.0, 21057.0], [340.0, 21056.0], [366.0, 21029.0], [367.0, 21028.0], [365.0, 21049.0], [364.0, 21048.0], [363.0, 21049.0], [362.0, 21049.0], [361.0, 21050.0], [360.0, 21028.0], [359.0, 21043.0], [353.0, 21026.0], [352.0, 21057.0], [355.0, 21035.0], [354.0, 21040.0], [358.0, 21035.0], [357.0, 21034.0], [356.0, 21036.0], [382.0, 21041.0], [383.0, 21041.0], [381.0, 21043.0], [380.0, 21045.0], [379.0, 21044.0], [378.0, 21044.0], [376.0, 21042.0], [375.0, 21058.0], [369.0, 21044.0], [368.0, 21041.0], [371.0, 21042.0], [370.0, 21044.0], [374.0, 21041.0], [373.0, 21042.0], [372.0, 21043.0], [398.0, 21041.0], [399.0, 21039.0], [397.0, 21037.0], [396.0, 21053.0], [395.0, 21054.0], [394.0, 21055.0], [393.0, 21055.0], [392.0, 21056.0], [391.0, 21055.0], [385.0, 21054.0], [384.0, 21042.0], [387.0, 21040.0], [386.0, 21041.0], [390.0, 21040.0], [389.0, 21041.0], [388.0, 21040.0], [414.0, 21052.0], [415.0, 21038.0], [413.0, 21051.0], [412.0, 21054.0], [411.0, 21053.0], [410.0, 21054.0], [409.0, 21053.0], [408.0, 21054.0], [407.0, 21038.0], [401.0, 21038.0], [400.0, 21039.0], [403.0, 21040.0], [402.0, 21038.0], [405.0, 21038.0], [404.0, 21039.0], [430.0, 21018.0], [431.0, 21032.0], [429.0, 21016.0], [428.0, 21016.0], [427.0, 21019.0], [426.0, 21020.0], [425.0, 21019.0], [424.0, 21020.0], [423.0, 21019.0], [417.0, 21039.0], [416.0, 21039.0], [419.0, 21021.0], [418.0, 21038.0], [422.0, 21020.0], [421.0, 21036.0], [420.0, 21023.0], [445.0, 21040.0], [447.0, 21024.0], [444.0, 21039.0], [435.0, 21043.0], [434.0, 21062.0], [433.0, 21047.0], [432.0, 21048.0], [442.0, 21039.0], [441.0, 21038.0], [440.0, 21039.0], [439.0, 21043.0], [438.0, 21043.0], [437.0, 21044.0], [436.0, 21043.0], [462.0, 21029.0], [463.0, 21030.0], [461.0, 21029.0], [460.0, 21030.0], [459.0, 21030.0], [458.0, 21031.0], [457.0, 21032.0], [456.0, 21033.0], [455.0, 21030.0], [449.0, 21033.0], [448.0, 21038.0], [451.0, 21033.0], [450.0, 21032.0], [454.0, 21032.0], [453.0, 21032.0], [452.0, 21048.0], [478.0, 21034.0], [479.0, 21034.0], [477.0, 21034.0], [476.0, 21034.0], [475.0, 21037.0], [474.0, 21037.0], [473.0, 21036.0], [472.0, 21042.0], [471.0, 21041.0], [465.0, 21043.0], [464.0, 21029.0], [467.0, 21042.0], [466.0, 21043.0], [470.0, 21041.0], [469.0, 21040.0], [468.0, 21041.0], [494.0, 21043.0], [495.0, 21043.0], [493.0, 21042.0], [492.0, 21044.0], [491.0, 21044.0], [490.0, 21046.0], [489.0, 21045.0], [488.0, 21045.0], [487.0, 21045.0], [481.0, 21030.0], [480.0, 21033.0], [483.0, 21031.0], [482.0, 21032.0], [486.0, 21046.0], [485.0, 21045.0], [484.0, 21045.0], [510.0, 21039.0], [511.0, 21039.0], [509.0, 21040.0], [508.0, 21041.0], [507.0, 21040.0], [506.0, 21040.0], [505.0, 21040.0], [504.0, 21042.0], [503.0, 21025.0], [497.0, 21041.0], [496.0, 21043.0], [499.0, 21042.0], [498.0, 21042.0], [502.0, 21040.0], [501.0, 21041.0], [500.0, 21042.0], [540.0, 21039.0], [543.0, 21039.0], [529.0, 21054.0], [528.0, 21054.0], [531.0, 21038.0], [530.0, 21039.0], [533.0, 21039.0], [532.0, 21039.0], [542.0, 21039.0], [541.0, 21038.0], [539.0, 21037.0], [538.0, 21038.0], [537.0, 21039.0], [536.0, 21040.0], [527.0, 21022.0], [513.0, 21041.0], [512.0, 21040.0], [515.0, 21040.0], [514.0, 21039.0], [517.0, 21041.0], [516.0, 21040.0], [519.0, 21040.0], [518.0, 21040.0], [526.0, 21053.0], [525.0, 21038.0], [524.0, 21037.0], [523.0, 21038.0], [522.0, 21022.0], [521.0, 21022.0], [520.0, 21040.0], [535.0, 21038.0], [534.0, 21038.0], [569.0, 21045.0], [573.0, 21031.0], [574.0, 21029.0], [561.0, 21049.0], [560.0, 21048.0], [563.0, 21049.0], [562.0, 21050.0], [565.0, 21048.0], [564.0, 21048.0], [572.0, 21032.0], [571.0, 21033.0], [570.0, 21031.0], [568.0, 21046.0], [551.0, 21049.0], [550.0, 21049.0], [549.0, 21048.0], [548.0, 21048.0], [547.0, 21036.0], [546.0, 21038.0], [545.0, 21024.0], [544.0, 21039.0], [559.0, 21048.0], [558.0, 21049.0], [557.0, 21048.0], [556.0, 21048.0], [555.0, 21050.0], [554.0, 21050.0], [553.0, 21049.0], [552.0, 21049.0], [567.0, 21048.0], [566.0, 21048.0], [604.0, 21044.0], [607.0, 21029.0], [593.0, 21039.0], [592.0, 21036.0], [595.0, 21037.0], [594.0, 21038.0], [597.0, 21037.0], [596.0, 21037.0], [606.0, 21028.0], [605.0, 21044.0], [603.0, 21045.0], [602.0, 21048.0], [601.0, 21047.0], [600.0, 21048.0], [591.0, 21037.0], [577.0, 21025.0], [576.0, 21028.0], [579.0, 21040.0], [578.0, 21025.0], [581.0, 21038.0], [580.0, 21038.0], [583.0, 21038.0], [582.0, 21038.0], [590.0, 21022.0], [589.0, 21022.0], [588.0, 21037.0], [587.0, 21037.0], [586.0, 21037.0], [585.0, 21038.0], [584.0, 21037.0], [599.0, 21034.0], [598.0, 21037.0], [636.0, 21044.0], [639.0, 21044.0], [625.0, 21033.0], [624.0, 21017.0], [627.0, 21045.0], [626.0, 21018.0], [629.0, 21045.0], [628.0, 21043.0], [638.0, 21044.0], [637.0, 21045.0], [635.0, 21047.0], [634.0, 21044.0], [633.0, 21044.0], [632.0, 21046.0], [623.0, 21019.0], [609.0, 21027.0], [608.0, 21029.0], [611.0, 21028.0], [610.0, 21026.0], [613.0, 21022.0], [612.0, 21026.0], [615.0, 21022.0], [614.0, 21021.0], [622.0, 21018.0], [621.0, 21020.0], [620.0, 21021.0], [619.0, 21020.0], [618.0, 21021.0], [617.0, 21051.0], [616.0, 21021.0], [631.0, 21044.0], [630.0, 21046.0], [668.0, 21044.0], [671.0, 21028.0], [657.0, 21022.0], [656.0, 21022.0], [659.0, 21022.0], [658.0, 21022.0], [661.0, 21019.0], [660.0, 21020.0], [670.0, 21029.0], [669.0, 21029.0], [667.0, 21046.0], [666.0, 21046.0], [665.0, 21031.0], [664.0, 21018.0], [655.0, 21022.0], [640.0, 21025.0], [642.0, 21026.0], [641.0, 21025.0], [645.0, 21026.0], [643.0, 21027.0], [647.0, 21027.0], [646.0, 21025.0], [654.0, 21040.0], [653.0, 21040.0], [652.0, 21027.0], [651.0, 21043.0], [650.0, 21042.0], [649.0, 21043.0], [648.0, 21042.0], [663.0, 21032.0], [662.0, 21019.0], [700.0, 21019.0], [703.0, 21021.0], [689.0, 21049.0], [688.0, 21049.0], [691.0, 21049.0], [690.0, 21034.0], [693.0, 21034.0], [692.0, 21049.0], [702.0, 21021.0], [701.0, 21035.0], [699.0, 21021.0], [698.0, 21019.0], [697.0, 21021.0], [696.0, 21021.0], [687.0, 21048.0], [673.0, 21051.0], [672.0, 21052.0], [675.0, 21037.0], [674.0, 21051.0], [677.0, 21047.0], [676.0, 21051.0], [679.0, 21048.0], [678.0, 21047.0], [686.0, 21049.0], [685.0, 21049.0], [684.0, 21050.0], [683.0, 21049.0], [682.0, 21048.0], [681.0, 21049.0], [680.0, 21048.0], [695.0, 21033.0], [694.0, 21035.0], [732.0, 21056.0], [735.0, 21057.0], [721.0, 21056.0], [720.0, 21054.0], [723.0, 21056.0], [722.0, 21058.0], [725.0, 21056.0], [724.0, 21056.0], [734.0, 21057.0], [733.0, 21056.0], [731.0, 21056.0], [730.0, 21055.0], [729.0, 21057.0], [728.0, 21052.0], [719.0, 21055.0], [705.0, 21021.0], [704.0, 21020.0], [707.0, 21020.0], [706.0, 21021.0], [709.0, 21052.0], [708.0, 21037.0], [711.0, 21054.0], [710.0, 21052.0], [718.0, 21055.0], [717.0, 21054.0], [716.0, 21057.0], [715.0, 21054.0], [714.0, 21056.0], [713.0, 21055.0], [712.0, 21053.0], [727.0, 21054.0], [726.0, 21055.0], [764.0, 21053.0], [767.0, 21056.0], [753.0, 21054.0], [752.0, 21057.0], [755.0, 21053.0], [754.0, 21053.0], [757.0, 21054.0], [756.0, 21053.0], [766.0, 21052.0], [765.0, 21054.0], [763.0, 21054.0], [762.0, 21053.0], [761.0, 21052.0], [760.0, 21053.0], [751.0, 21059.0], [737.0, 21056.0], [736.0, 21056.0], [739.0, 21056.0], [738.0, 21053.0], [741.0, 21054.0], [740.0, 21055.0], [743.0, 21057.0], [742.0, 21057.0], [750.0, 21058.0], [749.0, 21039.0], [748.0, 21055.0], [747.0, 21053.0], [746.0, 21054.0], [745.0, 21056.0], [744.0, 21056.0], [759.0, 21053.0], [758.0, 21052.0], [796.0, 21046.0], [799.0, 21053.0], [785.0, 21058.0], [784.0, 21055.0], [787.0, 21056.0], [786.0, 21051.0], [789.0, 21049.0], [788.0, 21053.0], [798.0, 21053.0], [797.0, 21046.0], [795.0, 21051.0], [794.0, 21049.0], [793.0, 21054.0], [792.0, 21050.0], [783.0, 21058.0], [768.0, 21054.0], [770.0, 21054.0], [769.0, 21053.0], [772.0, 21052.0], [771.0, 21052.0], [775.0, 21054.0], [773.0, 21053.0], [782.0, 21057.0], [781.0, 21059.0], [779.0, 21052.0], [778.0, 21051.0], [777.0, 21051.0], [776.0, 21054.0], [791.0, 21052.0], [790.0, 21051.0], [828.0, 21037.0], [831.0, 21037.0], [817.0, 21053.0], [816.0, 21039.0], [819.0, 21040.0], [818.0, 21054.0], [821.0, 21040.0], [820.0, 21039.0], [830.0, 21038.0], [829.0, 21035.0], [827.0, 21039.0], [826.0, 21038.0], [825.0, 21038.0], [824.0, 21040.0], [815.0, 21054.0], [801.0, 21040.0], [800.0, 21052.0], [803.0, 21038.0], [802.0, 21038.0], [805.0, 21038.0], [804.0, 21054.0], [807.0, 21039.0], [806.0, 21039.0], [814.0, 21038.0], [813.0, 21055.0], [812.0, 21039.0], [811.0, 21048.5], [809.0, 21035.0], [808.0, 21036.0], [823.0, 21038.0], [822.0, 21038.0], [860.0, 21039.0], [863.0, 21038.0], [848.0, 21036.0], [850.0, 21038.0], [849.0, 21037.0], [852.0, 21036.0], [851.0, 21037.0], [862.0, 21037.0], [861.0, 21039.0], [859.0, 21035.0], [858.0, 21037.0], [857.0, 21037.0], [856.0, 21040.0], [847.0, 21036.0], [832.0, 21036.0], [835.0, 21037.0], [834.0, 21037.5], [837.0, 21042.0], [836.0, 21044.0], [839.0, 21042.0], [838.0, 21037.0], [846.0, 21034.0], [845.0, 21037.0], [844.0, 21036.0], [843.0, 21036.0], [842.0, 21036.0], [841.0, 21037.0], [840.0, 21040.0], [855.0, 21040.0], [853.0, 21038.0], [892.0, 21040.0], [895.0, 21041.0], [881.0, 21023.0], [880.0, 21023.0], [883.0, 21023.0], [882.0, 21022.0], [885.0, 21022.0], [884.0, 21023.0], [894.0, 21040.0], [893.0, 21039.0], [891.0, 21051.0], [890.0, 21039.0], [889.0, 21039.0], [888.0, 21021.0], [879.0, 21024.0], [865.0, 21039.0], [864.0, 21038.0], [867.0, 21039.0], [866.0, 21038.0], [869.0, 21025.0], [868.0, 21037.0], [871.0, 21023.0], [870.0, 21024.0], [878.0, 21024.0], [877.0, 21023.0], [876.0, 21026.0], [875.0, 21025.0], [874.0, 21025.0], [873.0, 21024.0], [872.0, 21022.0], [887.0, 21038.0], [886.0, 21038.0], [926.0, 21040.0], [916.0, 21043.0], [927.0, 21044.0], [913.0, 21041.0], [912.0, 21044.0], [915.0, 21040.0], [914.0, 21043.0], [925.0, 21044.0], [924.0, 21044.0], [920.0, 21037.0], [902.0, 21045.0], [901.0, 21040.0], [900.0, 21041.0], [899.0, 21042.0], [898.0, 21039.0], [897.0, 21039.0], [896.0, 21041.0], [910.0, 21041.0], [909.0, 21043.0], [908.0, 21040.0], [907.0, 21040.0], [906.0, 21042.0], [905.0, 21043.0], [904.0, 21042.5], [919.0, 21040.0], [918.0, 21039.0], [917.0, 21038.0], [956.0, 21039.0], [959.0, 21041.0], [945.0, 21038.0], [944.0, 21042.0], [947.0, 21040.0], [946.0, 21040.0], [949.0, 21046.0], [948.0, 21041.0], [958.0, 21043.0], [957.0, 21042.0], [955.0, 21041.0], [954.0, 21042.0], [953.0, 21043.0], [952.0, 21044.0], [943.0, 21044.0], [929.0, 21039.0], [928.0, 21044.0], [931.0, 21039.0], [930.0, 21040.0], [933.0, 21041.0], [932.0, 21041.0], [935.0, 21043.0], [934.0, 21041.0], [942.0, 21045.0], [940.0, 21039.0], [939.0, 21042.0], [938.0, 21041.0], [937.0, 21042.0], [936.0, 21041.0], [951.0, 21042.0], [950.0, 21043.0], [985.0, 21042.0], [989.0, 21044.0], [991.0, 21043.0], [977.0, 21042.0], [976.0, 21042.0], [979.0, 21041.0], [978.0, 21042.0], [981.0, 21040.0], [980.0, 21041.0], [988.0, 21042.0], [987.0, 21042.0], [986.0, 21041.0], [984.0, 21041.0], [967.0, 21043.0], [966.0, 21042.0], [965.0, 21042.0], [964.0, 21045.0], [963.0, 21043.0], [962.0, 21043.0], [961.0, 21043.0], [960.0, 21042.0], [975.0, 21044.0], [974.0, 21043.0], [973.0, 21042.0], [972.0, 21042.0], [971.0, 21042.0], [970.0, 21042.0], [969.0, 21045.0], [968.0, 21045.0], [983.0, 21040.0], [982.0, 21039.0], [997.0, 21040.0], [1020.0, 21042.0], [1000.0, 21039.89946737683], [992.0, 21044.0], [999.0, 21037.0], [998.0, 21042.0], [996.0, 21042.0], [995.0, 21040.0], [994.0, 21040.0], [993.0, 21043.0], [1082.0, 21045.0], [1050.0, 21036.0], [1162.0, 21033.0], [1318.0, 21038.0], [1404.0, 21039.0], [1386.0, 21038.0], [1364.0, 21038.0], [1522.0, 21031.0], [1502.0, 21033.0], [1538.0, 21035.0], [1652.0, 21031.0], [1628.0, 21031.0], [1724.0, 21038.0], [1740.0, 21041.0], [1990.0, 21034.0], [2022.0, 1825.2], [2034.0, 1529.5714285714287], [2032.0, 785.0], [2028.0, 1827.5], [2012.0, 1147.340909090909], [2006.0, 1446.0], [2004.0, 1574.0], [2002.0, 1287.125], [2000.0, 1260.4421814167022], [2152.0, 46.333333333333336], [2096.0, 39.166666666666664], [2100.0, 76.0], [2104.0, 101.0], [2168.0, 1539.0], [2148.0, 43.375], [2124.0, 43.0], [2128.0, 39.0], [2140.0, 37.6], [2192.0, 63.5], [2188.0, 66.0], [2236.0, 1759.857142857143], [2228.0, 79.0], [2224.0, 76.0], [2216.0, 69.66666666666667], [2196.0, 59.4], [2204.0, 63.0], [2284.0, 737.5], [2292.0, 731.1111111111111], [2248.0, 91.33333333333333], [2252.0, 762.0], [2260.0, 759.5], [2268.0, 759.5], [2356.0, 136.83333333333334], [2328.0, 124.0], [2364.0, 459.3333333333333], [2360.0, 150.5], [2352.0, 135.25], [2344.0, 131.0], [2336.0, 380.3333333333333], [2340.0, 129.7], [2312.0, 706.0], [2320.0, 122.0], [2368.0, 243.30051813471505], [2428.0, 205.0], [2416.0, 201.0], [2420.0, 201.0], [2408.0, 199.0], [2404.0, 197.0], [2372.0, 277.0], [2388.0, 551.1428571428572], [2392.0, 699.0], [2440.0, 692.0], [2472.0, 167.0], [2480.0, 672.0], [2468.0, 222.0], [2444.0, 313.75], [2448.0, 214.5], [2456.0, 219.0], [2548.0, 662.0], [2624.0, 653.0], [2736.0, 652.0], [2804.0, 651.0], [2808.0, 647.0], [2820.0, 295.16666666666663], [2868.0, 324.59999999999997], [2816.0, 291.57142857142856], [2876.0, 320.5], [2872.0, 328.5], [2864.0, 321.625], [2860.0, 319.25], [2856.0, 362.0], [2852.0, 319.16666666666663], [2848.0, 317.0], [2824.0, 298.0], [2828.0, 301.1428571428571], [2832.0, 305.11764705882365], [2836.0, 306.2666666666666], [2840.0, 310.2857142857143], [2920.0, 430.0], [2932.0, 412.0], [2888.0, 448.0], [2896.0, 446.0], [2900.0, 441.5], [2904.0, 455.0], [2908.0, 344.2], [2996.0, 491.0], [3000.0, 552.1800219538961], [2992.0, 412.3658536585366], [2988.0, 380.0], [2984.0, 382.5], [2976.0, 389.33333333333337], [2952.0, 410.0], [2956.0, 402.4], [2960.0, 400.0], [2964.0, 430.3333333333333], [2968.0, 399.1666666666667], [2972.0, 397.6666666666667], [2105.0, 66.5], [2097.0, 1083.4242424242427], [2173.0, 64.8], [2161.0, 55.0], [2157.0, 51.42857142857142], [2145.0, 60.6], [2129.0, 41.0], [2137.0, 37.0], [2193.0, 62.0], [2177.0, 63.0], [2237.0, 85.66666666666667], [2233.0, 974.6315789473686], [2229.0, 82.0], [2213.0, 67.83333333333333], [2209.0, 65.5], [2181.0, 62.666666666666664], [2189.0, 64.8], [2201.0, 61.666666666666664], [2205.0, 934.7], [2273.0, 422.125], [2277.0, 99.5], [2285.0, 105.09090909090908], [2293.0, 624.0], [2241.0, 88.66666666666666], [2245.0, 91.25], [2249.0, 1457.1666666666667], [2269.0, 758.0], [2361.0, 153.0], [2313.0, 409.0], [2305.0, 112.0], [2365.0, 151.8], [2357.0, 142.0], [2353.0, 134.5], [2349.0, 135.0], [2345.0, 129.0], [2325.0, 123.0], [2333.0, 126.5], [2429.0, 243.9230769230769], [2425.0, 203.0], [2413.0, 446.5], [2405.0, 199.0], [2401.0, 196.0], [2389.0, 184.50000000000003], [2445.0, 201.33333333333334], [2453.0, 217.0], [2433.0, 210.0], [2437.0, 692.0], [2481.0, 672.0], [2485.0, 167.0], [2469.0, 228.48571428571424], [2449.0, 212.0], [2457.0, 216.0], [2461.0, 219.0], [2537.0, 165.0], [2657.0, 649.0], [2813.0, 289.8823529411764], [2829.0, 301.3333333333333], [2825.0, 298.3333333333333], [2821.0, 296.58333333333337], [2817.0, 646.0], [2873.0, 328.4285714285714], [2869.0, 326.0], [2865.0, 323.0], [2861.0, 319.55], [2849.0, 316.44444444444446], [2833.0, 304.7368421052632], [2841.0, 310.0], [2917.0, 433.0], [2925.0, 427.3333333333333], [2929.0, 415.6666666666667], [2933.0, 415.0], [2941.0, 476.0], [2897.0, 445.0], [2909.0, 437.0], [2881.0, 410.0], [2953.0, 423.0], [1051.0, 21041.0], [1041.0, 21022.5], [1127.0, 21039.333333333332], [1123.0, 21043.5], [1171.0, 21040.0], [1161.0, 21032.0], [1251.0, 21036.0], [1233.0, 21041.0], [1385.0, 21030.0], [1377.0, 21036.5], [1523.0, 21035.0], [1487.0, 21040.0], [1581.0, 21037.0], [1561.0, 21037.0], [1539.0, 21044.0], [1651.0, 21039.0], [1601.0, 21037.0], [1711.0, 21040.0], [2033.0, 1829.0], [1991.0, 21036.0], [2027.0, 1822.0], [2023.0, 1830.0], [2021.0, 1826.0], [2007.0, 1761.0], [2003.0, 1088.8], [2001.0, 898.7777777777778], [2158.0, 51.0], [2106.0, 78.28571428571429], [2102.0, 172.06666666666666], [2170.0, 62.0], [2154.0, 792.0], [2146.0, 44.333333333333336], [2126.0, 887.3333333333334], [2138.0, 57.5], [2142.0, 39.625], [2182.0, 60.0], [2238.0, 1278.0], [2234.0, 1725.0263157894735], [2230.0, 82.8], [2222.0, 1795.0], [2218.0, 71.0], [2190.0, 64.0], [2274.0, 744.7272727272727], [2290.0, 104.0], [2286.0, 735.5], [2294.0, 477.20000000000005], [2298.0, 107.5], [2302.0, 110.0], [2246.0, 91.0], [2258.0, 99.71428571428572], [2262.0, 375.5833333333333], [2266.0, 99.75], [2270.0, 315.6666666666667], [2310.0, 114.33333333333333], [2366.0, 168.5], [2354.0, 700.2], [2338.0, 702.0], [2306.0, 112.75], [2314.0, 118.16666666666666], [2318.0, 235.4], [2322.0, 121.0], [2326.0, 123.0], [2334.0, 125.0], [2430.0, 208.5], [2410.0, 200.0], [2402.0, 198.0], [2370.0, 304.0], [2378.0, 173.0], [2386.0, 180.5], [2390.0, 187.5], [2394.0, 404.4285714285714], [2398.0, 197.0], [2478.0, 672.0], [2438.0, 210.0], [2466.0, 684.8333333333334], [2442.0, 692.0], [2458.0, 455.0], [2534.0, 170.0], [2510.0, 663.0], [2686.0, 648.5], [2654.0, 648.0], [2746.0, 366.0], [2810.0, 403.5], [2802.0, 429.0], [2806.0, 426.5], [2814.0, 289.8], [2822.0, 296.5625], [2818.0, 293.625], [2878.0, 334.0], [2870.0, 326.6666666666667], [2866.0, 323.52941176470586], [2858.0, 320.1666666666667], [2830.0, 303.0], [2834.0, 305.1111111111111], [2838.0, 308.70588235294116], [2846.0, 314.72727272727275], [2918.0, 433.2], [2922.0, 428.6666666666667], [2926.0, 422.5], [2930.0, 415.0], [2934.0, 413.0], [2882.0, 450.6666666666667], [2994.0, 451.0], [2998.0, 484.16666666666663], [2990.0, 379.0], [2962.0, 397.0], [2167.0, 1778.0], [2099.0, 44.666666666666664], [2103.0, 64.19999999999999], [2123.0, 45.0], [2155.0, 1020.7272727272727], [2151.0, 45.666666666666664], [2147.0, 43.4375], [2127.0, 877.0], [2139.0, 37.25], [2143.0, 39.75], [2191.0, 1266.642857142857], [2227.0, 79.33333333333333], [2235.0, 1760.0], [2223.0, 1783.0], [2219.0, 72.14285714285715], [2211.0, 68.0], [2199.0, 60.4], [2203.0, 1808.0], [2283.0, 737.0], [2287.0, 735.0], [2291.0, 106.33333333333333], [2295.0, 726.0], [2299.0, 107.0], [2243.0, 89.5], [2251.0, 93.66666666666667], [2255.0, 96.0], [2259.0, 757.0], [2263.0, 541.0], [2311.0, 709.6666666666666], [2359.0, 143.0], [2347.0, 696.0], [2307.0, 720.3000000000001], [2327.0, 125.0], [2423.0, 202.0], [2415.0, 447.0], [2371.0, 488.0], [2379.0, 175.57142857142858], [2387.0, 182.0], [2391.0, 178.0], [2395.0, 192.3], [2435.0, 692.0], [2447.0, 214.0], [2459.0, 219.0], [2463.0, 220.0], [2499.0, 664.0], [2571.0, 660.0], [2691.0, 656.0], [2811.0, 340.2], [2815.0, 291.6666666666667], [2831.0, 304.05882352941177], [2879.0, 328.0], [2871.0, 327.125], [2867.0, 324.5555555555556], [2863.0, 321.1176470588236], [2859.0, 317.6666666666667], [2855.0, 322.0], [2851.0, 318.75], [2823.0, 297.0], [2827.0, 299.8888888888889], [2835.0, 306.2], [2839.0, 308.0], [2843.0, 312.4000000000001], [2847.0, 315.0], [2923.0, 469.0], [2931.0, 411.0], [2943.0, 445.0], [2883.0, 559.3333333333333], [2895.0, 448.0], [2899.0, 447.0], [2903.0, 642.6666666666666], [2907.0, 346.0], [2911.0, 345.0], [2999.0, 464.0], [2947.0, 371.6666666666667], [2995.0, 492.37499999999994], [2983.0, 385.0], [2979.0, 386.0], [2951.0, 407.0], [2955.0, 400.0], [2959.0, 489.0], [1.0, 21026.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1994.010361174922, 2420.9969698450755]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[2034.0, 12161.0], [2035.0, 12161.999999999998], [2032.0, 12153.75], [2031.0, 12157.0], [2027.0, 12160.0], [2026.0, 12159.0], [2025.0, 12154.666666666666], [2012.0, 12169.0], [2011.0, 12165.0], [2010.0, 12175.0], [2007.0, 12171.666666666666], [2006.0, 12167.0], [2122.0, 12222.0], [2168.0, 12238.0], [2155.0, 12231.68], [2154.0, 12237.333333333334], [2127.0, 12224.692307692307], [2126.0, 12213.545454545456], [2123.0, 12211.666666666666], [2121.0, 12210.5], [2097.0, 12186.340909090912], [2095.0, 12184.0], [2094.0, 12193.5], [2092.0, 12200.0], [2091.0, 12189.0], [2090.0, 12169.5], [2262.0, 12217.0], [2292.0, 12187.0], [2295.0, 12187.0], [2242.0, 12232.5], [2240.0, 12232.0], [2247.0, 12231.666666666666], [2244.0, 12230.5], [2251.0, 12230.5], [2249.0, 12232.5], [2254.0, 12231.0], [2252.0, 12231.0], [2256.0, 12231.0], [2255.0, 12229.0], [2259.0, 12226.0], [2258.0, 12228.5], [2261.0, 12219.0], [2260.0, 12222.0], [2263.0, 12214.0], [2266.0, 12213.0], [2265.0, 12212.5], [2269.0, 12208.0], [2268.0, 12213.5], [2271.0, 12200.0], [2270.0, 12207.0], [2294.0, 12181.0], [2293.0, 12184.0], [2289.0, 12183.5], [2287.0, 12187.0], [2286.0, 12183.0], [2285.0, 12185.0], [2284.0, 12183.0], [2283.0, 12201.0], [2281.0, 12193.285714285714], [2274.0, 12199.0], [2273.0, 12200.5], [2207.0, 12237.749999999998], [2191.0, 12240.0], [2239.0, 12232.0], [2238.0, 12233.5], [2236.0, 12236.5], [2234.0, 12244.818181818182], [2223.0, 12246.249999999998], [2377.0, 12480.285714285714], [2414.0, 12665.5], [2412.0, 12406.636363636362], [2401.0, 12423.285714285716], [2326.0, 12262.875], [2318.0, 12164.4], [2313.0, 12167.0], [2312.0, 12173.0], [2311.0, 12174.5], [2309.0, 12170.5], [2307.0, 12185.0], [2306.0, 12183.363636363636], [2394.0, 12738.0], [2392.0, 12473.25], [2388.0, 12489.636363636366], [2370.0, 12508.666666666666], [2364.0, 12597.1], [2354.0, 12555.857142857143], [2347.0, 12406.545454545454], [2336.0, 12497.6], [2548.0, 12411.5], [2556.0, 12402.875], [2532.0, 12451.07142857143], [2531.0, 12599.0], [2517.0, 12320.0], [2510.0, 12400.636363636364], [2499.0, 12434.642857142859], [2485.0, 12494.666666666666], [2437.0, 12463.73913043478], [2458.0, 12462.5625], [2457.0, 12519.8], [2484.0, 12404.0], [2481.0, 12447.333333333334], [2478.0, 12319.0], [2476.0, 12232.0], [2475.0, 12283.666666666666], [2472.0, 12388.0], [2466.0, 12466.0], [2631.0, 12436.0], [2686.0, 12490.076923076922], [2673.0, 12413.4375], [2657.0, 12470.375], [2591.0, 12553.142857142857], [2577.0, 12231.75], [2573.0, 12735.0], [2571.0, 12356.4], [2649.0, 12511.933333333334], [2634.0, 12391.0], [2632.0, 12378.57142857143], [2624.0, 12533.5], [2618.0, 12395.333333333334], [2615.0, 12553.0], [2614.0, 12474.8], [2604.0, 12443.1], [2603.0, 12458.0], [2784.0, 12410.631578947368], [2795.0, 12394.625], [2804.0, 12419.0], [2787.0, 12308.333333333334], [2765.0, 12484.307692307693], [2752.0, 12355.166666666666], [2746.0, 12394.125], [2697.0, 12334.333333333334], [2691.0, 12331.6], [2719.0, 12417.0], [2718.0, 12307.0], [2738.0, 12225.5], [2736.0, 12475.624999999998], [2720.0, 12486.90909090909], [2922.0, 12397.0], [2921.0, 12094.0], [2846.0, 12376.800000000001], [2836.0, 12359.473684210527], [2817.0, 12443.000000000002], [2903.0, 12397.8], [2893.0, 12512.0], [2890.0, 12379.571428571428], [2883.0, 12276.8], [2873.0, 12287.25], [2869.0, 12464.625], [2867.0, 12261.2], [2865.0, 12263.5], [2991.0, 12077.0], [3000.0, 12272.076923076926], [2953.0, 12087.0], [2947.0, 12465.0], [2955.0, 12111.0], [2954.0, 12664.0], [2958.0, 12355.5], [2956.0, 12561.0], [2961.0, 12605.5], [2959.0, 12424.0], [2963.0, 12398.0], [2962.0, 12299.0], [2965.0, 12359.0], [2964.0, 12611.0], [2967.0, 12539.6], [2966.0, 12471.0], [2971.0, 12167.0], [2970.0, 12154.0], [2975.0, 12257.0], [2973.0, 12402.75], [2997.0, 12357.0], [2995.0, 12363.75], [2989.0, 12091.0], [2988.0, 12462.0], [2987.0, 12559.666666666666], [2986.0, 12128.0], [2985.0, 12417.0], [2984.0, 12404.666666666666], [2982.0, 12335.5], [2981.0, 12329.0], [2979.0, 12165.666666666666], [2976.0, 12227.25]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[2509.8029999999976, 12351.95399999999]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6175799E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758002E12, 0.0], [1.6175799E12, 0.0], [1.61757996E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61758002E12, 0.0], [1.6175799E12, 0.0], [1.61757996E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758002E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 955.39470633694, "minX": 1.6175799E12, "maxY": 60039.83399999994, "series": [{"data": [[1.61757996E12, 60039.83399999994]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758002E12, 21037.596205962072], [1.6175799E12, 955.39470633694], [1.61757996E12, 5902.229842243634]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175799E12, 12351.95399999999]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758002E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175799E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757996E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758002E12, 0.0], [1.6175799E12, 0.0], [1.61757996E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175799E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758002E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175799E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757996E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61758002E12, 0.0], [1.6175799E12, 0.0], [1.61757996E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175799E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758002E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.6175799E12, "maxY": 60168.0, "series": [{"data": [[1.6175799E12, 16660.0], [1.61757996E12, 60168.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6175799E12, 1635.0], [1.61757996E12, 60028.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6175799E12, 7589.990000000002], [1.61757996E12, 60062.26]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6175799E12, 3572.0], [1.61757996E12, 60034.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6175799E12, 29.0], [1.61757996E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6175799E12, 618.0], [1.61757996E12, 1032.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757996E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 38.0, "minX": 10.0, "maxY": 60031.0, "series": [{"data": [[534.0, 506.0], [528.0, 235.5], [530.0, 49.0], [568.0, 704.0], [624.0, 64.0], [669.0, 333.5], [663.0, 60031.0], [687.0, 265.0], [725.0, 38.0], [752.0, 636.0], [749.0, 622.0], [767.0, 573.0], [757.0, 563.0], [786.0, 635.0], [788.0, 548.0], [815.0, 640.0], [829.0, 611.0], [809.0, 663.0], [827.0, 551.0], [801.0, 600.0], [859.0, 591.0], [848.0, 582.5], [892.0, 619.0], [922.0, 659.0], [918.0, 582.0], [942.0, 661.0], [934.0, 566.5], [956.0, 566.0], [963.0, 652.0], [1006.0, 603.0], [1051.0, 719.0], [1031.0, 579.0], [1142.0, 571.0], [1136.0, 665.0], [1163.0, 727.0], [1233.0, 677.0], [1271.0, 629.0], [1305.0, 625.0], [1571.0, 315.0], [2249.0, 1777.0], [81.0, 1039.0], [103.0, 3045.0], [113.0, 3043.0], [179.0, 1039.0], [206.0, 1050.0], [208.0, 1051.0], [228.0, 1040.0], [354.0, 42.0], [355.0, 230.0], [416.0, 112.0], [419.0, 56.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[528.0, 21039.5], [530.0, 21050.0], [33.0, 21040.0], [32.0, 21041.0], [568.0, 21027.5], [34.0, 21032.5], [624.0, 21035.0], [669.0, 21061.0], [663.0, 21038.0], [40.0, 21022.5], [687.0, 21036.0], [725.0, 21042.0], [47.0, 21036.0], [46.0, 21040.0], [788.0, 21032.0], [48.0, 21033.0], [801.0, 21041.0], [60.0, 21041.0], [62.0, 21041.5], [71.0, 21039.0], [72.0, 21048.0], [81.0, 21033.0], [96.0, 21046.5], [103.0, 21042.0], [113.0, 21040.0], [146.0, 21036.0], [144.0, 21040.0], [10.0, 21039.0], [206.0, 21051.0], [208.0, 21039.0], [228.0, 21043.0], [21.0, 21033.0], [354.0, 21023.0], [355.0, 21035.0], [22.0, 21036.0], [23.0, 21033.0], [25.0, 21035.0], [419.0, 21036.5], [416.0, 21038.0], [26.0, 21038.0], [27.0, 21036.0], [28.0, 21040.0], [29.0, 21032.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2249.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 10.0, "maxY": 4.9E-324, "series": [{"data": [[534.0, 0.0], [528.0, 0.0], [530.0, 0.0], [568.0, 0.0], [624.0, 0.0], [669.0, 0.0], [663.0, 0.0], [687.0, 0.0], [725.0, 0.0], [752.0, 0.0], [749.0, 0.0], [767.0, 0.0], [757.0, 0.0], [786.0, 0.0], [788.0, 0.0], [815.0, 0.0], [829.0, 0.0], [809.0, 0.0], [827.0, 0.0], [801.0, 0.0], [859.0, 0.0], [848.0, 0.0], [892.0, 0.0], [922.0, 0.0], [918.0, 0.0], [942.0, 0.0], [934.0, 0.0], [956.0, 0.0], [963.0, 0.0], [1006.0, 0.0], [1051.0, 0.0], [1031.0, 0.0], [1142.0, 0.0], [1136.0, 0.0], [1163.0, 0.0], [1233.0, 0.0], [1271.0, 0.0], [1305.0, 0.0], [1571.0, 0.0], [2249.0, 0.0], [81.0, 0.0], [103.0, 0.0], [113.0, 0.0], [179.0, 0.0], [206.0, 0.0], [208.0, 0.0], [228.0, 0.0], [354.0, 0.0], [355.0, 0.0], [416.0, 0.0], [419.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[528.0, 0.0], [530.0, 0.0], [33.0, 0.0], [32.0, 0.0], [568.0, 0.0], [34.0, 0.0], [624.0, 0.0], [669.0, 0.0], [663.0, 0.0], [40.0, 0.0], [687.0, 0.0], [725.0, 0.0], [47.0, 0.0], [46.0, 0.0], [788.0, 0.0], [48.0, 0.0], [801.0, 0.0], [60.0, 0.0], [62.0, 0.0], [71.0, 0.0], [72.0, 0.0], [81.0, 0.0], [96.0, 0.0], [103.0, 0.0], [113.0, 0.0], [146.0, 0.0], [144.0, 0.0], [10.0, 0.0], [206.0, 0.0], [208.0, 0.0], [228.0, 0.0], [21.0, 0.0], [354.0, 0.0], [355.0, 0.0], [22.0, 0.0], [23.0, 0.0], [25.0, 0.0], [419.0, 0.0], [416.0, 0.0], [26.0, 0.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2249.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 147.76666666666668, "minX": 1.6175799E12, "maxY": 567.6, "series": [{"data": [[1.6175799E12, 567.6], [1.61757996E12, 147.76666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757996E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.6175799E12, "maxY": 534.15, "series": [{"data": [[1.6175799E12, 534.15], [1.61757996E12, 134.76666666666668]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61758002E12, 12.3], [1.6175799E12, 0.11666666666666667], [1.61757996E12, 34.03333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758002E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.6175799E12, "maxY": 517.4833333333333, "series": [{"data": [[1.6175799E12, 16.666666666666668]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61757996E12, 16.666666666666668]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.6175799E12, 517.4833333333333], [1.61757996E12, 118.1]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61758002E12, 12.3], [1.6175799E12, 0.11666666666666667], [1.61757996E12, 34.03333333333333]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758002E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.6175799E12, "maxY": 534.15, "series": [{"data": [[1.6175799E12, 534.15], [1.61757996E12, 134.76666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61758002E12, 12.3], [1.6175799E12, 0.11666666666666667], [1.61757996E12, 34.03333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758002E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

