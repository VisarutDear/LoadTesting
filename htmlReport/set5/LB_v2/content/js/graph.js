/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 38.0, "minX": 0.0, "maxY": 60378.0, "series": [{"data": [[0.0, 60030.0], [0.1, 60030.0], [0.2, 60030.0], [0.3, 60033.0], [0.4, 60033.0], [0.5, 60035.0], [0.6, 60035.0], [0.7, 60036.0], [0.8, 60036.0], [0.9, 60037.0], [1.0, 60037.0], [1.1, 60038.0], [1.2, 60038.0], [1.3, 60039.0], [1.4, 60039.0], [1.5, 60039.0], [1.6, 60039.0], [1.7, 60039.0], [1.8, 60039.0], [1.9, 60039.0], [2.0, 60039.0], [2.1, 60040.0], [2.2, 60040.0], [2.3, 60041.0], [2.4, 60041.0], [2.5, 60041.0], [2.6, 60041.0], [2.7, 60041.0], [2.8, 60041.0], [2.9, 60041.0], [3.0, 60041.0], [3.1, 60041.0], [3.2, 60042.0], [3.3, 60042.0], [3.4, 60043.0], [3.5, 60043.0], [3.6, 60043.0], [3.7, 60043.0], [3.8, 60043.0], [3.9, 60043.0], [4.0, 60043.0], [4.1, 60043.0], [4.2, 60043.0], [4.3, 60043.0], [4.4, 60043.0], [4.5, 60043.0], [4.6, 60043.0], [4.7, 60043.0], [4.8, 60044.0], [4.9, 60044.0], [5.0, 60044.0], [5.1, 60044.0], [5.2, 60044.0], [5.3, 60045.0], [5.4, 60045.0], [5.5, 60047.0], [5.6, 60047.0], [5.7, 60048.0], [5.8, 60048.0], [5.9, 60048.0], [6.0, 60048.0], [6.1, 60048.0], [6.2, 60048.0], [6.3, 60048.0], [6.4, 60048.0], [6.5, 60048.0], [6.6, 60048.0], [6.7, 60049.0], [6.8, 60049.0], [6.9, 60049.0], [7.0, 60049.0], [7.1, 60050.0], [7.2, 60050.0], [7.3, 60050.0], [7.4, 60050.0], [7.5, 60050.0], [7.6, 60051.0], [7.7, 60051.0], [7.8, 60053.0], [7.9, 60053.0], [8.0, 60053.0], [8.1, 60053.0], [8.2, 60053.0], [8.3, 60053.0], [8.4, 60053.0], [8.5, 60053.0], [8.6, 60053.0], [8.7, 60053.0], [8.8, 60055.0], [8.9, 60055.0], [9.0, 60055.0], [9.1, 60055.0], [9.2, 60055.0], [9.3, 60055.0], [9.4, 60055.0], [9.5, 60055.0], [9.6, 60056.0], [9.7, 60056.0], [9.8, 60056.0], [9.9, 60056.0], [10.0, 60056.0], [10.1, 60056.0], [10.2, 60056.0], [10.3, 60056.0], [10.4, 60056.0], [10.5, 60057.0], [10.6, 60057.0], [10.7, 60057.0], [10.8, 60057.0], [10.9, 60057.0], [11.0, 60057.0], [11.1, 60058.0], [11.2, 60058.0], [11.3, 60059.0], [11.4, 60059.0], [11.5, 60059.0], [11.6, 60059.0], [11.7, 60059.0], [11.8, 60059.0], [11.9, 60060.0], [12.0, 60060.0], [12.1, 60060.0], [12.2, 60060.0], [12.3, 60060.0], [12.4, 60060.0], [12.5, 60060.0], [12.6, 60062.0], [12.7, 60062.0], [12.8, 60063.0], [12.9, 60063.0], [13.0, 60063.0], [13.1, 60063.0], [13.2, 60064.0], [13.3, 60064.0], [13.4, 60064.0], [13.5, 60064.0], [13.6, 60064.0], [13.7, 60064.0], [13.8, 60064.0], [13.9, 60064.0], [14.0, 60064.0], [14.1, 60064.0], [14.2, 60065.0], [14.3, 60065.0], [14.4, 60066.0], [14.5, 60066.0], [14.6, 60066.0], [14.7, 60066.0], [14.8, 60067.0], [14.9, 60067.0], [15.0, 60067.0], [15.1, 60069.0], [15.2, 60069.0], [15.3, 60070.0], [15.4, 60070.0], [15.5, 60071.0], [15.6, 60071.0], [15.7, 60071.0], [15.8, 60071.0], [15.9, 60072.0], [16.0, 60072.0], [16.1, 60072.0], [16.2, 60072.0], [16.3, 60073.0], [16.4, 60073.0], [16.5, 60074.0], [16.6, 60074.0], [16.7, 60074.0], [16.8, 60074.0], [16.9, 60075.0], [17.0, 60075.0], [17.1, 60076.0], [17.2, 60076.0], [17.3, 60076.0], [17.4, 60076.0], [17.5, 60076.0], [17.6, 60077.0], [17.7, 60077.0], [17.8, 60078.0], [17.9, 60078.0], [18.0, 60078.0], [18.1, 60078.0], [18.2, 60078.0], [18.3, 60078.0], [18.4, 60078.0], [18.5, 60078.0], [18.6, 60079.0], [18.7, 60079.0], [18.8, 60079.0], [18.9, 60079.0], [19.0, 60080.0], [19.1, 60080.0], [19.2, 60080.0], [19.3, 60080.0], [19.4, 60080.0], [19.5, 60080.0], [19.6, 60080.0], [19.7, 60080.0], [19.8, 60080.0], [19.9, 60080.0], [20.0, 60080.0], [20.1, 60081.0], [20.2, 60081.0], [20.3, 60082.0], [20.4, 60082.0], [20.5, 60083.0], [20.6, 60083.0], [20.7, 60085.0], [20.8, 60085.0], [20.9, 60085.0], [21.0, 60085.0], [21.1, 60086.0], [21.2, 60086.0], [21.3, 60086.0], [21.4, 60086.0], [21.5, 60088.0], [21.6, 60088.0], [21.7, 60089.0], [21.8, 60089.0], [21.9, 60089.0], [22.0, 60089.0], [22.1, 60089.0], [22.2, 60089.0], [22.3, 60090.0], [22.4, 60090.0], [22.5, 60090.0], [22.6, 60090.0], [22.7, 60090.0], [22.8, 60092.0], [22.9, 60092.0], [23.0, 60093.0], [23.1, 60093.0], [23.2, 60094.0], [23.3, 60094.0], [23.4, 60094.0], [23.5, 60094.0], [23.6, 60095.0], [23.7, 60095.0], [23.8, 60095.0], [23.9, 60095.0], [24.0, 60096.0], [24.1, 60096.0], [24.2, 60096.0], [24.3, 60096.0], [24.4, 60096.0], [24.5, 60096.0], [24.6, 60096.0], [24.7, 60096.0], [24.8, 60097.0], [24.9, 60097.0], [25.0, 60097.0], [25.1, 60097.0], [25.2, 60097.0], [25.3, 60098.0], [25.4, 60098.0], [25.5, 60099.0], [25.6, 60099.0], [25.7, 60099.0], [25.8, 60099.0], [25.9, 60100.0], [26.0, 60100.0], [26.1, 60100.0], [26.2, 60100.0], [26.3, 60100.0], [26.4, 60100.0], [26.5, 60101.0], [26.6, 60101.0], [26.7, 60101.0], [26.8, 60101.0], [26.9, 60101.0], [27.0, 60101.0], [27.1, 60102.0], [27.2, 60102.0], [27.3, 60104.0], [27.4, 60104.0], [27.5, 60104.0], [27.6, 60104.0], [27.7, 60104.0], [27.8, 60105.0], [27.9, 60105.0], [28.0, 60105.0], [28.1, 60105.0], [28.2, 60109.0], [28.3, 60109.0], [28.4, 60110.0], [28.5, 60110.0], [28.6, 60110.0], [28.7, 60110.0], [28.8, 60112.0], [28.9, 60112.0], [29.0, 60112.0], [29.1, 60112.0], [29.2, 60113.0], [29.3, 60113.0], [29.4, 60113.0], [29.5, 60113.0], [29.6, 60115.0], [29.7, 60115.0], [29.8, 60117.0], [29.9, 60117.0], [30.0, 60117.0], [30.1, 60117.0], [30.2, 60117.0], [30.3, 60117.0], [30.4, 60117.0], [30.5, 60118.0], [30.6, 60118.0], [30.7, 60118.0], [30.8, 60118.0], [30.9, 60118.0], [31.0, 60118.0], [31.1, 60118.0], [31.2, 60118.0], [31.3, 60118.0], [31.4, 60118.0], [31.5, 60118.0], [31.6, 60118.0], [31.7, 60119.0], [31.8, 60119.0], [31.9, 60119.0], [32.0, 60119.0], [32.1, 60119.0], [32.2, 60119.0], [32.3, 60119.0], [32.4, 60119.0], [32.5, 60119.0], [32.6, 60119.0], [32.7, 60119.0], [32.8, 60119.0], [32.9, 60119.0], [33.0, 60120.0], [33.1, 60120.0], [33.2, 60120.0], [33.3, 60120.0], [33.4, 60120.0], [33.5, 60120.0], [33.6, 60120.0], [33.7, 60120.0], [33.8, 60120.0], [33.9, 60120.0], [34.0, 60121.0], [34.1, 60121.0], [34.2, 60121.0], [34.3, 60121.0], [34.4, 60121.0], [34.5, 60121.0], [34.6, 60123.0], [34.7, 60123.0], [34.8, 60123.0], [34.9, 60123.0], [35.0, 60123.0], [35.1, 60123.0], [35.2, 60123.0], [35.3, 60124.0], [35.4, 60124.0], [35.5, 60125.0], [35.6, 60125.0], [35.7, 60127.0], [35.8, 60127.0], [35.9, 60129.0], [36.0, 60129.0], [36.1, 60132.0], [36.2, 60132.0], [36.3, 60134.0], [36.4, 60134.0], [36.5, 60136.0], [36.6, 60136.0], [36.7, 60138.0], [36.8, 60138.0], [36.9, 60142.0], [37.0, 60142.0], [37.1, 60143.0], [37.2, 60143.0], [37.3, 60144.0], [37.4, 60144.0], [37.5, 60144.0], [37.6, 60145.0], [37.7, 60145.0], [37.8, 60147.0], [37.9, 60147.0], [38.0, 60147.0], [38.1, 60147.0], [38.2, 60147.0], [38.3, 60147.0], [38.4, 60156.0], [38.5, 60156.0], [38.6, 60164.0], [38.7, 60164.0], [38.8, 60186.0], [38.9, 60186.0], [39.0, 60190.0], [39.1, 60190.0], [39.2, 60198.0], [39.3, 60198.0], [39.4, 60203.0], [39.5, 60203.0], [39.6, 60203.0], [39.7, 60203.0], [39.8, 60203.0], [39.9, 60203.0], [40.0, 60203.0], [40.1, 60204.0], [40.2, 60204.0], [40.3, 60205.0], [40.4, 60205.0], [40.5, 60205.0], [40.6, 60205.0], [40.7, 60206.0], [40.8, 60206.0], [40.9, 60209.0], [41.0, 60209.0], [41.1, 60212.0], [41.2, 60212.0], [41.3, 60214.0], [41.4, 60214.0], [41.5, 60215.0], [41.6, 60215.0], [41.7, 60217.0], [41.8, 60217.0], [41.9, 60217.0], [42.0, 60217.0], [42.1, 60217.0], [42.2, 60217.0], [42.3, 60219.0], [42.4, 60219.0], [42.5, 60219.0], [42.6, 60219.0], [42.7, 60219.0], [42.8, 60219.0], [42.9, 60219.0], [43.0, 60220.0], [43.1, 60220.0], [43.2, 60220.0], [43.3, 60220.0], [43.4, 60220.0], [43.5, 60220.0], [43.6, 60221.0], [43.7, 60221.0], [43.8, 60221.0], [43.9, 60221.0], [44.0, 60221.0], [44.1, 60221.0], [44.2, 60221.0], [44.3, 60221.0], [44.4, 60222.0], [44.5, 60222.0], [44.6, 60222.0], [44.7, 60222.0], [44.8, 60223.0], [44.9, 60223.0], [45.0, 60223.0], [45.1, 60223.0], [45.2, 60223.0], [45.3, 60224.0], [45.4, 60224.0], [45.5, 60225.0], [45.6, 60225.0], [45.7, 60225.0], [45.8, 60225.0], [45.9, 60226.0], [46.0, 60226.0], [46.1, 60227.0], [46.2, 60227.0], [46.3, 60227.0], [46.4, 60227.0], [46.5, 60228.0], [46.6, 60228.0], [46.7, 60228.0], [46.8, 60228.0], [46.9, 60228.0], [47.0, 60228.0], [47.1, 60228.0], [47.2, 60228.0], [47.3, 60228.0], [47.4, 60228.0], [47.5, 60228.0], [47.6, 60230.0], [47.7, 60230.0], [47.8, 60230.0], [47.9, 60230.0], [48.0, 60230.0], [48.1, 60230.0], [48.2, 60230.0], [48.3, 60230.0], [48.4, 60231.0], [48.5, 60231.0], [48.6, 60231.0], [48.7, 60231.0], [48.8, 60232.0], [48.9, 60232.0], [49.0, 60234.0], [49.1, 60234.0], [49.2, 60234.0], [49.3, 60234.0], [49.4, 60234.0], [49.5, 60234.0], [49.6, 60234.0], [49.7, 60234.0], [49.8, 60234.0], [49.9, 60234.0], [50.0, 60234.0], [50.1, 60234.0], [50.2, 60234.0], [50.3, 60235.0], [50.4, 60235.0], [50.5, 60236.0], [50.6, 60236.0], [50.7, 60236.0], [50.8, 60236.0], [50.9, 60236.0], [51.0, 60236.0], [51.1, 60237.0], [51.2, 60237.0], [51.3, 60239.0], [51.4, 60239.0], [51.5, 60239.0], [51.6, 60239.0], [51.7, 60239.0], [51.8, 60239.0], [51.9, 60240.0], [52.0, 60240.0], [52.1, 60240.0], [52.2, 60240.0], [52.3, 60241.0], [52.4, 60241.0], [52.5, 60241.0], [52.6, 60241.0], [52.7, 60241.0], [52.8, 60241.0], [52.9, 60241.0], [53.0, 60241.0], [53.1, 60241.0], [53.2, 60241.0], [53.3, 60241.0], [53.4, 60242.0], [53.5, 60242.0], [53.6, 60242.0], [53.7, 60242.0], [53.8, 60243.0], [53.9, 60243.0], [54.0, 60243.0], [54.1, 60243.0], [54.2, 60244.0], [54.3, 60244.0], [54.4, 60244.0], [54.5, 60244.0], [54.6, 60245.0], [54.7, 60245.0], [54.8, 60245.0], [54.9, 60245.0], [55.0, 60245.0], [55.1, 60245.0], [55.2, 60245.0], [55.3, 60245.0], [55.4, 60245.0], [55.5, 60245.0], [55.6, 60245.0], [55.7, 60245.0], [55.8, 60245.0], [55.9, 60246.0], [56.0, 60246.0], [56.1, 60246.0], [56.2, 60246.0], [56.3, 60246.0], [56.4, 60246.0], [56.5, 60246.0], [56.6, 60246.0], [56.7, 60246.0], [56.8, 60246.0], [56.9, 60246.0], [57.0, 60246.0], [57.1, 60246.0], [57.2, 60246.0], [57.3, 60246.0], [57.4, 60246.0], [57.5, 60246.0], [57.6, 60246.0], [57.7, 60246.0], [57.8, 60246.0], [57.9, 60246.0], [58.0, 60247.0], [58.1, 60247.0], [58.2, 60247.0], [58.3, 60247.0], [58.4, 60247.0], [58.5, 60247.0], [58.6, 60247.0], [58.7, 60247.0], [58.8, 60247.0], [58.9, 60247.0], [59.0, 60247.0], [59.1, 60247.0], [59.2, 60248.0], [59.3, 60248.0], [59.4, 60248.0], [59.5, 60248.0], [59.6, 60248.0], [59.7, 60248.0], [59.8, 60249.0], [59.9, 60249.0], [60.0, 60249.0], [60.1, 60249.0], [60.2, 60249.0], [60.3, 60249.0], [60.4, 60249.0], [60.5, 60250.0], [60.6, 60250.0], [60.7, 60250.0], [60.8, 60250.0], [60.9, 60251.0], [61.0, 60251.0], [61.1, 60251.0], [61.2, 60251.0], [61.3, 60253.0], [61.4, 60253.0], [61.5, 60254.0], [61.6, 60254.0], [61.7, 60256.0], [61.8, 60256.0], [61.9, 60256.0], [62.0, 60256.0], [62.1, 60256.0], [62.2, 60256.0], [62.3, 60256.0], [62.4, 60256.0], [62.5, 60256.0], [62.6, 60257.0], [62.7, 60257.0], [62.8, 60258.0], [62.9, 60258.0], [63.0, 60259.0], [63.1, 60259.0], [63.2, 60259.0], [63.3, 60259.0], [63.4, 60259.0], [63.5, 60259.0], [63.6, 60259.0], [63.7, 60259.0], [63.8, 60260.0], [63.9, 60260.0], [64.0, 60260.0], [64.1, 60260.0], [64.2, 60260.0], [64.3, 60260.0], [64.4, 60261.0], [64.5, 60261.0], [64.6, 60262.0], [64.7, 60262.0], [64.8, 60262.0], [64.9, 60262.0], [65.0, 60262.0], [65.1, 60263.0], [65.2, 60263.0], [65.3, 60266.0], [65.4, 60266.0], [65.5, 60267.0], [65.6, 60267.0], [65.7, 60268.0], [65.8, 60268.0], [65.9, 60268.0], [66.0, 60268.0], [66.1, 60270.0], [66.2, 60270.0], [66.3, 60270.0], [66.4, 60270.0], [66.5, 60270.0], [66.6, 60270.0], [66.7, 60273.0], [66.8, 60273.0], [66.9, 60273.0], [67.0, 60273.0], [67.1, 60273.0], [67.2, 60273.0], [67.3, 60274.0], [67.4, 60274.0], [67.5, 60274.0], [67.6, 60277.0], [67.7, 60277.0], [67.8, 60278.0], [67.9, 60278.0], [68.0, 60279.0], [68.1, 60279.0], [68.2, 60280.0], [68.3, 60280.0], [68.4, 60280.0], [68.5, 60280.0], [68.6, 60280.0], [68.7, 60280.0], [68.8, 60284.0], [68.9, 60284.0], [69.0, 60285.0], [69.1, 60285.0], [69.2, 60286.0], [69.3, 60286.0], [69.4, 60287.0], [69.5, 60287.0], [69.6, 60288.0], [69.7, 60288.0], [69.8, 60288.0], [69.9, 60288.0], [70.0, 60288.0], [70.1, 60290.0], [70.2, 60290.0], [70.3, 60290.0], [70.4, 60290.0], [70.5, 60290.0], [70.6, 60290.0], [70.7, 60290.0], [70.8, 60290.0], [70.9, 60290.0], [71.0, 60290.0], [71.1, 60291.0], [71.2, 60291.0], [71.3, 60292.0], [71.4, 60292.0], [71.5, 60292.0], [71.6, 60292.0], [71.7, 60292.0], [71.8, 60292.0], [71.9, 60292.0], [72.0, 60292.0], [72.1, 60293.0], [72.2, 60293.0], [72.3, 60294.0], [72.4, 60294.0], [72.5, 60295.0], [72.6, 60295.0], [72.7, 60295.0], [72.8, 60295.0], [72.9, 60295.0], [73.0, 60295.0], [73.1, 60295.0], [73.2, 60298.0], [73.3, 60298.0], [73.4, 60301.0], [73.5, 60301.0], [73.6, 60302.0], [73.7, 60302.0], [73.8, 60314.0], [73.9, 60314.0], [74.0, 60316.0], [74.1, 60316.0], [74.2, 60320.0], [74.3, 60320.0], [74.4, 60322.0], [74.5, 60322.0], [74.6, 60322.0], [74.7, 60322.0], [74.8, 60322.0], [74.9, 60322.0], [75.0, 60322.0], [75.1, 60322.0], [75.2, 60322.0], [75.3, 60322.0], [75.4, 60322.0], [75.5, 60322.0], [75.6, 60322.0], [75.7, 60322.0], [75.8, 60322.0], [75.9, 60323.0], [76.0, 60323.0], [76.1, 60323.0], [76.2, 60323.0], [76.3, 60323.0], [76.4, 60323.0], [76.5, 60323.0], [76.6, 60323.0], [76.7, 60323.0], [76.8, 60323.0], [76.9, 60324.0], [77.0, 60324.0], [77.1, 60335.0], [77.2, 60335.0], [77.3, 60336.0], [77.4, 60336.0], [77.5, 60336.0], [77.6, 60336.0], [77.7, 60336.0], [77.8, 60336.0], [77.9, 60336.0], [78.0, 60336.0], [78.1, 60336.0], [78.2, 60336.0], [78.3, 60336.0], [78.4, 60336.0], [78.5, 60336.0], [78.6, 60336.0], [78.7, 60336.0], [78.8, 60337.0], [78.9, 60337.0], [79.0, 60337.0], [79.1, 60337.0], [79.2, 60337.0], [79.3, 60337.0], [79.4, 60337.0], [79.5, 60337.0], [79.6, 60337.0], [79.7, 60337.0], [79.8, 60337.0], [79.9, 60337.0], [80.0, 60338.0], [80.1, 60338.0], [80.2, 60338.0], [80.3, 60341.0], [80.4, 60341.0], [80.5, 60342.0], [80.6, 60342.0], [80.7, 60343.0], [80.8, 60343.0], [80.9, 60343.0], [81.0, 60343.0], [81.1, 60345.0], [81.2, 60345.0], [81.3, 60347.0], [81.4, 60347.0], [81.5, 60347.0], [81.6, 60347.0], [81.7, 60349.0], [81.8, 60349.0], [81.9, 60349.0], [82.0, 60349.0], [82.1, 60349.0], [82.2, 60349.0], [82.3, 60349.0], [82.4, 60349.0], [82.5, 60350.0], [82.6, 60350.0], [82.7, 60350.0], [82.8, 60350.0], [82.9, 60350.0], [83.0, 60352.0], [83.1, 60352.0], [83.2, 60352.0], [83.3, 60352.0], [83.4, 60353.0], [83.5, 60353.0], [83.6, 60353.0], [83.7, 60353.0], [83.8, 60354.0], [83.9, 60354.0], [84.0, 60354.0], [84.1, 60354.0], [84.2, 60355.0], [84.3, 60355.0], [84.4, 60355.0], [84.5, 60355.0], [84.6, 60355.0], [84.7, 60355.0], [84.8, 60356.0], [84.9, 60356.0], [85.0, 60356.0], [85.1, 60356.0], [85.2, 60356.0], [85.3, 60356.0], [85.4, 60356.0], [85.5, 60357.0], [85.6, 60357.0], [85.7, 60357.0], [85.8, 60357.0], [85.9, 60358.0], [86.0, 60358.0], [86.1, 60358.0], [86.2, 60358.0], [86.3, 60358.0], [86.4, 60358.0], [86.5, 60359.0], [86.6, 60359.0], [86.7, 60359.0], [86.8, 60359.0], [86.9, 60359.0], [87.0, 60359.0], [87.1, 60360.0], [87.2, 60360.0], [87.3, 60360.0], [87.4, 60360.0], [87.5, 60360.0], [87.6, 60360.0], [87.7, 60360.0], [87.8, 60360.0], [87.9, 60360.0], [88.0, 60360.0], [88.1, 60360.0], [88.2, 60360.0], [88.3, 60360.0], [88.4, 60361.0], [88.5, 60361.0], [88.6, 60361.0], [88.7, 60361.0], [88.8, 60362.0], [88.9, 60362.0], [89.0, 60362.0], [89.1, 60362.0], [89.2, 60362.0], [89.3, 60362.0], [89.4, 60362.0], [89.5, 60362.0], [89.6, 60362.0], [89.7, 60362.0], [89.8, 60363.0], [89.9, 60363.0], [90.0, 60363.0], [90.1, 60363.0], [90.2, 60363.0], [90.3, 60363.0], [90.4, 60363.0], [90.5, 60364.0], [90.6, 60364.0], [90.7, 60364.0], [90.8, 60364.0], [90.9, 60364.0], [91.0, 60364.0], [91.1, 60364.0], [91.2, 60364.0], [91.3, 60364.0], [91.4, 60364.0], [91.5, 60364.0], [91.6, 60364.0], [91.7, 60365.0], [91.8, 60365.0], [91.9, 60365.0], [92.0, 60365.0], [92.1, 60365.0], [92.2, 60365.0], [92.3, 60365.0], [92.4, 60365.0], [92.5, 60366.0], [92.6, 60366.0], [92.7, 60366.0], [92.8, 60366.0], [92.9, 60366.0], [93.0, 60366.0], [93.1, 60366.0], [93.2, 60366.0], [93.3, 60366.0], [93.4, 60366.0], [93.5, 60366.0], [93.6, 60367.0], [93.7, 60367.0], [93.8, 60367.0], [93.9, 60367.0], [94.0, 60367.0], [94.1, 60367.0], [94.2, 60367.0], [94.3, 60367.0], [94.4, 60367.0], [94.5, 60367.0], [94.6, 60368.0], [94.7, 60368.0], [94.8, 60368.0], [94.9, 60368.0], [95.0, 60368.0], [95.1, 60368.0], [95.2, 60368.0], [95.3, 60369.0], [95.4, 60369.0], [95.5, 60369.0], [95.6, 60369.0], [95.7, 60369.0], [95.8, 60369.0], [95.9, 60369.0], [96.0, 60369.0], [96.1, 60369.0], [96.2, 60369.0], [96.3, 60370.0], [96.4, 60370.0], [96.5, 60370.0], [96.6, 60370.0], [96.7, 60371.0], [96.8, 60371.0], [96.9, 60371.0], [97.0, 60371.0], [97.1, 60371.0], [97.2, 60371.0], [97.3, 60372.0], [97.4, 60372.0], [97.5, 60372.0], [97.6, 60372.0], [97.7, 60372.0], [97.8, 60373.0], [97.9, 60373.0], [98.0, 60373.0], [98.1, 60373.0], [98.2, 60373.0], [98.3, 60373.0], [98.4, 60374.0], [98.5, 60374.0], [98.6, 60374.0], [98.7, 60374.0], [98.8, 60375.0], [98.9, 60375.0], [99.0, 60376.0], [99.1, 60376.0], [99.2, 60376.0], [99.3, 60376.0], [99.4, 60377.0], [99.5, 60377.0], [99.6, 60378.0], [99.7, 60378.0], [99.8, 60378.0], [99.9, 60378.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 38.0], [0.1, 45.0], [0.2, 47.0], [0.3, 50.0], [0.4, 52.0], [0.5, 54.0], [0.6, 57.0], [0.7, 60.0], [0.8, 62.0], [0.9, 66.0], [1.0, 70.0], [1.1, 73.0], [1.2, 76.0], [1.3, 78.0], [1.4, 80.0], [1.5, 82.0], [1.6, 83.0], [1.7, 84.0], [1.8, 85.0], [1.9, 86.0], [2.0, 86.0], [2.1, 87.0], [2.2, 88.0], [2.3, 88.0], [2.4, 89.0], [2.5, 89.0], [2.6, 90.0], [2.7, 92.0], [2.8, 93.0], [2.9, 95.0], [3.0, 96.0], [3.1, 97.0], [3.2, 98.0], [3.3, 99.0], [3.4, 100.0], [3.5, 101.0], [3.6, 103.0], [3.7, 107.0], [3.8, 109.0], [3.9, 110.0], [4.0, 112.0], [4.1, 118.0], [4.2, 119.0], [4.3, 121.0], [4.4, 122.0], [4.5, 126.0], [4.6, 134.0], [4.7, 139.0], [4.8, 145.0], [4.9, 149.0], [5.0, 154.0], [5.1, 159.0], [5.2, 167.0], [5.3, 175.0], [5.4, 178.0], [5.5, 183.0], [5.6, 191.0], [5.7, 195.0], [5.8, 198.0], [5.9, 199.0], [6.0, 201.0], [6.1, 203.0], [6.2, 204.0], [6.3, 205.0], [6.4, 207.0], [6.5, 211.0], [6.6, 213.0], [6.7, 216.0], [6.8, 219.0], [6.9, 220.0], [7.0, 222.0], [7.1, 224.0], [7.2, 227.0], [7.3, 231.0], [7.4, 234.0], [7.5, 236.0], [7.6, 238.0], [7.7, 240.0], [7.8, 240.0], [7.9, 241.0], [8.0, 242.0], [8.1, 243.0], [8.2, 244.0], [8.3, 245.0], [8.4, 245.0], [8.5, 246.0], [8.6, 247.0], [8.7, 247.0], [8.8, 248.0], [8.9, 248.0], [9.0, 249.0], [9.1, 249.0], [9.2, 250.0], [9.3, 250.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 252.0], [9.8, 253.0], [9.9, 253.0], [10.0, 254.0], [10.1, 254.0], [10.2, 255.0], [10.3, 256.0], [10.4, 256.0], [10.5, 257.0], [10.6, 257.0], [10.7, 257.0], [10.8, 258.0], [10.9, 258.0], [11.0, 258.0], [11.1, 259.0], [11.2, 259.0], [11.3, 259.0], [11.4, 260.0], [11.5, 260.0], [11.6, 260.0], [11.7, 260.0], [11.8, 261.0], [11.9, 261.0], [12.0, 261.0], [12.1, 262.0], [12.2, 262.0], [12.3, 263.0], [12.4, 263.0], [12.5, 263.0], [12.6, 263.0], [12.7, 264.0], [12.8, 264.0], [12.9, 264.0], [13.0, 265.0], [13.1, 265.0], [13.2, 265.0], [13.3, 265.0], [13.4, 265.0], [13.5, 266.0], [13.6, 266.0], [13.7, 266.0], [13.8, 266.0], [13.9, 267.0], [14.0, 267.0], [14.1, 267.0], [14.2, 267.0], [14.3, 267.0], [14.4, 268.0], [14.5, 268.0], [14.6, 268.0], [14.7, 268.0], [14.8, 268.0], [14.9, 269.0], [15.0, 269.0], [15.1, 269.0], [15.2, 269.0], [15.3, 269.0], [15.4, 269.0], [15.5, 270.0], [15.6, 270.0], [15.7, 270.0], [15.8, 270.0], [15.9, 270.0], [16.0, 270.0], [16.1, 270.0], [16.2, 271.0], [16.3, 271.0], [16.4, 271.0], [16.5, 271.0], [16.6, 271.0], [16.7, 271.0], [16.8, 271.0], [16.9, 272.0], [17.0, 272.0], [17.1, 272.0], [17.2, 272.0], [17.3, 272.0], [17.4, 272.0], [17.5, 273.0], [17.6, 273.0], [17.7, 273.0], [17.8, 273.0], [17.9, 273.0], [18.0, 273.0], [18.1, 273.0], [18.2, 274.0], [18.3, 274.0], [18.4, 274.0], [18.5, 274.0], [18.6, 274.0], [18.7, 274.0], [18.8, 275.0], [18.9, 275.0], [19.0, 275.0], [19.1, 275.0], [19.2, 275.0], [19.3, 275.0], [19.4, 275.0], [19.5, 276.0], [19.6, 276.0], [19.7, 276.0], [19.8, 276.0], [19.9, 276.0], [20.0, 276.0], [20.1, 276.0], [20.2, 276.0], [20.3, 277.0], [20.4, 277.0], [20.5, 277.0], [20.6, 277.0], [20.7, 277.0], [20.8, 277.0], [20.9, 278.0], [21.0, 278.0], [21.1, 278.0], [21.2, 278.0], [21.3, 278.0], [21.4, 278.0], [21.5, 278.0], [21.6, 279.0], [21.7, 279.0], [21.8, 279.0], [21.9, 279.0], [22.0, 279.0], [22.1, 279.0], [22.2, 279.0], [22.3, 280.0], [22.4, 280.0], [22.5, 280.0], [22.6, 280.0], [22.7, 280.0], [22.8, 280.0], [22.9, 281.0], [23.0, 281.0], [23.1, 281.0], [23.2, 281.0], [23.3, 281.0], [23.4, 281.0], [23.5, 281.0], [23.6, 282.0], [23.7, 282.0], [23.8, 282.0], [23.9, 282.0], [24.0, 282.0], [24.1, 282.0], [24.2, 282.0], [24.3, 282.0], [24.4, 282.0], [24.5, 283.0], [24.6, 283.0], [24.7, 283.0], [24.8, 283.0], [24.9, 283.0], [25.0, 283.0], [25.1, 283.0], [25.2, 283.0], [25.3, 284.0], [25.4, 284.0], [25.5, 284.0], [25.6, 284.0], [25.7, 284.0], [25.8, 284.0], [25.9, 284.0], [26.0, 285.0], [26.1, 285.0], [26.2, 285.0], [26.3, 285.0], [26.4, 285.0], [26.5, 285.0], [26.6, 285.0], [26.7, 285.0], [26.8, 286.0], [26.9, 286.0], [27.0, 286.0], [27.1, 286.0], [27.2, 286.0], [27.3, 286.0], [27.4, 286.0], [27.5, 286.0], [27.6, 286.0], [27.7, 286.0], [27.8, 287.0], [27.9, 287.0], [28.0, 287.0], [28.1, 287.0], [28.2, 287.0], [28.3, 287.0], [28.4, 287.0], [28.5, 287.0], [28.6, 288.0], [28.7, 288.0], [28.8, 288.0], [28.9, 288.0], [29.0, 288.0], [29.1, 288.0], [29.2, 289.0], [29.3, 289.0], [29.4, 289.0], [29.5, 289.0], [29.6, 289.0], [29.7, 289.0], [29.8, 290.0], [29.9, 290.0], [30.0, 290.0], [30.1, 290.0], [30.2, 290.0], [30.3, 290.0], [30.4, 291.0], [30.5, 291.0], [30.6, 291.0], [30.7, 291.0], [30.8, 291.0], [30.9, 291.0], [31.0, 292.0], [31.1, 292.0], [31.2, 292.0], [31.3, 292.0], [31.4, 292.0], [31.5, 292.0], [31.6, 292.0], [31.7, 293.0], [31.8, 293.0], [31.9, 293.0], [32.0, 293.0], [32.1, 293.0], [32.2, 293.0], [32.3, 293.0], [32.4, 293.0], [32.5, 294.0], [32.6, 294.0], [32.7, 294.0], [32.8, 294.0], [32.9, 294.0], [33.0, 294.0], [33.1, 294.0], [33.2, 294.0], [33.3, 295.0], [33.4, 295.0], [33.5, 295.0], [33.6, 295.0], [33.7, 295.0], [33.8, 295.0], [33.9, 295.0], [34.0, 295.0], [34.1, 296.0], [34.2, 296.0], [34.3, 296.0], [34.4, 296.0], [34.5, 296.0], [34.6, 296.0], [34.7, 296.0], [34.8, 296.0], [34.9, 296.0], [35.0, 297.0], [35.1, 297.0], [35.2, 297.0], [35.3, 297.0], [35.4, 297.0], [35.5, 297.0], [35.6, 297.0], [35.7, 298.0], [35.8, 298.0], [35.9, 298.0], [36.0, 298.0], [36.1, 298.0], [36.2, 298.0], [36.3, 298.0], [36.4, 298.0], [36.5, 299.0], [36.6, 299.0], [36.7, 299.0], [36.8, 299.0], [36.9, 299.0], [37.0, 299.0], [37.1, 299.0], [37.2, 299.0], [37.3, 299.0], [37.4, 300.0], [37.5, 300.0], [37.6, 300.0], [37.7, 300.0], [37.8, 300.0], [37.9, 300.0], [38.0, 300.0], [38.1, 300.0], [38.2, 300.0], [38.3, 301.0], [38.4, 301.0], [38.5, 301.0], [38.6, 301.0], [38.7, 301.0], [38.8, 301.0], [38.9, 301.0], [39.0, 301.0], [39.1, 301.0], [39.2, 302.0], [39.3, 302.0], [39.4, 302.0], [39.5, 302.0], [39.6, 302.0], [39.7, 302.0], [39.8, 302.0], [39.9, 302.0], [40.0, 303.0], [40.1, 303.0], [40.2, 303.0], [40.3, 303.0], [40.4, 303.0], [40.5, 303.0], [40.6, 303.0], [40.7, 303.0], [40.8, 303.0], [40.9, 303.0], [41.0, 304.0], [41.1, 304.0], [41.2, 304.0], [41.3, 304.0], [41.4, 304.0], [41.5, 304.0], [41.6, 304.0], [41.7, 304.0], [41.8, 304.0], [41.9, 304.0], [42.0, 305.0], [42.1, 305.0], [42.2, 305.0], [42.3, 305.0], [42.4, 305.0], [42.5, 305.0], [42.6, 305.0], [42.7, 305.0], [42.8, 306.0], [42.9, 306.0], [43.0, 306.0], [43.1, 306.0], [43.2, 306.0], [43.3, 306.0], [43.4, 306.0], [43.5, 306.0], [43.6, 306.0], [43.7, 306.0], [43.8, 307.0], [43.9, 307.0], [44.0, 307.0], [44.1, 307.0], [44.2, 307.0], [44.3, 307.0], [44.4, 307.0], [44.5, 307.0], [44.6, 307.0], [44.7, 307.0], [44.8, 307.0], [44.9, 308.0], [45.0, 308.0], [45.1, 308.0], [45.2, 308.0], [45.3, 308.0], [45.4, 308.0], [45.5, 308.0], [45.6, 308.0], [45.7, 308.0], [45.8, 309.0], [45.9, 309.0], [46.0, 309.0], [46.1, 309.0], [46.2, 309.0], [46.3, 309.0], [46.4, 309.0], [46.5, 309.0], [46.6, 309.0], [46.7, 309.0], [46.8, 309.0], [46.9, 310.0], [47.0, 310.0], [47.1, 310.0], [47.2, 310.0], [47.3, 310.0], [47.4, 310.0], [47.5, 310.0], [47.6, 311.0], [47.7, 311.0], [47.8, 311.0], [47.9, 311.0], [48.0, 311.0], [48.1, 311.0], [48.2, 311.0], [48.3, 311.0], [48.4, 311.0], [48.5, 312.0], [48.6, 312.0], [48.7, 312.0], [48.8, 312.0], [48.9, 312.0], [49.0, 312.0], [49.1, 312.0], [49.2, 313.0], [49.3, 313.0], [49.4, 313.0], [49.5, 313.0], [49.6, 313.0], [49.7, 313.0], [49.8, 313.0], [49.9, 313.0], [50.0, 313.0], [50.1, 314.0], [50.2, 314.0], [50.3, 314.0], [50.4, 314.0], [50.5, 314.0], [50.6, 314.0], [50.7, 314.0], [50.8, 314.0], [50.9, 315.0], [51.0, 315.0], [51.1, 315.0], [51.2, 315.0], [51.3, 315.0], [51.4, 315.0], [51.5, 315.0], [51.6, 315.0], [51.7, 316.0], [51.8, 316.0], [51.9, 316.0], [52.0, 316.0], [52.1, 316.0], [52.2, 317.0], [52.3, 317.0], [52.4, 317.0], [52.5, 317.0], [52.6, 317.0], [52.7, 317.0], [52.8, 318.0], [52.9, 318.0], [53.0, 318.0], [53.1, 318.0], [53.2, 318.0], [53.3, 319.0], [53.4, 319.0], [53.5, 319.0], [53.6, 319.0], [53.7, 320.0], [53.8, 320.0], [53.9, 320.0], [54.0, 320.0], [54.1, 320.0], [54.2, 321.0], [54.3, 321.0], [54.4, 321.0], [54.5, 321.0], [54.6, 321.0], [54.7, 322.0], [54.8, 322.0], [54.9, 322.0], [55.0, 322.0], [55.1, 323.0], [55.2, 323.0], [55.3, 323.0], [55.4, 323.0], [55.5, 323.0], [55.6, 324.0], [55.7, 324.0], [55.8, 324.0], [55.9, 324.0], [56.0, 324.0], [56.1, 324.0], [56.2, 324.0], [56.3, 325.0], [56.4, 325.0], [56.5, 325.0], [56.6, 325.0], [56.7, 325.0], [56.8, 326.0], [56.9, 326.0], [57.0, 326.0], [57.1, 326.0], [57.2, 326.0], [57.3, 326.0], [57.4, 327.0], [57.5, 327.0], [57.6, 327.0], [57.7, 327.0], [57.8, 327.0], [57.9, 328.0], [58.0, 328.0], [58.1, 328.0], [58.2, 328.0], [58.3, 328.0], [58.4, 328.0], [58.5, 329.0], [58.6, 329.0], [58.7, 329.0], [58.8, 329.0], [58.9, 330.0], [59.0, 330.0], [59.1, 330.0], [59.2, 330.0], [59.3, 331.0], [59.4, 331.0], [59.5, 331.0], [59.6, 331.0], [59.7, 332.0], [59.8, 332.0], [59.9, 332.0], [60.0, 333.0], [60.1, 333.0], [60.2, 333.0], [60.3, 333.0], [60.4, 333.0], [60.5, 334.0], [60.6, 334.0], [60.7, 334.0], [60.8, 334.0], [60.9, 334.0], [61.0, 335.0], [61.1, 335.0], [61.2, 335.0], [61.3, 335.0], [61.4, 336.0], [61.5, 336.0], [61.6, 336.0], [61.7, 336.0], [61.8, 336.0], [61.9, 336.0], [62.0, 337.0], [62.1, 337.0], [62.2, 337.0], [62.3, 338.0], [62.4, 338.0], [62.5, 338.0], [62.6, 338.0], [62.7, 338.0], [62.8, 339.0], [62.9, 339.0], [63.0, 339.0], [63.1, 339.0], [63.2, 340.0], [63.3, 340.0], [63.4, 340.0], [63.5, 341.0], [63.6, 341.0], [63.7, 341.0], [63.8, 341.0], [63.9, 342.0], [64.0, 342.0], [64.1, 342.0], [64.2, 343.0], [64.3, 343.0], [64.4, 343.0], [64.5, 344.0], [64.6, 344.0], [64.7, 344.0], [64.8, 344.0], [64.9, 345.0], [65.0, 345.0], [65.1, 346.0], [65.2, 346.0], [65.3, 346.0], [65.4, 346.0], [65.5, 347.0], [65.6, 347.0], [65.7, 348.0], [65.8, 349.0], [65.9, 349.0], [66.0, 349.0], [66.1, 350.0], [66.2, 351.0], [66.3, 351.0], [66.4, 352.0], [66.5, 352.0], [66.6, 352.0], [66.7, 353.0], [66.8, 353.0], [66.9, 353.0], [67.0, 354.0], [67.1, 354.0], [67.2, 354.0], [67.3, 355.0], [67.4, 355.0], [67.5, 356.0], [67.6, 356.0], [67.7, 357.0], [67.8, 357.0], [67.9, 358.0], [68.0, 358.0], [68.1, 358.0], [68.2, 359.0], [68.3, 360.0], [68.4, 360.0], [68.5, 360.0], [68.6, 361.0], [68.7, 361.0], [68.8, 362.0], [68.9, 363.0], [69.0, 363.0], [69.1, 364.0], [69.2, 364.0], [69.3, 365.0], [69.4, 365.0], [69.5, 366.0], [69.6, 366.0], [69.7, 367.0], [69.8, 367.0], [69.9, 368.0], [70.0, 369.0], [70.1, 370.0], [70.2, 370.0], [70.3, 371.0], [70.4, 372.0], [70.5, 372.0], [70.6, 373.0], [70.7, 375.0], [70.8, 375.0], [70.9, 376.0], [71.0, 377.0], [71.1, 379.0], [71.2, 381.0], [71.3, 382.0], [71.4, 382.0], [71.5, 383.0], [71.6, 384.0], [71.7, 384.0], [71.8, 385.0], [71.9, 385.0], [72.0, 385.0], [72.1, 386.0], [72.2, 386.0], [72.3, 387.0], [72.4, 387.0], [72.5, 388.0], [72.6, 389.0], [72.7, 389.0], [72.8, 390.0], [72.9, 390.0], [73.0, 391.0], [73.1, 392.0], [73.2, 392.0], [73.3, 393.0], [73.4, 394.0], [73.5, 394.0], [73.6, 395.0], [73.7, 395.0], [73.8, 396.0], [73.9, 397.0], [74.0, 398.0], [74.1, 398.0], [74.2, 399.0], [74.3, 400.0], [74.4, 400.0], [74.5, 401.0], [74.6, 402.0], [74.7, 403.0], [74.8, 403.0], [74.9, 404.0], [75.0, 404.0], [75.1, 405.0], [75.2, 406.0], [75.3, 406.0], [75.4, 408.0], [75.5, 408.0], [75.6, 409.0], [75.7, 409.0], [75.8, 410.0], [75.9, 411.0], [76.0, 411.0], [76.1, 412.0], [76.2, 413.0], [76.3, 414.0], [76.4, 415.0], [76.5, 415.0], [76.6, 416.0], [76.7, 416.0], [76.8, 417.0], [76.9, 418.0], [77.0, 419.0], [77.1, 420.0], [77.2, 422.0], [77.3, 426.0], [77.4, 428.0], [77.5, 430.0], [77.6, 432.0], [77.7, 433.0], [77.8, 435.0], [77.9, 438.0], [78.0, 441.0], [78.1, 444.0], [78.2, 449.0], [78.3, 451.0], [78.4, 454.0], [78.5, 455.0], [78.6, 456.0], [78.7, 460.0], [78.8, 462.0], [78.9, 464.0], [79.0, 465.0], [79.1, 468.0], [79.2, 471.0], [79.3, 473.0], [79.4, 475.0], [79.5, 482.0], [79.6, 485.0], [79.7, 488.0], [79.8, 490.0], [79.9, 497.0], [80.0, 502.0], [80.1, 504.0], [80.2, 509.0], [80.3, 513.0], [80.4, 517.0], [80.5, 520.0], [80.6, 523.0], [80.7, 525.0], [80.8, 527.0], [80.9, 531.0], [81.0, 539.0], [81.1, 551.0], [81.2, 562.0], [81.3, 566.0], [81.4, 618.0], [81.5, 684.0], [81.6, 689.0], [81.7, 708.0], [81.8, 1041.0], [81.9, 1108.0], [82.0, 1117.0], [82.1, 1129.0], [82.2, 1148.0], [82.3, 1156.0], [82.4, 1162.0], [82.5, 1174.0], [82.6, 1196.0], [82.7, 1204.0], [82.8, 1209.0], [82.9, 1215.0], [83.0, 1230.0], [83.1, 1246.0], [83.2, 1256.0], [83.3, 1260.0], [83.4, 1262.0], [83.5, 1265.0], [83.6, 1268.0], [83.7, 1270.0], [83.8, 1272.0], [83.9, 1273.0], [84.0, 1274.0], [84.1, 1275.0], [84.2, 1276.0], [84.3, 1277.0], [84.4, 1279.0], [84.5, 1280.0], [84.6, 1282.0], [84.7, 1283.0], [84.8, 1284.0], [84.9, 1285.0], [85.0, 1286.0], [85.1, 1287.0], [85.2, 1288.0], [85.3, 1289.0], [85.4, 1290.0], [85.5, 1291.0], [85.6, 1293.0], [85.7, 1293.0], [85.8, 1294.0], [85.9, 1295.0], [86.0, 1296.0], [86.1, 1298.0], [86.2, 1298.0], [86.3, 1301.0], [86.4, 1302.0], [86.5, 1303.0], [86.6, 1304.0], [86.7, 1306.0], [86.8, 1307.0], [86.9, 1308.0], [87.0, 1310.0], [87.1, 1311.0], [87.2, 1312.0], [87.3, 1313.0], [87.4, 1315.0], [87.5, 1316.0], [87.6, 1317.0], [87.7, 1319.0], [87.8, 1320.0], [87.9, 1322.0], [88.0, 1324.0], [88.1, 1325.0], [88.2, 1328.0], [88.3, 1331.0], [88.4, 1335.0], [88.5, 1338.0], [88.6, 1341.0], [88.7, 1346.0], [88.8, 1350.0], [88.9, 1356.0], [89.0, 1361.0], [89.1, 1372.0], [89.2, 1381.0], [89.3, 1387.0], [89.4, 1397.0], [89.5, 1404.0], [89.6, 1410.0], [89.7, 1418.0], [89.8, 1427.0], [89.9, 1435.0], [90.0, 1457.0], [90.1, 1481.0], [90.2, 1524.0], [90.3, 2243.0], [90.4, 3194.0], [90.5, 3266.0], [90.6, 3285.0], [90.7, 3293.0], [90.8, 3301.0], [90.9, 3306.0], [91.0, 3311.0], [91.1, 3320.0], [91.2, 3332.0], [91.3, 3345.0], [91.4, 3392.0], [91.5, 3458.0], [91.6, 7283.0], [91.7, 7351.0], [91.8, 21018.0], [91.9, 21021.0], [92.0, 21022.0], [92.1, 21023.0], [92.2, 21024.0], [92.3, 21025.0], [92.4, 21026.0], [92.5, 21027.0], [92.6, 21028.0], [92.7, 21028.0], [92.8, 21029.0], [92.9, 21030.0], [93.0, 21030.0], [93.1, 21030.0], [93.2, 21031.0], [93.3, 21031.0], [93.4, 21032.0], [93.5, 21032.0], [93.6, 21033.0], [93.7, 21033.0], [93.8, 21034.0], [93.9, 21034.0], [94.0, 21035.0], [94.1, 21035.0], [94.2, 21036.0], [94.3, 21036.0], [94.4, 21036.0], [94.5, 21037.0], [94.6, 21037.0], [94.7, 21038.0], [94.8, 21038.0], [94.9, 21039.0], [95.0, 21039.0], [95.1, 21040.0], [95.2, 21040.0], [95.3, 21040.0], [95.4, 21040.0], [95.5, 21041.0], [95.6, 21041.0], [95.7, 21042.0], [95.8, 21042.0], [95.9, 21043.0], [96.0, 21044.0], [96.1, 21044.0], [96.2, 21045.0], [96.3, 21045.0], [96.4, 21046.0], [96.5, 21047.0], [96.6, 21047.0], [96.7, 21047.0], [96.8, 21048.0], [96.9, 21049.0], [97.0, 21050.0], [97.1, 21050.0], [97.2, 21050.0], [97.3, 21051.0], [97.4, 21052.0], [97.5, 21052.0], [97.6, 21052.0], [97.7, 21053.0], [97.8, 21053.0], [97.9, 21054.0], [98.0, 21054.0], [98.1, 21054.0], [98.2, 21055.0], [98.3, 21055.0], [98.4, 21055.0], [98.5, 21056.0], [98.6, 21056.0], [98.7, 21057.0], [98.8, 21057.0], [98.9, 21058.0], [99.0, 21059.0], [99.1, 21060.0], [99.2, 21061.0], [99.3, 21062.0], [99.4, 21063.0], [99.5, 21064.0], [99.6, 21066.0], [99.7, 21068.0], [99.8, 21071.0], [99.9, 21076.0], [100.0, 21098.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 10025.0], [0.1, 10025.0], [0.2, 10025.0], [0.3, 10026.0], [0.4, 10026.0], [0.5, 10027.0], [0.6, 10027.0], [0.7, 10027.0], [0.8, 10027.0], [0.9, 10027.0], [1.0, 10027.0], [1.1, 10027.0], [1.2, 10027.0], [1.3, 10027.0], [1.4, 10027.0], [1.5, 10027.0], [1.6, 10027.0], [1.7, 10027.0], [1.8, 10027.0], [1.9, 10027.0], [2.0, 10027.0], [2.1, 10027.0], [2.2, 10027.0], [2.3, 10027.0], [2.4, 10027.0], [2.5, 10027.0], [2.6, 10027.0], [2.7, 10027.0], [2.8, 10027.0], [2.9, 10027.0], [3.0, 10027.0], [3.1, 10027.0], [3.2, 10027.0], [3.3, 10027.0], [3.4, 10027.0], [3.5, 10027.0], [3.6, 10027.0], [3.7, 10027.0], [3.8, 10027.0], [3.9, 10027.0], [4.0, 10027.0], [4.1, 10027.0], [4.2, 10027.0], [4.3, 10027.0], [4.4, 10027.0], [4.5, 10027.0], [4.6, 10027.0], [4.7, 10027.0], [4.8, 10028.0], [4.9, 10028.0], [5.0, 10028.0], [5.1, 10028.0], [5.2, 10028.0], [5.3, 10028.0], [5.4, 10028.0], [5.5, 10028.0], [5.6, 10028.0], [5.7, 10028.0], [5.8, 10028.0], [5.9, 10028.0], [6.0, 10028.0], [6.1, 10028.0], [6.2, 10028.0], [6.3, 10028.0], [6.4, 10028.0], [6.5, 10028.0], [6.6, 10028.0], [6.7, 10028.0], [6.8, 10028.0], [6.9, 10028.0], [7.0, 10028.0], [7.1, 10028.0], [7.2, 10028.0], [7.3, 10028.0], [7.4, 10028.0], [7.5, 10028.0], [7.6, 10028.0], [7.7, 10028.0], [7.8, 10028.0], [7.9, 10028.0], [8.0, 10028.0], [8.1, 10028.0], [8.2, 10028.0], [8.3, 10028.0], [8.4, 10028.0], [8.5, 10028.0], [8.6, 10028.0], [8.7, 10028.0], [8.8, 10028.0], [8.9, 10028.0], [9.0, 10028.0], [9.1, 10028.0], [9.2, 10028.0], [9.3, 10028.0], [9.4, 10028.0], [9.5, 10028.0], [9.6, 10028.0], [9.7, 10028.0], [9.8, 10028.0], [9.9, 10028.0], [10.0, 10029.0], [10.1, 10029.0], [10.2, 10029.0], [10.3, 10029.0], [10.4, 10029.0], [10.5, 10029.0], [10.6, 10029.0], [10.7, 10029.0], [10.8, 10029.0], [10.9, 10029.0], [11.0, 10029.0], [11.1, 10029.0], [11.2, 10029.0], [11.3, 10029.0], [11.4, 10029.0], [11.5, 10029.0], [11.6, 10029.0], [11.7, 10029.0], [11.8, 10029.0], [11.9, 10030.0], [12.0, 10030.0], [12.1, 10030.0], [12.2, 10030.0], [12.3, 10030.0], [12.4, 10030.0], [12.5, 10030.0], [12.6, 10030.0], [12.7, 10030.0], [12.8, 10030.0], [12.9, 10030.0], [13.0, 10030.0], [13.1, 10030.0], [13.2, 10030.0], [13.3, 10030.0], [13.4, 10030.0], [13.5, 10030.0], [13.6, 10031.0], [13.7, 10031.0], [13.8, 10031.0], [13.9, 10031.0], [14.0, 10031.0], [14.1, 10031.0], [14.2, 10031.0], [14.3, 10031.0], [14.4, 10031.0], [14.5, 10031.0], [14.6, 10031.0], [14.7, 10031.0], [14.8, 10031.0], [14.9, 10031.0], [15.0, 10032.0], [15.1, 10032.0], [15.2, 10032.0], [15.3, 10032.0], [15.4, 10032.0], [15.5, 10032.0], [15.6, 10032.0], [15.7, 10033.0], [15.8, 10033.0], [15.9, 10033.0], [16.0, 10033.0], [16.1, 10033.0], [16.2, 10033.0], [16.3, 10033.0], [16.4, 10033.0], [16.5, 10034.0], [16.6, 10034.0], [16.7, 10034.0], [16.8, 10034.0], [16.9, 10034.0], [17.0, 10034.0], [17.1, 10035.0], [17.2, 10035.0], [17.3, 10035.0], [17.4, 10035.0], [17.5, 10036.0], [17.6, 10036.0], [17.7, 10036.0], [17.8, 10036.0], [17.9, 10036.0], [18.0, 10037.0], [18.1, 10037.0], [18.2, 10037.0], [18.3, 10037.0], [18.4, 10037.0], [18.5, 10037.0], [18.6, 10037.0], [18.7, 10037.0], [18.8, 10037.0], [18.9, 10037.0], [19.0, 10038.0], [19.1, 10038.0], [19.2, 10038.0], [19.3, 10038.0], [19.4, 10039.0], [19.5, 10039.0], [19.6, 10039.0], [19.7, 10039.0], [19.8, 10039.0], [19.9, 10039.0], [20.0, 10039.0], [20.1, 10039.0], [20.2, 10039.0], [20.3, 10040.0], [20.4, 10040.0], [20.5, 10040.0], [20.6, 10040.0], [20.7, 10041.0], [20.8, 10041.0], [20.9, 10041.0], [21.0, 10041.0], [21.1, 10041.0], [21.2, 10041.0], [21.3, 10042.0], [21.4, 10042.0], [21.5, 10042.0], [21.6, 10042.0], [21.7, 10042.0], [21.8, 10042.0], [21.9, 10043.0], [22.0, 10043.0], [22.1, 10044.0], [22.2, 10044.0], [22.3, 10044.0], [22.4, 10044.0], [22.5, 10044.0], [22.6, 10044.0], [22.7, 10044.0], [22.8, 10046.0], [22.9, 10046.0], [23.0, 10046.0], [23.1, 10046.0], [23.2, 10046.0], [23.3, 10046.0], [23.4, 10046.0], [23.5, 10046.0], [23.6, 10047.0], [23.7, 10047.0], [23.8, 10048.0], [23.9, 10048.0], [24.0, 10048.0], [24.1, 10048.0], [24.2, 10049.0], [24.3, 10049.0], [24.4, 10049.0], [24.5, 10049.0], [24.6, 10050.0], [24.7, 10050.0], [24.8, 10050.0], [24.9, 10050.0], [25.0, 10050.0], [25.1, 10051.0], [25.2, 10051.0], [25.3, 10053.0], [25.4, 10053.0], [25.5, 10053.0], [25.6, 10053.0], [25.7, 10055.0], [25.8, 10055.0], [25.9, 10056.0], [26.0, 10056.0], [26.1, 10057.0], [26.2, 10057.0], [26.3, 10058.0], [26.4, 10058.0], [26.5, 10058.0], [26.6, 10058.0], [26.7, 10060.0], [26.8, 10060.0], [26.9, 10061.0], [27.0, 10061.0], [27.1, 10061.0], [27.2, 10061.0], [27.3, 10062.0], [27.4, 10062.0], [27.5, 10063.0], [27.6, 10063.0], [27.7, 10063.0], [27.8, 10063.0], [27.9, 10063.0], [28.0, 10064.0], [28.1, 10064.0], [28.2, 10066.0], [28.3, 10066.0], [28.4, 10066.0], [28.5, 10066.0], [28.6, 10067.0], [28.7, 10067.0], [28.8, 10067.0], [28.9, 10067.0], [29.0, 10067.0], [29.1, 10067.0], [29.2, 10068.0], [29.3, 10068.0], [29.4, 10069.0], [29.5, 10069.0], [29.6, 10069.0], [29.7, 10069.0], [29.8, 10070.0], [29.9, 10070.0], [30.0, 10070.0], [30.1, 10070.0], [30.2, 10070.0], [30.3, 10071.0], [30.4, 10071.0], [30.5, 10072.0], [30.6, 10072.0], [30.7, 10072.0], [30.8, 10072.0], [30.9, 10073.0], [31.0, 10073.0], [31.1, 10074.0], [31.2, 10074.0], [31.3, 10074.0], [31.4, 10074.0], [31.5, 10076.0], [31.6, 10076.0], [31.7, 10077.0], [31.8, 10077.0], [31.9, 10077.0], [32.0, 10077.0], [32.1, 10079.0], [32.2, 10079.0], [32.3, 10080.0], [32.4, 10080.0], [32.5, 10080.0], [32.6, 10080.0], [32.7, 10080.0], [32.8, 10080.0], [32.9, 10080.0], [33.0, 10081.0], [33.1, 10081.0], [33.2, 10081.0], [33.3, 10081.0], [33.4, 10081.0], [33.5, 10081.0], [33.6, 10083.0], [33.7, 10083.0], [33.8, 10084.0], [33.9, 10084.0], [34.0, 10084.0], [34.1, 10084.0], [34.2, 10084.0], [34.3, 10084.0], [34.4, 10084.0], [34.5, 10084.0], [34.6, 10084.0], [34.7, 10084.0], [34.8, 10085.0], [34.9, 10085.0], [35.0, 10085.0], [35.1, 10085.0], [35.2, 10085.0], [35.3, 10085.0], [35.4, 10085.0], [35.5, 10085.0], [35.6, 10085.0], [35.7, 10085.0], [35.8, 10085.0], [35.9, 10085.0], [36.0, 10085.0], [36.1, 10086.0], [36.2, 10086.0], [36.3, 10086.0], [36.4, 10086.0], [36.5, 10086.0], [36.6, 10086.0], [36.7, 10086.0], [36.8, 10086.0], [36.9, 10086.0], [37.0, 10086.0], [37.1, 10086.0], [37.2, 10086.0], [37.3, 10086.0], [37.4, 10086.0], [37.5, 10086.0], [37.6, 10087.0], [37.7, 10087.0], [37.8, 10087.0], [37.9, 10087.0], [38.0, 10087.0], [38.1, 10087.0], [38.2, 10087.0], [38.3, 10087.0], [38.4, 10087.0], [38.5, 10087.0], [38.6, 10087.0], [38.7, 10087.0], [38.8, 10088.0], [38.9, 10088.0], [39.0, 10088.0], [39.1, 10088.0], [39.2, 10088.0], [39.3, 10088.0], [39.4, 10088.0], [39.5, 10088.0], [39.6, 10088.0], [39.7, 10088.0], [39.8, 10089.0], [39.9, 10089.0], [40.0, 10089.0], [40.1, 10089.0], [40.2, 10089.0], [40.3, 10089.0], [40.4, 10089.0], [40.5, 10089.0], [40.6, 10089.0], [40.7, 10089.0], [40.8, 10089.0], [40.9, 10090.0], [41.0, 10090.0], [41.1, 10090.0], [41.2, 10090.0], [41.3, 10092.0], [41.4, 10092.0], [41.5, 10093.0], [41.6, 10093.0], [41.7, 10093.0], [41.8, 10093.0], [41.9, 10094.0], [42.0, 10094.0], [42.1, 10095.0], [42.2, 10095.0], [42.3, 10097.0], [42.4, 10097.0], [42.5, 10097.0], [42.6, 10099.0], [42.7, 10099.0], [42.8, 10099.0], [42.9, 10099.0], [43.0, 10101.0], [43.1, 10101.0], [43.2, 10105.0], [43.3, 10105.0], [43.4, 10110.0], [43.5, 10110.0], [43.6, 10114.0], [43.7, 10114.0], [43.8, 10115.0], [43.9, 10115.0], [44.0, 10116.0], [44.1, 10116.0], [44.2, 10118.0], [44.3, 10118.0], [44.4, 10119.0], [44.5, 10119.0], [44.6, 10119.0], [44.7, 10119.0], [44.8, 10127.0], [44.9, 10127.0], [45.0, 10127.0], [45.1, 10130.0], [45.2, 10130.0], [45.3, 10131.0], [45.4, 10131.0], [45.5, 10131.0], [45.6, 10131.0], [45.7, 10135.0], [45.8, 10135.0], [45.9, 10135.0], [46.0, 10135.0], [46.1, 10135.0], [46.2, 10135.0], [46.3, 10136.0], [46.4, 10136.0], [46.5, 10139.0], [46.6, 10139.0], [46.7, 10143.0], [46.8, 10143.0], [46.9, 10143.0], [47.0, 10143.0], [47.1, 10148.0], [47.2, 10148.0], [47.3, 10150.0], [47.4, 10150.0], [47.5, 10150.0], [47.6, 10152.0], [47.7, 10152.0], [47.8, 10155.0], [47.9, 10155.0], [48.0, 10155.0], [48.1, 10155.0], [48.2, 10155.0], [48.3, 10155.0], [48.4, 10157.0], [48.5, 10157.0], [48.6, 10159.0], [48.7, 10159.0], [48.8, 10161.0], [48.9, 10161.0], [49.0, 10162.0], [49.1, 10162.0], [49.2, 10163.0], [49.3, 10163.0], [49.4, 10166.0], [49.5, 10166.0], [49.6, 10169.0], [49.7, 10169.0], [49.8, 10172.0], [49.9, 10172.0], [50.0, 10172.0], [50.1, 10173.0], [50.2, 10173.0], [50.3, 10173.0], [50.4, 10173.0], [50.5, 10175.0], [50.6, 10175.0], [50.7, 10178.0], [50.8, 10178.0], [50.9, 10180.0], [51.0, 10180.0], [51.1, 10183.0], [51.2, 10183.0], [51.3, 10183.0], [51.4, 10183.0], [51.5, 10185.0], [51.6, 10185.0], [51.7, 10186.0], [51.8, 10186.0], [51.9, 10187.0], [52.0, 10187.0], [52.1, 10190.0], [52.2, 10190.0], [52.3, 10191.0], [52.4, 10191.0], [52.5, 10191.0], [52.6, 10193.0], [52.7, 10193.0], [52.8, 10194.0], [52.9, 10194.0], [53.0, 10199.0], [53.1, 10199.0], [53.2, 10202.0], [53.3, 10202.0], [53.4, 10204.0], [53.5, 10204.0], [53.6, 10208.0], [53.7, 10208.0], [53.8, 10208.0], [53.9, 10208.0], [54.0, 10210.0], [54.1, 10210.0], [54.2, 10210.0], [54.3, 10210.0], [54.4, 10210.0], [54.5, 10210.0], [54.6, 10212.0], [54.7, 10212.0], [54.8, 10214.0], [54.9, 10214.0], [55.0, 10214.0], [55.1, 10221.0], [55.2, 10221.0], [55.3, 10221.0], [55.4, 10221.0], [55.5, 10222.0], [55.6, 10222.0], [55.7, 10226.0], [55.8, 10226.0], [55.9, 10227.0], [56.0, 10227.0], [56.1, 10228.0], [56.2, 10228.0], [56.3, 10230.0], [56.4, 10230.0], [56.5, 10232.0], [56.6, 10232.0], [56.7, 10236.0], [56.8, 10236.0], [56.9, 10239.0], [57.0, 10239.0], [57.1, 10242.0], [57.2, 10242.0], [57.3, 10242.0], [57.4, 10242.0], [57.5, 10242.0], [57.6, 10243.0], [57.7, 10243.0], [57.8, 10244.0], [57.9, 10244.0], [58.0, 10244.0], [58.1, 10244.0], [58.2, 10249.0], [58.3, 10249.0], [58.4, 10251.0], [58.5, 10251.0], [58.6, 10255.0], [58.7, 10255.0], [58.8, 10257.0], [58.9, 10257.0], [59.0, 10258.0], [59.1, 10258.0], [59.2, 10259.0], [59.3, 10259.0], [59.4, 10263.0], [59.5, 10263.0], [59.6, 10263.0], [59.7, 10263.0], [59.8, 10263.0], [59.9, 10263.0], [60.0, 10263.0], [60.1, 10266.0], [60.2, 10266.0], [60.3, 10267.0], [60.4, 10267.0], [60.5, 10270.0], [60.6, 10270.0], [60.7, 10270.0], [60.8, 10270.0], [60.9, 10274.0], [61.0, 10274.0], [61.1, 10275.0], [61.2, 10275.0], [61.3, 10279.0], [61.4, 10279.0], [61.5, 10281.0], [61.6, 10281.0], [61.7, 10281.0], [61.8, 10281.0], [61.9, 10285.0], [62.0, 10285.0], [62.1, 10285.0], [62.2, 10285.0], [62.3, 10287.0], [62.4, 10287.0], [62.5, 10287.0], [62.6, 10289.0], [62.7, 10289.0], [62.8, 10289.0], [62.9, 10289.0], [63.0, 10292.0], [63.1, 10292.0], [63.2, 10295.0], [63.3, 10295.0], [63.4, 10298.0], [63.5, 10298.0], [63.6, 10299.0], [63.7, 10299.0], [63.8, 10305.0], [63.9, 10305.0], [64.0, 10307.0], [64.1, 10307.0], [64.2, 10308.0], [64.3, 10308.0], [64.4, 10310.0], [64.5, 10310.0], [64.6, 10311.0], [64.7, 10311.0], [64.8, 10314.0], [64.9, 10314.0], [65.0, 10314.0], [65.1, 10316.0], [65.2, 10316.0], [65.3, 10316.0], [65.4, 10316.0], [65.5, 10321.0], [65.6, 10321.0], [65.7, 10322.0], [65.8, 10322.0], [65.9, 10324.0], [66.0, 10324.0], [66.1, 10326.0], [66.2, 10326.0], [66.3, 10327.0], [66.4, 10327.0], [66.5, 10332.0], [66.6, 10332.0], [66.7, 10334.0], [66.8, 10334.0], [66.9, 10335.0], [67.0, 10335.0], [67.1, 10335.0], [67.2, 10335.0], [67.3, 10338.0], [67.4, 10338.0], [67.5, 10338.0], [67.6, 10340.0], [67.7, 10340.0], [67.8, 10340.0], [67.9, 10340.0], [68.0, 10341.0], [68.1, 10341.0], [68.2, 10341.0], [68.3, 10341.0], [68.4, 10343.0], [68.5, 10343.0], [68.6, 10345.0], [68.7, 10345.0], [68.8, 10351.0], [68.9, 10351.0], [69.0, 10352.0], [69.1, 10352.0], [69.2, 10353.0], [69.3, 10353.0], [69.4, 10357.0], [69.5, 10357.0], [69.6, 10361.0], [69.7, 10361.0], [69.8, 10366.0], [69.9, 10366.0], [70.0, 10366.0], [70.1, 10367.0], [70.2, 10367.0], [70.3, 10367.0], [70.4, 10367.0], [70.5, 10368.0], [70.6, 10368.0], [70.7, 10369.0], [70.8, 10369.0], [70.9, 10372.0], [71.0, 10372.0], [71.1, 10378.0], [71.2, 10378.0], [71.3, 10380.0], [71.4, 10380.0], [71.5, 10382.0], [71.6, 10382.0], [71.7, 10383.0], [71.8, 10383.0], [71.9, 10385.0], [72.0, 10385.0], [72.1, 10387.0], [72.2, 10387.0], [72.3, 10387.0], [72.4, 10387.0], [72.5, 10387.0], [72.6, 10387.0], [72.7, 10387.0], [72.8, 10389.0], [72.9, 10389.0], [73.0, 10390.0], [73.1, 10390.0], [73.2, 10394.0], [73.3, 10394.0], [73.4, 10395.0], [73.5, 10395.0], [73.6, 10398.0], [73.7, 10398.0], [73.8, 10400.0], [73.9, 10400.0], [74.0, 10405.0], [74.1, 10405.0], [74.2, 10407.0], [74.3, 10407.0], [74.4, 10408.0], [74.5, 10408.0], [74.6, 10409.0], [74.7, 10409.0], [74.8, 10411.0], [74.9, 10411.0], [75.0, 10413.0], [75.1, 10413.0], [75.2, 10413.0], [75.3, 10415.0], [75.4, 10415.0], [75.5, 10417.0], [75.6, 10417.0], [75.7, 10421.0], [75.8, 10421.0], [75.9, 10421.0], [76.0, 10421.0], [76.1, 10422.0], [76.2, 10422.0], [76.3, 10423.0], [76.4, 10423.0], [76.5, 10425.0], [76.6, 10425.0], [76.7, 10426.0], [76.8, 10426.0], [76.9, 10431.0], [77.0, 10431.0], [77.1, 10431.0], [77.2, 10431.0], [77.3, 10433.0], [77.4, 10433.0], [77.5, 10435.0], [77.6, 10435.0], [77.7, 10435.0], [77.8, 10436.0], [77.9, 10436.0], [78.0, 10438.0], [78.1, 10438.0], [78.2, 10441.0], [78.3, 10441.0], [78.4, 10446.0], [78.5, 10446.0], [78.6, 10449.0], [78.7, 10449.0], [78.8, 10451.0], [78.9, 10451.0], [79.0, 10451.0], [79.1, 10451.0], [79.2, 10453.0], [79.3, 10453.0], [79.4, 10454.0], [79.5, 10454.0], [79.6, 10455.0], [79.7, 10455.0], [79.8, 10460.0], [79.9, 10460.0], [80.0, 10460.0], [80.1, 10460.0], [80.2, 10460.0], [80.3, 10463.0], [80.4, 10463.0], [80.5, 10463.0], [80.6, 10463.0], [80.7, 10463.0], [80.8, 10463.0], [80.9, 10469.0], [81.0, 10469.0], [81.1, 10471.0], [81.2, 10471.0], [81.3, 10472.0], [81.4, 10472.0], [81.5, 10474.0], [81.6, 10474.0], [81.7, 10474.0], [81.8, 10474.0], [81.9, 10480.0], [82.0, 10480.0], [82.1, 10481.0], [82.2, 10481.0], [82.3, 10482.0], [82.4, 10482.0], [82.5, 10484.0], [82.6, 10484.0], [82.7, 10484.0], [82.8, 10485.0], [82.9, 10485.0], [83.0, 10487.0], [83.1, 10487.0], [83.2, 10488.0], [83.3, 10488.0], [83.4, 10488.0], [83.5, 10488.0], [83.6, 10499.0], [83.7, 10499.0], [83.8, 10502.0], [83.9, 10502.0], [84.0, 10503.0], [84.1, 10503.0], [84.2, 10504.0], [84.3, 10504.0], [84.4, 10504.0], [84.5, 10504.0], [84.6, 10506.0], [84.7, 10506.0], [84.8, 10507.0], [84.9, 10507.0], [85.0, 10508.0], [85.1, 10508.0], [85.2, 10508.0], [85.3, 10508.0], [85.4, 10508.0], [85.5, 10509.0], [85.6, 10509.0], [85.7, 10514.0], [85.8, 10514.0], [85.9, 10514.0], [86.0, 10514.0], [86.1, 10519.0], [86.2, 10519.0], [86.3, 10521.0], [86.4, 10521.0], [86.5, 10523.0], [86.6, 10523.0], [86.7, 10524.0], [86.8, 10524.0], [86.9, 10526.0], [87.0, 10526.0], [87.1, 10528.0], [87.2, 10528.0], [87.3, 10528.0], [87.4, 10528.0], [87.5, 10529.0], [87.6, 10529.0], [87.7, 10529.0], [87.8, 10532.0], [87.9, 10532.0], [88.0, 10536.0], [88.1, 10536.0], [88.2, 10540.0], [88.3, 10540.0], [88.4, 10543.0], [88.5, 10543.0], [88.6, 10543.0], [88.7, 10543.0], [88.8, 10547.0], [88.9, 10547.0], [89.0, 10549.0], [89.1, 10549.0], [89.2, 10550.0], [89.3, 10550.0], [89.4, 10550.0], [89.5, 10550.0], [89.6, 10554.0], [89.7, 10554.0], [89.8, 10556.0], [89.9, 10556.0], [90.0, 10556.0], [90.1, 10556.0], [90.2, 10556.0], [90.3, 10559.0], [90.4, 10559.0], [90.5, 10560.0], [90.6, 10560.0], [90.7, 10560.0], [90.8, 10560.0], [90.9, 10564.0], [91.0, 10564.0], [91.1, 10567.0], [91.2, 10567.0], [91.3, 10572.0], [91.4, 10572.0], [91.5, 10573.0], [91.6, 10573.0], [91.7, 10575.0], [91.8, 10575.0], [91.9, 10575.0], [92.0, 10575.0], [92.1, 10577.0], [92.2, 10577.0], [92.3, 10579.0], [92.4, 10579.0], [92.5, 10580.0], [92.6, 10580.0], [92.7, 10580.0], [92.8, 10580.0], [92.9, 10580.0], [93.0, 10584.0], [93.1, 10584.0], [93.2, 10587.0], [93.3, 10587.0], [93.4, 10588.0], [93.5, 10588.0], [93.6, 10588.0], [93.7, 10588.0], [93.8, 10590.0], [93.9, 10590.0], [94.0, 10593.0], [94.1, 10593.0], [94.2, 10594.0], [94.3, 10594.0], [94.4, 10599.0], [94.5, 10599.0], [94.6, 10601.0], [94.7, 10601.0], [94.8, 10603.0], [94.9, 10603.0], [95.0, 10606.0], [95.1, 10606.0], [95.2, 10606.0], [95.3, 10607.0], [95.4, 10607.0], [95.5, 10609.0], [95.6, 10609.0], [95.7, 10611.0], [95.8, 10611.0], [95.9, 10614.0], [96.0, 10614.0], [96.1, 10615.0], [96.2, 10615.0], [96.3, 10617.0], [96.4, 10617.0], [96.5, 10617.0], [96.6, 10617.0], [96.7, 10618.0], [96.8, 10618.0], [96.9, 10619.0], [97.0, 10619.0], [97.1, 10619.0], [97.2, 10619.0], [97.3, 10625.0], [97.4, 10625.0], [97.5, 10627.0], [97.6, 10627.0], [97.7, 10627.0], [97.8, 10628.0], [97.9, 10628.0], [98.0, 10629.0], [98.1, 10629.0], [98.2, 10633.0], [98.3, 10633.0], [98.4, 10633.0], [98.5, 10633.0], [98.6, 10635.0], [98.7, 10635.0], [98.8, 10636.0], [98.9, 10636.0], [99.0, 10637.0], [99.1, 10637.0], [99.2, 10638.0], [99.3, 10638.0], [99.4, 10641.0], [99.5, 10641.0], [99.6, 10641.0], [99.7, 10641.0], [99.8, 10642.0], [99.9, 10642.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8597.0, "series": [{"data": [[60000.0, 124.0], [60100.0, 65.0], [60200.0, 163.0], [60300.0, 128.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 775.0], [600.0, 67.0], [700.0, 22.0], [15300.0, 1.0], [1000.0, 33.0], [1100.0, 172.0], [1200.0, 838.0], [1300.0, 745.0], [21000.0, 1920.0], [1400.0, 158.0], [1500.0, 37.0], [100.0, 601.0], [2100.0, 3.0], [2200.0, 9.0], [2300.0, 12.0], [3000.0, 3.0], [3100.0, 4.0], [200.0, 7302.0], [3300.0, 149.0], [3200.0, 83.0], [3400.0, 28.0], [3500.0, 5.0], [4200.0, 1.0], [300.0, 8597.0], [400.0, 1314.0], [7100.0, 1.0], [7000.0, 8.0], [7200.0, 8.0], [7300.0, 22.0], [7400.0, 3.0], [7500.0, 1.0], [500.0, 336.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[10200.0, 51.0], [10100.0, 49.0], [10000.0, 206.0], [10600.0, 26.0], [10500.0, 52.0], [10300.0, 48.0], [10400.0, 48.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 794.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 18220.0, "series": [{"data": [[0.0, 794.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 18220.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 3284.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 1920.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 242.36250000000007, "minX": 1.6175736E12, "maxY": 480.0, "series": [{"data": [[1.61757366E12, 242.36250000000007]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.61757366E12, 275.50208333333325]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.61757372E12, 397.7055873925501], [1.6175736E12, 413.0558325024926], [1.61757366E12, 480.0]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757372E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.0, "maxY": 60371.0, "series": [{"data": [[494.0, 60362.75], [486.0, 60364.0], [505.0, 60355.0], [499.0, 60359.6], [543.0, 60371.0], [536.0, 60369.0], [526.0, 60365.25], [518.0, 60357.07692307693], [569.0, 60346.28571428572], [562.0, 60354.0], [560.0, 60363.0], [556.0, 60369.0], [551.0, 60371.0], [607.0, 60302.0], [606.0, 60318.5], [602.0, 60343.0], [601.0, 60355.0], [599.0, 60329.13333333333], [584.0, 60336.38461538461], [583.0, 60337.0], [636.0, 60217.333333333336], [627.0, 60260.0], [639.0, 60223.0], [624.0, 60279.0], [633.0, 60219.0], [632.0, 60222.0], [622.0, 60280.0], [609.0, 60291.0], [608.0, 60293.0], [612.0, 60290.0], [611.0, 60291.0], [615.0, 60295.0], [614.0, 60291.0], [621.0, 60285.0], [620.0, 60290.666666666664], [617.0, 60291.0], [630.0, 60236.0], [629.0, 60259.0], [628.0, 60260.0], [626.0, 60267.0], [625.0, 60273.0], [658.0, 60247.0], [670.0, 60241.0], [669.0, 60243.0], [667.0, 60247.0], [665.0, 60245.0], [654.0, 60240.33333333333], [646.0, 60232.0], [641.0, 60225.0], [648.0, 60238.0], [663.0, 60247.0], [661.0, 60249.0], [659.0, 60247.0], [656.0, 60246.0], [700.0, 60280.0], [701.0, 60286.0], [696.0, 60260.0], [676.0, 60242.5], [674.0, 60237.0], [673.0, 60242.0], [694.0, 60259.0], [693.0, 60259.0], [689.0, 60255.0], [687.0, 60251.0], [684.0, 60249.0], [681.0, 60246.0], [680.0, 60243.0], [733.0, 60241.0], [734.0, 60240.0], [721.0, 60266.0], [720.0, 60274.0], [723.0, 60250.0], [722.0, 60256.0], [725.0, 60245.0], [724.0, 60246.0], [732.0, 60243.0], [731.0, 60247.0], [730.0, 60246.0], [729.0, 60246.0], [728.0, 60246.0], [709.0, 60277.333333333336], [708.0, 60290.4], [719.0, 60268.0], [718.0, 60295.0], [717.0, 60266.0], [727.0, 60245.0], [726.0, 60245.0], [764.0, 60220.0], [766.0, 60205.5], [752.0, 60227.0], [763.0, 60209.0], [762.0, 60212.0], [761.0, 60214.0], [760.0, 60217.0], [751.0, 60224.0], [738.0, 60234.0], [743.0, 60230.25], [739.0, 60231.0], [748.0, 60225.0], [747.0, 60228.0], [745.0, 60227.5], [758.0, 60219.0], [757.0, 60220.0], [755.0, 60221.0], [753.0, 60270.0], [793.0, 60120.666666666664], [787.0, 60119.0], [799.0, 60127.25], [795.0, 60120.0], [794.0, 60121.0], [783.0, 60118.0], [769.0, 60203.0], [768.0, 60203.0], [771.0, 60205.0], [770.0, 60204.0], [773.0, 60190.0], [772.0, 60198.0], [775.0, 60164.0], [774.0, 60186.0], [782.0, 60119.0], [781.0, 60118.0], [780.0, 60117.0], [779.0, 60118.0], [778.0, 60120.0], [777.0, 60127.0], [776.0, 60156.0], [790.0, 60117.0], [789.0, 60119.0], [788.0, 60118.0], [786.0, 60120.0], [785.0, 60119.0], [819.0, 60110.0], [830.0, 60100.0], [831.0, 60100.0], [816.0, 60143.0], [818.0, 60110.0], [817.0, 60117.0], [828.0, 60099.0], [826.0, 60100.0], [825.0, 60097.0], [806.0, 60137.66666666667], [800.0, 60119.0], [815.0, 60131.0], [813.0, 60130.0], [823.0, 60099.0], [822.0, 60104.0], [821.0, 60109.0], [857.0, 60079.0], [850.0, 60076.0], [861.0, 60054.0], [859.0, 60056.0], [858.0, 60071.0], [847.0, 60072.5], [832.0, 60095.0], [835.0, 60094.5], [833.0, 60094.0], [837.0, 60085.0], [836.0, 60090.0], [839.0, 60082.0], [838.0, 60086.0], [845.0, 60074.0], [843.0, 60077.0], [841.0, 60079.0], [840.0, 60080.0], [855.0, 60080.0], [854.0, 60079.0], [852.0, 60080.0], [848.0, 60077.0], [892.0, 60041.0], [894.0, 60041.0], [890.0, 60041.0], [889.0, 60043.0], [888.0, 60043.5], [871.0, 60061.5], [869.0, 60059.0], [865.0, 60055.0], [864.0, 60054.666666666664], [886.0, 60050.4], [881.0, 60048.0], [880.0, 60050.0], [878.0, 60049.0], [877.0, 60055.0], [876.0, 60059.0], [875.0, 60064.0], [874.0, 60063.666666666664], [923.0, 60060.66666666667], [917.0, 60070.0], [916.0, 60090.0], [914.0, 60068.166666666664], [908.0, 60097.0], [896.0, 60041.0], [900.0, 60053.0], [899.0, 60047.333333333336], [907.0, 60095.0], [906.0, 60042.0], [904.0, 60043.0], [903.0, 60042.0], [901.0, 60038.0], [956.0, 60092.0], [959.0, 60094.333333333336], [954.0, 60089.0], [953.0, 60097.8], [952.0, 60100.0], [947.0, 60083.0], [946.0, 60104.0], [945.0, 60089.0], [939.0, 60048.0], [936.0, 60049.0], [934.0, 60050.45454545454], [960.0, 60063.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[722.3625, 60211.89791666664]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 21031.0], [3.0, 21047.0], [4.0, 21054.0], [5.0, 21045.0], [6.0, 21042.0], [7.0, 21041.0], [8.0, 21041.0], [9.0, 21042.0], [11.0, 21041.5], [12.0, 21040.0], [13.0, 21040.0], [14.0, 21040.0], [15.0, 21041.0], [16.0, 21040.0], [18.0, 21040.5], [19.0, 21039.0], [21.0, 21041.5], [22.0, 21042.0], [23.0, 21041.0], [24.0, 21041.0], [25.0, 21040.0], [26.0, 21039.0], [27.0, 21034.0], [28.0, 21034.0], [29.0, 21036.0], [30.0, 21034.0], [33.0, 21035.0], [32.0, 21035.5], [35.0, 21035.0], [34.0, 21035.0], [37.0, 21044.0], [36.0, 21037.0], [39.0, 21035.0], [38.0, 21036.0], [41.0, 21034.0], [40.0, 21036.0], [42.0, 21036.0], [45.0, 21034.0], [44.0, 21039.5], [46.0, 21043.0], [49.0, 21040.0], [48.0, 21040.0], [51.0, 21035.0], [50.0, 21033.0], [52.0, 21034.0], [55.0, 21030.0], [54.0, 21033.0], [57.0, 21035.0], [56.0, 21037.0], [59.0, 21034.0], [58.0, 21037.0], [61.0, 21030.0], [60.0, 21032.0], [62.0, 21041.0], [67.0, 21036.0], [66.0, 21038.0], [65.0, 21038.0], [64.0, 21036.0], [71.0, 21033.0], [70.0, 21031.0], [69.0, 21034.0], [68.0, 21036.0], [75.0, 21037.0], [74.0, 21038.0], [73.0, 21036.0], [72.0, 21038.0], [79.0, 21035.0], [77.0, 21039.0], [76.0, 21033.0], [83.0, 21035.0], [82.0, 21036.0], [81.0, 21035.0], [86.0, 21039.0], [85.0, 21031.0], [84.0, 21031.0], [91.0, 21039.0], [90.0, 21038.0], [88.0, 21039.0], [95.0, 21032.0], [94.0, 21035.0], [93.0, 21033.0], [92.0, 21040.0], [99.0, 21030.0], [98.0, 21032.0], [97.0, 21030.0], [96.0, 21038.0], [101.0, 21034.0], [100.0, 21035.0], [107.0, 21035.5], [105.0, 21038.0], [104.0, 21036.333333333332], [110.0, 21033.0], [109.0, 21033.0], [108.0, 21036.0], [113.0, 21044.0], [112.0, 21041.5], [119.0, 21037.0], [118.0, 21042.0], [117.0, 21039.0], [116.0, 21065.0], [122.0, 21052.0], [121.0, 21039.0], [120.0, 21039.0], [127.0, 21036.0], [126.0, 21088.0], [125.0, 21052.0], [124.0, 21076.0], [135.0, 21061.5], [133.0, 21056.0], [132.0, 21046.0], [131.0, 21059.0], [130.0, 21057.0], [129.0, 21051.0], [128.0, 21048.0], [143.0, 21082.0], [142.0, 21071.333333333332], [139.0, 21062.0], [138.0, 21044.0], [137.0, 21045.0], [136.0, 21055.0], [151.0, 21051.0], [150.0, 21058.0], [149.0, 21052.0], [148.0, 21043.0], [147.0, 21051.0], [146.0, 21049.0], [145.0, 21068.0], [159.0, 21045.0], [158.0, 21072.0], [157.0, 21036.0], [156.0, 21052.0], [155.0, 21053.0], [154.0, 21069.0], [153.0, 21067.0], [152.0, 21053.0], [165.0, 21052.0], [164.0, 21045.0], [163.0, 21040.0], [162.0, 21041.0], [161.0, 21040.0], [160.0, 21047.0], [175.0, 21046.0], [174.0, 21056.0], [172.0, 21058.5], [170.0, 21057.0], [169.0, 21059.25], [183.0, 21043.0], [182.0, 21037.0], [181.0, 21048.0], [180.0, 21036.0], [179.0, 21055.0], [178.0, 21051.0], [177.0, 21062.0], [176.0, 21049.0], [191.0, 21060.0], [188.0, 21047.0], [187.0, 21048.0], [186.0, 21038.0], [185.0, 21040.0], [184.0, 21038.0], [199.0, 21036.0], [198.0, 21029.0], [197.0, 21049.0], [196.0, 21052.0], [195.0, 21057.0], [192.0, 21066.0], [207.0, 21056.0], [206.0, 21050.0], [205.0, 21043.0], [204.0, 21026.0], [203.0, 21039.0], [202.0, 21045.0], [201.0, 21035.0], [200.0, 21030.0], [215.0, 21062.0], [214.0, 21035.0], [213.0, 21047.0], [212.0, 21046.0], [211.0, 21043.0], [210.0, 21058.0], [209.0, 21030.0], [208.0, 21062.0], [223.0, 21044.0], [222.0, 21055.0], [220.0, 21031.0], [219.0, 21033.0], [218.0, 21036.0], [217.0, 21056.0], [216.0, 21053.0], [231.0, 21035.0], [230.0, 21039.0], [229.0, 21040.0], [228.0, 21034.0], [227.0, 21042.0], [226.0, 21048.0], [225.0, 21057.0], [239.0, 21047.0], [238.0, 21050.0], [237.0, 21054.0], [235.0, 21044.0], [234.0, 21037.0], [233.0, 21035.0], [232.0, 21029.0], [247.0, 21043.0], [246.0, 21055.0], [245.0, 21056.0], [244.0, 21038.0], [243.0, 21059.0], [242.0, 21045.0], [241.0, 21041.0], [240.0, 21036.0], [255.0, 21055.0], [254.0, 21053.0], [253.0, 21053.0], [252.0, 21051.0], [251.0, 21039.0], [250.0, 21029.0], [249.0, 21058.0], [248.0, 21040.0], [259.0, 21026.0], [269.0, 21043.0], [270.0, 21040.0], [268.0, 21038.0], [258.0, 21048.0], [257.0, 21050.0], [256.0, 21034.0], [267.0, 21047.0], [266.0, 21041.0], [263.0, 21049.0], [262.0, 21032.0], [261.0, 21035.0], [260.0, 21051.0], [286.0, 21035.0], [287.0, 21037.0], [285.0, 21027.0], [284.0, 21028.0], [283.0, 21038.0], [282.0, 21036.0], [281.0, 21039.0], [280.0, 21041.0], [279.0, 21031.0], [273.0, 21039.0], [272.0, 21030.0], [275.0, 21033.0], [274.0, 21036.0], [278.0, 21035.0], [277.0, 21035.0], [276.0, 21033.0], [300.0, 21059.0], [303.0, 21049.0], [302.0, 21054.0], [301.0, 21055.0], [298.0, 21054.0], [294.0, 21047.0], [293.0, 21054.5], [291.0, 21025.0], [290.0, 21050.0], [289.0, 21031.0], [288.0, 21032.0], [318.0, 21034.0], [319.0, 21050.0], [317.0, 21043.0], [316.0, 21046.0], [315.0, 21035.0], [314.0, 21052.0], [313.0, 21049.0], [312.0, 21055.0], [311.0, 21055.0], [305.0, 21048.0], [304.0, 21028.0], [307.0, 21040.0], [306.0, 21054.0], [310.0, 21047.0], [309.0, 21040.0], [308.0, 21054.0], [334.0, 21046.0], [335.0, 21045.0], [333.0, 21046.0], [332.0, 21045.0], [331.0, 21046.0], [330.0, 21048.0], [329.0, 21048.0], [328.0, 21047.0], [327.0, 21047.0], [321.0, 21039.0], [320.0, 21044.0], [323.0, 21045.0], [322.0, 21042.0], [326.0, 21050.0], [325.0, 21051.0], [324.0, 21050.0], [350.0, 21048.0], [351.0, 21053.0], [349.0, 21049.0], [348.0, 21048.5], [346.0, 21044.0], [345.0, 21046.0], [344.0, 21046.0], [343.0, 21056.0], [337.0, 21057.0], [336.0, 21059.0], [339.0, 21047.0], [338.0, 21053.0], [342.0, 21055.0], [341.0, 21049.0], [340.0, 21055.0], [366.0, 21047.0], [367.0, 21057.0], [364.0, 21057.5], [355.0, 21052.0], [354.0, 21044.0], [353.0, 21052.0], [352.0, 21050.0], [362.0, 21041.0], [361.0, 21044.0], [360.0, 21043.0], [359.0, 21042.0], [358.0, 21040.0], [357.0, 21040.0], [356.0, 21042.0], [382.0, 21039.0], [383.0, 21038.0], [381.0, 21049.0], [380.0, 21051.0], [379.0, 21041.0], [378.0, 21044.0], [377.0, 21054.0], [376.0, 21045.0], [375.0, 21040.0], [369.0, 21051.0], [371.0, 21052.0], [370.0, 21052.0], [374.0, 21052.0], [373.0, 21050.0], [372.0, 21055.0], [397.0, 21032.0], [399.0, 21052.5], [396.0, 21041.5], [387.0, 21036.0], [386.0, 21041.0], [385.0, 21049.0], [384.0, 21042.0], [394.0, 21034.0], [393.0, 21032.0], [392.0, 21031.0], [391.0, 21036.0], [390.0, 21043.0], [389.0, 21039.0], [388.0, 21043.0], [414.0, 21055.0], [415.0, 21048.0], [413.0, 21044.0], [412.0, 21047.0], [411.0, 21041.0], [410.0, 21054.0], [409.0, 21058.0], [408.0, 21048.0], [407.0, 21047.0], [401.0, 21045.0], [400.0, 21047.0], [403.0, 21060.0], [402.0, 21057.0], [406.0, 21055.0], [405.0, 21059.0], [404.0, 21047.0], [430.0, 21039.0], [431.0, 21034.0], [429.0, 21040.0], [428.0, 21038.0], [427.0, 21043.0], [426.0, 21047.0], [425.0, 21035.0], [424.0, 21045.0], [423.0, 21036.0], [417.0, 21048.0], [416.0, 21053.0], [419.0, 21048.0], [418.0, 21045.0], [422.0, 21048.0], [421.0, 21041.0], [420.0, 21044.0], [446.0, 21030.0], [447.0, 21031.0], [445.0, 21030.0], [444.0, 21032.0], [443.0, 21032.0], [442.0, 21031.0], [441.0, 21031.0], [440.0, 21031.0], [439.0, 21032.0], [433.0, 21030.0], [432.0, 21036.0], [435.0, 21030.0], [434.0, 21031.0], [437.0, 21031.0], [436.0, 21029.0], [462.0, 21020.0], [463.0, 21048.0], [461.0, 21020.0], [460.0, 21036.0], [459.0, 21028.0], [458.0, 21030.0], [457.0, 21031.0], [456.0, 21031.0], [455.0, 21031.0], [449.0, 21032.0], [448.0, 21032.0], [451.0, 21032.0], [450.0, 21030.0], [454.0, 21031.0], [453.0, 21031.5], [478.0, 21020.0], [479.0, 21021.0], [477.0, 21020.0], [476.0, 21043.0], [475.0, 21031.0], [474.0, 21050.0], [473.0, 21044.0], [472.0, 21041.0], [471.0, 21040.0], [465.0, 21035.0], [464.0, 21034.0], [467.0, 21037.0], [466.0, 21038.0], [470.0, 21040.0], [469.0, 21040.0], [468.0, 21040.0], [480.0, 21049.801696712602], [613.0, 82.0], [614.0, 80.0], [616.0, 67.0], [617.0, 75.0], [618.0, 78.0], [619.0, 78.6], [620.0, 56.0], [627.0, 46.5], [631.0, 45.6], [633.0, 39.0], [638.0, 40.0], [658.0, 42.0], [641.0, 41.0], [652.0, 45.0], [657.0, 50.0], [668.0, 47.285714285714285], [664.0, 46.76470588235294], [666.0, 48.0], [659.0, 43.0], [660.0, 43.0], [661.0, 43.0], [662.0, 45.0], [663.0, 44.99999999999999], [698.0, 62.25], [672.0, 49.0], [676.0, 48.5], [680.0, 53.0], [688.0, 59.5], [691.0, 60.0], [692.0, 60.5], [694.0, 62.666666666666664], [700.0, 62.5], [702.0, 60.0], [706.0, 55.0], [705.0, 58.333333333333336], [708.0, 55.666666666666664], [710.0, 51.5], [714.0, 53.8], [716.0, 56.25], [718.0, 55.0], [720.0, 57.42857142857143], [734.0, 69.0], [735.0, 69.0], [724.0, 61.0], [726.0, 60.5], [742.0, 75.0], [737.0, 72.30000000000001], [743.0, 76.0], [760.0, 75.99999999999999], [764.0, 73.5], [766.0, 75.0], [767.0, 75.0], [747.0, 79.4], [749.0, 80.0], [750.0, 79.0], [752.0, 85.0], [754.0, 78.5], [756.0, 81.0], [758.0, 80.0], [770.0, 76.0], [772.0, 77.25], [776.0, 79.0], [780.0, 80.75], [783.0, 7071.666666666667], [786.0, 84.0], [787.0, 86.0], [790.0, 86.33333333333333], [798.0, 89.5], [814.0, 97.33333333333333], [800.0, 91.6], [804.0, 93.0], [807.0, 96.0], [824.0, 101.6], [827.0, 99.8], [831.0, 98.0], [809.0, 96.0], [811.0, 95.0], [812.0, 95.5], [815.0, 96.0], [817.0, 98.5], [818.0, 98.0], [820.0, 101.0], [821.0, 100.4], [835.0, 100.0], [832.0, 98.0], [837.0, 100.0], [838.0, 21047.0], [839.0, 102.66666666666667], [841.0, 101.5], [843.0, 105.0], [847.0, 113.0], [853.0, 109.0], [859.0, 133.48837209302323], [857.0, 127.83333333333333], [858.0, 21047.0], [854.0, 116.5], [855.0, 112.6], [866.0, 133.75], [867.0, 118.5], [878.0, 140.0], [879.0, 122.0], [881.0, 21060.5], [913.0, 121.0], [912.0, 124.0], [914.0, 124.0], [915.0, 122.0], [917.0, 122.2], [919.0, 119.5], [920.0, 119.25], [906.0, 21060.333333333332], [923.0, 120.5], [924.0, 120.66666666666667], [927.0, 119.83333333333334], [941.0, 120.5], [930.0, 121.0], [931.0, 118.66666666666667], [933.0, 119.33333333333333], [935.0, 119.4], [946.0, 127.0], [952.0, 133.5], [959.0, 137.0], [956.0, 21060.0], [948.0, 127.0], [937.0, 118.0], [938.0, 116.0], [940.0, 118.8], [942.0, 120.0], [990.0, 272.4], [977.0, 158.0], [978.0, 215.29999999999998], [981.0, 153.0], [987.0, 244.75], [989.0, 776.1666666666666], [988.0, 269.5], [986.0, 416.0], [985.0, 476.4], [960.0, 1170.4213285553142], [975.0, 279.6], [972.0, 281.37500000000006], [1021.0, 192.5], [995.0, 168.0], [1007.0, 180.0], [992.0, 273.0], [1006.0, 473.2], [1004.0, 272.0], [1002.0, 275.0], [1001.0, 275.75], [1000.0, 274.42857142857144], [1023.0, 265.0], [1008.0, 274.0], [1011.0, 272.5], [1009.0, 273.0], [1013.0, 873.0], [1012.0, 271.0], [1020.0, 265.5], [1018.0, 269.0], [1017.0, 271.0], [999.0, 359.16666666666674], [997.0, 275.0], [1015.0, 272.0], [1014.0, 273.28571428571433], [1030.0, 199.0], [1038.0, 872.0], [1024.0, 357.5], [1054.0, 266.0], [1028.0, 267.57142857142856], [1032.0, 198.0], [1034.0, 200.33333333333334], [1036.0, 270.0], [1056.0, 203.66666666666666], [1082.0, 758.0], [1080.0, 938.0], [1074.0, 524.5], [1058.0, 209.66666666666666], [1060.0, 742.5], [1062.0, 209.5], [1066.0, 213.0], [1040.0, 528.5714285714286], [1044.0, 264.5714285714286], [1042.0, 273.0], [1046.0, 273.0], [1052.0, 201.0], [1138.0, 231.0], [1106.0, 275.0], [1112.0, 272.0], [1118.0, 794.0], [1146.0, 238.0], [1120.0, 288.0], [1124.0, 224.0], [1126.0, 241.63636363636363], [1128.0, 225.0], [1130.0, 284.6666666666667], [1134.0, 228.375], [1152.0, 241.0], [1160.0, 245.0], [1182.0, 250.0], [1176.0, 247.0], [1172.0, 245.42857142857142], [1174.0, 246.5], [1156.0, 243.8], [1158.0, 247.0], [1162.0, 246.0], [1164.0, 248.0], [1166.0, 247.0], [1184.0, 272.66666666666663], [1212.0, 266.0], [1208.0, 262.0], [1206.0, 269.0], [1198.0, 284.0], [1168.0, 256.6], [1170.0, 246.0], [1248.0, 259.0], [1250.0, 259.0], [1216.0, 271.0], [1246.0, 262.0], [1274.0, 238.0], [1266.0, 242.0], [1252.0, 260.0], [1258.0, 250.7142857142857], [1262.0, 247.0], [1342.0, 222.66666666666666], [1338.0, 221.1], [1340.0, 222.0], [1336.0, 220.0], [1318.0, 270.0], [1396.0, 270.2], [1398.0, 271.3333333333333], [1350.0, 231.0], [1344.0, 224.25], [1394.0, 268.6666666666667], [1400.0, 274.0], [1404.0, 276.5], [1368.0, 251.5], [1382.0, 261.6666666666667], [1390.0, 265.0], [1434.0, 291.0], [1408.0, 278.0], [1438.0, 294.0], [1436.0, 293.75], [1432.0, 291.0], [1430.0, 290.5], [1428.0, 289.0], [1426.0, 293.0], [1424.0, 289.0], [1410.0, 279.0], [1418.0, 285.8], [1420.0, 287.5], [1422.0, 288.0], [1440.0, 367.3626952415538], [1031.0, 273.0], [1027.0, 197.0], [1025.0, 267.0], [1053.0, 1279.0], [1033.0, 272.75], [1037.0, 267.3333333333333], [1057.0, 521.5], [1077.0, 275.0], [1073.0, 1285.0], [1039.0, 516.9499999999999], [1085.0, 613.3333333333334], [1065.0, 278.0], [1063.0, 275.0], [1041.0, 204.0], [1051.0, 268.5], [1049.0, 272.0], [1097.0, 276.0], [1137.0, 259.8333333333333], [1113.0, 216.0], [1105.0, 252.0], [1107.0, 275.0], [1109.0, 437.4666666666667], [1111.0, 217.5], [1115.0, 215.53846153846152], [1117.0, 222.27272727272728], [1119.0, 243.88888888888889], [1141.0, 234.0], [1143.0, 271.0], [1149.0, 239.66666666666666], [1125.0, 222.77777777777777], [1127.0, 226.2], [1131.0, 225.66666666666666], [1129.0, 285.0], [1133.0, 246.66666666666666], [1135.0, 360.5869565217391], [1163.0, 271.0], [1153.0, 271.0], [1183.0, 269.75], [1179.0, 252.73333333333338], [1167.0, 247.0], [1205.0, 265.0], [1185.0, 273.6315789473684], [1187.0, 289.5], [1199.0, 284.0], [1273.0, 240.25], [1277.0, 240.33333333333334], [1269.0, 247.8], [1265.0, 258.5], [1255.0, 260.0], [1257.0, 259.75], [1261.0, 271.0], [1263.0, 258.0], [1289.0, 243.5], [1285.0, 243.75], [1305.0, 247.2], [1281.0, 241.5], [1311.0, 247.5], [1293.0, 247.5], [1315.0, 246.75], [1337.0, 220.75], [1333.0, 218.5], [1335.0, 220.5], [1329.0, 216.5], [1331.0, 235.33333333333334], [1317.0, 243.2], [1319.0, 241.33333333333331], [1323.0, 229.14285714285717], [1325.0, 222.33333333333334], [1327.0, 216.5], [1297.0, 245.33333333333334], [1299.0, 247.0], [1301.0, 243.0], [1307.0, 247.0], [1309.0, 247.0], [1401.0, 274.0], [1355.0, 240.0], [1407.0, 279.25], [1363.0, 246.0], [1367.0, 269.0], [1369.0, 251.0], [1377.0, 259.5], [1381.0, 261.0], [1385.0, 261.5], [1389.0, 265.0], [1391.0, 266.0], [1433.0, 291.0], [1431.0, 289.4], [1411.0, 278.5], [1429.0, 291.0], [1427.0, 291.2], [1425.0, 292.3333333333333], [1409.0, 274.5], [1417.0, 284.5], [1419.0, 286.0], [1421.0, 288.6], [1.0, 21053.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1043.1725857769384, 2152.7154097514826]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[990.0, 10028.0], [991.0, 10028.0], [976.0, 10027.0], [989.0, 10027.0], [988.0, 10029.0], [987.0, 10027.0], [986.0, 10027.0], [985.0, 10030.75], [966.0, 10038.666666666668], [975.0, 10029.0], [972.0, 10036.0], [981.0, 10028.333333333334], [978.0, 10029.0], [1020.0, 10028.0], [1012.0, 10027.0], [1023.0, 10029.0], [1009.0, 10027.0], [1008.0, 10027.0], [1011.0, 10027.0], [1010.0, 10027.0], [1019.0, 10028.0], [1018.0, 10028.0], [1017.0, 10028.0], [999.0, 10031.333333333334], [993.0, 10039.0], [992.0, 10029.0], [1007.0, 10030.0], [1006.0, 10029.5], [1004.0, 10028.0], [1003.0, 10027.0], [1002.0, 10030.0], [1001.0, 10028.0], [1000.0, 10027.0], [1015.0, 10028.0], [1014.0, 10028.0], [1013.0, 10028.0], [1082.0, 10052.0], [1085.0, 10055.0], [1056.0, 10032.0], [1058.0, 10027.0], [1057.0, 10028.0], [1060.0, 10031.0], [1059.0, 10029.0], [1063.0, 10041.0], [1062.0, 10032.0], [1067.0, 10036.0], [1065.0, 10033.0], [1080.0, 10049.0], [1077.0, 10049.0], [1076.0, 10046.5], [1074.0, 10044.5], [1072.0, 10046.0], [1039.0, 10037.0], [1038.0, 10038.0], [1037.0, 10042.0], [1034.0, 10050.0], [1032.0, 10034.0], [1028.0, 10031.333333333334], [1025.0, 10029.0], [1024.0, 10030.0], [1055.0, 10028.0], [1054.0, 10028.0], [1053.0, 10029.0], [1052.0, 10028.0], [1051.0, 10027.0], [1050.0, 10027.0], [1049.0, 10026.5], [1047.0, 10027.0], [1046.0, 10029.0], [1044.0, 10028.0], [1043.0, 10027.0], [1042.0, 10029.0], [1040.0, 10025.0], [1071.0, 10043.0], [1069.0, 10040.0], [1119.0, 10084.0], [1129.0, 10082.333333333334], [1144.0, 10080.0], [1143.0, 10069.666666666666], [1137.0, 10064.5], [1097.0, 10067.666666666668], [1091.0, 10062.0], [1088.0, 10058.0], [1118.0, 10086.0], [1117.0, 10087.0], [1115.0, 10086.0], [1114.0, 10085.0], [1113.0, 10084.0], [1112.0, 10087.0], [1111.0, 10088.0], [1109.0, 10088.0], [1107.0, 10086.0], [1106.0, 10079.444444444445], [1135.0, 10089.5], [1133.0, 10088.333333333334], [1130.0, 10085.0], [1126.0, 10088.5], [1120.0, 10083.0], [1196.0, 10215.0], [1195.0, 10471.0], [1194.0, 10411.0], [1183.0, 10360.42857142857], [1182.0, 10407.0], [1169.0, 10155.0], [1168.0, 10341.533333333335], [1153.0, 10125.222222222223], [1275.0, 10219.75], [1274.0, 10270.3], [1299.0, 10308.75], [1297.0, 10543.0], [1382.0, 10257.0], [1400.0, 10556.0], [1403.0, 10474.2], [1377.0, 10347.166666666668], [1376.0, 10395.5], [1379.0, 10364.9], [1378.0, 10378.666666666666], [1381.0, 10423.5], [1380.0, 10326.181818181818], [1383.0, 10169.0], [1387.0, 10163.5], [1384.0, 10375.350000000002], [1389.0, 10575.0], [1388.0, 10531.000000000002], [1391.0, 10205.5], [1390.0, 10361.363636363638], [1402.0, 10383.0], [1401.0, 10277.0], [1399.0, 10504.5], [1398.0, 10344.75], [1397.0, 10369.5], [1396.0, 10487.0], [1395.0, 10341.2], [1394.0, 10266.0], [1393.0, 10276.333333333334], [1392.0, 10428.25], [1375.0, 10259.666666666666], [1354.0, 10451.75], [1353.0, 10477.555555555555], [1359.0, 10269.142857142859], [1358.0, 10360.0], [1374.0, 10505.0], [1373.0, 10386.6], [1372.0, 10285.0], [1367.0, 10307.5], [1366.0, 10310.666666666666], [1365.0, 10330.5], [1364.0, 10594.0], [1362.0, 10415.0], [1361.0, 10277.166666666666], [1360.0, 10402.5], [1440.0, 10320.062499999998], [1424.0, 10362.857142857145], [1423.0, 10495.0], [1422.0, 10422.0], [1421.0, 10415.333333333334]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1235.4854166666664, 10237.433333333334]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1440.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6175736E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757372E12, 0.0], [1.6175736E12, 0.0], [1.61757366E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61757372E12, 0.0], [1.6175736E12, 0.0], [1.61757366E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757372E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 290.4562977733467, "minX": 1.6175736E12, "maxY": 60211.89791666664, "series": [{"data": [[1.61757366E12, 60211.89791666664]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61757372E12, 21047.73495702006], [1.6175736E12, 290.4562977733467], [1.61757366E12, 1050.8266058452234]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757366E12, 10237.433333333334]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757372E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175736E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757366E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61757372E12, 0.0], [1.6175736E12, 0.0], [1.61757366E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757366E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757372E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175736E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757366E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61757372E12, 0.0], [1.6175736E12, 0.0], [1.61757366E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757366E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757372E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 38.0, "minX": 1.6175736E12, "maxY": 60378.0, "series": [{"data": [[1.6175736E12, 443.0], [1.61757366E12, 60378.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6175736E12, 371.0], [1.61757366E12, 1317.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6175736E12, 415.0], [1.61757366E12, 60249.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6175736E12, 392.0], [1.61757366E12, 7406.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6175736E12, 38.0], [1.61757366E12, 38.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6175736E12, 324.0], [1.61757366E12, 309.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757366E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 1.0, "maxY": 60290.0, "series": [{"data": [[623.0, 455.0], [674.0, 315.0], [687.0, 335.0], [947.0, 346.0], [970.0, 315.0], [987.0, 327.0], [1024.0, 374.5], [1069.0, 307.0], [1034.0, 283.0], [1028.0, 280.0], [1027.0, 303.0], [4.0, 7051.0], [1125.0, 103.0], [1110.0, 311.0], [1136.0, 309.5], [1145.0, 307.0], [1156.0, 354.0], [1197.0, 293.0], [1243.0, 335.0], [1297.0, 331.0], [1480.0, 296.0], [209.0, 60083.0], [1.0, 7055.0], [286.0, 60290.0], [385.0, 366.0], [469.0, 93.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21026.5], [10.0, 21031.0], [43.0, 21033.0], [3.0, 21038.5], [12.0, 21036.5], [209.0, 21055.0], [14.0, 21052.0], [15.0, 21055.0], [1.0, 21037.0], [4.0, 21048.5], [286.0, 21062.0], [19.0, 21041.0], [5.0, 21033.0], [23.0, 21038.0], [411.0, 21031.0], [427.0, 21042.0], [426.0, 21056.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1480.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[623.0, 0.0], [674.0, 0.0], [687.0, 0.0], [947.0, 0.0], [970.0, 0.0], [987.0, 0.0], [1024.0, 0.0], [1069.0, 0.0], [1034.0, 0.0], [1028.0, 0.0], [1027.0, 0.0], [4.0, 0.0], [1125.0, 0.0], [1110.0, 0.0], [1136.0, 0.0], [1145.0, 0.0], [1156.0, 0.0], [1197.0, 0.0], [1243.0, 0.0], [1297.0, 0.0], [1480.0, 0.0], [209.0, 0.0], [1.0, 0.0], [286.0, 0.0], [385.0, 0.0], [469.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [10.0, 0.0], [43.0, 0.0], [3.0, 0.0], [12.0, 0.0], [209.0, 0.0], [14.0, 0.0], [15.0, 0.0], [1.0, 0.0], [4.0, 0.0], [286.0, 0.0], [19.0, 0.0], [5.0, 0.0], [23.0, 0.0], [411.0, 0.0], [427.0, 0.0], [426.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1480.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.266666666666667, "minX": 1.6175736E12, "maxY": 314.21666666666664, "series": [{"data": [[1.61757372E12, 15.266666666666667], [1.6175736E12, 74.15], [1.61757366E12, 314.21666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757372E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 8.733333333333333, "minX": 1.6175736E12, "maxY": 321.48333333333335, "series": [{"data": [[1.6175736E12, 50.15], [1.61757366E12, 321.48333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61757372E12, 23.266666666666666], [1.61757366E12, 8.733333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757372E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.6175736E12, "maxY": 305.48333333333335, "series": [{"data": [[1.61757366E12, 8.0]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61757366E12, 8.0]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.6175736E12, 50.15], [1.61757366E12, 305.48333333333335]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61757372E12, 23.266666666666666], [1.61757366E12, 8.733333333333333]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757372E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 8.733333333333333, "minX": 1.6175736E12, "maxY": 321.48333333333335, "series": [{"data": [[1.6175736E12, 50.15], [1.61757366E12, 321.48333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61757372E12, 23.266666666666666], [1.61757366E12, 8.733333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757372E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

