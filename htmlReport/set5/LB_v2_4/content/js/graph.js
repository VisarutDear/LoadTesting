/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 61039.0, "series": [{"data": [[0.0, 60026.0], [0.1, 60026.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60026.0], [1.6, 60026.0], [1.7, 60026.0], [1.8, 60026.0], [1.9, 60026.0], [2.0, 60026.0], [2.1, 60026.0], [2.2, 60026.0], [2.3, 60026.0], [2.4, 60026.0], [2.5, 60026.0], [2.6, 60026.0], [2.7, 60027.0], [2.8, 60027.0], [2.9, 60027.0], [3.0, 60027.0], [3.1, 60027.0], [3.2, 60027.0], [3.3, 60027.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60027.0], [12.4, 60027.0], [12.5, 60027.0], [12.6, 60027.0], [12.7, 60027.0], [12.8, 60027.0], [12.9, 60027.0], [13.0, 60027.0], [13.1, 60027.0], [13.2, 60027.0], [13.3, 60027.0], [13.4, 60027.0], [13.5, 60027.0], [13.6, 60027.0], [13.7, 60027.0], [13.8, 60027.0], [13.9, 60027.0], [14.0, 60027.0], [14.1, 60027.0], [14.2, 60027.0], [14.3, 60027.0], [14.4, 60027.0], [14.5, 60027.0], [14.6, 60027.0], [14.7, 60027.0], [14.8, 60027.0], [14.9, 60027.0], [15.0, 60027.0], [15.1, 60027.0], [15.2, 60027.0], [15.3, 60027.0], [15.4, 60027.0], [15.5, 60027.0], [15.6, 60027.0], [15.7, 60027.0], [15.8, 60027.0], [15.9, 60027.0], [16.0, 60027.0], [16.1, 60027.0], [16.2, 60028.0], [16.3, 60028.0], [16.4, 60028.0], [16.5, 60028.0], [16.6, 60028.0], [16.7, 60028.0], [16.8, 60028.0], [16.9, 60028.0], [17.0, 60028.0], [17.1, 60028.0], [17.2, 60028.0], [17.3, 60028.0], [17.4, 60028.0], [17.5, 60028.0], [17.6, 60028.0], [17.7, 60028.0], [17.8, 60028.0], [17.9, 60028.0], [18.0, 60028.0], [18.1, 60028.0], [18.2, 60028.0], [18.3, 60028.0], [18.4, 60028.0], [18.5, 60028.0], [18.6, 60028.0], [18.7, 60028.0], [18.8, 60028.0], [18.9, 60028.0], [19.0, 60028.0], [19.1, 60028.0], [19.2, 60028.0], [19.3, 60028.0], [19.4, 60028.0], [19.5, 60028.0], [19.6, 60028.0], [19.7, 60028.0], [19.8, 60028.0], [19.9, 60028.0], [20.0, 60028.0], [20.1, 60028.0], [20.2, 60028.0], [20.3, 60028.0], [20.4, 60028.0], [20.5, 60028.0], [20.6, 60028.0], [20.7, 60028.0], [20.8, 60028.0], [20.9, 60028.0], [21.0, 60028.0], [21.1, 60028.0], [21.2, 60028.0], [21.3, 60028.0], [21.4, 60028.0], [21.5, 60028.0], [21.6, 60028.0], [21.7, 60028.0], [21.8, 60028.0], [21.9, 60028.0], [22.0, 60028.0], [22.1, 60028.0], [22.2, 60028.0], [22.3, 60028.0], [22.4, 60028.0], [22.5, 60028.0], [22.6, 60028.0], [22.7, 60028.0], [22.8, 60028.0], [22.9, 60028.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60028.0], [30.5, 60028.0], [30.6, 60028.0], [30.7, 60028.0], [30.8, 60028.0], [30.9, 60028.0], [31.0, 60028.0], [31.1, 60028.0], [31.2, 60028.0], [31.3, 60028.0], [31.4, 60028.0], [31.5, 60028.0], [31.6, 60028.0], [31.7, 60028.0], [31.8, 60028.0], [31.9, 60028.0], [32.0, 60028.0], [32.1, 60028.0], [32.2, 60028.0], [32.3, 60028.0], [32.4, 60028.0], [32.5, 60028.0], [32.6, 60029.0], [32.7, 60029.0], [32.8, 60029.0], [32.9, 60029.0], [33.0, 60029.0], [33.1, 60029.0], [33.2, 60029.0], [33.3, 60029.0], [33.4, 60029.0], [33.5, 60029.0], [33.6, 60029.0], [33.7, 60029.0], [33.8, 60029.0], [33.9, 60029.0], [34.0, 60029.0], [34.1, 60029.0], [34.2, 60029.0], [34.3, 60029.0], [34.4, 60029.0], [34.5, 60029.0], [34.6, 60029.0], [34.7, 60029.0], [34.8, 60029.0], [34.9, 60029.0], [35.0, 60029.0], [35.1, 60029.0], [35.2, 60029.0], [35.3, 60029.0], [35.4, 60029.0], [35.5, 60029.0], [35.6, 60029.0], [35.7, 60029.0], [35.8, 60029.0], [35.9, 60029.0], [36.0, 60029.0], [36.1, 60029.0], [36.2, 60029.0], [36.3, 60029.0], [36.4, 60029.0], [36.5, 60029.0], [36.6, 60029.0], [36.7, 60029.0], [36.8, 60029.0], [36.9, 60029.0], [37.0, 60029.0], [37.1, 60029.0], [37.2, 60029.0], [37.3, 60029.0], [37.4, 60029.0], [37.5, 60029.0], [37.6, 60029.0], [37.7, 60029.0], [37.8, 60029.0], [37.9, 60029.0], [38.0, 60029.0], [38.1, 60029.0], [38.2, 60029.0], [38.3, 60029.0], [38.4, 60029.0], [38.5, 60029.0], [38.6, 60029.0], [38.7, 60029.0], [38.8, 60029.0], [38.9, 60029.0], [39.0, 60029.0], [39.1, 60029.0], [39.2, 60029.0], [39.3, 60029.0], [39.4, 60029.0], [39.5, 60029.0], [39.6, 60029.0], [39.7, 60029.0], [39.8, 60029.0], [39.9, 60029.0], [40.0, 60029.0], [40.1, 60029.0], [40.2, 60029.0], [40.3, 60029.0], [40.4, 60029.0], [40.5, 60029.0], [40.6, 60029.0], [40.7, 60029.0], [40.8, 60029.0], [40.9, 60029.0], [41.0, 60029.0], [41.1, 60029.0], [41.2, 60029.0], [41.3, 60029.0], [41.4, 60029.0], [41.5, 60029.0], [41.6, 60029.0], [41.7, 60029.0], [41.8, 60029.0], [41.9, 60029.0], [42.0, 60029.0], [42.1, 60029.0], [42.2, 60029.0], [42.3, 60029.0], [42.4, 60029.0], [42.5, 60029.0], [42.6, 60029.0], [42.7, 60029.0], [42.8, 60029.0], [42.9, 60029.0], [43.0, 60029.0], [43.1, 60029.0], [43.2, 60029.0], [43.3, 60029.0], [43.4, 60029.0], [43.5, 60029.0], [43.6, 60030.0], [43.7, 60030.0], [43.8, 60030.0], [43.9, 60030.0], [44.0, 60030.0], [44.1, 60030.0], [44.2, 60030.0], [44.3, 60030.0], [44.4, 60030.0], [44.5, 60030.0], [44.6, 60030.0], [44.7, 60030.0], [44.8, 60030.0], [44.9, 60030.0], [45.0, 60030.0], [45.1, 60030.0], [45.2, 60030.0], [45.3, 60030.0], [45.4, 60030.0], [45.5, 60030.0], [45.6, 60030.0], [45.7, 60030.0], [45.8, 60030.0], [45.9, 60030.0], [46.0, 60030.0], [46.1, 60030.0], [46.2, 60030.0], [46.3, 60030.0], [46.4, 60030.0], [46.5, 60030.0], [46.6, 60030.0], [46.7, 60030.0], [46.8, 60030.0], [46.9, 60030.0], [47.0, 60030.0], [47.1, 60030.0], [47.2, 60030.0], [47.3, 60030.0], [47.4, 60030.0], [47.5, 60030.0], [47.6, 60030.0], [47.7, 60030.0], [47.8, 60030.0], [47.9, 60030.0], [48.0, 60030.0], [48.1, 60030.0], [48.2, 60030.0], [48.3, 60030.0], [48.4, 60030.0], [48.5, 60030.0], [48.6, 60030.0], [48.7, 60030.0], [48.8, 60030.0], [48.9, 60030.0], [49.0, 60030.0], [49.1, 60030.0], [49.2, 60030.0], [49.3, 60031.0], [49.4, 60031.0], [49.5, 60031.0], [49.6, 60031.0], [49.7, 60031.0], [49.8, 60031.0], [49.9, 60031.0], [50.0, 60031.0], [50.1, 60031.0], [50.2, 60031.0], [50.3, 60031.0], [50.4, 60031.0], [50.5, 60031.0], [50.6, 60031.0], [50.7, 60031.0], [50.8, 60031.0], [50.9, 60031.0], [51.0, 60031.0], [51.1, 60031.0], [51.2, 60031.0], [51.3, 60031.0], [51.4, 60031.0], [51.5, 60031.0], [51.6, 60031.0], [51.7, 60031.0], [51.8, 60031.0], [51.9, 60031.0], [52.0, 60031.0], [52.1, 60031.0], [52.2, 60032.0], [52.3, 60032.0], [52.4, 60032.0], [52.5, 60032.0], [52.6, 60032.0], [52.7, 60032.0], [52.8, 60032.0], [52.9, 60032.0], [53.0, 60032.0], [53.1, 60032.0], [53.2, 60032.0], [53.3, 60032.0], [53.4, 60032.0], [53.5, 60032.0], [53.6, 60032.0], [53.7, 60032.0], [53.8, 60032.0], [53.9, 60032.0], [54.0, 60032.0], [54.1, 60032.0], [54.2, 60032.0], [54.3, 60032.0], [54.4, 60032.0], [54.5, 60032.0], [54.6, 60032.0], [54.7, 60032.0], [54.8, 60032.0], [54.9, 60032.0], [55.0, 60032.0], [55.1, 60032.0], [55.2, 60032.0], [55.3, 60032.0], [55.4, 60032.0], [55.5, 60032.0], [55.6, 60032.0], [55.7, 60032.0], [55.8, 60032.0], [55.9, 60032.0], [56.0, 60032.0], [56.1, 60032.0], [56.2, 60032.0], [56.3, 60032.0], [56.4, 60032.0], [56.5, 60033.0], [56.6, 60033.0], [56.7, 60033.0], [56.8, 60033.0], [56.9, 60033.0], [57.0, 60033.0], [57.1, 60033.0], [57.2, 60033.0], [57.3, 60033.0], [57.4, 60033.0], [57.5, 60033.0], [57.6, 60033.0], [57.7, 60033.0], [57.8, 60033.0], [57.9, 60033.0], [58.0, 60033.0], [58.1, 60033.0], [58.2, 60033.0], [58.3, 60033.0], [58.4, 60033.0], [58.5, 60033.0], [58.6, 60033.0], [58.7, 60034.0], [58.8, 60034.0], [58.9, 60034.0], [59.0, 60034.0], [59.1, 60034.0], [59.2, 60034.0], [59.3, 60034.0], [59.4, 60034.0], [59.5, 60034.0], [59.6, 60034.0], [59.7, 60034.0], [59.8, 60034.0], [59.9, 60034.0], [60.0, 60034.0], [60.1, 60034.0], [60.2, 60034.0], [60.3, 60035.0], [60.4, 60035.0], [60.5, 60035.0], [60.6, 60035.0], [60.7, 60035.0], [60.8, 60035.0], [60.9, 60035.0], [61.0, 60035.0], [61.1, 60035.0], [61.2, 60035.0], [61.3, 60035.0], [61.4, 60035.0], [61.5, 60035.0], [61.6, 60035.0], [61.7, 60035.0], [61.8, 60035.0], [61.9, 60035.0], [62.0, 60035.0], [62.1, 60035.0], [62.2, 60035.0], [62.3, 60035.0], [62.4, 60036.0], [62.5, 60036.0], [62.6, 60036.0], [62.7, 60036.0], [62.8, 60036.0], [62.9, 60036.0], [63.0, 60036.0], [63.1, 60036.0], [63.2, 60036.0], [63.3, 60036.0], [63.4, 60036.0], [63.5, 60036.0], [63.6, 60036.0], [63.7, 60036.0], [63.8, 60036.0], [63.9, 60036.0], [64.0, 60036.0], [64.1, 60037.0], [64.2, 60037.0], [64.3, 60037.0], [64.4, 60037.0], [64.5, 60037.0], [64.6, 60037.0], [64.7, 60037.0], [64.8, 60037.0], [64.9, 60037.0], [65.0, 60037.0], [65.1, 60037.0], [65.2, 60037.0], [65.3, 60037.0], [65.4, 60038.0], [65.5, 60038.0], [65.6, 60038.0], [65.7, 60038.0], [65.8, 60038.0], [65.9, 60038.0], [66.0, 60038.0], [66.1, 60038.0], [66.2, 60038.0], [66.3, 60038.0], [66.4, 60038.0], [66.5, 60039.0], [66.6, 60039.0], [66.7, 60039.0], [66.8, 60039.0], [66.9, 60039.0], [67.0, 60039.0], [67.1, 60039.0], [67.2, 60039.0], [67.3, 60039.0], [67.4, 60039.0], [67.5, 60039.0], [67.6, 60039.0], [67.7, 60039.0], [67.8, 60040.0], [67.9, 60040.0], [68.0, 60040.0], [68.1, 60040.0], [68.2, 60040.0], [68.3, 60040.0], [68.4, 60040.0], [68.5, 60040.0], [68.6, 60040.0], [68.7, 60040.0], [68.8, 60040.0], [68.9, 60040.0], [69.0, 60040.0], [69.1, 60040.0], [69.2, 60040.0], [69.3, 60041.0], [69.4, 60041.0], [69.5, 60041.0], [69.6, 60041.0], [69.7, 60041.0], [69.8, 60041.0], [69.9, 60041.0], [70.0, 60041.0], [70.1, 60041.0], [70.2, 60041.0], [70.3, 60041.0], [70.4, 60041.0], [70.5, 60042.0], [70.6, 60042.0], [70.7, 60042.0], [70.8, 60042.0], [70.9, 60042.0], [71.0, 60042.0], [71.1, 60042.0], [71.2, 60042.0], [71.3, 60042.0], [71.4, 60042.0], [71.5, 60042.0], [71.6, 60042.0], [71.7, 60042.0], [71.8, 60042.0], [71.9, 60042.0], [72.0, 60042.0], [72.1, 60043.0], [72.2, 60043.0], [72.3, 60043.0], [72.4, 60043.0], [72.5, 60043.0], [72.6, 60043.0], [72.7, 60043.0], [72.8, 60043.0], [72.9, 60043.0], [73.0, 60043.0], [73.1, 60043.0], [73.2, 60043.0], [73.3, 60043.0], [73.4, 60043.0], [73.5, 60043.0], [73.6, 60043.0], [73.7, 60043.0], [73.8, 60043.0], [73.9, 60044.0], [74.0, 60044.0], [74.1, 60044.0], [74.2, 60044.0], [74.3, 60044.0], [74.4, 60044.0], [74.5, 60044.0], [74.6, 60044.0], [74.7, 60044.0], [74.8, 60044.0], [74.9, 60045.0], [75.0, 60045.0], [75.1, 60045.0], [75.2, 60045.0], [75.3, 60045.0], [75.4, 60045.0], [75.5, 60045.0], [75.6, 60045.0], [75.7, 60045.0], [75.8, 60045.0], [75.9, 60045.0], [76.0, 60045.0], [76.1, 60045.0], [76.2, 60045.0], [76.3, 60045.0], [76.4, 60045.0], [76.5, 60045.0], [76.6, 60045.0], [76.7, 60046.0], [76.8, 60046.0], [76.9, 60046.0], [77.0, 60046.0], [77.1, 60046.0], [77.2, 60046.0], [77.3, 60046.0], [77.4, 60046.0], [77.5, 60047.0], [77.6, 60047.0], [77.7, 60047.0], [77.8, 60047.0], [77.9, 60047.0], [78.0, 60048.0], [78.1, 60048.0], [78.2, 60048.0], [78.3, 60048.0], [78.4, 60048.0], [78.5, 60048.0], [78.6, 60048.0], [78.7, 60048.0], [78.8, 60048.0], [78.9, 60049.0], [79.0, 60050.0], [79.1, 60050.0], [79.2, 60050.0], [79.3, 60050.0], [79.4, 60051.0], [79.5, 60051.0], [79.6, 60052.0], [79.7, 60053.0], [79.8, 60054.0], [79.9, 60054.0], [80.0, 60055.0], [80.1, 60055.0], [80.2, 60055.0], [80.3, 60055.0], [80.4, 60057.0], [80.5, 60058.0], [80.6, 60059.0], [80.7, 60060.0], [80.8, 60061.0], [80.9, 60063.0], [81.0, 60066.0], [81.1, 60067.0], [81.2, 60070.0], [81.3, 60070.0], [81.4, 60071.0], [81.5, 60071.0], [81.6, 60073.0], [81.7, 60074.0], [81.8, 60076.0], [81.9, 60078.0], [82.0, 60080.0], [82.1, 60082.0], [82.2, 60084.0], [82.3, 60085.0], [82.4, 60086.0], [82.5, 60088.0], [82.6, 60088.0], [82.7, 60089.0], [82.8, 60090.0], [82.9, 60090.0], [83.0, 60090.0], [83.1, 60091.0], [83.2, 60092.0], [83.3, 60092.0], [83.4, 60092.0], [83.5, 60093.0], [83.6, 60093.0], [83.7, 60096.0], [83.8, 60096.0], [83.9, 60097.0], [84.0, 60098.0], [84.1, 60098.0], [84.2, 60100.0], [84.3, 60100.0], [84.4, 60101.0], [84.5, 60101.0], [84.6, 60101.0], [84.7, 60102.0], [84.8, 60103.0], [84.9, 60103.0], [85.0, 60103.0], [85.1, 60104.0], [85.2, 60104.0], [85.3, 60104.0], [85.4, 60104.0], [85.5, 60104.0], [85.6, 60106.0], [85.7, 60106.0], [85.8, 60107.0], [85.9, 60107.0], [86.0, 60108.0], [86.1, 60111.0], [86.2, 60111.0], [86.3, 60112.0], [86.4, 60113.0], [86.5, 60114.0], [86.6, 60114.0], [86.7, 60115.0], [86.8, 60116.0], [86.9, 60118.0], [87.0, 60118.0], [87.1, 60118.0], [87.2, 60119.0], [87.3, 60121.0], [87.4, 60123.0], [87.5, 60123.0], [87.6, 60124.0], [87.7, 60124.0], [87.8, 60126.0], [87.9, 60126.0], [88.0, 60126.0], [88.1, 60126.0], [88.2, 60126.0], [88.3, 60126.0], [88.4, 60126.0], [88.5, 60127.0], [88.6, 60127.0], [88.7, 60129.0], [88.8, 60129.0], [88.9, 60129.0], [89.0, 60130.0], [89.1, 60130.0], [89.2, 60130.0], [89.3, 60130.0], [89.4, 60132.0], [89.5, 60132.0], [89.6, 60133.0], [89.7, 60133.0], [89.8, 60134.0], [89.9, 60135.0], [90.0, 60135.0], [90.1, 60136.0], [90.2, 60136.0], [90.3, 60136.0], [90.4, 60136.0], [90.5, 60136.0], [90.6, 60136.0], [90.7, 60136.0], [90.8, 60137.0], [90.9, 60138.0], [91.0, 60138.0], [91.1, 60138.0], [91.2, 60138.0], [91.3, 60139.0], [91.4, 60139.0], [91.5, 60139.0], [91.6, 60140.0], [91.7, 60140.0], [91.8, 60141.0], [91.9, 60141.0], [92.0, 60143.0], [92.1, 60143.0], [92.2, 60144.0], [92.3, 60152.0], [92.4, 60153.0], [92.5, 60153.0], [92.6, 60154.0], [92.7, 60154.0], [92.8, 60155.0], [92.9, 60155.0], [93.0, 60155.0], [93.1, 60155.0], [93.2, 60156.0], [93.3, 60157.0], [93.4, 60158.0], [93.5, 60159.0], [93.6, 60159.0], [93.7, 60160.0], [93.8, 60160.0], [93.9, 60162.0], [94.0, 60162.0], [94.1, 60164.0], [94.2, 60164.0], [94.3, 60164.0], [94.4, 60168.0], [94.5, 60169.0], [94.6, 60170.0], [94.7, 60171.0], [94.8, 60174.0], [94.9, 60174.0], [95.0, 60177.0], [95.1, 60178.0], [95.2, 60179.0], [95.3, 60180.0], [95.4, 60181.0], [95.5, 60184.0], [95.6, 60185.0], [95.7, 60188.0], [95.8, 60189.0], [95.9, 60190.0], [96.0, 60190.0], [96.1, 60191.0], [96.2, 60192.0], [96.3, 60195.0], [96.4, 60196.0], [96.5, 60199.0], [96.6, 60199.0], [96.7, 60201.0], [96.8, 60202.0], [96.9, 60203.0], [97.0, 60203.0], [97.1, 60206.0], [97.2, 60207.0], [97.3, 60210.0], [97.4, 60210.0], [97.5, 60211.0], [97.6, 60212.0], [97.7, 60215.0], [97.8, 60216.0], [97.9, 60217.0], [98.0, 60218.0], [98.1, 60219.0], [98.2, 60220.0], [98.3, 60221.0], [98.4, 60221.0], [98.5, 60221.0], [98.6, 60222.0], [98.7, 60222.0], [98.8, 60223.0], [98.9, 60223.0], [99.0, 60224.0], [99.1, 60225.0], [99.2, 60225.0], [99.3, 60228.0], [99.4, 60228.0], [99.5, 60228.0], [99.6, 60229.0], [99.7, 60231.0], [99.8, 60232.0], [99.9, 61039.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 26.0], [0.1, 29.0], [0.2, 36.0], [0.3, 46.0], [0.4, 50.0], [0.5, 52.0], [0.6, 55.0], [0.7, 56.0], [0.8, 60.0], [0.9, 63.0], [1.0, 69.0], [1.1, 75.0], [1.2, 85.0], [1.3, 91.0], [1.4, 100.0], [1.5, 102.0], [1.6, 104.0], [1.7, 107.0], [1.8, 110.0], [1.9, 115.0], [2.0, 117.0], [2.1, 127.0], [2.2, 136.0], [2.3, 141.0], [2.4, 147.0], [2.5, 164.0], [2.6, 171.0], [2.7, 174.0], [2.8, 178.0], [2.9, 181.0], [3.0, 185.0], [3.1, 188.0], [3.2, 204.0], [3.3, 216.0], [3.4, 223.0], [3.5, 249.0], [3.6, 271.0], [3.7, 289.0], [3.8, 293.0], [3.9, 298.0], [4.0, 304.0], [4.1, 307.0], [4.2, 309.0], [4.3, 311.0], [4.4, 314.0], [4.5, 316.0], [4.6, 317.0], [4.7, 319.0], [4.8, 319.0], [4.9, 320.0], [5.0, 321.0], [5.1, 321.0], [5.2, 323.0], [5.3, 324.0], [5.4, 325.0], [5.5, 327.0], [5.6, 328.0], [5.7, 331.0], [5.8, 335.0], [5.9, 336.0], [6.0, 338.0], [6.1, 342.0], [6.2, 345.0], [6.3, 348.0], [6.4, 350.0], [6.5, 352.0], [6.6, 354.0], [6.7, 356.0], [6.8, 357.0], [6.9, 359.0], [7.0, 362.0], [7.1, 364.0], [7.2, 367.0], [7.3, 368.0], [7.4, 370.0], [7.5, 371.0], [7.6, 374.0], [7.7, 376.0], [7.8, 381.0], [7.9, 384.0], [8.0, 386.0], [8.1, 389.0], [8.2, 391.0], [8.3, 393.0], [8.4, 395.0], [8.5, 396.0], [8.6, 398.0], [8.7, 399.0], [8.8, 400.0], [8.9, 401.0], [9.0, 402.0], [9.1, 403.0], [9.2, 404.0], [9.3, 405.0], [9.4, 406.0], [9.5, 406.0], [9.6, 407.0], [9.7, 408.0], [9.8, 408.0], [9.9, 409.0], [10.0, 409.0], [10.1, 410.0], [10.2, 411.0], [10.3, 411.0], [10.4, 412.0], [10.5, 413.0], [10.6, 414.0], [10.7, 414.0], [10.8, 416.0], [10.9, 417.0], [11.0, 418.0], [11.1, 420.0], [11.2, 421.0], [11.3, 422.0], [11.4, 424.0], [11.5, 425.0], [11.6, 426.0], [11.7, 427.0], [11.8, 428.0], [11.9, 429.0], [12.0, 430.0], [12.1, 431.0], [12.2, 432.0], [12.3, 433.0], [12.4, 434.0], [12.5, 435.0], [12.6, 436.0], [12.7, 437.0], [12.8, 438.0], [12.9, 440.0], [13.0, 441.0], [13.1, 443.0], [13.2, 444.0], [13.3, 445.0], [13.4, 446.0], [13.5, 447.0], [13.6, 448.0], [13.7, 448.0], [13.8, 449.0], [13.9, 449.0], [14.0, 450.0], [14.1, 451.0], [14.2, 451.0], [14.3, 452.0], [14.4, 453.0], [14.5, 454.0], [14.6, 454.0], [14.7, 455.0], [14.8, 456.0], [14.9, 457.0], [15.0, 458.0], [15.1, 459.0], [15.2, 460.0], [15.3, 461.0], [15.4, 462.0], [15.5, 463.0], [15.6, 464.0], [15.7, 465.0], [15.8, 466.0], [15.9, 467.0], [16.0, 469.0], [16.1, 470.0], [16.2, 471.0], [16.3, 472.0], [16.4, 473.0], [16.5, 474.0], [16.6, 475.0], [16.7, 477.0], [16.8, 478.0], [16.9, 479.0], [17.0, 480.0], [17.1, 482.0], [17.2, 483.0], [17.3, 485.0], [17.4, 486.0], [17.5, 488.0], [17.6, 489.0], [17.7, 490.0], [17.8, 491.0], [17.9, 492.0], [18.0, 493.0], [18.1, 494.0], [18.2, 495.0], [18.3, 497.0], [18.4, 499.0], [18.5, 500.0], [18.6, 502.0], [18.7, 504.0], [18.8, 505.0], [18.9, 506.0], [19.0, 507.0], [19.1, 508.0], [19.2, 509.0], [19.3, 510.0], [19.4, 511.0], [19.5, 512.0], [19.6, 512.0], [19.7, 513.0], [19.8, 514.0], [19.9, 514.0], [20.0, 515.0], [20.1, 516.0], [20.2, 516.0], [20.3, 517.0], [20.4, 517.0], [20.5, 518.0], [20.6, 518.0], [20.7, 519.0], [20.8, 519.0], [20.9, 520.0], [21.0, 521.0], [21.1, 521.0], [21.2, 522.0], [21.3, 523.0], [21.4, 523.0], [21.5, 524.0], [21.6, 524.0], [21.7, 525.0], [21.8, 525.0], [21.9, 526.0], [22.0, 526.0], [22.1, 527.0], [22.2, 528.0], [22.3, 528.0], [22.4, 529.0], [22.5, 529.0], [22.6, 530.0], [22.7, 530.0], [22.8, 530.0], [22.9, 531.0], [23.0, 531.0], [23.1, 532.0], [23.2, 532.0], [23.3, 532.0], [23.4, 533.0], [23.5, 533.0], [23.6, 534.0], [23.7, 534.0], [23.8, 535.0], [23.9, 535.0], [24.0, 535.0], [24.1, 536.0], [24.2, 536.0], [24.3, 537.0], [24.4, 537.0], [24.5, 538.0], [24.6, 538.0], [24.7, 539.0], [24.8, 539.0], [24.9, 540.0], [25.0, 540.0], [25.1, 540.0], [25.2, 541.0], [25.3, 541.0], [25.4, 542.0], [25.5, 542.0], [25.6, 542.0], [25.7, 543.0], [25.8, 543.0], [25.9, 544.0], [26.0, 544.0], [26.1, 545.0], [26.2, 545.0], [26.3, 545.0], [26.4, 545.0], [26.5, 546.0], [26.6, 546.0], [26.7, 546.0], [26.8, 547.0], [26.9, 547.0], [27.0, 547.0], [27.1, 548.0], [27.2, 548.0], [27.3, 548.0], [27.4, 549.0], [27.5, 549.0], [27.6, 549.0], [27.7, 550.0], [27.8, 550.0], [27.9, 550.0], [28.0, 551.0], [28.1, 551.0], [28.2, 551.0], [28.3, 552.0], [28.4, 552.0], [28.5, 552.0], [28.6, 552.0], [28.7, 553.0], [28.8, 553.0], [28.9, 553.0], [29.0, 553.0], [29.1, 554.0], [29.2, 554.0], [29.3, 554.0], [29.4, 555.0], [29.5, 555.0], [29.6, 555.0], [29.7, 556.0], [29.8, 556.0], [29.9, 556.0], [30.0, 557.0], [30.1, 557.0], [30.2, 557.0], [30.3, 558.0], [30.4, 558.0], [30.5, 559.0], [30.6, 559.0], [30.7, 559.0], [30.8, 560.0], [30.9, 560.0], [31.0, 560.0], [31.1, 560.0], [31.2, 561.0], [31.3, 561.0], [31.4, 561.0], [31.5, 561.0], [31.6, 562.0], [31.7, 562.0], [31.8, 562.0], [31.9, 563.0], [32.0, 563.0], [32.1, 563.0], [32.2, 563.0], [32.3, 564.0], [32.4, 564.0], [32.5, 564.0], [32.6, 564.0], [32.7, 564.0], [32.8, 565.0], [32.9, 565.0], [33.0, 565.0], [33.1, 565.0], [33.2, 566.0], [33.3, 566.0], [33.4, 566.0], [33.5, 566.0], [33.6, 567.0], [33.7, 567.0], [33.8, 567.0], [33.9, 568.0], [34.0, 568.0], [34.1, 568.0], [34.2, 568.0], [34.3, 568.0], [34.4, 569.0], [34.5, 569.0], [34.6, 570.0], [34.7, 570.0], [34.8, 570.0], [34.9, 571.0], [35.0, 571.0], [35.1, 571.0], [35.2, 572.0], [35.3, 572.0], [35.4, 572.0], [35.5, 573.0], [35.6, 573.0], [35.7, 573.0], [35.8, 574.0], [35.9, 574.0], [36.0, 574.0], [36.1, 575.0], [36.2, 575.0], [36.3, 575.0], [36.4, 576.0], [36.5, 576.0], [36.6, 577.0], [36.7, 577.0], [36.8, 577.0], [36.9, 578.0], [37.0, 578.0], [37.1, 579.0], [37.2, 579.0], [37.3, 580.0], [37.4, 580.0], [37.5, 581.0], [37.6, 582.0], [37.7, 582.0], [37.8, 583.0], [37.9, 583.0], [38.0, 583.0], [38.1, 584.0], [38.2, 585.0], [38.3, 585.0], [38.4, 585.0], [38.5, 586.0], [38.6, 586.0], [38.7, 586.0], [38.8, 587.0], [38.9, 587.0], [39.0, 588.0], [39.1, 588.0], [39.2, 589.0], [39.3, 589.0], [39.4, 590.0], [39.5, 590.0], [39.6, 591.0], [39.7, 591.0], [39.8, 592.0], [39.9, 592.0], [40.0, 593.0], [40.1, 593.0], [40.2, 594.0], [40.3, 594.0], [40.4, 595.0], [40.5, 595.0], [40.6, 595.0], [40.7, 596.0], [40.8, 596.0], [40.9, 597.0], [41.0, 597.0], [41.1, 597.0], [41.2, 598.0], [41.3, 598.0], [41.4, 598.0], [41.5, 599.0], [41.6, 599.0], [41.7, 599.0], [41.8, 599.0], [41.9, 600.0], [42.0, 600.0], [42.1, 600.0], [42.2, 601.0], [42.3, 601.0], [42.4, 601.0], [42.5, 602.0], [42.6, 602.0], [42.7, 602.0], [42.8, 603.0], [42.9, 603.0], [43.0, 603.0], [43.1, 603.0], [43.2, 604.0], [43.3, 604.0], [43.4, 604.0], [43.5, 604.0], [43.6, 605.0], [43.7, 605.0], [43.8, 605.0], [43.9, 605.0], [44.0, 605.0], [44.1, 606.0], [44.2, 606.0], [44.3, 606.0], [44.4, 606.0], [44.5, 606.0], [44.6, 606.0], [44.7, 607.0], [44.8, 607.0], [44.9, 607.0], [45.0, 607.0], [45.1, 608.0], [45.2, 608.0], [45.3, 608.0], [45.4, 608.0], [45.5, 608.0], [45.6, 609.0], [45.7, 609.0], [45.8, 609.0], [45.9, 609.0], [46.0, 610.0], [46.1, 610.0], [46.2, 610.0], [46.3, 610.0], [46.4, 611.0], [46.5, 611.0], [46.6, 611.0], [46.7, 611.0], [46.8, 612.0], [46.9, 612.0], [47.0, 612.0], [47.1, 612.0], [47.2, 613.0], [47.3, 613.0], [47.4, 613.0], [47.5, 613.0], [47.6, 614.0], [47.7, 614.0], [47.8, 614.0], [47.9, 614.0], [48.0, 615.0], [48.1, 615.0], [48.2, 615.0], [48.3, 616.0], [48.4, 616.0], [48.5, 617.0], [48.6, 617.0], [48.7, 617.0], [48.8, 617.0], [48.9, 618.0], [49.0, 618.0], [49.1, 618.0], [49.2, 618.0], [49.3, 619.0], [49.4, 619.0], [49.5, 619.0], [49.6, 619.0], [49.7, 620.0], [49.8, 620.0], [49.9, 620.0], [50.0, 621.0], [50.1, 621.0], [50.2, 621.0], [50.3, 622.0], [50.4, 622.0], [50.5, 622.0], [50.6, 623.0], [50.7, 623.0], [50.8, 624.0], [50.9, 624.0], [51.0, 624.0], [51.1, 625.0], [51.2, 625.0], [51.3, 625.0], [51.4, 626.0], [51.5, 626.0], [51.6, 627.0], [51.7, 627.0], [51.8, 628.0], [51.9, 628.0], [52.0, 628.0], [52.1, 629.0], [52.2, 629.0], [52.3, 629.0], [52.4, 629.0], [52.5, 630.0], [52.6, 630.0], [52.7, 630.0], [52.8, 630.0], [52.9, 631.0], [53.0, 631.0], [53.1, 631.0], [53.2, 631.0], [53.3, 631.0], [53.4, 632.0], [53.5, 632.0], [53.6, 632.0], [53.7, 632.0], [53.8, 632.0], [53.9, 633.0], [54.0, 633.0], [54.1, 633.0], [54.2, 633.0], [54.3, 633.0], [54.4, 634.0], [54.5, 634.0], [54.6, 634.0], [54.7, 634.0], [54.8, 634.0], [54.9, 635.0], [55.0, 635.0], [55.1, 635.0], [55.2, 635.0], [55.3, 635.0], [55.4, 636.0], [55.5, 636.0], [55.6, 636.0], [55.7, 636.0], [55.8, 637.0], [55.9, 637.0], [56.0, 637.0], [56.1, 637.0], [56.2, 638.0], [56.3, 638.0], [56.4, 638.0], [56.5, 638.0], [56.6, 638.0], [56.7, 639.0], [56.8, 639.0], [56.9, 639.0], [57.0, 640.0], [57.1, 640.0], [57.2, 640.0], [57.3, 640.0], [57.4, 641.0], [57.5, 641.0], [57.6, 641.0], [57.7, 641.0], [57.8, 642.0], [57.9, 642.0], [58.0, 642.0], [58.1, 643.0], [58.2, 643.0], [58.3, 643.0], [58.4, 644.0], [58.5, 644.0], [58.6, 644.0], [58.7, 644.0], [58.8, 645.0], [58.9, 645.0], [59.0, 645.0], [59.1, 646.0], [59.2, 646.0], [59.3, 646.0], [59.4, 647.0], [59.5, 647.0], [59.6, 647.0], [59.7, 648.0], [59.8, 648.0], [59.9, 649.0], [60.0, 649.0], [60.1, 649.0], [60.2, 649.0], [60.3, 650.0], [60.4, 650.0], [60.5, 650.0], [60.6, 651.0], [60.7, 651.0], [60.8, 652.0], [60.9, 652.0], [61.0, 652.0], [61.1, 653.0], [61.2, 653.0], [61.3, 654.0], [61.4, 654.0], [61.5, 654.0], [61.6, 655.0], [61.7, 656.0], [61.8, 656.0], [61.9, 656.0], [62.0, 657.0], [62.1, 657.0], [62.2, 657.0], [62.3, 658.0], [62.4, 658.0], [62.5, 659.0], [62.6, 659.0], [62.7, 660.0], [62.8, 660.0], [62.9, 661.0], [63.0, 662.0], [63.1, 662.0], [63.2, 663.0], [63.3, 664.0], [63.4, 665.0], [63.5, 665.0], [63.6, 666.0], [63.7, 667.0], [63.8, 668.0], [63.9, 669.0], [64.0, 669.0], [64.1, 670.0], [64.2, 671.0], [64.3, 672.0], [64.4, 673.0], [64.5, 674.0], [64.6, 675.0], [64.7, 676.0], [64.8, 677.0], [64.9, 678.0], [65.0, 679.0], [65.1, 680.0], [65.2, 681.0], [65.3, 683.0], [65.4, 684.0], [65.5, 686.0], [65.6, 687.0], [65.7, 688.0], [65.8, 689.0], [65.9, 690.0], [66.0, 692.0], [66.1, 695.0], [66.2, 697.0], [66.3, 700.0], [66.4, 708.0], [66.5, 715.0], [66.6, 717.0], [66.7, 721.0], [66.8, 723.0], [66.9, 724.0], [67.0, 725.0], [67.1, 727.0], [67.2, 727.0], [67.3, 729.0], [67.4, 730.0], [67.5, 731.0], [67.6, 732.0], [67.7, 735.0], [67.8, 739.0], [67.9, 741.0], [68.0, 746.0], [68.1, 759.0], [68.2, 801.0], [68.3, 819.0], [68.4, 833.0], [68.5, 841.0], [68.6, 849.0], [68.7, 866.0], [68.8, 1033.0], [68.9, 1051.0], [69.0, 1218.0], [69.1, 1266.0], [69.2, 1298.0], [69.3, 1306.0], [69.4, 1317.0], [69.5, 1327.0], [69.6, 1340.0], [69.7, 1346.0], [69.8, 1351.0], [69.9, 1360.0], [70.0, 1365.0], [70.1, 1371.0], [70.2, 1375.0], [70.3, 1381.0], [70.4, 1391.0], [70.5, 1395.0], [70.6, 1401.0], [70.7, 1405.0], [70.8, 1409.0], [70.9, 1412.0], [71.0, 1416.0], [71.1, 1419.0], [71.2, 1422.0], [71.3, 1428.0], [71.4, 1434.0], [71.5, 1438.0], [71.6, 1443.0], [71.7, 1448.0], [71.8, 1452.0], [71.9, 1455.0], [72.0, 1457.0], [72.1, 1459.0], [72.2, 1461.0], [72.3, 1463.0], [72.4, 1466.0], [72.5, 1469.0], [72.6, 1472.0], [72.7, 1474.0], [72.8, 1478.0], [72.9, 1480.0], [73.0, 1485.0], [73.1, 1489.0], [73.2, 1495.0], [73.3, 1503.0], [73.4, 1511.0], [73.5, 1517.0], [73.6, 1521.0], [73.7, 1525.0], [73.8, 1527.0], [73.9, 1530.0], [74.0, 1532.0], [74.1, 1535.0], [74.2, 1538.0], [74.3, 1540.0], [74.4, 1542.0], [74.5, 1543.0], [74.6, 1545.0], [74.7, 1546.0], [74.8, 1548.0], [74.9, 1549.0], [75.0, 1551.0], [75.1, 1552.0], [75.2, 1553.0], [75.3, 1554.0], [75.4, 1555.0], [75.5, 1556.0], [75.6, 1558.0], [75.7, 1559.0], [75.8, 1560.0], [75.9, 1562.0], [76.0, 1563.0], [76.1, 1564.0], [76.2, 1566.0], [76.3, 1568.0], [76.4, 1569.0], [76.5, 1571.0], [76.6, 1573.0], [76.7, 1574.0], [76.8, 1576.0], [76.9, 1577.0], [77.0, 1578.0], [77.1, 1580.0], [77.2, 1582.0], [77.3, 1583.0], [77.4, 1584.0], [77.5, 1585.0], [77.6, 1587.0], [77.7, 1588.0], [77.8, 1589.0], [77.9, 1590.0], [78.0, 1591.0], [78.1, 1592.0], [78.2, 1593.0], [78.3, 1595.0], [78.4, 1596.0], [78.5, 1598.0], [78.6, 1600.0], [78.7, 1602.0], [78.8, 1604.0], [78.9, 1605.0], [79.0, 1607.0], [79.1, 1608.0], [79.2, 1610.0], [79.3, 1611.0], [79.4, 1613.0], [79.5, 1614.0], [79.6, 1616.0], [79.7, 1617.0], [79.8, 1619.0], [79.9, 1620.0], [80.0, 1622.0], [80.1, 1623.0], [80.2, 1625.0], [80.3, 1626.0], [80.4, 1627.0], [80.5, 1629.0], [80.6, 1630.0], [80.7, 1632.0], [80.8, 1634.0], [80.9, 1636.0], [81.0, 1637.0], [81.1, 1638.0], [81.2, 1640.0], [81.3, 1641.0], [81.4, 1642.0], [81.5, 1644.0], [81.6, 1646.0], [81.7, 1647.0], [81.8, 1648.0], [81.9, 1650.0], [82.0, 1651.0], [82.1, 1653.0], [82.2, 1656.0], [82.3, 1658.0], [82.4, 1660.0], [82.5, 1663.0], [82.6, 1666.0], [82.7, 1670.0], [82.8, 1676.0], [82.9, 1681.0], [83.0, 1688.0], [83.1, 1693.0], [83.2, 1703.0], [83.3, 1736.0], [83.4, 1808.0], [83.5, 1836.0], [83.6, 1872.0], [83.7, 2569.0], [83.8, 2600.0], [83.9, 2654.0], [84.0, 3040.0], [84.1, 3045.0], [84.2, 3049.0], [84.3, 3060.0], [84.4, 3067.0], [84.5, 3072.0], [84.6, 3079.0], [84.7, 3090.0], [84.8, 3112.0], [84.9, 3138.0], [85.0, 3159.0], [85.1, 3306.0], [85.2, 3349.0], [85.3, 3385.0], [85.4, 3412.0], [85.5, 3422.0], [85.6, 3431.0], [85.7, 3444.0], [85.8, 3458.0], [85.9, 3470.0], [86.0, 3482.0], [86.1, 3493.0], [86.2, 3510.0], [86.3, 3522.0], [86.4, 3534.0], [86.5, 3542.0], [86.6, 3550.0], [86.7, 3558.0], [86.8, 3566.0], [86.9, 3573.0], [87.0, 3580.0], [87.1, 3584.0], [87.2, 3589.0], [87.3, 3598.0], [87.4, 3611.0], [87.5, 3617.0], [87.6, 3625.0], [87.7, 3631.0], [87.8, 3638.0], [87.9, 3647.0], [88.0, 3652.0], [88.1, 3656.0], [88.2, 3660.0], [88.3, 3664.0], [88.4, 3670.0], [88.5, 3679.0], [88.6, 4621.0], [88.7, 7047.0], [88.8, 7060.0], [88.9, 7078.0], [89.0, 7341.0], [89.1, 7438.0], [89.2, 7484.0], [89.3, 7546.0], [89.4, 7574.0], [89.5, 7594.0], [89.6, 7625.0], [89.7, 7656.0], [89.8, 15047.0], [89.9, 15059.0], [90.0, 15067.0], [90.1, 15380.0], [90.2, 15550.0], [90.3, 21014.0], [90.4, 21017.0], [90.5, 21020.0], [90.6, 21022.0], [90.7, 21024.0], [90.8, 21026.0], [90.9, 21027.0], [91.0, 21028.0], [91.1, 21028.0], [91.2, 21029.0], [91.3, 21029.0], [91.4, 21030.0], [91.5, 21030.0], [91.6, 21030.0], [91.7, 21031.0], [91.8, 21031.0], [91.9, 21031.0], [92.0, 21032.0], [92.1, 21032.0], [92.2, 21032.0], [92.3, 21033.0], [92.4, 21033.0], [92.5, 21033.0], [92.6, 21033.0], [92.7, 21034.0], [92.8, 21034.0], [92.9, 21034.0], [93.0, 21034.0], [93.1, 21035.0], [93.2, 21035.0], [93.3, 21035.0], [93.4, 21035.0], [93.5, 21036.0], [93.6, 21036.0], [93.7, 21036.0], [93.8, 21037.0], [93.9, 21037.0], [94.0, 21037.0], [94.1, 21037.0], [94.2, 21038.0], [94.3, 21038.0], [94.4, 21038.0], [94.5, 21038.0], [94.6, 21039.0], [94.7, 21039.0], [94.8, 21039.0], [94.9, 21040.0], [95.0, 21040.0], [95.1, 21040.0], [95.2, 21040.0], [95.3, 21041.0], [95.4, 21041.0], [95.5, 21041.0], [95.6, 21042.0], [95.7, 21042.0], [95.8, 21042.0], [95.9, 21042.0], [96.0, 21043.0], [96.1, 21043.0], [96.2, 21043.0], [96.3, 21044.0], [96.4, 21044.0], [96.5, 21045.0], [96.6, 21045.0], [96.7, 21045.0], [96.8, 21046.0], [96.9, 21046.0], [97.0, 21046.0], [97.1, 21047.0], [97.2, 21047.0], [97.3, 21047.0], [97.4, 21048.0], [97.5, 21048.0], [97.6, 21049.0], [97.7, 21049.0], [97.8, 21049.0], [97.9, 21050.0], [98.0, 21050.0], [98.1, 21050.0], [98.2, 21051.0], [98.3, 21051.0], [98.4, 21052.0], [98.5, 21052.0], [98.6, 21053.0], [98.7, 21054.0], [98.8, 21054.0], [98.9, 21055.0], [99.0, 21056.0], [99.1, 21056.0], [99.2, 21057.0], [99.3, 21058.0], [99.4, 21059.0], [99.5, 21061.0], [99.6, 21062.0], [99.7, 21063.0], [99.8, 21064.0], [99.9, 21065.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12082.0], [0.1, 12082.0], [0.2, 12083.0], [0.3, 12083.0], [0.4, 12088.0], [0.5, 12088.0], [0.6, 12088.0], [0.7, 12102.0], [0.8, 12104.0], [0.9, 12105.0], [1.0, 12105.0], [1.1, 12105.0], [1.2, 12106.0], [1.3, 12106.0], [1.4, 12107.0], [1.5, 12109.0], [1.6, 12110.0], [1.7, 12110.0], [1.8, 12115.0], [1.9, 12116.0], [2.0, 12116.0], [2.1, 12117.0], [2.2, 12118.0], [2.3, 12119.0], [2.4, 12121.0], [2.5, 12121.0], [2.6, 12122.0], [2.7, 12126.0], [2.8, 12127.0], [2.9, 12127.0], [3.0, 12127.0], [3.1, 12128.0], [3.2, 12128.0], [3.3, 12128.0], [3.4, 12131.0], [3.5, 12133.0], [3.6, 12133.0], [3.7, 12134.0], [3.8, 12135.0], [3.9, 12136.0], [4.0, 12138.0], [4.1, 12138.0], [4.2, 12156.0], [4.3, 12157.0], [4.4, 12158.0], [4.5, 12158.0], [4.6, 12159.0], [4.7, 12159.0], [4.8, 12160.0], [4.9, 12160.0], [5.0, 12160.0], [5.1, 12161.0], [5.2, 12165.0], [5.3, 12166.0], [5.4, 12166.0], [5.5, 12169.0], [5.6, 12169.0], [5.7, 12169.0], [5.8, 12170.0], [5.9, 12171.0], [6.0, 12172.0], [6.1, 12172.0], [6.2, 12173.0], [6.3, 12173.0], [6.4, 12173.0], [6.5, 12173.0], [6.6, 12173.0], [6.7, 12174.0], [6.8, 12174.0], [6.9, 12174.0], [7.0, 12174.0], [7.1, 12175.0], [7.2, 12176.0], [7.3, 12176.0], [7.4, 12176.0], [7.5, 12177.0], [7.6, 12178.0], [7.7, 12178.0], [7.8, 12178.0], [7.9, 12179.0], [8.0, 12179.0], [8.1, 12179.0], [8.2, 12179.0], [8.3, 12179.0], [8.4, 12179.0], [8.5, 12179.0], [8.6, 12180.0], [8.7, 12180.0], [8.8, 12180.0], [8.9, 12180.0], [9.0, 12180.0], [9.1, 12180.0], [9.2, 12181.0], [9.3, 12181.0], [9.4, 12181.0], [9.5, 12181.0], [9.6, 12181.0], [9.7, 12181.0], [9.8, 12181.0], [9.9, 12182.0], [10.0, 12182.0], [10.1, 12182.0], [10.2, 12182.0], [10.3, 12182.0], [10.4, 12182.0], [10.5, 12183.0], [10.6, 12184.0], [10.7, 12184.0], [10.8, 12184.0], [10.9, 12184.0], [11.0, 12184.0], [11.1, 12184.0], [11.2, 12185.0], [11.3, 12185.0], [11.4, 12185.0], [11.5, 12185.0], [11.6, 12185.0], [11.7, 12185.0], [11.8, 12185.0], [11.9, 12186.0], [12.0, 12186.0], [12.1, 12186.0], [12.2, 12186.0], [12.3, 12186.0], [12.4, 12186.0], [12.5, 12187.0], [12.6, 12187.0], [12.7, 12188.0], [12.8, 12188.0], [12.9, 12188.0], [13.0, 12188.0], [13.1, 12188.0], [13.2, 12189.0], [13.3, 12189.0], [13.4, 12189.0], [13.5, 12189.0], [13.6, 12189.0], [13.7, 12189.0], [13.8, 12190.0], [13.9, 12192.0], [14.0, 12192.0], [14.1, 12193.0], [14.2, 12198.0], [14.3, 12201.0], [14.4, 12201.0], [14.5, 12202.0], [14.6, 12203.0], [14.7, 12203.0], [14.8, 12204.0], [14.9, 12205.0], [15.0, 12206.0], [15.1, 12206.0], [15.2, 12206.0], [15.3, 12206.0], [15.4, 12207.0], [15.5, 12209.0], [15.6, 12210.0], [15.7, 12211.0], [15.8, 12212.0], [15.9, 12213.0], [16.0, 12214.0], [16.1, 12214.0], [16.2, 12214.0], [16.3, 12215.0], [16.4, 12215.0], [16.5, 12215.0], [16.6, 12215.0], [16.7, 12215.0], [16.8, 12216.0], [16.9, 12216.0], [17.0, 12216.0], [17.1, 12216.0], [17.2, 12217.0], [17.3, 12217.0], [17.4, 12217.0], [17.5, 12217.0], [17.6, 12217.0], [17.7, 12217.0], [17.8, 12217.0], [17.9, 12217.0], [18.0, 12218.0], [18.1, 12218.0], [18.2, 12218.0], [18.3, 12218.0], [18.4, 12218.0], [18.5, 12218.0], [18.6, 12219.0], [18.7, 12219.0], [18.8, 12220.0], [18.9, 12220.0], [19.0, 12221.0], [19.1, 12221.0], [19.2, 12222.0], [19.3, 12222.0], [19.4, 12222.0], [19.5, 12223.0], [19.6, 12223.0], [19.7, 12223.0], [19.8, 12224.0], [19.9, 12224.0], [20.0, 12224.0], [20.1, 12224.0], [20.2, 12224.0], [20.3, 12224.0], [20.4, 12224.0], [20.5, 12225.0], [20.6, 12225.0], [20.7, 12226.0], [20.8, 12226.0], [20.9, 12227.0], [21.0, 12227.0], [21.1, 12227.0], [21.2, 12228.0], [21.3, 12228.0], [21.4, 12228.0], [21.5, 12228.0], [21.6, 12229.0], [21.7, 12229.0], [21.8, 12229.0], [21.9, 12230.0], [22.0, 12230.0], [22.1, 12230.0], [22.2, 12230.0], [22.3, 12230.0], [22.4, 12230.0], [22.5, 12231.0], [22.6, 12231.0], [22.7, 12231.0], [22.8, 12231.0], [22.9, 12231.0], [23.0, 12232.0], [23.1, 12232.0], [23.2, 12232.0], [23.3, 12232.0], [23.4, 12233.0], [23.5, 12233.0], [23.6, 12233.0], [23.7, 12234.0], [23.8, 12234.0], [23.9, 12235.0], [24.0, 12236.0], [24.1, 12236.0], [24.2, 12236.0], [24.3, 12236.0], [24.4, 12237.0], [24.5, 12237.0], [24.6, 12238.0], [24.7, 12238.0], [24.8, 12238.0], [24.9, 12239.0], [25.0, 12239.0], [25.1, 12239.0], [25.2, 12239.0], [25.3, 12240.0], [25.4, 12240.0], [25.5, 12240.0], [25.6, 12240.0], [25.7, 12240.0], [25.8, 12240.0], [25.9, 12241.0], [26.0, 12241.0], [26.1, 12241.0], [26.2, 12241.0], [26.3, 12242.0], [26.4, 12242.0], [26.5, 12242.0], [26.6, 12242.0], [26.7, 12242.0], [26.8, 12243.0], [26.9, 12243.0], [27.0, 12244.0], [27.1, 12244.0], [27.2, 12245.0], [27.3, 12247.0], [27.4, 12247.0], [27.5, 12248.0], [27.6, 12248.0], [27.7, 12248.0], [27.8, 12249.0], [27.9, 12249.0], [28.0, 12249.0], [28.1, 12249.0], [28.2, 12250.0], [28.3, 12250.0], [28.4, 12250.0], [28.5, 12250.0], [28.6, 12251.0], [28.7, 12251.0], [28.8, 12251.0], [28.9, 12251.0], [29.0, 12251.0], [29.1, 12252.0], [29.2, 12252.0], [29.3, 12252.0], [29.4, 12253.0], [29.5, 12253.0], [29.6, 12253.0], [29.7, 12253.0], [29.8, 12253.0], [29.9, 12253.0], [30.0, 12253.0], [30.1, 12253.0], [30.2, 12254.0], [30.3, 12254.0], [30.4, 12254.0], [30.5, 12254.0], [30.6, 12254.0], [30.7, 12254.0], [30.8, 12255.0], [30.9, 12255.0], [31.0, 12255.0], [31.1, 12255.0], [31.2, 12255.0], [31.3, 12255.0], [31.4, 12256.0], [31.5, 12256.0], [31.6, 12256.0], [31.7, 12256.0], [31.8, 12256.0], [31.9, 12256.0], [32.0, 12256.0], [32.1, 12256.0], [32.2, 12256.0], [32.3, 12257.0], [32.4, 12257.0], [32.5, 12257.0], [32.6, 12257.0], [32.7, 12257.0], [32.8, 12257.0], [32.9, 12257.0], [33.0, 12257.0], [33.1, 12257.0], [33.2, 12257.0], [33.3, 12257.0], [33.4, 12257.0], [33.5, 12257.0], [33.6, 12257.0], [33.7, 12257.0], [33.8, 12257.0], [33.9, 12257.0], [34.0, 12257.0], [34.1, 12258.0], [34.2, 12258.0], [34.3, 12258.0], [34.4, 12258.0], [34.5, 12259.0], [34.6, 12259.0], [34.7, 12259.0], [34.8, 12259.0], [34.9, 12259.0], [35.0, 12259.0], [35.1, 12259.0], [35.2, 12260.0], [35.3, 12260.0], [35.4, 12260.0], [35.5, 12260.0], [35.6, 12260.0], [35.7, 12260.0], [35.8, 12260.0], [35.9, 12261.0], [36.0, 12261.0], [36.1, 12261.0], [36.2, 12261.0], [36.3, 12261.0], [36.4, 12261.0], [36.5, 12261.0], [36.6, 12261.0], [36.7, 12261.0], [36.8, 12262.0], [36.9, 12262.0], [37.0, 12262.0], [37.1, 12262.0], [37.2, 12262.0], [37.3, 12262.0], [37.4, 12263.0], [37.5, 12263.0], [37.6, 12263.0], [37.7, 12263.0], [37.8, 12263.0], [37.9, 12263.0], [38.0, 12263.0], [38.1, 12263.0], [38.2, 12263.0], [38.3, 12263.0], [38.4, 12263.0], [38.5, 12264.0], [38.6, 12264.0], [38.7, 12264.0], [38.8, 12264.0], [38.9, 12265.0], [39.0, 12265.0], [39.1, 12265.0], [39.2, 12265.0], [39.3, 12265.0], [39.4, 12265.0], [39.5, 12265.0], [39.6, 12265.0], [39.7, 12266.0], [39.8, 12266.0], [39.9, 12266.0], [40.0, 12266.0], [40.1, 12267.0], [40.2, 12267.0], [40.3, 12267.0], [40.4, 12267.0], [40.5, 12268.0], [40.6, 12268.0], [40.7, 12268.0], [40.8, 12269.0], [40.9, 12269.0], [41.0, 12269.0], [41.1, 12269.0], [41.2, 12270.0], [41.3, 12270.0], [41.4, 12270.0], [41.5, 12271.0], [41.6, 12271.0], [41.7, 12271.0], [41.8, 12272.0], [41.9, 12273.0], [42.0, 12273.0], [42.1, 12273.0], [42.2, 12273.0], [42.3, 12274.0], [42.4, 12275.0], [42.5, 12275.0], [42.6, 12276.0], [42.7, 12278.0], [42.8, 12280.0], [42.9, 12280.0], [43.0, 12280.0], [43.1, 12281.0], [43.2, 12284.0], [43.3, 12286.0], [43.4, 12287.0], [43.5, 12287.0], [43.6, 12289.0], [43.7, 12289.0], [43.8, 12290.0], [43.9, 12292.0], [44.0, 12294.0], [44.1, 12295.0], [44.2, 12296.0], [44.3, 12296.0], [44.4, 12298.0], [44.5, 12300.0], [44.6, 12301.0], [44.7, 12302.0], [44.8, 12303.0], [44.9, 12303.0], [45.0, 12304.0], [45.1, 12305.0], [45.2, 12306.0], [45.3, 12306.0], [45.4, 12307.0], [45.5, 12307.0], [45.6, 12308.0], [45.7, 12310.0], [45.8, 12310.0], [45.9, 12311.0], [46.0, 12312.0], [46.1, 12312.0], [46.2, 12313.0], [46.3, 12313.0], [46.4, 12314.0], [46.5, 12315.0], [46.6, 12315.0], [46.7, 12317.0], [46.8, 12319.0], [46.9, 12319.0], [47.0, 12320.0], [47.1, 12321.0], [47.2, 12321.0], [47.3, 12321.0], [47.4, 12323.0], [47.5, 12323.0], [47.6, 12327.0], [47.7, 12329.0], [47.8, 12330.0], [47.9, 12330.0], [48.0, 12330.0], [48.1, 12330.0], [48.2, 12331.0], [48.3, 12331.0], [48.4, 12331.0], [48.5, 12332.0], [48.6, 12333.0], [48.7, 12334.0], [48.8, 12334.0], [48.9, 12335.0], [49.0, 12336.0], [49.1, 12337.0], [49.2, 12338.0], [49.3, 12340.0], [49.4, 12340.0], [49.5, 12341.0], [49.6, 12343.0], [49.7, 12343.0], [49.8, 12344.0], [49.9, 12344.0], [50.0, 12344.0], [50.1, 12344.0], [50.2, 12344.0], [50.3, 12345.0], [50.4, 12348.0], [50.5, 12348.0], [50.6, 12349.0], [50.7, 12349.0], [50.8, 12350.0], [50.9, 12352.0], [51.0, 12354.0], [51.1, 12359.0], [51.2, 12360.0], [51.3, 12360.0], [51.4, 12361.0], [51.5, 12365.0], [51.6, 12366.0], [51.7, 12367.0], [51.8, 12368.0], [51.9, 12369.0], [52.0, 12370.0], [52.1, 12371.0], [52.2, 12371.0], [52.3, 12372.0], [52.4, 12372.0], [52.5, 12373.0], [52.6, 12374.0], [52.7, 12374.0], [52.8, 12376.0], [52.9, 12378.0], [53.0, 12379.0], [53.1, 12379.0], [53.2, 12379.0], [53.3, 12380.0], [53.4, 12381.0], [53.5, 12381.0], [53.6, 12382.0], [53.7, 12383.0], [53.8, 12383.0], [53.9, 12383.0], [54.0, 12385.0], [54.1, 12388.0], [54.2, 12388.0], [54.3, 12388.0], [54.4, 12389.0], [54.5, 12390.0], [54.6, 12391.0], [54.7, 12394.0], [54.8, 12396.0], [54.9, 12397.0], [55.0, 12398.0], [55.1, 12399.0], [55.2, 12401.0], [55.3, 12403.0], [55.4, 12404.0], [55.5, 12404.0], [55.6, 12407.0], [55.7, 12408.0], [55.8, 12409.0], [55.9, 12410.0], [56.0, 12410.0], [56.1, 12410.0], [56.2, 12410.0], [56.3, 12413.0], [56.4, 12413.0], [56.5, 12413.0], [56.6, 12414.0], [56.7, 12416.0], [56.8, 12416.0], [56.9, 12416.0], [57.0, 12416.0], [57.1, 12417.0], [57.2, 12417.0], [57.3, 12417.0], [57.4, 12417.0], [57.5, 12418.0], [57.6, 12419.0], [57.7, 12419.0], [57.8, 12420.0], [57.9, 12421.0], [58.0, 12422.0], [58.1, 12424.0], [58.2, 12425.0], [58.3, 12426.0], [58.4, 12426.0], [58.5, 12427.0], [58.6, 12428.0], [58.7, 12428.0], [58.8, 12428.0], [58.9, 12430.0], [59.0, 12431.0], [59.1, 12431.0], [59.2, 12432.0], [59.3, 12433.0], [59.4, 12433.0], [59.5, 12434.0], [59.6, 12435.0], [59.7, 12437.0], [59.8, 12438.0], [59.9, 12440.0], [60.0, 12442.0], [60.1, 12443.0], [60.2, 12443.0], [60.3, 12444.0], [60.4, 12446.0], [60.5, 12447.0], [60.6, 12447.0], [60.7, 12447.0], [60.8, 12449.0], [60.9, 12450.0], [61.0, 12450.0], [61.1, 12450.0], [61.2, 12450.0], [61.3, 12451.0], [61.4, 12451.0], [61.5, 12452.0], [61.6, 12456.0], [61.7, 12456.0], [61.8, 12458.0], [61.9, 12459.0], [62.0, 12459.0], [62.1, 12459.0], [62.2, 12461.0], [62.3, 12464.0], [62.4, 12465.0], [62.5, 12465.0], [62.6, 12466.0], [62.7, 12466.0], [62.8, 12466.0], [62.9, 12468.0], [63.0, 12472.0], [63.1, 12473.0], [63.2, 12473.0], [63.3, 12474.0], [63.4, 12475.0], [63.5, 12475.0], [63.6, 12476.0], [63.7, 12478.0], [63.8, 12479.0], [63.9, 12479.0], [64.0, 12480.0], [64.1, 12483.0], [64.2, 12483.0], [64.3, 12488.0], [64.4, 12489.0], [64.5, 12492.0], [64.6, 12492.0], [64.7, 12493.0], [64.8, 12494.0], [64.9, 12498.0], [65.0, 12498.0], [65.1, 12499.0], [65.2, 12499.0], [65.3, 12500.0], [65.4, 12500.0], [65.5, 12501.0], [65.6, 12501.0], [65.7, 12504.0], [65.8, 12506.0], [65.9, 12507.0], [66.0, 12510.0], [66.1, 12511.0], [66.2, 12511.0], [66.3, 12513.0], [66.4, 12514.0], [66.5, 12516.0], [66.6, 12517.0], [66.7, 12517.0], [66.8, 12518.0], [66.9, 12519.0], [67.0, 12519.0], [67.1, 12522.0], [67.2, 12525.0], [67.3, 12526.0], [67.4, 12526.0], [67.5, 12526.0], [67.6, 12531.0], [67.7, 12532.0], [67.8, 12533.0], [67.9, 12533.0], [68.0, 12534.0], [68.1, 12536.0], [68.2, 12537.0], [68.3, 12539.0], [68.4, 12540.0], [68.5, 12540.0], [68.6, 12540.0], [68.7, 12541.0], [68.8, 12541.0], [68.9, 12542.0], [69.0, 12542.0], [69.1, 12542.0], [69.2, 12544.0], [69.3, 12544.0], [69.4, 12545.0], [69.5, 12546.0], [69.6, 12547.0], [69.7, 12547.0], [69.8, 12548.0], [69.9, 12548.0], [70.0, 12550.0], [70.1, 12550.0], [70.2, 12550.0], [70.3, 12551.0], [70.4, 12552.0], [70.5, 12553.0], [70.6, 12553.0], [70.7, 12554.0], [70.8, 12554.0], [70.9, 12554.0], [71.0, 12555.0], [71.1, 12556.0], [71.2, 12557.0], [71.3, 12558.0], [71.4, 12559.0], [71.5, 12559.0], [71.6, 12561.0], [71.7, 12562.0], [71.8, 12562.0], [71.9, 12566.0], [72.0, 12566.0], [72.1, 12566.0], [72.2, 12568.0], [72.3, 12571.0], [72.4, 12573.0], [72.5, 12573.0], [72.6, 12573.0], [72.7, 12574.0], [72.8, 12574.0], [72.9, 12574.0], [73.0, 12574.0], [73.1, 12575.0], [73.2, 12575.0], [73.3, 12575.0], [73.4, 12578.0], [73.5, 12580.0], [73.6, 12580.0], [73.7, 12580.0], [73.8, 12582.0], [73.9, 12582.0], [74.0, 12583.0], [74.1, 12585.0], [74.2, 12587.0], [74.3, 12588.0], [74.4, 12589.0], [74.5, 12590.0], [74.6, 12591.0], [74.7, 12594.0], [74.8, 12595.0], [74.9, 12595.0], [75.0, 12597.0], [75.1, 12597.0], [75.2, 12598.0], [75.3, 12600.0], [75.4, 12603.0], [75.5, 12603.0], [75.6, 12604.0], [75.7, 12605.0], [75.8, 12606.0], [75.9, 12606.0], [76.0, 12609.0], [76.1, 12609.0], [76.2, 12611.0], [76.3, 12611.0], [76.4, 12612.0], [76.5, 12612.0], [76.6, 12613.0], [76.7, 12614.0], [76.8, 12616.0], [76.9, 12617.0], [77.0, 12618.0], [77.1, 12618.0], [77.2, 12619.0], [77.3, 12619.0], [77.4, 12619.0], [77.5, 12619.0], [77.6, 12620.0], [77.7, 12623.0], [77.8, 12623.0], [77.9, 12624.0], [78.0, 12624.0], [78.1, 12624.0], [78.2, 12625.0], [78.3, 12626.0], [78.4, 12627.0], [78.5, 12629.0], [78.6, 12631.0], [78.7, 12631.0], [78.8, 12632.0], [78.9, 12636.0], [79.0, 12637.0], [79.1, 12638.0], [79.2, 12638.0], [79.3, 12639.0], [79.4, 12641.0], [79.5, 12642.0], [79.6, 12643.0], [79.7, 12644.0], [79.8, 12644.0], [79.9, 12644.0], [80.0, 12646.0], [80.1, 12646.0], [80.2, 12647.0], [80.3, 12648.0], [80.4, 12649.0], [80.5, 12651.0], [80.6, 12651.0], [80.7, 12652.0], [80.8, 12652.0], [80.9, 12653.0], [81.0, 12654.0], [81.1, 12654.0], [81.2, 12655.0], [81.3, 12659.0], [81.4, 12659.0], [81.5, 12660.0], [81.6, 12660.0], [81.7, 12663.0], [81.8, 12663.0], [81.9, 12664.0], [82.0, 12665.0], [82.1, 12665.0], [82.2, 12667.0], [82.3, 12668.0], [82.4, 12670.0], [82.5, 12670.0], [82.6, 12670.0], [82.7, 12672.0], [82.8, 12673.0], [82.9, 12674.0], [83.0, 12674.0], [83.1, 12675.0], [83.2, 12675.0], [83.3, 12676.0], [83.4, 12678.0], [83.5, 12679.0], [83.6, 12680.0], [83.7, 12680.0], [83.8, 12680.0], [83.9, 12681.0], [84.0, 12681.0], [84.1, 12684.0], [84.2, 12685.0], [84.3, 12688.0], [84.4, 12690.0], [84.5, 12691.0], [84.6, 12691.0], [84.7, 12692.0], [84.8, 12694.0], [84.9, 12696.0], [85.0, 12697.0], [85.1, 12698.0], [85.2, 12698.0], [85.3, 12699.0], [85.4, 12700.0], [85.5, 12701.0], [85.6, 12702.0], [85.7, 12702.0], [85.8, 12702.0], [85.9, 12706.0], [86.0, 12707.0], [86.1, 12707.0], [86.2, 12708.0], [86.3, 12709.0], [86.4, 12710.0], [86.5, 12711.0], [86.6, 12714.0], [86.7, 12715.0], [86.8, 12718.0], [86.9, 12719.0], [87.0, 12719.0], [87.1, 12719.0], [87.2, 12720.0], [87.3, 12720.0], [87.4, 12721.0], [87.5, 12722.0], [87.6, 12723.0], [87.7, 12723.0], [87.8, 12726.0], [87.9, 12726.0], [88.0, 12728.0], [88.1, 12732.0], [88.2, 12735.0], [88.3, 12736.0], [88.4, 12737.0], [88.5, 12740.0], [88.6, 12740.0], [88.7, 12741.0], [88.8, 12741.0], [88.9, 12742.0], [89.0, 12744.0], [89.1, 12745.0], [89.2, 12745.0], [89.3, 12745.0], [89.4, 12747.0], [89.5, 12747.0], [89.6, 12748.0], [89.7, 12748.0], [89.8, 12748.0], [89.9, 12750.0], [90.0, 12750.0], [90.1, 12751.0], [90.2, 12751.0], [90.3, 12752.0], [90.4, 12752.0], [90.5, 12753.0], [90.6, 12754.0], [90.7, 12755.0], [90.8, 12755.0], [90.9, 12755.0], [91.0, 12756.0], [91.1, 12757.0], [91.2, 12757.0], [91.3, 12759.0], [91.4, 12759.0], [91.5, 12759.0], [91.6, 12760.0], [91.7, 12760.0], [91.8, 12760.0], [91.9, 12762.0], [92.0, 12762.0], [92.1, 12763.0], [92.2, 12764.0], [92.3, 12764.0], [92.4, 12765.0], [92.5, 12766.0], [92.6, 12766.0], [92.7, 12767.0], [92.8, 12767.0], [92.9, 12769.0], [93.0, 12769.0], [93.1, 12771.0], [93.2, 12775.0], [93.3, 12779.0], [93.4, 12781.0], [93.5, 12781.0], [93.6, 12781.0], [93.7, 12783.0], [93.8, 12784.0], [93.9, 12785.0], [94.0, 12785.0], [94.1, 12785.0], [94.2, 12787.0], [94.3, 12788.0], [94.4, 12789.0], [94.5, 12793.0], [94.6, 12796.0], [94.7, 12798.0], [94.8, 12801.0], [94.9, 12803.0], [95.0, 12804.0], [95.1, 12804.0], [95.2, 12805.0], [95.3, 12807.0], [95.4, 12808.0], [95.5, 12809.0], [95.6, 12810.0], [95.7, 12812.0], [95.8, 12813.0], [95.9, 12815.0], [96.0, 12815.0], [96.1, 12818.0], [96.2, 12823.0], [96.3, 12825.0], [96.4, 12826.0], [96.5, 12828.0], [96.6, 12828.0], [96.7, 12829.0], [96.8, 12830.0], [96.9, 12832.0], [97.0, 12837.0], [97.1, 12837.0], [97.2, 12837.0], [97.3, 12841.0], [97.4, 12843.0], [97.5, 12843.0], [97.6, 12845.0], [97.7, 12846.0], [97.8, 12852.0], [97.9, 12853.0], [98.0, 12870.0], [98.1, 12874.0], [98.2, 12876.0], [98.3, 12876.0], [98.4, 12882.0], [98.5, 12883.0], [98.6, 12883.0], [98.7, 12884.0], [98.8, 12895.0], [98.9, 12899.0], [99.0, 12903.0], [99.1, 13044.0], [99.2, 13046.0], [99.3, 13047.0], [99.4, 13149.0], [99.5, 13203.0], [99.6, 13224.0], [99.7, 13246.0], [99.8, 13410.0], [99.9, 13534.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10137.0, "series": [{"data": [[60000.0, 842.0], [60100.0, 125.0], [60200.0, 32.0], [61000.0, 1.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 580.0], [600.0, 10137.0], [700.0, 791.0], [800.0, 239.0], [1000.0, 86.0], [1100.0, 3.0], [1200.0, 101.0], [1300.0, 562.0], [1400.0, 1114.0], [1500.0, 2196.0], [1600.0, 1907.0], [1700.0, 96.0], [1800.0, 90.0], [2400.0, 7.0], [2500.0, 67.0], [2600.0, 62.0], [2700.0, 17.0], [3000.0, 306.0], [3100.0, 116.0], [3300.0, 109.0], [3200.0, 35.0], [3400.0, 329.0], [3500.0, 482.0], [3600.0, 507.0], [3700.0, 8.0], [3800.0, 15.0], [4200.0, 1.0], [4600.0, 4.0], [4500.0, 2.0], [4400.0, 1.0], [4700.0, 3.0], [5600.0, 2.0], [6600.0, 1.0], [7100.0, 15.0], [7000.0, 129.0], [7400.0, 72.0], [7300.0, 30.0], [7200.0, 3.0], [7600.0, 99.0], [7500.0, 125.0], [7700.0, 3.0], [7800.0, 1.0], [8500.0, 1.0], [8600.0, 1.0], [10600.0, 1.0], [15300.0, 20.0], [15200.0, 2.0], [15100.0, 2.0], [15000.0, 112.0], [15600.0, 13.0], [15500.0, 13.0], [15800.0, 1.0], [15400.0, 32.0], [21000.0, 4035.0], [21100.0, 5.0], [100.0, 731.0], [200.0, 322.0], [300.0, 1994.0], [400.0, 4011.0], [500.0, 9687.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12200.0, 302.0], [12000.0, 6.0], [12100.0, 137.0], [12600.0, 101.0], [12500.0, 101.0], [12700.0, 94.0], [12300.0, 106.0], [12400.0, 101.0], [12800.0, 42.0], [12900.0, 1.0], [13200.0, 3.0], [13100.0, 1.0], [13000.0, 3.0], [13500.0, 1.0], [13400.0, 1.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 61000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 596.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 27896.0, "series": [{"data": [[0.0, 596.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 27896.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 10904.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 4040.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 505.1170000000013, "minX": 1.61758014E12, "maxY": 1000.0, "series": [{"data": [[1.6175802E12, 505.1170000000013]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.61758014E12, 508.8330000000001]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.6175802E12, 1000.0], [1.61758026E12, 596.2877930476949], [1.61758014E12, 980.8568397303279]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758026E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 36.0, "minX": 1.0, "maxY": 61039.0, "series": [{"data": [[1013.0, 60035.58333333333], [1001.0, 61039.0], [1079.0, 60028.0], [1062.0, 60028.0], [1084.0, 60029.0], [1087.0, 60027.0], [1057.0, 60028.5], [1059.0, 60028.0], [1058.0, 60031.0], [1061.0, 60028.0], [1060.0, 60028.0], [1064.0, 60028.5], [1066.0, 60028.0], [1065.0, 60031.0], [1068.0, 60029.0], [1067.0, 60028.0], [1071.0, 60028.0], [1070.0, 60028.5], [1086.0, 60028.0], [1085.0, 60030.0], [1083.0, 60029.0], [1082.0, 60029.0], [1081.0, 60028.5], [1078.0, 60028.0], [1076.0, 60028.0], [1074.0, 60030.0], [1072.0, 60028.0], [1055.0, 60028.0], [1031.0, 60027.0], [1030.0, 60033.41176470588], [1033.0, 60027.0], [1032.0, 60027.0], [1036.0, 60026.0], [1035.0, 60027.5], [1038.0, 60027.0], [1037.0, 60027.0], [1054.0, 60027.5], [1052.0, 60027.0], [1051.0, 60027.0], [1050.0, 60027.0], [1049.0, 60028.0], [1047.0, 60027.0], [1046.0, 60027.0], [1045.0, 60028.0], [1044.0, 60027.0], [1043.0, 60029.0], [1042.0, 60027.0], [1041.0, 60026.0], [1040.0, 60029.0], [1141.0, 60028.0], [1126.0, 60026.0], [1146.0, 60028.5], [1150.0, 60028.0], [1120.0, 60028.5], [1122.0, 60027.0], [1121.0, 60027.0], [1125.0, 60027.0], [1124.0, 60027.0], [1127.0, 60027.0], [1130.0, 60027.5], [1128.0, 60026.0], [1133.0, 60028.0], [1132.0, 60027.5], [1135.0, 60027.0], [1134.0, 60026.0], [1149.0, 60031.0], [1148.0, 60026.5], [1144.0, 60027.0], [1143.0, 60027.0], [1142.0, 60026.0], [1140.0, 60027.0], [1139.0, 60027.0], [1138.0, 60027.0], [1137.0, 60027.5], [1118.0, 60028.5], [1088.0, 60029.0], [1090.0, 60027.0], [1089.0, 60028.0], [1093.0, 60027.0], [1092.0, 60028.0], [1095.0, 60028.0], [1094.0, 60028.0], [1097.0, 60029.0], [1096.0, 60028.0], [1100.0, 60027.5], [1098.0, 60028.0], [1103.0, 60029.0], [1102.0, 60027.5], [1116.0, 60028.0], [1115.0, 60029.0], [1112.0, 60030.0], [1110.0, 60028.0], [1109.0, 60027.0], [1108.0, 60027.0], [1107.0, 60030.0], [1106.0, 60027.5], [1104.0, 60028.0], [1203.0, 60027.0], [1190.0, 60027.0], [1209.0, 60028.5], [1213.0, 60026.0], [1185.0, 60028.0], [1184.0, 60028.0], [1187.0, 60028.0], [1186.0, 60028.0], [1189.0, 60027.0], [1188.0, 60030.0], [1191.0, 60028.0], [1194.0, 60027.0], [1193.0, 60028.5], [1197.0, 60028.5], [1195.0, 60026.0], [1199.0, 60027.0], [1198.0, 60027.0], [1212.0, 60026.5], [1211.0, 60029.0], [1207.0, 60028.0], [1206.0, 60028.0], [1205.0, 60027.5], [1202.0, 60027.0], [1201.0, 60027.0], [1200.0, 60028.0], [1167.0, 60026.5], [1165.0, 60027.0], [1164.0, 60027.0], [1163.0, 60027.0], [1162.0, 60027.0], [1161.0, 60027.666666666664], [1158.0, 60027.0], [1157.0, 60026.0], [1156.0, 60031.0], [1155.0, 60028.0], [1154.0, 60030.0], [1153.0, 60027.0], [1152.0, 60027.5], [1183.0, 60028.0], [1182.0, 60028.0], [1181.0, 60027.0], [1180.0, 60032.5], [1179.0, 60031.333333333336], [1175.0, 60028.0], [1174.0, 60028.5], [1172.0, 60027.0], [1171.0, 60028.0], [1169.0, 60027.0], [1168.0, 60027.0], [1267.0, 60034.100000000006], [1273.0, 60026.5], [1277.0, 60028.0], [1250.0, 60029.0], [1248.0, 60029.0], [1261.0, 60041.0], [1251.0, 60029.0], [1276.0, 60028.5], [1274.0, 60027.0], [1271.0, 60026.5], [1269.0, 60027.0], [1268.0, 60027.0], [1266.0, 60039.25], [1265.0, 60042.0], [1246.0, 60031.0], [1216.0, 60028.666666666664], [1218.0, 60027.0], [1217.0, 60027.0], [1222.0, 60027.5], [1220.0, 60028.5], [1224.0, 60028.0], [1223.0, 60028.0], [1226.0, 60028.0], [1225.0, 60028.0], [1229.0, 60029.0], [1227.0, 60028.0], [1231.0, 60028.0], [1230.0, 60027.0], [1245.0, 60029.5], [1243.0, 60029.5], [1241.0, 60028.0], [1240.0, 60028.0], [1239.0, 60030.0], [1238.0, 60028.0], [1236.0, 60028.0], [1235.0, 60028.0], [1234.0, 60027.5], [1232.0, 60028.0], [1315.0, 60029.0], [1339.0, 60028.0], [1343.0, 60028.0], [1312.0, 60027.0], [1314.0, 60027.0], [1313.0, 60030.0], [1316.0, 60028.0], [1318.0, 60028.0], [1317.0, 60029.0], [1324.0, 60029.0], [1320.0, 60028.5], [1327.0, 60029.0], [1326.0, 60029.0], [1342.0, 60027.5], [1340.0, 60027.0], [1338.0, 60028.0], [1337.0, 60027.0], [1336.0, 60032.0], [1335.0, 60029.0], [1334.0, 60028.0], [1333.0, 60028.666666666664], [1330.0, 60029.666666666664], [1294.0, 60027.0], [1293.0, 60027.0], [1292.0, 60026.5], [1290.0, 60028.5], [1288.0, 60029.0], [1286.0, 60029.333333333336], [1283.0, 60029.666666666664], [1280.0, 60028.333333333336], [1311.0, 60029.0], [1310.0, 60027.0], [1309.0, 60029.0], [1307.0, 60032.0], [1306.0, 60027.0], [1305.0, 60029.0], [1304.0, 60029.0], [1303.0, 60028.5], [1301.0, 60028.5], [1299.0, 60028.0], [1298.0, 60026.5], [1296.0, 60028.5], [1379.0, 60030.0], [1384.0, 60027.0], [1406.0, 60033.4375], [1371.0, 60031.0], [1346.0, 60028.0], [1345.0, 60027.5], [1348.0, 60028.0], [1347.0, 60028.0], [1353.0, 60028.5], [1349.0, 60028.0], [1359.0, 60029.5], [1357.0, 60030.25], [1370.0, 60031.0], [1369.0, 60031.71428571428], [1362.0, 60030.666666666664], [1378.0, 60029.833333333336], [1390.0, 60031.0], [1387.0, 60026.0], [1386.0, 60028.0], [1383.0, 60028.0], [1382.0, 60042.0], [1381.0, 60029.0], [1466.0, 60029.0], [1471.0, 60028.0], [1442.0, 60028.5], [1440.0, 60027.5], [1445.0, 60027.5], [1443.0, 60027.0], [1448.0, 60027.0], [1447.0, 60028.5], [1451.0, 60028.5], [1449.0, 60026.0], [1455.0, 60030.0], [1453.0, 60027.5], [1470.0, 60028.0], [1468.0, 60030.5], [1465.0, 60028.5], [1463.0, 60028.0], [1462.0, 60028.0], [1459.0, 60028.5], [1457.0, 60028.0], [1456.0, 60028.0], [1438.0, 60027.0], [1409.0, 60027.0], [1408.0, 60026.5], [1411.0, 60027.0], [1410.0, 60027.0], [1415.0, 60028.0], [1412.0, 60027.0], [1417.0, 60030.0], [1416.0, 60029.0], [1421.0, 60029.0], [1418.0, 60028.0], [1423.0, 60030.0], [1422.0, 60030.0], [1437.0, 60027.0], [1436.0, 60027.0], [1435.0, 60027.0], [1434.0, 60027.5], [1432.0, 60026.5], [1430.0, 60027.5], [1428.0, 60028.0], [1427.0, 60027.5], [1425.0, 60028.0], [1424.0, 60029.0], [1527.0, 60038.0], [1511.0, 60035.0], [1531.0, 60040.5], [1504.0, 60034.0], [1508.0, 60035.0], [1507.0, 60034.0], [1524.0, 60033.5], [1522.0, 60035.0], [1520.0, 60043.0], [1487.0, 60032.0], [1486.0, 60028.5], [1484.0, 60032.0], [1483.0, 60027.5], [1481.0, 60031.0], [1480.0, 60029.5], [1478.0, 60028.5], [1476.0, 60027.5], [1474.0, 60027.0], [1473.0, 60029.0], [1472.0, 60028.0], [1503.0, 60035.25], [1499.0, 60032.0], [1498.0, 60032.666666666664], [1495.0, 60031.0], [1493.0, 60029.0], [1492.0, 60034.0], [1491.0, 60030.0], [1519.0, 60034.0], [1515.0, 60038.0], [1513.0, 60036.5], [1573.0, 60055.0], [1577.0, 60040.0], [1599.0, 60044.5], [1572.0, 60052.77777777778], [1574.0, 60050.0], [1597.0, 60045.2], [1592.0, 60040.16666666667], [1586.0, 60039.0], [1563.0, 60047.88888888888], [1537.0, 60042.5], [1540.0, 60044.0], [1538.0, 60045.0], [1545.0, 60045.0], [1544.0, 60045.25], [1548.0, 60043.5], [1546.0, 60045.0], [1551.0, 60042.5], [1549.0, 60042.0], [1554.0, 60042.5], [1552.0, 60044.0], [1583.0, 60037.5], [1581.0, 60038.5], [1579.0, 60036.0], [1576.0, 60038.0], [1575.0, 60042.0], [1661.0, 60037.0], [1660.0, 60047.57142857143], [1659.0, 60058.666666666664], [1658.0, 60056.5], [1600.0, 60046.0], [1722.0, 60028.0], [1726.0, 60028.0], [1727.0, 60028.0], [1705.0, 60199.91304347826], [1704.0, 60219.0], [1709.0, 60027.0], [1708.0, 60028.0], [1725.0, 60028.0], [1724.0, 60028.0], [1723.0, 60027.0], [1721.0, 60224.600000000006], [1679.0, 60138.42857142857], [1678.0, 60130.333333333336], [1677.0, 60159.0], [1676.0, 60144.28571428572], [1675.0, 60120.49999999999], [1674.0, 60155.0], [1673.0, 60170.0], [1684.0, 60082.833333333336], [1683.0, 60107.0], [1682.0, 60121.0], [1681.0, 60153.0], [1680.0, 60147.5], [1711.0, 60029.0], [1710.0, 60029.0], [1787.0, 60027.0], [1788.0, 60028.0], [1761.0, 60190.0], [1764.0, 60028.0], [1762.0, 60029.0], [1766.0, 60028.0], [1765.0, 60027.0], [1768.0, 60029.0], [1767.0, 60027.0], [1786.0, 60032.0], [1785.0, 60030.5], [1783.0, 60027.0], [1782.0, 60097.0], [1780.0, 60050.1], [1743.0, 60028.5], [1741.0, 60028.0], [1740.0, 60028.0], [1739.0, 60028.0], [1738.0, 60030.0], [1737.0, 60029.5], [1735.0, 60224.5], [1729.0, 60029.0], [1728.0, 60030.0], [1759.0, 60029.0], [1758.0, 60029.0], [1756.0, 60029.0], [1755.0, 60027.5], [1753.0, 60028.0], [1752.0, 60144.0], [1749.0, 60026.0], [1748.0, 60028.0], [1746.0, 60026.0], [1745.0, 60028.0], [1744.0, 60029.0], [1770.0, 60030.0], [1769.0, 60027.0], [1842.0, 60037.0], [1853.0, 60071.0], [1854.0, 60048.0], [1824.0, 60032.0], [1828.0, 60035.0], [1826.0, 60033.5], [1851.0, 60045.2], [1846.0, 60041.333333333336], [1843.0, 60038.0], [1823.0, 60030.666666666664], [1797.0, 60084.0], [1793.0, 60034.2], [1799.0, 60028.0], [1798.0, 60029.0], [1801.0, 60028.0], [1800.0, 60029.0], [1804.0, 60029.0], [1803.0, 60029.0], [1807.0, 60079.0], [1805.0, 60029.0], [1820.0, 60029.0], [1819.0, 60032.0], [1817.0, 60028.0], [1815.0, 60070.0], [1813.0, 60028.0], [1812.0, 60028.0], [1811.0, 60029.0], [1810.0, 60029.5], [1808.0, 60028.0], [1839.0, 60034.0], [1837.0, 60036.0], [1836.0, 60041.5], [1830.0, 60036.0], [1869.0, 60041.0], [1918.0, 60101.333333333336], [1915.0, 60126.91666666667], [1914.0, 60120.0], [1901.0, 60131.83333333333], [1895.0, 60113.8125], [1879.0, 60076.6], [1874.0, 60061.8], [1868.0, 60042.0], [1867.0, 60041.0], [1866.0, 60043.0], [1865.0, 60043.0], [1864.0, 60045.0], [1863.0, 60044.0], [1862.0, 60046.0], [1861.0, 60045.0], [1859.0, 60045.0], [1858.0, 60045.5], [1856.0, 60046.5], [1966.0, 60048.2], [1961.0, 60048.142857142855], [1954.0, 60101.54545454545], [1943.0, 60104.6], [1940.0, 60117.5], [1936.0, 60113.08333333333], [1932.0, 60093.0], [1923.0, 60128.6], [2000.0, 60028.0], [1999.0, 60028.0], [1995.0, 60029.0], [1994.0, 60029.0], [1989.0, 60031.0], [1988.0, 60031.0], [1986.0, 60031.5], [1984.0, 60032.33333333332]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1505.114000000001, 60054.33900000003]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 15069.0], [3.0, 15068.0], [4.0, 15067.0], [5.0, 15065.0], [6.0, 15064.0], [7.0, 15066.0], [8.0, 15064.0], [10.0, 15063.5], [11.0, 15066.0], [12.0, 15066.0], [13.0, 15061.0], [14.0, 15061.0], [15.0, 15060.0], [16.0, 15061.0], [17.0, 15062.0], [18.0, 15062.0], [19.0, 15063.0], [20.0, 15064.0], [21.0, 15063.0], [22.0, 15062.0], [23.0, 15061.0], [24.0, 15060.0], [25.0, 21034.0], [26.0, 15069.0], [27.0, 15069.0], [28.0, 15052.0], [29.0, 15074.0], [30.0, 15050.0], [31.0, 15050.0], [33.0, 21030.0], [32.0, 21028.0], [35.0, 21028.0], [34.0, 21029.0], [37.0, 15049.0], [36.0, 15049.0], [39.0, 21039.0], [38.0, 21040.0], [41.0, 21037.0], [40.0, 15048.0], [43.0, 21036.0], [42.0, 15065.0], [45.0, 15058.0], [44.0, 15059.0], [47.0, 21033.0], [46.0, 15064.0], [49.0, 21032.0], [48.0, 15059.0], [51.0, 21033.0], [50.0, 21047.0], [53.0, 15058.0], [52.0, 21032.0], [55.0, 15057.0], [54.0, 15057.0], [57.0, 15058.0], [56.0, 21048.0], [59.0, 21046.0], [58.0, 21048.0], [61.0, 21043.0], [60.0, 15050.0], [63.0, 21042.0], [62.0, 21042.0], [67.0, 21037.0], [66.0, 15048.0], [65.0, 15048.0], [64.0, 15049.0], [71.0, 15045.0], [70.0, 21037.0], [69.0, 15046.0], [68.0, 15047.0], [75.0, 15066.0], [74.0, 15063.0], [73.0, 15045.0], [72.0, 21036.0], [79.0, 21032.0], [78.0, 15045.0], [77.0, 15054.0], [76.0, 21035.0], [83.0, 21029.0], [82.0, 21032.0], [80.0, 21034.0], [87.0, 21029.0], [86.0, 21030.0], [85.0, 21029.0], [84.0, 21033.0], [91.0, 21031.0], [90.0, 21034.0], [89.0, 21035.0], [88.0, 21034.0], [95.0, 21030.0], [94.0, 21030.0], [93.0, 21032.0], [92.0, 21030.0], [99.0, 21046.0], [98.0, 15044.0], [97.0, 21027.0], [96.0, 21032.0], [103.0, 21035.0], [102.0, 21045.0], [101.0, 21046.0], [100.0, 21049.0], [107.0, 21047.0], [106.0, 21045.0], [105.0, 21042.0], [104.0, 21044.0], [111.0, 21041.0], [110.0, 21046.0], [109.0, 21046.0], [108.0, 21046.0], [115.0, 21066.0], [114.0, 21046.0], [113.0, 21030.0], [112.0, 21029.0], [119.0, 21066.0], [118.0, 21062.0], [117.0, 21060.0], [116.0, 21064.0], [123.0, 21058.0], [122.0, 21059.0], [121.0, 21063.0], [120.0, 21063.0], [127.0, 21061.0], [126.0, 21062.0], [125.0, 21048.0], [124.0, 21059.0], [135.0, 21045.0], [134.0, 21044.0], [133.0, 21046.0], [132.0, 21045.0], [131.0, 21056.0], [130.0, 21058.0], [129.0, 21056.0], [128.0, 21062.0], [143.0, 21065.0], [142.0, 21063.0], [141.0, 21044.0], [140.0, 21044.0], [139.0, 21043.0], [138.0, 21045.0], [137.0, 21047.0], [136.0, 21043.0], [151.0, 21058.0], [150.0, 21062.0], [149.0, 21056.0], [148.0, 21066.0], [147.0, 21060.0], [145.0, 21058.0], [144.0, 21060.0], [159.0, 21043.0], [158.0, 21054.0], [157.0, 21053.0], [156.0, 21056.0], [155.0, 21055.0], [154.0, 21060.0], [153.0, 21055.0], [152.0, 21059.0], [167.0, 21046.5], [165.0, 21046.0], [164.0, 7052.0], [163.0, 7048.0], [162.0, 21044.0], [161.0, 21045.0], [160.0, 21045.0], [175.0, 21061.0], [174.0, 21057.0], [173.0, 21061.0], [172.0, 21060.0], [171.0, 21060.0], [170.0, 7049.0], [169.0, 21045.0], [168.0, 21045.0], [183.0, 7050.0], [182.0, 7048.0], [181.0, 21044.0], [180.0, 21044.0], [179.0, 21043.0], [178.0, 15054.0], [177.0, 21056.0], [176.0, 21057.0], [190.0, 21059.5], [189.0, 21066.5], [186.0, 7051.0], [185.0, 7047.0], [199.0, 21062.0], [198.0, 21064.0], [197.0, 21059.0], [196.0, 21060.0], [195.0, 21063.0], [194.0, 21057.0], [193.0, 21054.0], [192.0, 14057.0], [207.0, 21058.0], [206.0, 21059.0], [205.0, 21052.0], [204.0, 21049.0], [203.0, 21065.0], [202.0, 21048.0], [201.0, 21056.0], [200.0, 21056.0], [215.0, 21045.0], [214.0, 21052.0], [213.0, 21057.0], [212.0, 21056.0], [211.0, 21054.0], [210.0, 21055.0], [209.0, 21051.0], [208.0, 21051.0], [223.0, 7049.0], [222.0, 7046.0], [221.0, 21043.0], [220.0, 21044.0], [219.0, 7049.0], [218.0, 21044.0], [217.0, 21044.0], [216.0, 21043.0], [231.0, 21063.0], [230.0, 21051.0], [229.0, 21061.0], [228.0, 21060.0], [227.0, 21056.5], [225.0, 21063.0], [224.0, 21062.0], [239.0, 21060.0], [238.0, 21058.0], [237.0, 21045.0], [236.0, 21059.0], [235.0, 21059.0], [234.0, 21062.0], [233.0, 21059.5], [247.0, 21060.0], [246.0, 21061.0], [245.0, 21057.0], [244.0, 7046.0], [243.0, 7047.0], [242.0, 21053.0], [241.0, 21044.0], [240.0, 21059.0], [253.0, 21056.0], [252.0, 21057.0], [251.0, 21060.0], [250.0, 21056.0], [249.0, 21056.0], [248.0, 21059.0], [270.0, 21061.0], [271.0, 21062.0], [269.0, 21062.0], [268.0, 21050.0], [267.0, 21048.0], [266.0, 21049.0], [265.0, 21061.0], [264.0, 21068.0], [263.0, 21063.0], [259.0, 7048.0], [258.0, 21043.5], [256.0, 7047.666666666667], [261.0, 21062.0], [286.0, 7046.0], [285.0, 7046.0], [275.0, 21057.0], [274.0, 21061.0], [273.0, 21055.0], [272.0, 21047.0], [283.0, 7047.0], [282.0, 7073.0], [281.0, 21056.0], [280.0, 21053.0], [279.0, 21054.0], [278.0, 21058.0], [277.0, 21054.0], [276.0, 7053.0], [302.0, 21054.0], [303.0, 21042.0], [301.0, 21054.0], [300.0, 21056.0], [299.0, 21044.0], [298.0, 21057.0], [297.0, 21057.0], [296.0, 21059.0], [295.0, 21058.0], [289.0, 21058.0], [288.0, 21049.5], [291.0, 21055.0], [290.0, 21057.0], [294.0, 21046.0], [293.0, 21040.0], [292.0, 21042.0], [318.0, 21063.0], [319.0, 21045.0], [317.0, 7047.0], [316.0, 21053.0], [315.0, 21040.0], [314.0, 21054.0], [313.0, 21054.0], [312.0, 21043.0], [311.0, 21043.0], [304.0, 21042.0], [307.0, 21051.0], [305.0, 21041.0], [310.0, 21051.5], [308.0, 21044.0], [333.0, 21058.0], [335.0, 21062.5], [332.0, 21059.0], [323.0, 21056.0], [322.0, 21045.0], [321.0, 21052.5], [331.0, 21039.0], [330.0, 21054.0], [329.0, 21054.0], [328.0, 21053.0], [327.0, 21057.0], [326.0, 21043.0], [325.0, 21055.0], [324.0, 21059.0], [350.0, 21047.0], [351.0, 21043.0], [349.0, 21051.0], [348.0, 21053.0], [347.0, 21061.0], [346.0, 21060.0], [345.0, 21057.0], [344.0, 21056.0], [343.0, 21059.0], [336.0, 21059.0], [339.0, 21059.0], [338.0, 21059.0], [342.0, 21062.0], [341.0, 21064.0], [340.0, 21055.0], [366.0, 21051.0], [367.0, 21055.0], [365.0, 21055.0], [364.0, 21057.0], [363.0, 21054.0], [362.0, 21056.0], [361.0, 21056.0], [360.0, 21058.0], [359.0, 7060.0], [353.0, 21049.0], [352.0, 21047.0], [355.0, 21050.0], [354.0, 21042.0], [358.0, 21044.0], [357.0, 21053.0], [356.0, 21052.0], [382.0, 21056.0], [383.0, 21055.0], [381.0, 21052.0], [380.0, 21052.0], [379.0, 21051.0], [378.0, 21054.0], [377.0, 21053.0], [376.0, 21053.0], [375.0, 21057.0], [369.0, 21051.0], [368.0, 21051.0], [371.0, 21054.0], [370.0, 21051.0], [374.0, 21052.0], [373.0, 21058.0], [372.0, 21057.0], [397.0, 15037.0], [398.0, 21040.0], [396.0, 21039.0], [387.0, 21051.0], [386.0, 21053.0], [385.0, 21053.0], [384.0, 21039.0], [395.0, 7063.0], [394.0, 21039.0], [393.0, 21039.0], [392.0, 7061.0], [391.0, 21037.0], [390.0, 21038.0], [389.0, 21037.0], [388.0, 21053.0], [413.0, 21037.0], [415.0, 18051.5], [412.0, 21038.0], [403.0, 21041.0], [402.0, 21041.0], [401.0, 7069.0], [400.0, 21040.0], [411.0, 21038.0], [410.0, 21038.0], [409.0, 21038.0], [408.0, 21039.0], [407.0, 21039.0], [406.0, 21040.0], [405.0, 21039.0], [404.0, 21039.0], [430.0, 21039.0], [431.0, 21038.0], [429.0, 21040.0], [428.0, 21038.0], [427.0, 21040.0], [426.0, 21039.0], [425.0, 21040.0], [423.0, 21039.0], [417.0, 21039.0], [416.0, 21039.0], [419.0, 21040.0], [418.0, 21039.0], [422.0, 21040.0], [421.0, 21039.0], [420.0, 21040.0], [447.0, 21037.0], [446.0, 21036.666666666668], [435.0, 21039.0], [434.0, 21038.0], [433.0, 21038.0], [432.0, 21039.0], [443.0, 21037.0], [442.0, 21040.0], [441.0, 21039.0], [440.0, 21037.0], [439.0, 21035.0], [438.0, 21035.0], [437.0, 21037.0], [436.0, 21037.0], [462.0, 21035.0], [463.0, 21033.0], [461.0, 21035.0], [460.0, 21034.0], [459.0, 15066.0], [458.0, 21033.0], [457.0, 21034.5], [455.0, 15067.0], [449.0, 21037.0], [448.0, 21033.0], [451.0, 21032.0], [450.0, 21032.0], [454.0, 21035.0], [453.0, 21034.0], [452.0, 21032.0], [478.0, 21033.0], [479.0, 21033.0], [477.0, 21035.0], [476.0, 21034.0], [475.0, 21033.0], [474.0, 21032.0], [473.0, 21033.0], [472.0, 21034.0], [471.0, 21034.0], [465.0, 21034.0], [464.0, 21034.0], [467.0, 21033.0], [466.0, 21034.0], [470.0, 21034.0], [469.0, 21033.0], [468.0, 21034.0], [493.0, 7046.0], [495.0, 7055.5], [492.0, 21033.0], [483.0, 7060.0], [482.0, 21033.0], [481.0, 21035.0], [480.0, 21033.0], [491.0, 7059.0], [490.0, 21031.0], [489.0, 15066.0], [488.0, 21033.0], [487.0, 21033.0], [486.0, 21035.0], [485.0, 21035.0], [484.0, 21035.0], [510.0, 7054.0], [511.0, 15052.0], [509.0, 7042.0], [508.0, 7042.0], [506.0, 15051.0], [505.0, 7044.0], [504.0, 7048.0], [503.0, 7045.0], [497.0, 7064.0], [496.0, 7064.0], [499.0, 15068.0], [498.0, 21034.0], [502.0, 15068.0], [501.0, 21035.0], [500.0, 21035.0], [538.0, 11047.5], [542.0, 7078.0], [543.0, 7078.0], [529.0, 7059.0], [528.0, 15056.0], [531.0, 7060.0], [530.0, 7060.0], [541.0, 7046.0], [540.0, 7060.0], [539.0, 7062.0], [536.0, 7044.0], [519.0, 15052.0], [518.0, 15052.0], [517.0, 15055.0], [516.0, 15054.0], [515.0, 15051.0], [514.0, 15051.0], [513.0, 15051.0], [512.0, 7039.0], [527.0, 7058.0], [526.0, 15055.0], [525.0, 7040.0], [524.0, 7041.0], [523.0, 7042.0], [522.0, 7043.0], [521.0, 15052.0], [520.0, 15053.0], [535.0, 7048.0], [534.0, 7048.333333333333], [569.0, 21048.0], [574.0, 7059.5], [575.0, 21051.0], [561.0, 21048.0], [560.0, 21047.0], [563.0, 21048.0], [562.0, 21047.0], [565.0, 21047.0], [564.0, 21047.0], [572.0, 21046.0], [571.0, 21047.0], [570.0, 21048.0], [568.0, 21033.0], [551.0, 7059.0], [549.0, 15053.0], [548.0, 21048.0], [547.0, 7061.0], [546.0, 7080.0], [545.0, 7074.0], [559.0, 21046.0], [558.0, 21046.0], [557.0, 21045.0], [556.0, 21046.0], [555.0, 21046.0], [554.0, 21044.0], [553.0, 21044.0], [552.0, 21045.0], [567.0, 21044.0], [566.0, 21046.0], [601.0, 15064.0], [605.0, 7063.0], [607.0, 21035.0], [593.0, 21048.0], [592.0, 7062.0], [595.0, 21047.0], [594.0, 21047.0], [597.0, 15064.0], [596.0, 21046.0], [604.0, 21049.0], [603.0, 15067.0], [602.0, 15066.0], [600.0, 21047.0], [583.0, 21049.0], [582.0, 21051.0], [581.0, 21048.0], [580.0, 21046.0], [579.0, 21046.0], [578.0, 21048.0], [577.0, 21045.0], [576.0, 21049.0], [591.0, 21041.0], [590.0, 21046.0], [589.0, 21045.0], [588.0, 21040.0], [587.0, 21046.0], [586.0, 21042.0], [585.0, 21045.0], [584.0, 21046.0], [599.0, 3046.0], [598.0, 15064.0], [636.0, 7046.0], [639.0, 3048.0], [624.0, 21050.0], [626.0, 21049.0], [625.0, 21048.0], [629.0, 3046.0], [628.0, 5044.0], [638.0, 3046.0], [637.0, 3047.0], [635.0, 15051.0], [634.0, 7047.0], [633.0, 21034.0], [632.0, 21035.0], [623.0, 3043.5], [609.0, 21064.0], [608.0, 21050.0], [611.0, 21049.0], [610.0, 21065.0], [613.0, 7060.0], [612.0, 21033.0], [615.0, 7045.0], [614.0, 3045.0], [621.0, 3044.5], [619.0, 7047.0], [618.0, 21034.0], [617.0, 21035.0], [616.0, 7044.0], [631.0, 21036.0], [630.0, 15066.0], [668.0, 21038.0], [671.0, 21037.0], [656.0, 3048.0], [659.0, 3046.5], [657.0, 3049.0], [670.0, 21036.0], [669.0, 21038.0], [667.0, 21037.0], [666.0, 15063.0], [665.0, 15078.0], [664.0, 3061.5], [655.0, 3046.0], [645.0, 7050.0], [644.0, 3846.4], [647.0, 3047.0], [646.0, 3049.0], [653.0, 3045.0], [652.0, 15067.0], [651.0, 3046.0], [650.0, 5048.0], [662.0, 3046.0], [661.0, 3047.0], [697.0, 21036.0], [701.0, 3045.0], [703.0, 7063.0], [688.0, 3047.0], [691.0, 3043.5], [689.0, 3043.0], [693.0, 21037.0], [692.0, 3042.0], [700.0, 3044.0], [699.0, 3046.0], [698.0, 21037.0], [696.0, 21036.0], [678.0, 21038.0], [677.0, 21037.0], [676.0, 3046.5], [674.0, 3047.0], [673.0, 5049.0], [687.0, 3048.0], [686.0, 21037.0], [685.0, 3045.0], [684.0, 3044.5], [683.0, 3044.0], [681.0, 3045.3333333333335], [695.0, 21038.0], [694.0, 21037.0], [730.0, 3042.5], [722.0, 7061.0], [735.0, 5052.0], [733.0, 9054.0], [731.0, 3043.0], [719.0, 3043.0], [704.0, 3045.5], [706.0, 3044.0], [705.0, 15065.0], [709.0, 21031.5], [707.0, 21038.0], [711.0, 21038.0], [710.0, 21036.0], [718.0, 3045.0], [717.0, 21037.0], [716.0, 21036.0], [715.0, 21038.0], [714.0, 3044.0], [713.0, 7063.0], [712.0, 21036.0], [726.0, 7063.0], [724.0, 3046.0], [723.0, 3042.0], [720.0, 3043.0], [760.0, 21034.0], [765.0, 21035.0], [767.0, 21033.0], [752.0, 21031.0], [755.0, 7075.0], [754.0, 7064.0], [764.0, 21034.0], [762.0, 21032.0], [761.0, 21034.0], [751.0, 21031.0], [736.0, 3043.0], [738.0, 3051.0], [737.0, 3039.0], [740.0, 21040.0], [739.0, 21035.0], [742.0, 21040.0], [741.0, 21035.0], [750.0, 21035.0], [749.0, 21031.0], [748.0, 21033.0], [747.0, 21035.0], [746.0, 21032.0], [745.0, 21037.0], [744.0, 21036.5], [759.0, 21033.0], [758.0, 21034.0], [757.0, 21034.0], [756.0, 21035.0], [792.0, 21032.5], [796.0, 21032.0], [799.0, 21034.0], [786.0, 7082.5], [784.0, 15077.0], [788.0, 21033.0], [787.0, 7081.0], [798.0, 21033.0], [797.0, 21032.0], [795.0, 7083.0], [794.0, 3059.0], [793.0, 21031.0], [782.0, 3056.0], [769.0, 21037.0], [768.0, 21035.0], [771.0, 21031.0], [770.0, 21032.0], [773.0, 21031.0], [772.0, 21034.0], [775.0, 21035.0], [774.0, 21032.0], [781.0, 7078.0], [780.0, 9056.5], [778.0, 21033.0], [777.0, 21033.0], [776.0, 21033.0], [790.0, 21033.0], [789.0, 21032.0], [830.0, 21029.0], [820.0, 21042.0], [831.0, 21046.0], [817.0, 21048.0], [816.0, 21045.0], [819.0, 21044.0], [818.0, 21046.0], [829.0, 21028.0], [828.0, 5732.666666666667], [825.0, 3053.5], [807.0, 21031.0], [806.0, 21033.333333333332], [803.0, 21032.0], [802.0, 21032.0], [801.0, 21034.0], [800.0, 21033.0], [815.0, 21045.0], [814.0, 21033.0], [813.0, 21051.0], [812.0, 21034.0], [811.0, 15062.0], [810.0, 21032.0], [809.0, 21032.0], [808.0, 21031.0], [823.0, 3039.0], [822.0, 21045.0], [821.0, 21044.0], [857.0, 21029.0], [862.0, 21028.0], [863.0, 21029.0], [849.0, 21030.0], [848.0, 21031.0], [851.0, 21030.0], [850.0, 21030.0], [853.0, 21031.0], [852.0, 21030.0], [861.0, 21028.0], [860.0, 21030.0], [859.0, 21022.5], [856.0, 21028.0], [839.0, 21030.0], [838.0, 21029.0], [837.0, 21030.0], [836.0, 21029.0], [835.0, 21030.0], [834.0, 7076.0], [833.0, 21029.0], [832.0, 21030.0], [847.0, 21030.0], [846.0, 21031.0], [845.0, 21031.0], [844.0, 21031.0], [843.0, 21031.0], [842.0, 21033.0], [841.0, 3070.0], [840.0, 21029.0], [855.0, 21029.0], [854.0, 21030.0], [892.0, 21029.0], [895.0, 21035.0], [881.0, 21031.0], [880.0, 21032.0], [883.0, 21033.0], [882.0, 21030.0], [885.0, 21031.0], [884.0, 21032.0], [894.0, 21032.0], [893.0, 21032.0], [891.0, 21032.0], [890.0, 21031.0], [889.0, 21031.0], [888.0, 21031.0], [879.0, 21029.0], [865.0, 21030.0], [864.0, 21028.0], [867.0, 21031.0], [866.0, 21029.0], [869.0, 21030.0], [868.0, 21029.0], [871.0, 21030.0], [870.0, 21029.0], [878.0, 21029.0], [877.0, 21029.0], [876.0, 21030.0], [875.0, 21028.0], [874.0, 21028.0], [873.0, 21030.0], [872.0, 21030.0], [887.0, 21034.0], [886.0, 21031.0], [921.0, 21030.0], [925.0, 21031.0], [926.0, 21031.0], [913.0, 21034.0], [912.0, 21033.0], [915.0, 21029.0], [914.0, 21031.0], [917.0, 21028.0], [916.0, 21028.0], [924.0, 21031.0], [923.0, 21028.0], [922.0, 21031.0], [920.0, 21030.0], [903.0, 21029.0], [902.0, 21030.0], [901.0, 21033.0], [900.0, 21029.0], [899.0, 21033.0], [897.0, 21030.0], [896.0, 21033.0], [911.0, 21031.0], [910.0, 21030.0], [909.0, 21032.0], [908.0, 21045.0], [907.0, 21032.5], [905.0, 21029.0], [904.0, 21030.0], [919.0, 21029.0], [918.0, 21028.0], [956.0, 21029.0], [959.0, 21030.0], [945.0, 21032.0], [944.0, 21028.0], [947.0, 21031.0], [946.0, 21033.0], [949.0, 21029.0], [948.0, 21030.0], [958.0, 21032.0], [957.0, 21032.0], [955.0, 21030.0], [954.0, 21029.0], [953.0, 21030.0], [952.0, 21030.0], [943.0, 21029.0], [929.0, 21030.0], [928.0, 21030.0], [931.0, 21030.0], [930.0, 21030.0], [933.0, 21031.0], [932.0, 21033.0], [935.0, 21029.0], [934.0, 21030.0], [942.0, 21028.0], [941.0, 21030.0], [940.0, 21031.0], [939.0, 21029.5], [937.0, 21028.0], [936.0, 21031.0], [951.0, 21029.0], [950.0, 21028.0], [986.0, 21050.5], [990.0, 21051.0], [991.0, 21052.0], [977.0, 21049.0], [976.0, 21049.0], [979.0, 21049.0], [978.0, 21049.0], [981.0, 21049.0], [980.0, 21050.0], [989.0, 21052.0], [988.0, 21051.0], [987.0, 21050.0], [984.0, 21050.0], [967.0, 21048.0], [966.0, 21045.0], [965.0, 21046.0], [964.0, 21044.0], [963.0, 21045.0], [962.0, 21028.0], [961.0, 21029.0], [960.0, 21030.0], [975.0, 21049.0], [973.0, 21049.0], [972.0, 21033.0], [971.0, 21047.0], [970.0, 21047.0], [969.0, 21040.5], [983.0, 21050.0], [982.0, 21049.0], [996.0, 21050.0], [1001.0, 21029.38571428572], [1000.0, 21021.229116945073], [999.0, 21051.0], [998.0, 21066.0], [997.0, 21050.0], [995.0, 21052.0], [994.0, 21051.0], [993.0, 21051.0], [992.0, 21051.0], [1098.0, 21039.0], [1406.0, 21046.0], [1382.0, 21053.833333333336], [1470.0, 21049.0], [1456.0, 21047.0], [1492.0, 21056.0], [1486.0, 21055.0], [1484.0, 21046.0], [1592.0, 21049.0], [1586.0, 21046.0], [1568.0, 21053.0], [1548.0, 21048.0], [1600.0, 21047.0], [1788.0, 21054.0], [1786.0, 21062.0], [1770.0, 21055.0], [2020.0, 686.0], [2008.0, 740.2], [2000.0, 1183.4381839419611], [2132.0, 658.0], [2136.0, 96.18181818181817], [2140.0, 49.090909090909086], [2144.0, 86.49999999999999], [2052.0, 678.5], [2192.0, 659.3333333333334], [2196.0, 55.57142857142857], [2236.0, 632.0], [2208.0, 362.3], [2212.0, 648.0], [2188.0, 51.5], [2200.0, 58.0], [2272.0, 636.5714285714286], [2300.0, 181.0], [2256.0, 645.090909090909], [2244.0, 630.2857142857143], [2260.0, 527.5], [2264.0, 424.0], [2328.0, 400.0], [2356.0, 544.8], [2348.0, 636.0], [2324.0, 172.83333333333334], [2416.0, 634.0], [2420.0, 101.0], [2428.0, 124.92307692307693], [2372.0, 178.0], [2396.0, 635.0], [2448.0, 115.8], [2440.0, 632.5], [2432.0, 105.22222222222223], [2484.0, 147.0], [2476.0, 139.66666666666666], [2472.0, 137.0], [2456.0, 632.0], [2536.0, 189.5], [2544.0, 631.5], [2528.0, 186.4], [2580.0, 149.0], [2564.0, 636.0], [2608.0, 652.5], [2576.0, 291.0], [2588.0, 155.25], [2684.0, 365.0], [2680.0, 229.0], [2668.0, 218.0], [2672.0, 223.0], [2664.0, 648.0], [2656.0, 208.0], [2660.0, 211.66666666666666], [2640.0, 193.5], [2708.0, 360.0], [2716.0, 370.0], [2688.0, 365.0], [2748.0, 370.0], [2740.0, 348.0], [2736.0, 352.0], [2728.0, 316.6666666666667], [2720.0, 357.0], [2692.0, 532.3333333333334], [2696.0, 363.0], [2704.0, 570.25], [2712.0, 357.0], [2752.0, 643.5], [2812.0, 370.0], [2808.0, 323.5], [2800.0, 327.5], [2796.0, 331.0], [2792.0, 887.0], [2788.0, 334.5], [2784.0, 370.0], [2760.0, 346.6666666666667], [2764.0, 344.0], [2772.0, 416.0], [2776.0, 339.6], [2780.0, 306.0], [2816.0, 317.0], [2820.0, 312.0], [2876.0, 382.8], [2868.0, 315.3333333333333], [2860.0, 314.3333333333333], [2852.0, 631.0], [2824.0, 308.14285714285717], [2828.0, 304.5], [2832.0, 785.3333333333333], [2836.0, 413.0], [2940.0, 638.25], [2928.0, 323.0], [2932.0, 323.49999999999994], [2844.0, 629.0], [2884.0, 326.16666666666663], [2904.0, 322.8333333333333], [3000.0, 609.7869762746077], [2944.0, 320.0], [2984.0, 475.5], [2976.0, 317.6666666666667], [2960.0, 321.0], [2964.0, 526.0], [2968.0, 317.83333333333337], [2972.0, 315.0], [2137.0, 64.0], [2141.0, 36.0], [2145.0, 86.25], [2157.0, 44.0], [2185.0, 50.0], [2229.0, 228.0], [2217.0, 226.6], [2213.0, 69.33333333333334], [2189.0, 51.0], [2193.0, 54.0], [2197.0, 356.75], [2273.0, 130.0], [2289.0, 181.0], [2301.0, 409.0], [2261.0, 413.0], [2265.0, 665.0], [2365.0, 635.4], [2313.0, 181.0], [2361.0, 174.0], [2353.0, 177.0], [2357.0, 637.0], [2337.0, 171.0], [2317.0, 163.0], [2325.0, 170.0], [2329.0, 570.7142857142858], [2421.0, 101.36363636363637], [2425.0, 104.33333333333333], [2429.0, 109.5], [2381.0, 181.0], [2393.0, 635.0], [2441.0, 110.0], [2473.0, 137.0], [2433.0, 104.16666666666667], [2437.0, 381.7391304347826], [2449.0, 117.33333333333333], [2557.0, 140.83333333333331], [2553.0, 632.8], [2533.0, 631.4444444444443], [2529.0, 186.99999999999997], [2505.0, 168.0], [2585.0, 155.0], [2621.0, 180.0], [2617.0, 179.0], [2613.0, 174.0], [2601.0, 654.0], [2625.0, 489.3333333333333], [2685.0, 553.6666666666666], [2681.0, 244.29999999999998], [2665.0, 218.0], [2629.0, 185.85714285714286], [2713.0, 358.0], [2693.0, 344.6666666666667], [2749.0, 466.6666666666667], [2741.0, 1222.6666666666667], [2737.0, 1001.5], [2733.0, 1655.5], [2729.0, 308.0], [2721.0, 355.0], [2689.0, 325.3333333333333], [2709.0, 296.0], [2717.0, 370.0], [2753.0, 457.3333333333333], [2813.0, 374.5], [2809.0, 322.0], [2805.0, 1323.375], [2801.0, 328.0], [2797.0, 316.6666666666667], [2793.0, 355.0], [2789.0, 335.0], [2785.0, 1015.3750000000002], [2757.0, 357.0], [2761.0, 346.0], [2765.0, 641.0], [2769.0, 369.5], [2773.0, 870.0], [2781.0, 306.0], [2869.0, 315.6666666666667], [2865.0, 313.5714285714286], [2873.0, 319.00000000000006], [2861.0, 369.0], [2857.0, 323.6875], [2849.0, 501.5], [2853.0, 348.5833333333333], [2821.0, 877.7857142857142], [2825.0, 305.0], [2833.0, 630.0], [2881.0, 325.45454545454544], [2941.0, 631.8], [2933.0, 320.0], [2929.0, 632.0], [2837.0, 1643.0], [2897.0, 320.6666666666667], [2901.0, 320.0], [2905.0, 320.75], [2909.0, 321.0], [2993.0, 320.6666666666667], [2949.0, 319.0], [2985.0, 527.0], [2989.0, 318.5], [2977.0, 315.3333333333333], [2953.0, 322.0], [2957.0, 440.54545454545456], [2961.0, 320.6666666666667], [2965.0, 787.7142857142858], [1471.0, 21047.25], [1457.0, 21047.0], [1531.0, 21040.4], [1491.0, 21055.0], [1597.0, 21042.0], [1575.0, 21052.5], [1573.0, 21048.2], [1711.0, 21045.5], [1787.0, 21056.0], [1741.0, 21048.75], [1815.0, 21045.0], [1807.0, 21043.0], [1793.0, 21051.75], [1869.0, 21052.5], [1861.0, 21047.0], [2009.0, 735.087155963302], [2001.0, 1228.1162790697672], [1999.0, 21031.0], [2138.0, 45.5], [2142.0, 56.0], [2114.0, 675.8333333333333], [2090.0, 657.0], [2186.0, 50.625], [2218.0, 329.25], [2214.0, 225.54545454545456], [2210.0, 652.2], [2190.0, 52.0], [2194.0, 54.57142857142857], [2202.0, 60.125], [2274.0, 206.0], [2282.0, 170.5], [2294.0, 181.0], [2258.0, 490.6666666666667], [2254.0, 640.75], [2262.0, 643.0], [2270.0, 131.0], [2326.0, 170.0], [2314.0, 163.0], [2354.0, 177.66666666666666], [2346.0, 171.0], [2342.0, 170.0], [2334.0, 636.0], [2422.0, 102.0], [2426.0, 104.30000000000001], [2430.0, 140.33333333333334], [2374.0, 635.5], [2382.0, 180.0], [2438.0, 106.2], [2446.0, 115.7857142857143], [2494.0, 156.0], [2482.0, 632.0], [2490.0, 152.5], [2466.0, 132.57142857142858], [2454.0, 121.0], [2462.0, 129.5], [2498.0, 161.0], [2554.0, 144.85714285714286], [2534.0, 632.5], [2546.0, 631.625], [2502.0, 165.0], [2506.0, 168.0], [2510.0, 237.0], [2514.0, 174.64285714285714], [2518.0, 178.33333333333331], [2526.0, 184.42857142857142], [2522.0, 631.1999999999999], [2618.0, 178.0], [2570.0, 143.0], [2614.0, 173.33333333333334], [2562.0, 136.75], [2622.0, 180.0], [2606.0, 170.74999999999997], [2610.0, 172.45454545454547], [2598.0, 164.0], [2594.0, 161.75], [2686.0, 585.0999999999999], [2674.0, 225.0], [2662.0, 414.7692307692308], [2658.0, 632.0], [2626.0, 184.0], [2630.0, 418.5], [2646.0, 261.42857142857144], [2706.0, 632.0], [2750.0, 383.0], [2746.0, 322.0], [2742.0, 498.0], [2734.0, 504.71428571428567], [2722.0, 354.6666666666667], [2726.0, 761.9285714285714], [2694.0, 362.0], [2698.0, 309.0], [2718.0, 363.3333333333333], [2814.0, 330.3333333333333], [2810.0, 730.7777777777778], [2806.0, 1653.0], [2798.0, 988.0], [2794.0, 438.0], [2786.0, 336.5], [2754.0, 492.5], [2758.0, 370.0], [2766.0, 1399.5882352941178], [2770.0, 502.5], [2774.0, 339.25], [2782.0, 338.59999999999997], [2830.0, 375.0], [2818.0, 650.5], [2878.0, 321.0], [2866.0, 315.0], [2854.0, 305.0], [2834.0, 373.0], [2942.0, 738.4285714285714], [2934.0, 541.3333333333333], [2922.0, 320.6], [2918.0, 319.4], [2914.0, 323.25], [2890.0, 326.6666666666667], [2898.0, 319.0], [2902.0, 317.0], [2906.0, 320.0], [2910.0, 322.3333333333333], [2994.0, 633.0], [2954.0, 319.1428571428571], [2978.0, 313.5], [2946.0, 319.5], [2950.0, 320.0], [2970.0, 318.75], [2974.0, 318.3333333333333], [2139.0, 84.41176470588235], [2143.0, 75.78260869565214], [2155.0, 643.0], [2163.0, 50.5], [2171.0, 646.5], [2199.0, 58.0], [2195.0, 56.0], [2191.0, 52.5], [2187.0, 50.666666666666664], [2183.0, 50.0], [2207.0, 63.0], [2275.0, 206.5], [2283.0, 232.0], [2295.0, 181.0], [2303.0, 183.0], [2259.0, 642.5], [2251.0, 635.0], [2243.0, 638.3684210526316], [2263.0, 644.2653061224489], [2319.0, 163.0], [2327.0, 170.0], [2359.0, 178.0], [2351.0, 180.66666666666666], [2347.0, 636.0], [2315.0, 637.25], [2323.0, 638.4814814814813], [2335.0, 170.0], [2419.0, 121.46666666666667], [2403.0, 635.0], [2423.0, 102.9375], [2427.0, 105.0], [2431.0, 108.3], [2371.0, 178.0], [2375.0, 521.125], [2379.0, 183.0], [2391.0, 635.25], [2447.0, 116.10000000000001], [2479.0, 143.14285714285714], [2483.0, 328.875], [2475.0, 140.0], [2467.0, 132.125], [2439.0, 163.0], [2459.0, 125.5], [2463.0, 129.8], [2559.0, 634.5555555555555], [2551.0, 147.33333333333334], [2531.0, 186.5], [2535.0, 186.75], [2507.0, 168.0], [2511.0, 171.0], [2523.0, 182.0], [2527.0, 185.5], [2591.0, 257.8], [2583.0, 152.5], [2575.0, 272.75], [2611.0, 632.0], [2603.0, 168.0], [2595.0, 161.0], [2567.0, 142.0], [2579.0, 317.33333333333337], [2587.0, 155.0], [2687.0, 367.5], [2683.0, 266.25], [2679.0, 229.0], [2675.0, 225.375], [2627.0, 651.0], [2639.0, 193.0], [2631.0, 651.0], [2643.0, 196.33333333333334], [2647.0, 200.5], [2651.0, 204.0], [2655.0, 208.0], [2803.0, 325.5], [2743.0, 350.0], [2739.0, 351.0], [2735.0, 1121.4], [2731.0, 352.0], [2727.0, 352.0], [2723.0, 354.0], [2711.0, 361.5], [2815.0, 318.5], [2811.0, 375.0], [2807.0, 1653.0], [2799.0, 1265.6666666666665], [2795.0, 775.0], [2787.0, 335.0], [2755.0, 634.3333333333334], [2759.0, 370.0], [2763.0, 344.0], [2767.0, 1346.4285714285713], [2771.0, 635.0], [2775.0, 896.5454545454546], [2783.0, 1623.0], [2827.0, 309.0], [2823.0, 308.4285714285714], [2879.0, 323.0], [2855.0, 330.75], [2851.0, 632.0], [2943.0, 573.5], [2935.0, 1143.5], [2923.0, 321.0], [2919.0, 476.0], [2915.0, 321.0], [2887.0, 324.8], [2891.0, 324.25000000000006], [2895.0, 321.5], [2903.0, 319.0], [2911.0, 324.75], [2947.0, 319.28571428571433], [2991.0, 320.5], [2983.0, 315.0], [2979.0, 313.0], [2951.0, 319.0], [2959.0, 1643.0], [2963.0, 322.6666666666667], [2967.0, 319.8], [2971.0, 317.6], [2975.0, 317.8333333333333], [1.0, 15058.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1966.951660391915, 2976.7562506033396]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[2020.0, 12221.72727272727], [2009.0, 13203.0], [2008.0, 13238.333333333334], [2002.0, 13224.0], [2001.0, 13046.0], [2171.0, 12266.375], [2155.0, 12259.652173913038], [2132.0, 12259.714285714286], [2125.0, 12265.818181818182], [2114.0, 12259.166666666668], [2090.0, 12245.000000000002], [2089.0, 12253.066666666668], [2052.0, 12226.333333333332], [2051.0, 12232.272727272726], [2254.0, 12187.666666666666], [2260.0, 12181.0], [2298.0, 12464.416666666666], [2241.0, 12188.0], [2240.0, 12186.0], [2244.0, 12186.0], [2243.0, 12189.0], [2251.0, 12189.0], [2248.0, 12187.25], [2256.0, 12189.0], [2296.0, 12422.499999999998], [2297.0, 12431.0], [2272.0, 12396.0], [2236.0, 12188.0], [2190.0, 12255.0], [2180.0, 12261.444444444445], [2192.0, 12258.599999999999], [2191.0, 12254.0], [2202.0, 12240.4], [2197.0, 12250.6], [2235.0, 12184.0], [2231.0, 12176.583333333332], [2219.0, 12172.0], [2218.0, 12173.5], [2216.0, 12173.5], [2214.0, 12193.0], [2213.0, 12192.0], [2212.0, 12206.5], [2210.0, 12219.5], [2208.0, 12229.833333333332], [2270.0, 12180.666666666666], [2267.0, 12182.0], [2263.0, 12182.666666666666], [2259.0, 12183.0], [2258.0, 12184.5], [2375.0, 12348.0], [2430.0, 12477.75], [2429.0, 12480.0], [2403.0, 12668.833333333332], [2401.0, 12595.0], [2365.0, 12321.0], [2315.0, 12510.533333333335], [2314.0, 12597.5], [2329.0, 12440.666666666666], [2323.0, 12486.124999999998], [2364.0, 12837.0], [2363.0, 12665.0], [2354.0, 12781.0], [2353.0, 12517.0], [2347.0, 12573.388888888889], [2396.0, 12765.8], [2391.0, 12400.866666666667], [2389.0, 12289.0], [2374.0, 12444.444444444445], [2493.0, 12508.0], [2544.0, 12489.1], [2553.0, 12570.142857142859], [2559.0, 12558.333333333332], [2546.0, 12571.5], [2534.0, 12135.0], [2533.0, 12698.0], [2532.0, 12354.5], [2440.0, 12432.0], [2437.0, 12384.571428571428], [2492.0, 12535.5], [2491.0, 12671.5], [2490.0, 12500.0], [2489.0, 12324.0], [2488.0, 12536.875], [2487.0, 12585.666666666666], [2486.0, 12627.4], [2485.0, 12537.0], [2484.0, 12448.333333333334], [2482.0, 12347.5], [2480.0, 12573.0], [2478.0, 12273.0], [2477.0, 12554.0], [2473.0, 12503.833333333332], [2472.0, 12413.5], [2471.0, 12615.666666666666], [2470.0, 12680.0], [2522.0, 12551.956521739132], [2521.0, 12370.428571428572], [2661.0, 12652.0], [2634.0, 12337.0], [2683.0, 12610.0], [2686.0, 12416.64705882353], [2631.0, 12284.0], [2625.0, 12702.5], [2633.0, 12653.333333333334], [2632.0, 12632.0], [2635.0, 12403.0], [2641.0, 12729.0], [2638.0, 12458.5], [2647.0, 12771.0], [2646.0, 12465.0], [2654.0, 12534.0], [2653.0, 12597.0], [2685.0, 12416.5], [2684.0, 12464.0], [2682.0, 12252.0], [2670.0, 12745.0], [2662.0, 12622.999999999998], [2660.0, 12474.5], [2658.0, 12437.833333333334], [2657.0, 12590.0], [2591.0, 12314.5], [2590.0, 12670.0], [2589.0, 12256.0], [2582.0, 12607.0], [2581.0, 12292.0], [2579.0, 12216.0], [2575.0, 12323.666666666666], [2574.0, 12376.0], [2570.0, 12570.363636363636], [2583.0, 12464.0], [2623.0, 12133.0], [2621.0, 12134.0], [2619.0, 12566.0], [2617.0, 12571.0], [2612.0, 12417.0], [2608.0, 12349.6], [2607.0, 12297.0], [2606.0, 12247.5], [2604.0, 12654.0], [2603.0, 12215.0], [2602.0, 12254.0], [2601.0, 12529.0], [2596.0, 12233.0], [2593.0, 12386.75], [2592.0, 12661.5], [2760.0, 12430.333333333334], [2770.0, 12417.0], [2807.0, 12364.333333333334], [2810.0, 12105.0], [2755.0, 12240.0], [2756.0, 12445.0], [2757.0, 12450.0], [2759.0, 12466.0], [2754.0, 12376.0], [2761.0, 12128.0], [2763.0, 12176.0], [2762.0, 12176.0], [2765.0, 12431.0], [2764.0, 12754.0], [2767.0, 12575.0], [2766.0, 12420.0], [2772.0, 12442.333333333334], [2777.0, 12718.0], [2773.0, 12646.0], [2779.0, 12212.0], [2778.0, 12519.0], [2783.0, 12580.0], [2780.0, 12747.0], [2809.0, 12513.88888888889], [2808.0, 12560.5], [2806.0, 12554.0], [2797.0, 12309.0], [2795.0, 12646.333333333334], [2794.0, 12295.5], [2787.0, 12504.5], [2785.0, 12515.4], [2750.0, 12462.0], [2696.0, 12428.0], [2698.0, 12273.0], [2697.0, 12418.5], [2712.0, 12593.25], [2704.0, 12339.692307692309], [2747.0, 12494.5], [2746.0, 12291.5], [2745.0, 12510.0], [2744.0, 12373.0], [2743.0, 12495.6], [2735.0, 12179.0], [2734.0, 12144.0], [2733.0, 12179.0], [2726.0, 12438.0], [2722.0, 12494.0], [2721.0, 12569.0], [2940.0, 12572.4], [2943.0, 12110.0], [2893.0, 12580.0], [2880.0, 12434.81818181818], [2895.0, 12349.0], [2894.0, 12533.0], [2942.0, 12540.0], [2941.0, 12611.0], [2935.0, 12504.0], [2929.0, 12472.3], [2919.0, 12433.882352941177], [2918.0, 12407.6], [2879.0, 12432.166666666668], [2818.0, 12623.5], [2821.0, 12507.125000000002], [2819.0, 12307.0], [2844.0, 12389.8], [2843.0, 12494.499999999998], [2857.0, 12419.857142857141], [2856.0, 12349.0], [2897.0, 12450.999999999998], [2896.0, 12501.0], [2982.0, 12434.615384615383], [3000.0, 12369.562500000002], [2964.0, 12088.0], [2963.0, 12670.0], [2967.0, 12620.4], [2966.0, 12373.5], [2999.0, 12174.0], [2983.0, 12410.2], [2980.0, 12474.666666666666], [2979.0, 12328.0], [2977.0, 12585.5], [2976.0, 12762.0], [2975.0, 12082.0], [2973.0, 12730.0], [2969.0, 12459.0], [2968.0, 12088.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[2508.8200000000006, 12417.536]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61758014E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175802E12, 0.0], [1.61758026E12, 0.0], [1.61758014E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6175802E12, 0.0], [1.61758026E12, 0.0], [1.61758014E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758026E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1029.6410518116547, "minX": 1.61758014E12, "maxY": 60054.33900000003, "series": [{"data": [[1.6175802E12, 60054.33900000003]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175802E12, 21021.906671158995], [1.61758026E12, 18283.983023443838], [1.61758014E12, 1029.6410518116547]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758014E12, 12417.536]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758026E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758014E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175802E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175802E12, 0.0], [1.61758026E12, 0.0], [1.61758014E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758014E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758026E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758014E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175802E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175802E12, 0.0], [1.61758026E12, 0.0], [1.61758014E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758014E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758026E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61758014E12, "maxY": 61039.0, "series": [{"data": [[1.6175802E12, 61039.0], [1.61758026E12, 15078.0], [1.61758014E12, 15843.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6175802E12, 60135.0], [1.61758026E12, 15064.4], [1.61758014E12, 2720.900000000045]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6175802E12, 60223.96], [1.61758026E12, 15077.0], [1.61758014E12, 7597.990000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6175802E12, 60176.4], [1.61758026E12, 15067.0], [1.61758014E12, 3555.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6175802E12, 27.0], [1.61758026E12, 3039.0], [1.61758014E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6175802E12, 60031.0], [1.61758026E12, 7059.0], [1.61758014E12, 578.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758026E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 27.0, "minX": 2.0, "maxY": 61039.0, "series": [{"data": [[547.0, 60045.0], [557.0, 60028.0], [583.0, 1089.0], [621.0, 1351.0], [644.0, 638.0], [656.0, 520.5], [702.0, 575.0], [675.0, 492.0], [720.0, 843.0], [711.0, 639.0], [753.0, 650.0], [800.0, 663.0], [827.0, 599.0], [811.0, 569.0], [833.0, 650.0], [857.0, 512.0], [841.0, 397.0], [886.0, 641.0], [865.0, 577.0], [885.0, 564.0], [938.0, 618.0], [940.0, 545.0], [955.0, 499.0], [944.0, 446.0], [970.0, 607.0], [964.0, 467.5], [993.0, 662.0], [1039.0, 582.0], [1029.0, 479.0], [1078.0, 376.0], [4.0, 15067.5], [1129.0, 613.0], [1092.0, 596.0], [1126.0, 580.5], [1173.0, 573.0], [1217.0, 560.0], [1253.0, 631.0], [1237.0, 657.0], [1242.0, 651.0], [1604.0, 320.0], [2416.0, 737.0], [9.0, 3040.0], [10.0, 3047.0], [12.0, 15081.0], [13.0, 27.0], [14.0, 15052.0], [15.0, 1037.0], [19.0, 15063.0], [26.0, 15058.0], [68.0, 7059.5], [90.0, 1039.0], [95.0, 3047.0], [112.0, 61039.0], [125.0, 3044.0], [158.0, 3059.0], [170.0, 113.5], [175.0, 3048.0], [196.0, 7050.0], [211.0, 7061.0], [362.0, 1251.0], [417.0, 121.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21038.0], [547.0, 21047.0], [557.0, 21050.0], [583.0, 21042.5], [621.0, 21044.0], [656.0, 21059.0], [675.0, 21068.5], [711.0, 21056.0], [3.0, 21038.0], [857.0, 21032.0], [955.0, 21031.0], [944.0, 21048.0], [4.0, 21041.5], [8.0, 21040.0], [9.0, 21040.0], [10.0, 21039.0], [11.0, 21037.5], [12.0, 21040.0], [13.0, 21041.0], [14.0, 21036.0], [15.0, 21045.0], [16.0, 21040.5], [17.0, 21032.0], [19.0, 21041.0], [20.0, 21036.0], [21.0, 21034.0], [22.0, 21038.0], [26.0, 21045.0], [28.0, 21035.5], [32.0, 21032.5], [35.0, 21041.0], [34.0, 21029.0], [36.0, 21041.0], [40.0, 21034.0], [46.0, 21038.0], [55.0, 21040.0], [54.0, 21037.0], [60.0, 21038.0], [67.0, 21047.0], [64.0, 21037.5], [68.0, 21033.5], [74.0, 21037.5], [90.0, 21051.0], [95.0, 21033.0], [106.0, 21033.5], [108.0, 21042.5], [109.0, 21042.0], [112.0, 21027.0], [113.0, 21031.0], [118.0, 21041.0], [125.0, 21057.0], [128.0, 21049.5], [138.0, 21046.0], [158.0, 21032.0], [170.0, 21038.5], [175.0, 21045.5], [196.0, 21054.0], [211.0, 21047.0], [216.0, 21049.0], [220.0, 21034.0], [245.0, 21039.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2416.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 4.9E-324, "series": [{"data": [[547.0, 0.0], [557.0, 0.0], [583.0, 0.0], [621.0, 0.0], [644.0, 0.0], [656.0, 0.0], [702.0, 0.0], [675.0, 0.0], [720.0, 0.0], [711.0, 0.0], [753.0, 0.0], [800.0, 0.0], [827.0, 0.0], [811.0, 0.0], [833.0, 0.0], [857.0, 0.0], [841.0, 0.0], [886.0, 0.0], [865.0, 0.0], [885.0, 0.0], [938.0, 0.0], [940.0, 0.0], [955.0, 0.0], [944.0, 0.0], [970.0, 0.0], [964.0, 0.0], [993.0, 0.0], [1039.0, 0.0], [1029.0, 0.0], [1078.0, 0.0], [4.0, 0.0], [1129.0, 0.0], [1092.0, 0.0], [1126.0, 0.0], [1173.0, 0.0], [1217.0, 0.0], [1253.0, 0.0], [1237.0, 0.0], [1242.0, 0.0], [1604.0, 0.0], [2416.0, 0.0], [9.0, 0.0], [10.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [19.0, 0.0], [26.0, 0.0], [68.0, 0.0], [90.0, 0.0], [95.0, 0.0], [112.0, 0.0], [125.0, 0.0], [158.0, 0.0], [170.0, 0.0], [175.0, 0.0], [196.0, 0.0], [211.0, 0.0], [362.0, 0.0], [417.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [547.0, 0.0], [557.0, 0.0], [583.0, 0.0], [621.0, 0.0], [656.0, 0.0], [675.0, 0.0], [711.0, 0.0], [3.0, 0.0], [857.0, 0.0], [955.0, 0.0], [944.0, 0.0], [4.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [26.0, 0.0], [28.0, 0.0], [32.0, 0.0], [35.0, 0.0], [34.0, 0.0], [36.0, 0.0], [40.0, 0.0], [46.0, 0.0], [55.0, 0.0], [54.0, 0.0], [60.0, 0.0], [67.0, 0.0], [64.0, 0.0], [68.0, 0.0], [74.0, 0.0], [90.0, 0.0], [95.0, 0.0], [106.0, 0.0], [108.0, 0.0], [109.0, 0.0], [112.0, 0.0], [113.0, 0.0], [118.0, 0.0], [125.0, 0.0], [128.0, 0.0], [138.0, 0.0], [158.0, 0.0], [170.0, 0.0], [175.0, 0.0], [196.0, 0.0], [211.0, 0.0], [216.0, 0.0], [220.0, 0.0], [245.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2416.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.95, "minX": 1.61758008E12, "maxY": 660.0, "series": [{"data": [[1.6175802E12, 49.46666666666667], [1.61758026E12, 3.95], [1.61758008E12, 10.516666666666667], [1.61758014E12, 660.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758026E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.8833333333333333, "minX": 1.61758014E12, "maxY": 635.3, "series": [{"data": [[1.6175802E12, 16.716666666666665], [1.61758026E12, 4.583333333333333], [1.61758014E12, 635.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6175802E12, 49.416666666666664], [1.61758026E12, 16.033333333333335], [1.61758014E12, 1.8833333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758026E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.61758014E12, "maxY": 618.6333333333333, "series": [{"data": [[1.61758014E12, 16.666666666666668]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.6175802E12, 16.666666666666668]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.6175802E12, 0.05], [1.61758026E12, 4.583333333333333], [1.61758014E12, 618.6333333333333]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.6175802E12, 49.416666666666664], [1.61758026E12, 16.033333333333335], [1.61758014E12, 1.8833333333333333]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758026E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.8833333333333333, "minX": 1.61758014E12, "maxY": 635.3, "series": [{"data": [[1.6175802E12, 16.716666666666665], [1.61758026E12, 4.583333333333333], [1.61758014E12, 635.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6175802E12, 49.416666666666664], [1.61758026E12, 16.033333333333335], [1.61758014E12, 1.8833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758026E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

