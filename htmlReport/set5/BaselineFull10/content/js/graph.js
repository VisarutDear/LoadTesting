/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 30052.0, "series": [{"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 27.0], [3.0, 27.0], [3.1, 27.0], [3.2, 27.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 28.0], [5.1, 28.0], [5.2, 28.0], [5.3, 28.0], [5.4, 28.0], [5.5, 28.0], [5.6, 28.0], [5.7, 28.0], [5.8, 28.0], [5.9, 28.0], [6.0, 28.0], [6.1, 28.0], [6.2, 28.0], [6.3, 28.0], [6.4, 28.0], [6.5, 28.0], [6.6, 28.0], [6.7, 28.0], [6.8, 28.0], [6.9, 28.0], [7.0, 28.0], [7.1, 28.0], [7.2, 28.0], [7.3, 28.0], [7.4, 28.0], [7.5, 28.0], [7.6, 29.0], [7.7, 29.0], [7.8, 29.0], [7.9, 29.0], [8.0, 29.0], [8.1, 29.0], [8.2, 29.0], [8.3, 29.0], [8.4, 29.0], [8.5, 29.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 29.0], [9.2, 29.0], [9.3, 29.0], [9.4, 29.0], [9.5, 29.0], [9.6, 29.0], [9.7, 29.0], [9.8, 29.0], [9.9, 29.0], [10.0, 29.0], [10.1, 29.0], [10.2, 29.0], [10.3, 29.0], [10.4, 29.0], [10.5, 29.0], [10.6, 30.0], [10.7, 30.0], [10.8, 30.0], [10.9, 30.0], [11.0, 30.0], [11.1, 30.0], [11.2, 30.0], [11.3, 30.0], [11.4, 30.0], [11.5, 30.0], [11.6, 30.0], [11.7, 30.0], [11.8, 30.0], [11.9, 30.0], [12.0, 30.0], [12.1, 30.0], [12.2, 30.0], [12.3, 30.0], [12.4, 30.0], [12.5, 30.0], [12.6, 31.0], [12.7, 31.0], [12.8, 31.0], [12.9, 31.0], [13.0, 31.0], [13.1, 31.0], [13.2, 31.0], [13.3, 31.0], [13.4, 31.0], [13.5, 31.0], [13.6, 31.0], [13.7, 31.0], [13.8, 31.0], [13.9, 31.0], [14.0, 31.0], [14.1, 31.0], [14.2, 32.0], [14.3, 32.0], [14.4, 32.0], [14.5, 32.0], [14.6, 32.0], [14.7, 32.0], [14.8, 32.0], [14.9, 32.0], [15.0, 32.0], [15.1, 32.0], [15.2, 32.0], [15.3, 33.0], [15.4, 33.0], [15.5, 33.0], [15.6, 33.0], [15.7, 33.0], [15.8, 33.0], [15.9, 33.0], [16.0, 33.0], [16.1, 33.0], [16.2, 34.0], [16.3, 34.0], [16.4, 34.0], [16.5, 34.0], [16.6, 34.0], [16.7, 34.0], [16.8, 34.0], [16.9, 34.0], [17.0, 35.0], [17.1, 35.0], [17.2, 35.0], [17.3, 35.0], [17.4, 35.0], [17.5, 35.0], [17.6, 36.0], [17.7, 36.0], [17.8, 36.0], [17.9, 36.0], [18.0, 36.0], [18.1, 36.0], [18.2, 36.0], [18.3, 37.0], [18.4, 37.0], [18.5, 37.0], [18.6, 37.0], [18.7, 37.0], [18.8, 38.0], [18.9, 38.0], [19.0, 38.0], [19.1, 38.0], [19.2, 38.0], [19.3, 39.0], [19.4, 39.0], [19.5, 39.0], [19.6, 39.0], [19.7, 39.0], [19.8, 40.0], [19.9, 40.0], [20.0, 40.0], [20.1, 40.0], [20.2, 40.0], [20.3, 41.0], [20.4, 41.0], [20.5, 41.0], [20.6, 41.0], [20.7, 42.0], [20.8, 42.0], [20.9, 42.0], [21.0, 42.0], [21.1, 43.0], [21.2, 43.0], [21.3, 43.0], [21.4, 43.0], [21.5, 44.0], [21.6, 44.0], [21.7, 44.0], [21.8, 44.0], [21.9, 45.0], [22.0, 45.0], [22.1, 45.0], [22.2, 46.0], [22.3, 46.0], [22.4, 46.0], [22.5, 47.0], [22.6, 47.0], [22.7, 47.0], [22.8, 48.0], [22.9, 48.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 50.0], [23.4, 50.0], [23.5, 50.0], [23.6, 51.0], [23.7, 51.0], [23.8, 51.0], [23.9, 52.0], [24.0, 52.0], [24.1, 52.0], [24.2, 52.0], [24.3, 53.0], [24.4, 53.0], [24.5, 53.0], [24.6, 53.0], [24.7, 54.0], [24.8, 54.0], [24.9, 55.0], [25.0, 55.0], [25.1, 55.0], [25.2, 56.0], [25.3, 56.0], [25.4, 56.0], [25.5, 57.0], [25.6, 57.0], [25.7, 58.0], [25.8, 58.0], [25.9, 58.0], [26.0, 59.0], [26.1, 59.0], [26.2, 60.0], [26.3, 60.0], [26.4, 60.0], [26.5, 60.0], [26.6, 60.0], [26.7, 61.0], [26.8, 61.0], [26.9, 61.0], [27.0, 61.0], [27.1, 61.0], [27.2, 61.0], [27.3, 62.0], [27.4, 62.0], [27.5, 62.0], [27.6, 62.0], [27.7, 62.0], [27.8, 62.0], [27.9, 63.0], [28.0, 63.0], [28.1, 63.0], [28.2, 63.0], [28.3, 63.0], [28.4, 63.0], [28.5, 64.0], [28.6, 64.0], [28.7, 64.0], [28.8, 64.0], [28.9, 64.0], [29.0, 64.0], [29.1, 64.0], [29.2, 64.0], [29.3, 65.0], [29.4, 65.0], [29.5, 65.0], [29.6, 65.0], [29.7, 65.0], [29.8, 65.0], [29.9, 65.0], [30.0, 65.0], [30.1, 65.0], [30.2, 65.0], [30.3, 66.0], [30.4, 66.0], [30.5, 66.0], [30.6, 66.0], [30.7, 66.0], [30.8, 66.0], [30.9, 66.0], [31.0, 66.0], [31.1, 67.0], [31.2, 67.0], [31.3, 67.0], [31.4, 67.0], [31.5, 67.0], [31.6, 67.0], [31.7, 67.0], [31.8, 68.0], [31.9, 68.0], [32.0, 68.0], [32.1, 68.0], [32.2, 68.0], [32.3, 68.0], [32.4, 68.0], [32.5, 69.0], [32.6, 69.0], [32.7, 69.0], [32.8, 69.0], [32.9, 69.0], [33.0, 69.0], [33.1, 69.0], [33.2, 70.0], [33.3, 70.0], [33.4, 70.0], [33.5, 70.0], [33.6, 70.0], [33.7, 70.0], [33.8, 70.0], [33.9, 71.0], [34.0, 71.0], [34.1, 71.0], [34.2, 71.0], [34.3, 71.0], [34.4, 71.0], [34.5, 71.0], [34.6, 71.0], [34.7, 72.0], [34.8, 72.0], [34.9, 72.0], [35.0, 72.0], [35.1, 72.0], [35.2, 72.0], [35.3, 72.0], [35.4, 72.0], [35.5, 72.0], [35.6, 73.0], [35.7, 73.0], [35.8, 73.0], [35.9, 73.0], [36.0, 73.0], [36.1, 73.0], [36.2, 73.0], [36.3, 73.0], [36.4, 73.0], [36.5, 73.0], [36.6, 74.0], [36.7, 74.0], [36.8, 74.0], [36.9, 74.0], [37.0, 74.0], [37.1, 74.0], [37.2, 74.0], [37.3, 75.0], [37.4, 75.0], [37.5, 75.0], [37.6, 75.0], [37.7, 75.0], [37.8, 75.0], [37.9, 76.0], [38.0, 76.0], [38.1, 76.0], [38.2, 76.0], [38.3, 76.0], [38.4, 76.0], [38.5, 76.0], [38.6, 77.0], [38.7, 77.0], [38.8, 77.0], [38.9, 77.0], [39.0, 77.0], [39.1, 77.0], [39.2, 77.0], [39.3, 78.0], [39.4, 78.0], [39.5, 78.0], [39.6, 78.0], [39.7, 78.0], [39.8, 78.0], [39.9, 78.0], [40.0, 78.0], [40.1, 79.0], [40.2, 79.0], [40.3, 79.0], [40.4, 79.0], [40.5, 79.0], [40.6, 80.0], [40.7, 80.0], [40.8, 80.0], [40.9, 80.0], [41.0, 80.0], [41.1, 80.0], [41.2, 80.0], [41.3, 80.0], [41.4, 81.0], [41.5, 81.0], [41.6, 81.0], [41.7, 81.0], [41.8, 81.0], [41.9, 81.0], [42.0, 81.0], [42.1, 82.0], [42.2, 82.0], [42.3, 82.0], [42.4, 82.0], [42.5, 82.0], [42.6, 82.0], [42.7, 83.0], [42.8, 83.0], [42.9, 83.0], [43.0, 83.0], [43.1, 83.0], [43.2, 83.0], [43.3, 83.0], [43.4, 84.0], [43.5, 84.0], [43.6, 84.0], [43.7, 84.0], [43.8, 84.0], [43.9, 84.0], [44.0, 84.0], [44.1, 84.0], [44.2, 85.0], [44.3, 85.0], [44.4, 85.0], [44.5, 85.0], [44.6, 85.0], [44.7, 85.0], [44.8, 85.0], [44.9, 85.0], [45.0, 86.0], [45.1, 86.0], [45.2, 86.0], [45.3, 86.0], [45.4, 86.0], [45.5, 86.0], [45.6, 87.0], [45.7, 87.0], [45.8, 87.0], [45.9, 87.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 88.0], [46.6, 89.0], [46.7, 89.0], [46.8, 89.0], [46.9, 89.0], [47.0, 89.0], [47.1, 90.0], [47.2, 90.0], [47.3, 90.0], [47.4, 90.0], [47.5, 91.0], [47.6, 91.0], [47.7, 91.0], [47.8, 91.0], [47.9, 92.0], [48.0, 92.0], [48.1, 92.0], [48.2, 93.0], [48.3, 93.0], [48.4, 93.0], [48.5, 93.0], [48.6, 93.0], [48.7, 94.0], [48.8, 94.0], [48.9, 94.0], [49.0, 94.0], [49.1, 94.0], [49.2, 94.0], [49.3, 94.0], [49.4, 95.0], [49.5, 95.0], [49.6, 95.0], [49.7, 95.0], [49.8, 95.0], [49.9, 95.0], [50.0, 95.0], [50.1, 96.0], [50.2, 96.0], [50.3, 96.0], [50.4, 96.0], [50.5, 96.0], [50.6, 96.0], [50.7, 97.0], [50.8, 97.0], [50.9, 97.0], [51.0, 97.0], [51.1, 97.0], [51.2, 97.0], [51.3, 97.0], [51.4, 98.0], [51.5, 98.0], [51.6, 98.0], [51.7, 98.0], [51.8, 98.0], [51.9, 98.0], [52.0, 99.0], [52.1, 99.0], [52.2, 99.0], [52.3, 99.0], [52.4, 100.0], [52.5, 100.0], [52.6, 100.0], [52.7, 100.0], [52.8, 100.0], [52.9, 101.0], [53.0, 101.0], [53.1, 101.0], [53.2, 101.0], [53.3, 102.0], [53.4, 102.0], [53.5, 102.0], [53.6, 102.0], [53.7, 103.0], [53.8, 103.0], [53.9, 104.0], [54.0, 104.0], [54.1, 104.0], [54.2, 105.0], [54.3, 105.0], [54.4, 106.0], [54.5, 106.0], [54.6, 106.0], [54.7, 107.0], [54.8, 107.0], [54.9, 107.0], [55.0, 107.0], [55.1, 107.0], [55.2, 108.0], [55.3, 108.0], [55.4, 108.0], [55.5, 109.0], [55.6, 109.0], [55.7, 109.0], [55.8, 109.0], [55.9, 110.0], [56.0, 110.0], [56.1, 110.0], [56.2, 111.0], [56.3, 111.0], [56.4, 111.0], [56.5, 111.0], [56.6, 111.0], [56.7, 112.0], [56.8, 112.0], [56.9, 112.0], [57.0, 113.0], [57.1, 113.0], [57.2, 114.0], [57.3, 114.0], [57.4, 114.0], [57.5, 115.0], [57.6, 115.0], [57.7, 115.0], [57.8, 115.0], [57.9, 116.0], [58.0, 116.0], [58.1, 116.0], [58.2, 116.0], [58.3, 116.0], [58.4, 117.0], [58.5, 117.0], [58.6, 117.0], [58.7, 117.0], [58.8, 117.0], [58.9, 118.0], [59.0, 118.0], [59.1, 118.0], [59.2, 118.0], [59.3, 119.0], [59.4, 119.0], [59.5, 119.0], [59.6, 119.0], [59.7, 120.0], [59.8, 120.0], [59.9, 120.0], [60.0, 120.0], [60.1, 121.0], [60.2, 121.0], [60.3, 121.0], [60.4, 121.0], [60.5, 122.0], [60.6, 122.0], [60.7, 122.0], [60.8, 122.0], [60.9, 122.0], [61.0, 123.0], [61.1, 123.0], [61.2, 123.0], [61.3, 123.0], [61.4, 123.0], [61.5, 124.0], [61.6, 124.0], [61.7, 124.0], [61.8, 125.0], [61.9, 125.0], [62.0, 125.0], [62.1, 125.0], [62.2, 125.0], [62.3, 126.0], [62.4, 126.0], [62.5, 126.0], [62.6, 126.0], [62.7, 126.0], [62.8, 127.0], [62.9, 127.0], [63.0, 127.0], [63.1, 127.0], [63.2, 128.0], [63.3, 128.0], [63.4, 128.0], [63.5, 128.0], [63.6, 128.0], [63.7, 129.0], [63.8, 129.0], [63.9, 129.0], [64.0, 129.0], [64.1, 130.0], [64.2, 130.0], [64.3, 130.0], [64.4, 130.0], [64.5, 130.0], [64.6, 131.0], [64.7, 131.0], [64.8, 131.0], [64.9, 131.0], [65.0, 131.0], [65.1, 131.0], [65.2, 131.0], [65.3, 132.0], [65.4, 132.0], [65.5, 132.0], [65.6, 132.0], [65.7, 132.0], [65.8, 132.0], [65.9, 133.0], [66.0, 133.0], [66.1, 133.0], [66.2, 133.0], [66.3, 133.0], [66.4, 133.0], [66.5, 133.0], [66.6, 133.0], [66.7, 134.0], [66.8, 134.0], [66.9, 134.0], [67.0, 134.0], [67.1, 134.0], [67.2, 134.0], [67.3, 134.0], [67.4, 134.0], [67.5, 134.0], [67.6, 135.0], [67.7, 135.0], [67.8, 135.0], [67.9, 135.0], [68.0, 135.0], [68.1, 135.0], [68.2, 135.0], [68.3, 135.0], [68.4, 135.0], [68.5, 135.0], [68.6, 135.0], [68.7, 135.0], [68.8, 135.0], [68.9, 136.0], [69.0, 136.0], [69.1, 136.0], [69.2, 136.0], [69.3, 136.0], [69.4, 136.0], [69.5, 136.0], [69.6, 136.0], [69.7, 136.0], [69.8, 136.0], [69.9, 137.0], [70.0, 137.0], [70.1, 137.0], [70.2, 137.0], [70.3, 137.0], [70.4, 137.0], [70.5, 137.0], [70.6, 137.0], [70.7, 137.0], [70.8, 137.0], [70.9, 137.0], [71.0, 138.0], [71.1, 138.0], [71.2, 138.0], [71.3, 138.0], [71.4, 138.0], [71.5, 138.0], [71.6, 138.0], [71.7, 138.0], [71.8, 138.0], [71.9, 138.0], [72.0, 138.0], [72.1, 138.0], [72.2, 139.0], [72.3, 139.0], [72.4, 139.0], [72.5, 139.0], [72.6, 139.0], [72.7, 139.0], [72.8, 139.0], [72.9, 139.0], [73.0, 139.0], [73.1, 139.0], [73.2, 140.0], [73.3, 140.0], [73.4, 140.0], [73.5, 140.0], [73.6, 140.0], [73.7, 140.0], [73.8, 140.0], [73.9, 140.0], [74.0, 140.0], [74.1, 140.0], [74.2, 141.0], [74.3, 141.0], [74.4, 141.0], [74.5, 141.0], [74.6, 141.0], [74.7, 141.0], [74.8, 141.0], [74.9, 141.0], [75.0, 141.0], [75.1, 141.0], [75.2, 141.0], [75.3, 142.0], [75.4, 142.0], [75.5, 142.0], [75.6, 142.0], [75.7, 142.0], [75.8, 142.0], [75.9, 142.0], [76.0, 143.0], [76.1, 143.0], [76.2, 143.0], [76.3, 143.0], [76.4, 143.0], [76.5, 143.0], [76.6, 144.0], [76.7, 144.0], [76.8, 144.0], [76.9, 144.0], [77.0, 144.0], [77.1, 144.0], [77.2, 144.0], [77.3, 144.0], [77.4, 145.0], [77.5, 145.0], [77.6, 145.0], [77.7, 145.0], [77.8, 145.0], [77.9, 145.0], [78.0, 146.0], [78.1, 146.0], [78.2, 146.0], [78.3, 146.0], [78.4, 147.0], [78.5, 147.0], [78.6, 147.0], [78.7, 147.0], [78.8, 148.0], [78.9, 148.0], [79.0, 148.0], [79.1, 148.0], [79.2, 148.0], [79.3, 149.0], [79.4, 149.0], [79.5, 149.0], [79.6, 149.0], [79.7, 150.0], [79.8, 150.0], [79.9, 151.0], [80.0, 151.0], [80.1, 152.0], [80.2, 152.0], [80.3, 152.0], [80.4, 152.0], [80.5, 153.0], [80.6, 153.0], [80.7, 154.0], [80.8, 154.0], [80.9, 154.0], [81.0, 155.0], [81.1, 155.0], [81.2, 155.0], [81.3, 156.0], [81.4, 156.0], [81.5, 157.0], [81.6, 157.0], [81.7, 158.0], [81.8, 159.0], [81.9, 159.0], [82.0, 160.0], [82.1, 161.0], [82.2, 162.0], [82.3, 162.0], [82.4, 163.0], [82.5, 164.0], [82.6, 165.0], [82.7, 165.0], [82.8, 166.0], [82.9, 167.0], [83.0, 168.0], [83.1, 169.0], [83.2, 170.0], [83.3, 171.0], [83.4, 173.0], [83.5, 174.0], [83.6, 175.0], [83.7, 177.0], [83.8, 178.0], [83.9, 179.0], [84.0, 180.0], [84.1, 181.0], [84.2, 182.0], [84.3, 184.0], [84.4, 185.0], [84.5, 186.0], [84.6, 188.0], [84.7, 189.0], [84.8, 189.0], [84.9, 190.0], [85.0, 191.0], [85.1, 192.0], [85.2, 193.0], [85.3, 194.0], [85.4, 195.0], [85.5, 196.0], [85.6, 197.0], [85.7, 198.0], [85.8, 199.0], [85.9, 200.0], [86.0, 200.0], [86.1, 201.0], [86.2, 203.0], [86.3, 204.0], [86.4, 205.0], [86.5, 207.0], [86.6, 209.0], [86.7, 211.0], [86.8, 213.0], [86.9, 215.0], [87.0, 217.0], [87.1, 220.0], [87.2, 222.0], [87.3, 226.0], [87.4, 230.0], [87.5, 233.0], [87.6, 235.0], [87.7, 237.0], [87.8, 239.0], [87.9, 241.0], [88.0, 242.0], [88.1, 244.0], [88.2, 245.0], [88.3, 247.0], [88.4, 249.0], [88.5, 250.0], [88.6, 256.0], [88.7, 261.0], [88.8, 269.0], [88.9, 286.0], [89.0, 293.0], [89.1, 298.0], [89.2, 302.0], [89.3, 308.0], [89.4, 313.0], [89.5, 335.0], [89.6, 354.0], [89.7, 361.0], [89.8, 364.0], [89.9, 365.0], [90.0, 372.0], [90.1, 376.0], [90.2, 382.0], [90.3, 386.0], [90.4, 390.0], [90.5, 394.0], [90.6, 398.0], [90.7, 407.0], [90.8, 420.0], [90.9, 429.0], [91.0, 444.0], [91.1, 462.0], [91.2, 480.0], [91.3, 609.0], [91.4, 1029.0], [91.5, 1030.0], [91.6, 1031.0], [91.7, 1032.0], [91.8, 1033.0], [91.9, 1034.0], [92.0, 1035.0], [92.1, 1036.0], [92.2, 1037.0], [92.3, 1038.0], [92.4, 1039.0], [92.5, 1039.0], [92.6, 1040.0], [92.7, 1041.0], [92.8, 1042.0], [92.9, 1043.0], [93.0, 1044.0], [93.1, 1046.0], [93.2, 1049.0], [93.3, 1052.0], [93.4, 1056.0], [93.5, 1059.0], [93.6, 1062.0], [93.7, 1068.0], [93.8, 1073.0], [93.9, 1077.0], [94.0, 1079.0], [94.1, 1082.0], [94.2, 1085.0], [94.3, 1087.0], [94.4, 1090.0], [94.5, 1093.0], [94.6, 1095.0], [94.7, 1097.0], [94.8, 1101.0], [94.9, 1104.0], [95.0, 1108.0], [95.1, 1116.0], [95.2, 1126.0], [95.3, 1133.0], [95.4, 1151.0], [95.5, 1181.0], [95.6, 1196.0], [95.7, 1224.0], [95.8, 1257.0], [95.9, 1354.0], [96.0, 1500.0], [96.1, 3036.0], [96.2, 3040.0], [96.3, 3042.0], [96.4, 3044.0], [96.5, 3046.0], [96.6, 3047.0], [96.7, 3048.0], [96.8, 3050.0], [96.9, 3051.0], [97.0, 3053.0], [97.1, 3054.0], [97.2, 3055.0], [97.3, 3058.0], [97.4, 3060.0], [97.5, 3062.0], [97.6, 3067.0], [97.7, 3070.0], [97.8, 3076.0], [97.9, 3086.0], [98.0, 3097.0], [98.1, 3136.0], [98.2, 3258.0], [98.3, 7033.0], [98.4, 7045.0], [98.5, 7050.0], [98.6, 7052.0], [98.7, 7055.0], [98.8, 7059.0], [98.9, 7062.0], [99.0, 7071.0], [99.1, 7119.0], [99.2, 15045.0], [99.3, 15057.0], [99.4, 15063.0], [99.5, 21021.0], [99.6, 21032.0], [99.7, 21038.0], [99.8, 21043.0], [99.9, 21048.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12705.0], [0.1, 12705.0], [0.2, 12705.0], [0.3, 12705.0], [0.4, 12705.0], [0.5, 12706.0], [0.6, 12706.0], [0.7, 12706.0], [0.8, 12706.0], [0.9, 12706.0], [1.0, 12709.0], [1.1, 12709.0], [1.2, 12709.0], [1.3, 12709.0], [1.4, 12709.0], [1.5, 12717.0], [1.6, 12717.0], [1.7, 12717.0], [1.8, 12717.0], [1.9, 12717.0], [2.0, 12724.0], [2.1, 12724.0], [2.2, 12724.0], [2.3, 12724.0], [2.4, 12724.0], [2.5, 12728.0], [2.6, 12728.0], [2.7, 12728.0], [2.8, 12728.0], [2.9, 12728.0], [3.0, 12736.0], [3.1, 12736.0], [3.2, 12736.0], [3.3, 12736.0], [3.4, 12736.0], [3.5, 12736.0], [3.6, 12736.0], [3.7, 12736.0], [3.8, 12736.0], [3.9, 12736.0], [4.0, 12745.0], [4.1, 12745.0], [4.2, 12745.0], [4.3, 12745.0], [4.4, 12745.0], [4.5, 12746.0], [4.6, 12746.0], [4.7, 12746.0], [4.8, 12746.0], [4.9, 12746.0], [5.0, 12746.0], [5.1, 12746.0], [5.2, 12746.0], [5.3, 12746.0], [5.4, 12746.0], [5.5, 12760.0], [5.6, 12760.0], [5.7, 12760.0], [5.8, 12760.0], [5.9, 12760.0], [6.0, 12763.0], [6.1, 12763.0], [6.2, 12763.0], [6.3, 12763.0], [6.4, 12763.0], [6.5, 12768.0], [6.6, 12768.0], [6.7, 12768.0], [6.8, 12768.0], [6.9, 12768.0], [7.0, 12769.0], [7.1, 12769.0], [7.2, 12769.0], [7.3, 12769.0], [7.4, 12769.0], [7.5, 12772.0], [7.6, 12772.0], [7.7, 12772.0], [7.8, 12772.0], [7.9, 12772.0], [8.0, 12786.0], [8.1, 12786.0], [8.2, 12786.0], [8.3, 12786.0], [8.4, 12786.0], [8.5, 12789.0], [8.6, 12789.0], [8.7, 12789.0], [8.8, 12789.0], [8.9, 12789.0], [9.0, 12790.0], [9.1, 12790.0], [9.2, 12790.0], [9.3, 12790.0], [9.4, 12790.0], [9.5, 12795.0], [9.6, 12795.0], [9.7, 12795.0], [9.8, 12795.0], [9.9, 12795.0], [10.0, 12795.0], [10.1, 12795.0], [10.2, 12795.0], [10.3, 12795.0], [10.4, 12795.0], [10.5, 12795.0], [10.6, 12795.0], [10.7, 12795.0], [10.8, 12795.0], [10.9, 12795.0], [11.0, 12809.0], [11.1, 12809.0], [11.2, 12809.0], [11.3, 12809.0], [11.4, 12809.0], [11.5, 12815.0], [11.6, 12815.0], [11.7, 12815.0], [11.8, 12815.0], [11.9, 12815.0], [12.0, 12819.0], [12.1, 12819.0], [12.2, 12819.0], [12.3, 12819.0], [12.4, 12819.0], [12.5, 12824.0], [12.6, 12824.0], [12.7, 12824.0], [12.8, 12824.0], [12.9, 12824.0], [13.0, 12827.0], [13.1, 12827.0], [13.2, 12827.0], [13.3, 12827.0], [13.4, 12827.0], [13.5, 12832.0], [13.6, 12832.0], [13.7, 12832.0], [13.8, 12832.0], [13.9, 12832.0], [14.0, 12839.0], [14.1, 12839.0], [14.2, 12839.0], [14.3, 12839.0], [14.4, 12839.0], [14.5, 12845.0], [14.6, 12845.0], [14.7, 12845.0], [14.8, 12845.0], [14.9, 12845.0], [15.0, 12849.0], [15.1, 12849.0], [15.2, 12849.0], [15.3, 12849.0], [15.4, 12849.0], [15.5, 12854.0], [15.6, 12854.0], [15.7, 12854.0], [15.8, 12854.0], [15.9, 12854.0], [16.0, 12857.0], [16.1, 12857.0], [16.2, 12857.0], [16.3, 12857.0], [16.4, 12857.0], [16.5, 12862.0], [16.6, 12862.0], [16.7, 12862.0], [16.8, 12862.0], [16.9, 12862.0], [17.0, 12868.0], [17.1, 12868.0], [17.2, 12868.0], [17.3, 12868.0], [17.4, 12868.0], [17.5, 12874.0], [17.6, 12874.0], [17.7, 12874.0], [17.8, 12874.0], [17.9, 12874.0], [18.0, 12878.0], [18.1, 12878.0], [18.2, 12878.0], [18.3, 12878.0], [18.4, 12878.0], [18.5, 12886.0], [18.6, 12886.0], [18.7, 12886.0], [18.8, 12886.0], [18.9, 12886.0], [19.0, 12889.0], [19.1, 12889.0], [19.2, 12889.0], [19.3, 12889.0], [19.4, 12889.0], [19.5, 12895.0], [19.6, 12895.0], [19.7, 12895.0], [19.8, 12895.0], [19.9, 12895.0], [20.0, 12901.0], [20.1, 12901.0], [20.2, 12901.0], [20.3, 12901.0], [20.4, 12901.0], [20.5, 12909.0], [20.6, 12909.0], [20.7, 12909.0], [20.8, 12909.0], [20.9, 12909.0], [21.0, 12914.0], [21.1, 12914.0], [21.2, 12914.0], [21.3, 12914.0], [21.4, 12914.0], [21.5, 12918.0], [21.6, 12918.0], [21.7, 12918.0], [21.8, 12918.0], [21.9, 12918.0], [22.0, 12923.0], [22.1, 12923.0], [22.2, 12923.0], [22.3, 12923.0], [22.4, 12923.0], [22.5, 12924.0], [22.6, 12924.0], [22.7, 12924.0], [22.8, 12924.0], [22.9, 12924.0], [23.0, 12925.0], [23.1, 12925.0], [23.2, 12925.0], [23.3, 12925.0], [23.4, 12925.0], [23.5, 12929.0], [23.6, 12929.0], [23.7, 12929.0], [23.8, 12929.0], [23.9, 12929.0], [24.0, 12929.0], [24.1, 12929.0], [24.2, 12929.0], [24.3, 12929.0], [24.4, 12929.0], [24.5, 12940.0], [24.6, 12940.0], [24.7, 12940.0], [24.8, 12940.0], [24.9, 12940.0], [25.0, 12940.0], [25.1, 12940.0], [25.2, 12940.0], [25.3, 12940.0], [25.4, 12940.0], [25.5, 12954.0], [25.6, 12954.0], [25.7, 12954.0], [25.8, 12954.0], [25.9, 12954.0], [26.0, 12960.0], [26.1, 12960.0], [26.2, 12960.0], [26.3, 12960.0], [26.4, 12960.0], [26.5, 12960.0], [26.6, 12960.0], [26.7, 12960.0], [26.8, 12960.0], [26.9, 12960.0], [27.0, 12970.0], [27.1, 12970.0], [27.2, 12970.0], [27.3, 12970.0], [27.4, 12970.0], [27.5, 12972.0], [27.6, 12972.0], [27.7, 12972.0], [27.8, 12972.0], [27.9, 12972.0], [28.0, 12975.0], [28.1, 12975.0], [28.2, 12975.0], [28.3, 12975.0], [28.4, 12975.0], [28.5, 12982.0], [28.6, 12982.0], [28.7, 12982.0], [28.8, 12982.0], [28.9, 12982.0], [29.0, 12994.0], [29.1, 12994.0], [29.2, 12994.0], [29.3, 12994.0], [29.4, 12994.0], [29.5, 12997.0], [29.6, 12997.0], [29.7, 12997.0], [29.8, 12997.0], [29.9, 12997.0], [30.0, 13006.0], [30.1, 13006.0], [30.2, 13006.0], [30.3, 13006.0], [30.4, 13006.0], [30.5, 13011.0], [30.6, 13011.0], [30.7, 13011.0], [30.8, 13011.0], [30.9, 13011.0], [31.0, 13013.0], [31.1, 13013.0], [31.2, 13013.0], [31.3, 13013.0], [31.4, 13013.0], [31.5, 13021.0], [31.6, 13021.0], [31.7, 13021.0], [31.8, 13021.0], [31.9, 13021.0], [32.0, 13025.0], [32.1, 13025.0], [32.2, 13025.0], [32.3, 13025.0], [32.4, 13025.0], [32.5, 13028.0], [32.6, 13028.0], [32.7, 13028.0], [32.8, 13028.0], [32.9, 13028.0], [33.0, 13032.0], [33.1, 13032.0], [33.2, 13032.0], [33.3, 13032.0], [33.4, 13032.0], [33.5, 13039.0], [33.6, 13039.0], [33.7, 13039.0], [33.8, 13039.0], [33.9, 13039.0], [34.0, 13040.0], [34.1, 13040.0], [34.2, 13040.0], [34.3, 13040.0], [34.4, 13040.0], [34.5, 13044.0], [34.6, 13044.0], [34.7, 13044.0], [34.8, 13044.0], [34.9, 13044.0], [35.0, 13053.0], [35.1, 13053.0], [35.2, 13053.0], [35.3, 13053.0], [35.4, 13053.0], [35.5, 13057.0], [35.6, 13057.0], [35.7, 13057.0], [35.8, 13057.0], [35.9, 13057.0], [36.0, 13063.0], [36.1, 13063.0], [36.2, 13063.0], [36.3, 13063.0], [36.4, 13063.0], [36.5, 13067.0], [36.6, 13067.0], [36.7, 13067.0], [36.8, 13067.0], [36.9, 13067.0], [37.0, 13074.0], [37.1, 13074.0], [37.2, 13074.0], [37.3, 13074.0], [37.4, 13074.0], [37.5, 13079.0], [37.6, 13079.0], [37.7, 13079.0], [37.8, 13079.0], [37.9, 13079.0], [38.0, 13082.0], [38.1, 13082.0], [38.2, 13082.0], [38.3, 13082.0], [38.4, 13082.0], [38.5, 13090.0], [38.6, 13090.0], [38.7, 13090.0], [38.8, 13090.0], [38.9, 13090.0], [39.0, 13094.0], [39.1, 13094.0], [39.2, 13094.0], [39.3, 13094.0], [39.4, 13094.0], [39.5, 13100.0], [39.6, 13100.0], [39.7, 13100.0], [39.8, 13100.0], [39.9, 13100.0], [40.0, 13103.0], [40.1, 13103.0], [40.2, 13103.0], [40.3, 13103.0], [40.4, 13103.0], [40.5, 13111.0], [40.6, 13111.0], [40.7, 13111.0], [40.8, 13111.0], [40.9, 13111.0], [41.0, 13116.0], [41.1, 13116.0], [41.2, 13116.0], [41.3, 13116.0], [41.4, 13116.0], [41.5, 13116.0], [41.6, 13116.0], [41.7, 13116.0], [41.8, 13116.0], [41.9, 13116.0], [42.0, 13118.0], [42.1, 13118.0], [42.2, 13118.0], [42.3, 13118.0], [42.4, 13118.0], [42.5, 13119.0], [42.6, 13119.0], [42.7, 13119.0], [42.8, 13119.0], [42.9, 13119.0], [43.0, 13120.0], [43.1, 13120.0], [43.2, 13120.0], [43.3, 13120.0], [43.4, 13120.0], [43.5, 13121.0], [43.6, 13121.0], [43.7, 13121.0], [43.8, 13121.0], [43.9, 13121.0], [44.0, 13129.0], [44.1, 13129.0], [44.2, 13129.0], [44.3, 13129.0], [44.4, 13129.0], [44.5, 13138.0], [44.6, 13138.0], [44.7, 13138.0], [44.8, 13138.0], [44.9, 13138.0], [45.0, 13139.0], [45.1, 13139.0], [45.2, 13139.0], [45.3, 13139.0], [45.4, 13139.0], [45.5, 13142.0], [45.6, 13142.0], [45.7, 13142.0], [45.8, 13142.0], [45.9, 13142.0], [46.0, 13144.0], [46.1, 13144.0], [46.2, 13144.0], [46.3, 13144.0], [46.4, 13144.0], [46.5, 13144.0], [46.6, 13144.0], [46.7, 13144.0], [46.8, 13144.0], [46.9, 13144.0], [47.0, 13145.0], [47.1, 13145.0], [47.2, 13145.0], [47.3, 13145.0], [47.4, 13145.0], [47.5, 13145.0], [47.6, 13145.0], [47.7, 13145.0], [47.8, 13145.0], [47.9, 13145.0], [48.0, 13146.0], [48.1, 13146.0], [48.2, 13146.0], [48.3, 13146.0], [48.4, 13146.0], [48.5, 13148.0], [48.6, 13148.0], [48.7, 13148.0], [48.8, 13148.0], [48.9, 13148.0], [49.0, 13148.0], [49.1, 13148.0], [49.2, 13148.0], [49.3, 13148.0], [49.4, 13148.0], [49.5, 13158.0], [49.6, 13158.0], [49.7, 13158.0], [49.8, 13158.0], [49.9, 13158.0], [50.0, 13159.0], [50.1, 13159.0], [50.2, 13159.0], [50.3, 13159.0], [50.4, 13159.0], [50.5, 13166.0], [50.6, 13166.0], [50.7, 13166.0], [50.8, 13166.0], [50.9, 13166.0], [51.0, 13169.0], [51.1, 13169.0], [51.2, 13169.0], [51.3, 13169.0], [51.4, 13169.0], [51.5, 13206.0], [51.6, 13206.0], [51.7, 13206.0], [51.8, 13206.0], [51.9, 13206.0], [52.0, 13209.0], [52.1, 13209.0], [52.2, 13209.0], [52.3, 13209.0], [52.4, 13209.0], [52.5, 13210.0], [52.6, 13210.0], [52.7, 13210.0], [52.8, 13210.0], [52.9, 13210.0], [53.0, 13217.0], [53.1, 13217.0], [53.2, 13217.0], [53.3, 13217.0], [53.4, 13217.0], [53.5, 13217.0], [53.6, 13217.0], [53.7, 13217.0], [53.8, 13217.0], [53.9, 13217.0], [54.0, 13220.0], [54.1, 13220.0], [54.2, 13220.0], [54.3, 13220.0], [54.4, 13220.0], [54.5, 13220.0], [54.6, 13220.0], [54.7, 13220.0], [54.8, 13220.0], [54.9, 13220.0], [55.0, 13234.0], [55.1, 13234.0], [55.2, 13234.0], [55.3, 13234.0], [55.4, 13234.0], [55.5, 13238.0], [55.6, 13238.0], [55.7, 13238.0], [55.8, 13238.0], [55.9, 13238.0], [56.0, 13247.0], [56.1, 13247.0], [56.2, 13247.0], [56.3, 13247.0], [56.4, 13247.0], [56.5, 13269.0], [56.6, 13269.0], [56.7, 13269.0], [56.8, 13269.0], [56.9, 13269.0], [57.0, 13271.0], [57.1, 13271.0], [57.2, 13271.0], [57.3, 13271.0], [57.4, 13271.0], [57.5, 13278.0], [57.6, 13278.0], [57.7, 13278.0], [57.8, 13278.0], [57.9, 13278.0], [58.0, 13278.0], [58.1, 13278.0], [58.2, 13278.0], [58.3, 13278.0], [58.4, 13278.0], [58.5, 13286.0], [58.6, 13286.0], [58.7, 13286.0], [58.8, 13286.0], [58.9, 13286.0], [59.0, 13286.0], [59.1, 13286.0], [59.2, 13286.0], [59.3, 13286.0], [59.4, 13286.0], [59.5, 13287.0], [59.6, 13287.0], [59.7, 13287.0], [59.8, 13287.0], [59.9, 13287.0], [60.0, 13293.0], [60.1, 13293.0], [60.2, 13293.0], [60.3, 13293.0], [60.4, 13293.0], [60.5, 13305.0], [60.6, 13305.0], [60.7, 13305.0], [60.8, 13305.0], [60.9, 13305.0], [61.0, 13308.0], [61.1, 13308.0], [61.2, 13308.0], [61.3, 13308.0], [61.4, 13308.0], [61.5, 13313.0], [61.6, 13313.0], [61.7, 13313.0], [61.8, 13313.0], [61.9, 13313.0], [62.0, 13319.0], [62.1, 13319.0], [62.2, 13319.0], [62.3, 13319.0], [62.4, 13319.0], [62.5, 13322.0], [62.6, 13322.0], [62.7, 13322.0], [62.8, 13322.0], [62.9, 13322.0], [63.0, 13324.0], [63.1, 13324.0], [63.2, 13324.0], [63.3, 13324.0], [63.4, 13324.0], [63.5, 13331.0], [63.6, 13331.0], [63.7, 13331.0], [63.8, 13331.0], [63.9, 13331.0], [64.0, 13336.0], [64.1, 13336.0], [64.2, 13336.0], [64.3, 13336.0], [64.4, 13336.0], [64.5, 13339.0], [64.6, 13339.0], [64.7, 13339.0], [64.8, 13339.0], [64.9, 13339.0], [65.0, 13341.0], [65.1, 13341.0], [65.2, 13341.0], [65.3, 13341.0], [65.4, 13341.0], [65.5, 13345.0], [65.6, 13345.0], [65.7, 13345.0], [65.8, 13345.0], [65.9, 13345.0], [66.0, 13346.0], [66.1, 13346.0], [66.2, 13346.0], [66.3, 13346.0], [66.4, 13346.0], [66.5, 13346.0], [66.6, 13346.0], [66.7, 13346.0], [66.8, 13346.0], [66.9, 13346.0], [67.0, 13346.0], [67.1, 13346.0], [67.2, 13346.0], [67.3, 13346.0], [67.4, 13346.0], [67.5, 13348.0], [67.6, 13348.0], [67.7, 13348.0], [67.8, 13348.0], [67.9, 13348.0], [68.0, 13365.0], [68.1, 13365.0], [68.2, 13365.0], [68.3, 13365.0], [68.4, 13365.0], [68.5, 13368.0], [68.6, 13368.0], [68.7, 13368.0], [68.8, 13368.0], [68.9, 13368.0], [69.0, 13375.0], [69.1, 13375.0], [69.2, 13375.0], [69.3, 13375.0], [69.4, 13375.0], [69.5, 13378.0], [69.6, 13378.0], [69.7, 13378.0], [69.8, 13378.0], [69.9, 13378.0], [70.0, 13382.0], [70.1, 13382.0], [70.2, 13382.0], [70.3, 13382.0], [70.4, 13382.0], [70.5, 13392.0], [70.6, 13392.0], [70.7, 13392.0], [70.8, 13392.0], [70.9, 13392.0], [71.0, 13393.0], [71.1, 13393.0], [71.2, 13393.0], [71.3, 13393.0], [71.4, 13393.0], [71.5, 13408.0], [71.6, 13408.0], [71.7, 13408.0], [71.8, 13408.0], [71.9, 13408.0], [72.0, 13408.0], [72.1, 13408.0], [72.2, 13408.0], [72.3, 13408.0], [72.4, 13408.0], [72.5, 13412.0], [72.6, 13412.0], [72.7, 13412.0], [72.8, 13412.0], [72.9, 13412.0], [73.0, 13413.0], [73.1, 13413.0], [73.2, 13413.0], [73.3, 13413.0], [73.4, 13413.0], [73.5, 13417.0], [73.6, 13417.0], [73.7, 13417.0], [73.8, 13417.0], [73.9, 13417.0], [74.0, 13418.0], [74.1, 13418.0], [74.2, 13418.0], [74.3, 13418.0], [74.4, 13418.0], [74.5, 13440.0], [74.6, 13440.0], [74.7, 13440.0], [74.8, 13440.0], [74.9, 13440.0], [75.0, 13441.0], [75.1, 13441.0], [75.2, 13441.0], [75.3, 13441.0], [75.4, 13441.0], [75.5, 13443.0], [75.6, 13443.0], [75.7, 13443.0], [75.8, 13443.0], [75.9, 13443.0], [76.0, 13464.0], [76.1, 13464.0], [76.2, 13464.0], [76.3, 13464.0], [76.4, 13464.0], [76.5, 13465.0], [76.6, 13465.0], [76.7, 13465.0], [76.8, 13465.0], [76.9, 13465.0], [77.0, 13466.0], [77.1, 13466.0], [77.2, 13466.0], [77.3, 13466.0], [77.4, 13466.0], [77.5, 13466.0], [77.6, 13466.0], [77.7, 13466.0], [77.8, 13466.0], [77.9, 13466.0], [78.0, 13467.0], [78.1, 13467.0], [78.2, 13467.0], [78.3, 13467.0], [78.4, 13467.0], [78.5, 13478.0], [78.6, 13478.0], [78.7, 13478.0], [78.8, 13478.0], [78.9, 13478.0], [79.0, 13491.0], [79.1, 13491.0], [79.2, 13491.0], [79.3, 13491.0], [79.4, 13491.0], [79.5, 13499.0], [79.6, 13499.0], [79.7, 13499.0], [79.8, 13499.0], [79.9, 13499.0], [80.0, 13504.0], [80.1, 13504.0], [80.2, 13504.0], [80.3, 13504.0], [80.4, 13504.0], [80.5, 13508.0], [80.6, 13508.0], [80.7, 13508.0], [80.8, 13508.0], [80.9, 13508.0], [81.0, 13512.0], [81.1, 13512.0], [81.2, 13512.0], [81.3, 13512.0], [81.4, 13512.0], [81.5, 13515.0], [81.6, 13515.0], [81.7, 13515.0], [81.8, 13515.0], [81.9, 13515.0], [82.0, 13520.0], [82.1, 13520.0], [82.2, 13520.0], [82.3, 13520.0], [82.4, 13520.0], [82.5, 13531.0], [82.6, 13531.0], [82.7, 13531.0], [82.8, 13531.0], [82.9, 13531.0], [83.0, 13535.0], [83.1, 13535.0], [83.2, 13535.0], [83.3, 13535.0], [83.4, 13535.0], [83.5, 13538.0], [83.6, 13538.0], [83.7, 13538.0], [83.8, 13538.0], [83.9, 13538.0], [84.0, 13545.0], [84.1, 13545.0], [84.2, 13545.0], [84.3, 13545.0], [84.4, 13545.0], [84.5, 13548.0], [84.6, 13548.0], [84.7, 13548.0], [84.8, 13548.0], [84.9, 13548.0], [85.0, 13553.0], [85.1, 13553.0], [85.2, 13553.0], [85.3, 13553.0], [85.4, 13553.0], [85.5, 13557.0], [85.6, 13557.0], [85.7, 13557.0], [85.8, 13557.0], [85.9, 13557.0], [86.0, 13564.0], [86.1, 13564.0], [86.2, 13564.0], [86.3, 13564.0], [86.4, 13564.0], [86.5, 13568.0], [86.6, 13568.0], [86.7, 13568.0], [86.8, 13568.0], [86.9, 13568.0], [87.0, 13577.0], [87.1, 13577.0], [87.2, 13577.0], [87.3, 13577.0], [87.4, 13577.0], [87.5, 13580.0], [87.6, 13580.0], [87.7, 13580.0], [87.8, 13580.0], [87.9, 13580.0], [88.0, 13586.0], [88.1, 13586.0], [88.2, 13586.0], [88.3, 13586.0], [88.4, 13586.0], [88.5, 13591.0], [88.6, 13591.0], [88.7, 13591.0], [88.8, 13591.0], [88.9, 13591.0], [89.0, 13594.0], [89.1, 13594.0], [89.2, 13594.0], [89.3, 13594.0], [89.4, 13594.0], [89.5, 13601.0], [89.6, 13601.0], [89.7, 13601.0], [89.8, 13601.0], [89.9, 13601.0], [90.0, 13603.0], [90.1, 13603.0], [90.2, 13603.0], [90.3, 13603.0], [90.4, 13603.0], [90.5, 13608.0], [90.6, 13608.0], [90.7, 13608.0], [90.8, 13608.0], [90.9, 13608.0], [91.0, 13616.0], [91.1, 13616.0], [91.2, 13616.0], [91.3, 13616.0], [91.4, 13616.0], [91.5, 13620.0], [91.6, 13620.0], [91.7, 13620.0], [91.8, 13620.0], [91.9, 13620.0], [92.0, 13626.0], [92.1, 13626.0], [92.2, 13626.0], [92.3, 13626.0], [92.4, 13626.0], [92.5, 13632.0], [92.6, 13632.0], [92.7, 13632.0], [92.8, 13632.0], [92.9, 13632.0], [93.0, 13636.0], [93.1, 13636.0], [93.2, 13636.0], [93.3, 13636.0], [93.4, 13636.0], [93.5, 13637.0], [93.6, 13637.0], [93.7, 13637.0], [93.8, 13637.0], [93.9, 13637.0], [94.0, 13646.0], [94.1, 13646.0], [94.2, 13646.0], [94.3, 13646.0], [94.4, 13646.0], [94.5, 13648.0], [94.6, 13648.0], [94.7, 13648.0], [94.8, 13648.0], [94.9, 13648.0], [95.0, 13656.0], [95.1, 13656.0], [95.2, 13656.0], [95.3, 13656.0], [95.4, 13656.0], [95.5, 13659.0], [95.6, 13659.0], [95.7, 13659.0], [95.8, 13659.0], [95.9, 13659.0], [96.0, 13664.0], [96.1, 13664.0], [96.2, 13664.0], [96.3, 13664.0], [96.4, 13664.0], [96.5, 13665.0], [96.6, 13665.0], [96.7, 13665.0], [96.8, 13665.0], [96.9, 13665.0], [97.0, 13665.0], [97.1, 13665.0], [97.2, 13665.0], [97.3, 13665.0], [97.4, 13665.0], [97.5, 13677.0], [97.6, 13677.0], [97.7, 13677.0], [97.8, 13677.0], [97.9, 13677.0], [98.0, 13684.0], [98.1, 13684.0], [98.2, 13684.0], [98.3, 13684.0], [98.4, 13684.0], [98.5, 13687.0], [98.6, 13687.0], [98.7, 13687.0], [98.8, 13687.0], [98.9, 13687.0], [99.0, 13690.0], [99.1, 13690.0], [99.2, 13690.0], [99.3, 13690.0], [99.4, 13690.0], [99.5, 13693.0], [99.6, 13693.0], [99.7, 13693.0], [99.8, 13693.0], [99.9, 13693.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 30026.0], [0.1, 30026.0], [0.2, 30026.0], [0.3, 30026.0], [0.4, 30026.0], [0.5, 30026.0], [0.6, 30026.0], [0.7, 30026.0], [0.8, 30026.0], [0.9, 30026.0], [1.0, 30026.0], [1.1, 30026.0], [1.2, 30026.0], [1.3, 30026.0], [1.4, 30026.0], [1.5, 30026.0], [1.6, 30026.0], [1.7, 30026.0], [1.8, 30026.0], [1.9, 30026.0], [2.0, 30026.0], [2.1, 30026.0], [2.2, 30026.0], [2.3, 30026.0], [2.4, 30026.0], [2.5, 30026.0], [2.6, 30026.0], [2.7, 30026.0], [2.8, 30026.0], [2.9, 30026.0], [3.0, 30026.0], [3.1, 30026.0], [3.2, 30026.0], [3.3, 30026.0], [3.4, 30026.0], [3.5, 30027.0], [3.6, 30027.0], [3.7, 30027.0], [3.8, 30027.0], [3.9, 30027.0], [4.0, 30027.0], [4.1, 30027.0], [4.2, 30027.0], [4.3, 30027.0], [4.4, 30027.0], [4.5, 30027.0], [4.6, 30027.0], [4.7, 30027.0], [4.8, 30027.0], [4.9, 30027.0], [5.0, 30027.0], [5.1, 30027.0], [5.2, 30027.0], [5.3, 30027.0], [5.4, 30027.0], [5.5, 30027.0], [5.6, 30027.0], [5.7, 30027.0], [5.8, 30027.0], [5.9, 30027.0], [6.0, 30027.0], [6.1, 30027.0], [6.2, 30027.0], [6.3, 30027.0], [6.4, 30027.0], [6.5, 30027.0], [6.6, 30027.0], [6.7, 30027.0], [6.8, 30027.0], [6.9, 30027.0], [7.0, 30027.0], [7.1, 30027.0], [7.2, 30027.0], [7.3, 30027.0], [7.4, 30027.0], [7.5, 30027.0], [7.6, 30027.0], [7.7, 30027.0], [7.8, 30027.0], [7.9, 30027.0], [8.0, 30027.0], [8.1, 30027.0], [8.2, 30027.0], [8.3, 30027.0], [8.4, 30027.0], [8.5, 30027.0], [8.6, 30027.0], [8.7, 30027.0], [8.8, 30027.0], [8.9, 30027.0], [9.0, 30027.0], [9.1, 30027.0], [9.2, 30027.0], [9.3, 30027.0], [9.4, 30027.0], [9.5, 30027.0], [9.6, 30027.0], [9.7, 30027.0], [9.8, 30027.0], [9.9, 30027.0], [10.0, 30027.0], [10.1, 30027.0], [10.2, 30027.0], [10.3, 30027.0], [10.4, 30027.0], [10.5, 30027.0], [10.6, 30027.0], [10.7, 30027.0], [10.8, 30027.0], [10.9, 30027.0], [11.0, 30027.0], [11.1, 30027.0], [11.2, 30027.0], [11.3, 30027.0], [11.4, 30027.0], [11.5, 30027.0], [11.6, 30027.0], [11.7, 30027.0], [11.8, 30027.0], [11.9, 30027.0], [12.0, 30027.0], [12.1, 30027.0], [12.2, 30027.0], [12.3, 30027.0], [12.4, 30027.0], [12.5, 30027.0], [12.6, 30027.0], [12.7, 30027.0], [12.8, 30027.0], [12.9, 30027.0], [13.0, 30027.0], [13.1, 30027.0], [13.2, 30027.0], [13.3, 30027.0], [13.4, 30027.0], [13.5, 30027.0], [13.6, 30027.0], [13.7, 30027.0], [13.8, 30027.0], [13.9, 30027.0], [14.0, 30027.0], [14.1, 30027.0], [14.2, 30027.0], [14.3, 30027.0], [14.4, 30027.0], [14.5, 30027.0], [14.6, 30027.0], [14.7, 30027.0], [14.8, 30027.0], [14.9, 30027.0], [15.0, 30027.0], [15.1, 30027.0], [15.2, 30027.0], [15.3, 30027.0], [15.4, 30027.0], [15.5, 30027.0], [15.6, 30027.0], [15.7, 30027.0], [15.8, 30027.0], [15.9, 30027.0], [16.0, 30027.0], [16.1, 30027.0], [16.2, 30027.0], [16.3, 30027.0], [16.4, 30027.0], [16.5, 30027.0], [16.6, 30027.0], [16.7, 30027.0], [16.8, 30027.0], [16.9, 30027.0], [17.0, 30027.0], [17.1, 30027.0], [17.2, 30027.0], [17.3, 30027.0], [17.4, 30027.0], [17.5, 30027.0], [17.6, 30027.0], [17.7, 30027.0], [17.8, 30027.0], [17.9, 30027.0], [18.0, 30027.0], [18.1, 30027.0], [18.2, 30027.0], [18.3, 30027.0], [18.4, 30027.0], [18.5, 30027.0], [18.6, 30027.0], [18.7, 30027.0], [18.8, 30027.0], [18.9, 30027.0], [19.0, 30027.0], [19.1, 30027.0], [19.2, 30027.0], [19.3, 30027.0], [19.4, 30027.0], [19.5, 30027.0], [19.6, 30027.0], [19.7, 30027.0], [19.8, 30027.0], [19.9, 30027.0], [20.0, 30027.0], [20.1, 30027.0], [20.2, 30027.0], [20.3, 30027.0], [20.4, 30027.0], [20.5, 30027.0], [20.6, 30027.0], [20.7, 30027.0], [20.8, 30027.0], [20.9, 30027.0], [21.0, 30027.0], [21.1, 30027.0], [21.2, 30027.0], [21.3, 30027.0], [21.4, 30027.0], [21.5, 30027.0], [21.6, 30027.0], [21.7, 30027.0], [21.8, 30027.0], [21.9, 30027.0], [22.0, 30027.0], [22.1, 30027.0], [22.2, 30027.0], [22.3, 30027.0], [22.4, 30027.0], [22.5, 30027.0], [22.6, 30027.0], [22.7, 30027.0], [22.8, 30027.0], [22.9, 30027.0], [23.0, 30027.0], [23.1, 30027.0], [23.2, 30027.0], [23.3, 30027.0], [23.4, 30027.0], [23.5, 30027.0], [23.6, 30027.0], [23.7, 30027.0], [23.8, 30027.0], [23.9, 30027.0], [24.0, 30027.0], [24.1, 30027.0], [24.2, 30027.0], [24.3, 30027.0], [24.4, 30027.0], [24.5, 30027.0], [24.6, 30027.0], [24.7, 30027.0], [24.8, 30027.0], [24.9, 30027.0], [25.0, 30027.0], [25.1, 30027.0], [25.2, 30027.0], [25.3, 30027.0], [25.4, 30027.0], [25.5, 30027.0], [25.6, 30027.0], [25.7, 30027.0], [25.8, 30027.0], [25.9, 30027.0], [26.0, 30027.0], [26.1, 30027.0], [26.2, 30027.0], [26.3, 30027.0], [26.4, 30027.0], [26.5, 30027.0], [26.6, 30027.0], [26.7, 30027.0], [26.8, 30027.0], [26.9, 30027.0], [27.0, 30028.0], [27.1, 30028.0], [27.2, 30028.0], [27.3, 30028.0], [27.4, 30028.0], [27.5, 30028.0], [27.6, 30028.0], [27.7, 30028.0], [27.8, 30028.0], [27.9, 30028.0], [28.0, 30028.0], [28.1, 30028.0], [28.2, 30028.0], [28.3, 30028.0], [28.4, 30028.0], [28.5, 30028.0], [28.6, 30028.0], [28.7, 30028.0], [28.8, 30028.0], [28.9, 30028.0], [29.0, 30028.0], [29.1, 30028.0], [29.2, 30028.0], [29.3, 30028.0], [29.4, 30028.0], [29.5, 30028.0], [29.6, 30028.0], [29.7, 30028.0], [29.8, 30028.0], [29.9, 30028.0], [30.0, 30028.0], [30.1, 30028.0], [30.2, 30028.0], [30.3, 30028.0], [30.4, 30028.0], [30.5, 30028.0], [30.6, 30028.0], [30.7, 30028.0], [30.8, 30028.0], [30.9, 30028.0], [31.0, 30028.0], [31.1, 30028.0], [31.2, 30028.0], [31.3, 30028.0], [31.4, 30028.0], [31.5, 30028.0], [31.6, 30028.0], [31.7, 30028.0], [31.8, 30028.0], [31.9, 30028.0], [32.0, 30028.0], [32.1, 30028.0], [32.2, 30028.0], [32.3, 30028.0], [32.4, 30028.0], [32.5, 30028.0], [32.6, 30028.0], [32.7, 30028.0], [32.8, 30028.0], [32.9, 30028.0], [33.0, 30028.0], [33.1, 30028.0], [33.2, 30028.0], [33.3, 30028.0], [33.4, 30028.0], [33.5, 30028.0], [33.6, 30028.0], [33.7, 30028.0], [33.8, 30028.0], [33.9, 30028.0], [34.0, 30028.0], [34.1, 30028.0], [34.2, 30028.0], [34.3, 30028.0], [34.4, 30028.0], [34.5, 30028.0], [34.6, 30028.0], [34.7, 30028.0], [34.8, 30028.0], [34.9, 30028.0], [35.0, 30028.0], [35.1, 30028.0], [35.2, 30028.0], [35.3, 30028.0], [35.4, 30028.0], [35.5, 30028.0], [35.6, 30028.0], [35.7, 30028.0], [35.8, 30028.0], [35.9, 30028.0], [36.0, 30028.0], [36.1, 30028.0], [36.2, 30028.0], [36.3, 30028.0], [36.4, 30028.0], [36.5, 30028.0], [36.6, 30028.0], [36.7, 30028.0], [36.8, 30028.0], [36.9, 30028.0], [37.0, 30028.0], [37.1, 30028.0], [37.2, 30028.0], [37.3, 30028.0], [37.4, 30028.0], [37.5, 30028.0], [37.6, 30028.0], [37.7, 30028.0], [37.8, 30028.0], [37.9, 30028.0], [38.0, 30028.0], [38.1, 30028.0], [38.2, 30028.0], [38.3, 30028.0], [38.4, 30028.0], [38.5, 30028.0], [38.6, 30028.0], [38.7, 30028.0], [38.8, 30028.0], [38.9, 30028.0], [39.0, 30028.0], [39.1, 30028.0], [39.2, 30028.0], [39.3, 30028.0], [39.4, 30028.0], [39.5, 30028.0], [39.6, 30028.0], [39.7, 30028.0], [39.8, 30028.0], [39.9, 30028.0], [40.0, 30028.0], [40.1, 30028.0], [40.2, 30028.0], [40.3, 30028.0], [40.4, 30028.0], [40.5, 30028.0], [40.6, 30028.0], [40.7, 30028.0], [40.8, 30028.0], [40.9, 30028.0], [41.0, 30028.0], [41.1, 30028.0], [41.2, 30028.0], [41.3, 30028.0], [41.4, 30028.0], [41.5, 30028.0], [41.6, 30028.0], [41.7, 30028.0], [41.8, 30028.0], [41.9, 30028.0], [42.0, 30028.0], [42.1, 30028.0], [42.2, 30028.0], [42.3, 30028.0], [42.4, 30028.0], [42.5, 30028.0], [42.6, 30028.0], [42.7, 30028.0], [42.8, 30028.0], [42.9, 30028.0], [43.0, 30028.0], [43.1, 30028.0], [43.2, 30028.0], [43.3, 30028.0], [43.4, 30028.0], [43.5, 30028.0], [43.6, 30028.0], [43.7, 30028.0], [43.8, 30028.0], [43.9, 30028.0], [44.0, 30028.0], [44.1, 30028.0], [44.2, 30028.0], [44.3, 30028.0], [44.4, 30028.0], [44.5, 30028.0], [44.6, 30028.0], [44.7, 30028.0], [44.8, 30028.0], [44.9, 30028.0], [45.0, 30028.0], [45.1, 30028.0], [45.2, 30028.0], [45.3, 30028.0], [45.4, 30028.0], [45.5, 30028.0], [45.6, 30028.0], [45.7, 30028.0], [45.8, 30028.0], [45.9, 30028.0], [46.0, 30028.0], [46.1, 30028.0], [46.2, 30028.0], [46.3, 30028.0], [46.4, 30028.0], [46.5, 30028.0], [46.6, 30028.0], [46.7, 30028.0], [46.8, 30028.0], [46.9, 30028.0], [47.0, 30028.0], [47.1, 30028.0], [47.2, 30028.0], [47.3, 30028.0], [47.4, 30028.0], [47.5, 30028.0], [47.6, 30028.0], [47.7, 30028.0], [47.8, 30028.0], [47.9, 30028.0], [48.0, 30028.0], [48.1, 30028.0], [48.2, 30028.0], [48.3, 30028.0], [48.4, 30028.0], [48.5, 30028.0], [48.6, 30028.0], [48.7, 30028.0], [48.8, 30028.0], [48.9, 30028.0], [49.0, 30028.0], [49.1, 30028.0], [49.2, 30028.0], [49.3, 30028.0], [49.4, 30028.0], [49.5, 30028.0], [49.6, 30028.0], [49.7, 30028.0], [49.8, 30028.0], [49.9, 30028.0], [50.0, 30028.0], [50.1, 30028.0], [50.2, 30028.0], [50.3, 30028.0], [50.4, 30028.0], [50.5, 30028.0], [50.6, 30028.0], [50.7, 30028.0], [50.8, 30028.0], [50.9, 30028.0], [51.0, 30028.0], [51.1, 30028.0], [51.2, 30028.0], [51.3, 30028.0], [51.4, 30028.0], [51.5, 30028.0], [51.6, 30028.0], [51.7, 30028.0], [51.8, 30028.0], [51.9, 30028.0], [52.0, 30028.0], [52.1, 30028.0], [52.2, 30028.0], [52.3, 30028.0], [52.4, 30028.0], [52.5, 30028.0], [52.6, 30028.0], [52.7, 30028.0], [52.8, 30028.0], [52.9, 30028.0], [53.0, 30028.0], [53.1, 30028.0], [53.2, 30028.0], [53.3, 30028.0], [53.4, 30028.0], [53.5, 30028.0], [53.6, 30028.0], [53.7, 30028.0], [53.8, 30028.0], [53.9, 30028.0], [54.0, 30028.0], [54.1, 30028.0], [54.2, 30028.0], [54.3, 30028.0], [54.4, 30028.0], [54.5, 30028.0], [54.6, 30028.0], [54.7, 30028.0], [54.8, 30028.0], [54.9, 30028.0], [55.0, 30028.0], [55.1, 30028.0], [55.2, 30028.0], [55.3, 30028.0], [55.4, 30028.0], [55.5, 30028.0], [55.6, 30028.0], [55.7, 30028.0], [55.8, 30028.0], [55.9, 30028.0], [56.0, 30028.0], [56.1, 30028.0], [56.2, 30028.0], [56.3, 30028.0], [56.4, 30028.0], [56.5, 30028.0], [56.6, 30028.0], [56.7, 30028.0], [56.8, 30028.0], [56.9, 30028.0], [57.0, 30028.0], [57.1, 30028.0], [57.2, 30028.0], [57.3, 30028.0], [57.4, 30028.0], [57.5, 30028.0], [57.6, 30028.0], [57.7, 30028.0], [57.8, 30028.0], [57.9, 30028.0], [58.0, 30028.0], [58.1, 30028.0], [58.2, 30028.0], [58.3, 30028.0], [58.4, 30028.0], [58.5, 30028.0], [58.6, 30028.0], [58.7, 30028.0], [58.8, 30028.0], [58.9, 30028.0], [59.0, 30028.0], [59.1, 30028.0], [59.2, 30028.0], [59.3, 30028.0], [59.4, 30028.0], [59.5, 30028.0], [59.6, 30028.0], [59.7, 30028.0], [59.8, 30028.0], [59.9, 30028.0], [60.0, 30028.0], [60.1, 30028.0], [60.2, 30028.0], [60.3, 30028.0], [60.4, 30028.0], [60.5, 30028.0], [60.6, 30028.0], [60.7, 30028.0], [60.8, 30028.0], [60.9, 30028.0], [61.0, 30028.0], [61.1, 30028.0], [61.2, 30028.0], [61.3, 30028.0], [61.4, 30028.0], [61.5, 30028.0], [61.6, 30028.0], [61.7, 30028.0], [61.8, 30028.0], [61.9, 30028.0], [62.0, 30028.0], [62.1, 30028.0], [62.2, 30028.0], [62.3, 30028.0], [62.4, 30028.0], [62.5, 30028.0], [62.6, 30028.0], [62.7, 30028.0], [62.8, 30028.0], [62.9, 30028.0], [63.0, 30028.0], [63.1, 30028.0], [63.2, 30028.0], [63.3, 30028.0], [63.4, 30028.0], [63.5, 30028.0], [63.6, 30028.0], [63.7, 30028.0], [63.8, 30028.0], [63.9, 30028.0], [64.0, 30028.0], [64.1, 30028.0], [64.2, 30028.0], [64.3, 30028.0], [64.4, 30028.0], [64.5, 30028.0], [64.6, 30028.0], [64.7, 30028.0], [64.8, 30028.0], [64.9, 30028.0], [65.0, 30028.0], [65.1, 30028.0], [65.2, 30028.0], [65.3, 30028.0], [65.4, 30028.0], [65.5, 30028.0], [65.6, 30028.0], [65.7, 30028.0], [65.8, 30028.0], [65.9, 30028.0], [66.0, 30028.0], [66.1, 30028.0], [66.2, 30028.0], [66.3, 30028.0], [66.4, 30028.0], [66.5, 30028.0], [66.6, 30028.0], [66.7, 30028.0], [66.8, 30028.0], [66.9, 30028.0], [67.0, 30028.0], [67.1, 30028.0], [67.2, 30028.0], [67.3, 30028.0], [67.4, 30028.0], [67.5, 30028.0], [67.6, 30028.0], [67.7, 30028.0], [67.8, 30028.0], [67.9, 30028.0], [68.0, 30029.0], [68.1, 30029.0], [68.2, 30029.0], [68.3, 30029.0], [68.4, 30029.0], [68.5, 30029.0], [68.6, 30029.0], [68.7, 30029.0], [68.8, 30029.0], [68.9, 30029.0], [69.0, 30029.0], [69.1, 30029.0], [69.2, 30029.0], [69.3, 30029.0], [69.4, 30029.0], [69.5, 30029.0], [69.6, 30029.0], [69.7, 30029.0], [69.8, 30029.0], [69.9, 30029.0], [70.0, 30029.0], [70.1, 30029.0], [70.2, 30029.0], [70.3, 30029.0], [70.4, 30029.0], [70.5, 30029.0], [70.6, 30029.0], [70.7, 30029.0], [70.8, 30029.0], [70.9, 30029.0], [71.0, 30029.0], [71.1, 30029.0], [71.2, 30029.0], [71.3, 30029.0], [71.4, 30029.0], [71.5, 30029.0], [71.6, 30029.0], [71.7, 30029.0], [71.8, 30029.0], [71.9, 30029.0], [72.0, 30029.0], [72.1, 30029.0], [72.2, 30029.0], [72.3, 30029.0], [72.4, 30029.0], [72.5, 30029.0], [72.6, 30029.0], [72.7, 30029.0], [72.8, 30029.0], [72.9, 30029.0], [73.0, 30029.0], [73.1, 30029.0], [73.2, 30029.0], [73.3, 30029.0], [73.4, 30029.0], [73.5, 30029.0], [73.6, 30029.0], [73.7, 30029.0], [73.8, 30029.0], [73.9, 30029.0], [74.0, 30029.0], [74.1, 30029.0], [74.2, 30029.0], [74.3, 30029.0], [74.4, 30029.0], [74.5, 30029.0], [74.6, 30029.0], [74.7, 30029.0], [74.8, 30029.0], [74.9, 30029.0], [75.0, 30029.0], [75.1, 30029.0], [75.2, 30029.0], [75.3, 30029.0], [75.4, 30029.0], [75.5, 30029.0], [75.6, 30029.0], [75.7, 30029.0], [75.8, 30029.0], [75.9, 30029.0], [76.0, 30029.0], [76.1, 30029.0], [76.2, 30029.0], [76.3, 30029.0], [76.4, 30029.0], [76.5, 30029.0], [76.6, 30029.0], [76.7, 30029.0], [76.8, 30029.0], [76.9, 30029.0], [77.0, 30029.0], [77.1, 30029.0], [77.2, 30029.0], [77.3, 30029.0], [77.4, 30029.0], [77.5, 30029.0], [77.6, 30029.0], [77.7, 30029.0], [77.8, 30029.0], [77.9, 30029.0], [78.0, 30029.0], [78.1, 30029.0], [78.2, 30029.0], [78.3, 30029.0], [78.4, 30029.0], [78.5, 30029.0], [78.6, 30029.0], [78.7, 30029.0], [78.8, 30029.0], [78.9, 30029.0], [79.0, 30029.0], [79.1, 30029.0], [79.2, 30029.0], [79.3, 30029.0], [79.4, 30029.0], [79.5, 30030.0], [79.6, 30030.0], [79.7, 30030.0], [79.8, 30030.0], [79.9, 30030.0], [80.0, 30030.0], [80.1, 30030.0], [80.2, 30030.0], [80.3, 30030.0], [80.4, 30030.0], [80.5, 30030.0], [80.6, 30030.0], [80.7, 30030.0], [80.8, 30030.0], [80.9, 30030.0], [81.0, 30030.0], [81.1, 30030.0], [81.2, 30030.0], [81.3, 30030.0], [81.4, 30030.0], [81.5, 30030.0], [81.6, 30030.0], [81.7, 30030.0], [81.8, 30030.0], [81.9, 30030.0], [82.0, 30030.0], [82.1, 30030.0], [82.2, 30030.0], [82.3, 30030.0], [82.4, 30030.0], [82.5, 30030.0], [82.6, 30030.0], [82.7, 30030.0], [82.8, 30030.0], [82.9, 30030.0], [83.0, 30030.0], [83.1, 30030.0], [83.2, 30030.0], [83.3, 30030.0], [83.4, 30030.0], [83.5, 30030.0], [83.6, 30030.0], [83.7, 30030.0], [83.8, 30030.0], [83.9, 30030.0], [84.0, 30030.0], [84.1, 30030.0], [84.2, 30030.0], [84.3, 30030.0], [84.4, 30030.0], [84.5, 30030.0], [84.6, 30030.0], [84.7, 30030.0], [84.8, 30030.0], [84.9, 30030.0], [85.0, 30031.0], [85.1, 30031.0], [85.2, 30031.0], [85.3, 30031.0], [85.4, 30031.0], [85.5, 30031.0], [85.6, 30031.0], [85.7, 30031.0], [85.8, 30031.0], [85.9, 30031.0], [86.0, 30031.0], [86.1, 30031.0], [86.2, 30031.0], [86.3, 30031.0], [86.4, 30031.0], [86.5, 30031.0], [86.6, 30031.0], [86.7, 30031.0], [86.8, 30031.0], [86.9, 30031.0], [87.0, 30031.0], [87.1, 30031.0], [87.2, 30031.0], [87.3, 30031.0], [87.4, 30031.0], [87.5, 30031.0], [87.6, 30031.0], [87.7, 30031.0], [87.8, 30031.0], [87.9, 30031.0], [88.0, 30031.0], [88.1, 30031.0], [88.2, 30031.0], [88.3, 30031.0], [88.4, 30031.0], [88.5, 30031.0], [88.6, 30031.0], [88.7, 30031.0], [88.8, 30031.0], [88.9, 30031.0], [89.0, 30031.0], [89.1, 30031.0], [89.2, 30031.0], [89.3, 30031.0], [89.4, 30031.0], [89.5, 30032.0], [89.6, 30032.0], [89.7, 30032.0], [89.8, 30032.0], [89.9, 30032.0], [90.0, 30032.0], [90.1, 30032.0], [90.2, 30032.0], [90.3, 30032.0], [90.4, 30032.0], [90.5, 30032.0], [90.6, 30032.0], [90.7, 30032.0], [90.8, 30032.0], [90.9, 30032.0], [91.0, 30032.0], [91.1, 30032.0], [91.2, 30032.0], [91.3, 30032.0], [91.4, 30032.0], [91.5, 30032.0], [91.6, 30032.0], [91.7, 30032.0], [91.8, 30032.0], [91.9, 30032.0], [92.0, 30032.0], [92.1, 30032.0], [92.2, 30032.0], [92.3, 30032.0], [92.4, 30032.0], [92.5, 30033.0], [92.6, 30033.0], [92.7, 30033.0], [92.8, 30033.0], [92.9, 30033.0], [93.0, 30033.0], [93.1, 30033.0], [93.2, 30033.0], [93.3, 30033.0], [93.4, 30033.0], [93.5, 30033.0], [93.6, 30033.0], [93.7, 30033.0], [93.8, 30033.0], [93.9, 30033.0], [94.0, 30034.0], [94.1, 30034.0], [94.2, 30034.0], [94.3, 30034.0], [94.4, 30034.0], [94.5, 30036.0], [94.6, 30036.0], [94.7, 30036.0], [94.8, 30036.0], [94.9, 30036.0], [95.0, 30036.0], [95.1, 30036.0], [95.2, 30036.0], [95.3, 30036.0], [95.4, 30036.0], [95.5, 30037.0], [95.6, 30037.0], [95.7, 30037.0], [95.8, 30037.0], [95.9, 30037.0], [96.0, 30038.0], [96.1, 30038.0], [96.2, 30038.0], [96.3, 30038.0], [96.4, 30038.0], [96.5, 30039.0], [96.6, 30039.0], [96.7, 30039.0], [96.8, 30039.0], [96.9, 30039.0], [97.0, 30041.0], [97.1, 30041.0], [97.2, 30041.0], [97.3, 30041.0], [97.4, 30041.0], [97.5, 30042.0], [97.6, 30042.0], [97.7, 30042.0], [97.8, 30042.0], [97.9, 30042.0], [98.0, 30042.0], [98.1, 30042.0], [98.2, 30042.0], [98.3, 30042.0], [98.4, 30042.0], [98.5, 30042.0], [98.6, 30042.0], [98.7, 30042.0], [98.8, 30042.0], [98.9, 30042.0], [99.0, 30049.0], [99.1, 30049.0], [99.2, 30049.0], [99.3, 30049.0], [99.4, 30049.0], [99.5, 30052.0], [99.6, 30052.0], [99.7, 30052.0], [99.8, 30052.0], [99.9, 30052.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15480.0, "series": [{"data": [[0.0, 15480.0], [600.0, 13.0], [15000.0, 84.0], [15100.0, 3.0], [1000.0, 1015.0], [1100.0, 262.0], [1200.0, 57.0], [1300.0, 40.0], [21000.0, 151.0], [1400.0, 5.0], [1500.0, 1.0], [100.0, 9916.0], [2000.0, 2.0], [2200.0, 4.0], [2300.0, 6.0], [3000.0, 595.0], [3100.0, 35.0], [200.0, 960.0], [3200.0, 14.0], [3300.0, 7.0], [3400.0, 15.0], [3500.0, 1.0], [300.0, 441.0], [400.0, 178.0], [7000.0, 233.0], [7100.0, 12.0], [7300.0, 2.0], [7400.0, 9.0], [7200.0, 2.0], [7600.0, 2.0], [7500.0, 5.0], [500.0, 17.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12700.0, 22.0], [12800.0, 18.0], [13100.0, 24.0], [12900.0, 20.0], [13000.0, 19.0], [13200.0, 18.0], [13300.0, 22.0], [13500.0, 19.0], [13400.0, 17.0], [13600.0, 21.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[30000.0, 200.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 30000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 151.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 15620.0, "series": [{"data": [[0.0, 15620.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 11385.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 2811.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 151.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 100.58500000000001, "minX": 1.61757852E12, "maxY": 196.28842606824568, "series": [{"data": [[1.61757852E12, 124.61500000000001]], "isOverall": false, "label": "CreateRoom-SelectFC-Ready", "isController": false}, {"data": [[1.61757858E12, 196.28842606824568], [1.61757852E12, 195.63092721232226]], "isOverall": false, "label": "JoinServer+ChangeNickName+JoinRoom&Ready", "isController": false}, {"data": [[1.61757852E12, 100.58500000000001]], "isOverall": false, "label": "JoinServer+JoinRoom&waitfor(1min)ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757858E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 30049.0, "series": [{"data": [[2.0, 15057.0], [3.0, 15051.0], [4.0, 15056.0], [5.0, 15062.0], [6.0, 15059.0], [7.0, 15063.0], [8.0, 15054.0], [9.0, 15055.0], [10.0, 15059.0], [11.0, 15063.0], [12.0, 15048.0], [13.0, 15054.0], [14.0, 15061.0], [15.0, 15058.0], [16.0, 15052.0], [17.0, 15057.0], [18.0, 15051.0], [19.0, 15052.0], [20.0, 15054.0], [21.0, 15050.0], [22.0, 15058.0], [23.0, 15056.0], [24.0, 15060.0], [25.0, 21043.0], [26.0, 21042.0], [27.0, 21048.0], [28.0, 21043.0], [29.0, 21046.0], [30.0, 21042.0], [31.0, 21050.0], [33.0, 21037.0], [32.0, 21049.0], [35.0, 21045.0], [34.0, 21041.0], [37.0, 21040.0], [36.0, 21045.0], [39.0, 7057.0], [38.0, 7056.0], [41.0, 7050.0], [40.0, 7054.0], [43.0, 21044.0], [42.0, 7050.0], [45.0, 7050.0], [44.0, 7051.0], [47.0, 21045.0], [46.0, 21037.0], [49.0, 7055.0], [48.0, 7048.0], [51.0, 7049.0], [50.0, 7049.0], [53.0, 7056.0], [52.0, 7060.0], [55.0, 7046.0], [54.0, 7046.0], [57.0, 7045.0], [56.0, 7060.0], [59.0, 21037.0], [58.0, 7047.0], [61.0, 7048.0], [60.0, 21040.0], [63.0, 21039.0], [62.0, 21038.0], [67.0, 7057.0], [66.0, 7068.0], [65.0, 7062.0], [64.0, 7065.0], [71.0, 7056.0], [70.0, 21041.0], [69.0, 21041.0], [68.0, 21042.0], [75.0, 7060.0], [74.0, 7053.0], [73.0, 7052.0], [72.0, 7065.0], [79.0, 7055.0], [78.0, 7051.0], [77.0, 7052.0], [76.0, 7059.0], [83.0, 7056.0], [82.0, 7057.0], [81.0, 7053.0], [80.0, 7055.0], [87.0, 7052.0], [86.0, 7054.0], [85.0, 7054.0], [84.0, 7051.0], [91.0, 7052.0], [90.0, 7064.0], [89.0, 7062.0], [88.0, 7058.0], [95.0, 7058.0], [94.0, 15065.0], [93.0, 21022.0], [92.0, 21024.0], [99.0, 7057.0], [98.0, 7058.0], [97.0, 7061.0], [96.0, 7052.0], [103.0, 7033.0], [102.0, 21038.0], [101.0, 21037.0], [100.0, 21036.0], [107.0, 7036.0], [106.0, 7034.0], [105.0, 7039.0], [104.0, 7038.0], [111.0, 7033.0], [110.0, 15082.0], [109.0, 15067.0], [108.0, 7038.0], [115.0, 7043.0], [114.0, 15051.0], [113.0, 7039.0], [112.0, 7051.0], [119.0, 21051.0], [118.0, 7063.0], [117.0, 7055.0], [116.0, 7052.0], [123.0, 21042.0], [122.0, 21048.0], [121.0, 21028.0], [120.0, 21050.0], [126.0, 21043.5], [124.0, 21039.0], [135.0, 7052.0], [134.0, 21032.0], [133.0, 7054.0], [132.0, 21028.0], [131.0, 21038.0], [130.0, 21040.0], [143.0, 15062.0], [142.0, 3044.5], [140.0, 3060.0], [139.0, 7051.0], [138.0, 7055.0], [137.0, 7061.0], [136.0, 7064.0], [151.0, 15067.0], [150.0, 15045.0], [149.0, 15064.0], [148.0, 15071.0], [147.0, 15068.0], [146.0, 15059.0], [145.0, 15060.0], [144.0, 15063.0], [159.0, 15066.0], [158.0, 15067.0], [157.0, 15065.0], [156.0, 15060.0], [155.0, 15063.0], [154.0, 15069.0], [153.0, 15062.0], [152.0, 15066.0], [167.0, 15059.0], [166.0, 15066.0], [165.0, 15068.0], [164.0, 15055.0], [163.0, 15059.0], [162.0, 15064.0], [161.0, 15071.0], [160.0, 15060.0], [175.0, 1029.0], [174.0, 1032.0], [173.0, 1032.0], [172.0, 1030.0], [171.0, 1035.0], [170.0, 15057.5], [169.0, 15059.0], [183.0, 533.1], [182.0, 36.040229885057485], [181.0, 357.84375000000006], [180.0, 1344.4827586206893], [179.0, 6317.465968586387], [178.0, 15068.0], [177.0, 21043.0], [176.0, 21055.0], [191.0, 28.277777777777775], [190.0, 177.47008547008548], [189.0, 309.7782608695651], [188.0, 189.82887700534752], [187.0, 27.91304347826087], [186.0, 28.102564102564102], [185.0, 27.868421052631582], [184.0, 202.74074074074076], [199.0, 199.56282998944036], [198.0, 503.7785467128023], [197.0, 465.47093023255826], [196.0, 68.98058252427188], [195.0, 1143.0123456790134], [194.0, 233.5728155339806], [193.0, 204.45023696682463], [192.0, 854.0588235294117], [206.0, 35.43749999999999], [203.0, 33.266666666666666], [200.0, 349.5367044123385], [215.0, 34.5], [214.0, 32.0], [213.0, 36.2], [212.0, 30.25], [211.0, 29.571428571428573], [210.0, 28.666666666666668], [209.0, 29.0], [208.0, 30.555555555555557], [223.0, 38.0], [222.0, 43.5], [221.0, 45.0], [220.0, 41.0], [219.0, 42.0], [218.0, 42.0], [217.0, 40.2], [216.0, 41.0], [231.0, 41.444444444444436], [230.0, 40.55555555555556], [229.0, 44.0], [228.0, 41.0], [226.0, 41.66666666666667], [225.0, 37.0], [224.0, 41.666666666666664], [239.0, 52.666666666666664], [238.0, 124.07142857142857], [237.0, 46.5], [236.0, 48.75], [235.0, 49.0], [234.0, 50.00000000000001], [233.0, 54.5], [232.0, 46.666666666666664], [247.0, 46.0], [246.0, 45.42857142857142], [244.0, 44.18181818181819], [241.0, 49.333333333333336], [240.0, 52.71428571428571], [255.0, 46.785714285714285], [253.0, 44.0], [252.0, 44.0], [251.0, 43.2], [250.0, 40.714285714285715], [249.0, 41.42857142857143], [248.0, 41.2], [270.0, 58.857142857142854], [271.0, 58.25], [269.0, 63.5], [268.0, 63.8], [267.0, 1427.090909090909], [266.0, 53.0], [265.0, 50.5], [264.0, 53.5], [263.0, 52.33333333333333], [257.0, 48.6], [256.0, 48.8], [259.0, 50.300000000000004], [258.0, 47.833333333333336], [262.0, 52.0], [261.0, 52.333333333333336], [260.0, 52.11111111111111], [285.0, 92.2], [284.0, 94.0], [275.0, 83.11111111111111], [274.0, 77.6], [273.0, 58.166666666666664], [272.0, 55.555555555555564], [283.0, 94.29999999999998], [282.0, 79.15789473684211], [281.0, 67.8], [280.0, 71.66666666666667], [279.0, 72.0], [278.0, 76.0], [277.0, 81.0], [276.0, 83.33333333333333], [302.0, 68.50000000000001], [303.0, 72.5], [300.0, 70.5], [291.0, 69.2], [290.0, 71.5], [299.0, 73.39999999999999], [298.0, 75.8], [296.0, 81.27272727272727], [294.0, 79.25], [293.0, 76.88888888888889], [292.0, 70.50000000000001], [317.0, 80.66666666666666], [319.0, 79.9090909090909], [316.0, 81.0], [307.0, 75.4], [306.0, 75.0], [305.0, 74.0], [304.0, 73.14285714285714], [315.0, 78.25], [314.0, 79.1818181818182], [313.0, 79.25], [312.0, 78.8], [311.0, 75.22222222222223], [310.0, 74.6], [309.0, 74.14285714285714], [308.0, 73.25], [323.0, 87.42857142857143], [334.0, 92.0], [332.0, 92.5], [322.0, 85.92307692307693], [321.0, 85.8], [320.0, 83.85714285714286], [331.0, 88.0], [330.0, 87.35000000000001], [328.0, 82.83333333333334], [327.0, 83.8], [326.0, 85.83333333333333], [325.0, 88.28571428571429], [324.0, 85.0], [350.0, 77.0], [351.0, 78.99999999999999], [349.0, 83.63636363636363], [348.0, 87.0], [347.0, 81.36363636363636], [346.0, 76.5], [345.0, 86.42857142857143], [344.0, 87.76923076923076], [343.0, 83.44444444444444], [339.0, 83.5], [338.0, 86.66666666666667], [337.0, 88.5], [336.0, 88.45454545454545], [341.0, 88.99999999999999], [366.0, 434.5], [367.0, 54.0], [365.0, 2696.3750000000005], [364.0, 2073.0], [363.0, 62.25], [362.0, 65.6842105263158], [361.0, 67.0], [360.0, 1415.111111111111], [359.0, 1798.9285714285716], [353.0, 78.0], [352.0, 83.6], [355.0, 76.15384615384615], [354.0, 74.28571428571429], [358.0, 66.5], [357.0, 69.0], [356.0, 74.0], [382.0, 2043.888888888889], [383.0, 2186.8571428571427], [381.0, 1542.5], [380.0, 1842.0], [379.0, 1242.6], [378.0, 1358.1875], [377.0, 464.71428571428567], [376.0, 1714.8888888888891], [375.0, 2362.3076923076924], [369.0, 52.833333333333336], [368.0, 49.27272727272727], [371.0, 45.5], [370.0, 2287.0645161290327], [374.0, 1046.0], [373.0, 40.0], [395.0, 28.0], [394.0, 28.5], [389.0, 27.666666666666668], [388.0, 28.5], [387.0, 3044.0], [386.0, 3046.230769230769], [385.0, 3050.333333333333], [384.0, 3043.6666666666665], [415.0, 43.0], [414.0, 67.0], [400.0, 322.1231906063358], [418.0, 32.0], [417.0, 28.0], [419.0, 28.0], [428.0, 32.42857142857143], [429.0, 29.5], [430.0, 28.5], [431.0, 27.5], [420.0, 28.0], [421.0, 30.666666666666668], [422.0, 28.0], [423.0, 27.0], [424.0, 28.0], [425.0, 28.5], [426.0, 28.0], [427.0, 29.0], [433.0, 30.6], [432.0, 28.4], [434.0, 30.0], [435.0, 30.333333333333332], [436.0, 32.0], [437.0, 34.0], [438.0, 33.0], [439.0, 35.25], [440.0, 37.166666666666664], [446.0, 54.8], [447.0, 53.5], [444.0, 46.333333333333336], [445.0, 51.0], [441.0, 38.666666666666664], [442.0, 42.0], [443.0, 47.0], [449.0, 58.0], [448.0, 53.0], [451.0, 60.666666666666664], [460.0, 66.25], [461.0, 64.85714285714286], [462.0, 63.8], [463.0, 62.0], [452.0, 66.0], [453.0, 70.0], [454.0, 70.25], [455.0, 72.8], [456.0, 72.16666666666667], [457.0, 67.0], [458.0, 67.71428571428571], [459.0, 65.14285714285714], [465.0, 55.928571428571416], [464.0, 59.666666666666664], [466.0, 49.8], [467.0, 52.25], [468.0, 53.66666666666667], [469.0, 51.9], [470.0, 48.8], [471.0, 49.888888888888886], [472.0, 51.0], [477.0, 63.0], [479.0, 69.625], [474.0, 57.333333333333336], [475.0, 62.0], [481.0, 73.66666666666667], [480.0, 73.4], [482.0, 72.5], [483.0, 73.0], [484.0, 74.16666666666667], [485.0, 79.0], [486.0, 80.66666666666666], [488.0, 87.33333333333334], [494.0, 90.25], [495.0, 89.16666666666666], [492.0, 93.66666666666667], [493.0, 91.4], [489.0, 91.5], [490.0, 91.0], [497.0, 85.66666666666666], [496.0, 86.25], [498.0, 87.0], [499.0, 88.33333333333333], [500.0, 88.6], [501.0, 91.0], [502.0, 90.6], [503.0, 90.5], [504.0, 92.83333333333333], [510.0, 101.75], [511.0, 103.75], [508.0, 96.0], [509.0, 98.5], [505.0, 95.5], [506.0, 96.5], [507.0, 93.66666666666667], [518.0, 111.0], [513.0, 102.5], [512.0, 99.6], [526.0, 127.0], [527.0, 126.875], [524.0, 123.6], [525.0, 123.85714285714285], [522.0, 117.2], [523.0, 118.75], [514.0, 100.5], [515.0, 104.66666666666667], [516.0, 105.5], [519.0, 111.8], [536.0, 132.0], [537.0, 135.33333333333334], [538.0, 134.33333333333334], [539.0, 133.66666666666666], [540.0, 138.75], [541.0, 144.0], [542.0, 139.12500000000003], [543.0, 140.0], [529.0, 129.5], [530.0, 127.0], [531.0, 129.0], [532.0, 132.66666666666666], [533.0, 131.5], [534.0, 132.0], [535.0, 133.8], [520.0, 116.25], [521.0, 117.4], [547.0, 135.36363636363637], [544.0, 139.57142857142858], [558.0, 139.0], [559.0, 140.83333333333334], [556.0, 135.62499999999997], [557.0, 135.0], [554.0, 135.25], [555.0, 138.33333333333334], [545.0, 137.0], [546.0, 136.0], [548.0, 135.14285714285717], [549.0, 137.5], [550.0, 138.20000000000002], [551.0, 134.0], [560.0, 139.0], [574.0, 137.75], [575.0, 141.5], [572.0, 137.83333333333334], [573.0, 137.8], [570.0, 135.75], [571.0, 136.75], [568.0, 134.875], [569.0, 135.4], [561.0, 140.14285714285714], [562.0, 137.2], [563.0, 137.4], [564.0, 136.33333333333334], [565.0, 137.75], [566.0, 139.16666666666666], [567.0, 136.8], [552.0, 133.25], [553.0, 136.6], [579.0, 149.0], [576.0, 144.83333333333331], [591.0, 156.0], [588.0, 157.75], [589.0, 154.0], [586.0, 192.94736842105263], [587.0, 155.6], [577.0, 147.0], [578.0, 147.6], [580.0, 150.2], [581.0, 154.83333333333331], [582.0, 156.33333333333334], [583.0, 157.66666666666669], [592.0, 156.5], [600.0, 180.99247454625916], [593.0, 160.0], [594.0, 207.11111111111111], [595.0, 164.0], [596.0, 161.6], [597.0, 135.25], [598.0, 138.0], [584.0, 155.5], [585.0, 155.2], [1.0, 15059.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[308.9287719416924, 428.0125139513673]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[463.0, 13055.5], [462.0, 13129.5], [460.0, 12736.0], [478.0, 13306.5], [479.0, 13078.5], [477.0, 13632.0], [476.0, 13028.5], [475.0, 13637.0], [474.0, 13308.0], [473.0, 12940.0], [471.0, 13315.333333333334], [465.0, 13621.0], [464.0, 13103.0], [467.0, 13577.0], [466.0, 13378.0], [470.0, 13309.0], [469.0, 13121.0], [494.0, 13278.0], [495.0, 12929.0], [493.0, 13601.0], [492.0, 13307.5], [491.0, 13025.0], [489.0, 13004.0], [488.0, 13526.0], [486.0, 13325.333333333334], [482.0, 13104.0], [483.0, 13498.5], [480.0, 12983.25], [485.0, 13071.0], [484.0, 13035.0], [499.0, 12819.0], [511.0, 13154.666666666666], [510.0, 13504.0], [497.0, 12724.0], [496.0, 13226.0], [507.0, 13220.0], [506.0, 13341.666666666666], [505.0, 13046.0], [503.0, 13427.0], [502.0, 13002.0], [501.0, 13499.0], [500.0, 13139.0], [538.0, 13103.0], [530.0, 13269.0], [542.0, 13418.0], [543.0, 13240.333333333334], [528.0, 12905.666666666666], [539.0, 13273.625], [536.0, 13008.0], [519.0, 13210.0], [518.0, 12889.0], [517.0, 13330.0], [515.0, 13270.0], [514.0, 13081.5], [513.0, 13159.0], [512.0, 12883.5], [526.0, 13464.0], [525.0, 13553.0], [524.0, 12944.0], [523.0, 13028.0], [522.0, 13027.5], [520.0, 13238.0], [533.0, 13216.0], [532.0, 12854.0], [531.0, 13388.5], [562.0, 13648.0], [572.0, 13101.5], [570.0, 13664.0], [569.0, 13293.5], [568.0, 12832.0], [559.0, 13144.0], [544.0, 12897.5], [547.0, 13375.0], [546.0, 13280.5], [549.0, 13203.0], [548.0, 13415.5], [557.0, 13322.0], [556.0, 13119.0], [554.0, 13636.0], [552.0, 13014.8], [567.0, 13137.0], [566.0, 13196.5], [564.0, 12982.0], [561.0, 13542.5], [560.0, 13601.0], [592.0, 12769.0], [600.0, 12809.0], [599.0, 13046.6], [594.0, 13197.8], [593.0, 13022.0], [586.0, 13269.0], [585.0, 12795.0], [584.0, 13009.666666666666], [582.0, 13408.0], [581.0, 13233.666666666666], [580.0, 13466.0], [579.0, 12717.0], [577.0, 12997.0], [576.0, 13411.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[524.5950000000006, 13193.514999999998]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[207.0, 30033.0], [206.0, 30036.333333333332], [203.0, 30036.0], [215.0, 30030.0], [214.0, 30028.0], [213.0, 30029.0], [212.0, 30028.0], [211.0, 30029.0], [210.0, 30030.0], [209.0, 30028.0], [208.0, 30027.0], [223.0, 30029.0], [222.0, 30028.0], [221.0, 30028.0], [220.0, 30028.0], [219.0, 30031.0], [218.0, 30029.0], [217.0, 30028.0], [216.0, 30028.0], [231.0, 30028.0], [230.0, 30027.0], [229.0, 30027.0], [228.0, 30029.0], [227.0, 30028.0], [226.0, 30030.0], [225.0, 30030.0], [224.0, 30027.0], [239.0, 30026.0], [238.0, 30027.0], [237.0, 30027.0], [236.0, 30028.0], [235.0, 30028.0], [234.0, 30028.0], [233.0, 30028.0], [232.0, 30027.0], [247.0, 30032.0], [246.0, 30029.5], [244.0, 30031.5], [242.0, 30028.0], [241.0, 30028.0], [240.0, 30027.0], [255.0, 30032.0], [254.0, 30028.0], [253.0, 30028.0], [252.0, 30027.0], [251.0, 30028.0], [250.0, 30027.0], [249.0, 30029.0], [248.0, 30030.0], [270.0, 30027.0], [271.0, 30026.0], [269.0, 30027.0], [268.0, 30029.0], [267.0, 30031.0], [266.0, 30028.0], [265.0, 30028.0], [264.0, 30028.0], [263.0, 30027.0], [257.0, 30028.0], [256.0, 30028.0], [259.0, 30032.0], [258.0, 30028.0], [262.0, 30028.0], [261.0, 30028.0], [260.0, 30028.0], [286.0, 30028.0], [287.0, 30028.0], [285.0, 30027.0], [284.0, 30028.0], [283.0, 30028.0], [282.0, 30027.0], [281.0, 30026.0], [280.0, 30027.0], [279.0, 30027.0], [273.0, 30027.0], [272.0, 30028.0], [275.0, 30027.0], [274.0, 30028.0], [278.0, 30028.0], [277.0, 30028.0], [276.0, 30027.0], [302.0, 30028.0], [303.0, 30027.0], [301.0, 30027.0], [300.0, 30028.0], [299.0, 30028.0], [298.0, 30029.0], [297.0, 30029.0], [296.0, 30030.5], [294.0, 30028.0], [289.0, 30031.0], [288.0, 30029.0], [291.0, 30028.0], [290.0, 30028.0], [293.0, 30028.0], [292.0, 30028.0], [318.0, 30027.0], [319.0, 30029.0], [317.0, 30027.0], [316.0, 30027.0], [315.0, 30027.0], [314.0, 30028.0], [313.0, 30028.0], [312.0, 30027.0], [311.0, 30026.0], [305.0, 30026.0], [304.0, 30028.0], [307.0, 30028.0], [306.0, 30027.0], [310.0, 30027.0], [309.0, 30028.0], [308.0, 30030.0], [323.0, 30027.0], [334.0, 30034.5], [332.0, 30026.0], [322.0, 30029.0], [321.0, 30028.0], [320.0, 30028.0], [331.0, 30028.0], [330.0, 30027.5], [328.0, 30027.0], [327.0, 30028.0], [326.0, 30027.0], [325.0, 30028.0], [324.0, 30028.0], [350.0, 30028.0], [351.0, 30027.0], [349.0, 30030.0], [348.0, 30027.0], [347.0, 30026.0], [346.0, 30028.0], [345.0, 30028.0], [344.0, 30031.0], [343.0, 30028.0], [337.0, 30039.0], [336.0, 30027.0], [339.0, 30031.0], [338.0, 30032.0], [342.0, 30027.0], [341.0, 30034.5], [366.0, 30028.0], [367.0, 30027.0], [365.0, 30029.0], [364.0, 30028.0], [363.0, 30028.0], [362.0, 30030.0], [361.0, 30028.0], [360.0, 30029.0], [359.0, 30028.0], [353.0, 30027.0], [352.0, 30028.0], [355.0, 30028.0], [354.0, 30027.0], [358.0, 30027.0], [357.0, 30028.0], [356.0, 30028.0], [382.0, 30027.0], [383.0, 30028.0], [381.0, 30028.0], [380.0, 30029.0], [379.0, 30028.0], [378.0, 30029.0], [377.0, 30030.0], [376.0, 30031.0], [375.0, 30030.0], [369.0, 30028.0], [368.0, 30028.0], [371.0, 30027.0], [370.0, 30031.0], [374.0, 30028.0], [373.0, 30027.0], [372.0, 30028.0], [392.0, 30029.0], [398.0, 30032.0], [395.0, 30049.0], [394.0, 30029.0], [393.0, 30029.0], [391.0, 30033.0], [390.0, 30028.0], [389.0, 30028.0], [388.0, 30029.0], [387.0, 30029.0], [386.0, 30028.0], [385.0, 30029.0], [384.0, 30028.0], [400.0, 30047.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}, {"data": [[300.58500000000015, 30029.01]], "isOverall": false, "label": "JoinRoom&Wait30sec-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61757852E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757858E12, 0.0], [1.61757852E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61757858E12, 0.0], [1.61757852E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757858E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 309.000664451827, "minX": 1.61757852E12, "maxY": 30029.01, "series": [{"data": [[1.61757858E12, 579.4297571472478], [1.61757852E12, 309.000664451827]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757852E12, 13193.514999999998]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757852E12, 30029.01]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757858E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757852E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757858E12, 0.0], [1.61757852E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757852E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757852E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757858E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757852E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757858E12, 0.0], [1.61757852E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757852E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757852E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757858E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61757852E12, "maxY": 30052.0, "series": [{"data": [[1.61757858E12, 15173.0], [1.61757852E12, 30052.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61757858E12, 367.0], [1.61757852E12, 466.7999999999993]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61757858E12, 7058.0], [1.61757852E12, 30027.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61757858E12, 1090.0], [1.61757852E12, 3053.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61757858E12, 26.0], [1.61757852E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61757858E12, 88.0], [1.61757852E12, 102.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757858E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 27.5, "minX": 1.0, "maxY": 21046.0, "series": [{"data": [[519.0, 148.0], [538.0, 51.0], [2.0, 7042.5], [561.0, 31.0], [613.0, 86.0], [648.0, 189.0], [729.0, 86.0], [793.0, 98.0], [804.0, 29.0], [833.0, 49.0], [863.0, 121.0], [851.0, 140.0], [875.0, 196.0], [889.0, 29.0], [986.0, 75.0], [1031.0, 89.0], [1073.0, 100.0], [1033.0, 80.0], [1030.0, 98.0], [1049.0, 130.0], [1052.0, 70.0], [1134.0, 81.0], [1156.0, 70.0], [1170.0, 80.0], [1188.0, 65.0], [1397.0, 139.0], [1368.0, 137.0], [1453.0, 137.0], [7.0, 3039.0], [12.0, 27.5], [15.0, 1532.0], [18.0, 7039.0], [19.0, 31.0], [20.0, 7052.0], [22.0, 1030.0], [23.0, 15051.0], [25.0, 32.0], [31.0, 15062.0], [32.0, 7056.0], [36.0, 30.5], [43.0, 28.0], [48.0, 28.0], [62.0, 31.0], [77.0, 28.0], [81.0, 1028.0], [109.0, 29.0], [134.0, 404.5], [170.0, 28.0], [172.0, 28.0], [190.0, 31.0], [192.0, 28.0], [217.0, 30.0], [1.0, 15060.0], [316.0, 34.0], [389.0, 29.0], [398.0, 29.0], [444.0, 95.0], [457.0, 37.0], [501.0, 29.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 21041.0], [648.0, 21038.5], [729.0, 21035.0], [48.0, 21026.0], [15.0, 21032.0], [1033.0, 21020.5], [1188.0, 21038.0], [18.0, 21037.0], [316.0, 21040.0], [20.0, 21038.5], [22.0, 21042.0], [23.0, 21043.5], [109.0, 21046.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1453.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[519.0, 0.0], [538.0, 0.0], [2.0, 0.0], [561.0, 0.0], [613.0, 0.0], [648.0, 0.0], [729.0, 0.0], [793.0, 0.0], [804.0, 0.0], [833.0, 0.0], [863.0, 0.0], [851.0, 0.0], [875.0, 0.0], [889.0, 0.0], [986.0, 0.0], [1031.0, 0.0], [1073.0, 0.0], [1033.0, 0.0], [1030.0, 0.0], [1049.0, 0.0], [1052.0, 0.0], [1134.0, 0.0], [1156.0, 0.0], [1170.0, 0.0], [1188.0, 0.0], [1397.0, 0.0], [1368.0, 0.0], [1453.0, 0.0], [7.0, 0.0], [12.0, 0.0], [15.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [22.0, 0.0], [23.0, 0.0], [25.0, 0.0], [31.0, 0.0], [32.0, 0.0], [36.0, 0.0], [43.0, 0.0], [48.0, 0.0], [62.0, 0.0], [77.0, 0.0], [81.0, 0.0], [109.0, 0.0], [134.0, 0.0], [170.0, 0.0], [172.0, 0.0], [190.0, 0.0], [192.0, 0.0], [217.0, 0.0], [1.0, 0.0], [316.0, 0.0], [389.0, 0.0], [398.0, 0.0], [444.0, 0.0], [457.0, 0.0], [501.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 0.0], [648.0, 0.0], [729.0, 0.0], [48.0, 0.0], [15.0, 0.0], [1033.0, 0.0], [1188.0, 0.0], [18.0, 0.0], [316.0, 0.0], [20.0, 0.0], [22.0, 0.0], [23.0, 0.0], [109.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1453.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 213.53333333333333, "minX": 1.61757852E12, "maxY": 285.9166666666667, "series": [{"data": [[1.61757858E12, 213.53333333333333], [1.61757852E12, 285.9166666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757858E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.61757852E12, "maxY": 282.3333333333333, "series": [{"data": [[1.61757858E12, 214.6], [1.61757852E12, 282.3333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61757858E12, 2.2666666666666666], [1.61757852E12, 0.25]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757858E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.61757852E12, "maxY": 275.6666666666667, "series": [{"data": [[1.61757852E12, 3.3333333333333335]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61757858E12, 214.6], [1.61757852E12, 275.6666666666667]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61757858E12, 2.2666666666666666], [1.61757852E12, 0.25]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}, {"data": [[1.61757852E12, 3.3333333333333335]], "isOverall": false, "label": "JoinRoom&Wait30sec-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757858E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.61757852E12, "maxY": 282.3333333333333, "series": [{"data": [[1.61757858E12, 214.6], [1.61757852E12, 282.3333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61757858E12, 2.2666666666666666], [1.61757852E12, 0.25]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757858E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

