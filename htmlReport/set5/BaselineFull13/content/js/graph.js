/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 41406.0, "series": [{"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 28.0], [1.6, 28.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 28.0], [2.1, 28.0], [2.2, 28.0], [2.3, 28.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 29.0], [3.4, 29.0], [3.5, 29.0], [3.6, 29.0], [3.7, 29.0], [3.8, 29.0], [3.9, 29.0], [4.0, 29.0], [4.1, 29.0], [4.2, 29.0], [4.3, 30.0], [4.4, 30.0], [4.5, 30.0], [4.6, 30.0], [4.7, 30.0], [4.8, 30.0], [4.9, 31.0], [5.0, 31.0], [5.1, 31.0], [5.2, 31.0], [5.3, 32.0], [5.4, 32.0], [5.5, 32.0], [5.6, 33.0], [5.7, 33.0], [5.8, 33.0], [5.9, 34.0], [6.0, 34.0], [6.1, 35.0], [6.2, 36.0], [6.3, 37.0], [6.4, 37.0], [6.5, 38.0], [6.6, 40.0], [6.7, 41.0], [6.8, 42.0], [6.9, 43.0], [7.0, 43.0], [7.1, 44.0], [7.2, 45.0], [7.3, 45.0], [7.4, 46.0], [7.5, 47.0], [7.6, 49.0], [7.7, 52.0], [7.8, 55.0], [7.9, 58.0], [8.0, 64.0], [8.1, 69.0], [8.2, 77.0], [8.3, 79.0], [8.4, 83.0], [8.5, 92.0], [8.6, 102.0], [8.7, 120.0], [8.8, 125.0], [8.9, 127.0], [9.0, 135.0], [9.1, 139.0], [9.2, 146.0], [9.3, 157.0], [9.4, 161.0], [9.5, 170.0], [9.6, 174.0], [9.7, 181.0], [9.8, 189.0], [9.9, 193.0], [10.0, 198.0], [10.1, 202.0], [10.2, 207.0], [10.3, 210.0], [10.4, 214.0], [10.5, 217.0], [10.6, 219.0], [10.7, 221.0], [10.8, 223.0], [10.9, 226.0], [11.0, 228.0], [11.1, 230.0], [11.2, 232.0], [11.3, 233.0], [11.4, 233.0], [11.5, 235.0], [11.6, 238.0], [11.7, 241.0], [11.8, 243.0], [11.9, 245.0], [12.0, 246.0], [12.1, 249.0], [12.2, 250.0], [12.3, 251.0], [12.4, 254.0], [12.5, 255.0], [12.6, 257.0], [12.7, 258.0], [12.8, 260.0], [12.9, 262.0], [13.0, 264.0], [13.1, 270.0], [13.2, 273.0], [13.3, 275.0], [13.4, 278.0], [13.5, 280.0], [13.6, 281.0], [13.7, 283.0], [13.8, 284.0], [13.9, 285.0], [14.0, 287.0], [14.1, 289.0], [14.2, 291.0], [14.3, 293.0], [14.4, 296.0], [14.5, 299.0], [14.6, 301.0], [14.7, 301.0], [14.8, 302.0], [14.9, 303.0], [15.0, 304.0], [15.1, 305.0], [15.2, 307.0], [15.3, 308.0], [15.4, 310.0], [15.5, 311.0], [15.6, 313.0], [15.7, 315.0], [15.8, 316.0], [15.9, 317.0], [16.0, 318.0], [16.1, 318.0], [16.2, 319.0], [16.3, 320.0], [16.4, 321.0], [16.5, 322.0], [16.6, 323.0], [16.7, 324.0], [16.8, 324.0], [16.9, 325.0], [17.0, 326.0], [17.1, 326.0], [17.2, 327.0], [17.3, 328.0], [17.4, 328.0], [17.5, 329.0], [17.6, 330.0], [17.7, 330.0], [17.8, 332.0], [17.9, 333.0], [18.0, 334.0], [18.1, 335.0], [18.2, 336.0], [18.3, 338.0], [18.4, 340.0], [18.5, 342.0], [18.6, 343.0], [18.7, 347.0], [18.8, 348.0], [18.9, 350.0], [19.0, 351.0], [19.1, 352.0], [19.2, 353.0], [19.3, 354.0], [19.4, 355.0], [19.5, 357.0], [19.6, 358.0], [19.7, 359.0], [19.8, 361.0], [19.9, 363.0], [20.0, 366.0], [20.1, 368.0], [20.2, 373.0], [20.3, 375.0], [20.4, 377.0], [20.5, 380.0], [20.6, 382.0], [20.7, 389.0], [20.8, 393.0], [20.9, 397.0], [21.0, 399.0], [21.1, 401.0], [21.2, 403.0], [21.3, 405.0], [21.4, 407.0], [21.5, 415.0], [21.6, 417.0], [21.7, 418.0], [21.8, 420.0], [21.9, 421.0], [22.0, 423.0], [22.1, 425.0], [22.2, 427.0], [22.3, 428.0], [22.4, 429.0], [22.5, 430.0], [22.6, 431.0], [22.7, 432.0], [22.8, 433.0], [22.9, 433.0], [23.0, 434.0], [23.1, 435.0], [23.2, 435.0], [23.3, 436.0], [23.4, 437.0], [23.5, 438.0], [23.6, 439.0], [23.7, 440.0], [23.8, 441.0], [23.9, 443.0], [24.0, 446.0], [24.1, 447.0], [24.2, 449.0], [24.3, 451.0], [24.4, 453.0], [24.5, 455.0], [24.6, 458.0], [24.7, 461.0], [24.8, 463.0], [24.9, 464.0], [25.0, 466.0], [25.1, 467.0], [25.2, 472.0], [25.3, 474.0], [25.4, 476.0], [25.5, 478.0], [25.6, 481.0], [25.7, 484.0], [25.8, 487.0], [25.9, 489.0], [26.0, 491.0], [26.1, 492.0], [26.2, 493.0], [26.3, 494.0], [26.4, 496.0], [26.5, 497.0], [26.6, 498.0], [26.7, 501.0], [26.8, 503.0], [26.9, 504.0], [27.0, 506.0], [27.1, 506.0], [27.2, 508.0], [27.3, 509.0], [27.4, 511.0], [27.5, 513.0], [27.6, 515.0], [27.7, 519.0], [27.8, 522.0], [27.9, 525.0], [28.0, 526.0], [28.1, 527.0], [28.2, 527.0], [28.3, 528.0], [28.4, 529.0], [28.5, 530.0], [28.6, 532.0], [28.7, 534.0], [28.8, 535.0], [28.9, 536.0], [29.0, 537.0], [29.1, 539.0], [29.2, 540.0], [29.3, 542.0], [29.4, 543.0], [29.5, 543.0], [29.6, 544.0], [29.7, 545.0], [29.8, 545.0], [29.9, 546.0], [30.0, 548.0], [30.1, 549.0], [30.2, 551.0], [30.3, 553.0], [30.4, 554.0], [30.5, 555.0], [30.6, 556.0], [30.7, 557.0], [30.8, 560.0], [30.9, 562.0], [31.0, 565.0], [31.1, 566.0], [31.2, 568.0], [31.3, 570.0], [31.4, 572.0], [31.5, 576.0], [31.6, 577.0], [31.7, 579.0], [31.8, 580.0], [31.9, 581.0], [32.0, 582.0], [32.1, 583.0], [32.2, 584.0], [32.3, 585.0], [32.4, 586.0], [32.5, 587.0], [32.6, 588.0], [32.7, 588.0], [32.8, 589.0], [32.9, 590.0], [33.0, 591.0], [33.1, 592.0], [33.2, 592.0], [33.3, 593.0], [33.4, 594.0], [33.5, 595.0], [33.6, 596.0], [33.7, 596.0], [33.8, 597.0], [33.9, 598.0], [34.0, 598.0], [34.1, 599.0], [34.2, 600.0], [34.3, 600.0], [34.4, 601.0], [34.5, 601.0], [34.6, 602.0], [34.7, 602.0], [34.8, 603.0], [34.9, 603.0], [35.0, 603.0], [35.1, 604.0], [35.2, 604.0], [35.3, 604.0], [35.4, 605.0], [35.5, 605.0], [35.6, 606.0], [35.7, 606.0], [35.8, 607.0], [35.9, 607.0], [36.0, 608.0], [36.1, 608.0], [36.2, 608.0], [36.3, 608.0], [36.4, 609.0], [36.5, 609.0], [36.6, 609.0], [36.7, 610.0], [36.8, 610.0], [36.9, 610.0], [37.0, 611.0], [37.1, 611.0], [37.2, 612.0], [37.3, 612.0], [37.4, 613.0], [37.5, 613.0], [37.6, 613.0], [37.7, 614.0], [37.8, 614.0], [37.9, 615.0], [38.0, 615.0], [38.1, 616.0], [38.2, 616.0], [38.3, 617.0], [38.4, 617.0], [38.5, 618.0], [38.6, 618.0], [38.7, 618.0], [38.8, 619.0], [38.9, 619.0], [39.0, 620.0], [39.1, 620.0], [39.2, 620.0], [39.3, 621.0], [39.4, 621.0], [39.5, 621.0], [39.6, 622.0], [39.7, 622.0], [39.8, 623.0], [39.9, 624.0], [40.0, 624.0], [40.1, 625.0], [40.2, 625.0], [40.3, 626.0], [40.4, 627.0], [40.5, 627.0], [40.6, 628.0], [40.7, 628.0], [40.8, 629.0], [40.9, 629.0], [41.0, 630.0], [41.1, 630.0], [41.2, 631.0], [41.3, 631.0], [41.4, 632.0], [41.5, 632.0], [41.6, 633.0], [41.7, 633.0], [41.8, 634.0], [41.9, 634.0], [42.0, 635.0], [42.1, 635.0], [42.2, 636.0], [42.3, 636.0], [42.4, 637.0], [42.5, 637.0], [42.6, 638.0], [42.7, 638.0], [42.8, 639.0], [42.9, 639.0], [43.0, 640.0], [43.1, 641.0], [43.2, 641.0], [43.3, 641.0], [43.4, 642.0], [43.5, 642.0], [43.6, 643.0], [43.7, 643.0], [43.8, 644.0], [43.9, 644.0], [44.0, 644.0], [44.1, 645.0], [44.2, 645.0], [44.3, 646.0], [44.4, 646.0], [44.5, 646.0], [44.6, 647.0], [44.7, 647.0], [44.8, 647.0], [44.9, 648.0], [45.0, 648.0], [45.1, 649.0], [45.2, 650.0], [45.3, 650.0], [45.4, 651.0], [45.5, 651.0], [45.6, 652.0], [45.7, 652.0], [45.8, 653.0], [45.9, 653.0], [46.0, 654.0], [46.1, 654.0], [46.2, 655.0], [46.3, 655.0], [46.4, 656.0], [46.5, 656.0], [46.6, 656.0], [46.7, 657.0], [46.8, 657.0], [46.9, 657.0], [47.0, 658.0], [47.1, 658.0], [47.2, 659.0], [47.3, 659.0], [47.4, 659.0], [47.5, 660.0], [47.6, 660.0], [47.7, 660.0], [47.8, 661.0], [47.9, 661.0], [48.0, 662.0], [48.1, 662.0], [48.2, 663.0], [48.3, 663.0], [48.4, 663.0], [48.5, 664.0], [48.6, 664.0], [48.7, 665.0], [48.8, 665.0], [48.9, 666.0], [49.0, 666.0], [49.1, 667.0], [49.2, 667.0], [49.3, 668.0], [49.4, 668.0], [49.5, 669.0], [49.6, 669.0], [49.7, 670.0], [49.8, 670.0], [49.9, 671.0], [50.0, 671.0], [50.1, 672.0], [50.2, 672.0], [50.3, 672.0], [50.4, 673.0], [50.5, 673.0], [50.6, 673.0], [50.7, 674.0], [50.8, 674.0], [50.9, 675.0], [51.0, 675.0], [51.1, 675.0], [51.2, 676.0], [51.3, 676.0], [51.4, 676.0], [51.5, 677.0], [51.6, 677.0], [51.7, 678.0], [51.8, 678.0], [51.9, 678.0], [52.0, 679.0], [52.1, 679.0], [52.2, 679.0], [52.3, 680.0], [52.4, 681.0], [52.5, 681.0], [52.6, 682.0], [52.7, 683.0], [52.8, 684.0], [52.9, 684.0], [53.0, 685.0], [53.1, 686.0], [53.2, 687.0], [53.3, 688.0], [53.4, 689.0], [53.5, 690.0], [53.6, 692.0], [53.7, 694.0], [53.8, 695.0], [53.9, 696.0], [54.0, 697.0], [54.1, 699.0], [54.2, 700.0], [54.3, 701.0], [54.4, 701.0], [54.5, 702.0], [54.6, 703.0], [54.7, 704.0], [54.8, 705.0], [54.9, 707.0], [55.0, 709.0], [55.1, 710.0], [55.2, 711.0], [55.3, 713.0], [55.4, 715.0], [55.5, 715.0], [55.6, 718.0], [55.7, 719.0], [55.8, 721.0], [55.9, 722.0], [56.0, 724.0], [56.1, 725.0], [56.2, 726.0], [56.3, 727.0], [56.4, 728.0], [56.5, 730.0], [56.6, 732.0], [56.7, 732.0], [56.8, 733.0], [56.9, 734.0], [57.0, 735.0], [57.1, 735.0], [57.2, 736.0], [57.3, 737.0], [57.4, 737.0], [57.5, 738.0], [57.6, 738.0], [57.7, 739.0], [57.8, 740.0], [57.9, 740.0], [58.0, 741.0], [58.1, 742.0], [58.2, 743.0], [58.3, 743.0], [58.4, 744.0], [58.5, 744.0], [58.6, 745.0], [58.7, 746.0], [58.8, 746.0], [58.9, 747.0], [59.0, 748.0], [59.1, 748.0], [59.2, 749.0], [59.3, 750.0], [59.4, 751.0], [59.5, 751.0], [59.6, 752.0], [59.7, 753.0], [59.8, 753.0], [59.9, 754.0], [60.0, 754.0], [60.1, 755.0], [60.2, 756.0], [60.3, 756.0], [60.4, 757.0], [60.5, 758.0], [60.6, 759.0], [60.7, 759.0], [60.8, 760.0], [60.9, 760.0], [61.0, 761.0], [61.1, 762.0], [61.2, 762.0], [61.3, 762.0], [61.4, 763.0], [61.5, 763.0], [61.6, 764.0], [61.7, 765.0], [61.8, 765.0], [61.9, 766.0], [62.0, 766.0], [62.1, 767.0], [62.2, 767.0], [62.3, 768.0], [62.4, 768.0], [62.5, 769.0], [62.6, 770.0], [62.7, 770.0], [62.8, 771.0], [62.9, 771.0], [63.0, 772.0], [63.1, 772.0], [63.2, 773.0], [63.3, 774.0], [63.4, 774.0], [63.5, 775.0], [63.6, 775.0], [63.7, 775.0], [63.8, 776.0], [63.9, 776.0], [64.0, 777.0], [64.1, 777.0], [64.2, 778.0], [64.3, 779.0], [64.4, 780.0], [64.5, 781.0], [64.6, 782.0], [64.7, 783.0], [64.8, 785.0], [64.9, 786.0], [65.0, 788.0], [65.1, 795.0], [65.2, 799.0], [65.3, 801.0], [65.4, 802.0], [65.5, 804.0], [65.6, 806.0], [65.7, 809.0], [65.8, 812.0], [65.9, 813.0], [66.0, 816.0], [66.1, 821.0], [66.2, 1030.0], [66.3, 1036.0], [66.4, 1038.0], [66.5, 1044.0], [66.6, 1173.0], [66.7, 1216.0], [66.8, 1240.0], [66.9, 1254.0], [67.0, 1264.0], [67.1, 1269.0], [67.2, 1276.0], [67.3, 1280.0], [67.4, 1331.0], [67.5, 1335.0], [67.6, 1339.0], [67.7, 1343.0], [67.8, 1357.0], [67.9, 1363.0], [68.0, 1366.0], [68.1, 1368.0], [68.2, 1372.0], [68.3, 1377.0], [68.4, 1380.0], [68.5, 1402.0], [68.6, 1418.0], [68.7, 1432.0], [68.8, 1441.0], [68.9, 1448.0], [69.0, 1450.0], [69.1, 1454.0], [69.2, 1457.0], [69.3, 1461.0], [69.4, 1465.0], [69.5, 1469.0], [69.6, 1474.0], [69.7, 1477.0], [69.8, 1480.0], [69.9, 1484.0], [70.0, 1491.0], [70.1, 1494.0], [70.2, 1497.0], [70.3, 1499.0], [70.4, 1501.0], [70.5, 1510.0], [70.6, 1514.0], [70.7, 1517.0], [70.8, 1518.0], [70.9, 1520.0], [71.0, 1522.0], [71.1, 1523.0], [71.2, 1525.0], [71.3, 1527.0], [71.4, 1529.0], [71.5, 1531.0], [71.6, 1533.0], [71.7, 1537.0], [71.8, 1543.0], [71.9, 1550.0], [72.0, 1553.0], [72.1, 1558.0], [72.2, 1560.0], [72.3, 1563.0], [72.4, 1567.0], [72.5, 1574.0], [72.6, 1586.0], [72.7, 1590.0], [72.8, 1595.0], [72.9, 1598.0], [73.0, 1602.0], [73.1, 1603.0], [73.2, 1607.0], [73.3, 1609.0], [73.4, 1611.0], [73.5, 1614.0], [73.6, 1619.0], [73.7, 1624.0], [73.8, 1626.0], [73.9, 1628.0], [74.0, 1629.0], [74.1, 1631.0], [74.2, 1633.0], [74.3, 1634.0], [74.4, 1637.0], [74.5, 1639.0], [74.6, 1640.0], [74.7, 1642.0], [74.8, 1643.0], [74.9, 1645.0], [75.0, 1646.0], [75.1, 1648.0], [75.2, 1649.0], [75.3, 1652.0], [75.4, 1653.0], [75.5, 1655.0], [75.6, 1657.0], [75.7, 1659.0], [75.8, 1662.0], [75.9, 1664.0], [76.0, 1666.0], [76.1, 1668.0], [76.2, 1670.0], [76.3, 1671.0], [76.4, 1673.0], [76.5, 1676.0], [76.6, 1679.0], [76.7, 1682.0], [76.8, 1685.0], [76.9, 1688.0], [77.0, 1693.0], [77.1, 1701.0], [77.2, 1707.0], [77.3, 1714.0], [77.4, 1719.0], [77.5, 1723.0], [77.6, 1729.0], [77.7, 1733.0], [77.8, 1738.0], [77.9, 1742.0], [78.0, 1746.0], [78.1, 1748.0], [78.2, 1751.0], [78.3, 1753.0], [78.4, 1755.0], [78.5, 1757.0], [78.6, 1760.0], [78.7, 1764.0], [78.8, 1768.0], [78.9, 1770.0], [79.0, 1772.0], [79.1, 1775.0], [79.2, 1779.0], [79.3, 1784.0], [79.4, 1788.0], [79.5, 1793.0], [79.6, 1804.0], [79.7, 1810.0], [79.8, 1821.0], [79.9, 2287.0], [80.0, 2309.0], [80.1, 2363.0], [80.2, 2379.0], [80.3, 2386.0], [80.4, 2390.0], [80.5, 2396.0], [80.6, 2555.0], [80.7, 2646.0], [80.8, 2746.0], [80.9, 2805.0], [81.0, 3034.0], [81.1, 3039.0], [81.2, 3044.0], [81.3, 3049.0], [81.4, 3090.0], [81.5, 3099.0], [81.6, 3162.0], [81.7, 3502.0], [81.8, 3524.0], [81.9, 3530.0], [82.0, 3591.0], [82.1, 3638.0], [82.2, 3658.0], [82.3, 3692.0], [82.4, 3734.0], [82.5, 3765.0], [82.6, 3780.0], [82.7, 4392.0], [82.8, 4459.0], [82.9, 4544.0], [83.0, 4609.0], [83.1, 4700.0], [83.2, 4715.0], [83.3, 4729.0], [83.4, 4748.0], [83.5, 4776.0], [83.6, 4797.0], [83.7, 4817.0], [83.8, 4837.0], [83.9, 4856.0], [84.0, 4868.0], [84.1, 4881.0], [84.2, 4904.0], [84.3, 4930.0], [84.4, 4963.0], [84.5, 4990.0], [84.6, 5003.0], [84.7, 5019.0], [84.8, 5038.0], [84.9, 5058.0], [85.0, 5089.0], [85.1, 5191.0], [85.2, 5241.0], [85.3, 5274.0], [85.4, 5313.0], [85.5, 5320.0], [85.6, 5364.0], [85.7, 5382.0], [85.8, 5410.0], [85.9, 5440.0], [86.0, 5480.0], [86.1, 5509.0], [86.2, 5533.0], [86.3, 5566.0], [86.4, 5614.0], [86.5, 5743.0], [86.6, 5768.0], [86.7, 5854.0], [86.8, 7042.0], [86.9, 7049.0], [87.0, 7053.0], [87.1, 7055.0], [87.2, 7059.0], [87.3, 7062.0], [87.4, 7066.0], [87.5, 7070.0], [87.6, 7078.0], [87.7, 7089.0], [87.8, 7098.0], [87.9, 7104.0], [88.0, 7111.0], [88.1, 7115.0], [88.2, 7125.0], [88.3, 7136.0], [88.4, 7143.0], [88.5, 7157.0], [88.6, 7166.0], [88.7, 7172.0], [88.8, 7176.0], [88.9, 7189.0], [89.0, 7192.0], [89.1, 7196.0], [89.2, 7201.0], [89.3, 7204.0], [89.4, 7208.0], [89.5, 7212.0], [89.6, 7215.0], [89.7, 7222.0], [89.8, 7230.0], [89.9, 7235.0], [90.0, 7243.0], [90.1, 7268.0], [90.2, 7272.0], [90.3, 7276.0], [90.4, 7281.0], [90.5, 7290.0], [90.6, 7297.0], [90.7, 7304.0], [90.8, 7309.0], [90.9, 7316.0], [91.0, 7326.0], [91.1, 7340.0], [91.2, 7345.0], [91.3, 7349.0], [91.4, 7353.0], [91.5, 7357.0], [91.6, 7362.0], [91.7, 7368.0], [91.8, 7377.0], [91.9, 7381.0], [92.0, 7385.0], [92.1, 7387.0], [92.2, 7424.0], [92.3, 7441.0], [92.4, 7446.0], [92.5, 7456.0], [92.6, 7468.0], [92.7, 7623.0], [92.8, 7633.0], [92.9, 15054.0], [93.0, 15060.0], [93.1, 15064.0], [93.2, 15067.0], [93.3, 15070.0], [93.4, 21016.0], [93.5, 21020.0], [93.6, 21023.0], [93.7, 21024.0], [93.8, 21025.0], [93.9, 21025.0], [94.0, 21026.0], [94.1, 21027.0], [94.2, 21027.0], [94.3, 21028.0], [94.4, 21028.0], [94.5, 21029.0], [94.6, 21029.0], [94.7, 21030.0], [94.8, 21031.0], [94.9, 21031.0], [95.0, 21032.0], [95.1, 21032.0], [95.2, 21032.0], [95.3, 21033.0], [95.4, 21033.0], [95.5, 21034.0], [95.6, 21034.0], [95.7, 21034.0], [95.8, 21035.0], [95.9, 21035.0], [96.0, 21035.0], [96.1, 21036.0], [96.2, 21036.0], [96.3, 21036.0], [96.4, 21037.0], [96.5, 21037.0], [96.6, 21037.0], [96.7, 21038.0], [96.8, 21038.0], [96.9, 21039.0], [97.0, 21039.0], [97.1, 21040.0], [97.2, 21040.0], [97.3, 21040.0], [97.4, 21041.0], [97.5, 21041.0], [97.6, 21042.0], [97.7, 21042.0], [97.8, 21043.0], [97.9, 21043.0], [98.0, 21044.0], [98.1, 21045.0], [98.2, 21045.0], [98.3, 21046.0], [98.4, 21046.0], [98.5, 21047.0], [98.6, 21048.0], [98.7, 21049.0], [98.8, 21049.0], [98.9, 21050.0], [99.0, 21051.0], [99.1, 21052.0], [99.2, 21052.0], [99.3, 21053.0], [99.4, 21054.0], [99.5, 21055.0], [99.6, 21057.0], [99.7, 21059.0], [99.8, 21061.0], [99.9, 21067.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 24108.0], [0.1, 24116.0], [0.2, 24116.0], [0.3, 24116.0], [0.4, 24136.0], [0.5, 24138.0], [0.6, 24138.0], [0.7, 24144.0], [0.8, 24144.0], [0.9, 24149.0], [1.0, 24152.0], [1.1, 24153.0], [1.2, 24154.0], [1.3, 24161.0], [1.4, 24161.0], [1.5, 24162.0], [1.6, 24163.0], [1.7, 24163.0], [1.8, 24167.0], [1.9, 24170.0], [2.0, 24176.0], [2.1, 24178.0], [2.2, 24183.0], [2.3, 24186.0], [2.4, 24186.0], [2.5, 24190.0], [2.6, 24191.0], [2.7, 24191.0], [2.8, 24192.0], [2.9, 24194.0], [3.0, 24195.0], [3.1, 24197.0], [3.2, 24197.0], [3.3, 24197.0], [3.4, 24201.0], [3.5, 24204.0], [3.6, 24206.0], [3.7, 24212.0], [3.8, 24216.0], [3.9, 24217.0], [4.0, 24222.0], [4.1, 24223.0], [4.2, 24226.0], [4.3, 24227.0], [4.4, 24227.0], [4.5, 24228.0], [4.6, 24229.0], [4.7, 24229.0], [4.8, 24230.0], [4.9, 24241.0], [5.0, 24242.0], [5.1, 24243.0], [5.2, 24244.0], [5.3, 24246.0], [5.4, 24251.0], [5.5, 24251.0], [5.6, 24251.0], [5.7, 24253.0], [5.8, 24253.0], [5.9, 24253.0], [6.0, 24254.0], [6.1, 24255.0], [6.2, 24255.0], [6.3, 24255.0], [6.4, 24258.0], [6.5, 24259.0], [6.6, 24260.0], [6.7, 24264.0], [6.8, 24264.0], [6.9, 24265.0], [7.0, 24266.0], [7.1, 24266.0], [7.2, 24266.0], [7.3, 24266.0], [7.4, 24267.0], [7.5, 24269.0], [7.6, 24270.0], [7.7, 24270.0], [7.8, 24272.0], [7.9, 24272.0], [8.0, 24272.0], [8.1, 24273.0], [8.2, 24273.0], [8.3, 24273.0], [8.4, 24273.0], [8.5, 24274.0], [8.6, 24274.0], [8.7, 24275.0], [8.8, 24275.0], [8.9, 24276.0], [9.0, 24276.0], [9.1, 24276.0], [9.2, 24277.0], [9.3, 24279.0], [9.4, 24280.0], [9.5, 24281.0], [9.6, 24282.0], [9.7, 24282.0], [9.8, 24282.0], [9.9, 24285.0], [10.0, 24286.0], [10.1, 24287.0], [10.2, 24287.0], [10.3, 24287.0], [10.4, 24289.0], [10.5, 24290.0], [10.6, 24293.0], [10.7, 24294.0], [10.8, 24295.0], [10.9, 24296.0], [11.0, 24296.0], [11.1, 24305.0], [11.2, 24306.0], [11.3, 24309.0], [11.4, 24309.0], [11.5, 24312.0], [11.6, 24315.0], [11.7, 24315.0], [11.8, 24317.0], [11.9, 24317.0], [12.0, 24318.0], [12.1, 24319.0], [12.2, 24319.0], [12.3, 24320.0], [12.4, 24320.0], [12.5, 24320.0], [12.6, 24321.0], [12.7, 24322.0], [12.8, 24322.0], [12.9, 24324.0], [13.0, 24325.0], [13.1, 24326.0], [13.2, 24328.0], [13.3, 24330.0], [13.4, 24330.0], [13.5, 24330.0], [13.6, 24331.0], [13.7, 24332.0], [13.8, 24332.0], [13.9, 24332.0], [14.0, 24333.0], [14.1, 24334.0], [14.2, 24335.0], [14.3, 24338.0], [14.4, 24339.0], [14.5, 24341.0], [14.6, 24344.0], [14.7, 24345.0], [14.8, 24345.0], [14.9, 24345.0], [15.0, 24346.0], [15.1, 24346.0], [15.2, 24347.0], [15.3, 24348.0], [15.4, 24348.0], [15.5, 24348.0], [15.6, 24349.0], [15.7, 24349.0], [15.8, 24350.0], [15.9, 24350.0], [16.0, 24350.0], [16.1, 24351.0], [16.2, 24351.0], [16.3, 24352.0], [16.4, 24352.0], [16.5, 24352.0], [16.6, 24353.0], [16.7, 24357.0], [16.8, 24358.0], [16.9, 24360.0], [17.0, 24361.0], [17.1, 24361.0], [17.2, 24362.0], [17.3, 24362.0], [17.4, 24362.0], [17.5, 24362.0], [17.6, 24363.0], [17.7, 24363.0], [17.8, 24364.0], [17.9, 24364.0], [18.0, 24365.0], [18.1, 24366.0], [18.2, 24366.0], [18.3, 24366.0], [18.4, 24367.0], [18.5, 24367.0], [18.6, 24367.0], [18.7, 24367.0], [18.8, 24368.0], [18.9, 24369.0], [19.0, 24369.0], [19.1, 24370.0], [19.2, 24370.0], [19.3, 24371.0], [19.4, 24371.0], [19.5, 24372.0], [19.6, 24372.0], [19.7, 24374.0], [19.8, 24374.0], [19.9, 24374.0], [20.0, 24375.0], [20.1, 24375.0], [20.2, 24378.0], [20.3, 24378.0], [20.4, 24381.0], [20.5, 24382.0], [20.6, 24383.0], [20.7, 24383.0], [20.8, 24384.0], [20.9, 24386.0], [21.0, 24386.0], [21.1, 24389.0], [21.2, 24389.0], [21.3, 24390.0], [21.4, 24392.0], [21.5, 24393.0], [21.6, 24393.0], [21.7, 24393.0], [21.8, 24393.0], [21.9, 24393.0], [22.0, 24394.0], [22.1, 24394.0], [22.2, 24397.0], [22.3, 24397.0], [22.4, 24397.0], [22.5, 24398.0], [22.6, 24398.0], [22.7, 24398.0], [22.8, 24398.0], [22.9, 24399.0], [23.0, 24401.0], [23.1, 24403.0], [23.2, 24403.0], [23.3, 24406.0], [23.4, 24406.0], [23.5, 24407.0], [23.6, 24407.0], [23.7, 24407.0], [23.8, 24410.0], [23.9, 24411.0], [24.0, 24412.0], [24.1, 24413.0], [24.2, 24414.0], [24.3, 24414.0], [24.4, 24414.0], [24.5, 24414.0], [24.6, 24415.0], [24.7, 24415.0], [24.8, 24416.0], [24.9, 24418.0], [25.0, 24419.0], [25.1, 24419.0], [25.2, 24420.0], [25.3, 24421.0], [25.4, 24422.0], [25.5, 24422.0], [25.6, 24422.0], [25.7, 24422.0], [25.8, 24423.0], [25.9, 24426.0], [26.0, 24427.0], [26.1, 24427.0], [26.2, 24428.0], [26.3, 24429.0], [26.4, 24429.0], [26.5, 24430.0], [26.6, 24431.0], [26.7, 24431.0], [26.8, 24432.0], [26.9, 24433.0], [27.0, 24434.0], [27.1, 24435.0], [27.2, 24437.0], [27.3, 24438.0], [27.4, 24441.0], [27.5, 24441.0], [27.6, 24441.0], [27.7, 24441.0], [27.8, 24442.0], [27.9, 24443.0], [28.0, 24444.0], [28.1, 24446.0], [28.2, 24447.0], [28.3, 24448.0], [28.4, 24449.0], [28.5, 24449.0], [28.6, 24450.0], [28.7, 24451.0], [28.8, 24452.0], [28.9, 24453.0], [29.0, 24454.0], [29.1, 24454.0], [29.2, 24455.0], [29.3, 24456.0], [29.4, 24456.0], [29.5, 24459.0], [29.6, 24459.0], [29.7, 24460.0], [29.8, 24461.0], [29.9, 24462.0], [30.0, 24462.0], [30.1, 24464.0], [30.2, 24464.0], [30.3, 24464.0], [30.4, 24464.0], [30.5, 24465.0], [30.6, 24465.0], [30.7, 24465.0], [30.8, 24466.0], [30.9, 24466.0], [31.0, 24466.0], [31.1, 24466.0], [31.2, 24466.0], [31.3, 24466.0], [31.4, 24467.0], [31.5, 24468.0], [31.6, 24469.0], [31.7, 24470.0], [31.8, 24471.0], [31.9, 24473.0], [32.0, 24473.0], [32.1, 24475.0], [32.2, 24475.0], [32.3, 24476.0], [32.4, 24478.0], [32.5, 24478.0], [32.6, 24478.0], [32.7, 24479.0], [32.8, 24481.0], [32.9, 24482.0], [33.0, 24482.0], [33.1, 24483.0], [33.2, 24483.0], [33.3, 24483.0], [33.4, 24483.0], [33.5, 24488.0], [33.6, 24488.0], [33.7, 24490.0], [33.8, 24492.0], [33.9, 24492.0], [34.0, 24493.0], [34.1, 24495.0], [34.2, 24495.0], [34.3, 24496.0], [34.4, 24496.0], [34.5, 24497.0], [34.6, 24499.0], [34.7, 24499.0], [34.8, 24499.0], [34.9, 24500.0], [35.0, 24500.0], [35.1, 24501.0], [35.2, 24502.0], [35.3, 24503.0], [35.4, 24503.0], [35.5, 24504.0], [35.6, 24507.0], [35.7, 24508.0], [35.8, 24508.0], [35.9, 24509.0], [36.0, 24511.0], [36.1, 24512.0], [36.2, 24512.0], [36.3, 24514.0], [36.4, 24515.0], [36.5, 24515.0], [36.6, 24516.0], [36.7, 24516.0], [36.8, 24517.0], [36.9, 24517.0], [37.0, 24517.0], [37.1, 24518.0], [37.2, 24518.0], [37.3, 24518.0], [37.4, 24518.0], [37.5, 24518.0], [37.6, 24522.0], [37.7, 24523.0], [37.8, 24523.0], [37.9, 24524.0], [38.0, 24525.0], [38.1, 24527.0], [38.2, 24528.0], [38.3, 24530.0], [38.4, 24530.0], [38.5, 24532.0], [38.6, 24532.0], [38.7, 24533.0], [38.8, 24533.0], [38.9, 24534.0], [39.0, 24534.0], [39.1, 24534.0], [39.2, 24538.0], [39.3, 24539.0], [39.4, 24539.0], [39.5, 24540.0], [39.6, 24543.0], [39.7, 24545.0], [39.8, 24546.0], [39.9, 24546.0], [40.0, 24547.0], [40.1, 24547.0], [40.2, 24547.0], [40.3, 24549.0], [40.4, 24549.0], [40.5, 24549.0], [40.6, 24549.0], [40.7, 24550.0], [40.8, 24551.0], [40.9, 24551.0], [41.0, 24552.0], [41.1, 24552.0], [41.2, 24553.0], [41.3, 24553.0], [41.4, 24554.0], [41.5, 24555.0], [41.6, 24555.0], [41.7, 24555.0], [41.8, 24561.0], [41.9, 24562.0], [42.0, 24563.0], [42.1, 24564.0], [42.2, 24566.0], [42.3, 24567.0], [42.4, 24567.0], [42.5, 24569.0], [42.6, 24570.0], [42.7, 24570.0], [42.8, 24571.0], [42.9, 24572.0], [43.0, 24573.0], [43.1, 24574.0], [43.2, 24577.0], [43.3, 24577.0], [43.4, 24578.0], [43.5, 24579.0], [43.6, 24580.0], [43.7, 24580.0], [43.8, 24581.0], [43.9, 24581.0], [44.0, 24581.0], [44.1, 24582.0], [44.2, 24584.0], [44.3, 24584.0], [44.4, 24584.0], [44.5, 24584.0], [44.6, 24587.0], [44.7, 24588.0], [44.8, 24589.0], [44.9, 24589.0], [45.0, 24591.0], [45.1, 24591.0], [45.2, 24592.0], [45.3, 24593.0], [45.4, 24594.0], [45.5, 24595.0], [45.6, 24597.0], [45.7, 24598.0], [45.8, 24599.0], [45.9, 24601.0], [46.0, 24602.0], [46.1, 24602.0], [46.2, 24603.0], [46.3, 24603.0], [46.4, 24603.0], [46.5, 24604.0], [46.6, 24604.0], [46.7, 24604.0], [46.8, 24604.0], [46.9, 24607.0], [47.0, 24607.0], [47.1, 24607.0], [47.2, 24615.0], [47.3, 24622.0], [47.4, 24622.0], [47.5, 24622.0], [47.6, 24624.0], [47.7, 24625.0], [47.8, 24626.0], [47.9, 24627.0], [48.0, 24630.0], [48.1, 24633.0], [48.2, 24634.0], [48.3, 24635.0], [48.4, 24636.0], [48.5, 24637.0], [48.6, 24637.0], [48.7, 24637.0], [48.8, 24638.0], [48.9, 24638.0], [49.0, 24640.0], [49.1, 24642.0], [49.2, 24643.0], [49.3, 24649.0], [49.4, 24650.0], [49.5, 24650.0], [49.6, 24651.0], [49.7, 24652.0], [49.8, 24652.0], [49.9, 24652.0], [50.0, 24652.0], [50.1, 24657.0], [50.2, 24661.0], [50.3, 24665.0], [50.4, 24665.0], [50.5, 24667.0], [50.6, 24676.0], [50.7, 24679.0], [50.8, 24680.0], [50.9, 24681.0], [51.0, 24681.0], [51.1, 24687.0], [51.2, 24689.0], [51.3, 24692.0], [51.4, 24693.0], [51.5, 24694.0], [51.6, 24695.0], [51.7, 24696.0], [51.8, 24696.0], [51.9, 24697.0], [52.0, 24699.0], [52.1, 24702.0], [52.2, 24705.0], [52.3, 24707.0], [52.4, 24707.0], [52.5, 24710.0], [52.6, 24710.0], [52.7, 24710.0], [52.8, 24711.0], [52.9, 24711.0], [53.0, 24711.0], [53.1, 24712.0], [53.2, 24712.0], [53.3, 24722.0], [53.4, 24725.0], [53.5, 24725.0], [53.6, 24727.0], [53.7, 24727.0], [53.8, 24731.0], [53.9, 24732.0], [54.0, 24732.0], [54.1, 24733.0], [54.2, 24734.0], [54.3, 24735.0], [54.4, 24737.0], [54.5, 24739.0], [54.6, 24740.0], [54.7, 24740.0], [54.8, 24740.0], [54.9, 24741.0], [55.0, 24742.0], [55.1, 24744.0], [55.2, 24744.0], [55.3, 24745.0], [55.4, 24745.0], [55.5, 24747.0], [55.6, 24747.0], [55.7, 24753.0], [55.8, 24753.0], [55.9, 24754.0], [56.0, 24755.0], [56.1, 24759.0], [56.2, 24759.0], [56.3, 24759.0], [56.4, 24761.0], [56.5, 24762.0], [56.6, 24763.0], [56.7, 24763.0], [56.8, 24763.0], [56.9, 24764.0], [57.0, 24764.0], [57.1, 24765.0], [57.2, 24765.0], [57.3, 24766.0], [57.4, 24766.0], [57.5, 24769.0], [57.6, 24774.0], [57.7, 24775.0], [57.8, 24776.0], [57.9, 24778.0], [58.0, 24778.0], [58.1, 24781.0], [58.2, 24784.0], [58.3, 24784.0], [58.4, 24784.0], [58.5, 24784.0], [58.6, 24785.0], [58.7, 24789.0], [58.8, 24790.0], [58.9, 24791.0], [59.0, 24793.0], [59.1, 24794.0], [59.2, 24796.0], [59.3, 24796.0], [59.4, 24797.0], [59.5, 24797.0], [59.6, 24798.0], [59.7, 24799.0], [59.8, 24799.0], [59.9, 24799.0], [60.0, 24800.0], [60.1, 24801.0], [60.2, 24801.0], [60.3, 24801.0], [60.4, 24801.0], [60.5, 24803.0], [60.6, 24805.0], [60.7, 24805.0], [60.8, 24806.0], [60.9, 24806.0], [61.0, 24807.0], [61.1, 24809.0], [61.2, 24809.0], [61.3, 24809.0], [61.4, 24809.0], [61.5, 24809.0], [61.6, 24810.0], [61.7, 24810.0], [61.8, 24810.0], [61.9, 24811.0], [62.0, 24811.0], [62.1, 24812.0], [62.2, 24812.0], [62.3, 24813.0], [62.4, 24814.0], [62.5, 24815.0], [62.6, 24815.0], [62.7, 24816.0], [62.8, 24817.0], [62.9, 24818.0], [63.0, 24821.0], [63.1, 24823.0], [63.2, 24823.0], [63.3, 24828.0], [63.4, 24828.0], [63.5, 24829.0], [63.6, 24830.0], [63.7, 24830.0], [63.8, 24830.0], [63.9, 24831.0], [64.0, 24837.0], [64.1, 24837.0], [64.2, 24837.0], [64.3, 24837.0], [64.4, 24838.0], [64.5, 24839.0], [64.6, 24841.0], [64.7, 24842.0], [64.8, 24842.0], [64.9, 24842.0], [65.0, 24843.0], [65.1, 24844.0], [65.2, 24844.0], [65.3, 24844.0], [65.4, 24844.0], [65.5, 24845.0], [65.6, 24845.0], [65.7, 24846.0], [65.8, 24848.0], [65.9, 24849.0], [66.0, 24850.0], [66.1, 24852.0], [66.2, 24852.0], [66.3, 24859.0], [66.4, 24859.0], [66.5, 24860.0], [66.6, 24860.0], [66.7, 24861.0], [66.8, 24863.0], [66.9, 24864.0], [67.0, 24864.0], [67.1, 24864.0], [67.2, 24868.0], [67.3, 24870.0], [67.4, 24871.0], [67.5, 24872.0], [67.6, 24872.0], [67.7, 24872.0], [67.8, 24874.0], [67.9, 24876.0], [68.0, 24878.0], [68.1, 24881.0], [68.2, 24882.0], [68.3, 24882.0], [68.4, 24882.0], [68.5, 24883.0], [68.6, 24884.0], [68.7, 24885.0], [68.8, 24886.0], [68.9, 24886.0], [69.0, 24887.0], [69.1, 24887.0], [69.2, 24888.0], [69.3, 24888.0], [69.4, 24889.0], [69.5, 24889.0], [69.6, 24891.0], [69.7, 24896.0], [69.8, 24898.0], [69.9, 24899.0], [70.0, 24899.0], [70.1, 24901.0], [70.2, 24901.0], [70.3, 24901.0], [70.4, 24904.0], [70.5, 24906.0], [70.6, 24907.0], [70.7, 24907.0], [70.8, 24910.0], [70.9, 24914.0], [71.0, 24914.0], [71.1, 24915.0], [71.2, 24916.0], [71.3, 24918.0], [71.4, 24918.0], [71.5, 24919.0], [71.6, 24920.0], [71.7, 24920.0], [71.8, 24920.0], [71.9, 24921.0], [72.0, 24922.0], [72.1, 24927.0], [72.2, 24929.0], [72.3, 24930.0], [72.4, 24931.0], [72.5, 24931.0], [72.6, 24932.0], [72.7, 24933.0], [72.8, 24934.0], [72.9, 24934.0], [73.0, 24935.0], [73.1, 24935.0], [73.2, 24937.0], [73.3, 24941.0], [73.4, 24944.0], [73.5, 24944.0], [73.6, 24945.0], [73.7, 24946.0], [73.8, 24947.0], [73.9, 24947.0], [74.0, 24947.0], [74.1, 24947.0], [74.2, 24947.0], [74.3, 24948.0], [74.4, 24948.0], [74.5, 24948.0], [74.6, 24950.0], [74.7, 24950.0], [74.8, 24950.0], [74.9, 24951.0], [75.0, 24952.0], [75.1, 24953.0], [75.2, 24954.0], [75.3, 24955.0], [75.4, 24955.0], [75.5, 24955.0], [75.6, 24956.0], [75.7, 24956.0], [75.8, 24957.0], [75.9, 24959.0], [76.0, 24959.0], [76.1, 24966.0], [76.2, 24966.0], [76.3, 24966.0], [76.4, 24966.0], [76.5, 24967.0], [76.6, 24969.0], [76.7, 24969.0], [76.8, 24970.0], [76.9, 24971.0], [77.0, 24974.0], [77.1, 24974.0], [77.2, 24976.0], [77.3, 24977.0], [77.4, 24978.0], [77.5, 24978.0], [77.6, 24978.0], [77.7, 24980.0], [77.8, 24980.0], [77.9, 24981.0], [78.0, 24981.0], [78.1, 24982.0], [78.2, 24982.0], [78.3, 24984.0], [78.4, 24986.0], [78.5, 24987.0], [78.6, 24989.0], [78.7, 24990.0], [78.8, 24990.0], [78.9, 24992.0], [79.0, 24993.0], [79.1, 24993.0], [79.2, 24994.0], [79.3, 24994.0], [79.4, 24996.0], [79.5, 24996.0], [79.6, 24997.0], [79.7, 24997.0], [79.8, 24998.0], [79.9, 24998.0], [80.0, 24999.0], [80.1, 24999.0], [80.2, 25001.0], [80.3, 25001.0], [80.4, 25001.0], [80.5, 25002.0], [80.6, 25004.0], [80.7, 25005.0], [80.8, 25005.0], [80.9, 25006.0], [81.0, 25007.0], [81.1, 25007.0], [81.2, 25007.0], [81.3, 25009.0], [81.4, 25009.0], [81.5, 25009.0], [81.6, 25011.0], [81.7, 25014.0], [81.8, 25018.0], [81.9, 25018.0], [82.0, 25018.0], [82.1, 25020.0], [82.2, 25022.0], [82.3, 25022.0], [82.4, 25022.0], [82.5, 25023.0], [82.6, 25024.0], [82.7, 25024.0], [82.8, 25026.0], [82.9, 25027.0], [83.0, 25029.0], [83.1, 25029.0], [83.2, 25029.0], [83.3, 25030.0], [83.4, 25031.0], [83.5, 25032.0], [83.6, 25033.0], [83.7, 25035.0], [83.8, 25036.0], [83.9, 25037.0], [84.0, 25039.0], [84.1, 25039.0], [84.2, 25040.0], [84.3, 25041.0], [84.4, 25042.0], [84.5, 25044.0], [84.6, 25045.0], [84.7, 25045.0], [84.8, 25045.0], [84.9, 25048.0], [85.0, 25049.0], [85.1, 25050.0], [85.2, 25050.0], [85.3, 25051.0], [85.4, 25051.0], [85.5, 25052.0], [85.6, 25052.0], [85.7, 25053.0], [85.8, 25054.0], [85.9, 25055.0], [86.0, 25055.0], [86.1, 25056.0], [86.2, 25058.0], [86.3, 25060.0], [86.4, 25061.0], [86.5, 25061.0], [86.6, 25062.0], [86.7, 25063.0], [86.8, 25063.0], [86.9, 25065.0], [87.0, 25065.0], [87.1, 25066.0], [87.2, 25067.0], [87.3, 25070.0], [87.4, 25071.0], [87.5, 25071.0], [87.6, 25072.0], [87.7, 25073.0], [87.8, 25074.0], [87.9, 25075.0], [88.0, 25077.0], [88.1, 25078.0], [88.2, 25078.0], [88.3, 25079.0], [88.4, 25085.0], [88.5, 25085.0], [88.6, 25086.0], [88.7, 25088.0], [88.8, 25088.0], [88.9, 25095.0], [89.0, 25095.0], [89.1, 25096.0], [89.2, 25097.0], [89.3, 25097.0], [89.4, 25100.0], [89.5, 25101.0], [89.6, 25101.0], [89.7, 25102.0], [89.8, 25102.0], [89.9, 25105.0], [90.0, 25106.0], [90.1, 25109.0], [90.2, 25110.0], [90.3, 25110.0], [90.4, 25110.0], [90.5, 25110.0], [90.6, 25111.0], [90.7, 25111.0], [90.8, 25112.0], [90.9, 25113.0], [91.0, 25113.0], [91.1, 25114.0], [91.2, 25115.0], [91.3, 25116.0], [91.4, 25116.0], [91.5, 25118.0], [91.6, 25119.0], [91.7, 25120.0], [91.8, 25120.0], [91.9, 25121.0], [92.0, 25121.0], [92.1, 25122.0], [92.2, 25123.0], [92.3, 25123.0], [92.4, 25125.0], [92.5, 25126.0], [92.6, 25127.0], [92.7, 25129.0], [92.8, 25130.0], [92.9, 25133.0], [93.0, 25133.0], [93.1, 25133.0], [93.2, 25134.0], [93.3, 25136.0], [93.4, 25137.0], [93.5, 25138.0], [93.6, 25138.0], [93.7, 25139.0], [93.8, 25139.0], [93.9, 25140.0], [94.0, 25140.0], [94.1, 25140.0], [94.2, 25140.0], [94.3, 25141.0], [94.4, 25143.0], [94.5, 25148.0], [94.6, 25148.0], [94.7, 25148.0], [94.8, 25148.0], [94.9, 25148.0], [95.0, 25150.0], [95.1, 25152.0], [95.2, 25152.0], [95.3, 25156.0], [95.4, 25158.0], [95.5, 25158.0], [95.6, 25158.0], [95.7, 25159.0], [95.8, 25161.0], [95.9, 25161.0], [96.0, 25162.0], [96.1, 25163.0], [96.2, 25164.0], [96.3, 25165.0], [96.4, 25166.0], [96.5, 25166.0], [96.6, 25169.0], [96.7, 25169.0], [96.8, 25170.0], [96.9, 25173.0], [97.0, 25174.0], [97.1, 25175.0], [97.2, 25177.0], [97.3, 25178.0], [97.4, 25184.0], [97.5, 25186.0], [97.6, 25190.0], [97.7, 25195.0], [97.8, 25199.0], [97.9, 25200.0], [98.0, 25204.0], [98.1, 25205.0], [98.2, 25215.0], [98.3, 25216.0], [98.4, 25217.0], [98.5, 25220.0], [98.6, 25226.0], [98.7, 25226.0], [98.8, 25236.0], [98.9, 25236.0], [99.0, 25239.0], [99.1, 25245.0], [99.2, 25245.0], [99.3, 25249.0], [99.4, 25252.0], [99.5, 25255.0], [99.6, 25259.0], [99.7, 25260.0], [99.8, 25265.0], [99.9, 25267.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 39105.0], [0.1, 39115.0], [0.2, 39122.0], [0.3, 39122.0], [0.4, 39134.0], [0.5, 39136.0], [0.6, 39137.0], [0.7, 39142.0], [0.8, 39144.0], [0.9, 39149.0], [1.0, 39160.0], [1.1, 39171.0], [1.2, 39173.0], [1.3, 39174.0], [1.4, 39174.0], [1.5, 39179.0], [1.6, 39180.0], [1.7, 39183.0], [1.8, 39183.0], [1.9, 39183.0], [2.0, 39185.0], [2.1, 39187.0], [2.2, 39188.0], [2.3, 39189.0], [2.4, 39189.0], [2.5, 39191.0], [2.6, 39191.0], [2.7, 39192.0], [2.8, 39192.0], [2.9, 39192.0], [3.0, 39192.0], [3.1, 39193.0], [3.2, 39197.0], [3.3, 39198.0], [3.4, 39200.0], [3.5, 39201.0], [3.6, 39203.0], [3.7, 39203.0], [3.8, 39207.0], [3.9, 39209.0], [4.0, 39209.0], [4.1, 39213.0], [4.2, 39218.0], [4.3, 39236.0], [4.4, 39242.0], [4.5, 39243.0], [4.6, 39246.0], [4.7, 39247.0], [4.8, 39252.0], [4.9, 39253.0], [5.0, 39254.0], [5.1, 39254.0], [5.2, 39254.0], [5.3, 39261.0], [5.4, 39262.0], [5.5, 39263.0], [5.6, 39264.0], [5.7, 39264.0], [5.8, 39265.0], [5.9, 39266.0], [6.0, 39266.0], [6.1, 39267.0], [6.2, 39267.0], [6.3, 39267.0], [6.4, 39275.0], [6.5, 39276.0], [6.6, 39276.0], [6.7, 39279.0], [6.8, 39279.0], [6.9, 39280.0], [7.0, 39280.0], [7.1, 39280.0], [7.2, 39285.0], [7.3, 39287.0], [7.4, 39288.0], [7.5, 39288.0], [7.6, 39290.0], [7.7, 39290.0], [7.8, 39290.0], [7.9, 39290.0], [8.0, 39294.0], [8.1, 39296.0], [8.2, 39296.0], [8.3, 39297.0], [8.4, 39298.0], [8.5, 39298.0], [8.6, 39298.0], [8.7, 39298.0], [8.8, 39299.0], [8.9, 39305.0], [9.0, 39305.0], [9.1, 39306.0], [9.2, 39306.0], [9.3, 39309.0], [9.4, 39310.0], [9.5, 39312.0], [9.6, 39316.0], [9.7, 39325.0], [9.8, 39325.0], [9.9, 39326.0], [10.0, 39352.0], [10.1, 39406.0], [10.2, 39409.0], [10.3, 39416.0], [10.4, 39419.0], [10.5, 39426.0], [10.6, 39465.0], [10.7, 39485.0], [10.8, 39486.0], [10.9, 39513.0], [11.0, 39523.0], [11.1, 39600.0], [11.2, 39600.0], [11.3, 39601.0], [11.4, 39602.0], [11.5, 39605.0], [11.6, 39607.0], [11.7, 39609.0], [11.8, 39615.0], [11.9, 39620.0], [12.0, 39622.0], [12.1, 39623.0], [12.2, 39624.0], [12.3, 39624.0], [12.4, 39624.0], [12.5, 39631.0], [12.6, 39631.0], [12.7, 39638.0], [12.8, 39639.0], [12.9, 39639.0], [13.0, 39641.0], [13.1, 39642.0], [13.2, 39642.0], [13.3, 39644.0], [13.4, 39645.0], [13.5, 39646.0], [13.6, 39647.0], [13.7, 39647.0], [13.8, 39650.0], [13.9, 39651.0], [14.0, 39651.0], [14.1, 39652.0], [14.2, 39652.0], [14.3, 39653.0], [14.4, 39655.0], [14.5, 39656.0], [14.6, 39657.0], [14.7, 39658.0], [14.8, 39660.0], [14.9, 39661.0], [15.0, 39662.0], [15.1, 39662.0], [15.2, 39662.0], [15.3, 39663.0], [15.4, 39665.0], [15.5, 39665.0], [15.6, 39665.0], [15.7, 39665.0], [15.8, 39666.0], [15.9, 39669.0], [16.0, 39673.0], [16.1, 39674.0], [16.2, 39680.0], [16.3, 39687.0], [16.4, 39688.0], [16.5, 39689.0], [16.6, 39695.0], [16.7, 39697.0], [16.8, 39699.0], [16.9, 39699.0], [17.0, 39701.0], [17.1, 39701.0], [17.2, 39701.0], [17.3, 39701.0], [17.4, 39702.0], [17.5, 39706.0], [17.6, 39707.0], [17.7, 39707.0], [17.8, 39707.0], [17.9, 39707.0], [18.0, 39709.0], [18.1, 39714.0], [18.2, 39715.0], [18.3, 39715.0], [18.4, 39715.0], [18.5, 39716.0], [18.6, 39716.0], [18.7, 39716.0], [18.8, 39716.0], [18.9, 39716.0], [19.0, 39722.0], [19.1, 39723.0], [19.2, 39725.0], [19.3, 39727.0], [19.4, 39728.0], [19.5, 39728.0], [19.6, 39729.0], [19.7, 39734.0], [19.8, 39740.0], [19.9, 39741.0], [20.0, 39744.0], [20.1, 39745.0], [20.2, 39745.0], [20.3, 39746.0], [20.4, 39746.0], [20.5, 39746.0], [20.6, 39752.0], [20.7, 39752.0], [20.8, 39755.0], [20.9, 39756.0], [21.0, 39757.0], [21.1, 39758.0], [21.2, 39760.0], [21.3, 39761.0], [21.4, 39783.0], [21.5, 39783.0], [21.6, 39794.0], [21.7, 39821.0], [21.8, 39829.0], [21.9, 39831.0], [22.0, 39833.0], [22.1, 39835.0], [22.2, 39838.0], [22.3, 39840.0], [22.4, 39843.0], [22.5, 39846.0], [22.6, 39853.0], [22.7, 39853.0], [22.8, 39860.0], [22.9, 39862.0], [23.0, 39865.0], [23.1, 39871.0], [23.2, 39875.0], [23.3, 39877.0], [23.4, 39885.0], [23.5, 39887.0], [23.6, 39889.0], [23.7, 39890.0], [23.8, 39890.0], [23.9, 39890.0], [24.0, 39890.0], [24.1, 39901.0], [24.2, 39901.0], [24.3, 39903.0], [24.4, 39904.0], [24.5, 39905.0], [24.6, 39905.0], [24.7, 39905.0], [24.8, 39905.0], [24.9, 39905.0], [25.0, 39906.0], [25.1, 39906.0], [25.2, 39906.0], [25.3, 39907.0], [25.4, 39913.0], [25.5, 39913.0], [25.6, 39913.0], [25.7, 39919.0], [25.8, 39919.0], [25.9, 39919.0], [26.0, 39919.0], [26.1, 39921.0], [26.2, 39925.0], [26.3, 39928.0], [26.4, 39928.0], [26.5, 39928.0], [26.6, 39928.0], [26.7, 39928.0], [26.8, 39928.0], [26.9, 39928.0], [27.0, 39928.0], [27.1, 39928.0], [27.2, 39928.0], [27.3, 39928.0], [27.4, 39929.0], [27.5, 39930.0], [27.6, 39933.0], [27.7, 39934.0], [27.8, 39936.0], [27.9, 39942.0], [28.0, 39943.0], [28.1, 39943.0], [28.2, 39943.0], [28.3, 39943.0], [28.4, 39943.0], [28.5, 39943.0], [28.6, 39943.0], [28.7, 39943.0], [28.8, 39943.0], [28.9, 39943.0], [29.0, 39943.0], [29.1, 39943.0], [29.2, 39943.0], [29.3, 39943.0], [29.4, 39946.0], [29.5, 39950.0], [29.6, 39954.0], [29.7, 39955.0], [29.8, 39956.0], [29.9, 39957.0], [30.0, 39957.0], [30.1, 39957.0], [30.2, 39957.0], [30.3, 39957.0], [30.4, 39957.0], [30.5, 39957.0], [30.6, 39957.0], [30.7, 39957.0], [30.8, 39957.0], [30.9, 39957.0], [31.0, 39957.0], [31.1, 39957.0], [31.2, 39957.0], [31.3, 39957.0], [31.4, 39958.0], [31.5, 39958.0], [31.6, 39958.0], [31.7, 39958.0], [31.8, 39958.0], [31.9, 39958.0], [32.0, 39959.0], [32.1, 39959.0], [32.2, 39963.0], [32.3, 39964.0], [32.4, 39966.0], [32.5, 39968.0], [32.6, 39970.0], [32.7, 39971.0], [32.8, 39973.0], [32.9, 39975.0], [33.0, 39977.0], [33.1, 39977.0], [33.2, 39979.0], [33.3, 39983.0], [33.4, 39984.0], [33.5, 39985.0], [33.6, 39986.0], [33.7, 39987.0], [33.8, 39988.0], [33.9, 39989.0], [34.0, 39990.0], [34.1, 39991.0], [34.2, 39993.0], [34.3, 39994.0], [34.4, 39995.0], [34.5, 39997.0], [34.6, 39997.0], [34.7, 40000.0], [34.8, 40001.0], [34.9, 40005.0], [35.0, 40006.0], [35.1, 40006.0], [35.2, 40007.0], [35.3, 40008.0], [35.4, 40011.0], [35.5, 40012.0], [35.6, 40012.0], [35.7, 40013.0], [35.8, 40015.0], [35.9, 40015.0], [36.0, 40017.0], [36.1, 40018.0], [36.2, 40021.0], [36.3, 40025.0], [36.4, 40029.0], [36.5, 40035.0], [36.6, 40042.0], [36.7, 40043.0], [36.8, 40044.0], [36.9, 40045.0], [37.0, 40048.0], [37.1, 40048.0], [37.2, 40049.0], [37.3, 40050.0], [37.4, 40054.0], [37.5, 40055.0], [37.6, 40056.0], [37.7, 40057.0], [37.8, 40059.0], [37.9, 40059.0], [38.0, 40061.0], [38.1, 40061.0], [38.2, 40062.0], [38.3, 40063.0], [38.4, 40064.0], [38.5, 40066.0], [38.6, 40066.0], [38.7, 40068.0], [38.8, 40069.0], [38.9, 40069.0], [39.0, 40069.0], [39.1, 40070.0], [39.2, 40070.0], [39.3, 40071.0], [39.4, 40071.0], [39.5, 40073.0], [39.6, 40074.0], [39.7, 40074.0], [39.8, 40076.0], [39.9, 40077.0], [40.0, 40078.0], [40.1, 40078.0], [40.2, 40079.0], [40.3, 40080.0], [40.4, 40080.0], [40.5, 40081.0], [40.6, 40081.0], [40.7, 40083.0], [40.8, 40085.0], [40.9, 40085.0], [41.0, 40087.0], [41.1, 40087.0], [41.2, 40087.0], [41.3, 40087.0], [41.4, 40089.0], [41.5, 40090.0], [41.6, 40090.0], [41.7, 40091.0], [41.8, 40092.0], [41.9, 40093.0], [42.0, 40093.0], [42.1, 40094.0], [42.2, 40097.0], [42.3, 40097.0], [42.4, 40098.0], [42.5, 40098.0], [42.6, 40098.0], [42.7, 40098.0], [42.8, 40100.0], [42.9, 40103.0], [43.0, 40105.0], [43.1, 40105.0], [43.2, 40106.0], [43.3, 40107.0], [43.4, 40108.0], [43.5, 40108.0], [43.6, 40109.0], [43.7, 40110.0], [43.8, 40110.0], [43.9, 40111.0], [44.0, 40111.0], [44.1, 40111.0], [44.2, 40113.0], [44.3, 40113.0], [44.4, 40114.0], [44.5, 40114.0], [44.6, 40114.0], [44.7, 40114.0], [44.8, 40115.0], [44.9, 40116.0], [45.0, 40117.0], [45.1, 40117.0], [45.2, 40118.0], [45.3, 40118.0], [45.4, 40118.0], [45.5, 40120.0], [45.6, 40120.0], [45.7, 40120.0], [45.8, 40120.0], [45.9, 40122.0], [46.0, 40122.0], [46.1, 40123.0], [46.2, 40123.0], [46.3, 40124.0], [46.4, 40126.0], [46.5, 40128.0], [46.6, 40130.0], [46.7, 40131.0], [46.8, 40136.0], [46.9, 40141.0], [47.0, 40143.0], [47.1, 40158.0], [47.2, 40160.0], [47.3, 40161.0], [47.4, 40162.0], [47.5, 40163.0], [47.6, 40166.0], [47.7, 40167.0], [47.8, 40168.0], [47.9, 40173.0], [48.0, 40177.0], [48.1, 40178.0], [48.2, 40180.0], [48.3, 40186.0], [48.4, 40188.0], [48.5, 40188.0], [48.6, 40193.0], [48.7, 40200.0], [48.8, 40201.0], [48.9, 40203.0], [49.0, 40205.0], [49.1, 40206.0], [49.2, 40209.0], [49.3, 40220.0], [49.4, 40222.0], [49.5, 40225.0], [49.6, 40242.0], [49.7, 40264.0], [49.8, 40278.0], [49.9, 40281.0], [50.0, 40289.0], [50.1, 40294.0], [50.2, 40296.0], [50.3, 40317.0], [50.4, 40323.0], [50.5, 40329.0], [50.6, 40338.0], [50.7, 40342.0], [50.8, 40345.0], [50.9, 40347.0], [51.0, 40347.0], [51.1, 40349.0], [51.2, 40352.0], [51.3, 40356.0], [51.4, 40356.0], [51.5, 40357.0], [51.6, 40357.0], [51.7, 40363.0], [51.8, 40368.0], [51.9, 40374.0], [52.0, 40378.0], [52.1, 40379.0], [52.2, 40383.0], [52.3, 40390.0], [52.4, 40395.0], [52.5, 40399.0], [52.6, 40400.0], [52.7, 40401.0], [52.8, 40402.0], [52.9, 40413.0], [53.0, 40414.0], [53.1, 40415.0], [53.2, 40418.0], [53.3, 40420.0], [53.4, 40421.0], [53.5, 40424.0], [53.6, 40425.0], [53.7, 40430.0], [53.8, 40432.0], [53.9, 40434.0], [54.0, 40435.0], [54.1, 40438.0], [54.2, 40446.0], [54.3, 40452.0], [54.4, 40453.0], [54.5, 40453.0], [54.6, 40456.0], [54.7, 40459.0], [54.8, 40463.0], [54.9, 40465.0], [55.0, 40466.0], [55.1, 40469.0], [55.2, 40469.0], [55.3, 40472.0], [55.4, 40474.0], [55.5, 40474.0], [55.6, 40474.0], [55.7, 40475.0], [55.8, 40475.0], [55.9, 40477.0], [56.0, 40480.0], [56.1, 40480.0], [56.2, 40481.0], [56.3, 40481.0], [56.4, 40483.0], [56.5, 40484.0], [56.6, 40486.0], [56.7, 40487.0], [56.8, 40488.0], [56.9, 40489.0], [57.0, 40489.0], [57.1, 40489.0], [57.2, 40490.0], [57.3, 40490.0], [57.4, 40490.0], [57.5, 40492.0], [57.6, 40493.0], [57.7, 40493.0], [57.8, 40493.0], [57.9, 40493.0], [58.0, 40494.0], [58.1, 40496.0], [58.2, 40497.0], [58.3, 40500.0], [58.4, 40501.0], [58.5, 40502.0], [58.6, 40504.0], [58.7, 40507.0], [58.8, 40508.0], [58.9, 40508.0], [59.0, 40509.0], [59.1, 40513.0], [59.2, 40522.0], [59.3, 40524.0], [59.4, 40524.0], [59.5, 40525.0], [59.6, 40525.0], [59.7, 40526.0], [59.8, 40526.0], [59.9, 40527.0], [60.0, 40527.0], [60.1, 40529.0], [60.2, 40529.0], [60.3, 40534.0], [60.4, 40535.0], [60.5, 40540.0], [60.6, 40542.0], [60.7, 40542.0], [60.8, 40542.0], [60.9, 40544.0], [61.0, 40545.0], [61.1, 40546.0], [61.2, 40547.0], [61.3, 40548.0], [61.4, 40553.0], [61.5, 40553.0], [61.6, 40557.0], [61.7, 40560.0], [61.8, 40561.0], [61.9, 40570.0], [62.0, 40571.0], [62.1, 40574.0], [62.2, 40574.0], [62.3, 40576.0], [62.4, 40577.0], [62.5, 40577.0], [62.6, 40577.0], [62.7, 40579.0], [62.8, 40579.0], [62.9, 40580.0], [63.0, 40580.0], [63.1, 40581.0], [63.2, 40583.0], [63.3, 40583.0], [63.4, 40584.0], [63.5, 40584.0], [63.6, 40585.0], [63.7, 40588.0], [63.8, 40591.0], [63.9, 40592.0], [64.0, 40597.0], [64.1, 40597.0], [64.2, 40600.0], [64.3, 40603.0], [64.4, 40606.0], [64.5, 40607.0], [64.6, 40608.0], [64.7, 40609.0], [64.8, 40610.0], [64.9, 40611.0], [65.0, 40612.0], [65.1, 40612.0], [65.2, 40615.0], [65.3, 40617.0], [65.4, 40619.0], [65.5, 40621.0], [65.6, 40629.0], [65.7, 40630.0], [65.8, 40631.0], [65.9, 40631.0], [66.0, 40632.0], [66.1, 40633.0], [66.2, 40635.0], [66.3, 40636.0], [66.4, 40638.0], [66.5, 40651.0], [66.6, 40652.0], [66.7, 40654.0], [66.8, 40655.0], [66.9, 40656.0], [67.0, 40656.0], [67.1, 40658.0], [67.2, 40659.0], [67.3, 40661.0], [67.4, 40670.0], [67.5, 40670.0], [67.6, 40670.0], [67.7, 40670.0], [67.8, 40670.0], [67.9, 40670.0], [68.0, 40670.0], [68.1, 40670.0], [68.2, 40670.0], [68.3, 40670.0], [68.4, 40671.0], [68.5, 40671.0], [68.6, 40671.0], [68.7, 40671.0], [68.8, 40671.0], [68.9, 40671.0], [69.0, 40671.0], [69.1, 40672.0], [69.2, 40675.0], [69.3, 40683.0], [69.4, 40684.0], [69.5, 40685.0], [69.6, 40685.0], [69.7, 40685.0], [69.8, 40685.0], [69.9, 40685.0], [70.0, 40685.0], [70.1, 40685.0], [70.2, 40685.0], [70.3, 40685.0], [70.4, 40685.0], [70.5, 40686.0], [70.6, 40686.0], [70.7, 40686.0], [70.8, 40686.0], [70.9, 40691.0], [71.0, 40692.0], [71.1, 40695.0], [71.2, 40698.0], [71.3, 40700.0], [71.4, 40700.0], [71.5, 40700.0], [71.6, 40700.0], [71.7, 40700.0], [71.8, 40700.0], [71.9, 40700.0], [72.0, 40705.0], [72.1, 40705.0], [72.2, 40714.0], [72.3, 40715.0], [72.4, 40715.0], [72.5, 40715.0], [72.6, 40715.0], [72.7, 40716.0], [72.8, 40716.0], [72.9, 40720.0], [73.0, 40725.0], [73.1, 40728.0], [73.2, 40730.0], [73.3, 40730.0], [73.4, 40730.0], [73.5, 40730.0], [73.6, 40731.0], [73.7, 40734.0], [73.8, 40735.0], [73.9, 40735.0], [74.0, 40736.0], [74.1, 40736.0], [74.2, 40736.0], [74.3, 40742.0], [74.4, 40743.0], [74.5, 40743.0], [74.6, 40745.0], [74.7, 40745.0], [74.8, 40745.0], [74.9, 40745.0], [75.0, 40745.0], [75.1, 40751.0], [75.2, 40774.0], [75.3, 40778.0], [75.4, 40781.0], [75.5, 40783.0], [75.6, 40789.0], [75.7, 40789.0], [75.8, 40796.0], [75.9, 40801.0], [76.0, 40805.0], [76.1, 40807.0], [76.2, 40808.0], [76.3, 40808.0], [76.4, 40820.0], [76.5, 40822.0], [76.6, 40823.0], [76.7, 40823.0], [76.8, 40824.0], [76.9, 40825.0], [77.0, 40833.0], [77.1, 40835.0], [77.2, 40840.0], [77.3, 40846.0], [77.4, 40848.0], [77.5, 40854.0], [77.6, 40856.0], [77.7, 40860.0], [77.8, 40869.0], [77.9, 40874.0], [78.0, 40875.0], [78.1, 40875.0], [78.2, 40876.0], [78.3, 40878.0], [78.4, 40878.0], [78.5, 40878.0], [78.6, 40880.0], [78.7, 40880.0], [78.8, 40880.0], [78.9, 40880.0], [79.0, 40881.0], [79.1, 40881.0], [79.2, 40881.0], [79.3, 40882.0], [79.4, 40882.0], [79.5, 40882.0], [79.6, 40883.0], [79.7, 40883.0], [79.8, 40883.0], [79.9, 40884.0], [80.0, 40884.0], [80.1, 40884.0], [80.2, 40884.0], [80.3, 40887.0], [80.4, 40888.0], [80.5, 40888.0], [80.6, 40888.0], [80.7, 40888.0], [80.8, 40889.0], [80.9, 40889.0], [81.0, 40891.0], [81.1, 40891.0], [81.2, 40892.0], [81.3, 40892.0], [81.4, 40892.0], [81.5, 40892.0], [81.6, 40893.0], [81.7, 40893.0], [81.8, 40893.0], [81.9, 40893.0], [82.0, 40894.0], [82.1, 40894.0], [82.2, 40895.0], [82.3, 40895.0], [82.4, 40895.0], [82.5, 40896.0], [82.6, 40897.0], [82.7, 40897.0], [82.8, 40898.0], [82.9, 40899.0], [83.0, 40900.0], [83.1, 40900.0], [83.2, 40900.0], [83.3, 40900.0], [83.4, 40901.0], [83.5, 40902.0], [83.6, 40902.0], [83.7, 40902.0], [83.8, 40903.0], [83.9, 40905.0], [84.0, 40905.0], [84.1, 40906.0], [84.2, 40907.0], [84.3, 40907.0], [84.4, 40909.0], [84.5, 40911.0], [84.6, 40912.0], [84.7, 40915.0], [84.8, 40916.0], [84.9, 40917.0], [85.0, 40919.0], [85.1, 40920.0], [85.2, 40920.0], [85.3, 40923.0], [85.4, 40926.0], [85.5, 40927.0], [85.6, 40928.0], [85.7, 40929.0], [85.8, 40931.0], [85.9, 40932.0], [86.0, 40934.0], [86.1, 40935.0], [86.2, 40944.0], [86.3, 40961.0], [86.4, 40964.0], [86.5, 40967.0], [86.6, 40968.0], [86.7, 40969.0], [86.8, 40974.0], [86.9, 40978.0], [87.0, 40978.0], [87.1, 40986.0], [87.2, 41001.0], [87.3, 41002.0], [87.4, 41004.0], [87.5, 41008.0], [87.6, 41008.0], [87.7, 41017.0], [87.8, 41082.0], [87.9, 41084.0], [88.0, 41085.0], [88.1, 41090.0], [88.2, 41091.0], [88.3, 41094.0], [88.4, 41096.0], [88.5, 41098.0], [88.6, 41101.0], [88.7, 41115.0], [88.8, 41118.0], [88.9, 41120.0], [89.0, 41130.0], [89.1, 41135.0], [89.2, 41140.0], [89.3, 41145.0], [89.4, 41151.0], [89.5, 41153.0], [89.6, 41153.0], [89.7, 41155.0], [89.8, 41156.0], [89.9, 41156.0], [90.0, 41158.0], [90.1, 41162.0], [90.2, 41163.0], [90.3, 41164.0], [90.4, 41165.0], [90.5, 41165.0], [90.6, 41166.0], [90.7, 41167.0], [90.8, 41168.0], [90.9, 41168.0], [91.0, 41169.0], [91.1, 41170.0], [91.2, 41173.0], [91.3, 41173.0], [91.4, 41183.0], [91.5, 41184.0], [91.6, 41185.0], [91.7, 41188.0], [91.8, 41189.0], [91.9, 41189.0], [92.0, 41190.0], [92.1, 41191.0], [92.2, 41191.0], [92.3, 41191.0], [92.4, 41194.0], [92.5, 41194.0], [92.6, 41196.0], [92.7, 41196.0], [92.8, 41198.0], [92.9, 41198.0], [93.0, 41199.0], [93.1, 41199.0], [93.2, 41201.0], [93.3, 41202.0], [93.4, 41204.0], [93.5, 41205.0], [93.6, 41209.0], [93.7, 41210.0], [93.8, 41210.0], [93.9, 41211.0], [94.0, 41214.0], [94.1, 41215.0], [94.2, 41216.0], [94.3, 41217.0], [94.4, 41217.0], [94.5, 41219.0], [94.6, 41220.0], [94.7, 41222.0], [94.8, 41222.0], [94.9, 41225.0], [95.0, 41225.0], [95.1, 41227.0], [95.2, 41227.0], [95.3, 41228.0], [95.4, 41229.0], [95.5, 41230.0], [95.6, 41230.0], [95.7, 41232.0], [95.8, 41233.0], [95.9, 41239.0], [96.0, 41240.0], [96.1, 41241.0], [96.2, 41242.0], [96.3, 41244.0], [96.4, 41245.0], [96.5, 41246.0], [96.6, 41247.0], [96.7, 41248.0], [96.8, 41248.0], [96.9, 41251.0], [97.0, 41252.0], [97.1, 41253.0], [97.2, 41254.0], [97.3, 41265.0], [97.4, 41270.0], [97.5, 41276.0], [97.6, 41280.0], [97.7, 41284.0], [97.8, 41289.0], [97.9, 41290.0], [98.0, 41293.0], [98.1, 41297.0], [98.2, 41298.0], [98.3, 41300.0], [98.4, 41301.0], [98.5, 41309.0], [98.6, 41313.0], [98.7, 41315.0], [98.8, 41322.0], [98.9, 41323.0], [99.0, 41332.0], [99.1, 41334.0], [99.2, 41346.0], [99.3, 41354.0], [99.4, 41363.0], [99.5, 41365.0], [99.6, 41372.0], [99.7, 41377.0], [99.8, 41396.0], [99.9, 41406.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4995.0, "series": [{"data": [[0.0, 2147.0], [600.0, 4995.0], [700.0, 2772.0], [800.0, 226.0], [1000.0, 109.0], [1100.0, 24.0], [1200.0, 169.0], [1300.0, 282.0], [1400.0, 467.0], [1500.0, 648.0], [1600.0, 1038.0], [1700.0, 620.0], [1800.0, 67.0], [2200.0, 31.0], [2300.0, 137.0], [2400.0, 6.0], [2500.0, 42.0], [2600.0, 14.0], [2700.0, 36.0], [2800.0, 12.0], [3000.0, 140.0], [3100.0, 38.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 3.0], [3500.0, 79.0], [3600.0, 77.0], [3700.0, 91.0], [3800.0, 5.0], [4300.0, 5.0], [4600.0, 33.0], [4500.0, 32.0], [4400.0, 31.0], [4700.0, 131.0], [4800.0, 140.0], [5000.0, 110.0], [4900.0, 97.0], [5100.0, 24.0], [5300.0, 101.0], [5200.0, 64.0], [5400.0, 73.0], [5500.0, 82.0], [5600.0, 7.0], [5700.0, 66.0], [5800.0, 7.0], [6100.0, 1.0], [7000.0, 278.0], [7100.0, 335.0], [7200.0, 371.0], [7300.0, 385.0], [7400.0, 117.0], [7600.0, 51.0], [15000.0, 123.0], [15600.0, 6.0], [21000.0, 1658.0], [100.0, 362.0], [200.0, 1119.0], [300.0, 1637.0], [400.0, 1402.0], [500.0, 1883.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[24400.0, 118.0], [24300.0, 119.0], [24200.0, 78.0], [24100.0, 33.0], [24500.0, 110.0], [24900.0, 101.0], [24600.0, 62.0], [24700.0, 79.0], [24800.0, 101.0], [25000.0, 93.0], [25100.0, 85.0], [25200.0, 21.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[39200.0, 56.0], [39100.0, 33.0], [39300.0, 12.0], [39700.0, 46.0], [39800.0, 24.0], [39900.0, 106.0], [39400.0, 8.0], [39500.0, 2.0], [40000.0, 81.0], [40800.0, 71.0], [40700.0, 46.0], [40900.0, 43.0], [40500.0, 59.0], [40600.0, 71.0], [39600.0, 59.0], [40100.0, 59.0], [40400.0, 57.0], [40300.0, 23.0], [40200.0, 16.0], [41000.0, 14.0], [41100.0, 46.0], [41200.0, 51.0], [41300.0, 16.0], [41400.0, 1.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 41400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1658.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 14396.0, "series": [{"data": [[0.0, 2147.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 14396.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 8810.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 1658.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 275.03096539162095, "minX": 1.61757954E12, "maxY": 1000.0, "series": [{"data": [[1.61757954E12, 538.0270000000004]], "isOverall": false, "label": "CreateRoom-SelectFC-Ready", "isController": false}, {"data": [[1.61757954E12, 1000.0], [1.6175796E12, 946.1950906465632], [1.61757966E12, 275.03096539162095]], "isOverall": false, "label": "JoinServer+ChangeNickName+JoinRoom&Ready", "isController": false}, {"data": [[1.6175796E12, 514.4110000000013]], "isOverall": false, "label": "JoinServer+JoinRoom&waitfor(1min)ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757966E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 41272.5, "series": [{"data": [[2.0, 21033.0], [3.0, 21023.0], [4.0, 21043.0], [5.0, 21026.0], [6.0, 21024.0], [7.0, 21040.0], [8.0, 21037.0], [9.0, 21039.0], [10.0, 21040.0], [11.0, 21024.0], [12.0, 21050.0], [13.0, 21036.0], [14.0, 21038.0], [15.0, 21039.0], [16.0, 21038.0], [17.0, 21037.0], [18.0, 21045.0], [19.0, 21037.0], [20.0, 21037.0], [21.0, 21038.0], [22.0, 21037.0], [23.0, 21033.0], [24.0, 21038.0], [25.0, 21039.0], [26.0, 21037.0], [27.0, 21036.0], [28.0, 21037.0], [29.0, 21038.0], [30.0, 21034.0], [31.0, 21036.0], [33.0, 21035.0], [32.0, 21036.0], [35.0, 21036.0], [34.0, 21037.0], [37.0, 21036.0], [36.0, 21036.0], [39.0, 21047.0], [38.0, 21034.0], [41.0, 21036.0], [40.0, 21036.0], [43.0, 21045.0], [42.0, 21036.0], [45.0, 21034.0], [44.0, 21034.0], [47.0, 21035.0], [46.0, 21035.0], [49.0, 21044.0], [51.0, 21045.0], [50.0, 21044.0], [53.0, 21034.0], [52.0, 21045.0], [55.0, 21036.0], [54.0, 21032.0], [57.0, 21033.0], [56.0, 21033.0], [59.0, 21034.0], [58.0, 21035.0], [61.0, 21035.0], [60.0, 21033.0], [63.0, 21043.0], [62.0, 21042.0], [67.0, 21032.0], [66.0, 21042.0], [65.0, 21033.0], [64.0, 21033.0], [71.0, 21031.0], [70.0, 21032.0], [69.0, 21032.0], [68.0, 21033.0], [75.0, 21036.0], [74.0, 21036.0], [73.0, 21032.0], [72.0, 21035.0], [79.0, 21034.0], [78.0, 21045.0], [77.0, 21046.0], [76.0, 21036.0], [83.0, 21032.0], [82.0, 21033.0], [81.0, 21033.0], [80.0, 21034.0], [87.0, 21029.0], [86.0, 21028.0], [85.0, 21028.0], [84.0, 21027.0], [91.0, 21034.5], [89.0, 21028.0], [88.0, 21028.0], [95.0, 21031.0], [94.0, 21039.0], [93.0, 21032.5], [99.0, 21028.0], [98.0, 21032.0], [97.0, 21030.0], [96.0, 21031.0], [103.0, 21043.0], [102.0, 21033.0], [101.0, 21041.0], [100.0, 21032.0], [107.0, 21043.0], [106.0, 21043.0], [105.0, 21040.0], [104.0, 21045.0], [111.0, 21032.0], [110.0, 21030.0], [109.0, 21042.0], [108.0, 21039.0], [115.0, 21038.0], [114.0, 21036.0], [113.0, 21039.0], [112.0, 21040.0], [119.0, 21042.0], [118.0, 21042.0], [117.0, 21042.0], [116.0, 21039.0], [123.0, 21036.0], [122.0, 21045.0], [121.0, 21049.0], [120.0, 21040.0], [127.0, 21033.0], [126.0, 21046.0], [125.0, 21038.0], [124.0, 21034.0], [135.0, 21043.0], [134.0, 21038.0], [133.0, 21043.0], [132.0, 21033.0], [131.0, 21040.0], [130.0, 21044.0], [129.0, 21037.0], [128.0, 21045.0], [143.0, 21036.0], [142.0, 21027.0], [141.0, 21027.0], [140.0, 21026.0], [139.0, 21036.0], [138.0, 21037.0], [137.0, 21028.0], [136.0, 21042.0], [151.0, 21029.0], [150.0, 21039.0], [149.0, 21030.0], [148.0, 21040.0], [147.0, 21041.0], [146.0, 21028.0], [145.0, 21026.0], [144.0, 21026.0], [159.0, 21032.0], [158.0, 21036.0], [157.0, 21032.0], [156.0, 21037.0], [154.0, 21037.0], [153.0, 21038.0], [152.0, 21029.0], [167.0, 21027.0], [166.0, 21028.0], [165.0, 21028.0], [164.0, 21029.0], [163.0, 21034.0], [162.0, 21030.0], [161.0, 21030.0], [160.0, 21036.0], [175.0, 21025.0], [174.0, 21032.0], [173.0, 21033.0], [172.0, 21032.0], [171.0, 21033.0], [170.0, 21033.0], [169.0, 21031.0], [168.0, 21031.0], [183.0, 21036.0], [182.0, 21035.0], [181.0, 21041.0], [180.0, 21036.0], [179.0, 21037.0], [178.0, 21037.0], [177.0, 21033.0], [176.0, 21034.0], [191.0, 21035.0], [190.0, 21031.0], [189.0, 21036.0], [188.0, 21036.0], [187.0, 21038.0], [186.0, 21034.0], [185.0, 21035.0], [184.0, 21029.0], [199.0, 21036.0], [198.0, 21032.0], [197.0, 21022.0], [196.0, 21033.0], [195.0, 21029.0], [194.0, 21034.0], [193.0, 21030.0], [192.0, 21030.0], [207.0, 21040.0], [206.0, 21031.0], [205.0, 21032.0], [204.0, 21034.0], [203.0, 21034.0], [202.0, 21035.0], [201.0, 21035.0], [200.0, 21037.0], [215.0, 21036.0], [214.0, 21027.0], [213.0, 21041.0], [212.0, 21038.0], [211.0, 21042.0], [210.0, 21034.0], [209.0, 21040.0], [208.0, 21040.0], [223.0, 21036.0], [222.0, 21034.0], [221.0, 21023.0], [220.0, 21035.0], [219.0, 21033.0], [218.0, 21038.0], [217.0, 21035.0], [216.0, 21032.0], [231.0, 21031.0], [230.0, 21032.0], [229.0, 21039.5], [227.0, 21038.0], [226.0, 21033.0], [225.0, 21042.0], [239.0, 21027.0], [238.0, 21032.0], [237.0, 21033.0], [236.0, 21037.0], [235.0, 21030.0], [234.0, 21030.0], [233.0, 21039.0], [232.0, 21036.0], [247.0, 21035.0], [246.0, 21035.0], [245.0, 21036.0], [244.0, 21026.0], [243.0, 21036.0], [242.0, 21038.0], [241.0, 21025.0], [240.0, 21036.0], [255.0, 21043.0], [254.0, 21039.0], [253.0, 21043.0], [252.0, 21040.0], [251.0, 21044.0], [250.0, 21042.0], [249.0, 21042.0], [248.0, 21024.0], [270.0, 21031.0], [271.0, 21035.0], [269.0, 21033.0], [268.0, 21036.0], [267.0, 21027.0], [266.0, 21036.0], [265.0, 21035.0], [264.0, 21037.0], [263.0, 21036.0], [257.0, 21041.0], [256.0, 21032.0], [259.0, 21031.0], [258.0, 21042.0], [262.0, 21030.0], [261.0, 21035.0], [260.0, 21040.0], [286.0, 21044.5], [287.0, 21051.0], [284.0, 21043.0], [275.0, 21034.0], [274.0, 21032.5], [272.0, 21037.0], [283.0, 21034.0], [282.0, 21036.0], [281.0, 21035.0], [280.0, 21037.0], [279.0, 21036.0], [278.0, 21037.0], [277.0, 21032.0], [276.0, 21038.0], [301.0, 21031.0], [302.0, 21026.0], [300.0, 21027.0], [291.0, 21045.0], [290.0, 21040.0], [289.0, 21051.0], [288.0, 21050.0], [299.0, 21032.0], [298.0, 21028.0], [297.0, 21043.0], [296.0, 21055.0], [295.0, 21047.0], [294.0, 21065.0], [293.0, 21048.0], [292.0, 21056.0], [318.0, 21035.0], [319.0, 21044.0], [317.0, 21036.0], [316.0, 21041.0], [315.0, 21041.0], [314.0, 21052.0], [313.0, 21039.0], [312.0, 21039.0], [310.0, 21040.0], [305.0, 21043.0], [304.0, 21043.5], [307.0, 21049.0], [306.0, 21039.0], [309.0, 21038.0], [308.0, 21041.0], [334.0, 21036.0], [335.0, 21035.0], [333.0, 21027.0], [332.0, 21031.0], [331.0, 21025.0], [330.0, 21026.0], [329.0, 21053.0], [328.0, 21039.0], [327.0, 21027.0], [321.0, 21042.0], [320.0, 21048.0], [323.0, 21041.0], [322.0, 21035.0], [326.0, 21033.0], [325.0, 21040.0], [324.0, 21034.0], [350.0, 21041.0], [351.0, 21037.0], [349.0, 21042.0], [348.0, 21039.0], [347.0, 21025.0], [346.0, 21025.0], [345.0, 21031.0], [344.0, 21033.0], [343.0, 21026.0], [337.0, 21025.0], [336.0, 21035.0], [339.0, 21025.0], [338.0, 21026.0], [342.0, 21052.5], [340.0, 21032.0], [365.0, 21031.0], [366.0, 21027.0], [364.0, 21032.0], [355.0, 21037.0], [354.0, 21036.0], [353.0, 21036.0], [352.0, 21038.0], [363.0, 21036.0], [362.0, 21034.0], [361.0, 21035.0], [360.0, 21034.0], [359.0, 21048.0], [357.0, 21072.0], [356.0, 21039.0], [381.0, 21055.0], [382.0, 21051.0], [380.0, 21053.0], [371.0, 21057.0], [370.0, 21064.0], [369.0, 21064.0], [368.0, 21046.0], [379.0, 21043.5], [377.0, 21044.0], [376.0, 21027.0], [375.0, 21041.0], [374.0, 21031.0], [373.0, 21028.0], [372.0, 21030.0], [398.0, 21030.0], [399.0, 21037.0], [397.0, 21037.0], [396.0, 21047.0], [395.0, 21060.0], [394.0, 21060.0], [393.0, 21055.0], [392.0, 21066.0], [391.0, 21053.0], [385.0, 21050.0], [384.0, 21038.0], [387.0, 21040.0], [386.0, 21045.0], [390.0, 21047.0], [389.0, 21035.0], [388.0, 21043.0], [414.0, 21049.0], [415.0, 21053.0], [413.0, 21040.0], [412.0, 21036.0], [411.0, 21042.0], [410.0, 21040.0], [409.0, 21056.0], [408.0, 21045.0], [407.0, 21047.0], [401.0, 21036.0], [400.0, 21042.0], [403.0, 21026.0], [402.0, 21032.0], [406.0, 21042.0], [405.0, 21031.0], [404.0, 21045.0], [430.0, 21034.0], [431.0, 21050.0], [429.0, 21056.0], [428.0, 21037.0], [427.0, 21038.0], [426.0, 21048.0], [425.0, 21044.0], [424.0, 21044.0], [423.0, 21037.0], [417.0, 21041.0], [416.0, 21038.0], [419.0, 21035.0], [418.0, 21040.0], [422.0, 21036.0], [421.0, 21045.0], [420.0, 21036.0], [446.0, 21020.0], [447.0, 21025.0], [445.0, 21027.0], [444.0, 21024.0], [443.0, 21024.0], [442.0, 21025.0], [441.0, 21025.0], [440.0, 21023.0], [439.0, 21029.0], [433.0, 21027.0], [432.0, 21027.0], [435.0, 21030.0], [434.0, 21032.0], [438.0, 21037.0], [437.0, 21024.0], [436.0, 21029.0], [462.0, 21024.0], [463.0, 21023.0], [461.0, 21023.0], [460.0, 21030.0], [459.0, 21025.0], [458.0, 21027.0], [457.0, 21036.0], [456.0, 21032.0], [455.0, 21028.0], [449.0, 21018.0], [448.0, 21023.0], [451.0, 21022.0], [450.0, 21030.0], [454.0, 21031.0], [453.0, 21020.5], [478.0, 21029.0], [479.0, 21033.0], [477.0, 21030.0], [476.0, 21030.0], [475.0, 21036.0], [474.0, 21032.0], [473.0, 21034.0], [472.0, 21032.0], [471.0, 21033.0], [465.0, 21031.0], [464.0, 21023.0], [467.0, 21026.0], [466.0, 21032.0], [470.0, 21020.0], [469.0, 21025.0], [468.0, 21032.0], [494.0, 21022.0], [495.0, 21026.0], [493.0, 21024.0], [492.0, 21024.0], [491.0, 21028.0], [490.0, 21025.0], [489.0, 21025.0], [488.0, 21023.0], [487.0, 21030.0], [481.0, 21027.0], [480.0, 21027.0], [483.0, 21026.0], [482.0, 21029.0], [486.0, 21027.0], [485.0, 21026.0], [484.0, 21028.0], [510.0, 21025.0], [511.0, 21025.0], [509.0, 21026.0], [508.0, 21027.0], [507.0, 21027.0], [506.0, 21027.0], [505.0, 21030.0], [504.0, 21031.0], [503.0, 21027.0], [497.0, 21027.5], [499.0, 21025.0], [498.0, 21026.0], [502.0, 21028.0], [501.0, 21019.0], [500.0, 21024.0], [540.0, 21031.0], [543.0, 21026.0], [529.0, 21018.0], [528.0, 21037.0], [531.0, 21027.0], [530.0, 21026.0], [533.0, 21026.0], [532.0, 21052.0], [542.0, 21016.0], [541.0, 21045.0], [539.0, 21044.0], [538.0, 21037.0], [537.0, 21035.0], [536.0, 21037.0], [527.0, 21032.0], [513.0, 21023.0], [512.0, 21025.0], [515.0, 21024.0], [514.0, 21024.0], [517.0, 21023.0], [516.0, 21022.0], [519.0, 21022.0], [518.0, 21020.0], [526.0, 21032.0], [525.0, 21033.0], [524.0, 21046.0], [523.0, 21017.0], [522.0, 21018.0], [521.0, 21020.0], [520.0, 21019.0], [535.0, 21040.0], [534.0, 21044.0], [572.0, 21050.0], [575.0, 21048.0], [561.0, 21057.0], [560.0, 21059.0], [563.0, 21046.0], [562.0, 21053.0], [565.0, 21049.0], [564.0, 21045.0], [574.0, 21046.0], [573.0, 21050.0], [571.0, 21051.0], [570.0, 21050.0], [569.0, 21050.0], [568.0, 21059.0], [559.0, 21060.0], [544.0, 21042.0], [546.0, 21045.0], [545.0, 21046.0], [548.0, 21032.0], [547.0, 21032.0], [551.0, 21060.0], [549.0, 21031.0], [558.0, 21059.0], [557.0, 21060.0], [556.0, 21055.0], [555.0, 21056.0], [554.0, 21053.0], [553.0, 21046.0], [552.0, 21057.0], [567.0, 21060.0], [566.0, 21053.0], [604.0, 21054.0], [607.0, 21054.0], [593.0, 21055.0], [592.0, 21057.0], [595.0, 21043.0], [594.0, 21056.0], [597.0, 21042.0], [596.0, 21044.0], [606.0, 21055.0], [605.0, 21053.0], [603.0, 21051.0], [602.0, 21045.0], [601.0, 21049.0], [600.0, 21051.0], [591.0, 21050.0], [577.0, 21055.0], [576.0, 21044.0], [579.0, 21055.0], [578.0, 21057.0], [581.0, 21043.0], [580.0, 21052.0], [583.0, 21049.0], [582.0, 21047.0], [590.0, 21051.0], [589.0, 21049.0], [588.0, 21050.0], [586.0, 21053.0], [585.0, 21056.0], [584.0, 21045.0], [599.0, 21052.0], [598.0, 21052.0], [633.0, 15062.0], [637.0, 15063.0], [639.0, 15063.5], [625.0, 15069.0], [624.0, 15081.0], [627.0, 21058.0], [626.0, 15059.0], [629.0, 15064.0], [628.0, 15061.0], [636.0, 15068.0], [635.0, 15072.0], [634.0, 15068.0], [632.0, 15063.0], [615.0, 15065.0], [614.0, 15068.0], [613.0, 21054.0], [612.0, 21037.0], [611.0, 21025.0], [610.0, 21050.0], [609.0, 21048.5], [623.0, 15060.0], [622.0, 15070.0], [621.0, 15074.0], [620.0, 15064.0], [619.0, 21056.0], [618.0, 15063.0], [617.0, 15065.0], [616.0, 15067.0], [631.0, 15070.0], [630.0, 15049.0], [668.0, 15066.0], [671.0, 15069.0], [656.0, 15066.0], [658.0, 15071.0], [657.0, 15060.0], [660.0, 15074.0], [659.0, 15065.0], [670.0, 15067.0], [669.0, 15073.0], [667.0, 21045.0], [666.0, 15070.0], [665.0, 15067.0], [664.0, 21045.0], [655.0, 15068.0], [641.0, 21042.0], [640.0, 21043.0], [643.0, 15061.0], [642.0, 15069.0], [645.0, 15076.0], [644.0, 15069.0], [647.0, 15061.0], [646.0, 15066.0], [654.0, 15073.0], [653.0, 15061.0], [652.0, 15068.0], [651.0, 15071.5], [649.0, 15062.0], [648.0, 15069.0], [663.0, 21045.5], [661.0, 15066.0], [700.0, 21071.0], [703.0, 21063.0], [689.0, 21055.0], [688.0, 21052.0], [691.0, 21052.0], [690.0, 21053.0], [693.0, 21074.0], [692.0, 21052.0], [702.0, 21061.0], [701.0, 21070.0], [699.0, 21067.0], [698.0, 21065.0], [697.0, 21062.0], [696.0, 21067.0], [687.0, 21054.0], [673.0, 15073.0], [672.0, 15072.0], [675.0, 21033.0], [674.0, 21032.0], [677.0, 15064.0], [676.0, 15065.0], [679.0, 21055.0], [678.0, 21054.0], [686.0, 21053.0], [685.0, 21053.0], [684.0, 21051.0], [683.0, 21052.0], [682.0, 21054.0], [681.0, 21052.0], [680.0, 21054.0], [695.0, 21068.0], [694.0, 21064.0], [732.0, 21050.0], [735.0, 21048.0], [721.0, 21052.0], [720.0, 21051.0], [723.0, 21052.0], [722.0, 21053.0], [725.0, 21045.0], [724.0, 21051.0], [734.0, 21047.0], [733.0, 21051.0], [731.0, 21051.0], [730.0, 21050.0], [729.0, 21050.0], [728.0, 21050.0], [719.0, 21050.5], [704.0, 21067.0], [707.0, 21065.0], [705.0, 21065.0], [709.0, 21063.0], [708.0, 21061.0], [711.0, 21055.0], [710.0, 21061.0], [717.0, 21062.0], [716.0, 21057.0], [715.0, 21061.0], [714.0, 21061.0], [713.0, 21057.0], [712.0, 21055.0], [727.0, 21050.0], [726.0, 21053.0], [764.0, 3035.0], [767.0, 3031.0], [752.0, 3041.0], [754.0, 3038.0], [753.0, 3044.0], [757.0, 3040.0], [756.0, 3039.0], [766.0, 3033.0], [765.0, 3033.0], [763.0, 3032.0], [762.0, 3043.0], [761.0, 3043.0], [760.0, 3040.0], [750.0, 3038.0], [736.0, 21047.0], [739.0, 3032.0], [738.0, 3039.0], [741.0, 3035.0], [740.0, 3035.0], [743.0, 3044.0], [742.0, 3043.0], [749.0, 3034.5], [747.0, 3044.0], [746.0, 3037.0], [745.0, 3035.0], [744.0, 3039.0], [759.0, 3047.0], [758.0, 3043.0], [796.0, 37.0], [799.0, 202.33333333333334], [785.0, 406.99999999999994], [784.0, 30.5], [787.0, 32.0], [786.0, 462.1428571428571], [789.0, 35.63636363636363], [788.0, 35.0], [798.0, 30.5], [797.0, 234.73333333333335], [795.0, 636.0222222222226], [794.0, 368.77777777777777], [793.0, 685.3], [792.0, 34.516129032258064], [783.0, 31.0], [768.0, 3030.0], [771.0, 3039.0], [769.0, 3034.0], [773.0, 3027.0], [772.0, 3037.0], [775.0, 3044.0], [774.0, 3051.0], [782.0, 726.3846153846154], [781.0, 32.0], [780.0, 579.2727272727273], [779.0, 3040.0], [778.0, 3046.0], [777.0, 3046.0], [776.0, 3050.0], [791.0, 487.79999999999984], [790.0, 413.75000000000006], [828.0, 5032.610169491525], [831.0, 4029.653846153846], [817.0, 337.0], [816.0, 340.4], [819.0, 2082.583333333333], [818.0, 4424.220930232557], [821.0, 2083.5], [820.0, 320.0], [830.0, 7071.852941176469], [829.0, 2603.444444444444], [827.0, 1857.244444444444], [826.0, 7314.25], [825.0, 2819.0754716981132], [824.0, 4679.945945945946], [815.0, 2512.307692307692], [801.0, 1539.75], [800.0, 1041.6666666666667], [803.0, 34.333333333333336], [802.0, 635.1], [805.0, 1036.52], [804.0, 2341.285067873304], [807.0, 520.5882352941177], [806.0, 1044.8333333333333], [814.0, 5043.122807017545], [813.0, 373.7264150943397], [812.0, 401.16666666666663], [811.0, 403.2857142857143], [810.0, 393.55555555555554], [809.0, 403.75000000000006], [808.0, 403.93103448275866], [823.0, 3448.3055555555557], [822.0, 5600.0], [860.0, 28.0], [863.0, 28.0], [849.0, 28.846153846153843], [848.0, 27.666666666666668], [851.0, 28.18181818181818], [850.0, 29.666666666666668], [853.0, 27.0], [852.0, 27.83333333333333], [862.0, 10372.978723404254], [861.0, 29.111111111111114], [859.0, 29.6], [858.0, 29.285714285714285], [857.0, 29.555555555555557], [856.0, 30.5], [847.0, 27.0], [833.0, 507.31818181818176], [832.0, 3212.3636363636356], [835.0, 4817.666666666666], [834.0, 4563.160000000002], [837.0, 7152.2], [836.0, 7157.0], [839.0, 6071.484848484848], [838.0, 3013.0588235294113], [846.0, 28.0], [845.0, 27.75], [844.0, 28.25], [843.0, 1784.25], [842.0, 4300.436842105263], [841.0, 3273.863636363637], [840.0, 3777.245901639345], [855.0, 27.0], [854.0, 27.166666666666664], [888.0, 28.0], [894.0, 27.5], [895.0, 27.81818181818182], [881.0, 29.0], [880.0, 27.75], [883.0, 27.0], [882.0, 29.0], [893.0, 29.0], [892.0, 27.833333333333336], [889.0, 27.71428571428571], [879.0, 31.5], [865.0, 28.2], [864.0, 54.333333333333336], [867.0, 27.25], [866.0, 113.00000000000003], [869.0, 229.0], [868.0, 532.0], [871.0, 28.2], [870.0, 27.0], [878.0, 28.0], [877.0, 27.0], [876.0, 260.84615384615387], [875.0, 154.5], [874.0, 28.0], [873.0, 1174.857142857143], [872.0, 259.61538461538464], [887.0, 27.5], [886.0, 29.0], [885.0, 27.8], [884.0, 29.411764705882348], [924.0, 45.333333333333336], [927.0, 44.81818181818181], [913.0, 38.4], [912.0, 36.0], [915.0, 40.66666666666667], [914.0, 40.300000000000004], [917.0, 42.0], [916.0, 41.333333333333336], [926.0, 46.11111111111111], [925.0, 44.68421052631579], [923.0, 45.17391304347826], [922.0, 44.318181818181806], [921.0, 41.5], [920.0, 43.0], [911.0, 39.0], [897.0, 28.699999999999996], [896.0, 27.666666666666668], [899.0, 29.0], [898.0, 30.285714285714285], [901.0, 29.5], [900.0, 27.0], [903.0, 29.5], [902.0, 30.0], [910.0, 40.0], [909.0, 35.26315789473684], [908.0, 36.25], [907.0, 38.0], [906.0, 32.83333333333334], [905.0, 30.4], [904.0, 29.142857142857142], [919.0, 42.5], [918.0, 42.4], [953.0, 27.25], [957.0, 28.0], [958.0, 20340.555785123997], [945.0, 1831.573033707865], [944.0, 3231.045454545454], [947.0, 3315.774410774411], [946.0, 249.33333333333334], [949.0, 3456.1705069124396], [948.0, 3527.36507936508], [956.0, 27.5], [955.0, 2368.0], [954.0, 1416.145833333333], [952.0, 3106.196428571428], [935.0, 1341.6129032258063], [934.0, 2782.0], [933.0, 1314.8750000000002], [932.0, 7095.763157894736], [931.0, 2417.8823529411775], [930.0, 3162.833333333333], [929.0, 312.1698113207547], [928.0, 46.75757575757576], [943.0, 2717.108490566038], [942.0, 2155.1403508771923], [941.0, 3053.229007633586], [940.0, 404.63636363636357], [939.0, 3587.2380952380954], [938.0, 4694.565217391303], [937.0, 7442.285714285715], [936.0, 3724.04081632653], [951.0, 3934.6711409395975], [950.0, 2862.2080000000005], [1918.0, 29.0], [1916.0, 31.0], [1980.0, 27.400000000000002], [1976.0, 27.0], [1962.0, 29.0], [1964.0, 28.874999999999996], [1966.0, 28.55], [1982.0, 27.967741935483872], [1978.0, 30.0], [1974.0, 2947.09708737864], [1972.0, 486.4848484848485], [1970.0, 567.5357142857144], [1968.0, 28.444444444444443], [1940.0, 28.615384615384617], [1988.0, 704.2093023255815], [1996.0, 28.21428571428571], [2000.0, 1036.1004210198041], [1984.0, 1103.2857142857142], [1986.0, 27.8], [1990.0, 7547.0], [1998.0, 28.874999999999996], [1994.0, 28.0], [1992.0, 28.545454545454547], [2108.0, 1720.0], [2172.0, 787.2142857142858], [2076.0, 1720.0], [2104.0, 1720.0], [2100.0, 1721.0], [2088.0, 1721.0], [2228.0, 715.0], [2216.0, 716.0], [2352.0, 780.1428571428571], [2332.0, 787.9230769230769], [2500.0, 700.0], [2588.0, 701.0], [2672.0, 1717.0], [2604.0, 702.0], [2600.0, 702.0], [2584.0, 701.0], [2764.0, 706.0], [2740.0, 709.0], [2736.0, 703.0], [2884.0, 701.0], [3000.0, 1222.6165393258425], [2117.0, 1719.0], [2113.0, 1720.0], [2069.0, 1472.875], [2077.0, 1732.0], [2261.0, 926.9473684210526], [2525.0, 701.5], [2485.0, 938.7058823529413], [2609.0, 702.0], [2777.0, 703.0], [2745.0, 703.0], [2741.0, 710.0], [2881.0, 701.0], [2873.0, 701.0], [1917.0, 30.199999999999996], [1981.0, 27.82608695652174], [1983.0, 28.09090909090909], [1963.0, 1437.3125000000002], [1965.0, 29.4], [1967.0, 31.35294117647059], [1979.0, 27.967741935483872], [1977.0, 28.25], [1975.0, 29.0], [1973.0, 3564.4117647058824], [1971.0, 1103.0], [1969.0, 4128.454545454544], [1941.0, 28.461538461538463], [1927.0, 31.0], [1991.0, 4539.5], [1985.0, 28.6], [1987.0, 28.19047619047619], [1989.0, 28.0], [1999.0, 28.0], [1997.0, 28.0], [1995.0, 27.0], [1993.0, 27.0], [2122.0, 1719.0], [2106.0, 1731.0], [2094.0, 1723.0], [2082.0, 1721.0], [2350.0, 710.0], [2450.0, 930.0], [2782.0, 703.0], [2742.0, 1709.0], [2215.0, 716.0], [2359.0, 705.0], [2499.0, 700.0], [2495.0, 700.0], [2491.0, 700.0], [2659.0, 706.0], [2643.0, 803.5999999999999], [2595.0, 705.0], [2583.0, 701.0], [2795.0, 703.0], [2767.0, 704.7692307692307], [2731.0, 705.0], [2887.0, 1204.5], [2867.0, 701.0], [2983.0, 688.0769230769231], [1.0, 21039.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[2142.69773299748, 2747.8396705449645]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[2164.0, 24929.0], [2168.0, 24814.5], [2172.0, 24805.714285714286], [2171.0, 24906.8], [2169.0, 24583.833333333332], [2167.0, 24996.0], [2166.0, 24739.125], [2170.0, 24815.75], [2165.0, 24610.666666666668], [2163.0, 24575.5], [2161.0, 24850.666666666668], [2160.0, 24837.0], [2159.0, 24607.333333333332], [2158.0, 24692.363636363636], [2157.0, 24704.0], [2155.0, 24839.0], [2152.0, 24864.0], [2153.0, 24990.0], [2151.0, 25148.0], [2150.0, 24749.8], [2149.0, 24879.4], [2148.0, 24759.75], [2147.0, 25267.0], [2069.0, 24623.222222222226], [2068.0, 24605.714285714286], [2067.0, 24585.642857142855], [2066.0, 24631.153846153848], [2064.0, 24478.0], [2063.0, 24706.0], [2062.0, 24532.0], [2156.0, 24507.666666666668], [2256.0, 24634.0], [2261.0, 24830.0], [2259.0, 24728.714285714286], [2258.0, 24479.6], [2260.0, 24880.25], [2254.0, 24808.25], [2253.0, 24676.8], [2251.0, 24708.833333333336], [2250.0, 24913.0], [2249.0, 24935.0], [2248.0, 24479.0], [2327.0, 24616.333333333332], [2352.0, 24780.5], [2332.0, 24712.89743589744], [2330.0, 24769.25], [2329.0, 24758.777777777777], [2328.0, 24818.0], [2326.0, 24607.0], [2325.0, 24807.166666666668], [2324.0, 24674.5], [2450.0, 24643.235294117647], [2522.0, 24434.0], [2525.0, 24627.25], [2524.0, 24601.5], [2523.0, 24811.875], [2520.0, 24879.0], [2519.0, 24987.0], [2518.0, 24888.0], [2485.0, 24706.28571428572], [2433.0, 24957.4], [2432.0, 24802.0], [2436.0, 24878.0], [2435.0, 24960.666666666668], [2440.0, 24947.0], [2438.0, 24830.333333333332], [2442.0, 24653.0], [2441.0, 25068.5], [2444.0, 24731.625], [2443.0, 24616.545454545456], [2446.0, 24832.0], [2445.0, 24385.5], [2449.0, 24616.04761904762], [2448.0, 24509.0], [2447.0, 24752.0], [2634.0, 24825.5], [2639.0, 24669.0], [2643.0, 24665.53571428571], [2641.0, 24282.0], [2640.0, 24579.0], [2637.0, 24711.545454545452], [2638.0, 25007.0], [2635.0, 24776.5], [2633.0, 24366.666666666668], [2631.0, 24514.333333333332], [2630.0, 24478.0], [2624.0, 24539.750000000004], [2623.0, 24731.0], [2621.0, 24551.666666666668], [2620.0, 24846.0], [2619.0, 24624.555555555555], [2616.0, 24550.0], [2618.0, 24677.5], [2617.0, 24643.0], [2615.0, 25110.0], [2612.0, 24626.41176470588], [2611.0, 24583.166666666668], [2758.0, 24634.2], [2764.0, 24661.8], [2767.0, 24564.628571428573], [2766.0, 25123.0], [2765.0, 24948.0], [2763.0, 24981.0], [2762.0, 24275.0], [2761.0, 24873.0], [2757.0, 24745.375], [2756.0, 24661.333333333332], [2753.0, 25078.0], [2752.0, 24456.0], [2750.0, 24656.500000000004], [2749.0, 24543.333333333332], [2748.0, 24488.25], [2746.0, 24797.0], [2745.0, 24993.0], [2744.0, 24362.25], [2743.0, 25133.0], [2742.0, 24552.666666666668], [2741.0, 24925.0], [2740.0, 24748.0], [2737.0, 24785.0], [2732.0, 24553.8], [2731.0, 24369.0], [2730.0, 24662.0], [2728.0, 24579.5], [2727.0, 24838.0], [2871.0, 24906.0], [2879.0, 24541.6], [2887.0, 24618.90909090909], [2881.0, 24748.500000000004], [2880.0, 24865.5], [2847.0, 25039.0], [2846.0, 24625.333333333332], [2845.0, 24595.25], [2844.0, 24640.25], [2843.0, 24729.666666666668], [2876.0, 24548.25], [2874.0, 25141.0], [2873.0, 24725.0], [2870.0, 24759.0], [2869.0, 24265.5], [2868.0, 25023.5], [2867.0, 24745.333333333332], [2865.0, 24751.88888888889], [2866.0, 24461.0], [2864.0, 24803.0], [2863.0, 24849.0], [2862.0, 24580.75], [2861.0, 24812.0], [2858.0, 24712.333333333332], [2857.0, 24632.0], [2856.0, 24732.0], [2855.0, 24892.333333333332], [2854.0, 24645.4], [2852.0, 24712.0], [2851.0, 24632.5], [2849.0, 24561.0], [2848.0, 24711.0], [2853.0, 24967.0], [2966.0, 24753.0], [2991.0, 24330.0], [3000.0, 24622.714285714286], [2960.0, 24669.5], [2963.0, 24725.0], [2962.0, 24269.166666666668], [2965.0, 24802.333333333332], [2964.0, 24586.5], [2967.0, 24308.0], [2969.0, 24863.5], [2968.0, 24116.0], [2971.0, 24261.8], [2972.0, 24356.666666666668], [2970.0, 25102.0], [2974.0, 24345.0], [2973.0, 24426.333333333332], [2995.0, 24929.0], [2994.0, 24759.0], [2983.0, 24658.837837837837], [2982.0, 24766.0], [2981.0, 24342.0], [2980.0, 24401.666666666668], [2979.0, 24546.166666666664], [2978.0, 24675.0], [2977.0, 24555.666666666668], [2976.0, 24666.5]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[2538.015000000002, 24682.744000000017]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[959.0, 40751.0], [981.0, 40735.375], [980.0, 40718.857142857145], [979.0, 40734.0], [978.0, 40871.333333333336], [995.0, 40933.78571428572], [1080.0, 40798.07142857143], [1052.0, 40812.66666666667], [1051.0, 40762.333333333336], [1050.0, 40763.666666666664], [1028.0, 40891.31818181818], [1027.0, 40841.36363636364], [1127.0, 40972.19999999999], [1125.0, 41240.0], [1110.0, 40750.23999999999], [1109.0, 41016.4], [1160.0, 41028.0], [1210.0, 41060.0], [1209.0, 41199.533333333326], [1208.0, 41191.75], [1178.0, 41024.230769230766], [1177.0, 41272.5], [1176.0, 40866.0], [1159.0, 40876.5], [1158.0, 40946.6], [1157.0, 41075.0], [1156.0, 41008.625], [1155.0, 41063.0], [1270.0, 40913.444444444445], [1261.0, 41073.549999999996], [1260.0, 41013.0], [1259.0, 41040.15789473684], [1258.0, 41074.333333333336], [1329.0, 39914.5], [1340.0, 40247.727272727265], [1328.0, 40216.0], [1294.0, 41120.0], [1320.0, 40742.833333333336], [1314.0, 40887.5], [1312.0, 40619.333333333336], [1309.0, 40863.11111111111], [1300.0, 40683.0], [1299.0, 40691.0], [1298.0, 40898.0], [1296.0, 40962.04], [1371.0, 40095.928571428565], [1370.0, 40235.0], [1369.0, 40082.5], [1368.0, 39957.0], [1452.0, 40207.4], [1455.0, 40104.5], [1454.0, 40122.6], [1453.0, 40399.5], [1451.0, 40181.285714285725], [1415.0, 40172.782608695656], [1414.0, 40146.46153846154], [1413.0, 40036.83333333333], [1412.0, 40481.0], [1535.0, 39967.68181818181], [1534.0, 39993.34782608696], [1490.0, 40051.142857142855], [1587.0, 39937.18], [1586.0, 39673.5], [1653.0, 39999.5], [1658.0, 40259.25], [1656.0, 39993.0], [1654.0, 39997.0], [1651.0, 40081.0], [1649.0, 40005.0], [1639.0, 40094.444444444445], [1621.0, 40030.96428571429], [1620.0, 40069.166666666664], [1676.0, 40104.2], [1703.0, 40357.04], [1678.0, 40050.22222222222], [1677.0, 39984.0], [1672.0, 40025.0], [1670.0, 40542.0], [1668.0, 40008.0], [1667.0, 40145.0], [1666.0, 40017.0], [1665.0, 40014.75], [1787.0, 39792.333333333336], [1790.0, 40062.0], [1791.0, 40015.0], [1789.0, 40067.5], [1784.0, 40040.0], [1781.0, 39695.5], [1779.0, 40002.25000000001], [1734.0, 40304.32258064516], [1754.0, 40111.24999999999], [1746.0, 40234.5], [1771.0, 40072.3], [1761.0, 40054.857142857145], [1840.0, 39890.0], [1846.0, 39744.75], [1852.0, 39775.0], [1842.0, 39890.0], [1838.0, 39897.444444444445], [1829.0, 39824.833333333336], [1823.0, 39932.333333333336], [1793.0, 39751.5], [1805.0, 39971.75], [1801.0, 39734.625], [1820.0, 39792.799999999996], [1810.0, 39746.2], [1914.0, 39256.166666666664], [1917.0, 39285.75], [1916.0, 39246.476190476176], [1915.0, 39262.88888888889], [1913.0, 39271.0], [1912.0, 39290.4], [1911.0, 39246.5], [1910.0, 39209.5], [1909.0, 39283.8], [1857.0, 39719.4], [1962.0, 39181.50000000001], [1961.0, 39186.75], [1960.0, 39157.666666666664], [1941.0, 39218.0], [1939.0, 39305.1052631579], [1938.0, 39728.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}, {"data": [[1472.553999999999, 40295.60000000003]], "isOverall": false, "label": "JoinRoom&Wait30sec-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61757954E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757954E12, 0.0], [1.6175796E12, 0.0], [1.61757966E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61757954E12, 0.0], [1.6175796E12, 0.0], [1.61757966E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757966E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1210.7461653884625, "minX": 1.61757954E12, "maxY": 40295.60000000003, "series": [{"data": [[1.61757954E12, 1210.7461653884625], [1.6175796E12, 3421.6038825605683], [1.61757966E12, 21035.324225865214]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757954E12, 24682.744000000017]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.6175796E12, 40295.60000000003]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757966E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757954E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757954E12, 0.0], [1.6175796E12, 0.0], [1.61757966E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757954E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.6175796E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757966E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757954E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757954E12, 0.0], [1.6175796E12, 0.0], [1.61757966E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757954E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.6175796E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757966E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61757954E12, "maxY": 41406.0, "series": [{"data": [[1.61757954E12, 25267.0], [1.6175796E12, 41406.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61757954E12, 5384.300000000001], [1.6175796E12, 7433.200000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61757954E12, 25065.03], [1.6175796E12, 41011.78]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61757954E12, 24501.15], [1.6175796E12, 40063.1]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61757954E12, 201.0], [1.6175796E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61757954E12, 671.0], [1.6175796E12, 691.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6175796E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 40893.5, "series": [{"data": [[517.0, 644.0], [2.0, 7047.5], [553.0, 44.0], [657.0, 4826.0], [713.0, 398.0], [46.0, 1037.5], [779.0, 776.0], [831.0, 1480.0], [853.0, 39760.0], [893.0, 742.0], [869.0, 240.0], [969.0, 763.0], [1000.0, 761.0], [1078.0, 619.0], [66.0, 15067.0], [1141.0, 376.0], [1089.0, 675.0], [1163.0, 599.0], [1214.0, 495.0], [1215.0, 632.0], [1260.0, 663.0], [1353.0, 594.0], [1403.0, 508.0], [87.0, 28.0], [95.0, 3037.5], [6.0, 3045.0], [1709.0, 358.0], [7.0, 36.0], [2037.0, 3733.0], [10.0, 3082.5], [11.0, 3044.0], [13.0, 7051.0], [1.0, 7036.0], [263.0, 28.0], [325.0, 28.0], [362.0, 40893.5], [390.0, 33.0], [26.0, 32.0], [453.0, 58.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21045.0], [568.0, 21035.0], [38.0, 21037.0], [11.0, 21040.0], [46.0, 21042.0], [3.0, 21032.0], [13.0, 21037.0], [869.0, 21034.0], [14.0, 21039.0], [63.0, 21051.0], [4.0, 21055.5], [1.0, 21049.5], [66.0, 21045.0], [326.0, 21044.0], [95.0, 21054.0], [508.0, 21035.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2037.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[517.0, 0.0], [2.0, 0.0], [553.0, 0.0], [657.0, 0.0], [713.0, 0.0], [46.0, 0.0], [779.0, 0.0], [831.0, 0.0], [853.0, 0.0], [893.0, 0.0], [869.0, 0.0], [969.0, 0.0], [1000.0, 0.0], [1078.0, 0.0], [66.0, 0.0], [1141.0, 0.0], [1089.0, 0.0], [1163.0, 0.0], [1214.0, 0.0], [1215.0, 0.0], [1260.0, 0.0], [1353.0, 0.0], [1403.0, 0.0], [87.0, 0.0], [95.0, 0.0], [6.0, 0.0], [1709.0, 0.0], [7.0, 0.0], [2037.0, 0.0], [10.0, 0.0], [11.0, 0.0], [13.0, 0.0], [1.0, 0.0], [263.0, 0.0], [325.0, 0.0], [362.0, 0.0], [390.0, 0.0], [26.0, 0.0], [453.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [568.0, 0.0], [38.0, 0.0], [11.0, 0.0], [46.0, 0.0], [3.0, 0.0], [13.0, 0.0], [869.0, 0.0], [14.0, 0.0], [63.0, 0.0], [4.0, 0.0], [1.0, 0.0], [66.0, 0.0], [326.0, 0.0], [95.0, 0.0], [508.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2037.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 200.25, "minX": 1.61757954E12, "maxY": 249.93333333333334, "series": [{"data": [[1.61757954E12, 249.93333333333334], [1.6175796E12, 200.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6175796E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 9.15, "minX": 1.61757954E12, "maxY": 216.6, "series": [{"data": [[1.61757954E12, 216.6], [1.6175796E12, 205.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6175796E12, 18.483333333333334], [1.61757966E12, 9.15]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757966E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 9.15, "minX": 1.61757954E12, "maxY": 199.93333333333334, "series": [{"data": [[1.61757954E12, 16.666666666666668]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61757954E12, 199.93333333333334], [1.6175796E12, 189.28333333333333]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.6175796E12, 18.483333333333334], [1.61757966E12, 9.15]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}, {"data": [[1.6175796E12, 16.666666666666668]], "isOverall": false, "label": "JoinRoom&Wait30sec-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757966E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 9.15, "minX": 1.61757954E12, "maxY": 216.6, "series": [{"data": [[1.61757954E12, 216.6], [1.6175796E12, 205.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6175796E12, 18.483333333333334], [1.61757966E12, 9.15]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757966E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

