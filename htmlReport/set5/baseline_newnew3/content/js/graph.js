/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 27.0, "minX": 0.0, "maxY": 62650.0, "series": [{"data": [[0.0, 27.0], [0.1, 28.0], [0.2, 30.0], [0.3, 31.0], [0.4, 34.0], [0.5, 38.0], [0.6, 42.0], [0.7, 43.0], [0.8, 44.0], [0.9, 45.0], [1.0, 46.0], [1.1, 47.0], [1.2, 48.0], [1.3, 49.0], [1.4, 50.0], [1.5, 51.0], [1.6, 52.0], [1.7, 53.0], [1.8, 55.0], [1.9, 57.0], [2.0, 58.0], [2.1, 60.0], [2.2, 60.0], [2.3, 61.0], [2.4, 63.0], [2.5, 65.0], [2.6, 67.0], [2.7, 68.0], [2.8, 69.0], [2.9, 71.0], [3.0, 72.0], [3.1, 74.0], [3.2, 76.0], [3.3, 76.0], [3.4, 78.0], [3.5, 80.0], [3.6, 81.0], [3.7, 82.0], [3.8, 82.0], [3.9, 84.0], [4.0, 85.0], [4.1, 88.0], [4.2, 89.0], [4.3, 90.0], [4.4, 92.0], [4.5, 93.0], [4.6, 96.0], [4.7, 98.0], [4.8, 101.0], [4.9, 103.0], [5.0, 104.0], [5.1, 106.0], [5.2, 107.0], [5.3, 108.0], [5.4, 110.0], [5.5, 111.0], [5.6, 114.0], [5.7, 115.0], [5.8, 118.0], [5.9, 118.0], [6.0, 120.0], [6.1, 122.0], [6.2, 124.0], [6.3, 124.0], [6.4, 125.0], [6.5, 126.0], [6.6, 129.0], [6.7, 130.0], [6.8, 133.0], [6.9, 134.0], [7.0, 137.0], [7.1, 138.0], [7.2, 140.0], [7.3, 142.0], [7.4, 143.0], [7.5, 144.0], [7.6, 145.0], [7.7, 148.0], [7.8, 149.0], [7.9, 152.0], [8.0, 153.0], [8.1, 156.0], [8.2, 158.0], [8.3, 161.0], [8.4, 162.0], [8.5, 165.0], [8.6, 166.0], [8.7, 168.0], [8.8, 170.0], [8.9, 173.0], [9.0, 175.0], [9.1, 177.0], [9.2, 179.0], [9.3, 180.0], [9.4, 182.0], [9.5, 183.0], [9.6, 184.0], [9.7, 184.0], [9.8, 185.0], [9.9, 186.0], [10.0, 187.0], [10.1, 188.0], [10.2, 189.0], [10.3, 190.0], [10.4, 193.0], [10.5, 194.0], [10.6, 196.0], [10.7, 197.0], [10.8, 198.0], [10.9, 198.0], [11.0, 200.0], [11.1, 201.0], [11.2, 201.0], [11.3, 202.0], [11.4, 203.0], [11.5, 204.0], [11.6, 205.0], [11.7, 206.0], [11.8, 207.0], [11.9, 208.0], [12.0, 209.0], [12.1, 210.0], [12.2, 210.0], [12.3, 211.0], [12.4, 212.0], [12.5, 213.0], [12.6, 214.0], [12.7, 214.0], [12.8, 215.0], [12.9, 215.0], [13.0, 215.0], [13.1, 216.0], [13.2, 216.0], [13.3, 216.0], [13.4, 217.0], [13.5, 218.0], [13.6, 218.0], [13.7, 219.0], [13.8, 219.0], [13.9, 220.0], [14.0, 220.0], [14.1, 220.0], [14.2, 221.0], [14.3, 222.0], [14.4, 222.0], [14.5, 223.0], [14.6, 223.0], [14.7, 224.0], [14.8, 224.0], [14.9, 225.0], [15.0, 225.0], [15.1, 225.0], [15.2, 226.0], [15.3, 226.0], [15.4, 227.0], [15.5, 227.0], [15.6, 228.0], [15.7, 229.0], [15.8, 229.0], [15.9, 230.0], [16.0, 230.0], [16.1, 231.0], [16.2, 231.0], [16.3, 232.0], [16.4, 233.0], [16.5, 234.0], [16.6, 234.0], [16.7, 234.0], [16.8, 235.0], [16.9, 236.0], [17.0, 236.0], [17.1, 237.0], [17.2, 237.0], [17.3, 237.0], [17.4, 238.0], [17.5, 238.0], [17.6, 239.0], [17.7, 239.0], [17.8, 240.0], [17.9, 240.0], [18.0, 241.0], [18.1, 241.0], [18.2, 242.0], [18.3, 242.0], [18.4, 242.0], [18.5, 242.0], [18.6, 243.0], [18.7, 243.0], [18.8, 244.0], [18.9, 245.0], [19.0, 245.0], [19.1, 246.0], [19.2, 246.0], [19.3, 246.0], [19.4, 247.0], [19.5, 247.0], [19.6, 248.0], [19.7, 249.0], [19.8, 249.0], [19.9, 249.0], [20.0, 250.0], [20.1, 250.0], [20.2, 250.0], [20.3, 251.0], [20.4, 251.0], [20.5, 251.0], [20.6, 252.0], [20.7, 252.0], [20.8, 252.0], [20.9, 253.0], [21.0, 253.0], [21.1, 253.0], [21.2, 253.0], [21.3, 254.0], [21.4, 254.0], [21.5, 255.0], [21.6, 255.0], [21.7, 255.0], [21.8, 255.0], [21.9, 256.0], [22.0, 256.0], [22.1, 256.0], [22.2, 256.0], [22.3, 256.0], [22.4, 256.0], [22.5, 256.0], [22.6, 257.0], [22.7, 257.0], [22.8, 257.0], [22.9, 258.0], [23.0, 258.0], [23.1, 258.0], [23.2, 258.0], [23.3, 259.0], [23.4, 259.0], [23.5, 259.0], [23.6, 259.0], [23.7, 260.0], [23.8, 260.0], [23.9, 260.0], [24.0, 260.0], [24.1, 261.0], [24.2, 261.0], [24.3, 261.0], [24.4, 262.0], [24.5, 262.0], [24.6, 262.0], [24.7, 263.0], [24.8, 263.0], [24.9, 263.0], [25.0, 264.0], [25.1, 264.0], [25.2, 265.0], [25.3, 265.0], [25.4, 266.0], [25.5, 266.0], [25.6, 267.0], [25.7, 267.0], [25.8, 267.0], [25.9, 268.0], [26.0, 269.0], [26.1, 269.0], [26.2, 269.0], [26.3, 270.0], [26.4, 270.0], [26.5, 270.0], [26.6, 270.0], [26.7, 271.0], [26.8, 271.0], [26.9, 271.0], [27.0, 272.0], [27.1, 272.0], [27.2, 273.0], [27.3, 273.0], [27.4, 274.0], [27.5, 275.0], [27.6, 275.0], [27.7, 276.0], [27.8, 276.0], [27.9, 277.0], [28.0, 278.0], [28.1, 278.0], [28.2, 278.0], [28.3, 279.0], [28.4, 280.0], [28.5, 280.0], [28.6, 281.0], [28.7, 281.0], [28.8, 282.0], [28.9, 283.0], [29.0, 283.0], [29.1, 284.0], [29.2, 284.0], [29.3, 285.0], [29.4, 285.0], [29.5, 285.0], [29.6, 286.0], [29.7, 286.0], [29.8, 287.0], [29.9, 287.0], [30.0, 287.0], [30.1, 288.0], [30.2, 288.0], [30.3, 288.0], [30.4, 289.0], [30.5, 290.0], [30.6, 290.0], [30.7, 291.0], [30.8, 291.0], [30.9, 292.0], [31.0, 292.0], [31.1, 293.0], [31.2, 293.0], [31.3, 293.0], [31.4, 294.0], [31.5, 294.0], [31.6, 295.0], [31.7, 295.0], [31.8, 295.0], [31.9, 296.0], [32.0, 296.0], [32.1, 296.0], [32.2, 297.0], [32.3, 297.0], [32.4, 297.0], [32.5, 297.0], [32.6, 298.0], [32.7, 298.0], [32.8, 298.0], [32.9, 298.0], [33.0, 298.0], [33.1, 299.0], [33.2, 299.0], [33.3, 299.0], [33.4, 300.0], [33.5, 300.0], [33.6, 301.0], [33.7, 302.0], [33.8, 303.0], [33.9, 304.0], [34.0, 306.0], [34.1, 307.0], [34.2, 308.0], [34.3, 309.0], [34.4, 311.0], [34.5, 313.0], [34.6, 318.0], [34.7, 324.0], [34.8, 328.0], [34.9, 330.0], [35.0, 332.0], [35.1, 339.0], [35.2, 353.0], [35.3, 371.0], [35.4, 384.0], [35.5, 390.0], [35.6, 395.0], [35.7, 398.0], [35.8, 401.0], [35.9, 404.0], [36.0, 410.0], [36.1, 417.0], [36.2, 417.0], [36.3, 419.0], [36.4, 420.0], [36.5, 422.0], [36.6, 424.0], [36.7, 426.0], [36.8, 429.0], [36.9, 431.0], [37.0, 432.0], [37.1, 434.0], [37.2, 436.0], [37.3, 437.0], [37.4, 438.0], [37.5, 439.0], [37.6, 439.0], [37.7, 440.0], [37.8, 442.0], [37.9, 444.0], [38.0, 449.0], [38.1, 450.0], [38.2, 451.0], [38.3, 452.0], [38.4, 453.0], [38.5, 455.0], [38.6, 458.0], [38.7, 459.0], [38.8, 461.0], [38.9, 462.0], [39.0, 464.0], [39.1, 465.0], [39.2, 466.0], [39.3, 467.0], [39.4, 468.0], [39.5, 469.0], [39.6, 470.0], [39.7, 472.0], [39.8, 474.0], [39.9, 475.0], [40.0, 477.0], [40.1, 479.0], [40.2, 480.0], [40.3, 481.0], [40.4, 482.0], [40.5, 484.0], [40.6, 485.0], [40.7, 488.0], [40.8, 489.0], [40.9, 490.0], [41.0, 493.0], [41.1, 496.0], [41.2, 497.0], [41.3, 499.0], [41.4, 502.0], [41.5, 506.0], [41.6, 513.0], [41.7, 519.0], [41.8, 1233.0], [41.9, 1242.0], [42.0, 1256.0], [42.1, 1279.0], [42.2, 1286.0], [42.3, 1306.0], [42.4, 1398.0], [42.5, 1415.0], [42.6, 1422.0], [42.7, 2145.0], [42.8, 2147.0], [42.9, 2147.0], [43.0, 2148.0], [43.1, 2148.0], [43.2, 2149.0], [43.3, 2149.0], [43.4, 2149.0], [43.5, 2149.0], [43.6, 2150.0], [43.7, 2150.0], [43.8, 2150.0], [43.9, 2150.0], [44.0, 2150.0], [44.1, 2150.0], [44.2, 2151.0], [44.3, 2151.0], [44.4, 2151.0], [44.5, 2151.0], [44.6, 2151.0], [44.7, 2151.0], [44.8, 2151.0], [44.9, 2151.0], [45.0, 2151.0], [45.1, 2151.0], [45.2, 2152.0], [45.3, 2152.0], [45.4, 2152.0], [45.5, 2152.0], [45.6, 2152.0], [45.7, 2152.0], [45.8, 2152.0], [45.9, 2152.0], [46.0, 2152.0], [46.1, 2152.0], [46.2, 2152.0], [46.3, 2153.0], [46.4, 2153.0], [46.5, 2153.0], [46.6, 2153.0], [46.7, 2153.0], [46.8, 2153.0], [46.9, 2153.0], [47.0, 2153.0], [47.1, 2153.0], [47.2, 2153.0], [47.3, 2153.0], [47.4, 2153.0], [47.5, 2154.0], [47.6, 2154.0], [47.7, 2154.0], [47.8, 2154.0], [47.9, 2154.0], [48.0, 2154.0], [48.1, 2154.0], [48.2, 2154.0], [48.3, 2154.0], [48.4, 2154.0], [48.5, 2154.0], [48.6, 2154.0], [48.7, 2154.0], [48.8, 2155.0], [48.9, 2155.0], [49.0, 2155.0], [49.1, 2155.0], [49.2, 2155.0], [49.3, 2155.0], [49.4, 2155.0], [49.5, 2155.0], [49.6, 2155.0], [49.7, 2155.0], [49.8, 2155.0], [49.9, 2155.0], [50.0, 2155.0], [50.1, 2155.0], [50.2, 2156.0], [50.3, 2156.0], [50.4, 2156.0], [50.5, 2156.0], [50.6, 2156.0], [50.7, 2156.0], [50.8, 2156.0], [50.9, 2156.0], [51.0, 2156.0], [51.1, 2156.0], [51.2, 2156.0], [51.3, 2156.0], [51.4, 2156.0], [51.5, 2156.0], [51.6, 2157.0], [51.7, 2157.0], [51.8, 2157.0], [51.9, 2157.0], [52.0, 2157.0], [52.1, 2157.0], [52.2, 2157.0], [52.3, 2157.0], [52.4, 2157.0], [52.5, 2157.0], [52.6, 2157.0], [52.7, 2157.0], [52.8, 2157.0], [52.9, 2157.0], [53.0, 2158.0], [53.1, 2158.0], [53.2, 2158.0], [53.3, 2158.0], [53.4, 2158.0], [53.5, 2158.0], [53.6, 2158.0], [53.7, 2158.0], [53.8, 2158.0], [53.9, 2158.0], [54.0, 2158.0], [54.1, 2158.0], [54.2, 2158.0], [54.3, 2158.0], [54.4, 2159.0], [54.5, 2159.0], [54.6, 2159.0], [54.7, 2159.0], [54.8, 2159.0], [54.9, 2159.0], [55.0, 2159.0], [55.1, 2159.0], [55.2, 2159.0], [55.3, 2159.0], [55.4, 2159.0], [55.5, 2159.0], [55.6, 2159.0], [55.7, 2159.0], [55.8, 2159.0], [55.9, 2159.0], [56.0, 2159.0], [56.1, 2160.0], [56.2, 2160.0], [56.3, 2160.0], [56.4, 2160.0], [56.5, 2160.0], [56.6, 2160.0], [56.7, 2160.0], [56.8, 2160.0], [56.9, 2160.0], [57.0, 2160.0], [57.1, 2160.0], [57.2, 2160.0], [57.3, 2160.0], [57.4, 2160.0], [57.5, 2160.0], [57.6, 2160.0], [57.7, 2160.0], [57.8, 2161.0], [57.9, 2161.0], [58.0, 2161.0], [58.1, 2161.0], [58.2, 2161.0], [58.3, 2161.0], [58.4, 2161.0], [58.5, 2161.0], [58.6, 2161.0], [58.7, 2161.0], [58.8, 2161.0], [58.9, 2161.0], [59.0, 2161.0], [59.1, 2161.0], [59.2, 2161.0], [59.3, 2162.0], [59.4, 2162.0], [59.5, 2162.0], [59.6, 2162.0], [59.7, 2162.0], [59.8, 2162.0], [59.9, 2162.0], [60.0, 2162.0], [60.1, 2162.0], [60.2, 2162.0], [60.3, 2162.0], [60.4, 2162.0], [60.5, 2162.0], [60.6, 2162.0], [60.7, 2163.0], [60.8, 2163.0], [60.9, 2163.0], [61.0, 2163.0], [61.1, 2163.0], [61.2, 2163.0], [61.3, 2163.0], [61.4, 2163.0], [61.5, 2163.0], [61.6, 2163.0], [61.7, 2163.0], [61.8, 2163.0], [61.9, 2163.0], [62.0, 2163.0], [62.1, 2164.0], [62.2, 2164.0], [62.3, 2164.0], [62.4, 2164.0], [62.5, 2164.0], [62.6, 2164.0], [62.7, 2164.0], [62.8, 2164.0], [62.9, 2164.0], [63.0, 2164.0], [63.1, 2164.0], [63.2, 2164.0], [63.3, 2164.0], [63.4, 2164.0], [63.5, 2164.0], [63.6, 2165.0], [63.7, 2165.0], [63.8, 2165.0], [63.9, 2165.0], [64.0, 2165.0], [64.1, 2165.0], [64.2, 2165.0], [64.3, 2165.0], [64.4, 2165.0], [64.5, 2165.0], [64.6, 2165.0], [64.7, 2165.0], [64.8, 2165.0], [64.9, 2165.0], [65.0, 2165.0], [65.1, 2165.0], [65.2, 2165.0], [65.3, 2166.0], [65.4, 2166.0], [65.5, 2166.0], [65.6, 2166.0], [65.7, 2166.0], [65.8, 2166.0], [65.9, 2166.0], [66.0, 2166.0], [66.1, 2166.0], [66.2, 2166.0], [66.3, 2166.0], [66.4, 2166.0], [66.5, 2166.0], [66.6, 2166.0], [66.7, 2166.0], [66.8, 2166.0], [66.9, 2167.0], [67.0, 2167.0], [67.1, 2167.0], [67.2, 2167.0], [67.3, 2167.0], [67.4, 2167.0], [67.5, 2167.0], [67.6, 2167.0], [67.7, 2167.0], [67.8, 2167.0], [67.9, 2167.0], [68.0, 2167.0], [68.1, 2167.0], [68.2, 2167.0], [68.3, 2167.0], [68.4, 2167.0], [68.5, 2167.0], [68.6, 2168.0], [68.7, 2168.0], [68.8, 2168.0], [68.9, 2168.0], [69.0, 2168.0], [69.1, 2168.0], [69.2, 2168.0], [69.3, 2168.0], [69.4, 2168.0], [69.5, 2168.0], [69.6, 2168.0], [69.7, 2168.0], [69.8, 2168.0], [69.9, 2168.0], [70.0, 2169.0], [70.1, 2169.0], [70.2, 2169.0], [70.3, 2169.0], [70.4, 2169.0], [70.5, 2169.0], [70.6, 2169.0], [70.7, 2169.0], [70.8, 2169.0], [70.9, 2169.0], [71.0, 2169.0], [71.1, 2169.0], [71.2, 2169.0], [71.3, 2169.0], [71.4, 2170.0], [71.5, 2170.0], [71.6, 2170.0], [71.7, 2170.0], [71.8, 2170.0], [71.9, 2170.0], [72.0, 2170.0], [72.1, 2170.0], [72.2, 2170.0], [72.3, 2170.0], [72.4, 2170.0], [72.5, 2170.0], [72.6, 2170.0], [72.7, 2170.0], [72.8, 2171.0], [72.9, 2171.0], [73.0, 2171.0], [73.1, 2171.0], [73.2, 2171.0], [73.3, 2171.0], [73.4, 2171.0], [73.5, 2171.0], [73.6, 2171.0], [73.7, 2171.0], [73.8, 2171.0], [73.9, 2171.0], [74.0, 2171.0], [74.1, 2171.0], [74.2, 2172.0], [74.3, 2172.0], [74.4, 2172.0], [74.5, 2172.0], [74.6, 2172.0], [74.7, 2172.0], [74.8, 2172.0], [74.9, 2172.0], [75.0, 2172.0], [75.1, 2172.0], [75.2, 2172.0], [75.3, 2172.0], [75.4, 2173.0], [75.5, 2173.0], [75.6, 2173.0], [75.7, 2173.0], [75.8, 2173.0], [75.9, 2173.0], [76.0, 2173.0], [76.1, 2173.0], [76.2, 2173.0], [76.3, 2173.0], [76.4, 2173.0], [76.5, 2174.0], [76.6, 2174.0], [76.7, 2174.0], [76.8, 2174.0], [76.9, 2174.0], [77.0, 2174.0], [77.1, 2174.0], [77.2, 2174.0], [77.3, 2174.0], [77.4, 2174.0], [77.5, 2174.0], [77.6, 2175.0], [77.7, 2175.0], [77.8, 2175.0], [77.9, 2175.0], [78.0, 2175.0], [78.1, 2175.0], [78.2, 2175.0], [78.3, 2175.0], [78.4, 2175.0], [78.5, 2175.0], [78.6, 2176.0], [78.7, 2176.0], [78.8, 2176.0], [78.9, 2176.0], [79.0, 2176.0], [79.1, 2176.0], [79.2, 2176.0], [79.3, 2176.0], [79.4, 2176.0], [79.5, 2176.0], [79.6, 2176.0], [79.7, 2177.0], [79.8, 2177.0], [79.9, 2177.0], [80.0, 2177.0], [80.1, 2177.0], [80.2, 2177.0], [80.3, 2177.0], [80.4, 2177.0], [80.5, 2178.0], [80.6, 2178.0], [80.7, 2178.0], [80.8, 2178.0], [80.9, 2178.0], [81.0, 2178.0], [81.1, 2178.0], [81.2, 2178.0], [81.3, 2178.0], [81.4, 2179.0], [81.5, 2179.0], [81.6, 2179.0], [81.7, 2179.0], [81.8, 2179.0], [81.9, 2179.0], [82.0, 2179.0], [82.1, 2179.0], [82.2, 2180.0], [82.3, 2180.0], [82.4, 2180.0], [82.5, 2180.0], [82.6, 2180.0], [82.7, 2180.0], [82.8, 2180.0], [82.9, 2180.0], [83.0, 2180.0], [83.1, 2181.0], [83.2, 2181.0], [83.3, 2181.0], [83.4, 2181.0], [83.5, 2181.0], [83.6, 2181.0], [83.7, 2181.0], [83.8, 2182.0], [83.9, 2182.0], [84.0, 2182.0], [84.1, 2182.0], [84.2, 2182.0], [84.3, 2182.0], [84.4, 2182.0], [84.5, 2182.0], [84.6, 2182.0], [84.7, 2183.0], [84.8, 2183.0], [84.9, 2183.0], [85.0, 2183.0], [85.1, 2183.0], [85.2, 2183.0], [85.3, 2184.0], [85.4, 2184.0], [85.5, 2184.0], [85.6, 2184.0], [85.7, 2184.0], [85.8, 2184.0], [85.9, 2184.0], [86.0, 2185.0], [86.1, 2185.0], [86.2, 2185.0], [86.3, 2185.0], [86.4, 2185.0], [86.5, 2185.0], [86.6, 2185.0], [86.7, 2186.0], [86.8, 2186.0], [86.9, 2186.0], [87.0, 2186.0], [87.1, 2186.0], [87.2, 2186.0], [87.3, 2187.0], [87.4, 2187.0], [87.5, 2187.0], [87.6, 2187.0], [87.7, 2188.0], [87.8, 2188.0], [87.9, 2188.0], [88.0, 2188.0], [88.1, 2188.0], [88.2, 2189.0], [88.3, 2189.0], [88.4, 2189.0], [88.5, 2190.0], [88.6, 2190.0], [88.7, 2190.0], [88.8, 2191.0], [88.9, 2191.0], [89.0, 2191.0], [89.1, 2192.0], [89.2, 2192.0], [89.3, 2192.0], [89.4, 2192.0], [89.5, 2193.0], [89.6, 2193.0], [89.7, 2193.0], [89.8, 2193.0], [89.9, 2194.0], [90.0, 2194.0], [90.1, 2194.0], [90.2, 2194.0], [90.3, 2195.0], [90.4, 2195.0], [90.5, 2195.0], [90.6, 2196.0], [90.7, 2196.0], [90.8, 2196.0], [90.9, 2197.0], [91.0, 2197.0], [91.1, 2198.0], [91.2, 2198.0], [91.3, 2198.0], [91.4, 2199.0], [91.5, 2199.0], [91.6, 2200.0], [91.7, 2200.0], [91.8, 2200.0], [91.9, 2201.0], [92.0, 2201.0], [92.1, 2202.0], [92.2, 2202.0], [92.3, 2203.0], [92.4, 2203.0], [92.5, 2204.0], [92.6, 2204.0], [92.7, 2205.0], [92.8, 2205.0], [92.9, 2205.0], [93.0, 2206.0], [93.1, 2206.0], [93.2, 2207.0], [93.3, 2207.0], [93.4, 2208.0], [93.5, 2208.0], [93.6, 2209.0], [93.7, 2210.0], [93.8, 2210.0], [93.9, 2211.0], [94.0, 2212.0], [94.1, 2212.0], [94.2, 2213.0], [94.3, 2214.0], [94.4, 2215.0], [94.5, 2216.0], [94.6, 2217.0], [94.7, 2218.0], [94.8, 2219.0], [94.9, 2220.0], [95.0, 2221.0], [95.1, 2221.0], [95.2, 2223.0], [95.3, 2223.0], [95.4, 2224.0], [95.5, 2225.0], [95.6, 2227.0], [95.7, 2228.0], [95.8, 2229.0], [95.9, 2230.0], [96.0, 2233.0], [96.1, 2235.0], [96.2, 2238.0], [96.3, 2240.0], [96.4, 2245.0], [96.5, 2246.0], [96.6, 2250.0], [96.7, 2255.0], [96.8, 2275.0], [96.9, 2287.0], [97.0, 2291.0], [97.1, 2321.0], [97.2, 2523.0], [97.3, 2537.0], [97.4, 2545.0], [97.5, 2560.0], [97.6, 2566.0], [97.7, 2573.0], [97.8, 2578.0], [97.9, 2588.0], [98.0, 2603.0], [98.1, 2624.0], [98.2, 2652.0], [98.3, 2662.0], [98.4, 2670.0], [98.5, 2676.0], [98.6, 2686.0], [98.7, 2695.0], [98.8, 2705.0], [98.9, 2725.0], [99.0, 2733.0], [99.1, 2739.0], [99.2, 2742.0], [99.3, 2749.0], [99.4, 2756.0], [99.5, 3629.0], [99.6, 3642.0], [99.7, 5633.0], [99.8, 8137.0], [99.9, 8150.0], [100.0, 9661.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 15822.0], [0.1, 15822.0], [0.2, 15822.0], [0.3, 15834.0], [0.4, 15834.0], [0.5, 15835.0], [0.6, 15835.0], [0.7, 15835.0], [0.8, 15843.0], [0.9, 15843.0], [1.0, 15856.0], [1.1, 15856.0], [1.2, 15856.0], [1.3, 15859.0], [1.4, 15859.0], [1.5, 15860.0], [1.6, 15860.0], [1.7, 15860.0], [1.8, 15866.0], [1.9, 15866.0], [2.0, 15866.0], [2.1, 15866.0], [2.2, 15866.0], [2.3, 15873.0], [2.4, 15873.0], [2.5, 15873.0], [2.6, 15873.0], [2.7, 15873.0], [2.8, 15873.0], [2.9, 15873.0], [3.0, 15877.0], [3.1, 15877.0], [3.2, 15877.0], [3.3, 15878.0], [3.4, 15878.0], [3.5, 15887.0], [3.6, 15887.0], [3.7, 15887.0], [3.8, 15892.0], [3.9, 15892.0], [4.0, 15892.0], [4.1, 15892.0], [4.2, 15892.0], [4.3, 15892.0], [4.4, 15892.0], [4.5, 15896.0], [4.6, 15896.0], [4.7, 15896.0], [4.8, 15902.0], [4.9, 15902.0], [5.0, 15903.0], [5.1, 15903.0], [5.2, 15903.0], [5.3, 15904.0], [5.4, 15904.0], [5.5, 15926.0], [5.6, 15926.0], [5.7, 15926.0], [5.8, 15928.0], [5.9, 15928.0], [6.0, 15930.0], [6.1, 15930.0], [6.2, 15930.0], [6.3, 15937.0], [6.4, 15937.0], [6.5, 15939.0], [6.6, 15939.0], [6.7, 15939.0], [6.8, 15966.0], [6.9, 15966.0], [7.0, 15971.0], [7.1, 15971.0], [7.2, 15971.0], [7.3, 15972.0], [7.4, 15972.0], [7.5, 15981.0], [7.6, 15981.0], [7.7, 15981.0], [7.8, 15986.0], [7.9, 15986.0], [8.0, 15986.0], [8.1, 15986.0], [8.2, 15986.0], [8.3, 15987.0], [8.4, 15987.0], [8.5, 15988.0], [8.6, 15988.0], [8.7, 15988.0], [8.8, 15990.0], [8.9, 15990.0], [9.0, 15993.0], [9.1, 15993.0], [9.2, 15993.0], [9.3, 15999.0], [9.4, 15999.0], [9.5, 16001.0], [9.6, 16001.0], [9.7, 16001.0], [9.8, 16003.0], [9.9, 16003.0], [10.0, 16007.0], [10.1, 16007.0], [10.2, 16007.0], [10.3, 16007.0], [10.4, 16007.0], [10.5, 16009.0], [10.6, 16009.0], [10.7, 16009.0], [10.8, 16010.0], [10.9, 16010.0], [11.0, 16015.0], [11.1, 16015.0], [11.2, 16015.0], [11.3, 16015.0], [11.4, 16015.0], [11.5, 16017.0], [11.6, 16017.0], [11.7, 16017.0], [11.8, 16020.0], [11.9, 16020.0], [12.0, 16022.0], [12.1, 16022.0], [12.2, 16022.0], [12.3, 16023.0], [12.4, 16023.0], [12.5, 16029.0], [12.6, 16029.0], [12.7, 16029.0], [12.8, 16031.0], [12.9, 16031.0], [13.0, 16033.0], [13.1, 16033.0], [13.2, 16033.0], [13.3, 16040.0], [13.4, 16040.0], [13.5, 16043.0], [13.6, 16043.0], [13.7, 16043.0], [13.8, 16044.0], [13.9, 16044.0], [14.0, 16049.0], [14.1, 16049.0], [14.2, 16049.0], [14.3, 16050.0], [14.4, 16050.0], [14.5, 16051.0], [14.6, 16051.0], [14.7, 16051.0], [14.8, 16051.0], [14.9, 16051.0], [15.0, 16052.0], [15.1, 16052.0], [15.2, 16052.0], [15.3, 16052.0], [15.4, 16052.0], [15.5, 16053.0], [15.6, 16053.0], [15.7, 16053.0], [15.8, 16054.0], [15.9, 16054.0], [16.0, 16055.0], [16.1, 16055.0], [16.2, 16055.0], [16.3, 16056.0], [16.4, 16056.0], [16.5, 16059.0], [16.6, 16059.0], [16.7, 16059.0], [16.8, 16060.0], [16.9, 16060.0], [17.0, 16064.0], [17.1, 16064.0], [17.2, 16064.0], [17.3, 16072.0], [17.4, 16072.0], [17.5, 16073.0], [17.6, 16073.0], [17.7, 16073.0], [17.8, 16075.0], [17.9, 16075.0], [18.0, 16077.0], [18.1, 16077.0], [18.2, 16077.0], [18.3, 16079.0], [18.4, 16079.0], [18.5, 16079.0], [18.6, 16079.0], [18.7, 16079.0], [18.8, 16083.0], [18.9, 16083.0], [19.0, 16090.0], [19.1, 16090.0], [19.2, 16090.0], [19.3, 16091.0], [19.4, 16091.0], [19.5, 16091.0], [19.6, 16091.0], [19.7, 16091.0], [19.8, 16091.0], [19.9, 16091.0], [20.0, 16092.0], [20.1, 16092.0], [20.2, 16092.0], [20.3, 16093.0], [20.4, 16093.0], [20.5, 16104.0], [20.6, 16104.0], [20.7, 16104.0], [20.8, 16106.0], [20.9, 16106.0], [21.0, 16107.0], [21.1, 16107.0], [21.2, 16107.0], [21.3, 16116.0], [21.4, 16116.0], [21.5, 16119.0], [21.6, 16119.0], [21.7, 16119.0], [21.8, 16119.0], [21.9, 16119.0], [22.0, 16120.0], [22.1, 16120.0], [22.2, 16120.0], [22.3, 16122.0], [22.4, 16122.0], [22.5, 16126.0], [22.6, 16126.0], [22.7, 16126.0], [22.8, 16129.0], [22.9, 16129.0], [23.0, 16132.0], [23.1, 16132.0], [23.2, 16132.0], [23.3, 16136.0], [23.4, 16136.0], [23.5, 16144.0], [23.6, 16144.0], [23.7, 16144.0], [23.8, 16146.0], [23.9, 16146.0], [24.0, 16148.0], [24.1, 16148.0], [24.2, 16148.0], [24.3, 16151.0], [24.4, 16151.0], [24.5, 16153.0], [24.6, 16153.0], [24.7, 16153.0], [24.8, 16161.0], [24.9, 16161.0], [25.0, 16164.0], [25.1, 16164.0], [25.2, 16164.0], [25.3, 16182.0], [25.4, 16182.0], [25.5, 16189.0], [25.6, 16189.0], [25.7, 16189.0], [25.8, 16190.0], [25.9, 16190.0], [26.0, 16199.0], [26.1, 16199.0], [26.2, 16199.0], [26.3, 16204.0], [26.4, 16204.0], [26.5, 16205.0], [26.6, 16205.0], [26.7, 16205.0], [26.8, 16214.0], [26.9, 16214.0], [27.0, 16216.0], [27.1, 16216.0], [27.2, 16216.0], [27.3, 16218.0], [27.4, 16218.0], [27.5, 16222.0], [27.6, 16222.0], [27.7, 16222.0], [27.8, 16226.0], [27.9, 16226.0], [28.0, 16227.0], [28.1, 16227.0], [28.2, 16227.0], [28.3, 16235.0], [28.4, 16235.0], [28.5, 16235.0], [28.6, 16235.0], [28.7, 16235.0], [28.8, 16235.0], [28.9, 16235.0], [29.0, 16236.0], [29.1, 16236.0], [29.2, 16236.0], [29.3, 16238.0], [29.4, 16238.0], [29.5, 16245.0], [29.6, 16245.0], [29.7, 16245.0], [29.8, 16248.0], [29.9, 16248.0], [30.0, 16254.0], [30.1, 16254.0], [30.2, 16254.0], [30.3, 16256.0], [30.4, 16256.0], [30.5, 16259.0], [30.6, 16259.0], [30.7, 16259.0], [30.8, 16261.0], [30.9, 16261.0], [31.0, 16273.0], [31.1, 16273.0], [31.2, 16273.0], [31.3, 16275.0], [31.4, 16275.0], [31.5, 16277.0], [31.6, 16277.0], [31.7, 16277.0], [31.8, 16291.0], [31.9, 16291.0], [32.0, 16291.0], [32.1, 16291.0], [32.2, 16291.0], [32.3, 16292.0], [32.4, 16292.0], [32.5, 16296.0], [32.6, 16296.0], [32.7, 16296.0], [32.8, 16297.0], [32.9, 16297.0], [33.0, 16298.0], [33.1, 16298.0], [33.2, 16298.0], [33.3, 16298.0], [33.4, 16298.0], [33.5, 16299.0], [33.6, 16299.0], [33.7, 16299.0], [33.8, 16303.0], [33.9, 16303.0], [34.0, 16314.0], [34.1, 16314.0], [34.2, 16314.0], [34.3, 16314.0], [34.4, 16314.0], [34.5, 16314.0], [34.6, 16314.0], [34.7, 16314.0], [34.8, 16314.0], [34.9, 16314.0], [35.0, 16316.0], [35.1, 16316.0], [35.2, 16316.0], [35.3, 16317.0], [35.4, 16317.0], [35.5, 16318.0], [35.6, 16318.0], [35.7, 16318.0], [35.8, 16318.0], [35.9, 16318.0], [36.0, 16321.0], [36.1, 16321.0], [36.2, 16321.0], [36.3, 16323.0], [36.4, 16323.0], [36.5, 16323.0], [36.6, 16323.0], [36.7, 16323.0], [36.8, 16325.0], [36.9, 16325.0], [37.0, 16327.0], [37.1, 16327.0], [37.2, 16327.0], [37.3, 16328.0], [37.4, 16328.0], [37.5, 16329.0], [37.6, 16329.0], [37.7, 16329.0], [37.8, 16329.0], [37.9, 16329.0], [38.0, 16329.0], [38.1, 16329.0], [38.2, 16329.0], [38.3, 16330.0], [38.4, 16330.0], [38.5, 16330.0], [38.6, 16330.0], [38.7, 16330.0], [38.8, 16330.0], [38.9, 16330.0], [39.0, 16339.0], [39.1, 16339.0], [39.2, 16339.0], [39.3, 16342.0], [39.4, 16342.0], [39.5, 16343.0], [39.6, 16343.0], [39.7, 16343.0], [39.8, 16344.0], [39.9, 16344.0], [40.0, 16344.0], [40.1, 16344.0], [40.2, 16344.0], [40.3, 16345.0], [40.4, 16345.0], [40.5, 16348.0], [40.6, 16348.0], [40.7, 16348.0], [40.8, 16351.0], [40.9, 16351.0], [41.0, 16352.0], [41.1, 16352.0], [41.2, 16352.0], [41.3, 16354.0], [41.4, 16354.0], [41.5, 16361.0], [41.6, 16361.0], [41.7, 16361.0], [41.8, 16363.0], [41.9, 16363.0], [42.0, 16364.0], [42.1, 16364.0], [42.2, 16364.0], [42.3, 16367.0], [42.4, 16367.0], [42.5, 16368.0], [42.6, 16368.0], [42.7, 16368.0], [42.8, 16369.0], [42.9, 16369.0], [43.0, 16394.0], [43.1, 16394.0], [43.2, 16394.0], [43.3, 16395.0], [43.4, 16395.0], [43.5, 16396.0], [43.6, 16396.0], [43.7, 16396.0], [43.8, 16409.0], [43.9, 16409.0], [44.0, 16410.0], [44.1, 16410.0], [44.2, 16410.0], [44.3, 16423.0], [44.4, 16423.0], [44.5, 16424.0], [44.6, 16424.0], [44.7, 16424.0], [44.8, 16426.0], [44.9, 16426.0], [45.0, 16430.0], [45.1, 16430.0], [45.2, 16430.0], [45.3, 16434.0], [45.4, 16434.0], [45.5, 16435.0], [45.6, 16435.0], [45.7, 16435.0], [45.8, 16435.0], [45.9, 16435.0], [46.0, 16436.0], [46.1, 16436.0], [46.2, 16436.0], [46.3, 16436.0], [46.4, 16436.0], [46.5, 16436.0], [46.6, 16436.0], [46.7, 16436.0], [46.8, 16436.0], [46.9, 16436.0], [47.0, 16436.0], [47.1, 16436.0], [47.2, 16436.0], [47.3, 16437.0], [47.4, 16437.0], [47.5, 16438.0], [47.6, 16438.0], [47.7, 16438.0], [47.8, 16438.0], [47.9, 16438.0], [48.0, 16439.0], [48.1, 16439.0], [48.2, 16439.0], [48.3, 16439.0], [48.4, 16439.0], [48.5, 16443.0], [48.6, 16443.0], [48.7, 16443.0], [48.8, 16446.0], [48.9, 16446.0], [49.0, 16447.0], [49.1, 16447.0], [49.2, 16447.0], [49.3, 16448.0], [49.4, 16448.0], [49.5, 16449.0], [49.6, 16449.0], [49.7, 16449.0], [49.8, 16449.0], [49.9, 16449.0], [50.0, 16458.0], [50.1, 16458.0], [50.2, 16458.0], [50.3, 16459.0], [50.4, 16459.0], [50.5, 16460.0], [50.6, 16460.0], [50.7, 16460.0], [50.8, 16462.0], [50.9, 16462.0], [51.0, 16462.0], [51.1, 16462.0], [51.2, 16462.0], [51.3, 16462.0], [51.4, 16462.0], [51.5, 16463.0], [51.6, 16463.0], [51.7, 16463.0], [51.8, 16478.0], [51.9, 16478.0], [52.0, 16479.0], [52.1, 16479.0], [52.2, 16479.0], [52.3, 16479.0], [52.4, 16479.0], [52.5, 16479.0], [52.6, 16479.0], [52.7, 16479.0], [52.8, 16479.0], [52.9, 16479.0], [53.0, 16479.0], [53.1, 16479.0], [53.2, 16479.0], [53.3, 16479.0], [53.4, 16479.0], [53.5, 16479.0], [53.6, 16479.0], [53.7, 16479.0], [53.8, 16479.0], [53.9, 16479.0], [54.0, 16480.0], [54.1, 16480.0], [54.2, 16480.0], [54.3, 16480.0], [54.4, 16480.0], [54.5, 16480.0], [54.6, 16480.0], [54.7, 16480.0], [54.8, 16481.0], [54.9, 16481.0], [55.0, 16489.0], [55.1, 16489.0], [55.2, 16489.0], [55.3, 16491.0], [55.4, 16491.0], [55.5, 16491.0], [55.6, 16491.0], [55.7, 16491.0], [55.8, 16519.0], [55.9, 16519.0], [56.0, 16530.0], [56.1, 16530.0], [56.2, 16530.0], [56.3, 16530.0], [56.4, 16530.0], [56.5, 16541.0], [56.6, 16541.0], [56.7, 16541.0], [56.8, 16550.0], [56.9, 16550.0], [57.0, 16552.0], [57.1, 16552.0], [57.2, 16552.0], [57.3, 16552.0], [57.4, 16552.0], [57.5, 16552.0], [57.6, 16552.0], [57.7, 16552.0], [57.8, 16581.0], [57.9, 16581.0], [58.0, 16582.0], [58.1, 16582.0], [58.2, 16582.0], [58.3, 16586.0], [58.4, 16586.0], [58.5, 16587.0], [58.6, 16587.0], [58.7, 16587.0], [58.8, 16587.0], [58.9, 16587.0], [59.0, 16593.0], [59.1, 16593.0], [59.2, 16593.0], [59.3, 16596.0], [59.4, 16596.0], [59.5, 16597.0], [59.6, 16597.0], [59.7, 16597.0], [59.8, 16599.0], [59.9, 16599.0], [60.0, 16603.0], [60.1, 16603.0], [60.2, 16603.0], [60.3, 16607.0], [60.4, 16607.0], [60.5, 16607.0], [60.6, 16607.0], [60.7, 16607.0], [60.8, 16614.0], [60.9, 16614.0], [61.0, 16617.0], [61.1, 16617.0], [61.2, 16617.0], [61.3, 16617.0], [61.4, 16617.0], [61.5, 16620.0], [61.6, 16620.0], [61.7, 16620.0], [61.8, 16621.0], [61.9, 16621.0], [62.0, 16622.0], [62.1, 16622.0], [62.2, 16622.0], [62.3, 16622.0], [62.4, 16622.0], [62.5, 16623.0], [62.6, 16623.0], [62.7, 16623.0], [62.8, 16625.0], [62.9, 16625.0], [63.0, 16627.0], [63.1, 16627.0], [63.2, 16627.0], [63.3, 16635.0], [63.4, 16635.0], [63.5, 16636.0], [63.6, 16636.0], [63.7, 16636.0], [63.8, 16637.0], [63.9, 16637.0], [64.0, 16638.0], [64.1, 16638.0], [64.2, 16638.0], [64.3, 16641.0], [64.4, 16641.0], [64.5, 16644.0], [64.6, 16644.0], [64.7, 16644.0], [64.8, 16645.0], [64.9, 16645.0], [65.0, 16647.0], [65.1, 16647.0], [65.2, 16647.0], [65.3, 16648.0], [65.4, 16648.0], [65.5, 16648.0], [65.6, 16648.0], [65.7, 16648.0], [65.8, 16655.0], [65.9, 16655.0], [66.0, 16662.0], [66.1, 16662.0], [66.2, 16662.0], [66.3, 16664.0], [66.4, 16664.0], [66.5, 16675.0], [66.6, 16675.0], [66.7, 16675.0], [66.8, 16679.0], [66.9, 16679.0], [67.0, 16684.0], [67.1, 16684.0], [67.2, 16684.0], [67.3, 16686.0], [67.4, 16686.0], [67.5, 16693.0], [67.6, 16693.0], [67.7, 16693.0], [67.8, 16693.0], [67.9, 16693.0], [68.0, 16694.0], [68.1, 16694.0], [68.2, 16694.0], [68.3, 16703.0], [68.4, 16703.0], [68.5, 16703.0], [68.6, 16703.0], [68.7, 16703.0], [68.8, 16703.0], [68.9, 16703.0], [69.0, 16710.0], [69.1, 16710.0], [69.2, 16710.0], [69.3, 16716.0], [69.4, 16716.0], [69.5, 16724.0], [69.6, 16724.0], [69.7, 16724.0], [69.8, 16724.0], [69.9, 16724.0], [70.0, 16727.0], [70.1, 16727.0], [70.2, 16727.0], [70.3, 16727.0], [70.4, 16727.0], [70.5, 16727.0], [70.6, 16727.0], [70.7, 16727.0], [70.8, 16736.0], [70.9, 16736.0], [71.0, 16740.0], [71.1, 16740.0], [71.2, 16740.0], [71.3, 16740.0], [71.4, 16740.0], [71.5, 16744.0], [71.6, 16744.0], [71.7, 16744.0], [71.8, 16745.0], [71.9, 16745.0], [72.0, 16746.0], [72.1, 16746.0], [72.2, 16746.0], [72.3, 16747.0], [72.4, 16747.0], [72.5, 16749.0], [72.6, 16749.0], [72.7, 16749.0], [72.8, 16750.0], [72.9, 16750.0], [73.0, 16750.0], [73.1, 16750.0], [73.2, 16750.0], [73.3, 16751.0], [73.4, 16751.0], [73.5, 16751.0], [73.6, 16751.0], [73.7, 16751.0], [73.8, 16756.0], [73.9, 16756.0], [74.0, 16757.0], [74.1, 16757.0], [74.2, 16757.0], [74.3, 16758.0], [74.4, 16758.0], [74.5, 16758.0], [74.6, 16758.0], [74.7, 16758.0], [74.8, 16761.0], [74.9, 16761.0], [75.0, 16763.0], [75.1, 16763.0], [75.2, 16763.0], [75.3, 16764.0], [75.4, 16764.0], [75.5, 16768.0], [75.6, 16768.0], [75.7, 16768.0], [75.8, 16772.0], [75.9, 16772.0], [76.0, 16774.0], [76.1, 16774.0], [76.2, 16774.0], [76.3, 16775.0], [76.4, 16775.0], [76.5, 16782.0], [76.6, 16782.0], [76.7, 16782.0], [76.8, 16789.0], [76.9, 16789.0], [77.0, 16790.0], [77.1, 16790.0], [77.2, 16790.0], [77.3, 16791.0], [77.4, 16791.0], [77.5, 16796.0], [77.6, 16796.0], [77.7, 16796.0], [77.8, 16805.0], [77.9, 16805.0], [78.0, 16815.0], [78.1, 16815.0], [78.2, 16815.0], [78.3, 16819.0], [78.4, 16819.0], [78.5, 16821.0], [78.6, 16821.0], [78.7, 16821.0], [78.8, 16824.0], [78.9, 16824.0], [79.0, 16832.0], [79.1, 16832.0], [79.2, 16832.0], [79.3, 16834.0], [79.4, 16834.0], [79.5, 16834.0], [79.6, 16834.0], [79.7, 16834.0], [79.8, 16834.0], [79.9, 16834.0], [80.0, 16835.0], [80.1, 16835.0], [80.2, 16835.0], [80.3, 16835.0], [80.4, 16835.0], [80.5, 16844.0], [80.6, 16844.0], [80.7, 16844.0], [80.8, 16851.0], [80.9, 16851.0], [81.0, 16867.0], [81.1, 16867.0], [81.2, 16867.0], [81.3, 16880.0], [81.4, 16880.0], [81.5, 16885.0], [81.6, 16885.0], [81.7, 16885.0], [81.8, 16889.0], [81.9, 16889.0], [82.0, 16892.0], [82.1, 16892.0], [82.2, 16892.0], [82.3, 16894.0], [82.4, 16894.0], [82.5, 16897.0], [82.6, 16897.0], [82.7, 16897.0], [82.8, 16897.0], [82.9, 16897.0], [83.0, 16901.0], [83.1, 16901.0], [83.2, 16901.0], [83.3, 16901.0], [83.4, 16901.0], [83.5, 16904.0], [83.6, 16904.0], [83.7, 16904.0], [83.8, 16909.0], [83.9, 16909.0], [84.0, 16910.0], [84.1, 16910.0], [84.2, 16910.0], [84.3, 16910.0], [84.4, 16910.0], [84.5, 16913.0], [84.6, 16913.0], [84.7, 16913.0], [84.8, 16915.0], [84.9, 16915.0], [85.0, 16921.0], [85.1, 16921.0], [85.2, 16921.0], [85.3, 16923.0], [85.4, 16923.0], [85.5, 16929.0], [85.6, 16929.0], [85.7, 16929.0], [85.8, 16931.0], [85.9, 16931.0], [86.0, 16933.0], [86.1, 16933.0], [86.2, 16933.0], [86.3, 16935.0], [86.4, 16935.0], [86.5, 16936.0], [86.6, 16936.0], [86.7, 16936.0], [86.8, 16942.0], [86.9, 16942.0], [87.0, 16944.0], [87.1, 16944.0], [87.2, 16944.0], [87.3, 16949.0], [87.4, 16949.0], [87.5, 16949.0], [87.6, 16949.0], [87.7, 16949.0], [87.8, 16957.0], [87.9, 16957.0], [88.0, 16964.0], [88.1, 16964.0], [88.2, 16964.0], [88.3, 16970.0], [88.4, 16970.0], [88.5, 16973.0], [88.6, 16973.0], [88.7, 16973.0], [88.8, 16974.0], [88.9, 16974.0], [89.0, 16975.0], [89.1, 16975.0], [89.2, 16975.0], [89.3, 16979.0], [89.4, 16979.0], [89.5, 16980.0], [89.6, 16980.0], [89.7, 16980.0], [89.8, 16982.0], [89.9, 16982.0], [90.0, 16984.0], [90.1, 16984.0], [90.2, 16984.0], [90.3, 16987.0], [90.4, 16987.0], [90.5, 16997.0], [90.6, 16997.0], [90.7, 16997.0], [90.8, 16997.0], [90.9, 16997.0], [91.0, 17001.0], [91.1, 17001.0], [91.2, 17001.0], [91.3, 17002.0], [91.4, 17002.0], [91.5, 17005.0], [91.6, 17005.0], [91.7, 17005.0], [91.8, 17005.0], [91.9, 17005.0], [92.0, 17007.0], [92.1, 17007.0], [92.2, 17007.0], [92.3, 17007.0], [92.4, 17007.0], [92.5, 17013.0], [92.6, 17013.0], [92.7, 17013.0], [92.8, 17014.0], [92.9, 17014.0], [93.0, 17016.0], [93.1, 17016.0], [93.2, 17016.0], [93.3, 17020.0], [93.4, 17020.0], [93.5, 17023.0], [93.6, 17023.0], [93.7, 17023.0], [93.8, 17025.0], [93.9, 17025.0], [94.0, 17026.0], [94.1, 17026.0], [94.2, 17026.0], [94.3, 17030.0], [94.4, 17030.0], [94.5, 17036.0], [94.6, 17036.0], [94.7, 17036.0], [94.8, 17041.0], [94.9, 17041.0], [95.0, 17046.0], [95.1, 17046.0], [95.2, 17046.0], [95.3, 17048.0], [95.4, 17048.0], [95.5, 17048.0], [95.6, 17048.0], [95.7, 17048.0], [95.8, 17050.0], [95.9, 17050.0], [96.0, 17055.0], [96.1, 17055.0], [96.2, 17055.0], [96.3, 17059.0], [96.4, 17059.0], [96.5, 17060.0], [96.6, 17060.0], [96.7, 17060.0], [96.8, 17061.0], [96.9, 17061.0], [97.0, 17063.0], [97.1, 17063.0], [97.2, 17063.0], [97.3, 17063.0], [97.4, 17063.0], [97.5, 17072.0], [97.6, 17072.0], [97.7, 17072.0], [97.8, 17077.0], [97.9, 17077.0], [98.0, 17078.0], [98.1, 17078.0], [98.2, 17078.0], [98.3, 17078.0], [98.4, 17078.0], [98.5, 17082.0], [98.6, 17082.0], [98.7, 17082.0], [98.8, 17085.0], [98.9, 17085.0], [99.0, 17085.0], [99.1, 17085.0], [99.2, 17085.0], [99.3, 17093.0], [99.4, 17093.0], [99.5, 17099.0], [99.6, 17099.0], [99.7, 17099.0], [99.8, 17113.0], [99.9, 17113.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 60827.0], [0.1, 60827.0], [0.2, 60827.0], [0.3, 60840.0], [0.4, 60840.0], [0.5, 60842.0], [0.6, 60842.0], [0.7, 60842.0], [0.8, 60846.0], [0.9, 60846.0], [1.0, 60850.0], [1.1, 60850.0], [1.2, 60850.0], [1.3, 60853.0], [1.4, 60853.0], [1.5, 60856.0], [1.6, 60856.0], [1.7, 60856.0], [1.8, 60856.0], [1.9, 60856.0], [2.0, 60858.0], [2.1, 60858.0], [2.2, 60858.0], [2.3, 60862.0], [2.4, 60862.0], [2.5, 60867.0], [2.6, 60867.0], [2.7, 60867.0], [2.8, 60874.0], [2.9, 60874.0], [3.0, 60883.0], [3.1, 60883.0], [3.2, 60883.0], [3.3, 60889.0], [3.4, 60889.0], [3.5, 60892.0], [3.6, 60892.0], [3.7, 60892.0], [3.8, 60896.0], [3.9, 60896.0], [4.0, 60900.0], [4.1, 60900.0], [4.2, 60900.0], [4.3, 60901.0], [4.4, 60901.0], [4.5, 60902.0], [4.6, 60902.0], [4.7, 60902.0], [4.8, 60911.0], [4.9, 60911.0], [5.0, 60913.0], [5.1, 60913.0], [5.2, 60913.0], [5.3, 60913.0], [5.4, 60913.0], [5.5, 60918.0], [5.6, 60918.0], [5.7, 60918.0], [5.8, 60922.0], [5.9, 60922.0], [6.0, 60922.0], [6.1, 60922.0], [6.2, 60922.0], [6.3, 60922.0], [6.4, 60922.0], [6.5, 60925.0], [6.6, 60925.0], [6.7, 60925.0], [6.8, 60929.0], [6.9, 60929.0], [7.0, 60930.0], [7.1, 60930.0], [7.2, 60930.0], [7.3, 60931.0], [7.4, 60931.0], [7.5, 60933.0], [7.6, 60933.0], [7.7, 60933.0], [7.8, 60933.0], [7.9, 60933.0], [8.0, 60940.0], [8.1, 60940.0], [8.2, 60940.0], [8.3, 60949.0], [8.4, 60949.0], [8.5, 60950.0], [8.6, 60950.0], [8.7, 60950.0], [8.8, 60952.0], [8.9, 60952.0], [9.0, 60954.0], [9.1, 60954.0], [9.2, 60954.0], [9.3, 60955.0], [9.4, 60955.0], [9.5, 60958.0], [9.6, 60958.0], [9.7, 60958.0], [9.8, 60958.0], [9.9, 60958.0], [10.0, 60963.0], [10.1, 60963.0], [10.2, 60963.0], [10.3, 60967.0], [10.4, 60967.0], [10.5, 60969.0], [10.6, 60969.0], [10.7, 60969.0], [10.8, 60970.0], [10.9, 60970.0], [11.0, 60988.0], [11.1, 60988.0], [11.2, 60988.0], [11.3, 60990.0], [11.4, 60990.0], [11.5, 60991.0], [11.6, 60991.0], [11.7, 60991.0], [11.8, 60992.0], [11.9, 60992.0], [12.0, 60997.0], [12.1, 60997.0], [12.2, 60997.0], [12.3, 61004.0], [12.4, 61004.0], [12.5, 61005.0], [12.6, 61005.0], [12.7, 61005.0], [12.8, 61011.0], [12.9, 61011.0], [13.0, 61012.0], [13.1, 61012.0], [13.2, 61012.0], [13.3, 61014.0], [13.4, 61014.0], [13.5, 61015.0], [13.6, 61015.0], [13.7, 61015.0], [13.8, 61017.0], [13.9, 61017.0], [14.0, 61021.0], [14.1, 61021.0], [14.2, 61021.0], [14.3, 61023.0], [14.4, 61023.0], [14.5, 61023.0], [14.6, 61023.0], [14.7, 61023.0], [14.8, 61023.0], [14.9, 61023.0], [15.0, 61029.0], [15.1, 61029.0], [15.2, 61029.0], [15.3, 61029.0], [15.4, 61029.0], [15.5, 61032.0], [15.6, 61032.0], [15.7, 61032.0], [15.8, 61033.0], [15.9, 61033.0], [16.0, 61035.0], [16.1, 61035.0], [16.2, 61035.0], [16.3, 61037.0], [16.4, 61037.0], [16.5, 61041.0], [16.6, 61041.0], [16.7, 61041.0], [16.8, 61042.0], [16.9, 61042.0], [17.0, 61047.0], [17.1, 61047.0], [17.2, 61047.0], [17.3, 61048.0], [17.4, 61048.0], [17.5, 61054.0], [17.6, 61054.0], [17.7, 61054.0], [17.8, 61056.0], [17.9, 61056.0], [18.0, 61060.0], [18.1, 61060.0], [18.2, 61060.0], [18.3, 61065.0], [18.4, 61065.0], [18.5, 61065.0], [18.6, 61065.0], [18.7, 61065.0], [18.8, 61069.0], [18.9, 61069.0], [19.0, 61071.0], [19.1, 61071.0], [19.2, 61071.0], [19.3, 61072.0], [19.4, 61072.0], [19.5, 61074.0], [19.6, 61074.0], [19.7, 61074.0], [19.8, 61078.0], [19.9, 61078.0], [20.0, 61081.0], [20.1, 61081.0], [20.2, 61081.0], [20.3, 61089.0], [20.4, 61089.0], [20.5, 61093.0], [20.6, 61093.0], [20.7, 61093.0], [20.8, 61098.0], [20.9, 61098.0], [21.0, 61105.0], [21.1, 61105.0], [21.2, 61105.0], [21.3, 61111.0], [21.4, 61111.0], [21.5, 61117.0], [21.6, 61117.0], [21.7, 61117.0], [21.8, 61119.0], [21.9, 61119.0], [22.0, 61122.0], [22.1, 61122.0], [22.2, 61122.0], [22.3, 61125.0], [22.4, 61125.0], [22.5, 61125.0], [22.6, 61125.0], [22.7, 61125.0], [22.8, 61125.0], [22.9, 61125.0], [23.0, 61128.0], [23.1, 61128.0], [23.2, 61128.0], [23.3, 61129.0], [23.4, 61129.0], [23.5, 61131.0], [23.6, 61131.0], [23.7, 61131.0], [23.8, 61134.0], [23.9, 61134.0], [24.0, 61137.0], [24.1, 61137.0], [24.2, 61137.0], [24.3, 61137.0], [24.4, 61137.0], [24.5, 61138.0], [24.6, 61138.0], [24.7, 61138.0], [24.8, 61144.0], [24.9, 61144.0], [25.0, 61144.0], [25.1, 61144.0], [25.2, 61144.0], [25.3, 61147.0], [25.4, 61147.0], [25.5, 61152.0], [25.6, 61152.0], [25.7, 61152.0], [25.8, 61152.0], [25.9, 61152.0], [26.0, 61152.0], [26.1, 61152.0], [26.2, 61152.0], [26.3, 61158.0], [26.4, 61158.0], [26.5, 61162.0], [26.6, 61162.0], [26.7, 61162.0], [26.8, 61165.0], [26.9, 61165.0], [27.0, 61167.0], [27.1, 61167.0], [27.2, 61167.0], [27.3, 61167.0], [27.4, 61167.0], [27.5, 61168.0], [27.6, 61168.0], [27.7, 61168.0], [27.8, 61174.0], [27.9, 61174.0], [28.0, 61177.0], [28.1, 61177.0], [28.2, 61177.0], [28.3, 61180.0], [28.4, 61180.0], [28.5, 61182.0], [28.6, 61182.0], [28.7, 61182.0], [28.8, 61188.0], [28.9, 61188.0], [29.0, 61193.0], [29.1, 61193.0], [29.2, 61193.0], [29.3, 61199.0], [29.4, 61199.0], [29.5, 61200.0], [29.6, 61200.0], [29.7, 61200.0], [29.8, 61202.0], [29.9, 61202.0], [30.0, 61206.0], [30.1, 61206.0], [30.2, 61206.0], [30.3, 61209.0], [30.4, 61209.0], [30.5, 61210.0], [30.6, 61210.0], [30.7, 61210.0], [30.8, 61212.0], [30.9, 61212.0], [31.0, 61225.0], [31.1, 61225.0], [31.2, 61225.0], [31.3, 61230.0], [31.4, 61230.0], [31.5, 61230.0], [31.6, 61230.0], [31.7, 61230.0], [31.8, 61234.0], [31.9, 61234.0], [32.0, 61236.0], [32.1, 61236.0], [32.2, 61236.0], [32.3, 61248.0], [32.4, 61248.0], [32.5, 61250.0], [32.6, 61250.0], [32.7, 61250.0], [32.8, 61252.0], [32.9, 61252.0], [33.0, 61252.0], [33.1, 61252.0], [33.2, 61252.0], [33.3, 61255.0], [33.4, 61255.0], [33.5, 61255.0], [33.6, 61255.0], [33.7, 61255.0], [33.8, 61257.0], [33.9, 61257.0], [34.0, 61258.0], [34.1, 61258.0], [34.2, 61258.0], [34.3, 61261.0], [34.4, 61261.0], [34.5, 61273.0], [34.6, 61273.0], [34.7, 61273.0], [34.8, 61273.0], [34.9, 61273.0], [35.0, 61276.0], [35.1, 61276.0], [35.2, 61276.0], [35.3, 61279.0], [35.4, 61279.0], [35.5, 61285.0], [35.6, 61285.0], [35.7, 61285.0], [35.8, 61288.0], [35.9, 61288.0], [36.0, 61290.0], [36.1, 61290.0], [36.2, 61290.0], [36.3, 61291.0], [36.4, 61291.0], [36.5, 61294.0], [36.6, 61294.0], [36.7, 61294.0], [36.8, 61297.0], [36.9, 61297.0], [37.0, 61297.0], [37.1, 61297.0], [37.2, 61297.0], [37.3, 61300.0], [37.4, 61300.0], [37.5, 61302.0], [37.6, 61302.0], [37.7, 61302.0], [37.8, 61306.0], [37.9, 61306.0], [38.0, 61308.0], [38.1, 61308.0], [38.2, 61308.0], [38.3, 61311.0], [38.4, 61311.0], [38.5, 61320.0], [38.6, 61320.0], [38.7, 61320.0], [38.8, 61323.0], [38.9, 61323.0], [39.0, 61324.0], [39.1, 61324.0], [39.2, 61324.0], [39.3, 61328.0], [39.4, 61328.0], [39.5, 61329.0], [39.6, 61329.0], [39.7, 61329.0], [39.8, 61329.0], [39.9, 61329.0], [40.0, 61332.0], [40.1, 61332.0], [40.2, 61332.0], [40.3, 61332.0], [40.4, 61332.0], [40.5, 61338.0], [40.6, 61338.0], [40.7, 61338.0], [40.8, 61341.0], [40.9, 61341.0], [41.0, 61341.0], [41.1, 61341.0], [41.2, 61341.0], [41.3, 61342.0], [41.4, 61342.0], [41.5, 61350.0], [41.6, 61350.0], [41.7, 61350.0], [41.8, 61359.0], [41.9, 61359.0], [42.0, 61359.0], [42.1, 61359.0], [42.2, 61359.0], [42.3, 61359.0], [42.4, 61359.0], [42.5, 61362.0], [42.6, 61362.0], [42.7, 61362.0], [42.8, 61362.0], [42.9, 61362.0], [43.0, 61365.0], [43.1, 61365.0], [43.2, 61365.0], [43.3, 61365.0], [43.4, 61365.0], [43.5, 61368.0], [43.6, 61368.0], [43.7, 61368.0], [43.8, 61371.0], [43.9, 61371.0], [44.0, 61372.0], [44.1, 61372.0], [44.2, 61372.0], [44.3, 61377.0], [44.4, 61377.0], [44.5, 61386.0], [44.6, 61386.0], [44.7, 61386.0], [44.8, 61395.0], [44.9, 61395.0], [45.0, 61396.0], [45.1, 61396.0], [45.2, 61396.0], [45.3, 61398.0], [45.4, 61398.0], [45.5, 61399.0], [45.6, 61399.0], [45.7, 61399.0], [45.8, 61399.0], [45.9, 61399.0], [46.0, 61402.0], [46.1, 61402.0], [46.2, 61402.0], [46.3, 61404.0], [46.4, 61404.0], [46.5, 61407.0], [46.6, 61407.0], [46.7, 61407.0], [46.8, 61408.0], [46.9, 61408.0], [47.0, 61410.0], [47.1, 61410.0], [47.2, 61410.0], [47.3, 61413.0], [47.4, 61413.0], [47.5, 61414.0], [47.6, 61414.0], [47.7, 61414.0], [47.8, 61416.0], [47.9, 61416.0], [48.0, 61420.0], [48.1, 61420.0], [48.2, 61420.0], [48.3, 61425.0], [48.4, 61425.0], [48.5, 61426.0], [48.6, 61426.0], [48.7, 61426.0], [48.8, 61428.0], [48.9, 61428.0], [49.0, 61432.0], [49.1, 61432.0], [49.2, 61432.0], [49.3, 61440.0], [49.4, 61440.0], [49.5, 61449.0], [49.6, 61449.0], [49.7, 61449.0], [49.8, 61450.0], [49.9, 61450.0], [50.0, 61452.0], [50.1, 61452.0], [50.2, 61452.0], [50.3, 61464.0], [50.4, 61464.0], [50.5, 61465.0], [50.6, 61465.0], [50.7, 61465.0], [50.8, 61467.0], [50.9, 61467.0], [51.0, 61468.0], [51.1, 61468.0], [51.2, 61468.0], [51.3, 61473.0], [51.4, 61473.0], [51.5, 61477.0], [51.6, 61477.0], [51.7, 61477.0], [51.8, 61477.0], [51.9, 61477.0], [52.0, 61477.0], [52.1, 61477.0], [52.2, 61477.0], [52.3, 61485.0], [52.4, 61485.0], [52.5, 61486.0], [52.6, 61486.0], [52.7, 61486.0], [52.8, 61490.0], [52.9, 61490.0], [53.0, 61491.0], [53.1, 61491.0], [53.2, 61491.0], [53.3, 61496.0], [53.4, 61496.0], [53.5, 61498.0], [53.6, 61498.0], [53.7, 61498.0], [53.8, 61498.0], [53.9, 61498.0], [54.0, 61501.0], [54.1, 61501.0], [54.2, 61501.0], [54.3, 61504.0], [54.4, 61504.0], [54.5, 61507.0], [54.6, 61507.0], [54.7, 61507.0], [54.8, 61509.0], [54.9, 61509.0], [55.0, 61510.0], [55.1, 61510.0], [55.2, 61510.0], [55.3, 61512.0], [55.4, 61512.0], [55.5, 61513.0], [55.6, 61513.0], [55.7, 61513.0], [55.8, 61515.0], [55.9, 61515.0], [56.0, 61518.0], [56.1, 61518.0], [56.2, 61518.0], [56.3, 61522.0], [56.4, 61522.0], [56.5, 61525.0], [56.6, 61525.0], [56.7, 61525.0], [56.8, 61527.0], [56.9, 61527.0], [57.0, 61530.0], [57.1, 61530.0], [57.2, 61530.0], [57.3, 61531.0], [57.4, 61531.0], [57.5, 61536.0], [57.6, 61536.0], [57.7, 61536.0], [57.8, 61536.0], [57.9, 61536.0], [58.0, 61539.0], [58.1, 61539.0], [58.2, 61539.0], [58.3, 61542.0], [58.4, 61542.0], [58.5, 61543.0], [58.6, 61543.0], [58.7, 61543.0], [58.8, 61546.0], [58.9, 61546.0], [59.0, 61548.0], [59.1, 61548.0], [59.2, 61548.0], [59.3, 61549.0], [59.4, 61549.0], [59.5, 61549.0], [59.6, 61549.0], [59.7, 61549.0], [59.8, 61549.0], [59.9, 61549.0], [60.0, 61552.0], [60.1, 61552.0], [60.2, 61552.0], [60.3, 61554.0], [60.4, 61554.0], [60.5, 61561.0], [60.6, 61561.0], [60.7, 61561.0], [60.8, 61564.0], [60.9, 61564.0], [61.0, 61567.0], [61.1, 61567.0], [61.2, 61567.0], [61.3, 61579.0], [61.4, 61579.0], [61.5, 61588.0], [61.6, 61588.0], [61.7, 61588.0], [61.8, 61589.0], [61.9, 61589.0], [62.0, 61599.0], [62.1, 61599.0], [62.2, 61599.0], [62.3, 61603.0], [62.4, 61603.0], [62.5, 61603.0], [62.6, 61603.0], [62.7, 61603.0], [62.8, 61606.0], [62.9, 61606.0], [63.0, 61606.0], [63.1, 61606.0], [63.2, 61606.0], [63.3, 61615.0], [63.4, 61615.0], [63.5, 61620.0], [63.6, 61620.0], [63.7, 61620.0], [63.8, 61623.0], [63.9, 61623.0], [64.0, 61627.0], [64.1, 61627.0], [64.2, 61627.0], [64.3, 61627.0], [64.4, 61627.0], [64.5, 61627.0], [64.6, 61627.0], [64.7, 61627.0], [64.8, 61630.0], [64.9, 61630.0], [65.0, 61630.0], [65.1, 61630.0], [65.2, 61630.0], [65.3, 61634.0], [65.4, 61634.0], [65.5, 61636.0], [65.6, 61636.0], [65.7, 61636.0], [65.8, 61636.0], [65.9, 61636.0], [66.0, 61642.0], [66.1, 61642.0], [66.2, 61642.0], [66.3, 61644.0], [66.4, 61644.0], [66.5, 61653.0], [66.6, 61653.0], [66.7, 61653.0], [66.8, 61654.0], [66.9, 61654.0], [67.0, 61654.0], [67.1, 61654.0], [67.2, 61654.0], [67.3, 61657.0], [67.4, 61657.0], [67.5, 61659.0], [67.6, 61659.0], [67.7, 61659.0], [67.8, 61662.0], [67.9, 61662.0], [68.0, 61663.0], [68.1, 61663.0], [68.2, 61663.0], [68.3, 61668.0], [68.4, 61668.0], [68.5, 61674.0], [68.6, 61674.0], [68.7, 61674.0], [68.8, 61675.0], [68.9, 61675.0], [69.0, 61677.0], [69.1, 61677.0], [69.2, 61677.0], [69.3, 61678.0], [69.4, 61678.0], [69.5, 61680.0], [69.6, 61680.0], [69.7, 61680.0], [69.8, 61682.0], [69.9, 61682.0], [70.0, 61687.0], [70.1, 61687.0], [70.2, 61687.0], [70.3, 61695.0], [70.4, 61695.0], [70.5, 61697.0], [70.6, 61697.0], [70.7, 61697.0], [70.8, 61698.0], [70.9, 61698.0], [71.0, 61702.0], [71.1, 61702.0], [71.2, 61702.0], [71.3, 61705.0], [71.4, 61705.0], [71.5, 61705.0], [71.6, 61705.0], [71.7, 61705.0], [71.8, 61707.0], [71.9, 61707.0], [72.0, 61710.0], [72.1, 61710.0], [72.2, 61710.0], [72.3, 61710.0], [72.4, 61710.0], [72.5, 61715.0], [72.6, 61715.0], [72.7, 61715.0], [72.8, 61718.0], [72.9, 61718.0], [73.0, 61719.0], [73.1, 61719.0], [73.2, 61719.0], [73.3, 61727.0], [73.4, 61727.0], [73.5, 61727.0], [73.6, 61727.0], [73.7, 61727.0], [73.8, 61727.0], [73.9, 61727.0], [74.0, 61727.0], [74.1, 61727.0], [74.2, 61727.0], [74.3, 61727.0], [74.4, 61727.0], [74.5, 61727.0], [74.6, 61727.0], [74.7, 61727.0], [74.8, 61728.0], [74.9, 61728.0], [75.0, 61728.0], [75.1, 61728.0], [75.2, 61728.0], [75.3, 61737.0], [75.4, 61737.0], [75.5, 61746.0], [75.6, 61746.0], [75.7, 61746.0], [75.8, 61756.0], [75.9, 61756.0], [76.0, 61757.0], [76.1, 61757.0], [76.2, 61757.0], [76.3, 61758.0], [76.4, 61758.0], [76.5, 61764.0], [76.6, 61764.0], [76.7, 61764.0], [76.8, 61767.0], [76.9, 61767.0], [77.0, 61772.0], [77.1, 61772.0], [77.2, 61772.0], [77.3, 61772.0], [77.4, 61772.0], [77.5, 61777.0], [77.6, 61777.0], [77.7, 61777.0], [77.8, 61785.0], [77.9, 61785.0], [78.0, 61789.0], [78.1, 61789.0], [78.2, 61789.0], [78.3, 61791.0], [78.4, 61791.0], [78.5, 61794.0], [78.6, 61794.0], [78.7, 61794.0], [78.8, 61799.0], [78.9, 61799.0], [79.0, 61800.0], [79.1, 61800.0], [79.2, 61800.0], [79.3, 61806.0], [79.4, 61806.0], [79.5, 61810.0], [79.6, 61810.0], [79.7, 61810.0], [79.8, 61812.0], [79.9, 61812.0], [80.0, 61819.0], [80.1, 61819.0], [80.2, 61819.0], [80.3, 61819.0], [80.4, 61819.0], [80.5, 61824.0], [80.6, 61824.0], [80.7, 61824.0], [80.8, 61828.0], [80.9, 61828.0], [81.0, 61828.0], [81.1, 61828.0], [81.2, 61828.0], [81.3, 61829.0], [81.4, 61829.0], [81.5, 61831.0], [81.6, 61831.0], [81.7, 61831.0], [81.8, 61833.0], [81.9, 61833.0], [82.0, 61837.0], [82.1, 61837.0], [82.2, 61837.0], [82.3, 61840.0], [82.4, 61840.0], [82.5, 61843.0], [82.6, 61843.0], [82.7, 61843.0], [82.8, 61846.0], [82.9, 61846.0], [83.0, 61848.0], [83.1, 61848.0], [83.2, 61848.0], [83.3, 61849.0], [83.4, 61849.0], [83.5, 61855.0], [83.6, 61855.0], [83.7, 61855.0], [83.8, 61855.0], [83.9, 61855.0], [84.0, 61856.0], [84.1, 61856.0], [84.2, 61856.0], [84.3, 61858.0], [84.4, 61858.0], [84.5, 61860.0], [84.6, 61860.0], [84.7, 61860.0], [84.8, 61860.0], [84.9, 61860.0], [85.0, 61863.0], [85.1, 61863.0], [85.2, 61863.0], [85.3, 61863.0], [85.4, 61863.0], [85.5, 61866.0], [85.6, 61866.0], [85.7, 61866.0], [85.8, 61866.0], [85.9, 61866.0], [86.0, 61873.0], [86.1, 61873.0], [86.2, 61873.0], [86.3, 61879.0], [86.4, 61879.0], [86.5, 61882.0], [86.6, 61882.0], [86.7, 61882.0], [86.8, 61882.0], [86.9, 61882.0], [87.0, 61891.0], [87.1, 61891.0], [87.2, 61891.0], [87.3, 61896.0], [87.4, 61896.0], [87.5, 61899.0], [87.6, 61899.0], [87.7, 61899.0], [87.8, 61901.0], [87.9, 61901.0], [88.0, 61903.0], [88.1, 61903.0], [88.2, 61903.0], [88.3, 61909.0], [88.4, 61909.0], [88.5, 61911.0], [88.6, 61911.0], [88.7, 61911.0], [88.8, 61915.0], [88.9, 61915.0], [89.0, 61918.0], [89.1, 61918.0], [89.2, 61918.0], [89.3, 61920.0], [89.4, 61920.0], [89.5, 61920.0], [89.6, 61920.0], [89.7, 61920.0], [89.8, 61923.0], [89.9, 61923.0], [90.0, 61932.0], [90.1, 61932.0], [90.2, 61932.0], [90.3, 61941.0], [90.4, 61941.0], [90.5, 61941.0], [90.6, 61941.0], [90.7, 61941.0], [90.8, 61944.0], [90.9, 61944.0], [91.0, 61945.0], [91.1, 61945.0], [91.2, 61945.0], [91.3, 61949.0], [91.4, 61949.0], [91.5, 61950.0], [91.6, 61950.0], [91.7, 61950.0], [91.8, 61955.0], [91.9, 61955.0], [92.0, 61956.0], [92.1, 61956.0], [92.2, 61956.0], [92.3, 61959.0], [92.4, 61959.0], [92.5, 61962.0], [92.6, 61962.0], [92.7, 61962.0], [92.8, 61963.0], [92.9, 61963.0], [93.0, 61974.0], [93.1, 61974.0], [93.2, 61974.0], [93.3, 61974.0], [93.4, 61974.0], [93.5, 61976.0], [93.6, 61976.0], [93.7, 61976.0], [93.8, 61980.0], [93.9, 61980.0], [94.0, 61981.0], [94.1, 61981.0], [94.2, 61981.0], [94.3, 61983.0], [94.4, 61983.0], [94.5, 61983.0], [94.6, 61983.0], [94.7, 61983.0], [94.8, 61986.0], [94.9, 61986.0], [95.0, 61992.0], [95.1, 61992.0], [95.2, 61992.0], [95.3, 61998.0], [95.4, 61998.0], [95.5, 61998.0], [95.6, 61998.0], [95.7, 61998.0], [95.8, 62001.0], [95.9, 62001.0], [96.0, 62005.0], [96.1, 62005.0], [96.2, 62005.0], [96.3, 62007.0], [96.4, 62007.0], [96.5, 62010.0], [96.6, 62010.0], [96.7, 62010.0], [96.8, 62011.0], [96.9, 62011.0], [97.0, 62019.0], [97.1, 62019.0], [97.2, 62019.0], [97.3, 62021.0], [97.4, 62021.0], [97.5, 62029.0], [97.6, 62029.0], [97.7, 62029.0], [97.8, 62031.0], [97.9, 62031.0], [98.0, 62031.0], [98.1, 62031.0], [98.2, 62031.0], [98.3, 62033.0], [98.4, 62033.0], [98.5, 62033.0], [98.6, 62033.0], [98.7, 62033.0], [98.8, 62037.0], [98.9, 62037.0], [99.0, 62040.0], [99.1, 62040.0], [99.2, 62040.0], [99.3, 62040.0], [99.4, 62040.0], [99.5, 62043.0], [99.6, 62043.0], [99.7, 62043.0], [99.8, 62650.0], [99.9, 62650.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8397.0, "series": [{"data": [[0.0, 817.0], [2100.0, 8397.0], [2200.0, 937.0], [2300.0, 11.0], [2400.0, 6.0], [9600.0, 11.0], [2500.0, 143.0], [2600.0, 135.0], [2700.0, 125.0], [200.0, 3834.0], [3300.0, 1.0], [3600.0, 33.0], [300.0, 416.0], [1200.0, 78.0], [1300.0, 30.0], [1400.0, 39.0], [5600.0, 16.0], [100.0, 1065.0], [400.0, 957.0], [500.0, 80.0], [8100.0, 27.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[15800.0, 19.0], [16200.0, 30.0], [15900.0, 19.0], [16300.0, 40.0], [16000.0, 44.0], [16100.0, 23.0], [16800.0, 21.0], [17000.0, 35.0], [16500.0, 17.0], [16400.0, 48.0], [16600.0, 33.0], [16700.0, 38.0], [16900.0, 32.0], [17100.0, 1.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[61300.0, 35.0], [61000.0, 35.0], [61200.0, 31.0], [60900.0, 33.0], [61100.0, 34.0], [60800.0, 16.0], [61400.0, 32.0], [61600.0, 35.0], [61500.0, 33.0], [62000.0, 16.0], [61700.0, 32.0], [61900.0, 32.0], [61800.0, 35.0], [62600.0, 1.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 62600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 820.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 9841.0, "series": [{"data": [[0.0, 820.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 6349.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 948.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 9841.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 232.74249999999986, "minX": 1.61758182E12, "maxY": 388.5580633418275, "series": [{"data": [[1.61758182E12, 232.74249999999986]], "isOverall": false, "label": "CreateRoom-SelectFC-Ready", "isController": false}, {"data": [[1.61758182E12, 363.62577099921566], [1.61758188E12, 388.5580633418275]], "isOverall": false, "label": "JoinServer+ChangeNickName+JoinRoom&Ready", "isController": false}, {"data": [[1.61758188E12, 251.42249999999984]], "isOverall": false, "label": "JoinServer+JoinRoom&waitfor(1min)ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758188E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 62650.0, "series": [{"data": [[2.0, 2160.0], [3.0, 2159.0], [4.0, 2158.0], [5.0, 2161.0], [6.0, 2160.0], [7.0, 2161.0], [8.0, 2162.0], [9.0, 2161.0], [10.0, 2161.0], [11.0, 2161.0], [12.0, 2175.0], [13.0, 2162.0], [14.0, 2160.0], [15.0, 2162.0], [16.0, 2158.0], [17.0, 2160.0], [18.0, 2155.0], [19.0, 2158.0], [20.0, 2160.0], [21.0, 2158.0], [22.0, 2160.0], [23.0, 2159.0], [24.0, 2159.0], [25.0, 2159.0], [26.0, 2159.0], [27.0, 2161.0], [28.0, 2155.0], [29.0, 2164.0], [30.0, 2160.0], [31.0, 2160.0], [33.0, 2160.0], [32.0, 2158.0], [35.0, 2158.0], [34.0, 2161.0], [37.0, 2158.0], [36.0, 2159.0], [39.0, 2160.0], [38.0, 2159.0], [41.0, 2158.0], [40.0, 2161.0], [43.0, 2159.0], [42.0, 2159.0], [45.0, 2161.0], [44.0, 2160.0], [47.0, 2156.0], [46.0, 2159.0], [49.0, 2156.0], [48.0, 2156.0], [51.0, 2158.0], [50.0, 2159.0], [53.0, 2158.0], [52.0, 2160.0], [55.0, 2159.0], [54.0, 2161.0], [57.0, 2162.0], [56.0, 2158.0], [59.0, 2157.0], [58.0, 2158.0], [61.0, 2157.0], [60.0, 2156.0], [63.0, 2169.0], [62.0, 2159.0], [67.0, 2157.0], [66.0, 2157.0], [65.0, 2158.0], [64.0, 2160.0], [71.0, 2159.0], [70.0, 2159.0], [69.0, 2159.0], [68.0, 2159.0], [75.0, 2157.0], [74.0, 2159.0], [73.0, 2160.0], [72.0, 2159.0], [79.0, 2156.0], [78.0, 2158.0], [77.0, 2156.0], [76.0, 2157.0], [83.0, 2158.0], [82.0, 2159.0], [81.0, 2156.0], [80.0, 2159.0], [87.0, 2161.0], [86.0, 2160.0], [85.0, 2160.0], [84.0, 2160.0], [91.0, 2160.0], [90.0, 2159.0], [89.0, 2158.0], [88.0, 2159.0], [95.0, 2162.0], [94.0, 2163.0], [93.0, 2159.0], [92.0, 2159.0], [99.0, 2158.0], [98.0, 2158.0], [97.0, 2158.0], [96.0, 2160.0], [103.0, 2186.0], [102.0, 2160.0], [101.0, 2160.0], [100.0, 2159.0], [107.0, 2185.0], [106.0, 2187.0], [105.0, 2163.0], [104.0, 2158.0], [111.0, 2184.0], [110.0, 2172.0], [109.0, 2174.0], [108.0, 2160.0], [115.0, 2176.0], [112.0, 2171.0], [119.0, 2185.0], [118.0, 2162.0], [117.0, 2162.0], [116.0, 2169.0], [123.0, 2168.0], [122.0, 2168.0], [121.0, 2169.0], [120.0, 2159.0], [127.0, 2169.0], [126.0, 2164.0], [125.0, 2164.0], [124.0, 2169.0], [135.0, 2179.0], [133.0, 2170.5], [131.0, 2176.0], [130.0, 2167.0], [128.0, 2168.0], [143.0, 2169.0], [142.0, 2179.0], [141.0, 2168.0], [140.0, 2161.0], [139.0, 2177.0], [138.0, 2165.0], [137.0, 2167.0], [136.0, 2170.0], [151.0, 2160.0], [150.0, 2161.0], [149.0, 2167.0], [148.0, 2168.0], [147.0, 2172.0], [146.0, 2165.0], [145.0, 2172.0], [144.0, 2160.0], [158.0, 2172.0], [157.0, 2175.0], [156.0, 2161.5], [154.0, 2161.0], [152.0, 2167.0], [167.0, 2185.0], [166.0, 2153.0], [165.0, 2154.0], [164.0, 2157.0], [163.0, 2160.0], [162.0, 2158.0], [161.0, 2160.0], [160.0, 2166.5], [175.0, 2174.0], [174.0, 2163.0], [173.0, 2175.0], [172.0, 2177.0], [171.0, 2157.0], [170.0, 2162.0], [168.0, 2179.0], [183.0, 2169.0], [182.0, 2159.0], [181.0, 2157.0], [180.0, 2157.0], [179.0, 2176.0], [178.0, 2162.0], [177.0, 2156.0], [176.0, 2160.0], [191.0, 2159.0], [190.0, 2158.0], [189.0, 2160.0], [188.0, 2170.0], [187.0, 2159.0], [186.0, 2177.0], [185.0, 2162.0], [184.0, 2174.0], [199.0, 2158.0], [198.0, 2162.0], [197.0, 2162.0], [196.0, 2168.5], [194.0, 2162.0], [193.0, 2155.0], [192.0, 2171.0], [207.0, 2164.5], [205.0, 2155.0], [204.0, 2152.0], [203.0, 2158.0], [202.0, 2157.0], [201.0, 2160.0], [200.0, 2155.0], [215.0, 2156.0], [214.0, 2160.0], [213.0, 2158.0], [212.0, 2159.0], [211.0, 2160.0], [210.0, 2159.0], [209.0, 2161.5], [223.0, 2158.0], [222.0, 2173.0], [221.0, 2153.0], [220.0, 2160.0], [219.0, 2159.0], [217.0, 2159.0], [216.0, 2167.0], [231.0, 2161.0], [230.0, 2161.0], [229.0, 2158.0], [228.0, 2157.0], [227.0, 2159.0], [226.0, 2158.0], [225.0, 2159.0], [224.0, 2155.0], [239.0, 2167.0], [238.0, 2157.0], [237.0, 2160.0], [236.0, 2159.0], [235.0, 2160.0], [234.0, 2161.0], [233.0, 2159.0], [232.0, 2171.0], [247.0, 2157.0], [246.0, 2163.0], [245.0, 2162.6666666666665], [242.0, 2163.0], [240.0, 2161.0], [255.0, 2153.0], [254.0, 2153.0], [253.0, 2157.0], [252.0, 2159.0], [251.0, 2158.0], [250.0, 2171.0], [249.0, 2156.0], [248.0, 2177.0], [270.0, 2174.0], [271.0, 2158.0], [269.0, 2155.0], [268.0, 2157.0], [267.0, 2158.0], [266.0, 2155.0], [265.0, 2173.0], [264.0, 2157.0], [263.0, 2159.0], [257.0, 2166.5], [259.0, 2160.0], [258.0, 2160.0], [262.0, 2156.0], [261.0, 2156.0], [260.0, 2158.0], [286.0, 2163.5], [287.0, 2171.0], [284.0, 2159.0], [275.0, 2159.0], [274.0, 2158.0], [273.0, 2156.0], [272.0, 2172.0], [282.0, 2160.0], [281.0, 2157.0], [280.0, 2157.0], [279.0, 2155.0], [278.0, 2158.0], [277.0, 2157.0], [276.0, 2155.0], [300.0, 2168.5], [302.0, 2157.0], [303.0, 2167.0], [301.0, 2161.0], [298.0, 2167.0], [296.0, 2174.0], [295.0, 2174.0], [293.0, 2168.0], [290.0, 2155.0], [289.0, 2166.0], [288.0, 2157.0], [318.0, 2153.0], [319.0, 2172.0], [317.0, 2182.0], [316.0, 2156.0], [315.0, 2157.0], [314.0, 2157.0], [313.0, 2160.0], [312.0, 2159.0], [311.0, 2161.0], [305.0, 2157.0], [304.0, 2168.0], [307.0, 2157.0], [306.0, 2154.0], [310.0, 2167.0], [309.0, 2153.0], [308.0, 2166.0], [334.0, 2155.0], [335.0, 2160.0], [333.0, 2166.0], [332.0, 2158.0], [331.0, 2155.0], [330.0, 2154.0], [329.0, 2172.0], [328.0, 2154.0], [327.0, 2158.0], [321.0, 2158.0], [320.0, 2170.0], [323.0, 2160.0], [322.0, 2166.0], [326.0, 2157.5], [324.0, 2155.0], [350.0, 2157.0], [351.0, 2157.0], [349.0, 2156.0], [348.0, 2157.0], [347.0, 2157.0], [346.0, 2155.0], [345.0, 2156.0], [344.0, 2157.0], [343.0, 2158.0], [337.0, 2157.0], [336.0, 2156.0], [339.0, 2157.0], [338.0, 2156.0], [342.0, 2156.0], [341.0, 2157.0], [340.0, 2175.0], [366.0, 2157.0], [367.0, 2159.0], [365.0, 2156.0], [364.0, 2155.0], [363.0, 2171.0], [362.0, 2159.0], [361.0, 2156.0], [360.0, 2158.0], [359.0, 2156.0], [353.0, 2173.0], [352.0, 2155.0], [355.0, 2172.0], [354.0, 2156.0], [358.0, 2155.0], [357.0, 2157.0], [356.0, 2156.0], [382.0, 2163.999999999999], [383.0, 2160.3888888888882], [381.0, 2171.659090909091], [380.0, 2168.333333333334], [379.0, 2156.2], [378.0, 2156.25], [377.0, 2158.9999999999995], [376.0, 2156.8958333333326], [375.0, 2159.6000000000004], [369.0, 2157.0], [368.0, 2158.0], [371.0, 2171.0], [370.0, 2156.0], [374.0, 2159.4], [373.0, 2157.6], [372.0, 2167.5], [387.0, 2211.126984126985], [386.0, 2165.141025641026], [385.0, 2183.076923076923], [384.0, 2161.9846153846142], [796.0, 2163.774193548386], [799.0, 2289.2741935483864], [787.0, 2155.8823529411766], [786.0, 2161.5209580838336], [789.0, 2162.4], [788.0, 2157.3170731707323], [798.0, 2237.9666666666662], [797.0, 2160.4499999999994], [795.0, 2169.1688311688313], [794.0, 2161.0], [793.0, 2165.0], [792.0, 2167.194444444445], [791.0, 2393.8359375000014], [790.0, 2156.1875000000005], [830.0, 63.64705882352941], [831.0, 53.25], [800.0, 2235.9931170108157], [836.0, 30.333333333333332], [843.0, 33.833333333333336], [837.0, 31.25], [856.0, 30.0], [857.0, 29.0], [858.0, 27.0], [859.0, 57.8], [860.0, 28.333333333333332], [861.0, 27.5], [862.0, 28.0], [840.0, 29.0], [841.0, 30.428571428571427], [842.0, 31.5], [844.0, 34.75], [845.0, 28.0], [846.0, 28.5], [847.0, 27.0], [848.0, 41.0], [849.0, 27.5], [850.0, 28.0], [851.0, 29.0], [852.0, 30.666666666666668], [853.0, 40.5], [854.0, 31.0], [855.0, 28.5], [867.0, 37.75], [876.0, 38.0], [865.0, 56.57142857142857], [864.0, 52.476190476190474], [878.0, 43.8], [866.0, 37.8], [871.0, 46.666666666666664], [888.0, 43.14285714285714], [889.0, 44.916666666666664], [890.0, 43.0], [892.0, 46.111111111111114], [893.0, 44.666666666666664], [894.0, 47.0], [895.0, 43.0], [881.0, 50.38461538461539], [882.0, 51.77777777777778], [883.0, 50.222222222222214], [884.0, 49.5], [887.0, 44.75], [873.0, 47.6], [874.0, 43.75], [875.0, 40.5], [901.0, 46.0], [897.0, 46.166666666666664], [896.0, 44.0], [911.0, 50.666666666666664], [908.0, 56.153846153846146], [909.0, 50.9], [906.0, 54.5], [907.0, 54.83333333333333], [898.0, 46.0], [899.0, 47.333333333333336], [900.0, 48.333333333333336], [903.0, 48.5], [920.0, 60.71428571428571], [921.0, 60.0], [923.0, 56.0], [924.0, 57.0], [925.0, 61.5], [926.0, 59.0], [927.0, 59.0], [912.0, 51.5], [913.0, 54.0], [914.0, 57.333333333333336], [915.0, 58.0], [916.0, 58.285714285714285], [917.0, 60.0], [918.0, 61.25], [919.0, 60.42857142857143], [904.0, 50.5], [905.0, 54.5], [934.0, 70.125], [929.0, 64.0], [928.0, 62.0], [942.0, 69.2], [943.0, 70.83333333333334], [940.0, 67.3], [941.0, 65.0], [938.0, 62.5], [939.0, 65.5], [930.0, 66.0], [931.0, 66.5], [933.0, 69.57142857142857], [935.0, 65.875], [952.0, 69.66666666666667], [953.0, 71.5], [954.0, 71.66666666666667], [955.0, 74.0], [956.0, 75.0], [957.0, 72.75], [958.0, 74.5], [959.0, 78.33333333333334], [944.0, 72.25], [945.0, 74.0], [946.0, 75.22222222222223], [947.0, 75.33333333333333], [948.0, 76.0], [949.0, 75.54545454545453], [950.0, 74.0], [951.0, 73.71428571428571], [936.0, 64.125], [937.0, 63.0], [963.0, 82.28571428571429], [960.0, 77.5], [974.0, 81.0], [975.0, 82.71428571428571], [972.0, 80.16666666666667], [973.0, 81.0], [970.0, 81.14285714285714], [971.0, 79.42857142857143], [961.0, 80.0], [962.0, 81.88888888888889], [964.0, 82.2], [965.0, 81.4], [966.0, 79.0], [967.0, 81.88888888888889], [976.0, 85.5], [990.0, 90.875], [991.0, 90.4], [988.0, 91.33333333333333], [989.0, 88.25], [986.0, 89.66666666666666], [987.0, 92.0], [984.0, 92.08333333333333], [985.0, 89.66666666666666], [977.0, 84.44444444444444], [978.0, 85.25], [979.0, 89.0], [980.0, 86.375], [981.0, 87.5], [982.0, 89.0], [968.0, 81.42857142857143], [969.0, 79.0], [995.0, 92.6], [992.0, 90.0], [1006.0, 102.33333333333334], [1007.0, 102.0], [1004.0, 98.5], [1005.0, 101.375], [1002.0, 98.14285714285715], [1003.0, 99.33333333333333], [993.0, 91.28571428571428], [994.0, 91.00000000000001], [996.0, 92.5], [997.0, 94.4], [998.0, 95.33333333333333], [999.0, 96.5], [1008.0, 102.4], [1022.0, 108.0], [1023.0, 108.55555555555554], [1020.0, 107.625], [1021.0, 108.11111111111111], [1018.0, 106.33333333333333], [1019.0, 107.0], [1016.0, 105.5], [1017.0, 107.0], [1009.0, 103.75000000000001], [1010.0, 103.57142857142857], [1011.0, 103.5], [1012.0, 103.0], [1013.0, 103.85714285714286], [1014.0, 105.0], [1015.0, 107.6], [1000.0, 95.75], [1001.0, 97.33333333333334], [1028.0, 111.8], [1047.0, 122.5], [1024.0, 108.14285714285715], [1054.0, 123.44444444444443], [1052.0, 124.25], [1053.0, 124.0], [1050.0, 123.33333333333334], [1051.0, 122.0], [1048.0, 121.44444444444444], [1049.0, 122.5], [1046.0, 119.0], [1044.0, 117.75], [1045.0, 118.0], [1042.0, 119.83333333333333], [1043.0, 117.5], [1040.0, 119.42857142857143], [1041.0, 119.5], [1026.0, 111.66666666666667], [1027.0, 110.71428571428571], [1029.0, 112.55555555555556], [1030.0, 111.66666666666667], [1031.0, 112.75], [1032.0, 114.44444444444444], [1034.0, 114.49999999999999], [1035.0, 114.16666666666667], [1036.0, 115.0], [1038.0, 118.2], [1039.0, 117.875], [1073.0, 134.0], [1074.0, 134.33333333333334], [1075.0, 136.66666666666666], [1076.0, 135.625], [1077.0, 135.75], [1078.0, 137.66666666666663], [1079.0, 138.0], [1080.0, 138.0], [1081.0, 139.0], [1082.0, 138.66666666666666], [1083.0, 136.44444444444446], [1084.0, 136.0], [1085.0, 139.33333333333334], [1086.0, 140.4], [1087.0, 139.85714285714286], [1056.0, 122.0], [1057.0, 124.62499999999999], [1058.0, 124.16666666666667], [1059.0, 124.57142857142857], [1061.0, 124.2], [1062.0, 126.33333333333333], [1063.0, 128.66666666666666], [1064.0, 130.08333333333334], [1065.0, 127.28571428571429], [1066.0, 129.0], [1067.0, 131.33333333333334], [1068.0, 129.85714285714286], [1069.0, 130.71428571428572], [1070.0, 130.0], [1071.0, 132.28571428571428], [1101.0, 147.0], [1091.0, 143.66666666666666], [1088.0, 140.66666666666666], [1117.0, 157.20000000000002], [1119.0, 157.125], [1115.0, 153.0], [1116.0, 155.45454545454547], [1112.0, 153.0], [1113.0, 151.2], [1110.0, 155.5], [1111.0, 152.83333333333334], [1108.0, 151.0], [1109.0, 152.0], [1106.0, 150.70000000000002], [1107.0, 149.83333333333331], [1104.0, 148.57142857142858], [1105.0, 151.0], [1089.0, 144.0], [1090.0, 143.77777777777777], [1092.0, 143.5], [1093.0, 144.2], [1095.0, 143.0], [1096.0, 143.74999999999997], [1098.0, 144.0], [1099.0, 144.625], [1100.0, 144.83333333333334], [1102.0, 147.75], [1103.0, 148.0], [1120.0, 160.9], [1149.0, 174.85714285714286], [1150.0, 176.75], [1147.0, 173.0], [1148.0, 172.0], [1144.0, 171.6], [1145.0, 171.91666666666666], [1142.0, 177.35714285714283], [1143.0, 171.5], [1140.0, 170.0], [1141.0, 168.0], [1138.0, 170.0], [1139.0, 169.0], [1136.0, 167.66666666666666], [1137.0, 169.75], [1122.0, 160.5], [1123.0, 160.25], [1124.0, 162.33333333333331], [1125.0, 160.57142857142858], [1126.0, 161.83333333333331], [1128.0, 163.0], [1129.0, 165.33333333333334], [1130.0, 165.375], [1131.0, 165.7], [1133.0, 165.5], [1134.0, 165.12499999999997], [1177.0, 188.6], [1155.0, 178.66666666666666], [1152.0, 178.0], [1183.0, 195.375], [1180.0, 192.25], [1182.0, 194.0], [1178.0, 189.0], [1179.0, 189.0], [1176.0, 189.375], [1174.0, 189.0], [1175.0, 191.0], [1172.0, 185.5], [1173.0, 188.16666666666666], [1169.0, 185.1], [1171.0, 183.75], [1153.0, 177.16666666666666], [1154.0, 177.33333333333334], [1157.0, 180.3], [1158.0, 179.5], [1160.0, 181.66666666666666], [1161.0, 182.49999999999997], [1162.0, 182.75], [1164.0, 184.66666666666666], [1165.0, 185.46666666666667], [1166.0, 184.14285714285717], [1167.0, 184.2857142857143], [1200.0, 326.2967052860256], [1184.0, 194.83333333333331], [1185.0, 193.83333333333334], [1187.0, 197.66666666666669], [1188.0, 199.33333333333334], [1189.0, 198.75], [1190.0, 197.33333333333334], [1191.0, 199.5], [1192.0, 200.14285714285714], [1193.0, 198.42857142857144], [1194.0, 197.14285714285717], [1195.0, 197.0], [1196.0, 201.0], [1199.0, 206.00000000000003], [1.0, 2177.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[926.810875393407, 1394.7140692388375]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[895.0, 16625.75], [894.0, 16246.5], [893.0, 16637.333333333332], [890.0, 16494.4], [892.0, 16203.5], [891.0, 16052.0], [889.0, 16423.0], [903.0, 16586.0], [926.0, 16389.36363636364], [927.0, 16490.36363636364], [912.0, 16292.0], [913.0, 16530.0], [925.0, 16706.2], [917.0, 16574.0], [919.0, 16775.0], [920.0, 16661.0], [902.0, 16314.0], [901.0, 16129.0], [900.0, 16368.0], [899.0, 16433.0], [898.0, 17113.0], [897.0, 16321.0], [896.0, 16313.0], [911.0, 16613.5], [910.0, 16412.5], [909.0, 17012.0], [908.0, 16015.0], [907.0, 16559.5], [905.0, 16538.0], [915.0, 16636.0], [914.0, 16422.5], [922.0, 16390.5], [924.0, 15866.0], [1010.0, 16282.5], [1014.0, 16527.8064516129], [1012.0, 16520.428571428572], [1011.0, 16388.6], [1009.0, 16298.0], [1008.0, 16449.0], [1007.0, 16417.76923076923], [999.0, 16073.0], [1005.0, 16274.833333333334], [1003.0, 16606.5], [1002.0, 16300.333333333334], [1001.0, 16892.0], [1000.0, 16627.333333333332], [1082.0, 16460.0], [1084.0, 16226.0], [1085.0, 16455.75], [1056.0, 16029.0], [1083.0, 16617.0], [1080.0, 16396.0], [1078.0, 16457.0], [1068.0, 16334.4], [1069.0, 16484.5], [1059.0, 16632.0], [1076.0, 16711.0], [1074.0, 16195.0], [1073.0, 16632.666666666668], [1072.0, 16672.0], [1046.0, 17007.0], [1039.0, 16278.0], [1038.0, 16682.5], [1036.0, 16607.0], [1035.0, 16751.0], [1044.0, 16214.0], [1145.0, 16044.0], [1151.0, 16590.5], [1121.0, 16484.666666666668], [1124.0, 16867.0], [1123.0, 16170.0], [1129.0, 16204.0], [1128.0, 16655.0], [1133.0, 16033.5], [1131.0, 16805.0], [1135.0, 16894.0], [1134.0, 15834.0], [1150.0, 16416.5], [1148.0, 16882.0], [1144.0, 16146.0], [1140.0, 16658.0], [1142.0, 17063.0], [1143.0, 16007.0], [1137.0, 16121.0], [1101.0, 16429.0], [1099.0, 16182.5], [1098.0, 16614.5], [1097.0, 16497.833333333336], [1094.0, 16957.5], [1092.0, 16451.333333333332], [1093.0, 16844.0], [1091.0, 15992.0], [1090.0, 16599.166666666664], [1089.0, 16542.5], [1088.0, 15987.0], [1138.0, 16915.0], [1165.0, 16338.8], [1184.0, 17059.0], [1200.0, 16659.5], [1167.0, 16791.0], [1166.0, 17002.5], [1164.0, 16317.0], [1161.0, 16222.25], [1159.0, 16416.666666666668], [1158.0, 16834.0], [1156.0, 16540.75], [1153.0, 16467.666666666668], [1199.0, 16202.5], [1198.0, 16846.0], [1195.0, 16522.625], [1183.0, 16500.333333333332], [1178.0, 15972.0], [1177.0, 16764.333333333332], [1176.0, 16258.0], [1175.0, 16552.0], [1172.0, 16477.5], [1171.0, 16901.0], [1170.0, 16564.6], [1169.0, 15937.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1032.7224999999996, 16475.697499999995]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[574.0, 61715.0], [573.0, 61402.086956521736], [572.0, 61438.85714285715], [571.0, 61294.666666666664], [570.0, 61758.0], [576.0, 61449.11904761905], [678.0, 61406.1111111111], [677.0, 61491.0], [675.0, 61645.71428571428], [674.0, 61531.071428571435], [786.0, 61402.07692307693], [785.0, 61375.833333333336], [784.0, 61791.0], [387.0, 62650.0], [450.0, 61486.88888888889]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}, {"data": [[637.4200000000002, 61448.84499999996]], "isOverall": false, "label": "JoinRoom&Wait60sec-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61758182E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758182E12, 0.0], [1.61758188E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61758182E12, 0.0], [1.61758188E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758188E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 639.3738925647629, "minX": 1.61758182E12, "maxY": 61448.84499999996, "series": [{"data": [[1.61758182E12, 639.3738925647629], [1.61758188E12, 2212.013954617156]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758182E12, 16475.697499999995]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61758188E12, 61448.84499999996]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758188E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758182E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758182E12, 0.0], [1.61758188E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758182E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61758188E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758188E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61758182E12, "maxY": 4.9E-324, "series": [{"data": [[1.61758182E12, 0.0], [1.61758188E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61758182E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61758188E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait60sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758188E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.61758182E12, "maxY": 62650.0, "series": [{"data": [[1.61758182E12, 17113.0], [1.61758188E12, 62650.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61758182E12, 484.0], [1.61758188E12, 61931.1]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61758182E12, 16849.739999999998], [1.61758188E12, 62039.97]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61758182E12, 15887.499999999996], [1.61758188E12, 61991.7]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61758182E12, 27.0], [1.61758188E12, 60827.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61758182E12, 256.0], [1.61758188E12, 61451.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758188E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 72.0, "minX": 12.0, "maxY": 62650.0, "series": [{"data": [[1094.0, 257.0], [146.0, 420.0], [317.0, 62650.0], [1282.0, 230.0], [1400.0, 282.0], [1444.0, 196.0], [400.0, 16453.5], [937.0, 437.0], [466.0, 61450.0], [1014.0, 72.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[41.0, 2154.0], [53.0, 2160.0], [62.0, 2155.5], [63.0, 2170.0], [71.0, 2156.0], [75.0, 2168.0], [79.0, 2187.0], [78.0, 2155.0], [96.0, 2152.0], [141.0, 2171.0], [152.0, 2158.0], [177.0, 2161.0], [12.0, 2164.5], [13.0, 2205.0], [216.0, 2169.0], [233.0, 2171.0], [235.0, 2165.0], [18.0, 2163.0], [297.0, 2164.0], [316.0, 2161.0], [19.0, 2162.0], [309.0, 2155.0], [317.0, 2164.0], [321.0, 2180.0], [326.0, 2160.0], [335.0, 2165.0], [332.0, 2163.0], [333.0, 2160.0], [21.0, 3634.0], [343.0, 2170.0], [351.0, 2165.0], [355.0, 2164.0], [23.0, 2155.0], [373.0, 2167.0], [387.0, 2194.0], [24.0, 2904.0], [400.0, 2195.0], [26.0, 2159.5], [28.0, 2158.5], [466.0, 2164.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1444.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 12.0, "maxY": 4.9E-324, "series": [{"data": [[1094.0, 0.0], [146.0, 0.0], [317.0, 0.0], [1282.0, 0.0], [1400.0, 0.0], [1444.0, 0.0], [400.0, 0.0], [937.0, 0.0], [466.0, 0.0], [1014.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[41.0, 0.0], [53.0, 0.0], [62.0, 0.0], [63.0, 0.0], [71.0, 0.0], [75.0, 0.0], [79.0, 0.0], [78.0, 0.0], [96.0, 0.0], [141.0, 0.0], [152.0, 0.0], [177.0, 0.0], [12.0, 0.0], [13.0, 0.0], [216.0, 0.0], [233.0, 0.0], [235.0, 0.0], [18.0, 0.0], [297.0, 0.0], [316.0, 0.0], [19.0, 0.0], [309.0, 0.0], [317.0, 0.0], [321.0, 0.0], [326.0, 0.0], [335.0, 0.0], [332.0, 0.0], [333.0, 0.0], [21.0, 0.0], [343.0, 0.0], [351.0, 0.0], [355.0, 0.0], [23.0, 0.0], [373.0, 0.0], [387.0, 0.0], [24.0, 0.0], [400.0, 0.0], [26.0, 0.0], [28.0, 0.0], [466.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1444.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 130.68333333333334, "minX": 1.61758182E12, "maxY": 168.61666666666667, "series": [{"data": [[1.61758182E12, 168.61666666666667], [1.61758188E12, 130.68333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758188E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.61758182E12, "maxY": 137.35, "series": [{"data": [[1.61758182E12, 128.61666666666667], [1.61758188E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61758182E12, 26.666666666666668], [1.61758188E12, 137.35]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61758188E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.61758182E12, "maxY": 137.35, "series": [{"data": [[1.61758188E12, 6.666666666666667]], "isOverall": false, "label": "JoinRoom&Wait60sec-success", "isController": false}, {"data": [[1.61758182E12, 6.666666666666667]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61758182E12, 121.95]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61758182E12, 26.666666666666668], [1.61758188E12, 137.35]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758188E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.61758182E12, "maxY": 137.35, "series": [{"data": [[1.61758182E12, 128.61666666666667], [1.61758188E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61758182E12, 26.666666666666668], [1.61758188E12, 137.35]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61758188E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

