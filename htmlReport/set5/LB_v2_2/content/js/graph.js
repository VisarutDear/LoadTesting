/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 60142.0, "series": [{"data": [[0.0, 60026.0], [0.1, 60026.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60026.0], [1.6, 60026.0], [1.7, 60026.0], [1.8, 60026.0], [1.9, 60026.0], [2.0, 60026.0], [2.1, 60026.0], [2.2, 60026.0], [2.3, 60026.0], [2.4, 60026.0], [2.5, 60026.0], [2.6, 60026.0], [2.7, 60026.0], [2.8, 60026.0], [2.9, 60026.0], [3.0, 60026.0], [3.1, 60026.0], [3.2, 60026.0], [3.3, 60026.0], [3.4, 60026.0], [3.5, 60026.0], [3.6, 60026.0], [3.7, 60026.0], [3.8, 60026.0], [3.9, 60026.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60027.0], [12.4, 60027.0], [12.5, 60027.0], [12.6, 60027.0], [12.7, 60027.0], [12.8, 60027.0], [12.9, 60027.0], [13.0, 60027.0], [13.1, 60027.0], [13.2, 60027.0], [13.3, 60027.0], [13.4, 60027.0], [13.5, 60027.0], [13.6, 60027.0], [13.7, 60027.0], [13.8, 60027.0], [13.9, 60027.0], [14.0, 60027.0], [14.1, 60027.0], [14.2, 60027.0], [14.3, 60027.0], [14.4, 60027.0], [14.5, 60027.0], [14.6, 60027.0], [14.7, 60027.0], [14.8, 60027.0], [14.9, 60027.0], [15.0, 60027.0], [15.1, 60027.0], [15.2, 60027.0], [15.3, 60027.0], [15.4, 60027.0], [15.5, 60027.0], [15.6, 60027.0], [15.7, 60027.0], [15.8, 60027.0], [15.9, 60027.0], [16.0, 60027.0], [16.1, 60027.0], [16.2, 60027.0], [16.3, 60027.0], [16.4, 60027.0], [16.5, 60027.0], [16.6, 60027.0], [16.7, 60027.0], [16.8, 60027.0], [16.9, 60027.0], [17.0, 60027.0], [17.1, 60027.0], [17.2, 60027.0], [17.3, 60027.0], [17.4, 60027.0], [17.5, 60027.0], [17.6, 60027.0], [17.7, 60027.0], [17.8, 60027.0], [17.9, 60027.0], [18.0, 60027.0], [18.1, 60027.0], [18.2, 60027.0], [18.3, 60027.0], [18.4, 60027.0], [18.5, 60027.0], [18.6, 60027.0], [18.7, 60027.0], [18.8, 60027.0], [18.9, 60027.0], [19.0, 60027.0], [19.1, 60027.0], [19.2, 60027.0], [19.3, 60027.0], [19.4, 60027.0], [19.5, 60027.0], [19.6, 60027.0], [19.7, 60027.0], [19.8, 60027.0], [19.9, 60027.0], [20.0, 60027.0], [20.1, 60027.0], [20.2, 60027.0], [20.3, 60027.0], [20.4, 60027.0], [20.5, 60027.0], [20.6, 60027.0], [20.7, 60027.0], [20.8, 60027.0], [20.9, 60027.0], [21.0, 60027.0], [21.1, 60027.0], [21.2, 60027.0], [21.3, 60027.0], [21.4, 60027.0], [21.5, 60027.0], [21.6, 60027.0], [21.7, 60027.0], [21.8, 60027.0], [21.9, 60027.0], [22.0, 60027.0], [22.1, 60027.0], [22.2, 60027.0], [22.3, 60027.0], [22.4, 60027.0], [22.5, 60027.0], [22.6, 60027.0], [22.7, 60027.0], [22.8, 60027.0], [22.9, 60027.0], [23.0, 60027.0], [23.1, 60027.0], [23.2, 60027.0], [23.3, 60027.0], [23.4, 60027.0], [23.5, 60027.0], [23.6, 60027.0], [23.7, 60027.0], [23.8, 60027.0], [23.9, 60027.0], [24.0, 60027.0], [24.1, 60027.0], [24.2, 60027.0], [24.3, 60027.0], [24.4, 60027.0], [24.5, 60027.0], [24.6, 60027.0], [24.7, 60027.0], [24.8, 60027.0], [24.9, 60027.0], [25.0, 60027.0], [25.1, 60027.0], [25.2, 60027.0], [25.3, 60027.0], [25.4, 60027.0], [25.5, 60027.0], [25.6, 60027.0], [25.7, 60027.0], [25.8, 60027.0], [25.9, 60027.0], [26.0, 60027.0], [26.1, 60027.0], [26.2, 60027.0], [26.3, 60027.0], [26.4, 60027.0], [26.5, 60027.0], [26.6, 60027.0], [26.7, 60027.0], [26.8, 60027.0], [26.9, 60027.0], [27.0, 60027.0], [27.1, 60027.0], [27.2, 60027.0], [27.3, 60027.0], [27.4, 60027.0], [27.5, 60027.0], [27.6, 60027.0], [27.7, 60027.0], [27.8, 60027.0], [27.9, 60027.0], [28.0, 60027.0], [28.1, 60027.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60028.0], [30.5, 60028.0], [30.6, 60028.0], [30.7, 60028.0], [30.8, 60028.0], [30.9, 60028.0], [31.0, 60028.0], [31.1, 60028.0], [31.2, 60028.0], [31.3, 60028.0], [31.4, 60028.0], [31.5, 60028.0], [31.6, 60028.0], [31.7, 60028.0], [31.8, 60028.0], [31.9, 60028.0], [32.0, 60028.0], [32.1, 60028.0], [32.2, 60028.0], [32.3, 60028.0], [32.4, 60028.0], [32.5, 60028.0], [32.6, 60028.0], [32.7, 60028.0], [32.8, 60028.0], [32.9, 60028.0], [33.0, 60028.0], [33.1, 60028.0], [33.2, 60028.0], [33.3, 60028.0], [33.4, 60028.0], [33.5, 60028.0], [33.6, 60028.0], [33.7, 60028.0], [33.8, 60028.0], [33.9, 60028.0], [34.0, 60028.0], [34.1, 60028.0], [34.2, 60028.0], [34.3, 60028.0], [34.4, 60028.0], [34.5, 60028.0], [34.6, 60028.0], [34.7, 60028.0], [34.8, 60028.0], [34.9, 60028.0], [35.0, 60028.0], [35.1, 60028.0], [35.2, 60028.0], [35.3, 60028.0], [35.4, 60028.0], [35.5, 60028.0], [35.6, 60028.0], [35.7, 60028.0], [35.8, 60028.0], [35.9, 60028.0], [36.0, 60028.0], [36.1, 60028.0], [36.2, 60028.0], [36.3, 60028.0], [36.4, 60028.0], [36.5, 60028.0], [36.6, 60028.0], [36.7, 60028.0], [36.8, 60028.0], [36.9, 60028.0], [37.0, 60028.0], [37.1, 60028.0], [37.2, 60028.0], [37.3, 60028.0], [37.4, 60028.0], [37.5, 60028.0], [37.6, 60028.0], [37.7, 60028.0], [37.8, 60028.0], [37.9, 60028.0], [38.0, 60028.0], [38.1, 60028.0], [38.2, 60028.0], [38.3, 60028.0], [38.4, 60028.0], [38.5, 60028.0], [38.6, 60028.0], [38.7, 60028.0], [38.8, 60028.0], [38.9, 60028.0], [39.0, 60028.0], [39.1, 60028.0], [39.2, 60028.0], [39.3, 60028.0], [39.4, 60028.0], [39.5, 60028.0], [39.6, 60028.0], [39.7, 60028.0], [39.8, 60028.0], [39.9, 60028.0], [40.0, 60028.0], [40.1, 60028.0], [40.2, 60028.0], [40.3, 60028.0], [40.4, 60028.0], [40.5, 60028.0], [40.6, 60028.0], [40.7, 60028.0], [40.8, 60028.0], [40.9, 60028.0], [41.0, 60028.0], [41.1, 60028.0], [41.2, 60028.0], [41.3, 60028.0], [41.4, 60028.0], [41.5, 60028.0], [41.6, 60028.0], [41.7, 60028.0], [41.8, 60028.0], [41.9, 60028.0], [42.0, 60028.0], [42.1, 60028.0], [42.2, 60028.0], [42.3, 60028.0], [42.4, 60028.0], [42.5, 60028.0], [42.6, 60028.0], [42.7, 60028.0], [42.8, 60028.0], [42.9, 60028.0], [43.0, 60028.0], [43.1, 60028.0], [43.2, 60028.0], [43.3, 60028.0], [43.4, 60028.0], [43.5, 60028.0], [43.6, 60028.0], [43.7, 60028.0], [43.8, 60028.0], [43.9, 60028.0], [44.0, 60028.0], [44.1, 60028.0], [44.2, 60028.0], [44.3, 60028.0], [44.4, 60028.0], [44.5, 60028.0], [44.6, 60028.0], [44.7, 60028.0], [44.8, 60028.0], [44.9, 60028.0], [45.0, 60028.0], [45.1, 60028.0], [45.2, 60028.0], [45.3, 60028.0], [45.4, 60028.0], [45.5, 60028.0], [45.6, 60028.0], [45.7, 60028.0], [45.8, 60028.0], [45.9, 60028.0], [46.0, 60028.0], [46.1, 60028.0], [46.2, 60028.0], [46.3, 60028.0], [46.4, 60028.0], [46.5, 60028.0], [46.6, 60028.0], [46.7, 60028.0], [46.8, 60028.0], [46.9, 60028.0], [47.0, 60028.0], [47.1, 60028.0], [47.2, 60028.0], [47.3, 60028.0], [47.4, 60028.0], [47.5, 60028.0], [47.6, 60028.0], [47.7, 60028.0], [47.8, 60028.0], [47.9, 60028.0], [48.0, 60028.0], [48.1, 60028.0], [48.2, 60028.0], [48.3, 60028.0], [48.4, 60028.0], [48.5, 60028.0], [48.6, 60028.0], [48.7, 60028.0], [48.8, 60028.0], [48.9, 60028.0], [49.0, 60028.0], [49.1, 60028.0], [49.2, 60028.0], [49.3, 60028.0], [49.4, 60028.0], [49.5, 60028.0], [49.6, 60028.0], [49.7, 60028.0], [49.8, 60028.0], [49.9, 60028.0], [50.0, 60028.0], [50.1, 60028.0], [50.2, 60028.0], [50.3, 60028.0], [50.4, 60028.0], [50.5, 60028.0], [50.6, 60028.0], [50.7, 60028.0], [50.8, 60028.0], [50.9, 60028.0], [51.0, 60028.0], [51.1, 60028.0], [51.2, 60028.0], [51.3, 60028.0], [51.4, 60028.0], [51.5, 60028.0], [51.6, 60028.0], [51.7, 60028.0], [51.8, 60028.0], [51.9, 60028.0], [52.0, 60028.0], [52.1, 60028.0], [52.2, 60028.0], [52.3, 60028.0], [52.4, 60028.0], [52.5, 60028.0], [52.6, 60028.0], [52.7, 60028.0], [52.8, 60028.0], [52.9, 60028.0], [53.0, 60028.0], [53.1, 60028.0], [53.2, 60028.0], [53.3, 60028.0], [53.4, 60028.0], [53.5, 60028.0], [53.6, 60028.0], [53.7, 60028.0], [53.8, 60028.0], [53.9, 60028.0], [54.0, 60028.0], [54.1, 60028.0], [54.2, 60028.0], [54.3, 60028.0], [54.4, 60028.0], [54.5, 60028.0], [54.6, 60028.0], [54.7, 60028.0], [54.8, 60028.0], [54.9, 60028.0], [55.0, 60028.0], [55.1, 60028.0], [55.2, 60028.0], [55.3, 60028.0], [55.4, 60028.0], [55.5, 60029.0], [55.6, 60029.0], [55.7, 60029.0], [55.8, 60029.0], [55.9, 60029.0], [56.0, 60029.0], [56.1, 60029.0], [56.2, 60029.0], [56.3, 60029.0], [56.4, 60029.0], [56.5, 60029.0], [56.6, 60029.0], [56.7, 60029.0], [56.8, 60029.0], [56.9, 60029.0], [57.0, 60029.0], [57.1, 60029.0], [57.2, 60029.0], [57.3, 60029.0], [57.4, 60029.0], [57.5, 60029.0], [57.6, 60029.0], [57.7, 60029.0], [57.8, 60029.0], [57.9, 60029.0], [58.0, 60029.0], [58.1, 60029.0], [58.2, 60029.0], [58.3, 60029.0], [58.4, 60029.0], [58.5, 60029.0], [58.6, 60029.0], [58.7, 60029.0], [58.8, 60029.0], [58.9, 60029.0], [59.0, 60029.0], [59.1, 60029.0], [59.2, 60029.0], [59.3, 60029.0], [59.4, 60029.0], [59.5, 60029.0], [59.6, 60029.0], [59.7, 60029.0], [59.8, 60029.0], [59.9, 60029.0], [60.0, 60029.0], [60.1, 60029.0], [60.2, 60029.0], [60.3, 60029.0], [60.4, 60029.0], [60.5, 60029.0], [60.6, 60029.0], [60.7, 60029.0], [60.8, 60029.0], [60.9, 60029.0], [61.0, 60029.0], [61.1, 60029.0], [61.2, 60029.0], [61.3, 60029.0], [61.4, 60029.0], [61.5, 60029.0], [61.6, 60029.0], [61.7, 60029.0], [61.8, 60029.0], [61.9, 60029.0], [62.0, 60029.0], [62.1, 60029.0], [62.2, 60029.0], [62.3, 60029.0], [62.4, 60029.0], [62.5, 60029.0], [62.6, 60029.0], [62.7, 60029.0], [62.8, 60029.0], [62.9, 60029.0], [63.0, 60029.0], [63.1, 60029.0], [63.2, 60029.0], [63.3, 60029.0], [63.4, 60029.0], [63.5, 60029.0], [63.6, 60029.0], [63.7, 60029.0], [63.8, 60029.0], [63.9, 60029.0], [64.0, 60029.0], [64.1, 60029.0], [64.2, 60029.0], [64.3, 60029.0], [64.4, 60029.0], [64.5, 60029.0], [64.6, 60029.0], [64.7, 60029.0], [64.8, 60029.0], [64.9, 60029.0], [65.0, 60029.0], [65.1, 60029.0], [65.2, 60029.0], [65.3, 60029.0], [65.4, 60029.0], [65.5, 60029.0], [65.6, 60029.0], [65.7, 60029.0], [65.8, 60029.0], [65.9, 60029.0], [66.0, 60029.0], [66.1, 60029.0], [66.2, 60029.0], [66.3, 60029.0], [66.4, 60029.0], [66.5, 60030.0], [66.6, 60030.0], [66.7, 60030.0], [66.8, 60030.0], [66.9, 60030.0], [67.0, 60030.0], [67.1, 60030.0], [67.2, 60030.0], [67.3, 60030.0], [67.4, 60030.0], [67.5, 60030.0], [67.6, 60030.0], [67.7, 60030.0], [67.8, 60030.0], [67.9, 60030.0], [68.0, 60030.0], [68.1, 60030.0], [68.2, 60030.0], [68.3, 60030.0], [68.4, 60030.0], [68.5, 60030.0], [68.6, 60030.0], [68.7, 60030.0], [68.8, 60030.0], [68.9, 60030.0], [69.0, 60030.0], [69.1, 60030.0], [69.2, 60030.0], [69.3, 60030.0], [69.4, 60030.0], [69.5, 60030.0], [69.6, 60030.0], [69.7, 60030.0], [69.8, 60030.0], [69.9, 60030.0], [70.0, 60030.0], [70.1, 60030.0], [70.2, 60030.0], [70.3, 60030.0], [70.4, 60030.0], [70.5, 60030.0], [70.6, 60030.0], [70.7, 60030.0], [70.8, 60030.0], [70.9, 60030.0], [71.0, 60030.0], [71.1, 60030.0], [71.2, 60030.0], [71.3, 60030.0], [71.4, 60030.0], [71.5, 60030.0], [71.6, 60030.0], [71.7, 60030.0], [71.8, 60030.0], [71.9, 60030.0], [72.0, 60030.0], [72.1, 60030.0], [72.2, 60030.0], [72.3, 60030.0], [72.4, 60030.0], [72.5, 60030.0], [72.6, 60031.0], [72.7, 60031.0], [72.8, 60031.0], [72.9, 60031.0], [73.0, 60031.0], [73.1, 60031.0], [73.2, 60031.0], [73.3, 60031.0], [73.4, 60031.0], [73.5, 60031.0], [73.6, 60031.0], [73.7, 60031.0], [73.8, 60031.0], [73.9, 60031.0], [74.0, 60031.0], [74.1, 60031.0], [74.2, 60031.0], [74.3, 60031.0], [74.4, 60031.0], [74.5, 60031.0], [74.6, 60031.0], [74.7, 60031.0], [74.8, 60031.0], [74.9, 60031.0], [75.0, 60031.0], [75.1, 60031.0], [75.2, 60031.0], [75.3, 60031.0], [75.4, 60031.0], [75.5, 60031.0], [75.6, 60031.0], [75.7, 60031.0], [75.8, 60031.0], [75.9, 60031.0], [76.0, 60031.0], [76.1, 60032.0], [76.2, 60032.0], [76.3, 60032.0], [76.4, 60032.0], [76.5, 60032.0], [76.6, 60032.0], [76.7, 60032.0], [76.8, 60032.0], [76.9, 60032.0], [77.0, 60032.0], [77.1, 60032.0], [77.2, 60032.0], [77.3, 60032.0], [77.4, 60032.0], [77.5, 60032.0], [77.6, 60032.0], [77.7, 60032.0], [77.8, 60032.0], [77.9, 60032.0], [78.0, 60032.0], [78.1, 60032.0], [78.2, 60032.0], [78.3, 60032.0], [78.4, 60032.0], [78.5, 60032.0], [78.6, 60032.0], [78.7, 60032.0], [78.8, 60032.0], [78.9, 60032.0], [79.0, 60032.0], [79.1, 60032.0], [79.2, 60032.0], [79.3, 60032.0], [79.4, 60032.0], [79.5, 60032.0], [79.6, 60032.0], [79.7, 60032.0], [79.8, 60032.0], [79.9, 60032.0], [80.0, 60032.0], [80.1, 60032.0], [80.2, 60032.0], [80.3, 60033.0], [80.4, 60033.0], [80.5, 60033.0], [80.6, 60033.0], [80.7, 60033.0], [80.8, 60033.0], [80.9, 60033.0], [81.0, 60033.0], [81.1, 60033.0], [81.2, 60033.0], [81.3, 60033.0], [81.4, 60033.0], [81.5, 60033.0], [81.6, 60033.0], [81.7, 60033.0], [81.8, 60033.0], [81.9, 60033.0], [82.0, 60033.0], [82.1, 60034.0], [82.2, 60034.0], [82.3, 60034.0], [82.4, 60034.0], [82.5, 60034.0], [82.6, 60034.0], [82.7, 60034.0], [82.8, 60034.0], [82.9, 60034.0], [83.0, 60034.0], [83.1, 60034.0], [83.2, 60034.0], [83.3, 60034.0], [83.4, 60035.0], [83.5, 60035.0], [83.6, 60035.0], [83.7, 60035.0], [83.8, 60035.0], [83.9, 60035.0], [84.0, 60035.0], [84.1, 60035.0], [84.2, 60036.0], [84.3, 60036.0], [84.4, 60036.0], [84.5, 60036.0], [84.6, 60036.0], [84.7, 60036.0], [84.8, 60036.0], [84.9, 60036.0], [85.0, 60036.0], [85.1, 60037.0], [85.2, 60037.0], [85.3, 60037.0], [85.4, 60037.0], [85.5, 60037.0], [85.6, 60037.0], [85.7, 60037.0], [85.8, 60037.0], [85.9, 60037.0], [86.0, 60037.0], [86.1, 60037.0], [86.2, 60037.0], [86.3, 60038.0], [86.4, 60038.0], [86.5, 60038.0], [86.6, 60038.0], [86.7, 60038.0], [86.8, 60038.0], [86.9, 60038.0], [87.0, 60038.0], [87.1, 60038.0], [87.2, 60038.0], [87.3, 60038.0], [87.4, 60038.0], [87.5, 60038.0], [87.6, 60038.0], [87.7, 60038.0], [87.8, 60039.0], [87.9, 60039.0], [88.0, 60039.0], [88.1, 60039.0], [88.2, 60039.0], [88.3, 60039.0], [88.4, 60039.0], [88.5, 60039.0], [88.6, 60040.0], [88.7, 60040.0], [88.8, 60040.0], [88.9, 60040.0], [89.0, 60041.0], [89.1, 60041.0], [89.2, 60041.0], [89.3, 60041.0], [89.4, 60041.0], [89.5, 60041.0], [89.6, 60041.0], [89.7, 60041.0], [89.8, 60042.0], [89.9, 60042.0], [90.0, 60043.0], [90.1, 60043.0], [90.2, 60043.0], [90.3, 60043.0], [90.4, 60043.0], [90.5, 60044.0], [90.6, 60044.0], [90.7, 60044.0], [90.8, 60044.0], [90.9, 60044.0], [91.0, 60044.0], [91.1, 60045.0], [91.2, 60045.0], [91.3, 60045.0], [91.4, 60045.0], [91.5, 60048.0], [91.6, 60048.0], [91.7, 60053.0], [91.8, 60053.0], [91.9, 60058.0], [92.0, 60058.0], [92.1, 60058.0], [92.2, 60058.0], [92.3, 60061.0], [92.4, 60061.0], [92.5, 60061.0], [92.6, 60061.0], [92.7, 60061.0], [92.8, 60062.0], [92.9, 60062.0], [93.0, 60065.0], [93.1, 60065.0], [93.2, 60066.0], [93.3, 60066.0], [93.4, 60068.0], [93.5, 60068.0], [93.6, 60078.0], [93.7, 60078.0], [93.8, 60079.0], [93.9, 60079.0], [94.0, 60079.0], [94.1, 60079.0], [94.2, 60083.0], [94.3, 60083.0], [94.4, 60083.0], [94.5, 60083.0], [94.6, 60083.0], [94.7, 60083.0], [94.8, 60084.0], [94.9, 60084.0], [95.0, 60084.0], [95.1, 60084.0], [95.2, 60084.0], [95.3, 60085.0], [95.4, 60085.0], [95.5, 60087.0], [95.6, 60087.0], [95.7, 60088.0], [95.8, 60088.0], [95.9, 60088.0], [96.0, 60088.0], [96.1, 60090.0], [96.2, 60090.0], [96.3, 60090.0], [96.4, 60090.0], [96.5, 60092.0], [96.6, 60092.0], [96.7, 60093.0], [96.8, 60093.0], [96.9, 60107.0], [97.0, 60107.0], [97.1, 60110.0], [97.2, 60110.0], [97.3, 60111.0], [97.4, 60111.0], [97.5, 60115.0], [97.6, 60115.0], [97.7, 60115.0], [97.8, 60116.0], [97.9, 60116.0], [98.0, 60117.0], [98.1, 60117.0], [98.2, 60119.0], [98.3, 60119.0], [98.4, 60121.0], [98.5, 60121.0], [98.6, 60121.0], [98.7, 60121.0], [98.8, 60124.0], [98.9, 60124.0], [99.0, 60125.0], [99.1, 60125.0], [99.2, 60127.0], [99.3, 60127.0], [99.4, 60128.0], [99.5, 60128.0], [99.6, 60129.0], [99.7, 60129.0], [99.8, 60142.0], [99.9, 60142.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 26.0], [0.1, 27.0], [0.2, 27.0], [0.3, 28.0], [0.4, 28.0], [0.5, 28.0], [0.6, 29.0], [0.7, 30.0], [0.8, 32.0], [0.9, 35.0], [1.0, 42.0], [1.1, 48.0], [1.2, 66.0], [1.3, 74.0], [1.4, 83.0], [1.5, 91.0], [1.6, 96.0], [1.7, 100.0], [1.8, 107.0], [1.9, 121.0], [2.0, 129.0], [2.1, 130.0], [2.2, 133.0], [2.3, 136.0], [2.4, 139.0], [2.5, 140.0], [2.6, 141.0], [2.7, 143.0], [2.8, 144.0], [2.9, 146.0], [3.0, 147.0], [3.1, 149.0], [3.2, 151.0], [3.3, 155.0], [3.4, 157.0], [3.5, 158.0], [3.6, 160.0], [3.7, 163.0], [3.8, 166.0], [3.9, 168.0], [4.0, 169.0], [4.1, 172.0], [4.2, 175.0], [4.3, 180.0], [4.4, 184.0], [4.5, 187.0], [4.6, 192.0], [4.7, 196.0], [4.8, 198.0], [4.9, 200.0], [5.0, 203.0], [5.1, 207.0], [5.2, 209.0], [5.3, 211.0], [5.4, 212.0], [5.5, 213.0], [5.6, 215.0], [5.7, 217.0], [5.8, 218.0], [5.9, 219.0], [6.0, 220.0], [6.1, 221.0], [6.2, 222.0], [6.3, 223.0], [6.4, 224.0], [6.5, 224.0], [6.6, 225.0], [6.7, 225.0], [6.8, 226.0], [6.9, 226.0], [7.0, 227.0], [7.1, 228.0], [7.2, 228.0], [7.3, 229.0], [7.4, 229.0], [7.5, 230.0], [7.6, 230.0], [7.7, 231.0], [7.8, 231.0], [7.9, 232.0], [8.0, 232.0], [8.1, 233.0], [8.2, 233.0], [8.3, 233.0], [8.4, 234.0], [8.5, 234.0], [8.6, 235.0], [8.7, 235.0], [8.8, 236.0], [8.9, 236.0], [9.0, 236.0], [9.1, 237.0], [9.2, 237.0], [9.3, 238.0], [9.4, 238.0], [9.5, 239.0], [9.6, 239.0], [9.7, 239.0], [9.8, 240.0], [9.9, 240.0], [10.0, 240.0], [10.1, 241.0], [10.2, 241.0], [10.3, 242.0], [10.4, 242.0], [10.5, 242.0], [10.6, 243.0], [10.7, 243.0], [10.8, 243.0], [10.9, 243.0], [11.0, 244.0], [11.1, 244.0], [11.2, 245.0], [11.3, 245.0], [11.4, 245.0], [11.5, 246.0], [11.6, 246.0], [11.7, 246.0], [11.8, 247.0], [11.9, 247.0], [12.0, 247.0], [12.1, 248.0], [12.2, 248.0], [12.3, 248.0], [12.4, 249.0], [12.5, 249.0], [12.6, 250.0], [12.7, 250.0], [12.8, 251.0], [12.9, 251.0], [13.0, 251.0], [13.1, 252.0], [13.2, 252.0], [13.3, 253.0], [13.4, 253.0], [13.5, 253.0], [13.6, 254.0], [13.7, 254.0], [13.8, 254.0], [13.9, 255.0], [14.0, 255.0], [14.1, 256.0], [14.2, 256.0], [14.3, 256.0], [14.4, 257.0], [14.5, 257.0], [14.6, 257.0], [14.7, 258.0], [14.8, 258.0], [14.9, 258.0], [15.0, 258.0], [15.1, 259.0], [15.2, 259.0], [15.3, 259.0], [15.4, 259.0], [15.5, 260.0], [15.6, 260.0], [15.7, 260.0], [15.8, 261.0], [15.9, 261.0], [16.0, 261.0], [16.1, 262.0], [16.2, 262.0], [16.3, 263.0], [16.4, 263.0], [16.5, 263.0], [16.6, 264.0], [16.7, 264.0], [16.8, 264.0], [16.9, 265.0], [17.0, 265.0], [17.1, 265.0], [17.2, 266.0], [17.3, 266.0], [17.4, 267.0], [17.5, 267.0], [17.6, 268.0], [17.7, 268.0], [17.8, 268.0], [17.9, 269.0], [18.0, 269.0], [18.1, 270.0], [18.2, 270.0], [18.3, 270.0], [18.4, 271.0], [18.5, 271.0], [18.6, 271.0], [18.7, 272.0], [18.8, 272.0], [18.9, 272.0], [19.0, 272.0], [19.1, 273.0], [19.2, 273.0], [19.3, 273.0], [19.4, 274.0], [19.5, 274.0], [19.6, 274.0], [19.7, 275.0], [19.8, 275.0], [19.9, 275.0], [20.0, 276.0], [20.1, 276.0], [20.2, 276.0], [20.3, 276.0], [20.4, 276.0], [20.5, 277.0], [20.6, 277.0], [20.7, 277.0], [20.8, 277.0], [20.9, 277.0], [21.0, 278.0], [21.1, 278.0], [21.2, 278.0], [21.3, 278.0], [21.4, 278.0], [21.5, 279.0], [21.6, 279.0], [21.7, 279.0], [21.8, 279.0], [21.9, 280.0], [22.0, 280.0], [22.1, 280.0], [22.2, 280.0], [22.3, 280.0], [22.4, 280.0], [22.5, 281.0], [22.6, 281.0], [22.7, 281.0], [22.8, 281.0], [22.9, 281.0], [23.0, 281.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 282.0], [23.5, 282.0], [23.6, 282.0], [23.7, 283.0], [23.8, 283.0], [23.9, 283.0], [24.0, 283.0], [24.1, 283.0], [24.2, 283.0], [24.3, 284.0], [24.4, 284.0], [24.5, 284.0], [24.6, 284.0], [24.7, 284.0], [24.8, 285.0], [24.9, 285.0], [25.0, 285.0], [25.1, 285.0], [25.2, 285.0], [25.3, 286.0], [25.4, 286.0], [25.5, 286.0], [25.6, 286.0], [25.7, 286.0], [25.8, 287.0], [25.9, 287.0], [26.0, 287.0], [26.1, 287.0], [26.2, 287.0], [26.3, 288.0], [26.4, 288.0], [26.5, 288.0], [26.6, 288.0], [26.7, 288.0], [26.8, 289.0], [26.9, 289.0], [27.0, 289.0], [27.1, 289.0], [27.2, 289.0], [27.3, 290.0], [27.4, 290.0], [27.5, 290.0], [27.6, 290.0], [27.7, 290.0], [27.8, 291.0], [27.9, 291.0], [28.0, 291.0], [28.1, 291.0], [28.2, 291.0], [28.3, 291.0], [28.4, 292.0], [28.5, 292.0], [28.6, 292.0], [28.7, 292.0], [28.8, 292.0], [28.9, 292.0], [29.0, 292.0], [29.1, 293.0], [29.2, 293.0], [29.3, 293.0], [29.4, 293.0], [29.5, 293.0], [29.6, 293.0], [29.7, 294.0], [29.8, 294.0], [29.9, 294.0], [30.0, 294.0], [30.1, 294.0], [30.2, 295.0], [30.3, 295.0], [30.4, 295.0], [30.5, 295.0], [30.6, 295.0], [30.7, 295.0], [30.8, 295.0], [30.9, 296.0], [31.0, 296.0], [31.1, 296.0], [31.2, 296.0], [31.3, 296.0], [31.4, 296.0], [31.5, 296.0], [31.6, 297.0], [31.7, 297.0], [31.8, 297.0], [31.9, 297.0], [32.0, 297.0], [32.1, 297.0], [32.2, 297.0], [32.3, 298.0], [32.4, 298.0], [32.5, 298.0], [32.6, 298.0], [32.7, 298.0], [32.8, 298.0], [32.9, 298.0], [33.0, 298.0], [33.1, 299.0], [33.2, 299.0], [33.3, 299.0], [33.4, 299.0], [33.5, 299.0], [33.6, 299.0], [33.7, 300.0], [33.8, 300.0], [33.9, 300.0], [34.0, 300.0], [34.1, 300.0], [34.2, 300.0], [34.3, 301.0], [34.4, 301.0], [34.5, 301.0], [34.6, 301.0], [34.7, 301.0], [34.8, 301.0], [34.9, 302.0], [35.0, 302.0], [35.1, 302.0], [35.2, 302.0], [35.3, 302.0], [35.4, 303.0], [35.5, 303.0], [35.6, 303.0], [35.7, 303.0], [35.8, 303.0], [35.9, 304.0], [36.0, 304.0], [36.1, 304.0], [36.2, 304.0], [36.3, 305.0], [36.4, 305.0], [36.5, 305.0], [36.6, 305.0], [36.7, 305.0], [36.8, 306.0], [36.9, 306.0], [37.0, 306.0], [37.1, 307.0], [37.2, 307.0], [37.3, 307.0], [37.4, 307.0], [37.5, 308.0], [37.6, 308.0], [37.7, 308.0], [37.8, 308.0], [37.9, 309.0], [38.0, 309.0], [38.1, 309.0], [38.2, 309.0], [38.3, 310.0], [38.4, 310.0], [38.5, 310.0], [38.6, 310.0], [38.7, 311.0], [38.8, 311.0], [38.9, 311.0], [39.0, 311.0], [39.1, 311.0], [39.2, 312.0], [39.3, 312.0], [39.4, 312.0], [39.5, 312.0], [39.6, 312.0], [39.7, 313.0], [39.8, 313.0], [39.9, 313.0], [40.0, 313.0], [40.1, 314.0], [40.2, 314.0], [40.3, 314.0], [40.4, 314.0], [40.5, 315.0], [40.6, 315.0], [40.7, 315.0], [40.8, 315.0], [40.9, 315.0], [41.0, 316.0], [41.1, 316.0], [41.2, 316.0], [41.3, 316.0], [41.4, 316.0], [41.5, 317.0], [41.6, 317.0], [41.7, 317.0], [41.8, 317.0], [41.9, 318.0], [42.0, 318.0], [42.1, 318.0], [42.2, 318.0], [42.3, 318.0], [42.4, 319.0], [42.5, 319.0], [42.6, 319.0], [42.7, 319.0], [42.8, 320.0], [42.9, 320.0], [43.0, 320.0], [43.1, 320.0], [43.2, 321.0], [43.3, 321.0], [43.4, 321.0], [43.5, 321.0], [43.6, 322.0], [43.7, 322.0], [43.8, 322.0], [43.9, 323.0], [44.0, 323.0], [44.1, 323.0], [44.2, 323.0], [44.3, 324.0], [44.4, 324.0], [44.5, 324.0], [44.6, 324.0], [44.7, 325.0], [44.8, 325.0], [44.9, 325.0], [45.0, 326.0], [45.1, 326.0], [45.2, 326.0], [45.3, 327.0], [45.4, 327.0], [45.5, 327.0], [45.6, 327.0], [45.7, 328.0], [45.8, 328.0], [45.9, 328.0], [46.0, 329.0], [46.1, 329.0], [46.2, 329.0], [46.3, 329.0], [46.4, 330.0], [46.5, 330.0], [46.6, 330.0], [46.7, 331.0], [46.8, 331.0], [46.9, 331.0], [47.0, 332.0], [47.1, 332.0], [47.2, 332.0], [47.3, 333.0], [47.4, 333.0], [47.5, 333.0], [47.6, 333.0], [47.7, 334.0], [47.8, 334.0], [47.9, 334.0], [48.0, 334.0], [48.1, 335.0], [48.2, 335.0], [48.3, 335.0], [48.4, 335.0], [48.5, 336.0], [48.6, 336.0], [48.7, 336.0], [48.8, 336.0], [48.9, 337.0], [49.0, 337.0], [49.1, 337.0], [49.2, 337.0], [49.3, 338.0], [49.4, 338.0], [49.5, 338.0], [49.6, 338.0], [49.7, 339.0], [49.8, 339.0], [49.9, 339.0], [50.0, 339.0], [50.1, 339.0], [50.2, 340.0], [50.3, 340.0], [50.4, 340.0], [50.5, 340.0], [50.6, 341.0], [50.7, 341.0], [50.8, 341.0], [50.9, 341.0], [51.0, 342.0], [51.1, 342.0], [51.2, 342.0], [51.3, 342.0], [51.4, 342.0], [51.5, 343.0], [51.6, 343.0], [51.7, 343.0], [51.8, 343.0], [51.9, 344.0], [52.0, 344.0], [52.1, 344.0], [52.2, 344.0], [52.3, 344.0], [52.4, 345.0], [52.5, 345.0], [52.6, 345.0], [52.7, 345.0], [52.8, 345.0], [52.9, 346.0], [53.0, 346.0], [53.1, 346.0], [53.2, 346.0], [53.3, 346.0], [53.4, 347.0], [53.5, 347.0], [53.6, 347.0], [53.7, 347.0], [53.8, 347.0], [53.9, 348.0], [54.0, 348.0], [54.1, 348.0], [54.2, 349.0], [54.3, 349.0], [54.4, 349.0], [54.5, 349.0], [54.6, 350.0], [54.7, 350.0], [54.8, 350.0], [54.9, 350.0], [55.0, 351.0], [55.1, 351.0], [55.2, 351.0], [55.3, 351.0], [55.4, 351.0], [55.5, 352.0], [55.6, 352.0], [55.7, 352.0], [55.8, 352.0], [55.9, 352.0], [56.0, 353.0], [56.1, 353.0], [56.2, 353.0], [56.3, 353.0], [56.4, 354.0], [56.5, 354.0], [56.6, 354.0], [56.7, 354.0], [56.8, 355.0], [56.9, 355.0], [57.0, 355.0], [57.1, 355.0], [57.2, 356.0], [57.3, 356.0], [57.4, 357.0], [57.5, 357.0], [57.6, 357.0], [57.7, 358.0], [57.8, 358.0], [57.9, 358.0], [58.0, 359.0], [58.1, 359.0], [58.2, 360.0], [58.3, 360.0], [58.4, 360.0], [58.5, 361.0], [58.6, 361.0], [58.7, 361.0], [58.8, 362.0], [58.9, 362.0], [59.0, 362.0], [59.1, 363.0], [59.2, 363.0], [59.3, 364.0], [59.4, 364.0], [59.5, 364.0], [59.6, 365.0], [59.7, 365.0], [59.8, 365.0], [59.9, 366.0], [60.0, 366.0], [60.1, 367.0], [60.2, 367.0], [60.3, 367.0], [60.4, 368.0], [60.5, 368.0], [60.6, 368.0], [60.7, 369.0], [60.8, 369.0], [60.9, 369.0], [61.0, 370.0], [61.1, 370.0], [61.2, 371.0], [61.3, 371.0], [61.4, 372.0], [61.5, 372.0], [61.6, 372.0], [61.7, 373.0], [61.8, 373.0], [61.9, 374.0], [62.0, 375.0], [62.1, 375.0], [62.2, 376.0], [62.3, 376.0], [62.4, 377.0], [62.5, 378.0], [62.6, 378.0], [62.7, 379.0], [62.8, 379.0], [62.9, 380.0], [63.0, 380.0], [63.1, 381.0], [63.2, 381.0], [63.3, 382.0], [63.4, 382.0], [63.5, 383.0], [63.6, 383.0], [63.7, 384.0], [63.8, 385.0], [63.9, 385.0], [64.0, 386.0], [64.1, 386.0], [64.2, 387.0], [64.3, 387.0], [64.4, 387.0], [64.5, 388.0], [64.6, 388.0], [64.7, 389.0], [64.8, 389.0], [64.9, 390.0], [65.0, 390.0], [65.1, 390.0], [65.2, 391.0], [65.3, 391.0], [65.4, 391.0], [65.5, 392.0], [65.6, 392.0], [65.7, 392.0], [65.8, 393.0], [65.9, 393.0], [66.0, 393.0], [66.1, 394.0], [66.2, 394.0], [66.3, 394.0], [66.4, 394.0], [66.5, 395.0], [66.6, 395.0], [66.7, 396.0], [66.8, 396.0], [66.9, 396.0], [67.0, 396.0], [67.1, 397.0], [67.2, 397.0], [67.3, 397.0], [67.4, 398.0], [67.5, 398.0], [67.6, 398.0], [67.7, 399.0], [67.8, 399.0], [67.9, 399.0], [68.0, 400.0], [68.1, 400.0], [68.2, 400.0], [68.3, 401.0], [68.4, 401.0], [68.5, 401.0], [68.6, 402.0], [68.7, 402.0], [68.8, 402.0], [68.9, 403.0], [69.0, 403.0], [69.1, 404.0], [69.2, 404.0], [69.3, 404.0], [69.4, 405.0], [69.5, 405.0], [69.6, 406.0], [69.7, 406.0], [69.8, 407.0], [69.9, 407.0], [70.0, 408.0], [70.1, 408.0], [70.2, 409.0], [70.3, 409.0], [70.4, 410.0], [70.5, 410.0], [70.6, 411.0], [70.7, 411.0], [70.8, 411.0], [70.9, 412.0], [71.0, 413.0], [71.1, 413.0], [71.2, 413.0], [71.3, 414.0], [71.4, 414.0], [71.5, 415.0], [71.6, 415.0], [71.7, 415.0], [71.8, 416.0], [71.9, 416.0], [72.0, 417.0], [72.1, 417.0], [72.2, 418.0], [72.3, 418.0], [72.4, 419.0], [72.5, 419.0], [72.6, 419.0], [72.7, 420.0], [72.8, 420.0], [72.9, 421.0], [73.0, 421.0], [73.1, 422.0], [73.2, 422.0], [73.3, 423.0], [73.4, 423.0], [73.5, 423.0], [73.6, 424.0], [73.7, 424.0], [73.8, 425.0], [73.9, 425.0], [74.0, 426.0], [74.1, 426.0], [74.2, 427.0], [74.3, 427.0], [74.4, 428.0], [74.5, 428.0], [74.6, 429.0], [74.7, 429.0], [74.8, 430.0], [74.9, 431.0], [75.0, 431.0], [75.1, 432.0], [75.2, 433.0], [75.3, 434.0], [75.4, 434.0], [75.5, 435.0], [75.6, 435.0], [75.7, 436.0], [75.8, 437.0], [75.9, 437.0], [76.0, 438.0], [76.1, 438.0], [76.2, 439.0], [76.3, 439.0], [76.4, 440.0], [76.5, 440.0], [76.6, 441.0], [76.7, 442.0], [76.8, 442.0], [76.9, 443.0], [77.0, 443.0], [77.1, 444.0], [77.2, 444.0], [77.3, 445.0], [77.4, 445.0], [77.5, 446.0], [77.6, 446.0], [77.7, 447.0], [77.8, 448.0], [77.9, 449.0], [78.0, 449.0], [78.1, 450.0], [78.2, 451.0], [78.3, 452.0], [78.4, 452.0], [78.5, 453.0], [78.6, 454.0], [78.7, 455.0], [78.8, 456.0], [78.9, 457.0], [79.0, 458.0], [79.1, 460.0], [79.2, 461.0], [79.3, 462.0], [79.4, 463.0], [79.5, 464.0], [79.6, 465.0], [79.7, 467.0], [79.8, 468.0], [79.9, 470.0], [80.0, 471.0], [80.1, 472.0], [80.2, 474.0], [80.3, 475.0], [80.4, 477.0], [80.5, 478.0], [80.6, 479.0], [80.7, 480.0], [80.8, 482.0], [80.9, 483.0], [81.0, 485.0], [81.1, 487.0], [81.2, 488.0], [81.3, 489.0], [81.4, 491.0], [81.5, 492.0], [81.6, 494.0], [81.7, 496.0], [81.8, 497.0], [81.9, 498.0], [82.0, 500.0], [82.1, 501.0], [82.2, 502.0], [82.3, 504.0], [82.4, 505.0], [82.5, 508.0], [82.6, 510.0], [82.7, 512.0], [82.8, 516.0], [82.9, 518.0], [83.0, 519.0], [83.1, 522.0], [83.2, 525.0], [83.3, 528.0], [83.4, 534.0], [83.5, 537.0], [83.6, 545.0], [83.7, 550.0], [83.8, 553.0], [83.9, 554.0], [84.0, 557.0], [84.1, 558.0], [84.2, 559.0], [84.3, 561.0], [84.4, 562.0], [84.5, 563.0], [84.6, 565.0], [84.7, 566.0], [84.8, 567.0], [84.9, 568.0], [85.0, 570.0], [85.1, 572.0], [85.2, 576.0], [85.3, 579.0], [85.4, 592.0], [85.5, 602.0], [85.6, 615.0], [85.7, 1030.0], [85.8, 1032.0], [85.9, 1034.0], [86.0, 1037.0], [86.1, 1039.0], [86.2, 1041.0], [86.3, 1043.0], [86.4, 1047.0], [86.5, 1063.0], [86.6, 1107.0], [86.7, 1123.0], [86.8, 1132.0], [86.9, 1142.0], [87.0, 1153.0], [87.1, 1163.0], [87.2, 1172.0], [87.3, 1188.0], [87.4, 1201.0], [87.5, 1213.0], [87.6, 1221.0], [87.7, 1229.0], [87.8, 1234.0], [87.9, 1239.0], [88.0, 1243.0], [88.1, 1245.0], [88.2, 1249.0], [88.3, 1252.0], [88.4, 1256.0], [88.5, 1259.0], [88.6, 1262.0], [88.7, 1264.0], [88.8, 1266.0], [88.9, 1269.0], [89.0, 1270.0], [89.1, 1273.0], [89.2, 1274.0], [89.3, 1276.0], [89.4, 1279.0], [89.5, 1281.0], [89.6, 1283.0], [89.7, 1285.0], [89.8, 1287.0], [89.9, 1289.0], [90.0, 1291.0], [90.1, 1292.0], [90.2, 1294.0], [90.3, 1295.0], [90.4, 1297.0], [90.5, 1298.0], [90.6, 1299.0], [90.7, 1300.0], [90.8, 1301.0], [90.9, 1302.0], [91.0, 1303.0], [91.1, 1305.0], [91.2, 1306.0], [91.3, 1307.0], [91.4, 1309.0], [91.5, 1310.0], [91.6, 1312.0], [91.7, 1314.0], [91.8, 1315.0], [91.9, 1317.0], [92.0, 1319.0], [92.1, 1321.0], [92.2, 1323.0], [92.3, 1326.0], [92.4, 1328.0], [92.5, 1330.0], [92.6, 1334.0], [92.7, 1337.0], [92.8, 1340.0], [92.9, 1344.0], [93.0, 1347.0], [93.1, 1350.0], [93.2, 1353.0], [93.3, 1358.0], [93.4, 1362.0], [93.5, 1366.0], [93.6, 1371.0], [93.7, 1374.0], [93.8, 1379.0], [93.9, 1389.0], [94.0, 1397.0], [94.1, 1407.0], [94.2, 1418.0], [94.3, 1427.0], [94.4, 1435.0], [94.5, 1471.0], [94.6, 1494.0], [94.7, 1545.0], [94.8, 3037.0], [94.9, 3047.0], [95.0, 3055.0], [95.1, 3217.0], [95.2, 3250.0], [95.3, 3261.0], [95.4, 3271.0], [95.5, 3278.0], [95.6, 3291.0], [95.7, 3299.0], [95.8, 3311.0], [95.9, 3326.0], [96.0, 3353.0], [96.1, 3418.0], [96.2, 7055.0], [96.3, 7319.0], [96.4, 15060.0], [96.5, 21021.0], [96.6, 21027.0], [96.7, 21030.0], [96.8, 21031.0], [96.9, 21033.0], [97.0, 21033.0], [97.1, 21034.0], [97.2, 21035.0], [97.3, 21037.0], [97.4, 21038.0], [97.5, 21039.0], [97.6, 21040.0], [97.7, 21041.0], [97.8, 21042.0], [97.9, 21042.0], [98.0, 21043.0], [98.1, 21044.0], [98.2, 21045.0], [98.3, 21046.0], [98.4, 21047.0], [98.5, 21047.0], [98.6, 21048.0], [98.7, 21048.0], [98.8, 21049.0], [98.9, 21050.0], [99.0, 21051.0], [99.1, 21052.0], [99.2, 21053.0], [99.3, 21053.0], [99.4, 21055.0], [99.5, 21056.0], [99.6, 21058.0], [99.7, 21059.0], [99.8, 21061.0], [99.9, 21065.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12026.0], [0.1, 12026.0], [0.2, 12026.0], [0.3, 12026.0], [0.4, 12026.0], [0.5, 12026.0], [0.6, 12026.0], [0.7, 12026.0], [0.8, 12026.0], [0.9, 12026.0], [1.0, 12026.0], [1.1, 12026.0], [1.2, 12026.0], [1.3, 12026.0], [1.4, 12026.0], [1.5, 12026.0], [1.6, 12026.0], [1.7, 12027.0], [1.8, 12027.0], [1.9, 12027.0], [2.0, 12027.0], [2.1, 12027.0], [2.2, 12027.0], [2.3, 12027.0], [2.4, 12027.0], [2.5, 12027.0], [2.6, 12027.0], [2.7, 12027.0], [2.8, 12027.0], [2.9, 12027.0], [3.0, 12027.0], [3.1, 12027.0], [3.2, 12027.0], [3.3, 12027.0], [3.4, 12027.0], [3.5, 12027.0], [3.6, 12027.0], [3.7, 12027.0], [3.8, 12027.0], [3.9, 12027.0], [4.0, 12027.0], [4.1, 12027.0], [4.2, 12027.0], [4.3, 12027.0], [4.4, 12027.0], [4.5, 12027.0], [4.6, 12027.0], [4.7, 12027.0], [4.8, 12027.0], [4.9, 12027.0], [5.0, 12027.0], [5.1, 12027.0], [5.2, 12027.0], [5.3, 12027.0], [5.4, 12027.0], [5.5, 12027.0], [5.6, 12027.0], [5.7, 12027.0], [5.8, 12027.0], [5.9, 12027.0], [6.0, 12027.0], [6.1, 12027.0], [6.2, 12027.0], [6.3, 12027.0], [6.4, 12027.0], [6.5, 12028.0], [6.6, 12028.0], [6.7, 12028.0], [6.8, 12028.0], [6.9, 12028.0], [7.0, 12028.0], [7.1, 12028.0], [7.2, 12028.0], [7.3, 12028.0], [7.4, 12028.0], [7.5, 12028.0], [7.6, 12028.0], [7.7, 12028.0], [7.8, 12028.0], [7.9, 12028.0], [8.0, 12028.0], [8.1, 12028.0], [8.2, 12028.0], [8.3, 12028.0], [8.4, 12028.0], [8.5, 12028.0], [8.6, 12028.0], [8.7, 12028.0], [8.8, 12028.0], [8.9, 12028.0], [9.0, 12028.0], [9.1, 12028.0], [9.2, 12028.0], [9.3, 12028.0], [9.4, 12028.0], [9.5, 12028.0], [9.6, 12028.0], [9.7, 12028.0], [9.8, 12028.0], [9.9, 12028.0], [10.0, 12028.0], [10.1, 12028.0], [10.2, 12028.0], [10.3, 12028.0], [10.4, 12028.0], [10.5, 12028.0], [10.6, 12028.0], [10.7, 12028.0], [10.8, 12028.0], [10.9, 12028.0], [11.0, 12028.0], [11.1, 12029.0], [11.2, 12029.0], [11.3, 12029.0], [11.4, 12029.0], [11.5, 12029.0], [11.6, 12029.0], [11.7, 12029.0], [11.8, 12029.0], [11.9, 12029.0], [12.0, 12029.0], [12.1, 12029.0], [12.2, 12029.0], [12.3, 12029.0], [12.4, 12029.0], [12.5, 12029.0], [12.6, 12029.0], [12.7, 12029.0], [12.8, 12029.0], [12.9, 12029.0], [13.0, 12030.0], [13.1, 12030.0], [13.2, 12030.0], [13.3, 12030.0], [13.4, 12030.0], [13.5, 12030.0], [13.6, 12030.0], [13.7, 12030.0], [13.8, 12030.0], [13.9, 12030.0], [14.0, 12030.0], [14.1, 12030.0], [14.2, 12030.0], [14.3, 12030.0], [14.4, 12030.0], [14.5, 12030.0], [14.6, 12030.0], [14.7, 12030.0], [14.8, 12030.0], [14.9, 12030.0], [15.0, 12030.0], [15.1, 12030.0], [15.2, 12030.0], [15.3, 12030.0], [15.4, 12030.0], [15.5, 12031.0], [15.6, 12031.0], [15.7, 12031.0], [15.8, 12031.0], [15.9, 12031.0], [16.0, 12031.0], [16.1, 12031.0], [16.2, 12031.0], [16.3, 12031.0], [16.4, 12031.0], [16.5, 12031.0], [16.6, 12031.0], [16.7, 12031.0], [16.8, 12031.0], [16.9, 12032.0], [17.0, 12032.0], [17.1, 12032.0], [17.2, 12032.0], [17.3, 12032.0], [17.4, 12032.0], [17.5, 12033.0], [17.6, 12033.0], [17.7, 12033.0], [17.8, 12033.0], [17.9, 12033.0], [18.0, 12033.0], [18.1, 12033.0], [18.2, 12033.0], [18.3, 12033.0], [18.4, 12033.0], [18.5, 12033.0], [18.6, 12033.0], [18.7, 12033.0], [18.8, 12034.0], [18.9, 12034.0], [19.0, 12034.0], [19.1, 12034.0], [19.2, 12034.0], [19.3, 12034.0], [19.4, 12034.0], [19.5, 12034.0], [19.6, 12034.0], [19.7, 12034.0], [19.8, 12035.0], [19.9, 12035.0], [20.0, 12036.0], [20.1, 12036.0], [20.2, 12036.0], [20.3, 12037.0], [20.4, 12037.0], [20.5, 12037.0], [20.6, 12037.0], [20.7, 12038.0], [20.8, 12038.0], [20.9, 12039.0], [21.0, 12039.0], [21.1, 12039.0], [21.2, 12039.0], [21.3, 12039.0], [21.4, 12039.0], [21.5, 12040.0], [21.6, 12040.0], [21.7, 12040.0], [21.8, 12040.0], [21.9, 12041.0], [22.0, 12041.0], [22.1, 12042.0], [22.2, 12042.0], [22.3, 12042.0], [22.4, 12042.0], [22.5, 12043.0], [22.6, 12043.0], [22.7, 12043.0], [22.8, 12047.0], [22.9, 12047.0], [23.0, 12048.0], [23.1, 12048.0], [23.2, 12049.0], [23.3, 12049.0], [23.4, 12049.0], [23.5, 12049.0], [23.6, 12050.0], [23.7, 12050.0], [23.8, 12052.0], [23.9, 12052.0], [24.0, 12052.0], [24.1, 12052.0], [24.2, 12052.0], [24.3, 12052.0], [24.4, 12054.0], [24.5, 12054.0], [24.6, 12056.0], [24.7, 12056.0], [24.8, 12057.0], [24.9, 12057.0], [25.0, 12058.0], [25.1, 12058.0], [25.2, 12058.0], [25.3, 12058.0], [25.4, 12058.0], [25.5, 12058.0], [25.6, 12058.0], [25.7, 12058.0], [25.8, 12058.0], [25.9, 12059.0], [26.0, 12059.0], [26.1, 12059.0], [26.2, 12059.0], [26.3, 12059.0], [26.4, 12059.0], [26.5, 12060.0], [26.6, 12060.0], [26.7, 12060.0], [26.8, 12060.0], [26.9, 12060.0], [27.0, 12060.0], [27.1, 12060.0], [27.2, 12060.0], [27.3, 12061.0], [27.4, 12061.0], [27.5, 12061.0], [27.6, 12061.0], [27.7, 12061.0], [27.8, 12061.0], [27.9, 12061.0], [28.0, 12063.0], [28.1, 12063.0], [28.2, 12063.0], [28.3, 12063.0], [28.4, 12063.0], [28.5, 12063.0], [28.6, 12064.0], [28.7, 12064.0], [28.8, 12064.0], [28.9, 12064.0], [29.0, 12064.0], [29.1, 12064.0], [29.2, 12064.0], [29.3, 12064.0], [29.4, 12064.0], [29.5, 12064.0], [29.6, 12065.0], [29.7, 12065.0], [29.8, 12065.0], [29.9, 12065.0], [30.0, 12065.0], [30.1, 12065.0], [30.2, 12065.0], [30.3, 12066.0], [30.4, 12066.0], [30.5, 12066.0], [30.6, 12066.0], [30.7, 12066.0], [30.8, 12066.0], [30.9, 12067.0], [31.0, 12067.0], [31.1, 12067.0], [31.2, 12067.0], [31.3, 12068.0], [31.4, 12068.0], [31.5, 12068.0], [31.6, 12068.0], [31.7, 12069.0], [31.8, 12069.0], [31.9, 12070.0], [32.0, 12070.0], [32.1, 12070.0], [32.2, 12070.0], [32.3, 12070.0], [32.4, 12070.0], [32.5, 12070.0], [32.6, 12070.0], [32.7, 12070.0], [32.8, 12071.0], [32.9, 12071.0], [33.0, 12072.0], [33.1, 12072.0], [33.2, 12072.0], [33.3, 12072.0], [33.4, 12074.0], [33.5, 12074.0], [33.6, 12076.0], [33.7, 12076.0], [33.8, 12076.0], [33.9, 12076.0], [34.0, 12076.0], [34.1, 12076.0], [34.2, 12077.0], [34.3, 12077.0], [34.4, 12079.0], [34.5, 12079.0], [34.6, 12080.0], [34.7, 12080.0], [34.8, 12081.0], [34.9, 12081.0], [35.0, 12081.0], [35.1, 12081.0], [35.2, 12081.0], [35.3, 12082.0], [35.4, 12082.0], [35.5, 12082.0], [35.6, 12082.0], [35.7, 12083.0], [35.8, 12083.0], [35.9, 12083.0], [36.0, 12083.0], [36.1, 12084.0], [36.2, 12084.0], [36.3, 12084.0], [36.4, 12084.0], [36.5, 12085.0], [36.6, 12085.0], [36.7, 12085.0], [36.8, 12085.0], [36.9, 12085.0], [37.0, 12085.0], [37.1, 12086.0], [37.2, 12086.0], [37.3, 12086.0], [37.4, 12086.0], [37.5, 12086.0], [37.6, 12086.0], [37.7, 12086.0], [37.8, 12086.0], [37.9, 12086.0], [38.0, 12087.0], [38.1, 12087.0], [38.2, 12087.0], [38.3, 12087.0], [38.4, 12088.0], [38.5, 12088.0], [38.6, 12088.0], [38.7, 12088.0], [38.8, 12088.0], [38.9, 12088.0], [39.0, 12088.0], [39.1, 12088.0], [39.2, 12089.0], [39.3, 12089.0], [39.4, 12090.0], [39.5, 12090.0], [39.6, 12090.0], [39.7, 12090.0], [39.8, 12091.0], [39.9, 12091.0], [40.0, 12091.0], [40.1, 12091.0], [40.2, 12091.0], [40.3, 12091.0], [40.4, 12091.0], [40.5, 12092.0], [40.6, 12092.0], [40.7, 12092.0], [40.8, 12092.0], [40.9, 12093.0], [41.0, 12093.0], [41.1, 12094.0], [41.2, 12094.0], [41.3, 12094.0], [41.4, 12094.0], [41.5, 12094.0], [41.6, 12094.0], [41.7, 12095.0], [41.8, 12095.0], [41.9, 12095.0], [42.0, 12095.0], [42.1, 12096.0], [42.2, 12096.0], [42.3, 12097.0], [42.4, 12097.0], [42.5, 12097.0], [42.6, 12097.0], [42.7, 12097.0], [42.8, 12097.0], [42.9, 12097.0], [43.0, 12098.0], [43.1, 12098.0], [43.2, 12099.0], [43.3, 12099.0], [43.4, 12099.0], [43.5, 12099.0], [43.6, 12099.0], [43.7, 12099.0], [43.8, 12099.0], [43.9, 12099.0], [44.0, 12103.0], [44.1, 12103.0], [44.2, 12105.0], [44.3, 12105.0], [44.4, 12106.0], [44.5, 12106.0], [44.6, 12106.0], [44.7, 12106.0], [44.8, 12106.0], [44.9, 12106.0], [45.0, 12106.0], [45.1, 12108.0], [45.2, 12108.0], [45.3, 12110.0], [45.4, 12110.0], [45.5, 12111.0], [45.6, 12111.0], [45.7, 12111.0], [45.8, 12111.0], [45.9, 12114.0], [46.0, 12114.0], [46.1, 12123.0], [46.2, 12123.0], [46.3, 12125.0], [46.4, 12125.0], [46.5, 12125.0], [46.6, 12125.0], [46.7, 12127.0], [46.8, 12127.0], [46.9, 12128.0], [47.0, 12128.0], [47.1, 12128.0], [47.2, 12128.0], [47.3, 12134.0], [47.4, 12134.0], [47.5, 12134.0], [47.6, 12137.0], [47.7, 12137.0], [47.8, 12139.0], [47.9, 12139.0], [48.0, 12139.0], [48.1, 12139.0], [48.2, 12140.0], [48.3, 12140.0], [48.4, 12141.0], [48.5, 12141.0], [48.6, 12141.0], [48.7, 12141.0], [48.8, 12142.0], [48.9, 12142.0], [49.0, 12146.0], [49.1, 12146.0], [49.2, 12147.0], [49.3, 12147.0], [49.4, 12151.0], [49.5, 12151.0], [49.6, 12153.0], [49.7, 12153.0], [49.8, 12154.0], [49.9, 12154.0], [50.0, 12154.0], [50.1, 12156.0], [50.2, 12156.0], [50.3, 12160.0], [50.4, 12160.0], [50.5, 12160.0], [50.6, 12160.0], [50.7, 12162.0], [50.8, 12162.0], [50.9, 12165.0], [51.0, 12165.0], [51.1, 12169.0], [51.2, 12169.0], [51.3, 12170.0], [51.4, 12170.0], [51.5, 12172.0], [51.6, 12172.0], [51.7, 12175.0], [51.8, 12175.0], [51.9, 12176.0], [52.0, 12176.0], [52.1, 12178.0], [52.2, 12178.0], [52.3, 12179.0], [52.4, 12179.0], [52.5, 12179.0], [52.6, 12180.0], [52.7, 12180.0], [52.8, 12180.0], [52.9, 12180.0], [53.0, 12182.0], [53.1, 12182.0], [53.2, 12191.0], [53.3, 12191.0], [53.4, 12193.0], [53.5, 12193.0], [53.6, 12194.0], [53.7, 12194.0], [53.8, 12195.0], [53.9, 12195.0], [54.0, 12199.0], [54.1, 12199.0], [54.2, 12203.0], [54.3, 12203.0], [54.4, 12204.0], [54.5, 12204.0], [54.6, 12205.0], [54.7, 12205.0], [54.8, 12205.0], [54.9, 12205.0], [55.0, 12205.0], [55.1, 12207.0], [55.2, 12207.0], [55.3, 12208.0], [55.4, 12208.0], [55.5, 12212.0], [55.6, 12212.0], [55.7, 12219.0], [55.8, 12219.0], [55.9, 12221.0], [56.0, 12221.0], [56.1, 12223.0], [56.2, 12223.0], [56.3, 12225.0], [56.4, 12225.0], [56.5, 12225.0], [56.6, 12225.0], [56.7, 12228.0], [56.8, 12228.0], [56.9, 12228.0], [57.0, 12228.0], [57.1, 12232.0], [57.2, 12232.0], [57.3, 12233.0], [57.4, 12233.0], [57.5, 12233.0], [57.6, 12235.0], [57.7, 12235.0], [57.8, 12236.0], [57.9, 12236.0], [58.0, 12236.0], [58.1, 12236.0], [58.2, 12239.0], [58.3, 12239.0], [58.4, 12240.0], [58.5, 12240.0], [58.6, 12242.0], [58.7, 12242.0], [58.8, 12244.0], [58.9, 12244.0], [59.0, 12245.0], [59.1, 12245.0], [59.2, 12246.0], [59.3, 12246.0], [59.4, 12248.0], [59.5, 12248.0], [59.6, 12250.0], [59.7, 12250.0], [59.8, 12250.0], [59.9, 12250.0], [60.0, 12250.0], [60.1, 12252.0], [60.2, 12252.0], [60.3, 12253.0], [60.4, 12253.0], [60.5, 12258.0], [60.6, 12258.0], [60.7, 12265.0], [60.8, 12265.0], [60.9, 12267.0], [61.0, 12267.0], [61.1, 12269.0], [61.2, 12269.0], [61.3, 12272.0], [61.4, 12272.0], [61.5, 12273.0], [61.6, 12273.0], [61.7, 12273.0], [61.8, 12273.0], [61.9, 12276.0], [62.0, 12276.0], [62.1, 12277.0], [62.2, 12277.0], [62.3, 12278.0], [62.4, 12278.0], [62.5, 12278.0], [62.6, 12279.0], [62.7, 12279.0], [62.8, 12281.0], [62.9, 12281.0], [63.0, 12281.0], [63.1, 12281.0], [63.2, 12285.0], [63.3, 12285.0], [63.4, 12286.0], [63.5, 12286.0], [63.6, 12295.0], [63.7, 12295.0], [63.8, 12295.0], [63.9, 12295.0], [64.0, 12299.0], [64.1, 12299.0], [64.2, 12302.0], [64.3, 12302.0], [64.4, 12302.0], [64.5, 12302.0], [64.6, 12303.0], [64.7, 12303.0], [64.8, 12309.0], [64.9, 12309.0], [65.0, 12309.0], [65.1, 12309.0], [65.2, 12309.0], [65.3, 12312.0], [65.4, 12312.0], [65.5, 12313.0], [65.6, 12313.0], [65.7, 12314.0], [65.8, 12314.0], [65.9, 12314.0], [66.0, 12314.0], [66.1, 12314.0], [66.2, 12314.0], [66.3, 12315.0], [66.4, 12315.0], [66.5, 12316.0], [66.6, 12316.0], [66.7, 12316.0], [66.8, 12316.0], [66.9, 12318.0], [67.0, 12318.0], [67.1, 12323.0], [67.2, 12323.0], [67.3, 12326.0], [67.4, 12326.0], [67.5, 12326.0], [67.6, 12328.0], [67.7, 12328.0], [67.8, 12328.0], [67.9, 12328.0], [68.0, 12328.0], [68.1, 12328.0], [68.2, 12331.0], [68.3, 12331.0], [68.4, 12332.0], [68.5, 12332.0], [68.6, 12333.0], [68.7, 12333.0], [68.8, 12335.0], [68.9, 12335.0], [69.0, 12336.0], [69.1, 12336.0], [69.2, 12338.0], [69.3, 12338.0], [69.4, 12340.0], [69.5, 12340.0], [69.6, 12340.0], [69.7, 12340.0], [69.8, 12349.0], [69.9, 12349.0], [70.0, 12349.0], [70.1, 12350.0], [70.2, 12350.0], [70.3, 12350.0], [70.4, 12350.0], [70.5, 12351.0], [70.6, 12351.0], [70.7, 12357.0], [70.8, 12357.0], [70.9, 12359.0], [71.0, 12359.0], [71.1, 12361.0], [71.2, 12361.0], [71.3, 12365.0], [71.4, 12365.0], [71.5, 12370.0], [71.6, 12370.0], [71.7, 12371.0], [71.8, 12371.0], [71.9, 12371.0], [72.0, 12371.0], [72.1, 12371.0], [72.2, 12371.0], [72.3, 12373.0], [72.4, 12373.0], [72.5, 12373.0], [72.6, 12374.0], [72.7, 12374.0], [72.8, 12377.0], [72.9, 12377.0], [73.0, 12381.0], [73.1, 12381.0], [73.2, 12381.0], [73.3, 12381.0], [73.4, 12382.0], [73.5, 12382.0], [73.6, 12384.0], [73.7, 12384.0], [73.8, 12385.0], [73.9, 12385.0], [74.0, 12386.0], [74.1, 12386.0], [74.2, 12388.0], [74.3, 12388.0], [74.4, 12389.0], [74.5, 12389.0], [74.6, 12392.0], [74.7, 12392.0], [74.8, 12394.0], [74.9, 12394.0], [75.0, 12400.0], [75.1, 12400.0], [75.2, 12400.0], [75.3, 12401.0], [75.4, 12401.0], [75.5, 12402.0], [75.6, 12402.0], [75.7, 12403.0], [75.8, 12403.0], [75.9, 12408.0], [76.0, 12408.0], [76.1, 12411.0], [76.2, 12411.0], [76.3, 12412.0], [76.4, 12412.0], [76.5, 12414.0], [76.6, 12414.0], [76.7, 12415.0], [76.8, 12415.0], [76.9, 12416.0], [77.0, 12416.0], [77.1, 12420.0], [77.2, 12420.0], [77.3, 12422.0], [77.4, 12422.0], [77.5, 12423.0], [77.6, 12423.0], [77.7, 12423.0], [77.8, 12424.0], [77.9, 12424.0], [78.0, 12427.0], [78.1, 12427.0], [78.2, 12431.0], [78.3, 12431.0], [78.4, 12434.0], [78.5, 12434.0], [78.6, 12439.0], [78.7, 12439.0], [78.8, 12440.0], [78.9, 12440.0], [79.0, 12440.0], [79.1, 12440.0], [79.2, 12441.0], [79.3, 12441.0], [79.4, 12441.0], [79.5, 12441.0], [79.6, 12447.0], [79.7, 12447.0], [79.8, 12448.0], [79.9, 12448.0], [80.0, 12450.0], [80.1, 12450.0], [80.2, 12450.0], [80.3, 12451.0], [80.4, 12451.0], [80.5, 12454.0], [80.6, 12454.0], [80.7, 12455.0], [80.8, 12455.0], [80.9, 12456.0], [81.0, 12456.0], [81.1, 12456.0], [81.2, 12456.0], [81.3, 12457.0], [81.4, 12457.0], [81.5, 12460.0], [81.6, 12460.0], [81.7, 12462.0], [81.8, 12462.0], [81.9, 12463.0], [82.0, 12463.0], [82.1, 12466.0], [82.2, 12466.0], [82.3, 12467.0], [82.4, 12467.0], [82.5, 12468.0], [82.6, 12468.0], [82.7, 12468.0], [82.8, 12472.0], [82.9, 12472.0], [83.0, 12476.0], [83.1, 12476.0], [83.2, 12480.0], [83.3, 12480.0], [83.4, 12483.0], [83.5, 12483.0], [83.6, 12484.0], [83.7, 12484.0], [83.8, 12484.0], [83.9, 12484.0], [84.0, 12486.0], [84.1, 12486.0], [84.2, 12487.0], [84.3, 12487.0], [84.4, 12494.0], [84.5, 12494.0], [84.6, 12495.0], [84.7, 12495.0], [84.8, 12495.0], [84.9, 12495.0], [85.0, 12498.0], [85.1, 12498.0], [85.2, 12498.0], [85.3, 12499.0], [85.4, 12499.0], [85.5, 12499.0], [85.6, 12499.0], [85.7, 12500.0], [85.8, 12500.0], [85.9, 12503.0], [86.0, 12503.0], [86.1, 12503.0], [86.2, 12503.0], [86.3, 12504.0], [86.4, 12504.0], [86.5, 12506.0], [86.6, 12506.0], [86.7, 12506.0], [86.8, 12506.0], [86.9, 12510.0], [87.0, 12510.0], [87.1, 12510.0], [87.2, 12510.0], [87.3, 12514.0], [87.4, 12514.0], [87.5, 12516.0], [87.6, 12516.0], [87.7, 12516.0], [87.8, 12516.0], [87.9, 12516.0], [88.0, 12518.0], [88.1, 12518.0], [88.2, 12520.0], [88.3, 12520.0], [88.4, 12521.0], [88.5, 12521.0], [88.6, 12523.0], [88.7, 12523.0], [88.8, 12523.0], [88.9, 12523.0], [89.0, 12530.0], [89.1, 12530.0], [89.2, 12536.0], [89.3, 12536.0], [89.4, 12536.0], [89.5, 12536.0], [89.6, 12541.0], [89.7, 12541.0], [89.8, 12542.0], [89.9, 12542.0], [90.0, 12543.0], [90.1, 12543.0], [90.2, 12543.0], [90.3, 12545.0], [90.4, 12545.0], [90.5, 12547.0], [90.6, 12547.0], [90.7, 12547.0], [90.8, 12547.0], [90.9, 12549.0], [91.0, 12549.0], [91.1, 12549.0], [91.2, 12549.0], [91.3, 12553.0], [91.4, 12553.0], [91.5, 12555.0], [91.6, 12555.0], [91.7, 12557.0], [91.8, 12557.0], [91.9, 12559.0], [92.0, 12559.0], [92.1, 12560.0], [92.2, 12560.0], [92.3, 12561.0], [92.4, 12561.0], [92.5, 12562.0], [92.6, 12562.0], [92.7, 12562.0], [92.8, 12562.0], [92.9, 12562.0], [93.0, 12568.0], [93.1, 12568.0], [93.2, 12572.0], [93.3, 12572.0], [93.4, 12574.0], [93.5, 12574.0], [93.6, 12576.0], [93.7, 12576.0], [93.8, 12579.0], [93.9, 12579.0], [94.0, 12582.0], [94.1, 12582.0], [94.2, 12583.0], [94.3, 12583.0], [94.4, 12587.0], [94.5, 12587.0], [94.6, 12588.0], [94.7, 12588.0], [94.8, 12588.0], [94.9, 12588.0], [95.0, 12590.0], [95.1, 12590.0], [95.2, 12590.0], [95.3, 12591.0], [95.4, 12591.0], [95.5, 12593.0], [95.6, 12593.0], [95.7, 12595.0], [95.8, 12595.0], [95.9, 12595.0], [96.0, 12595.0], [96.1, 12598.0], [96.2, 12598.0], [96.3, 12601.0], [96.4, 12601.0], [96.5, 12601.0], [96.6, 12601.0], [96.7, 12602.0], [96.8, 12602.0], [96.9, 12603.0], [97.0, 12603.0], [97.1, 12604.0], [97.2, 12604.0], [97.3, 12609.0], [97.4, 12609.0], [97.5, 12610.0], [97.6, 12610.0], [97.7, 12610.0], [97.8, 12611.0], [97.9, 12611.0], [98.0, 12617.0], [98.1, 12617.0], [98.2, 12619.0], [98.3, 12619.0], [98.4, 12624.0], [98.5, 12624.0], [98.6, 12627.0], [98.7, 12627.0], [98.8, 12628.0], [98.9, 12628.0], [99.0, 12628.0], [99.1, 12628.0], [99.2, 12631.0], [99.3, 12631.0], [99.4, 12634.0], [99.5, 12634.0], [99.6, 12645.0], [99.7, 12645.0], [99.8, 12651.0], [99.9, 12651.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 12644.0, "series": [{"data": [[60100.0, 15.0], [60000.0, 465.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 622.0], [600.0, 74.0], [15300.0, 6.0], [15200.0, 2.0], [15000.0, 11.0], [15400.0, 1.0], [1000.0, 329.0], [1100.0, 303.0], [1200.0, 1195.0], [1300.0, 1253.0], [21000.0, 1311.0], [21100.0, 1.0], [1400.0, 222.0], [1500.0, 38.0], [100.0, 1179.0], [1600.0, 4.0], [2100.0, 7.0], [2300.0, 6.0], [2200.0, 5.0], [3000.0, 87.0], [3100.0, 23.0], [200.0, 10594.0], [3300.0, 139.0], [3200.0, 224.0], [3400.0, 17.0], [3500.0, 4.0], [300.0, 12644.0], [400.0, 5158.0], [7000.0, 26.0], [7100.0, 2.0], [7300.0, 31.0], [7200.0, 22.0], [7400.0, 10.0], [7500.0, 1.0], [500.0, 1291.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12000.0, 211.0], [12100.0, 49.0], [12200.0, 48.0], [12500.0, 51.0], [12400.0, 51.0], [12300.0, 52.0], [12600.0, 18.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 627.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 30935.0, "series": [{"data": [[0.0, 627.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 30935.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 4928.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 1312.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 241.22500000000005, "minX": 1.6175739E12, "maxY": 472.8582208881504, "series": [{"data": [[1.6175739E12, 241.22500000000005]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.6175739E12, 257.0520833333338]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.6175739E12, 472.8582208881504], [1.61757396E12, 351.38158995815877]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757396E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 60102.333333333336, "series": [{"data": [[447.0, 60036.28571428572], [463.0, 60028.0], [462.0, 60028.0], [461.0, 60028.0], [460.0, 60028.0], [459.0, 60028.0], [458.0, 60029.0], [457.0, 60034.666666666664], [454.0, 60036.25], [478.0, 60028.0], [479.0, 60029.0], [477.0, 60028.0], [476.0, 60029.0], [475.0, 60028.0], [474.0, 60029.0], [473.0, 60028.0], [472.0, 60028.0], [471.0, 60028.0], [467.0, 60028.0], [465.0, 60028.0], [470.0, 60029.0], [468.0, 60027.0], [494.0, 60027.0], [495.0, 60029.0], [493.0, 60028.0], [492.0, 60027.0], [491.0, 60028.0], [490.0, 60029.0], [489.0, 60029.0], [488.0, 60028.0], [487.0, 60032.0], [480.0, 60028.0], [482.0, 60029.0], [481.0, 60029.0], [486.0, 60029.0], [485.0, 60030.0], [484.0, 60029.0], [510.0, 60028.0], [511.0, 60027.0], [509.0, 60026.0], [508.0, 60029.0], [507.0, 60026.0], [506.0, 60026.0], [505.0, 60027.0], [504.0, 60027.0], [503.0, 60027.0], [497.0, 60027.0], [496.0, 60027.0], [499.0, 60027.0], [498.0, 60029.0], [502.0, 60028.0], [500.0, 60028.0], [540.0, 60028.0], [543.0, 60028.0], [528.0, 60027.0], [530.0, 60028.0], [529.0, 60028.0], [532.0, 60027.0], [531.0, 60030.0], [542.0, 60028.0], [541.0, 60028.0], [539.0, 60027.0], [538.0, 60027.0], [537.0, 60028.0], [536.0, 60030.0], [527.0, 60027.0], [513.0, 60029.0], [512.0, 60028.0], [516.0, 60028.0], [515.0, 60028.0], [519.0, 60028.0], [518.0, 60029.0], [526.0, 60027.0], [525.0, 60027.0], [524.0, 60027.0], [523.0, 60027.0], [522.0, 60027.0], [521.0, 60028.0], [520.0, 60028.0], [535.0, 60028.0], [533.0, 60027.0], [569.0, 60029.0], [573.0, 60026.0], [574.0, 60028.0], [560.0, 60030.0], [562.0, 60029.0], [561.0, 60028.0], [572.0, 60026.0], [571.0, 60031.0], [570.0, 60027.0], [558.0, 60027.0], [544.0, 60027.0], [546.0, 60031.0], [545.0, 60028.0], [548.0, 60028.0], [547.0, 60028.0], [551.0, 60028.0], [549.0, 60029.0], [557.0, 60026.0], [556.0, 60029.0], [554.0, 60030.0], [553.0, 60028.0], [552.0, 60027.0], [567.0, 60027.0], [566.0, 60027.0], [565.0, 60026.5], [563.0, 60028.0], [601.0, 60027.0], [605.0, 60029.0], [607.0, 60029.0], [593.0, 60029.0], [592.0, 60028.0], [604.0, 60028.0], [603.0, 60027.0], [602.0, 60027.0], [600.0, 60026.666666666664], [583.0, 60027.0], [582.0, 60028.0], [581.0, 60027.0], [579.0, 60031.0], [578.0, 60026.0], [577.0, 60027.0], [576.0, 60027.5], [591.0, 60026.0], [590.0, 60026.0], [589.0, 60027.0], [588.0, 60027.0], [587.0, 60027.0], [586.0, 60029.0], [585.0, 60030.0], [597.0, 60032.333333333336], [594.0, 60029.0], [638.0, 60028.0], [639.0, 60027.0], [625.0, 60027.0], [624.0, 60027.0], [627.0, 60027.0], [626.0, 60027.0], [637.0, 60027.0], [636.0, 60026.0], [635.0, 60028.666666666664], [632.0, 60027.0], [623.0, 60026.0], [613.0, 60031.8], [608.0, 60039.0], [615.0, 60028.0], [614.0, 60028.0], [622.0, 60029.0], [621.0, 60031.0], [619.0, 60029.0], [616.0, 60028.0], [631.0, 60029.0], [630.0, 60028.0], [629.0, 60027.0], [628.0, 60027.0], [664.0, 60027.0], [670.0, 60029.0], [671.0, 60028.0], [657.0, 60028.0], [656.0, 60027.0], [659.0, 60032.0], [658.0, 60028.0], [668.0, 60028.0], [667.0, 60028.0], [666.0, 60028.0], [655.0, 60027.0], [640.0, 60028.0], [642.0, 60026.0], [641.0, 60028.0], [644.0, 60028.0], [643.0, 60027.0], [646.0, 60028.0], [645.0, 60028.0], [654.0, 60028.0], [653.0, 60028.0], [652.0, 60028.0], [651.0, 60029.0], [650.0, 60028.0], [649.0, 60028.0], [648.0, 60028.5], [663.0, 60027.0], [662.0, 60029.0], [661.0, 60028.0], [660.0, 60027.0], [700.0, 60028.0], [703.0, 60027.0], [688.0, 60028.0], [690.0, 60027.0], [689.0, 60029.0], [692.0, 60030.0], [691.0, 60027.0], [702.0, 60028.0], [701.0, 60028.0], [699.0, 60027.0], [698.0, 60030.0], [697.0, 60028.0], [696.0, 60029.0], [687.0, 60027.0], [672.0, 60029.0], [675.0, 60029.0], [673.0, 60027.0], [677.0, 60028.0], [676.0, 60028.0], [679.0, 60028.0], [678.0, 60028.0], [686.0, 60027.0], [685.0, 60028.0], [684.0, 60027.0], [683.0, 60027.0], [682.0, 60030.0], [680.0, 60028.0], [694.0, 60029.0], [693.0, 60027.0], [734.0, 60038.0], [724.0, 60028.0], [735.0, 60033.0], [721.0, 60029.0], [732.0, 60032.0], [731.0, 60029.25], [719.0, 60027.0], [705.0, 60027.0], [704.0, 60028.0], [707.0, 60027.0], [706.0, 60027.0], [709.0, 60028.0], [708.0, 60028.0], [711.0, 60028.0], [710.0, 60027.0], [718.0, 60030.0], [717.0, 60029.0], [716.0, 60028.0], [715.0, 60027.0], [714.0, 60027.0], [713.0, 60028.0], [712.0, 60029.0], [727.0, 60028.0], [726.0, 60028.0], [725.0, 60026.0], [723.0, 60033.0], [722.0, 60027.0], [764.0, 60029.0], [767.0, 60028.0], [752.0, 60041.75], [756.0, 60043.0], [753.0, 60041.0], [766.0, 60029.0], [765.0, 60032.0], [763.0, 60028.0], [762.0, 60028.0], [761.0, 60028.0], [760.0, 60027.0], [748.0, 60033.0], [740.0, 60037.0], [739.0, 60036.25], [742.0, 60028.0], [741.0, 60029.0], [746.0, 60032.0], [744.0, 60030.0], [759.0, 60027.0], [758.0, 60046.5], [793.0, 60028.0], [798.0, 60029.0], [799.0, 60027.0], [784.0, 60029.0], [786.0, 60030.0], [785.0, 60029.0], [789.0, 60030.0], [787.0, 60027.0], [796.0, 60028.0], [795.0, 60028.0], [794.0, 60028.0], [792.0, 60027.0], [775.0, 60028.0], [774.0, 60029.0], [773.0, 60028.0], [772.0, 60028.0], [771.0, 60030.0], [770.0, 60028.0], [769.0, 60030.0], [783.0, 60028.0], [782.0, 60029.0], [781.0, 60029.0], [780.0, 60027.0], [779.0, 60032.0], [778.0, 60028.0], [777.0, 60029.0], [776.0, 60027.0], [791.0, 60027.0], [790.0, 60027.0], [825.0, 60027.0], [829.0, 60027.0], [830.0, 60027.0], [816.0, 60029.0], [818.0, 60030.0], [817.0, 60029.0], [821.0, 60029.0], [819.0, 60028.0], [828.0, 60027.0], [827.0, 60027.0], [826.0, 60026.0], [824.0, 60027.0], [807.0, 60027.0], [806.0, 60027.0], [805.0, 60027.0], [804.0, 60028.0], [802.0, 60028.0], [801.0, 60027.0], [800.0, 60028.0], [814.0, 60028.0], [813.0, 60027.0], [812.0, 60029.0], [811.0, 60027.0], [810.0, 60027.0], [809.0, 60027.0], [808.0, 60027.0], [823.0, 60028.0], [822.0, 60028.0], [856.0, 60028.0], [860.0, 60031.0], [863.0, 60031.666666666664], [850.0, 60031.0], [849.0, 60032.0], [859.0, 60028.0], [858.0, 60027.0], [857.0, 60027.0], [847.0, 60028.0], [833.0, 60028.0], [832.0, 60028.0], [836.0, 60027.0], [835.0, 60031.5], [839.0, 60029.0], [837.0, 60028.0], [846.0, 60028.0], [845.0, 60031.0], [844.0, 60027.0], [843.0, 60029.0], [842.0, 60027.0], [841.0, 60031.0], [840.0, 60028.0], [855.0, 60028.0], [854.0, 60030.0], [853.0, 60032.0], [852.0, 60032.5], [894.0, 60065.42857142857], [887.0, 60079.33333333333], [886.0, 60058.5], [885.0, 60050.0], [874.0, 60076.142857142855], [867.0, 60036.5], [921.0, 60102.333333333336], [915.0, 60083.28571428572], [908.0, 60082.25], [904.0, 60076.90000000001]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[681.4125, 60034.72708333332]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 21040.0], [3.0, 21054.0], [4.0, 21054.0], [5.0, 21030.0], [6.0, 21030.0], [7.0, 21043.0], [8.0, 21042.0], [9.0, 21043.0], [10.0, 21041.0], [11.0, 21022.0], [12.0, 21053.0], [13.0, 21033.0], [14.0, 21031.0], [15.0, 21044.0], [16.0, 21029.0], [17.0, 21051.0], [18.0, 21053.0], [19.0, 21055.0], [20.0, 21054.0], [21.0, 21050.0], [22.0, 21050.0], [24.0, 21044.0], [25.0, 21041.0], [26.0, 21025.0], [27.0, 21044.0], [28.0, 21026.0], [29.0, 21029.0], [30.0, 21010.0], [33.0, 21015.0], [32.0, 21020.0], [35.0, 21048.0], [34.0, 21059.0], [37.0, 21030.0], [36.0, 21046.0], [39.0, 21044.0], [38.0, 21045.0], [41.0, 21047.0], [40.0, 21044.0], [43.0, 21060.0], [42.0, 21044.0], [45.0, 21043.0], [44.0, 21044.0], [47.0, 21059.0], [46.0, 21059.0], [49.0, 21060.0], [48.0, 21060.0], [51.0, 21060.0], [50.0, 21060.0], [53.0, 21061.0], [52.0, 21061.0], [55.0, 21061.0], [54.0, 21059.0], [57.0, 21043.0], [56.0, 21061.0], [59.0, 21042.0], [58.0, 21043.0], [61.0, 21037.0], [60.0, 21045.0], [67.0, 21031.0], [66.0, 21038.0], [65.0, 21055.0], [64.0, 21037.333333333332], [71.0, 21029.0], [70.0, 21034.0], [69.0, 21050.0], [68.0, 21034.0], [75.0, 21040.0], [73.0, 21032.0], [72.0, 21033.0], [79.0, 21046.0], [78.0, 21031.0], [77.0, 21031.0], [76.0, 21034.0], [83.0, 21046.0], [82.0, 21027.0], [81.0, 21045.0], [80.0, 21044.0], [87.0, 21042.0], [86.0, 21029.0], [85.0, 21027.0], [84.0, 21047.0], [91.0, 21034.0], [90.0, 21050.0], [88.0, 21048.0], [95.0, 21031.0], [94.0, 21048.0], [93.0, 21029.0], [92.0, 21030.5], [99.0, 21030.0], [98.0, 21029.0], [97.0, 21028.0], [96.0, 21046.0], [103.0, 21033.0], [102.0, 21047.0], [101.0, 21033.0], [100.0, 21031.0], [107.0, 21047.0], [106.0, 21047.0], [105.0, 21047.0], [104.0, 21047.0], [111.0, 21050.0], [110.0, 21050.0], [109.0, 21034.0], [108.0, 21047.0], [115.0, 21046.0], [114.0, 21031.0], [113.0, 21033.0], [112.0, 21033.0], [119.0, 21047.0], [118.0, 21046.0], [117.0, 21047.0], [116.0, 21047.0], [123.0, 21032.0], [122.0, 21031.0], [121.0, 21031.0], [120.0, 21046.0], [127.0, 21031.0], [126.0, 21048.0], [125.0, 21031.0], [124.0, 21033.0], [135.0, 21046.0], [134.0, 21046.0], [133.0, 21030.0], [132.0, 21047.0], [131.0, 21030.0], [130.0, 21046.0], [129.0, 21032.0], [128.0, 21031.0], [143.0, 21045.0], [142.0, 21043.0], [141.0, 21045.0], [140.0, 21044.0], [139.0, 21045.0], [138.0, 21046.0], [137.0, 21046.0], [136.0, 21047.0], [150.0, 21067.0], [149.0, 21067.0], [148.0, 21063.0], [147.0, 21043.0], [146.0, 21043.0], [145.0, 21042.0], [144.0, 21042.0], [159.0, 21048.0], [158.0, 21046.0], [157.0, 21063.0], [156.0, 21055.0], [154.0, 21066.0], [153.0, 21065.0], [152.0, 21063.0], [167.0, 21042.0], [166.0, 21055.0], [165.0, 21042.0], [164.0, 21055.0], [163.0, 21059.0], [162.0, 21057.0], [161.0, 21059.0], [160.0, 21047.0], [175.0, 21040.0], [174.0, 21038.0], [173.0, 21040.0], [171.0, 21050.0], [170.0, 21044.0], [169.0, 21042.0], [168.0, 21044.0], [183.0, 21038.0], [182.0, 21037.0], [181.0, 21039.0], [180.0, 21038.0], [179.0, 21038.0], [178.0, 21038.0], [177.0, 21038.0], [176.0, 21038.0], [191.0, 21055.0], [190.0, 21037.0], [189.0, 21035.0], [188.0, 21036.0], [187.0, 21037.0], [186.0, 21038.0], [185.0, 21039.0], [184.0, 21039.0], [199.0, 21065.0], [198.0, 21070.0], [197.0, 21068.0], [196.0, 21068.0], [195.0, 21071.0], [193.0, 21040.0], [192.0, 21056.0], [207.0, 21054.0], [206.0, 21052.0], [205.0, 21056.0], [204.0, 21058.0], [203.0, 21056.0], [201.0, 21067.0], [200.0, 21067.0], [214.0, 21052.0], [213.0, 21053.0], [212.0, 21054.0], [211.0, 21053.0], [210.0, 21051.0], [209.0, 21048.0], [208.0, 21049.0], [223.0, 21051.0], [222.0, 21056.0], [221.0, 21060.0], [220.0, 21055.0], [219.0, 21060.0], [218.0, 21060.5], [216.0, 21060.0], [231.0, 21051.0], [230.0, 21055.0], [229.0, 21049.0], [228.0, 21056.0], [227.0, 21052.0], [226.0, 21044.0], [225.0, 21055.0], [224.0, 21051.0], [239.0, 21052.0], [238.0, 21047.0], [237.0, 21046.0], [236.0, 21051.0], [235.0, 21054.0], [234.0, 21039.0], [233.0, 21039.0], [232.0, 21039.0], [247.0, 21049.0], [246.0, 21051.0], [245.0, 21050.0], [244.0, 21051.0], [243.0, 21038.0], [242.0, 21045.0], [240.0, 21053.0], [255.0, 21049.0], [254.0, 21050.0], [253.0, 21049.0], [252.0, 21049.0], [251.0, 21050.0], [250.0, 21049.0], [249.0, 21050.0], [248.0, 21049.0], [270.0, 21034.0], [271.0, 21033.0], [269.0, 21047.0], [268.0, 21050.0], [267.0, 21049.0], [266.0, 21050.0], [265.0, 21047.0], [264.0, 21051.0], [263.0, 21049.0], [257.0, 21049.0], [256.0, 21048.0], [259.0, 21034.0], [258.0, 21034.0], [262.0, 21037.0], [261.0, 21049.0], [260.0, 21052.0], [286.0, 21032.0], [287.0, 21035.0], [285.0, 21035.0], [284.0, 21037.0], [283.0, 21033.0], [282.0, 21043.0], [281.0, 21045.0], [280.0, 21033.0], [279.0, 21047.0], [273.0, 21033.0], [272.0, 21033.0], [275.0, 21032.0], [274.0, 21032.0], [278.0, 21047.0], [277.0, 21036.5], [302.0, 21035.0], [303.0, 21038.0], [301.0, 21051.0], [300.0, 21033.0], [299.0, 21033.0], [298.0, 21033.0], [297.0, 21032.0], [296.0, 21034.0], [295.0, 21033.0], [289.0, 21030.0], [288.0, 21034.0], [291.0, 21034.0], [290.0, 21032.0], [294.0, 21034.0], [293.0, 21035.0], [292.0, 21033.0], [318.0, 21031.5], [319.0, 21030.0], [316.0, 21037.0], [307.0, 21036.0], [306.0, 21037.0], [305.0, 21035.0], [304.0, 21036.0], [315.0, 21035.0], [314.0, 21038.0], [313.0, 21037.0], [311.0, 21032.0], [310.0, 21045.0], [309.0, 21032.0], [308.0, 21044.0], [334.0, 21034.0], [335.0, 21037.0], [333.0, 21035.0], [332.0, 21037.0], [331.0, 21034.0], [330.0, 21032.0], [329.0, 21032.0], [328.0, 21034.0], [327.0, 21035.0], [321.0, 21030.0], [320.0, 21037.0], [323.0, 21028.0], [322.0, 21032.0], [326.0, 21035.0], [325.0, 21034.0], [324.0, 21030.0], [350.0, 21037.0], [351.0, 21035.0], [349.0, 21033.0], [348.0, 21032.0], [347.0, 21032.0], [346.0, 21033.0], [345.0, 21038.0], [344.0, 21035.5], [342.0, 21041.0], [337.0, 21036.0], [336.0, 21032.0], [339.0, 21033.0], [338.0, 21034.0], [341.0, 21037.0], [340.0, 21032.0], [366.0, 21033.0], [367.0, 21034.0], [365.0, 21034.0], [364.0, 21034.0], [363.0, 21034.0], [362.0, 21034.0], [361.0, 21033.0], [360.0, 21035.0], [359.0, 21038.0], [353.0, 21034.0], [352.0, 21037.0], [355.0, 21030.0], [354.0, 21028.0], [358.0, 21028.0], [357.0, 21030.0], [356.0, 21035.0], [382.0, 21033.0], [383.0, 21049.0], [381.0, 21033.0], [380.0, 21049.0], [379.0, 21033.0], [378.0, 21032.0], [377.0, 21033.0], [376.0, 21035.0], [375.0, 21033.0], [369.0, 21035.0], [368.0, 21034.0], [371.0, 21034.0], [370.0, 21035.0], [374.0, 21035.0], [373.0, 21033.0], [372.0, 21034.0], [398.0, 21051.0], [399.0, 21051.0], [397.0, 21051.0], [396.0, 21053.0], [395.0, 21048.0], [394.0, 21049.0], [393.0, 21049.0], [392.0, 21051.0], [391.0, 21051.0], [385.0, 21036.0], [384.0, 21035.0], [387.0, 21049.0], [386.0, 21035.0], [390.0, 21050.0], [389.0, 21050.0], [388.0, 21050.0], [413.0, 21034.0], [414.0, 21033.0], [412.0, 21038.0], [403.0, 21047.0], [402.0, 21016.0], [401.0, 21033.0], [400.0, 21050.0], [411.0, 21024.0], [410.0, 21027.0], [409.0, 21028.0], [408.0, 21028.0], [407.0, 21029.0], [406.0, 21045.0], [405.0, 21045.0], [404.0, 21029.0], [430.0, 21051.619047619046], [431.0, 21044.832460732978], [429.0, 21059.181818181816], [428.0, 21045.32307692308], [427.0, 21042.20408163265], [426.0, 21048.0], [425.0, 21050.0], [424.0, 21050.285714285714], [423.0, 21066.0], [417.0, 21033.0], [416.0, 21035.0], [419.0, 6395.724137931035], [418.0, 21041.0], [422.0, 21049.8125], [421.0, 4367.197530864196], [420.0, 28.58974358974359], [434.0, 21031.45833333333], [447.0, 21055.75], [440.0, 21055.76], [439.0, 21054.56962025316], [438.0, 21041.569767441862], [437.0, 21052.0], [436.0, 21045.650000000005], [435.0, 21046.200000000004], [433.0, 21026.0], [432.0, 21030.727272727272], [463.0, 21050.333333333336], [462.0, 21053.5], [461.0, 21053.5], [465.0, 21049.0], [504.0, 21046.0], [496.0, 21050.0], [569.0, 21048.0], [638.0, 21052.0], [631.0, 21044.0], [646.0, 21051.0], [684.0, 21047.0], [740.0, 21043.0], [831.0, 21046.0], [830.0, 21042.0], [835.0, 21042.0], [833.0, 21039.5], [832.0, 21044.0], [874.0, 21038.666666666668], [867.0, 21047.0], [927.0, 1454.6315789473683], [926.0, 602.9999999999999], [925.0, 2612.7540983606555], [924.0, 1759.3999999999996], [923.0, 2336.4285714285716], [922.0, 2160.0], [921.0, 13216.988505747126], [956.0, 618.5000000000002], [959.0, 557.735958005249], [945.0, 383.23529411764724], [944.0, 937.4444444444445], [947.0, 1176.3571428571427], [946.0, 439.5192307692308], [949.0, 527.594736842105], [948.0, 318.0], [958.0, 692.6098654708516], [957.0, 986.7611336032387], [955.0, 491.28150134048263], [954.0, 746.8380281690143], [953.0, 973.7252747252747], [952.0, 1175.4666666666665], [943.0, 253.1034482758621], [929.0, 1016.4516129032261], [928.0, 1257.8275862068967], [931.0, 1092.1666666666665], [930.0, 992.3461538461539], [933.0, 933.2058823529411], [932.0, 1037.0], [935.0, 991.25], [934.0, 1036.4210526315792], [942.0, 243.9148936170212], [941.0, 243.7], [940.0, 879.9736842105262], [939.0, 238.0], [938.0, 2240.2727272727275], [937.0, 614.3317073170729], [936.0, 675.4574468085104], [951.0, 599.4982698961933], [950.0, 1323.72], [978.0, 535.0], [987.0, 535.25], [989.0, 535.0], [976.0, 536.3333333333334], [986.0, 535.0], [985.0, 535.2], [984.0, 535.0], [974.0, 540.8888888888888], [960.0, 462.57878166642155], [967.0, 547.4285714285714], [982.0, 535.0], [981.0, 536.0], [980.0, 539.0], [998.0, 51.96000000000001], [999.0, 464.125], [1016.0, 523.0], [1017.0, 96.625], [1020.0, 280.5], [1019.0, 523.0], [1021.0, 39.0], [1023.0, 518.0], [1010.0, 519.5], [1009.0, 521.6666666666666], [1022.0, 522.0], [1001.0, 313.1428571428571], [1002.0, 526.4], [1003.0, 359.3333333333333], [1004.0, 27.0], [1005.0, 425.0], [1007.0, 30.0], [993.0, 536.0], [992.0, 533.2222222222222], [997.0, 531.0], [996.0, 533.3333333333334], [1011.0, 469.29999999999995], [1012.0, 325.0], [1013.0, 359.33333333333337], [1014.0, 31.6], [1015.0, 220.61538461538464], [1052.0, 209.66666666666666], [1032.0, 42.0], [1024.0, 186.20000000000002], [1026.0, 517.5], [1055.0, 69.0], [1053.0, 279.5], [1054.0, 71.0], [1051.0, 68.0], [1048.0, 61.0], [1050.0, 65.0], [1046.0, 57.5], [1047.0, 59.333333333333336], [1042.0, 54.12500000000001], [1041.0, 509.0], [1040.0, 511.0], [1045.0, 235.6], [1027.0, 44.333333333333336], [1030.0, 233.70000000000002], [1029.0, 520.0], [1028.0, 517.6666666666666], [1033.0, 41.0], [1035.0, 44.666666666666664], [1036.0, 42.333333333333336], [1038.0, 47.0], [1039.0, 48.333333333333336], [1072.0, 693.8275862068966], [1075.0, 354.2222222222222], [1077.0, 78.66666666666667], [1080.0, 82.0], [1079.0, 497.0], [1078.0, 494.3333333333333], [1081.0, 358.6666666666667], [1083.0, 87.0], [1082.0, 496.0], [1084.0, 494.0], [1085.0, 86.4], [1087.0, 88.8], [1057.0, 70.0], [1058.0, 235.6], [1059.0, 483.25], [1060.0, 69.66666666666667], [1061.0, 399.95000000000005], [1062.0, 482.42857142857144], [1064.0, 77.5], [1065.0, 73.5], [1066.0, 74.0], [1067.0, 74.66666666666666], [1068.0, 74.0], [1070.0, 75.25], [1069.0, 488.0], [1096.0, 95.14285714285714], [1089.0, 90.0], [1088.0, 491.0], [1090.0, 494.4], [1118.0, 323.0], [1119.0, 595.2], [1115.0, 316.08333333333337], [1114.0, 487.8], [1113.0, 486.2], [1116.0, 1492.0], [1117.0, 173.45454545454547], [1110.0, 289.0], [1112.0, 731.5], [1108.0, 95.0], [1109.0, 96.66666666666667], [1105.0, 95.0], [1106.0, 94.0], [1092.0, 93.0], [1095.0, 97.0], [1097.0, 89.66666666666667], [1099.0, 92.6], [1100.0, 262.2857142857143], [1102.0, 95.0], [1103.0, 91.28571428571429], [1136.0, 491.0], [1137.0, 234.0], [1141.0, 111.25], [1139.0, 483.0], [1144.0, 125.0], [1146.0, 172.75], [1147.0, 136.66666666666666], [1148.0, 151.75294117647059], [1149.0, 481.5], [1120.0, 1090.1818181818182], [1122.0, 103.0], [1121.0, 490.6666666666667], [1123.0, 101.66666666666667], [1125.0, 104.50000000000001], [1129.0, 107.0], [1131.0, 109.0], [1130.0, 485.2], [1132.0, 104.0], [1134.0, 322.5], [1133.0, 484.0], [1135.0, 456.5714285714286], [1190.0, 139.00000000000003], [1184.0, 133.33333333333334], [1211.0, 146.0], [1214.0, 148.0], [1209.0, 146.5], [1210.0, 144.0], [1207.0, 143.5], [1208.0, 147.0], [1205.0, 147.0], [1206.0, 143.0], [1200.0, 139.75], [1166.0, 482.0], [1202.0, 142.33333333333334], [1187.0, 139.0], [1188.0, 137.6], [1193.0, 140.0], [1194.0, 140.5], [1195.0, 142.83333333333331], [1197.0, 144.33333333333334], [1198.0, 144.5], [1199.0, 143.5], [1220.0, 160.0], [1222.0, 162.0], [1223.0, 165.0], [1230.0, 177.0], [1233.0, 183.0], [1249.0, 213.0], [1277.0, 267.0], [1269.0, 479.0], [1310.0, 258.4347826086957], [1306.0, 251.0], [1302.0, 296.0], [1304.0, 258.77777777777777], [1305.0, 248.0], [1307.0, 262.6875], [1308.0, 260.6], [1309.0, 257.9444444444444], [1311.0, 260.55555555555566], [1328.0, 264.25], [1329.0, 238.0], [1331.0, 239.5], [1337.0, 264.8333333333333], [1338.0, 250.0], [1340.0, 247.0], [1341.0, 245.66666666666666], [1312.0, 267.78260869565213], [1313.0, 257.6666666666667], [1314.0, 259.6666666666667], [1315.0, 252.44444444444446], [1316.0, 252.5333333333333], [1317.0, 245.4], [1318.0, 244.0], [1319.0, 243.5], [1320.0, 242.5], [1321.0, 249.4], [1322.0, 239.4], [1323.0, 238.0], [1324.0, 235.0], [1325.0, 236.0], [1326.0, 236.0], [1396.0, 260.84615384615387], [1345.0, 248.0], [1350.0, 261.0], [1392.0, 279.0], [1393.0, 270.6666666666667], [1400.0, 252.16666666666669], [1403.0, 241.5], [1406.0, 225.70000000000002], [1376.0, 476.0], [1361.0, 278.0], [1365.0, 283.0], [1368.0, 287.0], [1372.0, 295.0], [1373.0, 291.0], [1378.0, 296.0], [1381.0, 301.5], [1383.0, 293.50000000000006], [1385.0, 293.0], [1388.0, 292.1666666666667], [1389.0, 290.0], [1390.0, 285.5], [1391.0, 281.0], [1431.0, 243.33333333333334], [1417.0, 220.66666666666666], [1412.0, 222.66666666666666], [1438.0, 256.0], [1439.0, 256.0], [1436.0, 253.0], [1437.0, 253.25], [1432.0, 244.0], [1434.0, 248.33333333333334], [1430.0, 241.0], [1428.0, 239.0], [1429.0, 239.0], [1426.0, 235.0], [1427.0, 237.14285714285714], [1424.0, 232.0], [1425.0, 234.0], [1414.0, 221.8], [1416.0, 223.1176470588235], [1418.0, 223.0], [1419.0, 224.0], [1420.0, 227.0], [1421.0, 227.36363636363635], [1422.0, 229.0], [1423.0, 230.4], [1440.0, 344.1256198347109], [1.0, 21037.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[967.3769882199666, 1217.6673090494544]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[989.0, 12029.0], [991.0, 12029.0], [977.0, 12027.0], [976.0, 12028.0], [979.0, 12028.0], [978.0, 12027.0], [981.0, 12029.0], [980.0, 12028.0], [988.0, 12027.0], [987.0, 12027.0], [986.0, 12027.0], [985.0, 12026.0], [984.0, 12028.0], [974.0, 12034.0], [967.0, 12036.714285714286], [983.0, 12028.0], [982.0, 12027.0], [1017.0, 12027.0], [1022.0, 12029.0], [1023.0, 12029.0], [1009.0, 12027.0], [1008.0, 12029.0], [1011.0, 12028.0], [1010.0, 12030.0], [1013.0, 12027.0], [1012.0, 12026.0], [1020.0, 12029.0], [1019.0, 12027.0], [1018.0, 12026.0], [1016.0, 12026.0], [999.0, 12029.0], [998.0, 12028.0], [997.0, 12030.0], [996.0, 12029.5], [994.0, 12029.0], [992.0, 12030.0], [1007.0, 12027.0], [1006.0, 12032.0], [1005.0, 12027.0], [1003.0, 12026.0], [1002.0, 12028.0], [1001.0, 12027.0], [1000.0, 12027.0], [1015.0, 12026.0], [1014.0, 12026.0], [1080.0, 12058.0], [1084.0, 12060.0], [1056.0, 12028.0], [1058.0, 12033.0], [1057.0, 12030.0], [1060.0, 12034.0], [1059.0, 12033.0], [1062.0, 12033.0], [1061.0, 12039.0], [1082.0, 12058.0], [1081.0, 12054.0], [1079.0, 12052.0], [1078.0, 12055.333333333334], [1075.0, 12049.666666666666], [1072.0, 12044.0], [1055.0, 12032.0], [1025.0, 12027.0], [1024.0, 12027.0], [1027.0, 12028.0], [1026.0, 12027.0], [1029.0, 12031.0], [1028.0, 12027.0], [1031.0, 12031.0], [1030.0, 12027.0], [1033.0, 12031.0], [1032.0, 12028.0], [1036.0, 12032.0], [1034.0, 12033.0], [1039.0, 12030.0], [1037.0, 12034.0], [1054.0, 12027.0], [1053.0, 12030.0], [1052.0, 12029.0], [1050.0, 12027.0], [1049.0, 12027.0], [1048.0, 12028.0], [1047.0, 12030.0], [1046.0, 12028.0], [1045.0, 12028.0], [1044.0, 12031.0], [1043.0, 12028.0], [1042.0, 12028.0], [1041.0, 12029.0], [1040.0, 12027.0], [1069.0, 12041.75], [1065.0, 12038.666666666666], [1127.0, 12086.0], [1131.0, 12087.0], [1146.0, 12269.57142857143], [1149.0, 12178.666666666666], [1121.0, 12083.0], [1120.0, 12085.0], [1125.0, 12083.0], [1124.0, 12082.666666666666], [1128.0, 12086.0], [1130.0, 12087.0], [1129.0, 12085.0], [1139.0, 12059.0], [1137.0, 12065.0], [1136.0, 12068.0], [1100.0, 12081.0], [1099.0, 12072.75], [1097.0, 12064.0], [1090.0, 12064.0], [1088.0, 12061.75], [1119.0, 12086.0], [1118.0, 12090.0], [1117.0, 12089.0], [1116.0, 12091.0], [1115.0, 12094.0], [1114.0, 12095.0], [1113.0, 12099.0], [1112.0, 12095.333333333334], [1109.0, 12093.0], [1107.0, 12086.0], [1135.0, 12076.0], [1134.0, 12086.0], [1133.0, 12088.0], [1206.0, 12352.562499999998], [1190.0, 12334.166666666664], [1178.0, 12299.833333333334], [1166.0, 12233.42857142857], [1159.0, 12199.699999999999], [1268.0, 12362.1], [1266.0, 12455.0], [1247.0, 12519.5], [1245.0, 12277.666666666666], [1242.0, 12371.133333333333], [1227.0, 12347.649999999998], [1226.0, 12359.0], [1314.0, 12099.0], [1316.0, 12403.666666666666], [1315.0, 12454.0], [1282.0, 12295.125], [1281.0, 12381.0], [1280.0, 12302.0], [1404.0, 12416.181818181818], [1407.0, 12394.0], [1382.0, 12273.0], [1380.0, 12331.0], [1384.0, 12456.0], [1383.0, 12320.5], [1387.0, 12429.666666666666], [1385.0, 12601.0], [1389.0, 12539.333333333334], [1388.0, 12387.0], [1391.0, 12225.8], [1390.0, 12329.949999999999], [1406.0, 12397.0], [1405.0, 12519.333333333334], [1403.0, 12214.0], [1402.0, 12362.5], [1401.0, 12421.166666666666], [1400.0, 12345.25], [1399.0, 12343.3], [1398.0, 12350.5], [1397.0, 12423.0], [1396.0, 12309.0], [1395.0, 12230.5], [1394.0, 12165.0], [1393.0, 12259.833333333334], [1392.0, 12490.5], [1421.0, 12060.0], [1440.0, 12329.5], [1424.0, 12268.857142857143], [1410.0, 12271.0], [1409.0, 12097.0], [1413.0, 12588.0], [1412.0, 12601.0], [1423.0, 12533.666666666666], [1422.0, 12412.2], [1420.0, 12494.0], [1419.0, 12125.0], [1418.0, 12199.0], [1417.0, 12441.0], [1416.0, 12125.0], [1414.0, 12323.333333333334]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1217.0083333333346, 12229.450000000003]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1440.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6175739E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175739E12, 0.0], [1.61757396E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6175739E12, 0.0], [1.61757396E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757396E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 637.7504418324133, "minX": 1.6175739E12, "maxY": 60034.72708333332, "series": [{"data": [[1.6175739E12, 60034.72708333332]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175739E12, 637.7504418324133], [1.61757396E12, 18516.660251046032]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175739E12, 12229.450000000003]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757396E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175739E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175739E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175739E12, 0.0], [1.61757396E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175739E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757396E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6175739E12, "maxY": 4.9E-324, "series": [{"data": [[1.6175739E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.6175739E12, 0.0], [1.61757396E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6175739E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757396E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.6175739E12, "maxY": 60142.0, "series": [{"data": [[1.6175739E12, 60142.0], [1.61757396E12, 15050.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6175739E12, 1299.0], [1.61757396E12, 1240.8999999999887]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6175739E12, 60029.0], [1.61757396E12, 11132.449999999928]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6175739E12, 3054.0], [1.61757396E12, 7040.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6175739E12, 26.0], [1.61757396E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6175739E12, 297.0], [1.61757396E12, 28.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757396E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 60030.0, "series": [{"data": [[540.0, 485.5], [608.0, 339.0], [693.0, 289.0], [769.0, 349.0], [812.0, 355.0], [826.0, 288.0], [859.0, 428.0], [857.0, 361.0], [867.0, 330.0], [884.0, 319.5], [899.0, 188.0], [918.0, 293.0], [943.0, 368.0], [931.0, 429.0], [940.0, 398.0], [959.0, 333.0], [974.0, 387.5], [973.0, 288.0], [982.0, 244.0], [1016.0, 252.0], [1011.0, 231.0], [994.0, 277.0], [1069.0, 351.0], [1053.0, 457.0], [1028.0, 296.0], [1093.0, 259.0], [1181.0, 429.0], [1176.0, 387.0], [1207.0, 234.0], [1223.0, 391.0], [1301.0, 343.0], [1299.0, 327.0], [1348.0, 309.0], [1415.0, 496.0], [7.0, 7051.0], [149.0, 28.0], [167.0, 1030.0], [183.0, 1039.0], [176.0, 60030.0], [186.0, 1046.0], [251.0, 69.0], [439.0, 60028.0], [451.0, 263.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21035.0], [8.0, 21044.0], [149.0, 21031.0], [167.0, 21042.5], [176.0, 21042.0], [186.0, 21043.0], [46.0, 21043.0], [3.0, 21041.0], [13.0, 21048.5], [57.0, 21047.0], [63.0, 21047.0], [1.0, 21039.0], [4.0, 21047.0], [18.0, 21043.0], [82.0, 21043.0], [84.0, 21047.0], [90.0, 21050.0], [6.0, 21041.5], [105.0, 21034.0], [439.0, 21055.0], [110.0, 21042.0], [109.0, 21048.0], [7.0, 21041.0], [117.0, 21044.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1415.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[540.0, 0.0], [608.0, 0.0], [693.0, 0.0], [769.0, 0.0], [812.0, 0.0], [826.0, 0.0], [859.0, 0.0], [857.0, 0.0], [867.0, 0.0], [884.0, 0.0], [899.0, 0.0], [918.0, 0.0], [943.0, 0.0], [931.0, 0.0], [940.0, 0.0], [959.0, 0.0], [974.0, 0.0], [973.0, 0.0], [982.0, 0.0], [1016.0, 0.0], [1011.0, 0.0], [994.0, 0.0], [1069.0, 0.0], [1053.0, 0.0], [1028.0, 0.0], [1093.0, 0.0], [1181.0, 0.0], [1176.0, 0.0], [1207.0, 0.0], [1223.0, 0.0], [1301.0, 0.0], [1299.0, 0.0], [1348.0, 0.0], [1415.0, 0.0], [7.0, 0.0], [149.0, 0.0], [167.0, 0.0], [183.0, 0.0], [176.0, 0.0], [186.0, 0.0], [251.0, 0.0], [439.0, 0.0], [451.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [8.0, 0.0], [149.0, 0.0], [167.0, 0.0], [176.0, 0.0], [186.0, 0.0], [46.0, 0.0], [3.0, 0.0], [13.0, 0.0], [57.0, 0.0], [63.0, 0.0], [1.0, 0.0], [4.0, 0.0], [18.0, 0.0], [82.0, 0.0], [84.0, 0.0], [90.0, 0.0], [6.0, 0.0], [105.0, 0.0], [439.0, 0.0], [110.0, 0.0], [109.0, 0.0], [7.0, 0.0], [117.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1415.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 12.616666666666667, "minX": 1.61757384E12, "maxY": 601.4166666666666, "series": [{"data": [[1.61757384E12, 16.0], [1.6175739E12, 601.4166666666666], [1.61757396E12, 12.616666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757396E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.466666666666667, "minX": 1.6175739E12, "maxY": 605.7, "series": [{"data": [[1.6175739E12, 605.7], [1.61757396E12, 2.466666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6175739E12, 4.416666666666667], [1.61757396E12, 17.45]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757396E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.466666666666667, "minX": 1.6175739E12, "maxY": 589.7, "series": [{"data": [[1.6175739E12, 8.0]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.6175739E12, 8.0]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.6175739E12, 589.7], [1.61757396E12, 2.466666666666667]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.6175739E12, 4.416666666666667], [1.61757396E12, 17.45]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757396E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.466666666666667, "minX": 1.6175739E12, "maxY": 605.7, "series": [{"data": [[1.6175739E12, 605.7], [1.61757396E12, 2.466666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6175739E12, 4.416666666666667], [1.61757396E12, 17.45]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757396E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

