/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 30067.0, "series": [{"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 28.0], [5.1, 29.0], [5.2, 29.0], [5.3, 29.0], [5.4, 29.0], [5.5, 29.0], [5.6, 29.0], [5.7, 29.0], [5.8, 29.0], [5.9, 29.0], [6.0, 29.0], [6.1, 29.0], [6.2, 30.0], [6.3, 30.0], [6.4, 30.0], [6.5, 30.0], [6.6, 30.0], [6.7, 30.0], [6.8, 30.0], [6.9, 31.0], [7.0, 31.0], [7.1, 31.0], [7.2, 31.0], [7.3, 32.0], [7.4, 32.0], [7.5, 32.0], [7.6, 33.0], [7.7, 33.0], [7.8, 34.0], [7.9, 34.0], [8.0, 35.0], [8.1, 35.0], [8.2, 36.0], [8.3, 36.0], [8.4, 37.0], [8.5, 37.0], [8.6, 38.0], [8.7, 38.0], [8.8, 39.0], [8.9, 39.0], [9.0, 39.0], [9.1, 39.0], [9.2, 40.0], [9.3, 40.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 42.0], [9.8, 42.0], [9.9, 42.0], [10.0, 43.0], [10.1, 43.0], [10.2, 44.0], [10.3, 44.0], [10.4, 45.0], [10.5, 45.0], [10.6, 46.0], [10.7, 46.0], [10.8, 47.0], [10.9, 47.0], [11.0, 47.0], [11.1, 48.0], [11.2, 48.0], [11.3, 49.0], [11.4, 49.0], [11.5, 50.0], [11.6, 50.0], [11.7, 51.0], [11.8, 51.0], [11.9, 52.0], [12.0, 53.0], [12.1, 53.0], [12.2, 54.0], [12.3, 54.0], [12.4, 55.0], [12.5, 55.0], [12.6, 56.0], [12.7, 56.0], [12.8, 56.0], [12.9, 57.0], [13.0, 57.0], [13.1, 57.0], [13.2, 58.0], [13.3, 58.0], [13.4, 58.0], [13.5, 58.0], [13.6, 59.0], [13.7, 59.0], [13.8, 59.0], [13.9, 60.0], [14.0, 60.0], [14.1, 60.0], [14.2, 61.0], [14.3, 61.0], [14.4, 61.0], [14.5, 62.0], [14.6, 62.0], [14.7, 63.0], [14.8, 63.0], [14.9, 64.0], [15.0, 64.0], [15.1, 65.0], [15.2, 65.0], [15.3, 66.0], [15.4, 66.0], [15.5, 66.0], [15.6, 67.0], [15.7, 67.0], [15.8, 68.0], [15.9, 68.0], [16.0, 69.0], [16.1, 69.0], [16.2, 69.0], [16.3, 70.0], [16.4, 70.0], [16.5, 71.0], [16.6, 71.0], [16.7, 72.0], [16.8, 72.0], [16.9, 72.0], [17.0, 73.0], [17.1, 73.0], [17.2, 74.0], [17.3, 74.0], [17.4, 75.0], [17.5, 76.0], [17.6, 76.0], [17.7, 76.0], [17.8, 77.0], [17.9, 77.0], [18.0, 77.0], [18.1, 78.0], [18.2, 78.0], [18.3, 79.0], [18.4, 79.0], [18.5, 79.0], [18.6, 80.0], [18.7, 80.0], [18.8, 80.0], [18.9, 81.0], [19.0, 81.0], [19.1, 81.0], [19.2, 81.0], [19.3, 81.0], [19.4, 81.0], [19.5, 82.0], [19.6, 82.0], [19.7, 82.0], [19.8, 82.0], [19.9, 82.0], [20.0, 83.0], [20.1, 83.0], [20.2, 83.0], [20.3, 83.0], [20.4, 83.0], [20.5, 83.0], [20.6, 84.0], [20.7, 84.0], [20.8, 84.0], [20.9, 84.0], [21.0, 84.0], [21.1, 84.0], [21.2, 85.0], [21.3, 85.0], [21.4, 85.0], [21.5, 85.0], [21.6, 85.0], [21.7, 85.0], [21.8, 86.0], [21.9, 86.0], [22.0, 86.0], [22.1, 86.0], [22.2, 86.0], [22.3, 86.0], [22.4, 87.0], [22.5, 87.0], [22.6, 87.0], [22.7, 87.0], [22.8, 87.0], [22.9, 87.0], [23.0, 87.0], [23.1, 87.0], [23.2, 88.0], [23.3, 88.0], [23.4, 88.0], [23.5, 88.0], [23.6, 88.0], [23.7, 88.0], [23.8, 88.0], [23.9, 88.0], [24.0, 89.0], [24.1, 89.0], [24.2, 89.0], [24.3, 89.0], [24.4, 89.0], [24.5, 89.0], [24.6, 89.0], [24.7, 89.0], [24.8, 90.0], [24.9, 90.0], [25.0, 90.0], [25.1, 90.0], [25.2, 90.0], [25.3, 90.0], [25.4, 90.0], [25.5, 91.0], [25.6, 91.0], [25.7, 91.0], [25.8, 91.0], [25.9, 91.0], [26.0, 91.0], [26.1, 91.0], [26.2, 91.0], [26.3, 92.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 92.0], [27.0, 93.0], [27.1, 93.0], [27.2, 93.0], [27.3, 93.0], [27.4, 93.0], [27.5, 93.0], [27.6, 93.0], [27.7, 94.0], [27.8, 94.0], [27.9, 94.0], [28.0, 94.0], [28.1, 94.0], [28.2, 94.0], [28.3, 95.0], [28.4, 95.0], [28.5, 95.0], [28.6, 95.0], [28.7, 95.0], [28.8, 95.0], [28.9, 96.0], [29.0, 96.0], [29.1, 96.0], [29.2, 96.0], [29.3, 96.0], [29.4, 96.0], [29.5, 97.0], [29.6, 97.0], [29.7, 97.0], [29.8, 97.0], [29.9, 97.0], [30.0, 97.0], [30.1, 98.0], [30.2, 98.0], [30.3, 98.0], [30.4, 98.0], [30.5, 98.0], [30.6, 98.0], [30.7, 99.0], [30.8, 99.0], [30.9, 99.0], [31.0, 99.0], [31.1, 99.0], [31.2, 100.0], [31.3, 100.0], [31.4, 100.0], [31.5, 100.0], [31.6, 100.0], [31.7, 101.0], [31.8, 101.0], [31.9, 101.0], [32.0, 101.0], [32.1, 101.0], [32.2, 101.0], [32.3, 102.0], [32.4, 102.0], [32.5, 102.0], [32.6, 102.0], [32.7, 102.0], [32.8, 102.0], [32.9, 102.0], [33.0, 103.0], [33.1, 103.0], [33.2, 103.0], [33.3, 103.0], [33.4, 103.0], [33.5, 103.0], [33.6, 103.0], [33.7, 103.0], [33.8, 104.0], [33.9, 104.0], [34.0, 104.0], [34.1, 104.0], [34.2, 104.0], [34.3, 104.0], [34.4, 104.0], [34.5, 105.0], [34.6, 105.0], [34.7, 105.0], [34.8, 105.0], [34.9, 105.0], [35.0, 105.0], [35.1, 105.0], [35.2, 105.0], [35.3, 106.0], [35.4, 106.0], [35.5, 106.0], [35.6, 106.0], [35.7, 106.0], [35.8, 106.0], [35.9, 106.0], [36.0, 106.0], [36.1, 106.0], [36.2, 107.0], [36.3, 107.0], [36.4, 107.0], [36.5, 107.0], [36.6, 107.0], [36.7, 107.0], [36.8, 107.0], [36.9, 107.0], [37.0, 107.0], [37.1, 108.0], [37.2, 108.0], [37.3, 108.0], [37.4, 108.0], [37.5, 108.0], [37.6, 108.0], [37.7, 108.0], [37.8, 108.0], [37.9, 108.0], [38.0, 108.0], [38.1, 109.0], [38.2, 109.0], [38.3, 109.0], [38.4, 109.0], [38.5, 109.0], [38.6, 109.0], [38.7, 109.0], [38.8, 109.0], [38.9, 109.0], [39.0, 109.0], [39.1, 109.0], [39.2, 109.0], [39.3, 110.0], [39.4, 110.0], [39.5, 110.0], [39.6, 110.0], [39.7, 110.0], [39.8, 110.0], [39.9, 110.0], [40.0, 110.0], [40.1, 110.0], [40.2, 110.0], [40.3, 110.0], [40.4, 110.0], [40.5, 111.0], [40.6, 111.0], [40.7, 111.0], [40.8, 111.0], [40.9, 111.0], [41.0, 111.0], [41.1, 111.0], [41.2, 111.0], [41.3, 111.0], [41.4, 111.0], [41.5, 111.0], [41.6, 111.0], [41.7, 111.0], [41.8, 112.0], [41.9, 112.0], [42.0, 112.0], [42.1, 112.0], [42.2, 112.0], [42.3, 112.0], [42.4, 112.0], [42.5, 112.0], [42.6, 112.0], [42.7, 112.0], [42.8, 112.0], [42.9, 113.0], [43.0, 113.0], [43.1, 113.0], [43.2, 113.0], [43.3, 113.0], [43.4, 113.0], [43.5, 113.0], [43.6, 113.0], [43.7, 113.0], [43.8, 113.0], [43.9, 113.0], [44.0, 114.0], [44.1, 114.0], [44.2, 114.0], [44.3, 114.0], [44.4, 114.0], [44.5, 114.0], [44.6, 114.0], [44.7, 114.0], [44.8, 114.0], [44.9, 114.0], [45.0, 114.0], [45.1, 114.0], [45.2, 114.0], [45.3, 115.0], [45.4, 115.0], [45.5, 115.0], [45.6, 115.0], [45.7, 115.0], [45.8, 115.0], [45.9, 115.0], [46.0, 115.0], [46.1, 115.0], [46.2, 115.0], [46.3, 115.0], [46.4, 116.0], [46.5, 116.0], [46.6, 116.0], [46.7, 116.0], [46.8, 116.0], [46.9, 116.0], [47.0, 116.0], [47.1, 116.0], [47.2, 116.0], [47.3, 116.0], [47.4, 116.0], [47.5, 117.0], [47.6, 117.0], [47.7, 117.0], [47.8, 117.0], [47.9, 117.0], [48.0, 117.0], [48.1, 117.0], [48.2, 117.0], [48.3, 117.0], [48.4, 117.0], [48.5, 117.0], [48.6, 117.0], [48.7, 118.0], [48.8, 118.0], [48.9, 118.0], [49.0, 118.0], [49.1, 118.0], [49.2, 118.0], [49.3, 118.0], [49.4, 118.0], [49.5, 118.0], [49.6, 118.0], [49.7, 118.0], [49.8, 119.0], [49.9, 119.0], [50.0, 119.0], [50.1, 119.0], [50.2, 119.0], [50.3, 119.0], [50.4, 119.0], [50.5, 119.0], [50.6, 119.0], [50.7, 119.0], [50.8, 120.0], [50.9, 120.0], [51.0, 120.0], [51.1, 120.0], [51.2, 120.0], [51.3, 120.0], [51.4, 120.0], [51.5, 120.0], [51.6, 120.0], [51.7, 120.0], [51.8, 120.0], [51.9, 121.0], [52.0, 121.0], [52.1, 121.0], [52.2, 121.0], [52.3, 121.0], [52.4, 121.0], [52.5, 121.0], [52.6, 121.0], [52.7, 121.0], [52.8, 122.0], [52.9, 122.0], [53.0, 122.0], [53.1, 122.0], [53.2, 122.0], [53.3, 122.0], [53.4, 122.0], [53.5, 122.0], [53.6, 123.0], [53.7, 123.0], [53.8, 123.0], [53.9, 123.0], [54.0, 123.0], [54.1, 123.0], [54.2, 123.0], [54.3, 123.0], [54.4, 123.0], [54.5, 123.0], [54.6, 124.0], [54.7, 124.0], [54.8, 124.0], [54.9, 124.0], [55.0, 124.0], [55.1, 124.0], [55.2, 124.0], [55.3, 124.0], [55.4, 124.0], [55.5, 124.0], [55.6, 125.0], [55.7, 125.0], [55.8, 125.0], [55.9, 125.0], [56.0, 125.0], [56.1, 125.0], [56.2, 125.0], [56.3, 125.0], [56.4, 125.0], [56.5, 125.0], [56.6, 125.0], [56.7, 126.0], [56.8, 126.0], [56.9, 126.0], [57.0, 126.0], [57.1, 126.0], [57.2, 126.0], [57.3, 126.0], [57.4, 126.0], [57.5, 126.0], [57.6, 126.0], [57.7, 126.0], [57.8, 127.0], [57.9, 127.0], [58.0, 127.0], [58.1, 127.0], [58.2, 127.0], [58.3, 127.0], [58.4, 127.0], [58.5, 127.0], [58.6, 127.0], [58.7, 127.0], [58.8, 127.0], [58.9, 127.0], [59.0, 128.0], [59.1, 128.0], [59.2, 128.0], [59.3, 128.0], [59.4, 128.0], [59.5, 128.0], [59.6, 128.0], [59.7, 128.0], [59.8, 128.0], [59.9, 128.0], [60.0, 129.0], [60.1, 129.0], [60.2, 129.0], [60.3, 129.0], [60.4, 129.0], [60.5, 129.0], [60.6, 129.0], [60.7, 129.0], [60.8, 129.0], [60.9, 129.0], [61.0, 129.0], [61.1, 130.0], [61.2, 130.0], [61.3, 130.0], [61.4, 130.0], [61.5, 130.0], [61.6, 130.0], [61.7, 130.0], [61.8, 130.0], [61.9, 130.0], [62.0, 130.0], [62.1, 130.0], [62.2, 130.0], [62.3, 130.0], [62.4, 131.0], [62.5, 131.0], [62.6, 131.0], [62.7, 131.0], [62.8, 131.0], [62.9, 131.0], [63.0, 131.0], [63.1, 131.0], [63.2, 131.0], [63.3, 131.0], [63.4, 131.0], [63.5, 131.0], [63.6, 131.0], [63.7, 131.0], [63.8, 131.0], [63.9, 131.0], [64.0, 132.0], [64.1, 132.0], [64.2, 132.0], [64.3, 132.0], [64.4, 132.0], [64.5, 132.0], [64.6, 132.0], [64.7, 132.0], [64.8, 132.0], [64.9, 132.0], [65.0, 132.0], [65.1, 132.0], [65.2, 132.0], [65.3, 132.0], [65.4, 132.0], [65.5, 133.0], [65.6, 133.0], [65.7, 133.0], [65.8, 133.0], [65.9, 133.0], [66.0, 133.0], [66.1, 133.0], [66.2, 133.0], [66.3, 133.0], [66.4, 133.0], [66.5, 133.0], [66.6, 133.0], [66.7, 134.0], [66.8, 134.0], [66.9, 134.0], [67.0, 134.0], [67.1, 134.0], [67.2, 134.0], [67.3, 134.0], [67.4, 134.0], [67.5, 134.0], [67.6, 134.0], [67.7, 134.0], [67.8, 135.0], [67.9, 135.0], [68.0, 135.0], [68.1, 135.0], [68.2, 135.0], [68.3, 135.0], [68.4, 135.0], [68.5, 135.0], [68.6, 135.0], [68.7, 135.0], [68.8, 135.0], [68.9, 135.0], [69.0, 136.0], [69.1, 136.0], [69.2, 136.0], [69.3, 136.0], [69.4, 136.0], [69.5, 136.0], [69.6, 136.0], [69.7, 136.0], [69.8, 136.0], [69.9, 136.0], [70.0, 136.0], [70.1, 136.0], [70.2, 136.0], [70.3, 136.0], [70.4, 137.0], [70.5, 137.0], [70.6, 137.0], [70.7, 137.0], [70.8, 137.0], [70.9, 137.0], [71.0, 137.0], [71.1, 137.0], [71.2, 137.0], [71.3, 137.0], [71.4, 137.0], [71.5, 137.0], [71.6, 137.0], [71.7, 138.0], [71.8, 138.0], [71.9, 138.0], [72.0, 138.0], [72.1, 138.0], [72.2, 138.0], [72.3, 138.0], [72.4, 138.0], [72.5, 138.0], [72.6, 138.0], [72.7, 138.0], [72.8, 138.0], [72.9, 139.0], [73.0, 139.0], [73.1, 139.0], [73.2, 139.0], [73.3, 139.0], [73.4, 139.0], [73.5, 139.0], [73.6, 139.0], [73.7, 139.0], [73.8, 139.0], [73.9, 139.0], [74.0, 140.0], [74.1, 140.0], [74.2, 140.0], [74.3, 140.0], [74.4, 140.0], [74.5, 140.0], [74.6, 140.0], [74.7, 140.0], [74.8, 140.0], [74.9, 140.0], [75.0, 141.0], [75.1, 141.0], [75.2, 141.0], [75.3, 141.0], [75.4, 141.0], [75.5, 141.0], [75.6, 141.0], [75.7, 141.0], [75.8, 142.0], [75.9, 142.0], [76.0, 142.0], [76.1, 142.0], [76.2, 142.0], [76.3, 142.0], [76.4, 142.0], [76.5, 142.0], [76.6, 143.0], [76.7, 143.0], [76.8, 143.0], [76.9, 143.0], [77.0, 143.0], [77.1, 143.0], [77.2, 143.0], [77.3, 144.0], [77.4, 144.0], [77.5, 144.0], [77.6, 144.0], [77.7, 144.0], [77.8, 144.0], [77.9, 145.0], [78.0, 145.0], [78.1, 145.0], [78.2, 145.0], [78.3, 145.0], [78.4, 145.0], [78.5, 145.0], [78.6, 145.0], [78.7, 146.0], [78.8, 146.0], [78.9, 146.0], [79.0, 146.0], [79.1, 146.0], [79.2, 146.0], [79.3, 146.0], [79.4, 147.0], [79.5, 147.0], [79.6, 147.0], [79.7, 147.0], [79.8, 147.0], [79.9, 147.0], [80.0, 148.0], [80.1, 148.0], [80.2, 148.0], [80.3, 148.0], [80.4, 148.0], [80.5, 149.0], [80.6, 149.0], [80.7, 149.0], [80.8, 149.0], [80.9, 149.0], [81.0, 150.0], [81.1, 150.0], [81.2, 150.0], [81.3, 150.0], [81.4, 150.0], [81.5, 150.0], [81.6, 151.0], [81.7, 151.0], [81.8, 151.0], [81.9, 151.0], [82.0, 152.0], [82.1, 152.0], [82.2, 152.0], [82.3, 152.0], [82.4, 153.0], [82.5, 153.0], [82.6, 153.0], [82.7, 153.0], [82.8, 154.0], [82.9, 154.0], [83.0, 154.0], [83.1, 154.0], [83.2, 155.0], [83.3, 155.0], [83.4, 155.0], [83.5, 156.0], [83.6, 156.0], [83.7, 156.0], [83.8, 157.0], [83.9, 157.0], [84.0, 157.0], [84.1, 158.0], [84.2, 158.0], [84.3, 158.0], [84.4, 159.0], [84.5, 159.0], [84.6, 160.0], [84.7, 160.0], [84.8, 160.0], [84.9, 161.0], [85.0, 161.0], [85.1, 161.0], [85.2, 162.0], [85.3, 162.0], [85.4, 163.0], [85.5, 163.0], [85.6, 164.0], [85.7, 165.0], [85.8, 165.0], [85.9, 166.0], [86.0, 167.0], [86.1, 168.0], [86.2, 169.0], [86.3, 169.0], [86.4, 170.0], [86.5, 171.0], [86.6, 172.0], [86.7, 173.0], [86.8, 174.0], [86.9, 174.0], [87.0, 175.0], [87.1, 177.0], [87.2, 178.0], [87.3, 179.0], [87.4, 180.0], [87.5, 181.0], [87.6, 182.0], [87.7, 183.0], [87.8, 185.0], [87.9, 186.0], [88.0, 186.0], [88.1, 188.0], [88.2, 189.0], [88.3, 191.0], [88.4, 193.0], [88.5, 195.0], [88.6, 199.0], [88.7, 201.0], [88.8, 203.0], [88.9, 204.0], [89.0, 206.0], [89.1, 209.0], [89.2, 210.0], [89.3, 213.0], [89.4, 216.0], [89.5, 218.0], [89.6, 219.0], [89.7, 222.0], [89.8, 223.0], [89.9, 225.0], [90.0, 227.0], [90.1, 230.0], [90.2, 230.0], [90.3, 231.0], [90.4, 233.0], [90.5, 236.0], [90.6, 239.0], [90.7, 241.0], [90.8, 244.0], [90.9, 249.0], [91.0, 251.0], [91.1, 253.0], [91.2, 257.0], [91.3, 262.0], [91.4, 266.0], [91.5, 270.0], [91.6, 274.0], [91.7, 278.0], [91.8, 284.0], [91.9, 288.0], [92.0, 298.0], [92.1, 309.0], [92.2, 315.0], [92.3, 321.0], [92.4, 331.0], [92.5, 344.0], [92.6, 358.0], [92.7, 368.0], [92.8, 370.0], [92.9, 375.0], [93.0, 379.0], [93.1, 384.0], [93.2, 388.0], [93.3, 392.0], [93.4, 395.0], [93.5, 398.0], [93.6, 403.0], [93.7, 407.0], [93.8, 412.0], [93.9, 420.0], [94.0, 432.0], [94.1, 449.0], [94.2, 460.0], [94.3, 473.0], [94.4, 488.0], [94.5, 493.0], [94.6, 512.0], [94.7, 703.0], [94.8, 1034.0], [94.9, 1039.0], [95.0, 1041.0], [95.1, 1045.0], [95.2, 1048.0], [95.3, 1051.0], [95.4, 1056.0], [95.5, 1064.0], [95.6, 1070.0], [95.7, 1074.0], [95.8, 1082.0], [95.9, 1087.0], [96.0, 1091.0], [96.1, 1095.0], [96.2, 1098.0], [96.3, 1100.0], [96.4, 1103.0], [96.5, 1105.0], [96.6, 1108.0], [96.7, 1110.0], [96.8, 1112.0], [96.9, 1114.0], [97.0, 1116.0], [97.1, 1118.0], [97.2, 1120.0], [97.3, 1123.0], [97.4, 1126.0], [97.5, 1130.0], [97.6, 1135.0], [97.7, 1149.0], [97.8, 1176.0], [97.9, 1193.0], [98.0, 1209.0], [98.1, 1226.0], [98.2, 1242.0], [98.3, 1293.0], [98.4, 2077.0], [98.5, 3042.0], [98.6, 3048.0], [98.7, 3060.0], [98.8, 3074.0], [98.9, 3086.0], [99.0, 3096.0], [99.1, 3099.0], [99.2, 3104.0], [99.3, 3109.0], [99.4, 3121.0], [99.5, 15049.0], [99.6, 15059.0], [99.7, 15067.0], [99.8, 15081.0], [99.9, 15168.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12812.0], [0.1, 12812.0], [0.2, 12812.0], [0.3, 12812.0], [0.4, 12812.0], [0.5, 12820.0], [0.6, 12820.0], [0.7, 12820.0], [0.8, 12820.0], [0.9, 12820.0], [1.0, 12820.0], [1.1, 12820.0], [1.2, 12820.0], [1.3, 12820.0], [1.4, 12820.0], [1.5, 12830.0], [1.6, 12830.0], [1.7, 12830.0], [1.8, 12830.0], [1.9, 12830.0], [2.0, 12831.0], [2.1, 12831.0], [2.2, 12831.0], [2.3, 12831.0], [2.4, 12831.0], [2.5, 12834.0], [2.6, 12834.0], [2.7, 12834.0], [2.8, 12834.0], [2.9, 12834.0], [3.0, 12846.0], [3.1, 12846.0], [3.2, 12846.0], [3.3, 12846.0], [3.4, 12846.0], [3.5, 12850.0], [3.6, 12850.0], [3.7, 12850.0], [3.8, 12850.0], [3.9, 12850.0], [4.0, 12854.0], [4.1, 12854.0], [4.2, 12854.0], [4.3, 12854.0], [4.4, 12854.0], [4.5, 12856.0], [4.6, 12856.0], [4.7, 12856.0], [4.8, 12856.0], [4.9, 12856.0], [5.0, 12864.0], [5.1, 12864.0], [5.2, 12864.0], [5.3, 12864.0], [5.4, 12864.0], [5.5, 12867.0], [5.6, 12867.0], [5.7, 12867.0], [5.8, 12867.0], [5.9, 12867.0], [6.0, 12871.0], [6.1, 12871.0], [6.2, 12871.0], [6.3, 12871.0], [6.4, 12871.0], [6.5, 12878.0], [6.6, 12878.0], [6.7, 12878.0], [6.8, 12878.0], [6.9, 12878.0], [7.0, 12882.0], [7.1, 12882.0], [7.2, 12882.0], [7.3, 12882.0], [7.4, 12882.0], [7.5, 12889.0], [7.6, 12889.0], [7.7, 12889.0], [7.8, 12889.0], [7.9, 12889.0], [8.0, 12894.0], [8.1, 12894.0], [8.2, 12894.0], [8.3, 12894.0], [8.4, 12894.0], [8.5, 12897.0], [8.6, 12897.0], [8.7, 12897.0], [8.8, 12897.0], [8.9, 12897.0], [9.0, 12904.0], [9.1, 12904.0], [9.2, 12904.0], [9.3, 12904.0], [9.4, 12904.0], [9.5, 12907.0], [9.6, 12907.0], [9.7, 12907.0], [9.8, 12907.0], [9.9, 12907.0], [10.0, 12908.0], [10.1, 12908.0], [10.2, 12908.0], [10.3, 12908.0], [10.4, 12908.0], [10.5, 12914.0], [10.6, 12914.0], [10.7, 12914.0], [10.8, 12914.0], [10.9, 12914.0], [11.0, 12928.0], [11.1, 12928.0], [11.2, 12928.0], [11.3, 12928.0], [11.4, 12928.0], [11.5, 12932.0], [11.6, 12932.0], [11.7, 12932.0], [11.8, 12932.0], [11.9, 12932.0], [12.0, 12935.0], [12.1, 12935.0], [12.2, 12935.0], [12.3, 12935.0], [12.4, 12935.0], [12.5, 12936.0], [12.6, 12936.0], [12.7, 12936.0], [12.8, 12936.0], [12.9, 12936.0], [13.0, 12944.0], [13.1, 12944.0], [13.2, 12944.0], [13.3, 12944.0], [13.4, 12944.0], [13.5, 12951.0], [13.6, 12951.0], [13.7, 12951.0], [13.8, 12951.0], [13.9, 12951.0], [14.0, 12952.0], [14.1, 12952.0], [14.2, 12952.0], [14.3, 12952.0], [14.4, 12952.0], [14.5, 12953.0], [14.6, 12953.0], [14.7, 12953.0], [14.8, 12953.0], [14.9, 12953.0], [15.0, 12953.0], [15.1, 12953.0], [15.2, 12953.0], [15.3, 12953.0], [15.4, 12953.0], [15.5, 12954.0], [15.6, 12954.0], [15.7, 12954.0], [15.8, 12954.0], [15.9, 12954.0], [16.0, 12954.0], [16.1, 12954.0], [16.2, 12954.0], [16.3, 12954.0], [16.4, 12954.0], [16.5, 12955.0], [16.6, 12955.0], [16.7, 12955.0], [16.8, 12955.0], [16.9, 12955.0], [17.0, 12955.0], [17.1, 12955.0], [17.2, 12955.0], [17.3, 12955.0], [17.4, 12955.0], [17.5, 12956.0], [17.6, 12956.0], [17.7, 12956.0], [17.8, 12956.0], [17.9, 12956.0], [18.0, 12956.0], [18.1, 12956.0], [18.2, 12956.0], [18.3, 12956.0], [18.4, 12956.0], [18.5, 12957.0], [18.6, 12957.0], [18.7, 12957.0], [18.8, 12957.0], [18.9, 12957.0], [19.0, 12958.0], [19.1, 12958.0], [19.2, 12958.0], [19.3, 12958.0], [19.4, 12958.0], [19.5, 12958.0], [19.6, 12958.0], [19.7, 12958.0], [19.8, 12958.0], [19.9, 12958.0], [20.0, 12965.0], [20.1, 12965.0], [20.2, 12965.0], [20.3, 12965.0], [20.4, 12965.0], [20.5, 12968.0], [20.6, 12968.0], [20.7, 12968.0], [20.8, 12968.0], [20.9, 12968.0], [21.0, 12970.0], [21.1, 12970.0], [21.2, 12970.0], [21.3, 12970.0], [21.4, 12970.0], [21.5, 12987.0], [21.6, 12987.0], [21.7, 12987.0], [21.8, 12987.0], [21.9, 12987.0], [22.0, 12995.0], [22.1, 12995.0], [22.2, 12995.0], [22.3, 12995.0], [22.4, 12995.0], [22.5, 12996.0], [22.6, 12996.0], [22.7, 12996.0], [22.8, 12996.0], [22.9, 12996.0], [23.0, 13004.0], [23.1, 13004.0], [23.2, 13004.0], [23.3, 13004.0], [23.4, 13004.0], [23.5, 13025.0], [23.6, 13025.0], [23.7, 13025.0], [23.8, 13025.0], [23.9, 13025.0], [24.0, 13042.0], [24.1, 13042.0], [24.2, 13042.0], [24.3, 13042.0], [24.4, 13042.0], [24.5, 13044.0], [24.6, 13044.0], [24.7, 13044.0], [24.8, 13044.0], [24.9, 13044.0], [25.0, 13064.0], [25.1, 13064.0], [25.2, 13064.0], [25.3, 13064.0], [25.4, 13064.0], [25.5, 13065.0], [25.6, 13065.0], [25.7, 13065.0], [25.8, 13065.0], [25.9, 13065.0], [26.0, 13065.0], [26.1, 13065.0], [26.2, 13065.0], [26.3, 13065.0], [26.4, 13065.0], [26.5, 13065.0], [26.6, 13065.0], [26.7, 13065.0], [26.8, 13065.0], [26.9, 13065.0], [27.0, 13066.0], [27.1, 13066.0], [27.2, 13066.0], [27.3, 13066.0], [27.4, 13066.0], [27.5, 13076.0], [27.6, 13076.0], [27.7, 13076.0], [27.8, 13076.0], [27.9, 13076.0], [28.0, 13091.0], [28.1, 13091.0], [28.2, 13091.0], [28.3, 13091.0], [28.4, 13091.0], [28.5, 13093.0], [28.6, 13093.0], [28.7, 13093.0], [28.8, 13093.0], [28.9, 13093.0], [29.0, 13100.0], [29.1, 13100.0], [29.2, 13100.0], [29.3, 13100.0], [29.4, 13100.0], [29.5, 13102.0], [29.6, 13102.0], [29.7, 13102.0], [29.8, 13102.0], [29.9, 13102.0], [30.0, 13103.0], [30.1, 13103.0], [30.2, 13103.0], [30.3, 13103.0], [30.4, 13103.0], [30.5, 13115.0], [30.6, 13115.0], [30.7, 13115.0], [30.8, 13115.0], [30.9, 13115.0], [31.0, 13116.0], [31.1, 13116.0], [31.2, 13116.0], [31.3, 13116.0], [31.4, 13116.0], [31.5, 13118.0], [31.6, 13118.0], [31.7, 13118.0], [31.8, 13118.0], [31.9, 13118.0], [32.0, 13120.0], [32.1, 13120.0], [32.2, 13120.0], [32.3, 13120.0], [32.4, 13120.0], [32.5, 13121.0], [32.6, 13121.0], [32.7, 13121.0], [32.8, 13121.0], [32.9, 13121.0], [33.0, 13122.0], [33.1, 13122.0], [33.2, 13122.0], [33.3, 13122.0], [33.4, 13122.0], [33.5, 13137.0], [33.6, 13137.0], [33.7, 13137.0], [33.8, 13137.0], [33.9, 13137.0], [34.0, 13138.0], [34.1, 13138.0], [34.2, 13138.0], [34.3, 13138.0], [34.4, 13138.0], [34.5, 13142.0], [34.6, 13142.0], [34.7, 13142.0], [34.8, 13142.0], [34.9, 13142.0], [35.0, 13144.0], [35.1, 13144.0], [35.2, 13144.0], [35.3, 13144.0], [35.4, 13144.0], [35.5, 13147.0], [35.6, 13147.0], [35.7, 13147.0], [35.8, 13147.0], [35.9, 13147.0], [36.0, 13148.0], [36.1, 13148.0], [36.2, 13148.0], [36.3, 13148.0], [36.4, 13148.0], [36.5, 13148.0], [36.6, 13148.0], [36.7, 13148.0], [36.8, 13148.0], [36.9, 13148.0], [37.0, 13151.0], [37.1, 13151.0], [37.2, 13151.0], [37.3, 13151.0], [37.4, 13151.0], [37.5, 13161.0], [37.6, 13161.0], [37.7, 13161.0], [37.8, 13161.0], [37.9, 13161.0], [38.0, 13162.0], [38.1, 13162.0], [38.2, 13162.0], [38.3, 13162.0], [38.4, 13162.0], [38.5, 13162.0], [38.6, 13162.0], [38.7, 13162.0], [38.8, 13162.0], [38.9, 13162.0], [39.0, 13162.0], [39.1, 13162.0], [39.2, 13162.0], [39.3, 13162.0], [39.4, 13162.0], [39.5, 13163.0], [39.6, 13163.0], [39.7, 13163.0], [39.8, 13163.0], [39.9, 13163.0], [40.0, 13163.0], [40.1, 13163.0], [40.2, 13163.0], [40.3, 13163.0], [40.4, 13163.0], [40.5, 13164.0], [40.6, 13164.0], [40.7, 13164.0], [40.8, 13164.0], [40.9, 13164.0], [41.0, 13164.0], [41.1, 13164.0], [41.2, 13164.0], [41.3, 13164.0], [41.4, 13164.0], [41.5, 13165.0], [41.6, 13165.0], [41.7, 13165.0], [41.8, 13165.0], [41.9, 13165.0], [42.0, 13166.0], [42.1, 13166.0], [42.2, 13166.0], [42.3, 13166.0], [42.4, 13166.0], [42.5, 13168.0], [42.6, 13168.0], [42.7, 13168.0], [42.8, 13168.0], [42.9, 13168.0], [43.0, 13173.0], [43.1, 13173.0], [43.2, 13173.0], [43.3, 13173.0], [43.4, 13173.0], [43.5, 13177.0], [43.6, 13177.0], [43.7, 13177.0], [43.8, 13177.0], [43.9, 13177.0], [44.0, 13178.0], [44.1, 13178.0], [44.2, 13178.0], [44.3, 13178.0], [44.4, 13178.0], [44.5, 13179.0], [44.6, 13179.0], [44.7, 13179.0], [44.8, 13179.0], [44.9, 13179.0], [45.0, 13180.0], [45.1, 13180.0], [45.2, 13180.0], [45.3, 13180.0], [45.4, 13180.0], [45.5, 13183.0], [45.6, 13183.0], [45.7, 13183.0], [45.8, 13183.0], [45.9, 13183.0], [46.0, 13183.0], [46.1, 13183.0], [46.2, 13183.0], [46.3, 13183.0], [46.4, 13183.0], [46.5, 13185.0], [46.6, 13185.0], [46.7, 13185.0], [46.8, 13185.0], [46.9, 13185.0], [47.0, 13254.0], [47.1, 13254.0], [47.2, 13254.0], [47.3, 13254.0], [47.4, 13254.0], [47.5, 13256.0], [47.6, 13256.0], [47.7, 13256.0], [47.8, 13256.0], [47.9, 13256.0], [48.0, 13259.0], [48.1, 13259.0], [48.2, 13259.0], [48.3, 13259.0], [48.4, 13259.0], [48.5, 13266.0], [48.6, 13266.0], [48.7, 13266.0], [48.8, 13266.0], [48.9, 13266.0], [49.0, 13269.0], [49.1, 13269.0], [49.2, 13269.0], [49.3, 13269.0], [49.4, 13269.0], [49.5, 13275.0], [49.6, 13275.0], [49.7, 13275.0], [49.8, 13275.0], [49.9, 13275.0], [50.0, 13276.0], [50.1, 13276.0], [50.2, 13276.0], [50.3, 13276.0], [50.4, 13276.0], [50.5, 13296.0], [50.6, 13296.0], [50.7, 13296.0], [50.8, 13296.0], [50.9, 13296.0], [51.0, 13298.0], [51.1, 13298.0], [51.2, 13298.0], [51.3, 13298.0], [51.4, 13298.0], [51.5, 13321.0], [51.6, 13321.0], [51.7, 13321.0], [51.8, 13321.0], [51.9, 13321.0], [52.0, 13333.0], [52.1, 13333.0], [52.2, 13333.0], [52.3, 13333.0], [52.4, 13333.0], [52.5, 13333.0], [52.6, 13333.0], [52.7, 13333.0], [52.8, 13333.0], [52.9, 13333.0], [53.0, 13338.0], [53.1, 13338.0], [53.2, 13338.0], [53.3, 13338.0], [53.4, 13338.0], [53.5, 13344.0], [53.6, 13344.0], [53.7, 13344.0], [53.8, 13344.0], [53.9, 13344.0], [54.0, 13351.0], [54.1, 13351.0], [54.2, 13351.0], [54.3, 13351.0], [54.4, 13351.0], [54.5, 13353.0], [54.6, 13353.0], [54.7, 13353.0], [54.8, 13353.0], [54.9, 13353.0], [55.0, 13359.0], [55.1, 13359.0], [55.2, 13359.0], [55.3, 13359.0], [55.4, 13359.0], [55.5, 13360.0], [55.6, 13360.0], [55.7, 13360.0], [55.8, 13360.0], [55.9, 13360.0], [56.0, 13366.0], [56.1, 13366.0], [56.2, 13366.0], [56.3, 13366.0], [56.4, 13366.0], [56.5, 13367.0], [56.6, 13367.0], [56.7, 13367.0], [56.8, 13367.0], [56.9, 13367.0], [57.0, 13371.0], [57.1, 13371.0], [57.2, 13371.0], [57.3, 13371.0], [57.4, 13371.0], [57.5, 13371.0], [57.6, 13371.0], [57.7, 13371.0], [57.8, 13371.0], [57.9, 13371.0], [58.0, 13372.0], [58.1, 13372.0], [58.2, 13372.0], [58.3, 13372.0], [58.4, 13372.0], [58.5, 13372.0], [58.6, 13372.0], [58.7, 13372.0], [58.8, 13372.0], [58.9, 13372.0], [59.0, 13375.0], [59.1, 13375.0], [59.2, 13375.0], [59.3, 13375.0], [59.4, 13375.0], [59.5, 13404.0], [59.6, 13404.0], [59.7, 13404.0], [59.8, 13404.0], [59.9, 13404.0], [60.0, 13406.0], [60.1, 13406.0], [60.2, 13406.0], [60.3, 13406.0], [60.4, 13406.0], [60.5, 13408.0], [60.6, 13408.0], [60.7, 13408.0], [60.8, 13408.0], [60.9, 13408.0], [61.0, 13410.0], [61.1, 13410.0], [61.2, 13410.0], [61.3, 13410.0], [61.4, 13410.0], [61.5, 13410.0], [61.6, 13410.0], [61.7, 13410.0], [61.8, 13410.0], [61.9, 13410.0], [62.0, 13411.0], [62.1, 13411.0], [62.2, 13411.0], [62.3, 13411.0], [62.4, 13411.0], [62.5, 13411.0], [62.6, 13411.0], [62.7, 13411.0], [62.8, 13411.0], [62.9, 13411.0], [63.0, 13412.0], [63.1, 13412.0], [63.2, 13412.0], [63.3, 13412.0], [63.4, 13412.0], [63.5, 13413.0], [63.6, 13413.0], [63.7, 13413.0], [63.8, 13413.0], [63.9, 13413.0], [64.0, 13414.0], [64.1, 13414.0], [64.2, 13414.0], [64.3, 13414.0], [64.4, 13414.0], [64.5, 13414.0], [64.6, 13414.0], [64.7, 13414.0], [64.8, 13414.0], [64.9, 13414.0], [65.0, 13414.0], [65.1, 13414.0], [65.2, 13414.0], [65.3, 13414.0], [65.4, 13414.0], [65.5, 13414.0], [65.6, 13414.0], [65.7, 13414.0], [65.8, 13414.0], [65.9, 13414.0], [66.0, 13415.0], [66.1, 13415.0], [66.2, 13415.0], [66.3, 13415.0], [66.4, 13415.0], [66.5, 13416.0], [66.6, 13416.0], [66.7, 13416.0], [66.8, 13416.0], [66.9, 13416.0], [67.0, 13438.0], [67.1, 13438.0], [67.2, 13438.0], [67.3, 13438.0], [67.4, 13438.0], [67.5, 13455.0], [67.6, 13455.0], [67.7, 13455.0], [67.8, 13455.0], [67.9, 13455.0], [68.0, 13455.0], [68.1, 13455.0], [68.2, 13455.0], [68.3, 13455.0], [68.4, 13455.0], [68.5, 13457.0], [68.6, 13457.0], [68.7, 13457.0], [68.8, 13457.0], [68.9, 13457.0], [69.0, 13460.0], [69.1, 13460.0], [69.2, 13460.0], [69.3, 13460.0], [69.4, 13460.0], [69.5, 13470.0], [69.6, 13470.0], [69.7, 13470.0], [69.8, 13470.0], [69.9, 13470.0], [70.0, 13471.0], [70.1, 13471.0], [70.2, 13471.0], [70.3, 13471.0], [70.4, 13471.0], [70.5, 13480.0], [70.6, 13480.0], [70.7, 13480.0], [70.8, 13480.0], [70.9, 13480.0], [71.0, 13481.0], [71.1, 13481.0], [71.2, 13481.0], [71.3, 13481.0], [71.4, 13481.0], [71.5, 13482.0], [71.6, 13482.0], [71.7, 13482.0], [71.8, 13482.0], [71.9, 13482.0], [72.0, 13484.0], [72.1, 13484.0], [72.2, 13484.0], [72.3, 13484.0], [72.4, 13484.0], [72.5, 13486.0], [72.6, 13486.0], [72.7, 13486.0], [72.8, 13486.0], [72.9, 13486.0], [73.0, 13488.0], [73.1, 13488.0], [73.2, 13488.0], [73.3, 13488.0], [73.4, 13488.0], [73.5, 13488.0], [73.6, 13488.0], [73.7, 13488.0], [73.8, 13488.0], [73.9, 13488.0], [74.0, 13488.0], [74.1, 13488.0], [74.2, 13488.0], [74.3, 13488.0], [74.4, 13488.0], [74.5, 13489.0], [74.6, 13489.0], [74.7, 13489.0], [74.8, 13489.0], [74.9, 13489.0], [75.0, 13495.0], [75.1, 13495.0], [75.2, 13495.0], [75.3, 13495.0], [75.4, 13495.0], [75.5, 13555.0], [75.6, 13555.0], [75.7, 13555.0], [75.8, 13555.0], [75.9, 13555.0], [76.0, 13565.0], [76.1, 13565.0], [76.2, 13565.0], [76.3, 13565.0], [76.4, 13565.0], [76.5, 13569.0], [76.6, 13569.0], [76.7, 13569.0], [76.8, 13569.0], [76.9, 13569.0], [77.0, 13579.0], [77.1, 13579.0], [77.2, 13579.0], [77.3, 13579.0], [77.4, 13579.0], [77.5, 13584.0], [77.6, 13584.0], [77.7, 13584.0], [77.8, 13584.0], [77.9, 13584.0], [78.0, 13587.0], [78.1, 13587.0], [78.2, 13587.0], [78.3, 13587.0], [78.4, 13587.0], [78.5, 13588.0], [78.6, 13588.0], [78.7, 13588.0], [78.8, 13588.0], [78.9, 13588.0], [79.0, 13604.0], [79.1, 13604.0], [79.2, 13604.0], [79.3, 13604.0], [79.4, 13604.0], [79.5, 13604.0], [79.6, 13604.0], [79.7, 13604.0], [79.8, 13604.0], [79.9, 13604.0], [80.0, 13613.0], [80.1, 13613.0], [80.2, 13613.0], [80.3, 13613.0], [80.4, 13613.0], [80.5, 13616.0], [80.6, 13616.0], [80.7, 13616.0], [80.8, 13616.0], [80.9, 13616.0], [81.0, 13626.0], [81.1, 13626.0], [81.2, 13626.0], [81.3, 13626.0], [81.4, 13626.0], [81.5, 13631.0], [81.6, 13631.0], [81.7, 13631.0], [81.8, 13631.0], [81.9, 13631.0], [82.0, 13631.0], [82.1, 13631.0], [82.2, 13631.0], [82.3, 13631.0], [82.4, 13631.0], [82.5, 13639.0], [82.6, 13639.0], [82.7, 13639.0], [82.8, 13639.0], [82.9, 13639.0], [83.0, 13642.0], [83.1, 13642.0], [83.2, 13642.0], [83.3, 13642.0], [83.4, 13642.0], [83.5, 13651.0], [83.6, 13651.0], [83.7, 13651.0], [83.8, 13651.0], [83.9, 13651.0], [84.0, 13654.0], [84.1, 13654.0], [84.2, 13654.0], [84.3, 13654.0], [84.4, 13654.0], [84.5, 13660.0], [84.6, 13660.0], [84.7, 13660.0], [84.8, 13660.0], [84.9, 13660.0], [85.0, 13663.0], [85.1, 13663.0], [85.2, 13663.0], [85.3, 13663.0], [85.4, 13663.0], [85.5, 13667.0], [85.6, 13667.0], [85.7, 13667.0], [85.8, 13667.0], [85.9, 13667.0], [86.0, 13674.0], [86.1, 13674.0], [86.2, 13674.0], [86.3, 13674.0], [86.4, 13674.0], [86.5, 13682.0], [86.6, 13682.0], [86.7, 13682.0], [86.8, 13682.0], [86.9, 13682.0], [87.0, 13682.0], [87.1, 13682.0], [87.2, 13682.0], [87.3, 13682.0], [87.4, 13682.0], [87.5, 13688.0], [87.6, 13688.0], [87.7, 13688.0], [87.8, 13688.0], [87.9, 13688.0], [88.0, 13694.0], [88.1, 13694.0], [88.2, 13694.0], [88.3, 13694.0], [88.4, 13694.0], [88.5, 13700.0], [88.6, 13700.0], [88.7, 13700.0], [88.8, 13700.0], [88.9, 13700.0], [89.0, 13707.0], [89.1, 13707.0], [89.2, 13707.0], [89.3, 13707.0], [89.4, 13707.0], [89.5, 13710.0], [89.6, 13710.0], [89.7, 13710.0], [89.8, 13710.0], [89.9, 13710.0], [90.0, 13710.0], [90.1, 13710.0], [90.2, 13710.0], [90.3, 13710.0], [90.4, 13710.0], [90.5, 13718.0], [90.6, 13718.0], [90.7, 13718.0], [90.8, 13718.0], [90.9, 13718.0], [91.0, 13723.0], [91.1, 13723.0], [91.2, 13723.0], [91.3, 13723.0], [91.4, 13723.0], [91.5, 13727.0], [91.6, 13727.0], [91.7, 13727.0], [91.8, 13727.0], [91.9, 13727.0], [92.0, 13727.0], [92.1, 13727.0], [92.2, 13727.0], [92.3, 13727.0], [92.4, 13727.0], [92.5, 13739.0], [92.6, 13739.0], [92.7, 13739.0], [92.8, 13739.0], [92.9, 13739.0], [93.0, 13743.0], [93.1, 13743.0], [93.2, 13743.0], [93.3, 13743.0], [93.4, 13743.0], [93.5, 13747.0], [93.6, 13747.0], [93.7, 13747.0], [93.8, 13747.0], [93.9, 13747.0], [94.0, 13758.0], [94.1, 13758.0], [94.2, 13758.0], [94.3, 13758.0], [94.4, 13758.0], [94.5, 13761.0], [94.6, 13761.0], [94.7, 13761.0], [94.8, 13761.0], [94.9, 13761.0], [95.0, 13766.0], [95.1, 13766.0], [95.2, 13766.0], [95.3, 13766.0], [95.4, 13766.0], [95.5, 13766.0], [95.6, 13766.0], [95.7, 13766.0], [95.8, 13766.0], [95.9, 13766.0], [96.0, 13771.0], [96.1, 13771.0], [96.2, 13771.0], [96.3, 13771.0], [96.4, 13771.0], [96.5, 13776.0], [96.6, 13776.0], [96.7, 13776.0], [96.8, 13776.0], [96.9, 13776.0], [97.0, 13778.0], [97.1, 13778.0], [97.2, 13778.0], [97.3, 13778.0], [97.4, 13778.0], [97.5, 13780.0], [97.6, 13780.0], [97.7, 13780.0], [97.8, 13780.0], [97.9, 13780.0], [98.0, 13792.0], [98.1, 13792.0], [98.2, 13792.0], [98.3, 13792.0], [98.4, 13792.0], [98.5, 13793.0], [98.6, 13793.0], [98.7, 13793.0], [98.8, 13793.0], [98.9, 13793.0], [99.0, 13800.0], [99.1, 13800.0], [99.2, 13800.0], [99.3, 13800.0], [99.4, 13800.0], [99.5, 13801.0], [99.6, 13801.0], [99.7, 13801.0], [99.8, 13801.0], [99.9, 13801.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 30026.0], [0.1, 30026.0], [0.2, 30026.0], [0.3, 30026.0], [0.4, 30026.0], [0.5, 30026.0], [0.6, 30026.0], [0.7, 30026.0], [0.8, 30026.0], [0.9, 30026.0], [1.0, 30026.0], [1.1, 30026.0], [1.2, 30026.0], [1.3, 30026.0], [1.4, 30026.0], [1.5, 30026.0], [1.6, 30026.0], [1.7, 30026.0], [1.8, 30026.0], [1.9, 30026.0], [2.0, 30026.0], [2.1, 30026.0], [2.2, 30026.0], [2.3, 30026.0], [2.4, 30026.0], [2.5, 30026.0], [2.6, 30026.0], [2.7, 30026.0], [2.8, 30026.0], [2.9, 30026.0], [3.0, 30026.0], [3.1, 30026.0], [3.2, 30026.0], [3.3, 30026.0], [3.4, 30026.0], [3.5, 30026.0], [3.6, 30026.0], [3.7, 30026.0], [3.8, 30026.0], [3.9, 30026.0], [4.0, 30027.0], [4.1, 30027.0], [4.2, 30027.0], [4.3, 30027.0], [4.4, 30027.0], [4.5, 30027.0], [4.6, 30027.0], [4.7, 30027.0], [4.8, 30027.0], [4.9, 30027.0], [5.0, 30027.0], [5.1, 30027.0], [5.2, 30027.0], [5.3, 30027.0], [5.4, 30027.0], [5.5, 30027.0], [5.6, 30027.0], [5.7, 30027.0], [5.8, 30027.0], [5.9, 30027.0], [6.0, 30027.0], [6.1, 30027.0], [6.2, 30027.0], [6.3, 30027.0], [6.4, 30027.0], [6.5, 30027.0], [6.6, 30027.0], [6.7, 30027.0], [6.8, 30027.0], [6.9, 30027.0], [7.0, 30027.0], [7.1, 30027.0], [7.2, 30027.0], [7.3, 30027.0], [7.4, 30027.0], [7.5, 30027.0], [7.6, 30027.0], [7.7, 30027.0], [7.8, 30027.0], [7.9, 30027.0], [8.0, 30027.0], [8.1, 30027.0], [8.2, 30027.0], [8.3, 30027.0], [8.4, 30027.0], [8.5, 30027.0], [8.6, 30027.0], [8.7, 30027.0], [8.8, 30027.0], [8.9, 30027.0], [9.0, 30027.0], [9.1, 30027.0], [9.2, 30027.0], [9.3, 30027.0], [9.4, 30027.0], [9.5, 30027.0], [9.6, 30027.0], [9.7, 30027.0], [9.8, 30027.0], [9.9, 30027.0], [10.0, 30027.0], [10.1, 30027.0], [10.2, 30027.0], [10.3, 30027.0], [10.4, 30027.0], [10.5, 30027.0], [10.6, 30027.0], [10.7, 30027.0], [10.8, 30027.0], [10.9, 30027.0], [11.0, 30027.0], [11.1, 30027.0], [11.2, 30027.0], [11.3, 30027.0], [11.4, 30027.0], [11.5, 30027.0], [11.6, 30027.0], [11.7, 30027.0], [11.8, 30027.0], [11.9, 30027.0], [12.0, 30027.0], [12.1, 30027.0], [12.2, 30027.0], [12.3, 30027.0], [12.4, 30027.0], [12.5, 30027.0], [12.6, 30027.0], [12.7, 30027.0], [12.8, 30027.0], [12.9, 30027.0], [13.0, 30027.0], [13.1, 30027.0], [13.2, 30027.0], [13.3, 30027.0], [13.4, 30027.0], [13.5, 30027.0], [13.6, 30027.0], [13.7, 30027.0], [13.8, 30027.0], [13.9, 30027.0], [14.0, 30027.0], [14.1, 30027.0], [14.2, 30027.0], [14.3, 30027.0], [14.4, 30027.0], [14.5, 30027.0], [14.6, 30027.0], [14.7, 30027.0], [14.8, 30027.0], [14.9, 30027.0], [15.0, 30027.0], [15.1, 30027.0], [15.2, 30027.0], [15.3, 30027.0], [15.4, 30027.0], [15.5, 30027.0], [15.6, 30027.0], [15.7, 30027.0], [15.8, 30027.0], [15.9, 30027.0], [16.0, 30027.0], [16.1, 30027.0], [16.2, 30027.0], [16.3, 30027.0], [16.4, 30027.0], [16.5, 30027.0], [16.6, 30027.0], [16.7, 30027.0], [16.8, 30027.0], [16.9, 30027.0], [17.0, 30027.0], [17.1, 30027.0], [17.2, 30027.0], [17.3, 30027.0], [17.4, 30027.0], [17.5, 30027.0], [17.6, 30027.0], [17.7, 30027.0], [17.8, 30027.0], [17.9, 30027.0], [18.0, 30027.0], [18.1, 30027.0], [18.2, 30027.0], [18.3, 30027.0], [18.4, 30027.0], [18.5, 30027.0], [18.6, 30027.0], [18.7, 30027.0], [18.8, 30027.0], [18.9, 30027.0], [19.0, 30027.0], [19.1, 30027.0], [19.2, 30027.0], [19.3, 30027.0], [19.4, 30027.0], [19.5, 30027.0], [19.6, 30027.0], [19.7, 30027.0], [19.8, 30027.0], [19.9, 30027.0], [20.0, 30027.0], [20.1, 30027.0], [20.2, 30027.0], [20.3, 30027.0], [20.4, 30027.0], [20.5, 30027.0], [20.6, 30027.0], [20.7, 30027.0], [20.8, 30027.0], [20.9, 30027.0], [21.0, 30027.0], [21.1, 30027.0], [21.2, 30027.0], [21.3, 30027.0], [21.4, 30027.0], [21.5, 30027.0], [21.6, 30027.0], [21.7, 30027.0], [21.8, 30027.0], [21.9, 30027.0], [22.0, 30027.0], [22.1, 30027.0], [22.2, 30027.0], [22.3, 30027.0], [22.4, 30027.0], [22.5, 30027.0], [22.6, 30027.0], [22.7, 30027.0], [22.8, 30027.0], [22.9, 30027.0], [23.0, 30027.0], [23.1, 30027.0], [23.2, 30027.0], [23.3, 30027.0], [23.4, 30027.0], [23.5, 30027.0], [23.6, 30027.0], [23.7, 30027.0], [23.8, 30027.0], [23.9, 30027.0], [24.0, 30027.0], [24.1, 30027.0], [24.2, 30027.0], [24.3, 30027.0], [24.4, 30027.0], [24.5, 30027.0], [24.6, 30027.0], [24.7, 30027.0], [24.8, 30027.0], [24.9, 30027.0], [25.0, 30028.0], [25.1, 30028.0], [25.2, 30028.0], [25.3, 30028.0], [25.4, 30028.0], [25.5, 30028.0], [25.6, 30028.0], [25.7, 30028.0], [25.8, 30028.0], [25.9, 30028.0], [26.0, 30028.0], [26.1, 30028.0], [26.2, 30028.0], [26.3, 30028.0], [26.4, 30028.0], [26.5, 30028.0], [26.6, 30028.0], [26.7, 30028.0], [26.8, 30028.0], [26.9, 30028.0], [27.0, 30028.0], [27.1, 30028.0], [27.2, 30028.0], [27.3, 30028.0], [27.4, 30028.0], [27.5, 30028.0], [27.6, 30028.0], [27.7, 30028.0], [27.8, 30028.0], [27.9, 30028.0], [28.0, 30028.0], [28.1, 30028.0], [28.2, 30028.0], [28.3, 30028.0], [28.4, 30028.0], [28.5, 30028.0], [28.6, 30028.0], [28.7, 30028.0], [28.8, 30028.0], [28.9, 30028.0], [29.0, 30028.0], [29.1, 30028.0], [29.2, 30028.0], [29.3, 30028.0], [29.4, 30028.0], [29.5, 30028.0], [29.6, 30028.0], [29.7, 30028.0], [29.8, 30028.0], [29.9, 30028.0], [30.0, 30028.0], [30.1, 30028.0], [30.2, 30028.0], [30.3, 30028.0], [30.4, 30028.0], [30.5, 30028.0], [30.6, 30028.0], [30.7, 30028.0], [30.8, 30028.0], [30.9, 30028.0], [31.0, 30028.0], [31.1, 30028.0], [31.2, 30028.0], [31.3, 30028.0], [31.4, 30028.0], [31.5, 30028.0], [31.6, 30028.0], [31.7, 30028.0], [31.8, 30028.0], [31.9, 30028.0], [32.0, 30028.0], [32.1, 30028.0], [32.2, 30028.0], [32.3, 30028.0], [32.4, 30028.0], [32.5, 30028.0], [32.6, 30028.0], [32.7, 30028.0], [32.8, 30028.0], [32.9, 30028.0], [33.0, 30028.0], [33.1, 30028.0], [33.2, 30028.0], [33.3, 30028.0], [33.4, 30028.0], [33.5, 30028.0], [33.6, 30028.0], [33.7, 30028.0], [33.8, 30028.0], [33.9, 30028.0], [34.0, 30028.0], [34.1, 30028.0], [34.2, 30028.0], [34.3, 30028.0], [34.4, 30028.0], [34.5, 30028.0], [34.6, 30028.0], [34.7, 30028.0], [34.8, 30028.0], [34.9, 30028.0], [35.0, 30028.0], [35.1, 30028.0], [35.2, 30028.0], [35.3, 30028.0], [35.4, 30028.0], [35.5, 30028.0], [35.6, 30028.0], [35.7, 30028.0], [35.8, 30028.0], [35.9, 30028.0], [36.0, 30028.0], [36.1, 30028.0], [36.2, 30028.0], [36.3, 30028.0], [36.4, 30028.0], [36.5, 30028.0], [36.6, 30028.0], [36.7, 30028.0], [36.8, 30028.0], [36.9, 30028.0], [37.0, 30028.0], [37.1, 30028.0], [37.2, 30028.0], [37.3, 30028.0], [37.4, 30028.0], [37.5, 30028.0], [37.6, 30028.0], [37.7, 30028.0], [37.8, 30028.0], [37.9, 30028.0], [38.0, 30028.0], [38.1, 30028.0], [38.2, 30028.0], [38.3, 30028.0], [38.4, 30028.0], [38.5, 30028.0], [38.6, 30028.0], [38.7, 30028.0], [38.8, 30028.0], [38.9, 30028.0], [39.0, 30028.0], [39.1, 30028.0], [39.2, 30028.0], [39.3, 30028.0], [39.4, 30028.0], [39.5, 30028.0], [39.6, 30028.0], [39.7, 30028.0], [39.8, 30028.0], [39.9, 30028.0], [40.0, 30028.0], [40.1, 30028.0], [40.2, 30028.0], [40.3, 30028.0], [40.4, 30028.0], [40.5, 30028.0], [40.6, 30028.0], [40.7, 30028.0], [40.8, 30028.0], [40.9, 30028.0], [41.0, 30028.0], [41.1, 30028.0], [41.2, 30028.0], [41.3, 30028.0], [41.4, 30028.0], [41.5, 30028.0], [41.6, 30028.0], [41.7, 30028.0], [41.8, 30028.0], [41.9, 30028.0], [42.0, 30028.0], [42.1, 30028.0], [42.2, 30028.0], [42.3, 30028.0], [42.4, 30028.0], [42.5, 30028.0], [42.6, 30028.0], [42.7, 30028.0], [42.8, 30028.0], [42.9, 30028.0], [43.0, 30028.0], [43.1, 30028.0], [43.2, 30028.0], [43.3, 30028.0], [43.4, 30028.0], [43.5, 30028.0], [43.6, 30028.0], [43.7, 30028.0], [43.8, 30028.0], [43.9, 30028.0], [44.0, 30028.0], [44.1, 30028.0], [44.2, 30028.0], [44.3, 30028.0], [44.4, 30028.0], [44.5, 30028.0], [44.6, 30028.0], [44.7, 30028.0], [44.8, 30028.0], [44.9, 30028.0], [45.0, 30028.0], [45.1, 30028.0], [45.2, 30028.0], [45.3, 30028.0], [45.4, 30028.0], [45.5, 30028.0], [45.6, 30028.0], [45.7, 30028.0], [45.8, 30028.0], [45.9, 30028.0], [46.0, 30028.0], [46.1, 30028.0], [46.2, 30028.0], [46.3, 30028.0], [46.4, 30028.0], [46.5, 30028.0], [46.6, 30028.0], [46.7, 30028.0], [46.8, 30028.0], [46.9, 30028.0], [47.0, 30028.0], [47.1, 30028.0], [47.2, 30028.0], [47.3, 30028.0], [47.4, 30028.0], [47.5, 30028.0], [47.6, 30028.0], [47.7, 30028.0], [47.8, 30028.0], [47.9, 30028.0], [48.0, 30028.0], [48.1, 30028.0], [48.2, 30028.0], [48.3, 30028.0], [48.4, 30028.0], [48.5, 30028.0], [48.6, 30028.0], [48.7, 30028.0], [48.8, 30028.0], [48.9, 30028.0], [49.0, 30028.0], [49.1, 30028.0], [49.2, 30028.0], [49.3, 30028.0], [49.4, 30028.0], [49.5, 30028.0], [49.6, 30028.0], [49.7, 30028.0], [49.8, 30028.0], [49.9, 30028.0], [50.0, 30028.0], [50.1, 30028.0], [50.2, 30028.0], [50.3, 30028.0], [50.4, 30028.0], [50.5, 30028.0], [50.6, 30028.0], [50.7, 30028.0], [50.8, 30028.0], [50.9, 30028.0], [51.0, 30028.0], [51.1, 30028.0], [51.2, 30028.0], [51.3, 30028.0], [51.4, 30028.0], [51.5, 30028.0], [51.6, 30028.0], [51.7, 30028.0], [51.8, 30028.0], [51.9, 30028.0], [52.0, 30028.0], [52.1, 30028.0], [52.2, 30028.0], [52.3, 30028.0], [52.4, 30028.0], [52.5, 30028.0], [52.6, 30028.0], [52.7, 30028.0], [52.8, 30028.0], [52.9, 30028.0], [53.0, 30028.0], [53.1, 30028.0], [53.2, 30028.0], [53.3, 30028.0], [53.4, 30028.0], [53.5, 30028.0], [53.6, 30028.0], [53.7, 30028.0], [53.8, 30028.0], [53.9, 30028.0], [54.0, 30028.0], [54.1, 30028.0], [54.2, 30028.0], [54.3, 30028.0], [54.4, 30028.0], [54.5, 30028.0], [54.6, 30028.0], [54.7, 30028.0], [54.8, 30028.0], [54.9, 30028.0], [55.0, 30028.0], [55.1, 30028.0], [55.2, 30028.0], [55.3, 30028.0], [55.4, 30028.0], [55.5, 30029.0], [55.6, 30029.0], [55.7, 30029.0], [55.8, 30029.0], [55.9, 30029.0], [56.0, 30029.0], [56.1, 30029.0], [56.2, 30029.0], [56.3, 30029.0], [56.4, 30029.0], [56.5, 30029.0], [56.6, 30029.0], [56.7, 30029.0], [56.8, 30029.0], [56.9, 30029.0], [57.0, 30029.0], [57.1, 30029.0], [57.2, 30029.0], [57.3, 30029.0], [57.4, 30029.0], [57.5, 30029.0], [57.6, 30029.0], [57.7, 30029.0], [57.8, 30029.0], [57.9, 30029.0], [58.0, 30029.0], [58.1, 30029.0], [58.2, 30029.0], [58.3, 30029.0], [58.4, 30029.0], [58.5, 30029.0], [58.6, 30029.0], [58.7, 30029.0], [58.8, 30029.0], [58.9, 30029.0], [59.0, 30029.0], [59.1, 30029.0], [59.2, 30029.0], [59.3, 30029.0], [59.4, 30029.0], [59.5, 30029.0], [59.6, 30029.0], [59.7, 30029.0], [59.8, 30029.0], [59.9, 30029.0], [60.0, 30029.0], [60.1, 30029.0], [60.2, 30029.0], [60.3, 30029.0], [60.4, 30029.0], [60.5, 30029.0], [60.6, 30029.0], [60.7, 30029.0], [60.8, 30029.0], [60.9, 30029.0], [61.0, 30029.0], [61.1, 30029.0], [61.2, 30029.0], [61.3, 30029.0], [61.4, 30029.0], [61.5, 30029.0], [61.6, 30029.0], [61.7, 30029.0], [61.8, 30029.0], [61.9, 30029.0], [62.0, 30029.0], [62.1, 30029.0], [62.2, 30029.0], [62.3, 30029.0], [62.4, 30029.0], [62.5, 30029.0], [62.6, 30029.0], [62.7, 30029.0], [62.8, 30029.0], [62.9, 30029.0], [63.0, 30029.0], [63.1, 30029.0], [63.2, 30029.0], [63.3, 30029.0], [63.4, 30029.0], [63.5, 30029.0], [63.6, 30029.0], [63.7, 30029.0], [63.8, 30029.0], [63.9, 30029.0], [64.0, 30029.0], [64.1, 30029.0], [64.2, 30029.0], [64.3, 30029.0], [64.4, 30029.0], [64.5, 30029.0], [64.6, 30029.0], [64.7, 30029.0], [64.8, 30029.0], [64.9, 30029.0], [65.0, 30029.0], [65.1, 30029.0], [65.2, 30029.0], [65.3, 30029.0], [65.4, 30029.0], [65.5, 30029.0], [65.6, 30029.0], [65.7, 30029.0], [65.8, 30029.0], [65.9, 30029.0], [66.0, 30029.0], [66.1, 30029.0], [66.2, 30029.0], [66.3, 30029.0], [66.4, 30029.0], [66.5, 30029.0], [66.6, 30029.0], [66.7, 30029.0], [66.8, 30029.0], [66.9, 30029.0], [67.0, 30029.0], [67.1, 30029.0], [67.2, 30029.0], [67.3, 30029.0], [67.4, 30029.0], [67.5, 30029.0], [67.6, 30029.0], [67.7, 30029.0], [67.8, 30029.0], [67.9, 30029.0], [68.0, 30029.0], [68.1, 30029.0], [68.2, 30029.0], [68.3, 30029.0], [68.4, 30029.0], [68.5, 30029.0], [68.6, 30029.0], [68.7, 30029.0], [68.8, 30029.0], [68.9, 30029.0], [69.0, 30029.0], [69.1, 30029.0], [69.2, 30029.0], [69.3, 30029.0], [69.4, 30029.0], [69.5, 30029.0], [69.6, 30029.0], [69.7, 30029.0], [69.8, 30029.0], [69.9, 30029.0], [70.0, 30029.0], [70.1, 30029.0], [70.2, 30029.0], [70.3, 30029.0], [70.4, 30029.0], [70.5, 30030.0], [70.6, 30030.0], [70.7, 30030.0], [70.8, 30030.0], [70.9, 30030.0], [71.0, 30030.0], [71.1, 30030.0], [71.2, 30030.0], [71.3, 30030.0], [71.4, 30030.0], [71.5, 30030.0], [71.6, 30030.0], [71.7, 30030.0], [71.8, 30030.0], [71.9, 30030.0], [72.0, 30030.0], [72.1, 30030.0], [72.2, 30030.0], [72.3, 30030.0], [72.4, 30030.0], [72.5, 30030.0], [72.6, 30030.0], [72.7, 30030.0], [72.8, 30030.0], [72.9, 30030.0], [73.0, 30030.0], [73.1, 30030.0], [73.2, 30030.0], [73.3, 30030.0], [73.4, 30030.0], [73.5, 30030.0], [73.6, 30030.0], [73.7, 30030.0], [73.8, 30030.0], [73.9, 30030.0], [74.0, 30030.0], [74.1, 30030.0], [74.2, 30030.0], [74.3, 30030.0], [74.4, 30030.0], [74.5, 30030.0], [74.6, 30030.0], [74.7, 30030.0], [74.8, 30030.0], [74.9, 30030.0], [75.0, 30030.0], [75.1, 30030.0], [75.2, 30030.0], [75.3, 30030.0], [75.4, 30030.0], [75.5, 30030.0], [75.6, 30030.0], [75.7, 30030.0], [75.8, 30030.0], [75.9, 30030.0], [76.0, 30030.0], [76.1, 30030.0], [76.2, 30030.0], [76.3, 30030.0], [76.4, 30030.0], [76.5, 30031.0], [76.6, 30031.0], [76.7, 30031.0], [76.8, 30031.0], [76.9, 30031.0], [77.0, 30031.0], [77.1, 30031.0], [77.2, 30031.0], [77.3, 30031.0], [77.4, 30031.0], [77.5, 30031.0], [77.6, 30031.0], [77.7, 30031.0], [77.8, 30031.0], [77.9, 30031.0], [78.0, 30031.0], [78.1, 30031.0], [78.2, 30031.0], [78.3, 30031.0], [78.4, 30031.0], [78.5, 30031.0], [78.6, 30031.0], [78.7, 30031.0], [78.8, 30031.0], [78.9, 30031.0], [79.0, 30031.0], [79.1, 30031.0], [79.2, 30031.0], [79.3, 30031.0], [79.4, 30031.0], [79.5, 30032.0], [79.6, 30032.0], [79.7, 30032.0], [79.8, 30032.0], [79.9, 30032.0], [80.0, 30032.0], [80.1, 30032.0], [80.2, 30032.0], [80.3, 30032.0], [80.4, 30032.0], [80.5, 30032.0], [80.6, 30032.0], [80.7, 30032.0], [80.8, 30032.0], [80.9, 30032.0], [81.0, 30032.0], [81.1, 30032.0], [81.2, 30032.0], [81.3, 30032.0], [81.4, 30032.0], [81.5, 30033.0], [81.6, 30033.0], [81.7, 30033.0], [81.8, 30033.0], [81.9, 30033.0], [82.0, 30033.0], [82.1, 30033.0], [82.2, 30033.0], [82.3, 30033.0], [82.4, 30033.0], [82.5, 30033.0], [82.6, 30033.0], [82.7, 30033.0], [82.8, 30033.0], [82.9, 30033.0], [83.0, 30033.0], [83.1, 30033.0], [83.2, 30033.0], [83.3, 30033.0], [83.4, 30033.0], [83.5, 30033.0], [83.6, 30033.0], [83.7, 30033.0], [83.8, 30033.0], [83.9, 30033.0], [84.0, 30034.0], [84.1, 30034.0], [84.2, 30034.0], [84.3, 30034.0], [84.4, 30034.0], [84.5, 30034.0], [84.6, 30034.0], [84.7, 30034.0], [84.8, 30034.0], [84.9, 30034.0], [85.0, 30034.0], [85.1, 30034.0], [85.2, 30034.0], [85.3, 30034.0], [85.4, 30034.0], [85.5, 30034.0], [85.6, 30034.0], [85.7, 30034.0], [85.8, 30034.0], [85.9, 30034.0], [86.0, 30035.0], [86.1, 30035.0], [86.2, 30035.0], [86.3, 30035.0], [86.4, 30035.0], [86.5, 30035.0], [86.6, 30035.0], [86.7, 30035.0], [86.8, 30035.0], [86.9, 30035.0], [87.0, 30036.0], [87.1, 30036.0], [87.2, 30036.0], [87.3, 30036.0], [87.4, 30036.0], [87.5, 30036.0], [87.6, 30036.0], [87.7, 30036.0], [87.8, 30036.0], [87.9, 30036.0], [88.0, 30036.0], [88.1, 30036.0], [88.2, 30036.0], [88.3, 30036.0], [88.4, 30036.0], [88.5, 30037.0], [88.6, 30037.0], [88.7, 30037.0], [88.8, 30037.0], [88.9, 30037.0], [89.0, 30038.0], [89.1, 30038.0], [89.2, 30038.0], [89.3, 30038.0], [89.4, 30038.0], [89.5, 30038.0], [89.6, 30038.0], [89.7, 30038.0], [89.8, 30038.0], [89.9, 30038.0], [90.0, 30039.0], [90.1, 30039.0], [90.2, 30039.0], [90.3, 30039.0], [90.4, 30039.0], [90.5, 30040.0], [90.6, 30040.0], [90.7, 30040.0], [90.8, 30040.0], [90.9, 30040.0], [91.0, 30041.0], [91.1, 30041.0], [91.2, 30041.0], [91.3, 30041.0], [91.4, 30041.0], [91.5, 30041.0], [91.6, 30041.0], [91.7, 30041.0], [91.8, 30041.0], [91.9, 30041.0], [92.0, 30041.0], [92.1, 30041.0], [92.2, 30041.0], [92.3, 30041.0], [92.4, 30041.0], [92.5, 30042.0], [92.6, 30042.0], [92.7, 30042.0], [92.8, 30042.0], [92.9, 30042.0], [93.0, 30043.0], [93.1, 30043.0], [93.2, 30043.0], [93.3, 30043.0], [93.4, 30043.0], [93.5, 30046.0], [93.6, 30046.0], [93.7, 30046.0], [93.8, 30046.0], [93.9, 30046.0], [94.0, 30046.0], [94.1, 30046.0], [94.2, 30046.0], [94.3, 30046.0], [94.4, 30046.0], [94.5, 30046.0], [94.6, 30046.0], [94.7, 30046.0], [94.8, 30046.0], [94.9, 30046.0], [95.0, 30047.0], [95.1, 30047.0], [95.2, 30047.0], [95.3, 30047.0], [95.4, 30047.0], [95.5, 30049.0], [95.6, 30049.0], [95.7, 30049.0], [95.8, 30049.0], [95.9, 30049.0], [96.0, 30051.0], [96.1, 30051.0], [96.2, 30051.0], [96.3, 30051.0], [96.4, 30051.0], [96.5, 30052.0], [96.6, 30052.0], [96.7, 30052.0], [96.8, 30052.0], [96.9, 30052.0], [97.0, 30053.0], [97.1, 30053.0], [97.2, 30053.0], [97.3, 30053.0], [97.4, 30053.0], [97.5, 30054.0], [97.6, 30054.0], [97.7, 30054.0], [97.8, 30054.0], [97.9, 30054.0], [98.0, 30056.0], [98.1, 30056.0], [98.2, 30056.0], [98.3, 30056.0], [98.4, 30056.0], [98.5, 30057.0], [98.6, 30057.0], [98.7, 30057.0], [98.8, 30057.0], [98.9, 30057.0], [99.0, 30063.0], [99.1, 30063.0], [99.2, 30063.0], [99.3, 30063.0], [99.4, 30063.0], [99.5, 30067.0], [99.6, 30067.0], [99.7, 30067.0], [99.8, 30067.0], [99.9, 30067.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 22995.0, "series": [{"data": [[0.0, 12463.0], [600.0, 14.0], [700.0, 21.0], [15000.0, 152.0], [15100.0, 24.0], [15200.0, 3.0], [1000.0, 612.0], [1100.0, 675.0], [1200.0, 147.0], [1300.0, 21.0], [21000.0, 21.0], [1400.0, 8.0], [1500.0, 1.0], [100.0, 22995.0], [2000.0, 9.0], [2100.0, 1.0], [2300.0, 3.0], [2200.0, 4.0], [3000.0, 270.0], [3100.0, 153.0], [200.0, 1347.0], [3200.0, 3.0], [3400.0, 1.0], [300.0, 618.0], [400.0, 407.0], [7100.0, 2.0], [500.0, 25.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[13100.0, 36.0], [12800.0, 18.0], [12900.0, 28.0], [13000.0, 12.0], [13300.0, 16.0], [13200.0, 9.0], [13700.0, 21.0], [13400.0, 32.0], [13500.0, 7.0], [13600.0, 19.0], [13800.0, 2.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[30000.0, 200.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 30000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 25213.0, "series": [{"data": [[0.0, 12677.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 25213.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 2489.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 21.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 100.65000000000003, "minX": 1.61757912E12, "maxY": 191.80167121418853, "series": [{"data": [[1.61757912E12, 116.22999999999996]], "isOverall": false, "label": "CreateRoom-SelectFC-Ready", "isController": false}, {"data": [[1.61757918E12, 174.7807017543875], [1.61757912E12, 191.80167121418853]], "isOverall": false, "label": "JoinServer+ChangeNickName+JoinRoom&Ready", "isController": false}, {"data": [[1.61757918E12, 100.65000000000003]], "isOverall": false, "label": "JoinServer+JoinRoom&waitfor(1min)ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757918E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 30058.0, "series": [{"data": [[2.0, 27.583333333333336], [3.0, 28.333333333333332], [4.0, 1233.6000000000001], [5.0, 30.0], [6.0, 135.32142857142864], [7.0, 27.5], [8.0, 27.333333333333332], [9.0, 27.666666666666668], [10.0, 28.064516129032256], [11.0, 30.0], [12.0, 51.74418604651163], [13.0, 131.14285714285714], [14.0, 95.80000000000001], [15.0, 154.375], [16.0, 87.58823529411765], [17.0, 530.1666666666667], [18.0, 128.7], [19.0, 28.0], [20.0, 32.714285714285715], [21.0, 36.0], [22.0, 29.5], [23.0, 29.5], [24.0, 28.0], [25.0, 28.0], [26.0, 28.0], [27.0, 27.333333333333332], [28.0, 27.5], [29.0, 27.8], [30.0, 28.19047619047619], [31.0, 28.0], [33.0, 28.125], [32.0, 27.61764705882353], [35.0, 28.285714285714285], [34.0, 29.0], [37.0, 28.692307692307686], [36.0, 28.142857142857142], [39.0, 29.307692307692307], [38.0, 29.000000000000004], [41.0, 30.0], [40.0, 29.78571428571429], [43.0, 31.363636363636363], [42.0, 30.5], [45.0, 28.25], [44.0, 208.99999999999997], [47.0, 62.6], [46.0, 29.66666666666667], [49.0, 29.843750000000004], [48.0, 28.928571428571423], [51.0, 173.42857142857142], [50.0, 30.2], [53.0, 29.0], [52.0, 534.0], [55.0, 31.0], [54.0, 29.444444444444443], [57.0, 73.79166666666667], [56.0, 781.5], [59.0, 35.0], [58.0, 31.133333333333333], [61.0, 115.11999999999999], [60.0, 33.8], [63.0, 167.13333333333333], [62.0, 84.54166666666667], [67.0, 475.7], [66.0, 468.55555555555554], [65.0, 339.47887323943655], [64.0, 112.4], [71.0, 36.75], [70.0, 87.46153846153847], [69.0, 172.0], [68.0, 213.62499999999997], [75.0, 44.476190476190474], [74.0, 41.33928571428572], [73.0, 40.0], [72.0, 43.07142857142857], [79.0, 54.37499999999999], [78.0, 52.5], [77.0, 52.5], [76.0, 50.742268041237104], [83.0, 174.6538461538462], [82.0, 59.6046511627907], [81.0, 57.0], [80.0, 58.0], [87.0, 61.93333333333333], [86.0, 59.11764705882353], [85.0, 57.714285714285715], [84.0, 59.0], [91.0, 66.0], [90.0, 67.6], [89.0, 68.29787234042554], [88.0, 63.625], [95.0, 61.224489795918366], [94.0, 66.33333333333333], [93.0, 66.25], [92.0, 66.90909090909089], [99.0, 72.0], [98.0, 72.0], [97.0, 70.52941176470588], [96.0, 63.10714285714284], [103.0, 84.57894736842105], [102.0, 83.28571428571429], [101.0, 76.8], [100.0, 72.05555555555556], [107.0, 92.85714285714286], [106.0, 91.70370370370371], [105.0, 92.83333333333333], [104.0, 87.92413793103448], [111.0, 86.46428571428574], [110.0, 86.0], [109.0, 89.42857142857143], [108.0, 90.65000000000002], [115.0, 85.8], [114.0, 85.30232558139535], [113.0, 84.30769230769228], [112.0, 82.55555555555554], [119.0, 89.0], [118.0, 84.39999999999999], [117.0, 87.28260869565216], [116.0, 84.12500000000001], [123.0, 82.84615384615385], [122.0, 86.28571428571429], [121.0, 87.93333333333334], [120.0, 87.5263157894737], [127.0, 133.94444444444446], [126.0, 155.0], [125.0, 93.12179487179486], [124.0, 78.25000000000003], [135.0, 131.88461538461542], [134.0, 92.41176470588236], [133.0, 121.25806451612904], [132.0, 142.66666666666666], [131.0, 98.32857142857142], [130.0, 174.81818181818184], [129.0, 146.10937499999994], [128.0, 168.0], [143.0, 144.53703703703695], [142.0, 104.0], [141.0, 169.86666666666667], [140.0, 99.32142857142857], [139.0, 99.0], [138.0, 176.53846153846152], [137.0, 170.57142857142853], [136.0, 208.03703703703704], [151.0, 155.33333333333334], [150.0, 117.81081081081084], [149.0, 94.2], [148.0, 88.94117647058823], [147.0, 99.85526315789474], [146.0, 108.93258426966291], [145.0, 138.3], [144.0, 163.52380952380952], [159.0, 304.12280701754383], [158.0, 122.35833333333332], [157.0, 93.0], [156.0, 169.9803921568628], [155.0, 92.36], [154.0, 94.55102040816328], [153.0, 92.53846153846155], [152.0, 92.6], [167.0, 402.10493827160485], [166.0, 273.1621621621622], [165.0, 265.64285714285717], [164.0, 227.29999999999993], [163.0, 148.63239875389405], [162.0, 136.135593220339], [161.0, 166.6846153846154], [160.0, 100.53571428571426], [175.0, 492.63636363636357], [174.0, 489.23076923076917], [173.0, 483.5416666666667], [172.0, 487.0], [171.0, 494.0], [170.0, 574.3199999999999], [169.0, 410.9230769230769], [168.0, 256.6162790697675], [183.0, 164.83282051282046], [182.0, 149.3529411764706], [181.0, 168.69918699186994], [180.0, 188.07942238267165], [179.0, 164.70085470085468], [178.0, 155.22987012987025], [177.0, 154.37435897435913], [176.0, 169.23437499999997], [191.0, 28.0], [190.0, 28.0], [189.0, 28.75], [188.0, 3766.6963503649677], [187.0, 181.13701923076928], [186.0, 129.2408510638299], [185.0, 208.12888573456328], [184.0, 199.48599269183958], [199.0, 28.01754385964913], [198.0, 27.695652173913043], [197.0, 36.031250000000014], [196.0, 27.510204081632654], [195.0, 27.333333333333332], [194.0, 28.5], [193.0, 30.0], [192.0, 27.857142857142858], [200.0, 108.32192982456144], [414.0, 50.0], [415.0, 28.0], [401.0, 66.0], [400.0, 281.0160932832218], [417.0, 35.0], [416.0, 28.0], [418.0, 29.0], [419.0, 28.0], [420.0, 30.000000000000004], [421.0, 31.0], [422.0, 31.333333333333332], [423.0, 27.0], [424.0, 28.0], [430.0, 28.5], [431.0, 28.714285714285715], [428.0, 30.375], [429.0, 28.0], [425.0, 28.0], [426.0, 28.333333333333332], [427.0, 29.0], [433.0, 28.142857142857142], [432.0, 28.8], [434.0, 29.833333333333336], [435.0, 29.333333333333332], [436.0, 27.0], [437.0, 27.5], [438.0, 34.09090909090909], [439.0, 32.75], [440.0, 36.125], [446.0, 34.0], [447.0, 33.8], [444.0, 31.71428571428571], [445.0, 39.2], [441.0, 32.142857142857146], [442.0, 29.42857142857143], [443.0, 28.5], [449.0, 33.333333333333336], [448.0, 34.0], [450.0, 30.0], [451.0, 41.06250000000001], [452.0, 34.5], [453.0, 34.71428571428571], [454.0, 38.333333333333336], [455.0, 36.0], [456.0, 35.45454545454545], [462.0, 39.5], [463.0, 40.2], [460.0, 38.8], [461.0, 40.666666666666664], [457.0, 33.666666666666664], [458.0, 35.0], [459.0, 38.0], [465.0, 41.6], [464.0, 40.125], [466.0, 42.75], [467.0, 42.8], [468.0, 45.0], [469.0, 45.375], [470.0, 46.2], [471.0, 48.16666666666667], [472.0, 48.75], [478.0, 52.2], [479.0, 53.0], [476.0, 52.5], [477.0, 50.85714285714286], [473.0, 48.58333333333333], [474.0, 48.333333333333336], [475.0, 50.0], [481.0, 56.25], [480.0, 55.09090909090909], [482.0, 56.0], [483.0, 55.42857142857143], [484.0, 55.6], [485.0, 57.2], [486.0, 57.57142857142857], [487.0, 58.0], [488.0, 58.714285714285715], [494.0, 65.0], [495.0, 67.66666666666667], [492.0, 61.0], [493.0, 64.0], [489.0, 57.333333333333336], [490.0, 58.92857142857143], [491.0, 60.0], [497.0, 66.5], [496.0, 66.9375], [498.0, 70.4], [499.0, 70.85714285714286], [500.0, 70.42857142857143], [501.0, 69.75], [502.0, 73.0], [503.0, 75.66666666666667], [504.0, 78.0], [510.0, 81.0], [511.0, 79.99999999999999], [508.0, 82.0], [509.0, 81.0], [505.0, 76.8], [506.0, 78.83333333333334], [507.0, 83.8], [518.0, 84.75], [513.0, 84.28571428571428], [512.0, 80.66666666666667], [526.0, 83.55555555555556], [527.0, 82.14285714285714], [524.0, 81.75], [525.0, 82.57142857142857], [522.0, 82.66666666666667], [523.0, 82.77777777777777], [514.0, 84.22222222222223], [515.0, 86.0], [516.0, 83.76923076923077], [519.0, 81.75], [536.0, 96.85714285714286], [537.0, 103.0], [538.0, 100.41666666666667], [539.0, 99.77777777777779], [540.0, 101.0], [541.0, 100.2], [542.0, 102.0], [543.0, 104.25], [528.0, 82.0], [529.0, 85.75], [530.0, 86.5], [531.0, 88.0], [532.0, 90.37500000000001], [533.0, 92.0], [534.0, 93.8], [535.0, 96.6], [520.0, 80.22222222222223], [521.0, 82.66666666666667], [547.0, 110.0], [544.0, 106.66666666666666], [559.0, 121.33333333333334], [557.0, 125.2], [558.0, 122.0], [555.0, 108.0], [556.0, 122.33333333333333], [545.0, 109.16666666666666], [546.0, 109.45454545454545], [548.0, 109.25], [549.0, 102.0], [550.0, 115.14285714285714], [551.0, 115.4], [560.0, 122.6], [575.0, 115.83333333333333], [573.0, 117.8], [574.0, 116.5], [571.0, 119.35714285714285], [572.0, 120.5], [568.0, 118.625], [569.0, 115.8], [561.0, 124.8], [562.0, 120.75], [563.0, 123.0], [564.0, 121.875], [565.0, 122.0], [566.0, 124.33333333333333], [567.0, 114.0], [552.0, 119.0], [553.0, 118.5], [579.0, 109.14285714285714], [576.0, 117.5], [591.0, 118.66666666666667], [589.0, 126.2], [590.0, 119.91666666666667], [587.0, 123.75], [588.0, 123.5], [577.0, 117.5], [578.0, 113.0], [580.0, 106.25], [581.0, 111.75], [582.0, 112.28571428571429], [583.0, 113.75], [592.0, 120.83333333333334], [600.0, 184.70924236414083], [593.0, 102.25], [594.0, 209.60000000000002], [595.0, 114.6], [596.0, 117.0], [597.0, 119.66666666666667], [598.0, 122.5], [599.0, 122.66666666666667], [585.0, 117.33333333333333], [586.0, 122.66666666666667], [1.0, 139.33333333333334]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[267.12740000000025, 266.88327500000156]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[446.0, 12995.0], [447.0, 13270.333333333334], [445.0, 13270.0], [444.0, 13185.0], [443.0, 13017.5], [441.0, 13366.5], [440.0, 13521.0], [439.0, 13319.0], [435.0, 13121.0], [434.0, 13256.0], [438.0, 13063.5], [437.0, 13256.8], [436.0, 13372.0], [463.0, 13164.0], [462.0, 13773.0], [455.0, 13041.5], [454.0, 13180.0], [453.0, 13739.0], [451.0, 13022.666666666666], [450.0, 13423.0], [448.0, 13132.0], [479.0, 13710.0], [476.0, 13258.5], [475.0, 13761.0], [473.0, 13240.0], [471.0, 13651.0], [470.0, 13166.0], [469.0, 13315.0], [468.0, 13148.0], [466.0, 13569.0], [464.0, 13183.0], [493.0, 13460.0], [494.0, 13477.5], [492.0, 13335.5], [480.0, 12830.0], [490.0, 13488.0], [489.0, 13065.0], [488.0, 13375.0], [487.0, 13147.0], [486.0, 12951.0], [485.0, 12820.0], [484.0, 13296.5], [511.0, 13265.0], [509.0, 12968.0], [505.0, 13127.333333333334], [501.0, 13392.666666666666], [500.0, 13122.0], [497.0, 13013.5], [496.0, 13330.666666666668], [537.0, 13066.0], [542.0, 13044.0], [543.0, 13214.0], [528.0, 13667.0], [532.0, 13144.0], [530.0, 13450.333333333334], [541.0, 13411.0], [539.0, 13455.0], [538.0, 13100.0], [526.0, 12956.0], [512.0, 13698.5], [516.0, 12854.0], [515.0, 13525.5], [518.0, 13391.5], [517.0, 13482.0], [525.0, 12987.0], [524.0, 13076.5], [522.0, 13460.0], [521.0, 13584.0], [520.0, 13727.0], [540.0, 13272.0], [535.0, 13778.0], [534.0, 13491.5], [572.0, 13122.0], [575.0, 13115.0], [571.0, 13371.0], [569.0, 13333.0], [568.0, 13484.0], [549.0, 13792.0], [548.0, 12888.0], [547.0, 13582.0], [546.0, 13060.0], [544.0, 13333.0], [559.0, 13379.0], [555.0, 13203.25], [554.0, 13206.0], [552.0, 13361.5], [566.0, 13088.666666666666], [563.0, 13354.5], [562.0, 12954.0], [561.0, 13372.0], [560.0, 13352.230769230768], [594.0, 13444.0], [600.0, 13448.333333333334], [599.0, 13076.333333333334], [597.0, 12953.0], [596.0, 13173.0], [593.0, 13266.75], [586.0, 13415.5], [584.0, 13298.0], [583.0, 13118.0], [580.0, 13125.666666666666], [579.0, 13565.0], [576.0, 13402.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[516.19, 13290.605]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[207.0, 30027.0], [206.0, 30028.0], [205.0, 30033.0], [202.0, 30036.5], [215.0, 30027.0], [214.0, 30029.0], [213.0, 30027.0], [212.0, 30027.0], [211.0, 30027.0], [210.0, 30027.0], [209.0, 30028.0], [208.0, 30026.0], [223.0, 30027.0], [222.0, 30028.0], [221.0, 30029.0], [220.0, 30029.0], [219.0, 30028.0], [218.0, 30029.0], [217.0, 30027.0], [216.0, 30027.0], [231.0, 30028.0], [230.0, 30028.0], [229.0, 30033.0], [228.0, 30029.0], [227.0, 30028.0], [226.0, 30029.0], [225.0, 30027.0], [224.0, 30028.0], [239.0, 30032.0], [238.0, 30027.0], [237.0, 30026.0], [236.0, 30027.0], [235.0, 30027.0], [234.0, 30027.0], [233.0, 30029.0], [232.0, 30028.0], [247.0, 30028.0], [246.0, 30028.0], [245.0, 30027.0], [244.0, 30030.0], [243.0, 30028.0], [242.0, 30029.0], [241.0, 30027.0], [240.0, 30028.0], [255.0, 30028.0], [254.0, 30028.0], [253.0, 30029.0], [252.0, 30028.0], [251.0, 30029.0], [250.0, 30028.0], [249.0, 30030.0], [248.0, 30028.0], [270.0, 30027.0], [271.0, 30027.0], [269.0, 30028.0], [268.0, 30027.0], [267.0, 30028.0], [266.0, 30029.0], [265.0, 30030.0], [264.0, 30027.0], [263.0, 30028.0], [257.0, 30026.0], [256.0, 30027.0], [259.0, 30028.0], [258.0, 30029.0], [262.0, 30030.0], [261.0, 30028.0], [260.0, 30029.0], [286.0, 30027.0], [287.0, 30028.0], [285.0, 30028.0], [284.0, 30029.0], [283.0, 30028.0], [282.0, 30031.0], [281.0, 30028.0], [280.0, 30026.0], [279.0, 30027.0], [273.0, 30027.0], [272.0, 30028.0], [275.0, 30028.0], [274.0, 30027.0], [278.0, 30028.0], [277.0, 30029.0], [276.0, 30028.0], [302.0, 30028.0], [303.0, 30028.0], [301.0, 30027.0], [300.0, 30027.0], [299.0, 30028.0], [298.0, 30026.0], [297.0, 30027.0], [296.0, 30026.0], [295.0, 30028.0], [289.0, 30033.0], [288.0, 30028.0], [291.0, 30028.0], [290.0, 30026.0], [294.0, 30027.0], [293.0, 30028.0], [292.0, 30030.0], [317.0, 30028.0], [319.0, 30030.5], [316.0, 30029.0], [307.0, 30028.0], [306.0, 30029.0], [305.0, 30029.0], [315.0, 30028.0], [314.0, 30028.0], [313.0, 30029.0], [312.0, 30028.0], [311.0, 30029.0], [310.0, 30027.0], [309.0, 30027.0], [308.0, 30027.0], [334.0, 30029.0], [335.0, 30029.0], [333.0, 30027.0], [332.0, 30031.0], [331.0, 30029.0], [330.0, 30031.0], [329.0, 30028.0], [328.0, 30028.0], [327.0, 30027.0], [321.0, 30028.0], [320.0, 30030.0], [323.0, 30028.0], [322.0, 30029.0], [326.0, 30030.0], [325.0, 30026.0], [324.0, 30027.0], [339.0, 30032.0], [349.0, 30027.0], [350.0, 30028.0], [348.0, 30045.666666666668], [338.0, 30029.0], [337.0, 30029.0], [336.0, 30028.0], [345.0, 30030.0], [344.0, 30029.0], [343.0, 30028.0], [342.0, 30030.0], [341.0, 30029.0], [340.0, 30028.0], [366.0, 30028.0], [367.0, 30027.0], [365.0, 30032.0], [364.0, 30049.5], [362.0, 30030.0], [361.0, 30028.0], [360.0, 30046.0], [359.0, 30028.0], [355.0, 30028.0], [354.0, 30028.0], [353.0, 30028.0], [352.0, 30048.5], [358.0, 30044.333333333332], [380.0, 30034.0], [383.0, 30031.0], [382.0, 30031.0], [381.0, 30029.0], [378.0, 30032.5], [376.0, 30027.0], [375.0, 30035.0], [370.0, 30028.0], [369.0, 30038.5], [374.0, 30029.0], [373.0, 30028.0], [372.0, 30040.0], [398.0, 30058.0], [396.0, 30029.0], [395.0, 30050.0], [391.0, 30030.0], [390.0, 30032.5], [388.0, 30027.0], [387.0, 30027.0], [386.0, 30038.333333333332], [400.0, 30039.5]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}, {"data": [[300.65000000000015, 30030.79999999999]], "isOverall": false, "label": "JoinRoom&Wait30sec-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61757912E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757918E12, 0.0], [1.61757912E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61757918E12, 0.0], [1.61757912E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757918E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 220.35018758526635, "minX": 1.61757912E12, "maxY": 30030.79999999999, "series": [{"data": [[1.61757918E12, 286.1864742501432], [1.61757912E12, 220.35018758526635]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757912E12, 13290.605]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757918E12, 30030.79999999999]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757918E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757912E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757918E12, 0.0], [1.61757912E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757912E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757918E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757918E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757912E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757918E12, 0.0], [1.61757912E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757912E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757918E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757918E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61757912E12, "maxY": 30067.0, "series": [{"data": [[1.61757918E12, 30067.0], [1.61757912E12, 13801.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61757918E12, 215.0], [1.61757912E12, 382.10000000000036]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61757918E12, 1161.9900000000016], [1.61757912E12, 13163.71]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61757918E12, 483.0], [1.61757912E12, 1089.5499999999993]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61757918E12, 26.0], [1.61757912E12, 27.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61757918E12, 120.0], [1.61757912E12, 123.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757918E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 10.0, "maxY": 30034.0, "series": [{"data": [[531.0, 131.0], [525.0, 28.0], [516.0, 28.0], [536.0, 254.5], [580.0, 112.0], [624.0, 153.0], [747.0, 130.0], [767.0, 82.0], [737.0, 105.0], [794.0, 147.5], [803.0, 114.0], [874.0, 110.0], [875.0, 121.0], [946.0, 46.0], [941.0, 141.0], [933.0, 145.0], [937.0, 126.0], [987.0, 78.0], [971.0, 132.0], [1003.0, 57.0], [1015.0, 120.0], [1078.0, 138.0], [1025.0, 68.0], [1133.0, 92.0], [1093.0, 108.0], [1126.0, 91.0], [1179.0, 128.0], [1209.0, 124.0], [1165.0, 139.0], [1211.0, 103.0], [1193.0, 105.0], [1152.0, 118.0], [1273.0, 129.0], [1258.0, 142.0], [1299.0, 123.0], [1297.0, 91.0], [1388.0, 135.0], [1474.0, 127.0], [10.0, 3040.0], [20.0, 28.0], [39.0, 30034.0], [90.0, 28.0], [120.0, 30.0], [161.0, 30028.0], [165.0, 28.0], [178.0, 28.0], [232.0, 28.0], [350.0, 109.0], [359.0, 28.0], [493.0, 28.0], [491.0, 32.0], [497.0, 60.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1165.0, 21060.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1474.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 10.0, "maxY": 4.9E-324, "series": [{"data": [[531.0, 0.0], [525.0, 0.0], [516.0, 0.0], [536.0, 0.0], [580.0, 0.0], [624.0, 0.0], [747.0, 0.0], [767.0, 0.0], [737.0, 0.0], [794.0, 0.0], [803.0, 0.0], [874.0, 0.0], [875.0, 0.0], [946.0, 0.0], [941.0, 0.0], [933.0, 0.0], [937.0, 0.0], [987.0, 0.0], [971.0, 0.0], [1003.0, 0.0], [1015.0, 0.0], [1078.0, 0.0], [1025.0, 0.0], [1133.0, 0.0], [1093.0, 0.0], [1126.0, 0.0], [1179.0, 0.0], [1209.0, 0.0], [1165.0, 0.0], [1211.0, 0.0], [1193.0, 0.0], [1152.0, 0.0], [1273.0, 0.0], [1258.0, 0.0], [1299.0, 0.0], [1297.0, 0.0], [1388.0, 0.0], [1474.0, 0.0], [10.0, 0.0], [20.0, 0.0], [39.0, 0.0], [90.0, 0.0], [120.0, 0.0], [161.0, 0.0], [165.0, 0.0], [178.0, 0.0], [232.0, 0.0], [350.0, 0.0], [359.0, 0.0], [493.0, 0.0], [491.0, 0.0], [497.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1165.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1474.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 205.46666666666667, "minX": 1.61757912E12, "maxY": 467.8666666666667, "series": [{"data": [[1.61757918E12, 467.8666666666667], [1.61757912E12, 205.46666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757918E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.61757912E12, "maxY": 474.18333333333334, "series": [{"data": [[1.61757918E12, 474.18333333333334], [1.61757912E12, 198.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61757918E12, 0.35]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757918E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.61757912E12, "maxY": 470.85, "series": [{"data": [[1.61757912E12, 3.3333333333333335]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61757918E12, 470.85], [1.61757912E12, 195.46666666666667]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61757918E12, 0.35]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}, {"data": [[1.61757918E12, 3.3333333333333335]], "isOverall": false, "label": "JoinRoom&Wait30sec-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757918E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.61757912E12, "maxY": 474.18333333333334, "series": [{"data": [[1.61757918E12, 474.18333333333334], [1.61757912E12, 198.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61757918E12, 0.35]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757918E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

