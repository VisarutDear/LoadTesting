/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 30075.0, "series": [{"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 27.0], [3.0, 27.0], [3.1, 27.0], [3.2, 27.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 28.0], [5.1, 28.0], [5.2, 28.0], [5.3, 28.0], [5.4, 28.0], [5.5, 28.0], [5.6, 28.0], [5.7, 28.0], [5.8, 28.0], [5.9, 28.0], [6.0, 28.0], [6.1, 28.0], [6.2, 28.0], [6.3, 28.0], [6.4, 28.0], [6.5, 28.0], [6.6, 28.0], [6.7, 28.0], [6.8, 28.0], [6.9, 28.0], [7.0, 28.0], [7.1, 28.0], [7.2, 28.0], [7.3, 28.0], [7.4, 28.0], [7.5, 28.0], [7.6, 28.0], [7.7, 28.0], [7.8, 28.0], [7.9, 28.0], [8.0, 28.0], [8.1, 28.0], [8.2, 29.0], [8.3, 29.0], [8.4, 29.0], [8.5, 29.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 29.0], [9.2, 29.0], [9.3, 29.0], [9.4, 29.0], [9.5, 29.0], [9.6, 29.0], [9.7, 29.0], [9.8, 29.0], [9.9, 29.0], [10.0, 29.0], [10.1, 29.0], [10.2, 29.0], [10.3, 29.0], [10.4, 29.0], [10.5, 29.0], [10.6, 29.0], [10.7, 29.0], [10.8, 29.0], [10.9, 29.0], [11.0, 30.0], [11.1, 30.0], [11.2, 30.0], [11.3, 30.0], [11.4, 30.0], [11.5, 30.0], [11.6, 30.0], [11.7, 30.0], [11.8, 30.0], [11.9, 30.0], [12.0, 30.0], [12.1, 30.0], [12.2, 30.0], [12.3, 30.0], [12.4, 30.0], [12.5, 31.0], [12.6, 31.0], [12.7, 31.0], [12.8, 31.0], [12.9, 31.0], [13.0, 31.0], [13.1, 31.0], [13.2, 31.0], [13.3, 31.0], [13.4, 31.0], [13.5, 31.0], [13.6, 32.0], [13.7, 32.0], [13.8, 32.0], [13.9, 32.0], [14.0, 32.0], [14.1, 32.0], [14.2, 32.0], [14.3, 33.0], [14.4, 33.0], [14.5, 33.0], [14.6, 33.0], [14.7, 33.0], [14.8, 33.0], [14.9, 33.0], [15.0, 34.0], [15.1, 34.0], [15.2, 34.0], [15.3, 34.0], [15.4, 34.0], [15.5, 34.0], [15.6, 35.0], [15.7, 35.0], [15.8, 35.0], [15.9, 35.0], [16.0, 35.0], [16.1, 35.0], [16.2, 36.0], [16.3, 36.0], [16.4, 36.0], [16.5, 36.0], [16.6, 36.0], [16.7, 36.0], [16.8, 37.0], [16.9, 37.0], [17.0, 37.0], [17.1, 37.0], [17.2, 37.0], [17.3, 37.0], [17.4, 37.0], [17.5, 37.0], [17.6, 38.0], [17.7, 38.0], [17.8, 38.0], [17.9, 38.0], [18.0, 38.0], [18.1, 38.0], [18.2, 38.0], [18.3, 39.0], [18.4, 39.0], [18.5, 39.0], [18.6, 39.0], [18.7, 39.0], [18.8, 39.0], [18.9, 40.0], [19.0, 40.0], [19.1, 40.0], [19.2, 40.0], [19.3, 40.0], [19.4, 40.0], [19.5, 41.0], [19.6, 41.0], [19.7, 41.0], [19.8, 41.0], [19.9, 42.0], [20.0, 42.0], [20.1, 42.0], [20.2, 42.0], [20.3, 43.0], [20.4, 43.0], [20.5, 43.0], [20.6, 43.0], [20.7, 43.0], [20.8, 44.0], [20.9, 44.0], [21.0, 44.0], [21.1, 44.0], [21.2, 45.0], [21.3, 45.0], [21.4, 45.0], [21.5, 45.0], [21.6, 46.0], [21.7, 46.0], [21.8, 46.0], [21.9, 46.0], [22.0, 46.0], [22.1, 47.0], [22.2, 47.0], [22.3, 47.0], [22.4, 47.0], [22.5, 48.0], [22.6, 48.0], [22.7, 48.0], [22.8, 48.0], [22.9, 48.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 50.0], [23.6, 50.0], [23.7, 50.0], [23.8, 50.0], [23.9, 51.0], [24.0, 51.0], [24.1, 51.0], [24.2, 51.0], [24.3, 51.0], [24.4, 52.0], [24.5, 52.0], [24.6, 52.0], [24.7, 52.0], [24.8, 52.0], [24.9, 53.0], [25.0, 53.0], [25.1, 53.0], [25.2, 53.0], [25.3, 54.0], [25.4, 54.0], [25.5, 54.0], [25.6, 54.0], [25.7, 54.0], [25.8, 55.0], [25.9, 55.0], [26.0, 55.0], [26.1, 55.0], [26.2, 56.0], [26.3, 56.0], [26.4, 56.0], [26.5, 56.0], [26.6, 57.0], [26.7, 57.0], [26.8, 57.0], [26.9, 58.0], [27.0, 58.0], [27.1, 59.0], [27.2, 59.0], [27.3, 59.0], [27.4, 59.0], [27.5, 60.0], [27.6, 60.0], [27.7, 61.0], [27.8, 61.0], [27.9, 61.0], [28.0, 62.0], [28.1, 62.0], [28.2, 62.0], [28.3, 63.0], [28.4, 63.0], [28.5, 63.0], [28.6, 63.0], [28.7, 64.0], [28.8, 64.0], [28.9, 64.0], [29.0, 64.0], [29.1, 65.0], [29.2, 65.0], [29.3, 65.0], [29.4, 66.0], [29.5, 66.0], [29.6, 66.0], [29.7, 66.0], [29.8, 67.0], [29.9, 67.0], [30.0, 67.0], [30.1, 68.0], [30.2, 68.0], [30.3, 68.0], [30.4, 68.0], [30.5, 68.0], [30.6, 69.0], [30.7, 69.0], [30.8, 69.0], [30.9, 69.0], [31.0, 69.0], [31.1, 70.0], [31.2, 70.0], [31.3, 70.0], [31.4, 70.0], [31.5, 70.0], [31.6, 71.0], [31.7, 71.0], [31.8, 71.0], [31.9, 72.0], [32.0, 72.0], [32.1, 72.0], [32.2, 72.0], [32.3, 73.0], [32.4, 73.0], [32.5, 73.0], [32.6, 73.0], [32.7, 73.0], [32.8, 74.0], [32.9, 74.0], [33.0, 74.0], [33.1, 74.0], [33.2, 75.0], [33.3, 75.0], [33.4, 75.0], [33.5, 75.0], [33.6, 76.0], [33.7, 76.0], [33.8, 76.0], [33.9, 76.0], [34.0, 76.0], [34.1, 77.0], [34.2, 77.0], [34.3, 77.0], [34.4, 77.0], [34.5, 78.0], [34.6, 78.0], [34.7, 78.0], [34.8, 78.0], [34.9, 79.0], [35.0, 79.0], [35.1, 79.0], [35.2, 79.0], [35.3, 80.0], [35.4, 80.0], [35.5, 80.0], [35.6, 80.0], [35.7, 81.0], [35.8, 81.0], [35.9, 81.0], [36.0, 81.0], [36.1, 81.0], [36.2, 81.0], [36.3, 82.0], [36.4, 82.0], [36.5, 82.0], [36.6, 82.0], [36.7, 82.0], [36.8, 82.0], [36.9, 82.0], [37.0, 83.0], [37.1, 83.0], [37.2, 83.0], [37.3, 83.0], [37.4, 83.0], [37.5, 83.0], [37.6, 83.0], [37.7, 83.0], [37.8, 84.0], [37.9, 84.0], [38.0, 84.0], [38.1, 84.0], [38.2, 84.0], [38.3, 84.0], [38.4, 84.0], [38.5, 84.0], [38.6, 84.0], [38.7, 85.0], [38.8, 85.0], [38.9, 85.0], [39.0, 85.0], [39.1, 85.0], [39.2, 85.0], [39.3, 85.0], [39.4, 85.0], [39.5, 85.0], [39.6, 85.0], [39.7, 86.0], [39.8, 86.0], [39.9, 86.0], [40.0, 86.0], [40.1, 86.0], [40.2, 86.0], [40.3, 86.0], [40.4, 86.0], [40.5, 86.0], [40.6, 87.0], [40.7, 87.0], [40.8, 87.0], [40.9, 87.0], [41.0, 87.0], [41.1, 87.0], [41.2, 87.0], [41.3, 87.0], [41.4, 87.0], [41.5, 88.0], [41.6, 88.0], [41.7, 88.0], [41.8, 88.0], [41.9, 88.0], [42.0, 88.0], [42.1, 88.0], [42.2, 88.0], [42.3, 88.0], [42.4, 89.0], [42.5, 89.0], [42.6, 89.0], [42.7, 89.0], [42.8, 89.0], [42.9, 89.0], [43.0, 89.0], [43.1, 89.0], [43.2, 89.0], [43.3, 89.0], [43.4, 90.0], [43.5, 90.0], [43.6, 90.0], [43.7, 90.0], [43.8, 90.0], [43.9, 90.0], [44.0, 90.0], [44.1, 90.0], [44.2, 91.0], [44.3, 91.0], [44.4, 91.0], [44.5, 91.0], [44.6, 91.0], [44.7, 91.0], [44.8, 91.0], [44.9, 91.0], [45.0, 91.0], [45.1, 91.0], [45.2, 92.0], [45.3, 92.0], [45.4, 92.0], [45.5, 92.0], [45.6, 92.0], [45.7, 92.0], [45.8, 92.0], [45.9, 92.0], [46.0, 92.0], [46.1, 93.0], [46.2, 93.0], [46.3, 93.0], [46.4, 93.0], [46.5, 93.0], [46.6, 93.0], [46.7, 93.0], [46.8, 93.0], [46.9, 94.0], [47.0, 94.0], [47.1, 94.0], [47.2, 94.0], [47.3, 94.0], [47.4, 94.0], [47.5, 94.0], [47.6, 94.0], [47.7, 94.0], [47.8, 95.0], [47.9, 95.0], [48.0, 95.0], [48.1, 95.0], [48.2, 95.0], [48.3, 95.0], [48.4, 95.0], [48.5, 95.0], [48.6, 96.0], [48.7, 96.0], [48.8, 96.0], [48.9, 96.0], [49.0, 96.0], [49.1, 96.0], [49.2, 96.0], [49.3, 97.0], [49.4, 97.0], [49.5, 97.0], [49.6, 97.0], [49.7, 97.0], [49.8, 97.0], [49.9, 97.0], [50.0, 98.0], [50.1, 98.0], [50.2, 98.0], [50.3, 98.0], [50.4, 98.0], [50.5, 98.0], [50.6, 98.0], [50.7, 99.0], [50.8, 99.0], [50.9, 99.0], [51.0, 99.0], [51.1, 99.0], [51.2, 99.0], [51.3, 99.0], [51.4, 100.0], [51.5, 100.0], [51.6, 100.0], [51.7, 100.0], [51.8, 100.0], [51.9, 100.0], [52.0, 100.0], [52.1, 101.0], [52.2, 101.0], [52.3, 101.0], [52.4, 101.0], [52.5, 101.0], [52.6, 102.0], [52.7, 102.0], [52.8, 102.0], [52.9, 102.0], [53.0, 102.0], [53.1, 102.0], [53.2, 102.0], [53.3, 103.0], [53.4, 103.0], [53.5, 103.0], [53.6, 103.0], [53.7, 103.0], [53.8, 103.0], [53.9, 104.0], [54.0, 104.0], [54.1, 104.0], [54.2, 104.0], [54.3, 104.0], [54.4, 104.0], [54.5, 104.0], [54.6, 105.0], [54.7, 105.0], [54.8, 105.0], [54.9, 105.0], [55.0, 105.0], [55.1, 105.0], [55.2, 105.0], [55.3, 106.0], [55.4, 106.0], [55.5, 106.0], [55.6, 106.0], [55.7, 107.0], [55.8, 107.0], [55.9, 107.0], [56.0, 107.0], [56.1, 107.0], [56.2, 108.0], [56.3, 108.0], [56.4, 108.0], [56.5, 108.0], [56.6, 108.0], [56.7, 108.0], [56.8, 108.0], [56.9, 109.0], [57.0, 109.0], [57.1, 109.0], [57.2, 109.0], [57.3, 109.0], [57.4, 109.0], [57.5, 110.0], [57.6, 110.0], [57.7, 110.0], [57.8, 110.0], [57.9, 111.0], [58.0, 111.0], [58.1, 111.0], [58.2, 111.0], [58.3, 111.0], [58.4, 111.0], [58.5, 112.0], [58.6, 112.0], [58.7, 112.0], [58.8, 112.0], [58.9, 112.0], [59.0, 112.0], [59.1, 112.0], [59.2, 113.0], [59.3, 113.0], [59.4, 113.0], [59.5, 113.0], [59.6, 113.0], [59.7, 113.0], [59.8, 114.0], [59.9, 114.0], [60.0, 114.0], [60.1, 114.0], [60.2, 114.0], [60.3, 114.0], [60.4, 115.0], [60.5, 115.0], [60.6, 115.0], [60.7, 115.0], [60.8, 115.0], [60.9, 115.0], [61.0, 115.0], [61.1, 116.0], [61.2, 116.0], [61.3, 116.0], [61.4, 116.0], [61.5, 116.0], [61.6, 116.0], [61.7, 117.0], [61.8, 117.0], [61.9, 117.0], [62.0, 117.0], [62.1, 117.0], [62.2, 117.0], [62.3, 117.0], [62.4, 117.0], [62.5, 117.0], [62.6, 118.0], [62.7, 118.0], [62.8, 118.0], [62.9, 118.0], [63.0, 118.0], [63.1, 118.0], [63.2, 118.0], [63.3, 118.0], [63.4, 118.0], [63.5, 118.0], [63.6, 119.0], [63.7, 119.0], [63.8, 119.0], [63.9, 119.0], [64.0, 119.0], [64.1, 119.0], [64.2, 119.0], [64.3, 119.0], [64.4, 120.0], [64.5, 120.0], [64.6, 120.0], [64.7, 120.0], [64.8, 120.0], [64.9, 120.0], [65.0, 120.0], [65.1, 120.0], [65.2, 121.0], [65.3, 121.0], [65.4, 121.0], [65.5, 121.0], [65.6, 121.0], [65.7, 121.0], [65.8, 121.0], [65.9, 121.0], [66.0, 121.0], [66.1, 122.0], [66.2, 122.0], [66.3, 122.0], [66.4, 122.0], [66.5, 122.0], [66.6, 122.0], [66.7, 122.0], [66.8, 122.0], [66.9, 122.0], [67.0, 122.0], [67.1, 123.0], [67.2, 123.0], [67.3, 123.0], [67.4, 123.0], [67.5, 123.0], [67.6, 123.0], [67.7, 123.0], [67.8, 123.0], [67.9, 123.0], [68.0, 123.0], [68.1, 123.0], [68.2, 124.0], [68.3, 124.0], [68.4, 124.0], [68.5, 124.0], [68.6, 124.0], [68.7, 124.0], [68.8, 124.0], [68.9, 124.0], [69.0, 124.0], [69.1, 124.0], [69.2, 124.0], [69.3, 125.0], [69.4, 125.0], [69.5, 125.0], [69.6, 125.0], [69.7, 125.0], [69.8, 125.0], [69.9, 125.0], [70.0, 125.0], [70.1, 125.0], [70.2, 126.0], [70.3, 126.0], [70.4, 126.0], [70.5, 126.0], [70.6, 126.0], [70.7, 126.0], [70.8, 126.0], [70.9, 127.0], [71.0, 127.0], [71.1, 127.0], [71.2, 127.0], [71.3, 127.0], [71.4, 127.0], [71.5, 127.0], [71.6, 127.0], [71.7, 127.0], [71.8, 128.0], [71.9, 128.0], [72.0, 128.0], [72.1, 128.0], [72.2, 128.0], [72.3, 128.0], [72.4, 128.0], [72.5, 128.0], [72.6, 129.0], [72.7, 129.0], [72.8, 129.0], [72.9, 129.0], [73.0, 129.0], [73.1, 129.0], [73.2, 130.0], [73.3, 130.0], [73.4, 130.0], [73.5, 130.0], [73.6, 130.0], [73.7, 130.0], [73.8, 130.0], [73.9, 130.0], [74.0, 131.0], [74.1, 131.0], [74.2, 131.0], [74.3, 131.0], [74.4, 131.0], [74.5, 131.0], [74.6, 131.0], [74.7, 132.0], [74.8, 132.0], [74.9, 132.0], [75.0, 132.0], [75.1, 132.0], [75.2, 132.0], [75.3, 132.0], [75.4, 133.0], [75.5, 133.0], [75.6, 133.0], [75.7, 133.0], [75.8, 133.0], [75.9, 134.0], [76.0, 134.0], [76.1, 134.0], [76.2, 134.0], [76.3, 134.0], [76.4, 134.0], [76.5, 134.0], [76.6, 134.0], [76.7, 135.0], [76.8, 135.0], [76.9, 135.0], [77.0, 135.0], [77.1, 135.0], [77.2, 135.0], [77.3, 135.0], [77.4, 136.0], [77.5, 136.0], [77.6, 136.0], [77.7, 136.0], [77.8, 136.0], [77.9, 136.0], [78.0, 136.0], [78.1, 136.0], [78.2, 136.0], [78.3, 137.0], [78.4, 137.0], [78.5, 137.0], [78.6, 137.0], [78.7, 137.0], [78.8, 137.0], [78.9, 137.0], [79.0, 137.0], [79.1, 138.0], [79.2, 138.0], [79.3, 138.0], [79.4, 138.0], [79.5, 138.0], [79.6, 138.0], [79.7, 138.0], [79.8, 139.0], [79.9, 139.0], [80.0, 139.0], [80.1, 139.0], [80.2, 139.0], [80.3, 139.0], [80.4, 139.0], [80.5, 140.0], [80.6, 140.0], [80.7, 140.0], [80.8, 140.0], [80.9, 140.0], [81.0, 140.0], [81.1, 141.0], [81.2, 141.0], [81.3, 141.0], [81.4, 141.0], [81.5, 141.0], [81.6, 141.0], [81.7, 142.0], [81.8, 142.0], [81.9, 142.0], [82.0, 142.0], [82.1, 143.0], [82.2, 143.0], [82.3, 143.0], [82.4, 143.0], [82.5, 144.0], [82.6, 144.0], [82.7, 144.0], [82.8, 144.0], [82.9, 145.0], [83.0, 145.0], [83.1, 145.0], [83.2, 145.0], [83.3, 145.0], [83.4, 146.0], [83.5, 146.0], [83.6, 146.0], [83.7, 146.0], [83.8, 147.0], [83.9, 147.0], [84.0, 147.0], [84.1, 147.0], [84.2, 148.0], [84.3, 148.0], [84.4, 148.0], [84.5, 149.0], [84.6, 149.0], [84.7, 149.0], [84.8, 149.0], [84.9, 150.0], [85.0, 150.0], [85.1, 151.0], [85.2, 151.0], [85.3, 151.0], [85.4, 152.0], [85.5, 152.0], [85.6, 153.0], [85.7, 154.0], [85.8, 155.0], [85.9, 156.0], [86.0, 156.0], [86.1, 157.0], [86.2, 158.0], [86.3, 159.0], [86.4, 159.0], [86.5, 160.0], [86.6, 162.0], [86.7, 162.0], [86.8, 163.0], [86.9, 164.0], [87.0, 165.0], [87.1, 167.0], [87.2, 168.0], [87.3, 169.0], [87.4, 170.0], [87.5, 172.0], [87.6, 174.0], [87.7, 176.0], [87.8, 178.0], [87.9, 179.0], [88.0, 180.0], [88.1, 181.0], [88.2, 183.0], [88.3, 185.0], [88.4, 187.0], [88.5, 189.0], [88.6, 192.0], [88.7, 195.0], [88.8, 196.0], [88.9, 200.0], [89.0, 203.0], [89.1, 205.0], [89.2, 212.0], [89.3, 215.0], [89.4, 220.0], [89.5, 231.0], [89.6, 241.0], [89.7, 249.0], [89.8, 254.0], [89.9, 259.0], [90.0, 264.0], [90.1, 269.0], [90.2, 286.0], [90.3, 307.0], [90.4, 344.0], [90.5, 356.0], [90.6, 362.0], [90.7, 365.0], [90.8, 369.0], [90.9, 372.0], [91.0, 378.0], [91.1, 383.0], [91.2, 385.0], [91.3, 388.0], [91.4, 390.0], [91.5, 395.0], [91.6, 405.0], [91.7, 417.0], [91.8, 426.0], [91.9, 446.0], [92.0, 471.0], [92.1, 478.0], [92.2, 550.0], [92.3, 1029.0], [92.4, 1031.0], [92.5, 1032.0], [92.6, 1033.0], [92.7, 1034.0], [92.8, 1035.0], [92.9, 1037.0], [93.0, 1038.0], [93.1, 1039.0], [93.2, 1040.0], [93.3, 1041.0], [93.4, 1042.0], [93.5, 1043.0], [93.6, 1045.0], [93.7, 1046.0], [93.8, 1049.0], [93.9, 1052.0], [94.0, 1056.0], [94.1, 1060.0], [94.2, 1065.0], [94.3, 1071.0], [94.4, 1075.0], [94.5, 1078.0], [94.6, 1081.0], [94.7, 1084.0], [94.8, 1087.0], [94.9, 1090.0], [95.0, 1093.0], [95.1, 1095.0], [95.2, 1098.0], [95.3, 1100.0], [95.4, 1103.0], [95.5, 1105.0], [95.6, 1107.0], [95.7, 1110.0], [95.8, 1115.0], [95.9, 1120.0], [96.0, 1124.0], [96.1, 1128.0], [96.2, 1131.0], [96.3, 1136.0], [96.4, 1151.0], [96.5, 1164.0], [96.6, 1181.0], [96.7, 1230.0], [96.8, 1266.0], [96.9, 1306.0], [97.0, 1400.0], [97.1, 1491.0], [97.2, 3033.0], [97.3, 3040.0], [97.4, 3043.0], [97.5, 3047.0], [97.6, 3050.0], [97.7, 3052.0], [97.8, 3056.0], [97.9, 3061.0], [98.0, 3067.0], [98.1, 3069.0], [98.2, 3075.0], [98.3, 3080.0], [98.4, 3084.0], [98.5, 3089.0], [98.6, 3094.0], [98.7, 3097.0], [98.8, 3102.0], [98.9, 3104.0], [99.0, 3108.0], [99.1, 3113.0], [99.2, 3118.0], [99.3, 3124.0], [99.4, 3135.0], [99.5, 3157.0], [99.6, 7051.0], [99.7, 7075.0], [99.8, 7113.0], [99.9, 7125.0], [100.0, 21061.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12669.0], [0.1, 12669.0], [0.2, 12669.0], [0.3, 12669.0], [0.4, 12669.0], [0.5, 12672.0], [0.6, 12672.0], [0.7, 12672.0], [0.8, 12672.0], [0.9, 12672.0], [1.0, 12673.0], [1.1, 12673.0], [1.2, 12673.0], [1.3, 12673.0], [1.4, 12673.0], [1.5, 12674.0], [1.6, 12674.0], [1.7, 12674.0], [1.8, 12674.0], [1.9, 12674.0], [2.0, 12674.0], [2.1, 12674.0], [2.2, 12674.0], [2.3, 12674.0], [2.4, 12674.0], [2.5, 12675.0], [2.6, 12675.0], [2.7, 12675.0], [2.8, 12675.0], [2.9, 12675.0], [3.0, 12675.0], [3.1, 12675.0], [3.2, 12675.0], [3.3, 12675.0], [3.4, 12675.0], [3.5, 12678.0], [3.6, 12678.0], [3.7, 12678.0], [3.8, 12678.0], [3.9, 12678.0], [4.0, 12678.0], [4.1, 12678.0], [4.2, 12678.0], [4.3, 12678.0], [4.4, 12678.0], [4.5, 12678.0], [4.6, 12678.0], [4.7, 12678.0], [4.8, 12678.0], [4.9, 12678.0], [5.0, 12679.0], [5.1, 12679.0], [5.2, 12679.0], [5.3, 12679.0], [5.4, 12679.0], [5.5, 12679.0], [5.6, 12679.0], [5.7, 12679.0], [5.8, 12679.0], [5.9, 12679.0], [6.0, 12679.0], [6.1, 12679.0], [6.2, 12679.0], [6.3, 12679.0], [6.4, 12679.0], [6.5, 12681.0], [6.6, 12681.0], [6.7, 12681.0], [6.8, 12681.0], [6.9, 12681.0], [7.0, 12681.0], [7.1, 12681.0], [7.2, 12681.0], [7.3, 12681.0], [7.4, 12681.0], [7.5, 12684.0], [7.6, 12684.0], [7.7, 12684.0], [7.8, 12684.0], [7.9, 12684.0], [8.0, 12684.0], [8.1, 12684.0], [8.2, 12684.0], [8.3, 12684.0], [8.4, 12684.0], [8.5, 12685.0], [8.6, 12685.0], [8.7, 12685.0], [8.8, 12685.0], [8.9, 12685.0], [9.0, 12687.0], [9.1, 12687.0], [9.2, 12687.0], [9.3, 12687.0], [9.4, 12687.0], [9.5, 12694.0], [9.6, 12694.0], [9.7, 12694.0], [9.8, 12694.0], [9.9, 12694.0], [10.0, 12697.0], [10.1, 12697.0], [10.2, 12697.0], [10.3, 12697.0], [10.4, 12697.0], [10.5, 12741.0], [10.6, 12741.0], [10.7, 12741.0], [10.8, 12741.0], [10.9, 12741.0], [11.0, 12778.0], [11.1, 12778.0], [11.2, 12778.0], [11.3, 12778.0], [11.4, 12778.0], [11.5, 12779.0], [11.6, 12779.0], [11.7, 12779.0], [11.8, 12779.0], [11.9, 12779.0], [12.0, 12783.0], [12.1, 12783.0], [12.2, 12783.0], [12.3, 12783.0], [12.4, 12783.0], [12.5, 12787.0], [12.6, 12787.0], [12.7, 12787.0], [12.8, 12787.0], [12.9, 12787.0], [13.0, 12788.0], [13.1, 12788.0], [13.2, 12788.0], [13.3, 12788.0], [13.4, 12788.0], [13.5, 12790.0], [13.6, 12790.0], [13.7, 12790.0], [13.8, 12790.0], [13.9, 12790.0], [14.0, 12790.0], [14.1, 12790.0], [14.2, 12790.0], [14.3, 12790.0], [14.4, 12790.0], [14.5, 12825.0], [14.6, 12825.0], [14.7, 12825.0], [14.8, 12825.0], [14.9, 12825.0], [15.0, 12825.0], [15.1, 12825.0], [15.2, 12825.0], [15.3, 12825.0], [15.4, 12825.0], [15.5, 12828.0], [15.6, 12828.0], [15.7, 12828.0], [15.8, 12828.0], [15.9, 12828.0], [16.0, 12829.0], [16.1, 12829.0], [16.2, 12829.0], [16.3, 12829.0], [16.4, 12829.0], [16.5, 12841.0], [16.6, 12841.0], [16.7, 12841.0], [16.8, 12841.0], [16.9, 12841.0], [17.0, 12847.0], [17.1, 12847.0], [17.2, 12847.0], [17.3, 12847.0], [17.4, 12847.0], [17.5, 12854.0], [17.6, 12854.0], [17.7, 12854.0], [17.8, 12854.0], [17.9, 12854.0], [18.0, 12857.0], [18.1, 12857.0], [18.2, 12857.0], [18.3, 12857.0], [18.4, 12857.0], [18.5, 12861.0], [18.6, 12861.0], [18.7, 12861.0], [18.8, 12861.0], [18.9, 12861.0], [19.0, 12871.0], [19.1, 12871.0], [19.2, 12871.0], [19.3, 12871.0], [19.4, 12871.0], [19.5, 12871.0], [19.6, 12871.0], [19.7, 12871.0], [19.8, 12871.0], [19.9, 12871.0], [20.0, 12879.0], [20.1, 12879.0], [20.2, 12879.0], [20.3, 12879.0], [20.4, 12879.0], [20.5, 12882.0], [20.6, 12882.0], [20.7, 12882.0], [20.8, 12882.0], [20.9, 12882.0], [21.0, 12888.0], [21.1, 12888.0], [21.2, 12888.0], [21.3, 12888.0], [21.4, 12888.0], [21.5, 12893.0], [21.6, 12893.0], [21.7, 12893.0], [21.8, 12893.0], [21.9, 12893.0], [22.0, 12898.0], [22.1, 12898.0], [22.2, 12898.0], [22.3, 12898.0], [22.4, 12898.0], [22.5, 12902.0], [22.6, 12902.0], [22.7, 12902.0], [22.8, 12902.0], [22.9, 12902.0], [23.0, 12903.0], [23.1, 12903.0], [23.2, 12903.0], [23.3, 12903.0], [23.4, 12903.0], [23.5, 12905.0], [23.6, 12905.0], [23.7, 12905.0], [23.8, 12905.0], [23.9, 12905.0], [24.0, 12906.0], [24.1, 12906.0], [24.2, 12906.0], [24.3, 12906.0], [24.4, 12906.0], [24.5, 12908.0], [24.6, 12908.0], [24.7, 12908.0], [24.8, 12908.0], [24.9, 12908.0], [25.0, 12909.0], [25.1, 12909.0], [25.2, 12909.0], [25.3, 12909.0], [25.4, 12909.0], [25.5, 12910.0], [25.6, 12910.0], [25.7, 12910.0], [25.8, 12910.0], [25.9, 12910.0], [26.0, 12911.0], [26.1, 12911.0], [26.2, 12911.0], [26.3, 12911.0], [26.4, 12911.0], [26.5, 12911.0], [26.6, 12911.0], [26.7, 12911.0], [26.8, 12911.0], [26.9, 12911.0], [27.0, 12911.0], [27.1, 12911.0], [27.2, 12911.0], [27.3, 12911.0], [27.4, 12911.0], [27.5, 12911.0], [27.6, 12911.0], [27.7, 12911.0], [27.8, 12911.0], [27.9, 12911.0], [28.0, 12911.0], [28.1, 12911.0], [28.2, 12911.0], [28.3, 12911.0], [28.4, 12911.0], [28.5, 12911.0], [28.6, 12911.0], [28.7, 12911.0], [28.8, 12911.0], [28.9, 12911.0], [29.0, 12912.0], [29.1, 12912.0], [29.2, 12912.0], [29.3, 12912.0], [29.4, 12912.0], [29.5, 12912.0], [29.6, 12912.0], [29.7, 12912.0], [29.8, 12912.0], [29.9, 12912.0], [30.0, 12912.0], [30.1, 12912.0], [30.2, 12912.0], [30.3, 12912.0], [30.4, 12912.0], [30.5, 12913.0], [30.6, 12913.0], [30.7, 12913.0], [30.8, 12913.0], [30.9, 12913.0], [31.0, 12913.0], [31.1, 12913.0], [31.2, 12913.0], [31.3, 12913.0], [31.4, 12913.0], [31.5, 12914.0], [31.6, 12914.0], [31.7, 12914.0], [31.8, 12914.0], [31.9, 12914.0], [32.0, 12914.0], [32.1, 12914.0], [32.2, 12914.0], [32.3, 12914.0], [32.4, 12914.0], [32.5, 12915.0], [32.6, 12915.0], [32.7, 12915.0], [32.8, 12915.0], [32.9, 12915.0], [33.0, 12915.0], [33.1, 12915.0], [33.2, 12915.0], [33.3, 12915.0], [33.4, 12915.0], [33.5, 12915.0], [33.6, 12915.0], [33.7, 12915.0], [33.8, 12915.0], [33.9, 12915.0], [34.0, 12916.0], [34.1, 12916.0], [34.2, 12916.0], [34.3, 12916.0], [34.4, 12916.0], [34.5, 12918.0], [34.6, 12918.0], [34.7, 12918.0], [34.8, 12918.0], [34.9, 12918.0], [35.0, 12920.0], [35.1, 12920.0], [35.2, 12920.0], [35.3, 12920.0], [35.4, 12920.0], [35.5, 12926.0], [35.6, 12926.0], [35.7, 12926.0], [35.8, 12926.0], [35.9, 12926.0], [36.0, 12934.0], [36.1, 12934.0], [36.2, 12934.0], [36.3, 12934.0], [36.4, 12934.0], [36.5, 12939.0], [36.6, 12939.0], [36.7, 12939.0], [36.8, 12939.0], [36.9, 12939.0], [37.0, 12986.0], [37.1, 12986.0], [37.2, 12986.0], [37.3, 12986.0], [37.4, 12986.0], [37.5, 12988.0], [37.6, 12988.0], [37.7, 12988.0], [37.8, 12988.0], [37.9, 12988.0], [38.0, 13059.0], [38.1, 13059.0], [38.2, 13059.0], [38.3, 13059.0], [38.4, 13059.0], [38.5, 13059.0], [38.6, 13059.0], [38.7, 13059.0], [38.8, 13059.0], [38.9, 13059.0], [39.0, 13067.0], [39.1, 13067.0], [39.2, 13067.0], [39.3, 13067.0], [39.4, 13067.0], [39.5, 13072.0], [39.6, 13072.0], [39.7, 13072.0], [39.8, 13072.0], [39.9, 13072.0], [40.0, 13091.0], [40.1, 13091.0], [40.2, 13091.0], [40.3, 13091.0], [40.4, 13091.0], [40.5, 13094.0], [40.6, 13094.0], [40.7, 13094.0], [40.8, 13094.0], [40.9, 13094.0], [41.0, 13115.0], [41.1, 13115.0], [41.2, 13115.0], [41.3, 13115.0], [41.4, 13115.0], [41.5, 13116.0], [41.6, 13116.0], [41.7, 13116.0], [41.8, 13116.0], [41.9, 13116.0], [42.0, 13116.0], [42.1, 13116.0], [42.2, 13116.0], [42.3, 13116.0], [42.4, 13116.0], [42.5, 13116.0], [42.6, 13116.0], [42.7, 13116.0], [42.8, 13116.0], [42.9, 13116.0], [43.0, 13131.0], [43.1, 13131.0], [43.2, 13131.0], [43.3, 13131.0], [43.4, 13131.0], [43.5, 13146.0], [43.6, 13146.0], [43.7, 13146.0], [43.8, 13146.0], [43.9, 13146.0], [44.0, 13147.0], [44.1, 13147.0], [44.2, 13147.0], [44.3, 13147.0], [44.4, 13147.0], [44.5, 13151.0], [44.6, 13151.0], [44.7, 13151.0], [44.8, 13151.0], [44.9, 13151.0], [45.0, 13153.0], [45.1, 13153.0], [45.2, 13153.0], [45.3, 13153.0], [45.4, 13153.0], [45.5, 13156.0], [45.6, 13156.0], [45.7, 13156.0], [45.8, 13156.0], [45.9, 13156.0], [46.0, 13158.0], [46.1, 13158.0], [46.2, 13158.0], [46.3, 13158.0], [46.4, 13158.0], [46.5, 13159.0], [46.6, 13159.0], [46.7, 13159.0], [46.8, 13159.0], [46.9, 13159.0], [47.0, 13160.0], [47.1, 13160.0], [47.2, 13160.0], [47.3, 13160.0], [47.4, 13160.0], [47.5, 13163.0], [47.6, 13163.0], [47.7, 13163.0], [47.8, 13163.0], [47.9, 13163.0], [48.0, 13164.0], [48.1, 13164.0], [48.2, 13164.0], [48.3, 13164.0], [48.4, 13164.0], [48.5, 13165.0], [48.6, 13165.0], [48.7, 13165.0], [48.8, 13165.0], [48.9, 13165.0], [49.0, 13169.0], [49.1, 13169.0], [49.2, 13169.0], [49.3, 13169.0], [49.4, 13169.0], [49.5, 13173.0], [49.6, 13173.0], [49.7, 13173.0], [49.8, 13173.0], [49.9, 13173.0], [50.0, 13178.0], [50.1, 13178.0], [50.2, 13178.0], [50.3, 13178.0], [50.4, 13178.0], [50.5, 13179.0], [50.6, 13179.0], [50.7, 13179.0], [50.8, 13179.0], [50.9, 13179.0], [51.0, 13182.0], [51.1, 13182.0], [51.2, 13182.0], [51.3, 13182.0], [51.4, 13182.0], [51.5, 13185.0], [51.6, 13185.0], [51.7, 13185.0], [51.8, 13185.0], [51.9, 13185.0], [52.0, 13195.0], [52.1, 13195.0], [52.2, 13195.0], [52.3, 13195.0], [52.4, 13195.0], [52.5, 13213.0], [52.6, 13213.0], [52.7, 13213.0], [52.8, 13213.0], [52.9, 13213.0], [53.0, 13217.0], [53.1, 13217.0], [53.2, 13217.0], [53.3, 13217.0], [53.4, 13217.0], [53.5, 13230.0], [53.6, 13230.0], [53.7, 13230.0], [53.8, 13230.0], [53.9, 13230.0], [54.0, 13234.0], [54.1, 13234.0], [54.2, 13234.0], [54.3, 13234.0], [54.4, 13234.0], [54.5, 13235.0], [54.6, 13235.0], [54.7, 13235.0], [54.8, 13235.0], [54.9, 13235.0], [55.0, 13236.0], [55.1, 13236.0], [55.2, 13236.0], [55.3, 13236.0], [55.4, 13236.0], [55.5, 13237.0], [55.6, 13237.0], [55.7, 13237.0], [55.8, 13237.0], [55.9, 13237.0], [56.0, 13239.0], [56.1, 13239.0], [56.2, 13239.0], [56.3, 13239.0], [56.4, 13239.0], [56.5, 13251.0], [56.6, 13251.0], [56.7, 13251.0], [56.8, 13251.0], [56.9, 13251.0], [57.0, 13254.0], [57.1, 13254.0], [57.2, 13254.0], [57.3, 13254.0], [57.4, 13254.0], [57.5, 13255.0], [57.6, 13255.0], [57.7, 13255.0], [57.8, 13255.0], [57.9, 13255.0], [58.0, 13255.0], [58.1, 13255.0], [58.2, 13255.0], [58.3, 13255.0], [58.4, 13255.0], [58.5, 13256.0], [58.6, 13256.0], [58.7, 13256.0], [58.8, 13256.0], [58.9, 13256.0], [59.0, 13257.0], [59.1, 13257.0], [59.2, 13257.0], [59.3, 13257.0], [59.4, 13257.0], [59.5, 13257.0], [59.6, 13257.0], [59.7, 13257.0], [59.8, 13257.0], [59.9, 13257.0], [60.0, 13258.0], [60.1, 13258.0], [60.2, 13258.0], [60.3, 13258.0], [60.4, 13258.0], [60.5, 13259.0], [60.6, 13259.0], [60.7, 13259.0], [60.8, 13259.0], [60.9, 13259.0], [61.0, 13275.0], [61.1, 13275.0], [61.2, 13275.0], [61.3, 13275.0], [61.4, 13275.0], [61.5, 13277.0], [61.6, 13277.0], [61.7, 13277.0], [61.8, 13277.0], [61.9, 13277.0], [62.0, 13278.0], [62.1, 13278.0], [62.2, 13278.0], [62.3, 13278.0], [62.4, 13278.0], [62.5, 13278.0], [62.6, 13278.0], [62.7, 13278.0], [62.8, 13278.0], [62.9, 13278.0], [63.0, 13294.0], [63.1, 13294.0], [63.2, 13294.0], [63.3, 13294.0], [63.4, 13294.0], [63.5, 13296.0], [63.6, 13296.0], [63.7, 13296.0], [63.8, 13296.0], [63.9, 13296.0], [64.0, 13307.0], [64.1, 13307.0], [64.2, 13307.0], [64.3, 13307.0], [64.4, 13307.0], [64.5, 13309.0], [64.6, 13309.0], [64.7, 13309.0], [64.8, 13309.0], [64.9, 13309.0], [65.0, 13310.0], [65.1, 13310.0], [65.2, 13310.0], [65.3, 13310.0], [65.4, 13310.0], [65.5, 13310.0], [65.6, 13310.0], [65.7, 13310.0], [65.8, 13310.0], [65.9, 13310.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13361.0], [67.1, 13361.0], [67.2, 13361.0], [67.3, 13361.0], [67.4, 13361.0], [67.5, 13386.0], [67.6, 13386.0], [67.7, 13386.0], [67.8, 13386.0], [67.9, 13386.0], [68.0, 13388.0], [68.1, 13388.0], [68.2, 13388.0], [68.3, 13388.0], [68.4, 13388.0], [68.5, 13389.0], [68.6, 13389.0], [68.7, 13389.0], [68.8, 13389.0], [68.9, 13389.0], [69.0, 13390.0], [69.1, 13390.0], [69.2, 13390.0], [69.3, 13390.0], [69.4, 13390.0], [69.5, 13390.0], [69.6, 13390.0], [69.7, 13390.0], [69.8, 13390.0], [69.9, 13390.0], [70.0, 13391.0], [70.1, 13391.0], [70.2, 13391.0], [70.3, 13391.0], [70.4, 13391.0], [70.5, 13424.0], [70.6, 13424.0], [70.7, 13424.0], [70.8, 13424.0], [70.9, 13424.0], [71.0, 13427.0], [71.1, 13427.0], [71.2, 13427.0], [71.3, 13427.0], [71.4, 13427.0], [71.5, 13441.0], [71.6, 13441.0], [71.7, 13441.0], [71.8, 13441.0], [71.9, 13441.0], [72.0, 13445.0], [72.1, 13445.0], [72.2, 13445.0], [72.3, 13445.0], [72.4, 13445.0], [72.5, 13452.0], [72.6, 13452.0], [72.7, 13452.0], [72.8, 13452.0], [72.9, 13452.0], [73.0, 13452.0], [73.1, 13452.0], [73.2, 13452.0], [73.3, 13452.0], [73.4, 13452.0], [73.5, 13462.0], [73.6, 13462.0], [73.7, 13462.0], [73.8, 13462.0], [73.9, 13462.0], [74.0, 13464.0], [74.1, 13464.0], [74.2, 13464.0], [74.3, 13464.0], [74.4, 13464.0], [74.5, 13474.0], [74.6, 13474.0], [74.7, 13474.0], [74.8, 13474.0], [74.9, 13474.0], [75.0, 13477.0], [75.1, 13477.0], [75.2, 13477.0], [75.3, 13477.0], [75.4, 13477.0], [75.5, 13483.0], [75.6, 13483.0], [75.7, 13483.0], [75.8, 13483.0], [75.9, 13483.0], [76.0, 13487.0], [76.1, 13487.0], [76.2, 13487.0], [76.3, 13487.0], [76.4, 13487.0], [76.5, 13504.0], [76.6, 13504.0], [76.7, 13504.0], [76.8, 13504.0], [76.9, 13504.0], [77.0, 13508.0], [77.1, 13508.0], [77.2, 13508.0], [77.3, 13508.0], [77.4, 13508.0], [77.5, 13512.0], [77.6, 13512.0], [77.7, 13512.0], [77.8, 13512.0], [77.9, 13512.0], [78.0, 13520.0], [78.1, 13520.0], [78.2, 13520.0], [78.3, 13520.0], [78.4, 13520.0], [78.5, 13521.0], [78.6, 13521.0], [78.7, 13521.0], [78.8, 13521.0], [78.9, 13521.0], [79.0, 13527.0], [79.1, 13527.0], [79.2, 13527.0], [79.3, 13527.0], [79.4, 13527.0], [79.5, 13538.0], [79.6, 13538.0], [79.7, 13538.0], [79.8, 13538.0], [79.9, 13538.0], [80.0, 13543.0], [80.1, 13543.0], [80.2, 13543.0], [80.3, 13543.0], [80.4, 13543.0], [80.5, 13551.0], [80.6, 13551.0], [80.7, 13551.0], [80.8, 13551.0], [80.9, 13551.0], [81.0, 13555.0], [81.1, 13555.0], [81.2, 13555.0], [81.3, 13555.0], [81.4, 13555.0], [81.5, 13559.0], [81.6, 13559.0], [81.7, 13559.0], [81.8, 13559.0], [81.9, 13559.0], [82.0, 13565.0], [82.1, 13565.0], [82.2, 13565.0], [82.3, 13565.0], [82.4, 13565.0], [82.5, 13570.0], [82.6, 13570.0], [82.7, 13570.0], [82.8, 13570.0], [82.9, 13570.0], [83.0, 13576.0], [83.1, 13576.0], [83.2, 13576.0], [83.3, 13576.0], [83.4, 13576.0], [83.5, 13585.0], [83.6, 13585.0], [83.7, 13585.0], [83.8, 13585.0], [83.9, 13585.0], [84.0, 13587.0], [84.1, 13587.0], [84.2, 13587.0], [84.3, 13587.0], [84.4, 13587.0], [84.5, 13593.0], [84.6, 13593.0], [84.7, 13593.0], [84.8, 13593.0], [84.9, 13593.0], [85.0, 13599.0], [85.1, 13599.0], [85.2, 13599.0], [85.3, 13599.0], [85.4, 13599.0], [85.5, 13603.0], [85.6, 13603.0], [85.7, 13603.0], [85.8, 13603.0], [85.9, 13603.0], [86.0, 13610.0], [86.1, 13610.0], [86.2, 13610.0], [86.3, 13610.0], [86.4, 13610.0], [86.5, 13612.0], [86.6, 13612.0], [86.7, 13612.0], [86.8, 13612.0], [86.9, 13612.0], [87.0, 13619.0], [87.1, 13619.0], [87.2, 13619.0], [87.3, 13619.0], [87.4, 13619.0], [87.5, 13623.0], [87.6, 13623.0], [87.7, 13623.0], [87.8, 13623.0], [87.9, 13623.0], [88.0, 13627.0], [88.1, 13627.0], [88.2, 13627.0], [88.3, 13627.0], [88.4, 13627.0], [88.5, 13632.0], [88.6, 13632.0], [88.7, 13632.0], [88.8, 13632.0], [88.9, 13632.0], [89.0, 13633.0], [89.1, 13633.0], [89.2, 13633.0], [89.3, 13633.0], [89.4, 13633.0], [89.5, 13642.0], [89.6, 13642.0], [89.7, 13642.0], [89.8, 13642.0], [89.9, 13642.0], [90.0, 13645.0], [90.1, 13645.0], [90.2, 13645.0], [90.3, 13645.0], [90.4, 13645.0], [90.5, 13652.0], [90.6, 13652.0], [90.7, 13652.0], [90.8, 13652.0], [90.9, 13652.0], [91.0, 13654.0], [91.1, 13654.0], [91.2, 13654.0], [91.3, 13654.0], [91.4, 13654.0], [91.5, 13655.0], [91.6, 13655.0], [91.7, 13655.0], [91.8, 13655.0], [91.9, 13655.0], [92.0, 13706.0], [92.1, 13706.0], [92.2, 13706.0], [92.3, 13706.0], [92.4, 13706.0], [92.5, 13761.0], [92.6, 13761.0], [92.7, 13761.0], [92.8, 13761.0], [92.9, 13761.0], [93.0, 13882.0], [93.1, 13882.0], [93.2, 13882.0], [93.3, 13882.0], [93.4, 13882.0], [93.5, 13883.0], [93.6, 13883.0], [93.7, 13883.0], [93.8, 13883.0], [93.9, 13883.0], [94.0, 13883.0], [94.1, 13883.0], [94.2, 13883.0], [94.3, 13883.0], [94.4, 13883.0], [94.5, 13886.0], [94.6, 13886.0], [94.7, 13886.0], [94.8, 13886.0], [94.9, 13886.0], [95.0, 13892.0], [95.1, 13892.0], [95.2, 13892.0], [95.3, 13892.0], [95.4, 13892.0], [95.5, 14083.0], [95.6, 14083.0], [95.7, 14083.0], [95.8, 14083.0], [95.9, 14083.0], [96.0, 14085.0], [96.1, 14085.0], [96.2, 14085.0], [96.3, 14085.0], [96.4, 14085.0], [96.5, 14155.0], [96.6, 14155.0], [96.7, 14155.0], [96.8, 14155.0], [96.9, 14155.0], [97.0, 14190.0], [97.1, 14190.0], [97.2, 14190.0], [97.3, 14190.0], [97.4, 14190.0], [97.5, 14395.0], [97.6, 14395.0], [97.7, 14395.0], [97.8, 14395.0], [97.9, 14395.0], [98.0, 14460.0], [98.1, 14460.0], [98.2, 14460.0], [98.3, 14460.0], [98.4, 14460.0], [98.5, 14466.0], [98.6, 14466.0], [98.7, 14466.0], [98.8, 14466.0], [98.9, 14466.0], [99.0, 14503.0], [99.1, 14503.0], [99.2, 14503.0], [99.3, 14503.0], [99.4, 14503.0], [99.5, 14542.0], [99.6, 14542.0], [99.7, 14542.0], [99.8, 14542.0], [99.9, 14542.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[0.0, 30026.0], [0.1, 30026.0], [0.2, 30026.0], [0.3, 30026.0], [0.4, 30026.0], [0.5, 30026.0], [0.6, 30026.0], [0.7, 30026.0], [0.8, 30026.0], [0.9, 30026.0], [1.0, 30026.0], [1.1, 30026.0], [1.2, 30026.0], [1.3, 30026.0], [1.4, 30026.0], [1.5, 30026.0], [1.6, 30026.0], [1.7, 30026.0], [1.8, 30026.0], [1.9, 30026.0], [2.0, 30026.0], [2.1, 30026.0], [2.2, 30026.0], [2.3, 30026.0], [2.4, 30026.0], [2.5, 30026.0], [2.6, 30026.0], [2.7, 30026.0], [2.8, 30026.0], [2.9, 30026.0], [3.0, 30026.0], [3.1, 30026.0], [3.2, 30026.0], [3.3, 30026.0], [3.4, 30026.0], [3.5, 30026.0], [3.6, 30026.0], [3.7, 30026.0], [3.8, 30026.0], [3.9, 30026.0], [4.0, 30026.0], [4.1, 30026.0], [4.2, 30026.0], [4.3, 30026.0], [4.4, 30026.0], [4.5, 30027.0], [4.6, 30027.0], [4.7, 30027.0], [4.8, 30027.0], [4.9, 30027.0], [5.0, 30027.0], [5.1, 30027.0], [5.2, 30027.0], [5.3, 30027.0], [5.4, 30027.0], [5.5, 30027.0], [5.6, 30027.0], [5.7, 30027.0], [5.8, 30027.0], [5.9, 30027.0], [6.0, 30027.0], [6.1, 30027.0], [6.2, 30027.0], [6.3, 30027.0], [6.4, 30027.0], [6.5, 30027.0], [6.6, 30027.0], [6.7, 30027.0], [6.8, 30027.0], [6.9, 30027.0], [7.0, 30027.0], [7.1, 30027.0], [7.2, 30027.0], [7.3, 30027.0], [7.4, 30027.0], [7.5, 30027.0], [7.6, 30027.0], [7.7, 30027.0], [7.8, 30027.0], [7.9, 30027.0], [8.0, 30027.0], [8.1, 30027.0], [8.2, 30027.0], [8.3, 30027.0], [8.4, 30027.0], [8.5, 30027.0], [8.6, 30027.0], [8.7, 30027.0], [8.8, 30027.0], [8.9, 30027.0], [9.0, 30027.0], [9.1, 30027.0], [9.2, 30027.0], [9.3, 30027.0], [9.4, 30027.0], [9.5, 30027.0], [9.6, 30027.0], [9.7, 30027.0], [9.8, 30027.0], [9.9, 30027.0], [10.0, 30027.0], [10.1, 30027.0], [10.2, 30027.0], [10.3, 30027.0], [10.4, 30027.0], [10.5, 30027.0], [10.6, 30027.0], [10.7, 30027.0], [10.8, 30027.0], [10.9, 30027.0], [11.0, 30027.0], [11.1, 30027.0], [11.2, 30027.0], [11.3, 30027.0], [11.4, 30027.0], [11.5, 30027.0], [11.6, 30027.0], [11.7, 30027.0], [11.8, 30027.0], [11.9, 30027.0], [12.0, 30027.0], [12.1, 30027.0], [12.2, 30027.0], [12.3, 30027.0], [12.4, 30027.0], [12.5, 30027.0], [12.6, 30027.0], [12.7, 30027.0], [12.8, 30027.0], [12.9, 30027.0], [13.0, 30027.0], [13.1, 30027.0], [13.2, 30027.0], [13.3, 30027.0], [13.4, 30027.0], [13.5, 30027.0], [13.6, 30027.0], [13.7, 30027.0], [13.8, 30027.0], [13.9, 30027.0], [14.0, 30027.0], [14.1, 30027.0], [14.2, 30027.0], [14.3, 30027.0], [14.4, 30027.0], [14.5, 30027.0], [14.6, 30027.0], [14.7, 30027.0], [14.8, 30027.0], [14.9, 30027.0], [15.0, 30027.0], [15.1, 30027.0], [15.2, 30027.0], [15.3, 30027.0], [15.4, 30027.0], [15.5, 30027.0], [15.6, 30027.0], [15.7, 30027.0], [15.8, 30027.0], [15.9, 30027.0], [16.0, 30027.0], [16.1, 30027.0], [16.2, 30027.0], [16.3, 30027.0], [16.4, 30027.0], [16.5, 30027.0], [16.6, 30027.0], [16.7, 30027.0], [16.8, 30027.0], [16.9, 30027.0], [17.0, 30027.0], [17.1, 30027.0], [17.2, 30027.0], [17.3, 30027.0], [17.4, 30027.0], [17.5, 30027.0], [17.6, 30027.0], [17.7, 30027.0], [17.8, 30027.0], [17.9, 30027.0], [18.0, 30027.0], [18.1, 30027.0], [18.2, 30027.0], [18.3, 30027.0], [18.4, 30027.0], [18.5, 30027.0], [18.6, 30027.0], [18.7, 30027.0], [18.8, 30027.0], [18.9, 30027.0], [19.0, 30027.0], [19.1, 30027.0], [19.2, 30027.0], [19.3, 30027.0], [19.4, 30027.0], [19.5, 30027.0], [19.6, 30027.0], [19.7, 30027.0], [19.8, 30027.0], [19.9, 30027.0], [20.0, 30027.0], [20.1, 30027.0], [20.2, 30027.0], [20.3, 30027.0], [20.4, 30027.0], [20.5, 30027.0], [20.6, 30027.0], [20.7, 30027.0], [20.8, 30027.0], [20.9, 30027.0], [21.0, 30027.0], [21.1, 30027.0], [21.2, 30027.0], [21.3, 30027.0], [21.4, 30027.0], [21.5, 30027.0], [21.6, 30027.0], [21.7, 30027.0], [21.8, 30027.0], [21.9, 30027.0], [22.0, 30027.0], [22.1, 30027.0], [22.2, 30027.0], [22.3, 30027.0], [22.4, 30027.0], [22.5, 30027.0], [22.6, 30027.0], [22.7, 30027.0], [22.8, 30027.0], [22.9, 30027.0], [23.0, 30027.0], [23.1, 30027.0], [23.2, 30027.0], [23.3, 30027.0], [23.4, 30027.0], [23.5, 30027.0], [23.6, 30027.0], [23.7, 30027.0], [23.8, 30027.0], [23.9, 30027.0], [24.0, 30027.0], [24.1, 30027.0], [24.2, 30027.0], [24.3, 30027.0], [24.4, 30027.0], [24.5, 30027.0], [24.6, 30027.0], [24.7, 30027.0], [24.8, 30027.0], [24.9, 30027.0], [25.0, 30027.0], [25.1, 30027.0], [25.2, 30027.0], [25.3, 30027.0], [25.4, 30027.0], [25.5, 30027.0], [25.6, 30027.0], [25.7, 30027.0], [25.8, 30027.0], [25.9, 30027.0], [26.0, 30027.0], [26.1, 30027.0], [26.2, 30027.0], [26.3, 30027.0], [26.4, 30027.0], [26.5, 30027.0], [26.6, 30027.0], [26.7, 30027.0], [26.8, 30027.0], [26.9, 30027.0], [27.0, 30027.0], [27.1, 30027.0], [27.2, 30027.0], [27.3, 30027.0], [27.4, 30027.0], [27.5, 30027.0], [27.6, 30027.0], [27.7, 30027.0], [27.8, 30027.0], [27.9, 30027.0], [28.0, 30027.0], [28.1, 30027.0], [28.2, 30027.0], [28.3, 30027.0], [28.4, 30027.0], [28.5, 30027.0], [28.6, 30027.0], [28.7, 30027.0], [28.8, 30027.0], [28.9, 30027.0], [29.0, 30027.0], [29.1, 30027.0], [29.2, 30027.0], [29.3, 30027.0], [29.4, 30027.0], [29.5, 30027.0], [29.6, 30027.0], [29.7, 30027.0], [29.8, 30027.0], [29.9, 30027.0], [30.0, 30027.0], [30.1, 30027.0], [30.2, 30027.0], [30.3, 30027.0], [30.4, 30027.0], [30.5, 30027.0], [30.6, 30027.0], [30.7, 30027.0], [30.8, 30027.0], [30.9, 30027.0], [31.0, 30027.0], [31.1, 30027.0], [31.2, 30027.0], [31.3, 30027.0], [31.4, 30027.0], [31.5, 30027.0], [31.6, 30027.0], [31.7, 30027.0], [31.8, 30027.0], [31.9, 30027.0], [32.0, 30028.0], [32.1, 30028.0], [32.2, 30028.0], [32.3, 30028.0], [32.4, 30028.0], [32.5, 30028.0], [32.6, 30028.0], [32.7, 30028.0], [32.8, 30028.0], [32.9, 30028.0], [33.0, 30028.0], [33.1, 30028.0], [33.2, 30028.0], [33.3, 30028.0], [33.4, 30028.0], [33.5, 30028.0], [33.6, 30028.0], [33.7, 30028.0], [33.8, 30028.0], [33.9, 30028.0], [34.0, 30028.0], [34.1, 30028.0], [34.2, 30028.0], [34.3, 30028.0], [34.4, 30028.0], [34.5, 30028.0], [34.6, 30028.0], [34.7, 30028.0], [34.8, 30028.0], [34.9, 30028.0], [35.0, 30028.0], [35.1, 30028.0], [35.2, 30028.0], [35.3, 30028.0], [35.4, 30028.0], [35.5, 30028.0], [35.6, 30028.0], [35.7, 30028.0], [35.8, 30028.0], [35.9, 30028.0], [36.0, 30028.0], [36.1, 30028.0], [36.2, 30028.0], [36.3, 30028.0], [36.4, 30028.0], [36.5, 30028.0], [36.6, 30028.0], [36.7, 30028.0], [36.8, 30028.0], [36.9, 30028.0], [37.0, 30028.0], [37.1, 30028.0], [37.2, 30028.0], [37.3, 30028.0], [37.4, 30028.0], [37.5, 30028.0], [37.6, 30028.0], [37.7, 30028.0], [37.8, 30028.0], [37.9, 30028.0], [38.0, 30028.0], [38.1, 30028.0], [38.2, 30028.0], [38.3, 30028.0], [38.4, 30028.0], [38.5, 30028.0], [38.6, 30028.0], [38.7, 30028.0], [38.8, 30028.0], [38.9, 30028.0], [39.0, 30028.0], [39.1, 30028.0], [39.2, 30028.0], [39.3, 30028.0], [39.4, 30028.0], [39.5, 30028.0], [39.6, 30028.0], [39.7, 30028.0], [39.8, 30028.0], [39.9, 30028.0], [40.0, 30028.0], [40.1, 30028.0], [40.2, 30028.0], [40.3, 30028.0], [40.4, 30028.0], [40.5, 30028.0], [40.6, 30028.0], [40.7, 30028.0], [40.8, 30028.0], [40.9, 30028.0], [41.0, 30028.0], [41.1, 30028.0], [41.2, 30028.0], [41.3, 30028.0], [41.4, 30028.0], [41.5, 30028.0], [41.6, 30028.0], [41.7, 30028.0], [41.8, 30028.0], [41.9, 30028.0], [42.0, 30028.0], [42.1, 30028.0], [42.2, 30028.0], [42.3, 30028.0], [42.4, 30028.0], [42.5, 30028.0], [42.6, 30028.0], [42.7, 30028.0], [42.8, 30028.0], [42.9, 30028.0], [43.0, 30028.0], [43.1, 30028.0], [43.2, 30028.0], [43.3, 30028.0], [43.4, 30028.0], [43.5, 30028.0], [43.6, 30028.0], [43.7, 30028.0], [43.8, 30028.0], [43.9, 30028.0], [44.0, 30028.0], [44.1, 30028.0], [44.2, 30028.0], [44.3, 30028.0], [44.4, 30028.0], [44.5, 30028.0], [44.6, 30028.0], [44.7, 30028.0], [44.8, 30028.0], [44.9, 30028.0], [45.0, 30028.0], [45.1, 30028.0], [45.2, 30028.0], [45.3, 30028.0], [45.4, 30028.0], [45.5, 30028.0], [45.6, 30028.0], [45.7, 30028.0], [45.8, 30028.0], [45.9, 30028.0], [46.0, 30028.0], [46.1, 30028.0], [46.2, 30028.0], [46.3, 30028.0], [46.4, 30028.0], [46.5, 30028.0], [46.6, 30028.0], [46.7, 30028.0], [46.8, 30028.0], [46.9, 30028.0], [47.0, 30028.0], [47.1, 30028.0], [47.2, 30028.0], [47.3, 30028.0], [47.4, 30028.0], [47.5, 30028.0], [47.6, 30028.0], [47.7, 30028.0], [47.8, 30028.0], [47.9, 30028.0], [48.0, 30028.0], [48.1, 30028.0], [48.2, 30028.0], [48.3, 30028.0], [48.4, 30028.0], [48.5, 30028.0], [48.6, 30028.0], [48.7, 30028.0], [48.8, 30028.0], [48.9, 30028.0], [49.0, 30028.0], [49.1, 30028.0], [49.2, 30028.0], [49.3, 30028.0], [49.4, 30028.0], [49.5, 30028.0], [49.6, 30028.0], [49.7, 30028.0], [49.8, 30028.0], [49.9, 30028.0], [50.0, 30028.0], [50.1, 30028.0], [50.2, 30028.0], [50.3, 30028.0], [50.4, 30028.0], [50.5, 30028.0], [50.6, 30028.0], [50.7, 30028.0], [50.8, 30028.0], [50.9, 30028.0], [51.0, 30028.0], [51.1, 30028.0], [51.2, 30028.0], [51.3, 30028.0], [51.4, 30028.0], [51.5, 30028.0], [51.6, 30028.0], [51.7, 30028.0], [51.8, 30028.0], [51.9, 30028.0], [52.0, 30028.0], [52.1, 30028.0], [52.2, 30028.0], [52.3, 30028.0], [52.4, 30028.0], [52.5, 30028.0], [52.6, 30028.0], [52.7, 30028.0], [52.8, 30028.0], [52.9, 30028.0], [53.0, 30028.0], [53.1, 30028.0], [53.2, 30028.0], [53.3, 30028.0], [53.4, 30028.0], [53.5, 30028.0], [53.6, 30028.0], [53.7, 30028.0], [53.8, 30028.0], [53.9, 30028.0], [54.0, 30028.0], [54.1, 30028.0], [54.2, 30028.0], [54.3, 30028.0], [54.4, 30028.0], [54.5, 30028.0], [54.6, 30028.0], [54.7, 30028.0], [54.8, 30028.0], [54.9, 30028.0], [55.0, 30028.0], [55.1, 30028.0], [55.2, 30028.0], [55.3, 30028.0], [55.4, 30028.0], [55.5, 30028.0], [55.6, 30028.0], [55.7, 30028.0], [55.8, 30028.0], [55.9, 30028.0], [56.0, 30028.0], [56.1, 30028.0], [56.2, 30028.0], [56.3, 30028.0], [56.4, 30028.0], [56.5, 30028.0], [56.6, 30028.0], [56.7, 30028.0], [56.8, 30028.0], [56.9, 30028.0], [57.0, 30028.0], [57.1, 30028.0], [57.2, 30028.0], [57.3, 30028.0], [57.4, 30028.0], [57.5, 30028.0], [57.6, 30028.0], [57.7, 30028.0], [57.8, 30028.0], [57.9, 30028.0], [58.0, 30028.0], [58.1, 30028.0], [58.2, 30028.0], [58.3, 30028.0], [58.4, 30028.0], [58.5, 30028.0], [58.6, 30028.0], [58.7, 30028.0], [58.8, 30028.0], [58.9, 30028.0], [59.0, 30028.0], [59.1, 30028.0], [59.2, 30028.0], [59.3, 30028.0], [59.4, 30028.0], [59.5, 30028.0], [59.6, 30028.0], [59.7, 30028.0], [59.8, 30028.0], [59.9, 30028.0], [60.0, 30028.0], [60.1, 30028.0], [60.2, 30028.0], [60.3, 30028.0], [60.4, 30028.0], [60.5, 30028.0], [60.6, 30028.0], [60.7, 30028.0], [60.8, 30028.0], [60.9, 30028.0], [61.0, 30028.0], [61.1, 30028.0], [61.2, 30028.0], [61.3, 30028.0], [61.4, 30028.0], [61.5, 30028.0], [61.6, 30028.0], [61.7, 30028.0], [61.8, 30028.0], [61.9, 30028.0], [62.0, 30028.0], [62.1, 30028.0], [62.2, 30028.0], [62.3, 30028.0], [62.4, 30028.0], [62.5, 30028.0], [62.6, 30028.0], [62.7, 30028.0], [62.8, 30028.0], [62.9, 30028.0], [63.0, 30028.0], [63.1, 30028.0], [63.2, 30028.0], [63.3, 30028.0], [63.4, 30028.0], [63.5, 30028.0], [63.6, 30028.0], [63.7, 30028.0], [63.8, 30028.0], [63.9, 30028.0], [64.0, 30028.0], [64.1, 30028.0], [64.2, 30028.0], [64.3, 30028.0], [64.4, 30028.0], [64.5, 30029.0], [64.6, 30029.0], [64.7, 30029.0], [64.8, 30029.0], [64.9, 30029.0], [65.0, 30029.0], [65.1, 30029.0], [65.2, 30029.0], [65.3, 30029.0], [65.4, 30029.0], [65.5, 30029.0], [65.6, 30029.0], [65.7, 30029.0], [65.8, 30029.0], [65.9, 30029.0], [66.0, 30029.0], [66.1, 30029.0], [66.2, 30029.0], [66.3, 30029.0], [66.4, 30029.0], [66.5, 30029.0], [66.6, 30029.0], [66.7, 30029.0], [66.8, 30029.0], [66.9, 30029.0], [67.0, 30029.0], [67.1, 30029.0], [67.2, 30029.0], [67.3, 30029.0], [67.4, 30029.0], [67.5, 30029.0], [67.6, 30029.0], [67.7, 30029.0], [67.8, 30029.0], [67.9, 30029.0], [68.0, 30029.0], [68.1, 30029.0], [68.2, 30029.0], [68.3, 30029.0], [68.4, 30029.0], [68.5, 30029.0], [68.6, 30029.0], [68.7, 30029.0], [68.8, 30029.0], [68.9, 30029.0], [69.0, 30029.0], [69.1, 30029.0], [69.2, 30029.0], [69.3, 30029.0], [69.4, 30029.0], [69.5, 30029.0], [69.6, 30029.0], [69.7, 30029.0], [69.8, 30029.0], [69.9, 30029.0], [70.0, 30029.0], [70.1, 30029.0], [70.2, 30029.0], [70.3, 30029.0], [70.4, 30029.0], [70.5, 30029.0], [70.6, 30029.0], [70.7, 30029.0], [70.8, 30029.0], [70.9, 30029.0], [71.0, 30029.0], [71.1, 30029.0], [71.2, 30029.0], [71.3, 30029.0], [71.4, 30029.0], [71.5, 30029.0], [71.6, 30029.0], [71.7, 30029.0], [71.8, 30029.0], [71.9, 30029.0], [72.0, 30029.0], [72.1, 30029.0], [72.2, 30029.0], [72.3, 30029.0], [72.4, 30029.0], [72.5, 30030.0], [72.6, 30030.0], [72.7, 30030.0], [72.8, 30030.0], [72.9, 30030.0], [73.0, 30030.0], [73.1, 30030.0], [73.2, 30030.0], [73.3, 30030.0], [73.4, 30030.0], [73.5, 30030.0], [73.6, 30030.0], [73.7, 30030.0], [73.8, 30030.0], [73.9, 30030.0], [74.0, 30030.0], [74.1, 30030.0], [74.2, 30030.0], [74.3, 30030.0], [74.4, 30030.0], [74.5, 30030.0], [74.6, 30030.0], [74.7, 30030.0], [74.8, 30030.0], [74.9, 30030.0], [75.0, 30030.0], [75.1, 30030.0], [75.2, 30030.0], [75.3, 30030.0], [75.4, 30030.0], [75.5, 30030.0], [75.6, 30030.0], [75.7, 30030.0], [75.8, 30030.0], [75.9, 30030.0], [76.0, 30030.0], [76.1, 30030.0], [76.2, 30030.0], [76.3, 30030.0], [76.4, 30030.0], [76.5, 30030.0], [76.6, 30030.0], [76.7, 30030.0], [76.8, 30030.0], [76.9, 30030.0], [77.0, 30030.0], [77.1, 30030.0], [77.2, 30030.0], [77.3, 30030.0], [77.4, 30030.0], [77.5, 30031.0], [77.6, 30031.0], [77.7, 30031.0], [77.8, 30031.0], [77.9, 30031.0], [78.0, 30031.0], [78.1, 30031.0], [78.2, 30031.0], [78.3, 30031.0], [78.4, 30031.0], [78.5, 30031.0], [78.6, 30031.0], [78.7, 30031.0], [78.8, 30031.0], [78.9, 30031.0], [79.0, 30031.0], [79.1, 30031.0], [79.2, 30031.0], [79.3, 30031.0], [79.4, 30031.0], [79.5, 30031.0], [79.6, 30031.0], [79.7, 30031.0], [79.8, 30031.0], [79.9, 30031.0], [80.0, 30031.0], [80.1, 30031.0], [80.2, 30031.0], [80.3, 30031.0], [80.4, 30031.0], [80.5, 30031.0], [80.6, 30031.0], [80.7, 30031.0], [80.8, 30031.0], [80.9, 30031.0], [81.0, 30031.0], [81.1, 30031.0], [81.2, 30031.0], [81.3, 30031.0], [81.4, 30031.0], [81.5, 30031.0], [81.6, 30031.0], [81.7, 30031.0], [81.8, 30031.0], [81.9, 30031.0], [82.0, 30031.0], [82.1, 30031.0], [82.2, 30031.0], [82.3, 30031.0], [82.4, 30031.0], [82.5, 30031.0], [82.6, 30031.0], [82.7, 30031.0], [82.8, 30031.0], [82.9, 30031.0], [83.0, 30031.0], [83.1, 30031.0], [83.2, 30031.0], [83.3, 30031.0], [83.4, 30031.0], [83.5, 30031.0], [83.6, 30031.0], [83.7, 30031.0], [83.8, 30031.0], [83.9, 30031.0], [84.0, 30032.0], [84.1, 30032.0], [84.2, 30032.0], [84.3, 30032.0], [84.4, 30032.0], [84.5, 30032.0], [84.6, 30032.0], [84.7, 30032.0], [84.8, 30032.0], [84.9, 30032.0], [85.0, 30032.0], [85.1, 30032.0], [85.2, 30032.0], [85.3, 30032.0], [85.4, 30032.0], [85.5, 30032.0], [85.6, 30032.0], [85.7, 30032.0], [85.8, 30032.0], [85.9, 30032.0], [86.0, 30032.0], [86.1, 30032.0], [86.2, 30032.0], [86.3, 30032.0], [86.4, 30032.0], [86.5, 30034.0], [86.6, 30034.0], [86.7, 30034.0], [86.8, 30034.0], [86.9, 30034.0], [87.0, 30034.0], [87.1, 30034.0], [87.2, 30034.0], [87.3, 30034.0], [87.4, 30034.0], [87.5, 30035.0], [87.6, 30035.0], [87.7, 30035.0], [87.8, 30035.0], [87.9, 30035.0], [88.0, 30036.0], [88.1, 30036.0], [88.2, 30036.0], [88.3, 30036.0], [88.4, 30036.0], [88.5, 30038.0], [88.6, 30038.0], [88.7, 30038.0], [88.8, 30038.0], [88.9, 30038.0], [89.0, 30039.0], [89.1, 30039.0], [89.2, 30039.0], [89.3, 30039.0], [89.4, 30039.0], [89.5, 30040.0], [89.6, 30040.0], [89.7, 30040.0], [89.8, 30040.0], [89.9, 30040.0], [90.0, 30041.0], [90.1, 30041.0], [90.2, 30041.0], [90.3, 30041.0], [90.4, 30041.0], [90.5, 30041.0], [90.6, 30041.0], [90.7, 30041.0], [90.8, 30041.0], [90.9, 30041.0], [91.0, 30041.0], [91.1, 30041.0], [91.2, 30041.0], [91.3, 30041.0], [91.4, 30041.0], [91.5, 30042.0], [91.6, 30042.0], [91.7, 30042.0], [91.8, 30042.0], [91.9, 30042.0], [92.0, 30045.0], [92.1, 30045.0], [92.2, 30045.0], [92.3, 30045.0], [92.4, 30045.0], [92.5, 30045.0], [92.6, 30045.0], [92.7, 30045.0], [92.8, 30045.0], [92.9, 30045.0], [93.0, 30047.0], [93.1, 30047.0], [93.2, 30047.0], [93.3, 30047.0], [93.4, 30047.0], [93.5, 30049.0], [93.6, 30049.0], [93.7, 30049.0], [93.8, 30049.0], [93.9, 30049.0], [94.0, 30050.0], [94.1, 30050.0], [94.2, 30050.0], [94.3, 30050.0], [94.4, 30050.0], [94.5, 30050.0], [94.6, 30050.0], [94.7, 30050.0], [94.8, 30050.0], [94.9, 30050.0], [95.0, 30052.0], [95.1, 30052.0], [95.2, 30052.0], [95.3, 30052.0], [95.4, 30052.0], [95.5, 30056.0], [95.6, 30056.0], [95.7, 30056.0], [95.8, 30056.0], [95.9, 30056.0], [96.0, 30059.0], [96.1, 30059.0], [96.2, 30059.0], [96.3, 30059.0], [96.4, 30059.0], [96.5, 30060.0], [96.6, 30060.0], [96.7, 30060.0], [96.8, 30060.0], [96.9, 30060.0], [97.0, 30060.0], [97.1, 30060.0], [97.2, 30060.0], [97.3, 30060.0], [97.4, 30060.0], [97.5, 30064.0], [97.6, 30064.0], [97.7, 30064.0], [97.8, 30064.0], [97.9, 30064.0], [98.0, 30065.0], [98.1, 30065.0], [98.2, 30065.0], [98.3, 30065.0], [98.4, 30065.0], [98.5, 30070.0], [98.6, 30070.0], [98.7, 30070.0], [98.8, 30070.0], [98.9, 30070.0], [99.0, 30071.0], [99.1, 30071.0], [99.2, 30071.0], [99.3, 30071.0], [99.4, 30071.0], [99.5, 30075.0], [99.6, 30075.0], [99.7, 30075.0], [99.8, 30075.0], [99.9, 30075.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 20502.0, "series": [{"data": [[0.0, 20502.0], [2100.0, 11.0], [3000.0, 624.0], [3100.0, 308.0], [200.0, 557.0], [3200.0, 2.0], [3300.0, 5.0], [3400.0, 3.0], [3500.0, 2.0], [15000.0, 2.0], [1000.0, 1224.0], [1100.0, 544.0], [300.0, 498.0], [1200.0, 92.0], [1300.0, 47.0], [21000.0, 18.0], [1400.0, 44.0], [1500.0, 12.0], [100.0, 14962.0], [400.0, 247.0], [7000.0, 97.0], [7100.0, 66.0], [500.0, 25.0], [2000.0, 3.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12600.0, 21.0], [12700.0, 8.0], [13200.0, 23.0], [12800.0, 16.0], [13300.0, 13.0], [12900.0, 31.0], [13100.0, 23.0], [13000.0, 6.0], [13500.0, 18.0], [13600.0, 13.0], [13400.0, 12.0], [13700.0, 2.0], [13800.0, 5.0], [14100.0, 2.0], [14000.0, 2.0], [14300.0, 1.0], [14400.0, 2.0], [14500.0, 2.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[30000.0, 200.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 30000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 18.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 20759.0, "series": [{"data": [[0.0, 20759.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 16032.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 3486.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 18.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 100.655, "minX": 1.61757876E12, "maxY": 193.97767214960191, "series": [{"data": [[1.61757876E12, 156.40499999999997]], "isOverall": false, "label": "CreateRoom-SelectFC-Ready", "isController": false}, {"data": [[1.61757876E12, 193.97767214960191], [1.61757882E12, 167.86267045929878]], "isOverall": false, "label": "JoinServer+ChangeNickName+JoinRoom&Ready", "isController": false}, {"data": [[1.61757876E12, 100.655]], "isOverall": false, "label": "JoinServer+JoinRoom&waitfor(1min)ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757882E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 30072.5, "series": [{"data": [[2.0, 15064.0], [3.0, 362.66666666666663], [4.0, 28.0], [5.0, 534.5], [6.0, 171.85714285714286], [7.0, 240.78787878787878], [8.0, 29.1875], [9.0, 27.83333333333333], [10.0, 630.8800000000001], [11.0, 126.65853658536588], [12.0, 27.947368421052634], [13.0, 28.0], [14.0, 28.250000000000004], [15.0, 28.0], [16.0, 56.51428571428571], [17.0, 141.46478873239442], [18.0, 27.999999999999996], [19.0, 808.5555555555555], [20.0, 347.27272727272725], [21.0, 27.944444444444443], [22.0, 50.97727272727271], [23.0, 259.7692307692307], [24.0, 28.2], [25.0, 28.571428571428573], [26.0, 83.66666666666666], [27.0, 28.46153846153846], [28.0, 51.1860465116279], [29.0, 91.56250000000001], [30.0, 70.29166666666667], [31.0, 111.79166666666666], [33.0, 490.6923076923077], [32.0, 28.0], [35.0, 308.1627906976745], [34.0, 111.83333333333331], [37.0, 135.99999999999994], [36.0, 27.5], [39.0, 28.35], [38.0, 84.5], [41.0, 31.0], [40.0, 29.555555555555554], [43.0, 29.133333333333333], [42.0, 228.86666666666667], [45.0, 153.95833333333334], [44.0, 27.75], [47.0, 60.92187499999999], [46.0, 131.64102564102566], [49.0, 123.59523809523807], [48.0, 28.33333333333333], [51.0, 27.923076923076923], [50.0, 61.66666666666664], [53.0, 28.43103448275862], [52.0, 27.6], [55.0, 29.0], [54.0, 27.625], [57.0, 426.0], [56.0, 30.09090909090909], [59.0, 29.0], [58.0, 215.96875000000003], [61.0, 34.166666666666664], [60.0, 54.19047619047619], [63.0, 106.27659574468083], [62.0, 328.18518518518516], [67.0, 147.35294117647055], [66.0, 122.03125000000001], [65.0, 191.53488372093022], [64.0, 211.54545454545453], [71.0, 85.05555555555556], [70.0, 250.88888888888889], [69.0, 631.8], [68.0, 486.36363636363626], [75.0, 28.047619047619047], [74.0, 27.857142857142854], [73.0, 28.41666666666666], [72.0, 27.571428571428573], [79.0, 642.6666666666666], [78.0, 28.647058823529413], [77.0, 28.19047619047619], [76.0, 61.80000000000001], [83.0, 36.8], [82.0, 121.63636363636363], [81.0, 30.0], [80.0, 115.34782608695653], [87.0, 104.07407407407408], [86.0, 28.588235294117645], [85.0, 82.49999999999999], [84.0, 37.666666666666664], [91.0, 345.70000000000005], [90.0, 162.78787878787878], [89.0, 108.30769230769229], [88.0, 121.90909090909089], [95.0, 223.91666666666666], [94.0, 962.5000000000001], [93.0, 154.2249999999999], [92.0, 290.77976190476187], [99.0, 437.7333333333333], [98.0, 674.3199999999999], [97.0, 261.38461538461536], [96.0, 620.6470588235294], [103.0, 36.63636363636364], [102.0, 32.70731707317072], [101.0, 75.4885496183206], [100.0, 29.0], [107.0, 57.75000000000001], [106.0, 51.94444444444443], [105.0, 38.333333333333336], [104.0, 38.5], [111.0, 94.875], [110.0, 118.60526315789474], [109.0, 108.6206896551724], [108.0, 54.85507246376812], [115.0, 292.4166666666667], [114.0, 42.0], [113.0, 40.1875], [112.0, 38.29411764705882], [119.0, 105.99999999999997], [118.0, 134.72727272727272], [117.0, 225.0], [116.0, 39.22222222222223], [123.0, 166.90697674418604], [122.0, 52.7], [121.0, 76.54054054054055], [120.0, 46.74999999999999], [127.0, 78.3859649122807], [126.0, 88.79591836734693], [125.0, 156.60714285714283], [124.0, 49.16666666666666], [135.0, 37.2], [134.0, 111.01960784313731], [133.0, 81.35031847133757], [132.0, 199.23684210526315], [131.0, 167.75], [130.0, 41.5], [129.0, 151.10714285714286], [128.0, 42.333333333333336], [143.0, 183.3333333333333], [142.0, 368.7619047619048], [141.0, 172.49999999999997], [140.0, 189.24999999999997], [139.0, 185.85833333333338], [138.0, 75.73076923076923], [137.0, 35.0], [136.0, 35.69230769230769], [151.0, 107.15789473684211], [150.0, 88.37383177570095], [149.0, 64.17647058823529], [148.0, 56.05128205128205], [147.0, 93.97333333333334], [146.0, 29.833333333333332], [145.0, 120.54477611940295], [144.0, 363.5], [159.0, 142.81132075471697], [158.0, 135.9520958083832], [157.0, 359.516339869281], [156.0, 192.63265306122452], [155.0, 121.74550898203596], [154.0, 109.96153846153845], [153.0, 118.96774193548387], [152.0, 107.625], [167.0, 176.62393162393167], [166.0, 129.2445652173913], [165.0, 103.82352941176471], [164.0, 104.85714285714288], [163.0, 99.27450980392157], [162.0, 140.48178137651828], [161.0, 144.47089947089944], [160.0, 291.6802884615385], [175.0, 243.6925287356322], [174.0, 252.14705882352942], [173.0, 85.64835164835159], [172.0, 125.91304347826089], [171.0, 224.57272727272752], [170.0, 162.79900990099003], [169.0, 110.28947368421052], [168.0, 130.28169014084506], [183.0, 98.30357142857142], [182.0, 204.10091743119273], [181.0, 233.5151515151515], [180.0, 172.63513513513516], [179.0, 170.74248927038624], [178.0, 181.37790697674416], [177.0, 212.10852713178286], [176.0, 373.8947368421053], [191.0, 151.43214285714288], [190.0, 294.46783625730956], [189.0, 97.0], [188.0, 178.82851817334566], [187.0, 147.5489130434783], [186.0, 162.63235294117663], [185.0, 113.28830645161287], [184.0, 111.54545454545456], [199.0, 149.57689178193667], [198.0, 310.6702508960575], [197.0, 305.74835309617936], [196.0, 140.97426470588198], [195.0, 160.48743016759784], [194.0, 179.2106598984771], [193.0, 126.85282258064517], [192.0, 153.71030640668505], [200.0, 386.90573309779984], [414.0, 48.75], [415.0, 29.0], [413.0, 111.4], [403.0, 115.0], [401.0, 113.0], [400.0, 367.71940755873385], [418.0, 30.0], [416.0, 215.86949685534563], [419.0, 28.0], [428.0, 28.0], [429.0, 27.333333333333332], [430.0, 29.0], [431.0, 28.5], [420.0, 29.599999999999998], [421.0, 27.5], [422.0, 28.0], [423.0, 28.0], [424.0, 28.333333333333332], [425.0, 28.333333333333332], [426.0, 30.09090909090909], [427.0, 30.0], [433.0, 31.5], [432.0, 30.0], [434.0, 29.666666666666668], [435.0, 28.0], [436.0, 53.5], [437.0, 28.0], [438.0, 28.0], [439.0, 28.0], [440.0, 30.0], [446.0, 27.0], [447.0, 29.0], [444.0, 30.0], [445.0, 50.666666666666664], [441.0, 27.5], [442.0, 28.0], [443.0, 30.0], [448.0, 68.5], [451.0, 36.333333333333336], [460.0, 37.25], [461.0, 40.10526315789474], [462.0, 40.4], [463.0, 38.42857142857143], [452.0, 120.55555555555556], [453.0, 77.6875], [454.0, 39.0], [455.0, 37.333333333333336], [456.0, 30.2], [457.0, 30.0], [458.0, 30.5], [459.0, 33.142857142857146], [465.0, 35.5], [464.0, 36.0], [466.0, 34.1], [467.0, 34.25], [468.0, 36.33333333333333], [469.0, 41.0], [470.0, 45.8], [471.0, 45.94117647058823], [472.0, 44.6], [478.0, 51.099999999999994], [479.0, 49.5], [476.0, 48.857142857142854], [477.0, 51.5], [473.0, 44.5], [474.0, 47.25], [475.0, 47.0], [481.0, 52.3], [480.0, 49.2], [482.0, 54.5], [483.0, 57.0], [484.0, 59.33333333333333], [485.0, 59.75], [486.0, 58.83333333333333], [487.0, 57.199999999999996], [488.0, 55.333333333333336], [494.0, 62.875], [495.0, 63.4], [492.0, 58.25], [493.0, 60.5], [489.0, 62.666666666666664], [490.0, 59.09090909090909], [491.0, 59.857142857142854], [497.0, 65.33333333333333], [496.0, 64.83333333333333], [498.0, 65.0], [499.0, 64.66666666666667], [500.0, 64.44444444444446], [501.0, 64.0], [502.0, 62.77777777777778], [503.0, 65.6], [504.0, 68.16666666666667], [510.0, 67.75], [511.0, 69.60000000000002], [508.0, 66.5], [509.0, 70.00000000000001], [505.0, 69.66666666666666], [506.0, 67.875], [507.0, 67.88888888888889], [515.0, 69.42857142857142], [512.0, 67.22222222222223], [526.0, 74.71428571428571], [527.0, 76.42857142857143], [524.0, 74.375], [525.0, 74.375], [522.0, 71.8], [523.0, 71.42857142857142], [513.0, 67.28571428571429], [514.0, 68.57142857142857], [516.0, 69.5], [517.0, 73.33333333333333], [518.0, 74.4], [519.0, 73.25], [528.0, 78.0], [542.0, 78.125], [543.0, 77.85714285714286], [540.0, 75.0], [541.0, 77.81818181818183], [538.0, 79.37500000000001], [539.0, 76.625], [536.0, 81.81818181818181], [537.0, 79.83333333333333], [529.0, 78.57142857142858], [530.0, 78.25], [531.0, 78.375], [532.0, 77.25], [533.0, 77.25], [535.0, 88.625], [520.0, 72.44444444444444], [521.0, 72.1], [547.0, 83.0], [544.0, 78.5], [558.0, 83.33333333333334], [559.0, 84.0], [556.0, 84.55555555555556], [557.0, 84.4], [554.0, 80.5], [555.0, 83.33333333333333], [545.0, 84.0], [546.0, 82.92857142857143], [548.0, 83.375], [549.0, 80.8], [550.0, 73.55555555555556], [551.0, 76.75], [560.0, 83.71428571428572], [574.0, 88.5], [575.0, 89.28571428571429], [572.0, 81.75], [573.0, 85.2], [570.0, 85.25], [571.0, 85.16666666666667], [568.0, 84.875], [569.0, 84.25], [561.0, 81.75], [562.0, 83.375], [563.0, 84.0], [564.0, 84.125], [565.0, 83.30000000000001], [566.0, 84.0], [567.0, 88.25], [552.0, 78.25], [553.0, 80.66666666666667], [579.0, 101.6], [576.0, 87.4], [590.0, 93.5], [591.0, 94.4], [588.0, 91.44444444444444], [589.0, 92.6], [586.0, 88.0], [587.0, 91.75], [577.0, 87.75], [578.0, 86.5], [580.0, 91.05263157894736], [581.0, 84.16666666666667], [582.0, 87.0], [583.0, 87.23076923076924], [592.0, 93.14285714285714], [600.0, 184.88128861429846], [593.0, 91.57142857142857], [594.0, 91.3], [595.0, 87.0], [596.0, 85.14285714285715], [597.0, 86.75], [598.0, 90.375], [599.0, 89.25], [584.0, 85.5], [585.0, 86.5], [1.0, 15066.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[268.6862764757457, 256.3483143251021]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[542.0, 13252.0], [543.0, 13633.0], [530.0, 12871.0], [528.0, 13551.0], [533.0, 13133.833333333332], [532.0, 12913.0], [531.0, 12678.0], [541.0, 12915.0], [540.0, 13169.0], [539.0, 13655.0], [538.0, 12681.0], [536.0, 13252.5], [523.0, 12678.0], [535.0, 13059.0], [534.0, 13189.5], [571.0, 13627.0], [574.0, 13256.0], [573.0, 12845.0], [572.0, 13195.0], [570.0, 12994.5], [569.0, 13200.5], [568.0, 12898.0], [550.0, 13131.0], [547.0, 13259.0], [546.0, 13230.0], [545.0, 13565.0], [567.0, 12874.333333333334], [565.0, 13025.0], [566.0, 13232.166666666666], [563.0, 13035.0], [564.0, 12745.333333333334], [561.0, 13253.666666666666], [562.0, 13357.5], [560.0, 13173.875], [557.0, 13350.6], [555.0, 13001.0], [553.0, 13150.5], [552.0, 12998.0], [554.0, 13436.0], [559.0, 13044.2], [594.0, 12986.0], [600.0, 13098.684210526317], [582.0, 13390.0], [581.0, 13368.0], [580.0, 13116.0], [578.0, 13173.0], [577.0, 13116.0], [576.0, 13075.5], [597.0, 12911.0], [598.0, 13255.0], [599.0, 12766.5], [596.0, 13057.111111111111], [595.0, 12933.0], [593.0, 13056.0], [592.0, 13146.0], [591.0, 13482.0], [590.0, 13247.5], [589.0, 12991.666666666666], [588.0, 12841.0], [587.0, 12941.0], [586.0, 13236.5], [585.0, 12790.0], [584.0, 13188.0], [415.0, 14171.0], [413.0, 14261.5], [409.0, 14157.0], [406.0, 14159.0], [403.0, 13910.0], [416.0, 13706.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[556.3800000000005, 13212.629999999997]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}, {"data": [[207.0, 30039.0], [206.0, 30038.0], [202.0, 30034.0], [201.0, 30034.0], [215.0, 30029.0], [214.0, 30037.5], [210.0, 30028.0], [209.0, 30027.0], [208.0, 30028.0], [223.0, 30028.0], [222.0, 30032.0], [221.0, 30028.0], [220.0, 30028.0], [219.0, 30027.0], [218.0, 30027.0], [217.0, 30027.0], [216.0, 30027.0], [231.0, 30028.0], [230.0, 30027.0], [229.0, 30027.0], [228.0, 30026.0], [227.0, 30031.0], [226.0, 30027.0], [225.0, 30030.0], [224.0, 30031.0], [239.0, 30027.0], [238.0, 30027.0], [237.0, 30027.0], [236.0, 30028.0], [235.0, 30027.0], [234.0, 30026.0], [233.0, 30031.0], [232.0, 30029.0], [247.0, 30028.0], [246.0, 30029.0], [245.0, 30027.0], [244.0, 30028.0], [243.0, 30032.0], [242.0, 30028.0], [241.0, 30028.0], [240.0, 30027.0], [255.0, 30028.0], [254.0, 30028.0], [253.0, 30027.0], [252.0, 30026.0], [251.0, 30026.0], [250.0, 30027.0], [249.0, 30028.0], [248.0, 30026.0], [270.0, 30030.0], [271.0, 30027.0], [269.0, 30028.0], [268.0, 30027.0], [267.0, 30028.0], [266.0, 30032.0], [265.0, 30029.0], [264.0, 30027.0], [263.0, 30027.0], [257.0, 30028.0], [256.0, 30028.0], [259.0, 30027.0], [258.0, 30027.0], [262.0, 30027.0], [261.0, 30027.0], [260.0, 30027.0], [286.0, 30027.0], [287.0, 30027.0], [285.0, 30028.0], [284.0, 30027.0], [283.0, 30029.0], [281.0, 30028.0], [280.0, 30028.0], [279.0, 30027.0], [273.0, 30029.5], [275.0, 30027.0], [274.0, 30028.0], [278.0, 30028.0], [277.0, 30030.0], [276.0, 30029.0], [302.0, 30028.0], [303.0, 30027.0], [301.0, 30028.0], [300.0, 30029.0], [299.0, 30027.0], [298.0, 30027.0], [297.0, 30028.0], [296.0, 30029.0], [295.0, 30028.0], [289.0, 30028.0], [288.0, 30028.0], [291.0, 30027.0], [290.0, 30028.0], [294.0, 30028.0], [293.0, 30029.0], [292.0, 30029.0], [318.0, 30026.0], [319.0, 30028.0], [317.0, 30027.0], [316.0, 30026.0], [315.0, 30027.0], [314.0, 30031.0], [313.0, 30028.0], [312.0, 30031.0], [311.0, 30028.0], [305.0, 30027.0], [304.0, 30027.0], [307.0, 30027.0], [306.0, 30027.0], [310.0, 30027.0], [309.0, 30028.0], [308.0, 30027.0], [323.0, 30027.0], [333.0, 30028.0], [335.0, 30058.0], [332.0, 30041.666666666668], [322.0, 30029.0], [321.0, 30027.0], [320.0, 30026.0], [329.0, 30027.0], [328.0, 30026.0], [327.0, 30030.0], [326.0, 30028.0], [325.0, 30027.0], [324.0, 30030.0], [350.0, 30028.0], [351.0, 30028.0], [349.0, 30059.0], [348.0, 30028.0], [347.0, 30028.0], [346.0, 30072.5], [344.0, 30028.0], [343.0, 30028.0], [336.0, 30028.0], [339.0, 30028.0], [338.0, 30062.0], [342.0, 30068.0], [340.0, 30028.0], [366.0, 30028.0], [367.0, 30027.0], [365.0, 30031.0], [364.0, 30027.0], [363.0, 30028.0], [362.0, 30027.0], [361.0, 30027.0], [360.0, 30031.0], [359.0, 30031.0], [353.0, 30028.0], [352.0, 30050.0], [355.0, 30049.0], [354.0, 30027.0], [358.0, 30027.0], [357.0, 30039.0], [356.0, 30028.0], [382.0, 30028.0], [383.0, 30030.0], [381.0, 30030.0], [380.0, 30029.0], [379.0, 30028.0], [378.0, 30029.0], [377.0, 30028.0], [376.0, 30029.0], [375.0, 30028.0], [369.0, 30028.0], [368.0, 30030.0], [371.0, 30028.0], [370.0, 30028.0], [374.0, 30028.0], [373.0, 30028.0], [372.0, 30027.0], [392.0, 30028.0], [396.0, 30047.0], [395.0, 30031.0], [394.0, 30031.0], [393.0, 30028.0], [391.0, 30028.0], [390.0, 30028.0], [389.0, 30028.0], [388.0, 30029.0], [387.0, 30029.0], [385.0, 30031.0], [384.0, 30028.0], [400.0, 30040.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}, {"data": [[300.655, 30031.02500000001]], "isOverall": false, "label": "JoinRoom&Wait30sec-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61757876E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757876E12, 0.0], [1.61757882E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61757876E12, 0.0], [1.61757882E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757882E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 208.80063582364124, "minX": 1.61757876E12, "maxY": 30031.02500000001, "series": [{"data": [[1.61757876E12, 327.4393645631372], [1.61757882E12, 208.80063582364124]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757876E12, 13212.629999999997]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757876E12, 30031.02500000001]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757882E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757876E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757876E12, 0.0], [1.61757882E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757876E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757876E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757882E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61757876E12, "maxY": 4.9E-324, "series": [{"data": [[1.61757876E12, 0.0], [1.61757882E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.61757876E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1.61757876E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait30sec", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757882E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.61757876E12, "maxY": 30075.0, "series": [{"data": [[1.61757876E12, 30075.0], [1.61757882E12, 15066.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61757876E12, 1041.0], [1.61757882E12, 172.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61757876E12, 30027.0], [1.61757882E12, 1332.9800000000032]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61757876E12, 3088.0], [1.61757882E12, 1045.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61757876E12, 26.0], [1.61757882E12, 26.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61757876E12, 97.0], [1.61757882E12, 92.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757882E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 30028.0, "series": [{"data": [[534.0, 114.0], [2.0, 15065.0], [612.0, 146.0], [637.0, 39.0], [617.0, 28.0], [653.0, 98.0], [676.0, 32.0], [714.0, 143.0], [752.0, 101.0], [741.0, 110.0], [795.0, 96.0], [804.0, 149.0], [858.0, 69.0], [847.0, 135.0], [837.0, 85.0], [989.0, 103.0], [964.0, 124.0], [991.0, 124.0], [1019.0, 135.0], [996.0, 114.0], [1027.0, 41.0], [1068.0, 95.0], [1145.0, 73.0], [1146.0, 126.0], [1140.0, 51.0], [1188.0, 32.0], [1214.0, 130.0], [1253.0, 119.0], [1240.0, 128.0], [1218.0, 105.0], [1245.0, 64.0], [1263.0, 96.0], [1249.0, 41.0], [1347.0, 118.0], [1412.0, 87.0], [1472.0, 97.0], [14.0, 1034.5], [19.0, 29.0], [83.0, 28.0], [105.0, 28.0], [118.0, 28.0], [193.0, 30028.0], [208.0, 3050.0], [1.0, 1031.0], [334.0, 31.0], [337.0, 28.0], [392.0, 28.0], [419.0, 29.0], [429.0, 29.0], [484.0, 29.0], [489.0, 86.0], [510.0, 128.0], [506.0, 28.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[991.0, 21048.5], [510.0, 21048.0], [1019.0, 21047.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1472.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[534.0, 0.0], [2.0, 0.0], [612.0, 0.0], [637.0, 0.0], [617.0, 0.0], [653.0, 0.0], [676.0, 0.0], [714.0, 0.0], [752.0, 0.0], [741.0, 0.0], [795.0, 0.0], [804.0, 0.0], [858.0, 0.0], [847.0, 0.0], [837.0, 0.0], [989.0, 0.0], [964.0, 0.0], [991.0, 0.0], [1019.0, 0.0], [996.0, 0.0], [1027.0, 0.0], [1068.0, 0.0], [1145.0, 0.0], [1146.0, 0.0], [1140.0, 0.0], [1188.0, 0.0], [1214.0, 0.0], [1253.0, 0.0], [1240.0, 0.0], [1218.0, 0.0], [1245.0, 0.0], [1263.0, 0.0], [1249.0, 0.0], [1347.0, 0.0], [1412.0, 0.0], [1472.0, 0.0], [14.0, 0.0], [19.0, 0.0], [83.0, 0.0], [105.0, 0.0], [118.0, 0.0], [193.0, 0.0], [208.0, 0.0], [1.0, 0.0], [334.0, 0.0], [337.0, 0.0], [392.0, 0.0], [419.0, 0.0], [429.0, 0.0], [484.0, 0.0], [489.0, 0.0], [510.0, 0.0], [506.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[991.0, 0.0], [510.0, 0.0], [1019.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1472.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 276.48333333333335, "minX": 1.61757876E12, "maxY": 395.1, "series": [{"data": [[1.61757876E12, 276.48333333333335], [1.61757882E12, 395.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757882E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.61757876E12, "maxY": 398.25, "series": [{"data": [[1.61757876E12, 273.03333333333336], [1.61757882E12, 398.25]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61757876E12, 0.11666666666666667], [1.61757882E12, 0.18333333333333332]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61757882E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.61757876E12, "maxY": 398.25, "series": [{"data": [[1.61757876E12, 3.3333333333333335]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61757876E12, 266.3666666666667], [1.61757882E12, 398.25]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61757876E12, 0.11666666666666667], [1.61757882E12, 0.18333333333333332]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}, {"data": [[1.61757876E12, 3.3333333333333335]], "isOverall": false, "label": "JoinRoom&Wait30sec-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757882E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.61757876E12, "maxY": 398.25, "series": [{"data": [[1.61757876E12, 273.03333333333336], [1.61757882E12, 398.25]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61757876E12, 0.11666666666666667], [1.61757882E12, 0.18333333333333332]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61757882E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

