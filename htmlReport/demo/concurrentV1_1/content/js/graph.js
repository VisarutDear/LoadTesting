/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 61327.0, "minX": 0.0, "maxY": 65482.0, "series": [{"data": [[0.0, 61327.0], [0.1, 61327.0], [0.2, 61339.0], [0.3, 61339.0], [0.4, 61346.0], [0.5, 61356.0], [0.6, 61356.0], [0.7, 61360.0], [0.8, 61360.0], [0.9, 61366.0], [1.0, 61367.0], [1.1, 61367.0], [1.2, 61384.0], [1.3, 61384.0], [1.4, 61391.0], [1.5, 61392.0], [1.6, 61392.0], [1.7, 61396.0], [1.8, 61396.0], [1.9, 61400.0], [2.0, 61401.0], [2.1, 61401.0], [2.2, 61405.0], [2.3, 61405.0], [2.4, 61405.0], [2.5, 61406.0], [2.6, 61406.0], [2.7, 61410.0], [2.8, 61410.0], [2.9, 61410.0], [3.0, 61412.0], [3.1, 61412.0], [3.2, 61412.0], [3.3, 61412.0], [3.4, 61415.0], [3.5, 61417.0], [3.6, 61417.0], [3.7, 61422.0], [3.8, 61422.0], [3.9, 61425.0], [4.0, 61429.0], [4.1, 61429.0], [4.2, 61432.0], [4.3, 61432.0], [4.4, 61432.0], [4.5, 61432.0], [4.6, 61432.0], [4.7, 61433.0], [4.8, 61433.0], [4.9, 61434.0], [5.0, 61434.0], [5.1, 61434.0], [5.2, 61435.0], [5.3, 61435.0], [5.4, 61437.0], [5.5, 61441.0], [5.6, 61441.0], [5.7, 61446.0], [5.8, 61446.0], [5.9, 61450.0], [6.0, 61450.0], [6.1, 61452.0], [6.2, 61455.0], [6.3, 61455.0], [6.4, 61457.0], [6.5, 61457.0], [6.6, 61463.0], [6.7, 61464.0], [6.8, 61464.0], [6.9, 61467.0], [7.0, 61467.0], [7.1, 61468.0], [7.2, 61469.0], [7.3, 61469.0], [7.4, 61470.0], [7.5, 61470.0], [7.6, 61471.0], [7.7, 61472.0], [7.8, 61472.0], [7.9, 61473.0], [8.0, 61473.0], [8.1, 61474.0], [8.2, 61474.0], [8.3, 61474.0], [8.4, 61476.0], [8.5, 61476.0], [8.6, 61477.0], [8.7, 61477.0], [8.8, 61477.0], [8.9, 61479.0], [9.0, 61479.0], [9.1, 61479.0], [9.2, 61481.0], [9.3, 61481.0], [9.4, 61483.0], [9.5, 61483.0], [9.6, 61486.0], [9.7, 61489.0], [9.8, 61489.0], [9.9, 61491.0], [10.0, 61491.0], [10.1, 61491.0], [10.2, 61496.0], [10.3, 61496.0], [10.4, 61498.0], [10.5, 61498.0], [10.6, 61500.0], [10.7, 61500.0], [10.8, 61500.0], [10.9, 61507.0], [11.0, 61507.0], [11.1, 61510.0], [11.2, 61510.0], [11.3, 61510.0], [11.4, 61510.0], [11.5, 61510.0], [11.6, 61511.0], [11.7, 61513.0], [11.8, 61513.0], [11.9, 61514.0], [12.0, 61521.0], [12.1, 61521.0], [12.2, 61524.0], [12.3, 61524.0], [12.4, 61525.0], [12.5, 61530.0], [12.6, 61530.0], [12.7, 61531.0], [12.8, 61531.0], [12.9, 61531.0], [13.0, 61532.0], [13.1, 61532.0], [13.2, 61532.0], [13.3, 61532.0], [13.4, 61534.0], [13.5, 61534.0], [13.6, 61534.0], [13.7, 61537.0], [13.8, 61537.0], [13.9, 61540.0], [14.0, 61540.0], [14.1, 61540.0], [14.2, 61547.0], [14.3, 61547.0], [14.4, 61547.0], [14.5, 61548.0], [14.6, 61548.0], [14.7, 61549.0], [14.8, 61549.0], [14.9, 61550.0], [15.0, 61551.0], [15.1, 61551.0], [15.2, 61552.0], [15.3, 61552.0], [15.4, 61555.0], [15.5, 61556.0], [15.6, 61556.0], [15.7, 61556.0], [15.8, 61556.0], [15.9, 61556.0], [16.0, 61560.0], [16.1, 61560.0], [16.2, 61561.0], [16.3, 61561.0], [16.4, 61564.0], [16.5, 61565.0], [16.6, 61565.0], [16.7, 61566.0], [16.8, 61566.0], [16.9, 61568.0], [17.0, 61568.0], [17.1, 61571.0], [17.2, 61572.0], [17.3, 61572.0], [17.4, 61575.0], [17.5, 61575.0], [17.6, 61580.0], [17.7, 61580.0], [17.8, 61580.0], [17.9, 61585.0], [18.0, 61585.0], [18.1, 61586.0], [18.2, 61592.0], [18.3, 61592.0], [18.4, 61593.0], [18.5, 61593.0], [18.6, 61595.0], [18.7, 61596.0], [18.8, 61596.0], [18.9, 61596.0], [19.0, 61596.0], [19.1, 61597.0], [19.2, 61600.0], [19.3, 61600.0], [19.4, 61600.0], [19.5, 61600.0], [19.6, 61603.0], [19.7, 61603.0], [19.8, 61603.0], [19.9, 61606.0], [20.0, 61606.0], [20.1, 61609.0], [20.2, 61610.0], [20.3, 61610.0], [20.4, 61616.0], [20.5, 61616.0], [20.6, 61616.0], [20.7, 61620.0], [20.8, 61620.0], [20.9, 61632.0], [21.0, 61632.0], [21.1, 61634.0], [21.2, 61635.0], [21.3, 61635.0], [21.4, 61636.0], [21.5, 61636.0], [21.6, 61640.0], [21.7, 61642.0], [21.8, 61642.0], [21.9, 61643.0], [22.0, 61643.0], [22.1, 61645.0], [22.2, 61646.0], [22.3, 61646.0], [22.4, 61647.0], [22.5, 61647.0], [22.6, 61649.0], [22.7, 61650.0], [22.8, 61650.0], [22.9, 61650.0], [23.0, 61650.0], [23.1, 61652.0], [23.2, 61653.0], [23.3, 61653.0], [23.4, 61653.0], [23.5, 61653.0], [23.6, 61658.0], [23.7, 61665.0], [23.8, 61665.0], [23.9, 61668.0], [24.0, 61668.0], [24.1, 61669.0], [24.2, 61671.0], [24.3, 61671.0], [24.4, 61672.0], [24.5, 61672.0], [24.6, 61673.0], [24.7, 61674.0], [24.8, 61674.0], [24.9, 61675.0], [25.0, 61675.0], [25.1, 61677.0], [25.2, 61677.0], [25.3, 61677.0], [25.4, 61679.0], [25.5, 61679.0], [25.6, 61681.0], [25.7, 61681.0], [25.8, 61681.0], [25.9, 61685.0], [26.0, 61685.0], [26.1, 61688.0], [26.2, 61694.0], [26.3, 61694.0], [26.4, 61696.0], [26.5, 61696.0], [26.6, 61699.0], [26.7, 61700.0], [26.8, 61700.0], [26.9, 61701.0], [27.0, 61701.0], [27.1, 61702.0], [27.2, 61704.0], [27.3, 61704.0], [27.4, 61704.0], [27.5, 61704.0], [27.6, 61704.0], [27.7, 61705.0], [27.8, 61705.0], [27.9, 61706.0], [28.0, 61706.0], [28.1, 61708.0], [28.2, 61714.0], [28.3, 61714.0], [28.4, 61714.0], [28.5, 61714.0], [28.6, 61714.0], [28.7, 61715.0], [28.8, 61715.0], [28.9, 61716.0], [29.0, 61716.0], [29.1, 61719.0], [29.2, 61720.0], [29.3, 61720.0], [29.4, 61720.0], [29.5, 61720.0], [29.6, 61722.0], [29.7, 61722.0], [29.8, 61722.0], [29.9, 61723.0], [30.0, 61723.0], [30.1, 61724.0], [30.2, 61724.0], [30.3, 61724.0], [30.4, 61727.0], [30.5, 61727.0], [30.6, 61728.0], [30.7, 61738.0], [30.8, 61738.0], [30.9, 61739.0], [31.0, 61739.0], [31.1, 61744.0], [31.2, 61749.0], [31.3, 61749.0], [31.4, 61749.0], [31.5, 61749.0], [31.6, 61752.0], [31.7, 61759.0], [31.8, 61759.0], [31.9, 61760.0], [32.0, 61760.0], [32.1, 61760.0], [32.2, 61760.0], [32.3, 61760.0], [32.4, 61760.0], [32.5, 61760.0], [32.6, 61762.0], [32.7, 61762.0], [32.8, 61762.0], [32.9, 61764.0], [33.0, 61764.0], [33.1, 61765.0], [33.2, 61765.0], [33.3, 61765.0], [33.4, 61767.0], [33.5, 61767.0], [33.6, 61770.0], [33.7, 61771.0], [33.8, 61771.0], [33.9, 61773.0], [34.0, 61773.0], [34.1, 61774.0], [34.2, 61783.0], [34.3, 61783.0], [34.4, 61783.0], [34.5, 61783.0], [34.6, 61791.0], [34.7, 61795.0], [34.8, 61795.0], [34.9, 61796.0], [35.0, 61796.0], [35.1, 61797.0], [35.2, 61797.0], [35.3, 61797.0], [35.4, 61803.0], [35.5, 61803.0], [35.6, 61804.0], [35.7, 61805.0], [35.8, 61805.0], [35.9, 61807.0], [36.0, 61807.0], [36.1, 61807.0], [36.2, 61808.0], [36.3, 61808.0], [36.4, 61811.0], [36.5, 61811.0], [36.6, 61812.0], [36.7, 61813.0], [36.8, 61813.0], [36.9, 61814.0], [37.0, 61814.0], [37.1, 61820.0], [37.2, 61822.0], [37.3, 61822.0], [37.4, 61824.0], [37.5, 61824.0], [37.6, 61824.0], [37.7, 61824.0], [37.8, 61824.0], [37.9, 61826.0], [38.0, 61826.0], [38.1, 61827.0], [38.2, 61830.0], [38.3, 61830.0], [38.4, 61831.0], [38.5, 61831.0], [38.6, 61831.0], [38.7, 61833.0], [38.8, 61833.0], [38.9, 61836.0], [39.0, 61836.0], [39.1, 61837.0], [39.2, 61848.0], [39.3, 61848.0], [39.4, 61852.0], [39.5, 61852.0], [39.6, 61853.0], [39.7, 61854.0], [39.8, 61854.0], [39.9, 61854.0], [40.0, 61854.0], [40.1, 61862.0], [40.2, 61862.0], [40.3, 61862.0], [40.4, 61864.0], [40.5, 61864.0], [40.6, 61864.0], [40.7, 61865.0], [40.8, 61865.0], [40.9, 61866.0], [41.0, 61866.0], [41.1, 61866.0], [41.2, 61867.0], [41.3, 61867.0], [41.4, 61873.0], [41.5, 61873.0], [41.6, 61875.0], [41.7, 61878.0], [41.8, 61878.0], [41.9, 61880.0], [42.0, 61883.0], [42.1, 61883.0], [42.2, 61885.0], [42.3, 61885.0], [42.4, 61888.0], [42.5, 61888.0], [42.6, 61888.0], [42.7, 61889.0], [42.8, 61889.0], [42.9, 61889.0], [43.0, 61889.0], [43.1, 61889.0], [43.2, 61894.0], [43.3, 61894.0], [43.4, 61894.0], [43.5, 61897.0], [43.6, 61897.0], [43.7, 61901.0], [43.8, 61901.0], [43.9, 61903.0], [44.0, 61903.0], [44.1, 61903.0], [44.2, 61904.0], [44.3, 61904.0], [44.4, 61910.0], [44.5, 61913.0], [44.6, 61913.0], [44.7, 61916.0], [44.8, 61916.0], [44.9, 61918.0], [45.0, 61926.0], [45.1, 61926.0], [45.2, 61929.0], [45.3, 61929.0], [45.4, 61930.0], [45.5, 61930.0], [45.6, 61930.0], [45.7, 61931.0], [45.8, 61931.0], [45.9, 61931.0], [46.0, 61932.0], [46.1, 61932.0], [46.2, 61935.0], [46.3, 61935.0], [46.4, 61941.0], [46.5, 61942.0], [46.6, 61942.0], [46.7, 61943.0], [46.8, 61943.0], [46.9, 61945.0], [47.0, 61947.0], [47.1, 61947.0], [47.2, 61948.0], [47.3, 61948.0], [47.4, 61952.0], [47.5, 61954.0], [47.6, 61954.0], [47.7, 61954.0], [47.8, 61954.0], [47.9, 61955.0], [48.0, 61961.0], [48.1, 61961.0], [48.2, 61962.0], [48.3, 61962.0], [48.4, 61964.0], [48.5, 61975.0], [48.6, 61975.0], [48.7, 61977.0], [48.8, 61977.0], [48.9, 61978.0], [49.0, 61981.0], [49.1, 61981.0], [49.2, 61985.0], [49.3, 61985.0], [49.4, 61987.0], [49.5, 61989.0], [49.6, 61989.0], [49.7, 61991.0], [49.8, 61991.0], [49.9, 61993.0], [50.0, 61999.0], [50.1, 61999.0], [50.2, 62001.0], [50.3, 62001.0], [50.4, 62002.0], [50.5, 62003.0], [50.6, 62003.0], [50.7, 62003.0], [50.8, 62003.0], [50.9, 62006.0], [51.0, 62007.0], [51.1, 62007.0], [51.2, 62008.0], [51.3, 62008.0], [51.4, 62010.0], [51.5, 62011.0], [51.6, 62011.0], [51.7, 62013.0], [51.8, 62013.0], [51.9, 62015.0], [52.0, 62016.0], [52.1, 62016.0], [52.2, 62016.0], [52.3, 62016.0], [52.4, 62016.0], [52.5, 62023.0], [52.6, 62023.0], [52.7, 62025.0], [52.8, 62025.0], [52.9, 62026.0], [53.0, 62027.0], [53.1, 62027.0], [53.2, 62029.0], [53.3, 62029.0], [53.4, 62031.0], [53.5, 62031.0], [53.6, 62031.0], [53.7, 62033.0], [53.8, 62033.0], [53.9, 62035.0], [54.0, 62038.0], [54.1, 62038.0], [54.2, 62039.0], [54.3, 62039.0], [54.4, 62040.0], [54.5, 62041.0], [54.6, 62041.0], [54.7, 62042.0], [54.8, 62042.0], [54.9, 62043.0], [55.0, 62044.0], [55.1, 62044.0], [55.2, 62045.0], [55.3, 62045.0], [55.4, 62045.0], [55.5, 62047.0], [55.6, 62047.0], [55.7, 62047.0], [55.8, 62047.0], [55.9, 62050.0], [56.0, 62051.0], [56.1, 62051.0], [56.2, 62052.0], [56.3, 62052.0], [56.4, 62052.0], [56.5, 62052.0], [56.6, 62052.0], [56.7, 62052.0], [56.8, 62052.0], [56.9, 62054.0], [57.0, 62055.0], [57.1, 62055.0], [57.2, 62059.0], [57.3, 62059.0], [57.4, 62060.0], [57.5, 62063.0], [57.6, 62063.0], [57.7, 62063.0], [57.8, 62063.0], [57.9, 62071.0], [58.0, 62071.0], [58.1, 62071.0], [58.2, 62073.0], [58.3, 62073.0], [58.4, 62074.0], [58.5, 62076.0], [58.6, 62076.0], [58.7, 62079.0], [58.8, 62079.0], [58.9, 62084.0], [59.0, 62085.0], [59.1, 62085.0], [59.2, 62086.0], [59.3, 62086.0], [59.4, 62086.0], [59.5, 62086.0], [59.6, 62086.0], [59.7, 62092.0], [59.8, 62092.0], [59.9, 62092.0], [60.0, 62092.0], [60.1, 62092.0], [60.2, 62098.0], [60.3, 62098.0], [60.4, 62100.0], [60.5, 62100.0], [60.6, 62100.0], [60.7, 62104.0], [60.8, 62104.0], [60.9, 62104.0], [61.0, 62107.0], [61.1, 62107.0], [61.2, 62107.0], [61.3, 62107.0], [61.4, 62109.0], [61.5, 62113.0], [61.6, 62113.0], [61.7, 62113.0], [61.8, 62113.0], [61.9, 62114.0], [62.0, 62116.0], [62.1, 62116.0], [62.2, 62119.0], [62.3, 62119.0], [62.4, 62120.0], [62.5, 62123.0], [62.6, 62123.0], [62.7, 62125.0], [62.8, 62125.0], [62.9, 62127.0], [63.0, 62128.0], [63.1, 62128.0], [63.2, 62131.0], [63.3, 62131.0], [63.4, 62132.0], [63.5, 62132.0], [63.6, 62132.0], [63.7, 62133.0], [63.8, 62133.0], [63.9, 62139.0], [64.0, 62141.0], [64.1, 62141.0], [64.2, 62141.0], [64.3, 62141.0], [64.4, 62142.0], [64.5, 62142.0], [64.6, 62142.0], [64.7, 62145.0], [64.8, 62145.0], [64.9, 62146.0], [65.0, 62148.0], [65.1, 62148.0], [65.2, 62150.0], [65.3, 62150.0], [65.4, 62153.0], [65.5, 62155.0], [65.6, 62155.0], [65.7, 62157.0], [65.8, 62157.0], [65.9, 62157.0], [66.0, 62159.0], [66.1, 62159.0], [66.2, 62161.0], [66.3, 62161.0], [66.4, 62161.0], [66.5, 62161.0], [66.6, 62161.0], [66.7, 62167.0], [66.8, 62167.0], [66.9, 62168.0], [67.0, 62170.0], [67.1, 62170.0], [67.2, 62176.0], [67.3, 62176.0], [67.4, 62179.0], [67.5, 62181.0], [67.6, 62181.0], [67.7, 62181.0], [67.8, 62181.0], [67.9, 62183.0], [68.0, 62185.0], [68.1, 62185.0], [68.2, 62187.0], [68.3, 62187.0], [68.4, 62187.0], [68.5, 62190.0], [68.6, 62190.0], [68.7, 62191.0], [68.8, 62191.0], [68.9, 62192.0], [69.0, 62193.0], [69.1, 62193.0], [69.2, 62195.0], [69.3, 62195.0], [69.4, 62199.0], [69.5, 62199.0], [69.6, 62199.0], [69.7, 62200.0], [69.8, 62200.0], [69.9, 62208.0], [70.0, 62209.0], [70.1, 62209.0], [70.2, 62209.0], [70.3, 62209.0], [70.4, 62225.0], [70.5, 62228.0], [70.6, 62228.0], [70.7, 62228.0], [70.8, 62228.0], [70.9, 62228.0], [71.0, 62229.0], [71.1, 62229.0], [71.2, 62229.0], [71.3, 62229.0], [71.4, 62232.0], [71.5, 62234.0], [71.6, 62234.0], [71.7, 62236.0], [71.8, 62236.0], [71.9, 62238.0], [72.0, 62240.0], [72.1, 62240.0], [72.2, 62241.0], [72.3, 62241.0], [72.4, 62242.0], [72.5, 62244.0], [72.6, 62244.0], [72.7, 62248.0], [72.8, 62248.0], [72.9, 62248.0], [73.0, 62249.0], [73.1, 62249.0], [73.2, 62250.0], [73.3, 62250.0], [73.4, 62251.0], [73.5, 62252.0], [73.6, 62252.0], [73.7, 62254.0], [73.8, 62254.0], [73.9, 62257.0], [74.0, 62260.0], [74.1, 62260.0], [74.2, 62262.0], [74.3, 62262.0], [74.4, 62262.0], [74.5, 62267.0], [74.6, 62267.0], [74.7, 62272.0], [74.8, 62272.0], [74.9, 62272.0], [75.0, 62278.0], [75.1, 62278.0], [75.2, 62278.0], [75.3, 62278.0], [75.4, 62279.0], [75.5, 62281.0], [75.6, 62281.0], [75.7, 62287.0], [75.8, 62287.0], [75.9, 62287.0], [76.0, 62287.0], [76.1, 62287.0], [76.2, 62288.0], [76.3, 62288.0], [76.4, 62289.0], [76.5, 62290.0], [76.6, 62290.0], [76.7, 62291.0], [76.8, 62291.0], [76.9, 62291.0], [77.0, 62292.0], [77.1, 62292.0], [77.2, 62295.0], [77.3, 62295.0], [77.4, 62296.0], [77.5, 62298.0], [77.6, 62298.0], [77.7, 62298.0], [77.8, 62298.0], [77.9, 62300.0], [78.0, 62302.0], [78.1, 62302.0], [78.2, 62306.0], [78.3, 62306.0], [78.4, 62308.0], [78.5, 62308.0], [78.6, 62308.0], [78.7, 62312.0], [78.8, 62312.0], [78.9, 62314.0], [79.0, 62314.0], [79.1, 62316.0], [79.2, 62318.0], [79.3, 62318.0], [79.4, 62319.0], [79.5, 62319.0], [79.6, 62320.0], [79.7, 62320.0], [79.8, 62320.0], [79.9, 62322.0], [80.0, 62322.0], [80.1, 62324.0], [80.2, 62330.0], [80.3, 62330.0], [80.4, 62331.0], [80.5, 62331.0], [80.6, 62332.0], [80.7, 62333.0], [80.8, 62333.0], [80.9, 62334.0], [81.0, 62334.0], [81.1, 62336.0], [81.2, 62339.0], [81.3, 62339.0], [81.4, 62339.0], [81.5, 62339.0], [81.6, 62344.0], [81.7, 62346.0], [81.8, 62346.0], [81.9, 62348.0], [82.0, 62348.0], [82.1, 62350.0], [82.2, 62350.0], [82.3, 62350.0], [82.4, 62351.0], [82.5, 62351.0], [82.6, 62352.0], [82.7, 62353.0], [82.8, 62353.0], [82.9, 62357.0], [83.0, 62357.0], [83.1, 62358.0], [83.2, 62358.0], [83.3, 62358.0], [83.4, 62366.0], [83.5, 62366.0], [83.6, 62366.0], [83.7, 62367.0], [83.8, 62367.0], [83.9, 62369.0], [84.0, 62369.0], [84.1, 62371.0], [84.2, 62373.0], [84.3, 62373.0], [84.4, 62374.0], [84.5, 62374.0], [84.6, 62375.0], [84.7, 62378.0], [84.8, 62378.0], [84.9, 62378.0], [85.0, 62378.0], [85.1, 62379.0], [85.2, 62380.0], [85.3, 62380.0], [85.4, 62382.0], [85.5, 62382.0], [85.6, 62386.0], [85.7, 62388.0], [85.8, 62388.0], [85.9, 62393.0], [86.0, 62393.0], [86.1, 62395.0], [86.2, 62395.0], [86.3, 62395.0], [86.4, 62401.0], [86.5, 62401.0], [86.6, 62404.0], [86.7, 62406.0], [86.8, 62406.0], [86.9, 62408.0], [87.0, 62408.0], [87.1, 62408.0], [87.2, 62411.0], [87.3, 62411.0], [87.4, 62416.0], [87.5, 62416.0], [87.6, 62419.0], [87.7, 62422.0], [87.8, 62422.0], [87.9, 62422.0], [88.0, 62422.0], [88.1, 62423.0], [88.2, 62424.0], [88.3, 62424.0], [88.4, 62427.0], [88.5, 62427.0], [88.6, 62427.0], [88.7, 62428.0], [88.8, 62428.0], [88.9, 62432.0], [89.0, 62432.0], [89.1, 62434.0], [89.2, 62439.0], [89.3, 62439.0], [89.4, 62443.0], [89.5, 62443.0], [89.6, 62443.0], [89.7, 62446.0], [89.8, 62446.0], [89.9, 62447.0], [90.0, 62447.0], [90.1, 62450.0], [90.2, 62451.0], [90.3, 62451.0], [90.4, 62465.0], [90.5, 62465.0], [90.6, 62466.0], [90.7, 62467.0], [90.8, 62467.0], [90.9, 62468.0], [91.0, 62468.0], [91.1, 62469.0], [91.2, 62470.0], [91.3, 62470.0], [91.4, 62473.0], [91.5, 62473.0], [91.6, 62479.0], [91.7, 62481.0], [91.8, 62481.0], [91.9, 62481.0], [92.0, 62481.0], [92.1, 62482.0], [92.2, 62483.0], [92.3, 62483.0], [92.4, 62484.0], [92.5, 62484.0], [92.6, 62485.0], [92.7, 62491.0], [92.8, 62491.0], [92.9, 62494.0], [93.0, 62494.0], [93.1, 62494.0], [93.2, 62495.0], [93.3, 62495.0], [93.4, 62496.0], [93.5, 62496.0], [93.6, 62496.0], [93.7, 62501.0], [93.8, 62501.0], [93.9, 62501.0], [94.0, 62501.0], [94.1, 62503.0], [94.2, 62504.0], [94.3, 62504.0], [94.4, 62504.0], [94.5, 62504.0], [94.6, 62507.0], [94.7, 62507.0], [94.8, 62507.0], [94.9, 62509.0], [95.0, 62509.0], [95.1, 62510.0], [95.2, 62510.0], [95.3, 62510.0], [95.4, 62511.0], [95.5, 62511.0], [95.6, 62514.0], [95.7, 62514.0], [95.8, 62514.0], [95.9, 62515.0], [96.0, 62515.0], [96.1, 62518.0], [96.2, 62518.0], [96.3, 62518.0], [96.4, 62519.0], [96.5, 62519.0], [96.6, 62520.0], [96.7, 62520.0], [96.8, 62520.0], [96.9, 62521.0], [97.0, 62521.0], [97.1, 62536.0], [97.2, 62536.0], [97.3, 62536.0], [97.4, 62541.0], [97.5, 62541.0], [97.6, 62541.0], [97.7, 62541.0], [97.8, 62541.0], [97.9, 62543.0], [98.0, 62543.0], [98.1, 62555.0], [98.2, 62560.0], [98.3, 62560.0], [98.4, 62566.0], [98.5, 62566.0], [98.6, 62571.0], [98.7, 62581.0], [98.8, 62581.0], [98.9, 62587.0], [99.0, 62587.0], [99.1, 62590.0], [99.2, 62591.0], [99.3, 62591.0], [99.4, 62604.0], [99.5, 62604.0], [99.6, 62613.0], [99.7, 62616.0], [99.8, 62616.0], [99.9, 62627.0], [100.0, 62627.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 61597.0], [0.1, 61597.0], [0.2, 61597.0], [0.3, 61597.0], [0.4, 61606.0], [0.5, 61606.0], [0.6, 61606.0], [0.7, 61609.0], [0.8, 61609.0], [0.9, 61609.0], [1.0, 61613.0], [1.1, 61613.0], [1.2, 61613.0], [1.3, 61613.0], [1.4, 61620.0], [1.5, 61620.0], [1.6, 61620.0], [1.7, 61626.0], [1.8, 61626.0], [1.9, 61626.0], [2.0, 61627.0], [2.1, 61627.0], [2.2, 61627.0], [2.3, 61627.0], [2.4, 61628.0], [2.5, 61628.0], [2.6, 61628.0], [2.7, 61630.0], [2.8, 61630.0], [2.9, 61630.0], [3.0, 61636.0], [3.1, 61636.0], [3.2, 61636.0], [3.3, 61636.0], [3.4, 61637.0], [3.5, 61637.0], [3.6, 61637.0], [3.7, 61646.0], [3.8, 61646.0], [3.9, 61646.0], [4.0, 61653.0], [4.1, 61653.0], [4.2, 61653.0], [4.3, 61653.0], [4.4, 61654.0], [4.5, 61654.0], [4.6, 61654.0], [4.7, 61665.0], [4.8, 61665.0], [4.9, 61665.0], [5.0, 61669.0], [5.1, 61669.0], [5.2, 61669.0], [5.3, 61669.0], [5.4, 61671.0], [5.5, 61671.0], [5.6, 61671.0], [5.7, 61676.0], [5.8, 61676.0], [5.9, 61676.0], [6.0, 61680.0], [6.1, 61680.0], [6.2, 61680.0], [6.3, 61680.0], [6.4, 61682.0], [6.5, 61682.0], [6.6, 61682.0], [6.7, 61693.0], [6.8, 61693.0], [6.9, 61693.0], [7.0, 61696.0], [7.1, 61696.0], [7.2, 61696.0], [7.3, 61696.0], [7.4, 61698.0], [7.5, 61698.0], [7.6, 61698.0], [7.7, 61703.0], [7.8, 61703.0], [7.9, 61703.0], [8.0, 61705.0], [8.1, 61705.0], [8.2, 61705.0], [8.3, 61705.0], [8.4, 61706.0], [8.5, 61706.0], [8.6, 61706.0], [8.7, 61706.0], [8.8, 61706.0], [8.9, 61706.0], [9.0, 61709.0], [9.1, 61709.0], [9.2, 61709.0], [9.3, 61709.0], [9.4, 61716.0], [9.5, 61716.0], [9.6, 61716.0], [9.7, 61716.0], [9.8, 61716.0], [9.9, 61716.0], [10.0, 61718.0], [10.1, 61718.0], [10.2, 61718.0], [10.3, 61718.0], [10.4, 61719.0], [10.5, 61719.0], [10.6, 61719.0], [10.7, 61722.0], [10.8, 61722.0], [10.9, 61722.0], [11.0, 61724.0], [11.1, 61724.0], [11.2, 61724.0], [11.3, 61724.0], [11.4, 61727.0], [11.5, 61727.0], [11.6, 61727.0], [11.7, 61728.0], [11.8, 61728.0], [11.9, 61728.0], [12.0, 61730.0], [12.1, 61730.0], [12.2, 61730.0], [12.3, 61730.0], [12.4, 61732.0], [12.5, 61732.0], [12.6, 61732.0], [12.7, 61734.0], [12.8, 61734.0], [12.9, 61734.0], [13.0, 61734.0], [13.1, 61740.0], [13.2, 61740.0], [13.3, 61740.0], [13.4, 61743.0], [13.5, 61743.0], [13.6, 61743.0], [13.7, 61744.0], [13.8, 61744.0], [13.9, 61744.0], [14.0, 61744.0], [14.1, 61746.0], [14.2, 61746.0], [14.3, 61746.0], [14.4, 61746.0], [14.5, 61746.0], [14.6, 61746.0], [14.7, 61757.0], [14.8, 61757.0], [14.9, 61757.0], [15.0, 61757.0], [15.1, 61759.0], [15.2, 61759.0], [15.3, 61759.0], [15.4, 61760.0], [15.5, 61760.0], [15.6, 61760.0], [15.7, 61766.0], [15.8, 61766.0], [15.9, 61766.0], [16.0, 61766.0], [16.1, 61768.0], [16.2, 61768.0], [16.3, 61768.0], [16.4, 61770.0], [16.5, 61770.0], [16.6, 61770.0], [16.7, 61786.0], [16.8, 61786.0], [16.9, 61786.0], [17.0, 61787.0], [17.1, 61787.0], [17.2, 61787.0], [17.3, 61787.0], [17.4, 61788.0], [17.5, 61788.0], [17.6, 61788.0], [17.7, 61791.0], [17.8, 61791.0], [17.9, 61791.0], [18.0, 61796.0], [18.1, 61796.0], [18.2, 61796.0], [18.3, 61796.0], [18.4, 61807.0], [18.5, 61807.0], [18.6, 61807.0], [18.7, 61810.0], [18.8, 61810.0], [18.9, 61810.0], [19.0, 61810.0], [19.1, 61810.0], [19.2, 61810.0], [19.3, 61810.0], [19.4, 61812.0], [19.5, 61812.0], [19.6, 61812.0], [19.7, 61817.0], [19.8, 61817.0], [19.9, 61817.0], [20.0, 61819.0], [20.1, 61819.0], [20.2, 61819.0], [20.3, 61819.0], [20.4, 61819.0], [20.5, 61819.0], [20.6, 61819.0], [20.7, 61822.0], [20.8, 61822.0], [20.9, 61822.0], [21.0, 61823.0], [21.1, 61823.0], [21.2, 61823.0], [21.3, 61823.0], [21.4, 61823.0], [21.5, 61823.0], [21.6, 61823.0], [21.7, 61832.0], [21.8, 61832.0], [21.9, 61832.0], [22.0, 61837.0], [22.1, 61837.0], [22.2, 61837.0], [22.3, 61837.0], [22.4, 61837.0], [22.5, 61837.0], [22.6, 61837.0], [22.7, 61838.0], [22.8, 61838.0], [22.9, 61838.0], [23.0, 61844.0], [23.1, 61844.0], [23.2, 61844.0], [23.3, 61844.0], [23.4, 61844.0], [23.5, 61844.0], [23.6, 61844.0], [23.7, 61845.0], [23.8, 61845.0], [23.9, 61845.0], [24.0, 61847.0], [24.1, 61847.0], [24.2, 61847.0], [24.3, 61847.0], [24.4, 61849.0], [24.5, 61849.0], [24.6, 61849.0], [24.7, 61851.0], [24.8, 61851.0], [24.9, 61851.0], [25.0, 61851.0], [25.1, 61851.0], [25.2, 61851.0], [25.3, 61851.0], [25.4, 61855.0], [25.5, 61855.0], [25.6, 61855.0], [25.7, 61864.0], [25.8, 61864.0], [25.9, 61864.0], [26.0, 61871.0], [26.1, 61871.0], [26.2, 61871.0], [26.3, 61871.0], [26.4, 61872.0], [26.5, 61872.0], [26.6, 61872.0], [26.7, 61874.0], [26.8, 61874.0], [26.9, 61874.0], [27.0, 61879.0], [27.1, 61879.0], [27.2, 61879.0], [27.3, 61879.0], [27.4, 61881.0], [27.5, 61881.0], [27.6, 61881.0], [27.7, 61887.0], [27.8, 61887.0], [27.9, 61887.0], [28.0, 61889.0], [28.1, 61889.0], [28.2, 61889.0], [28.3, 61889.0], [28.4, 61889.0], [28.5, 61889.0], [28.6, 61889.0], [28.7, 61890.0], [28.8, 61890.0], [28.9, 61890.0], [29.0, 61894.0], [29.1, 61894.0], [29.2, 61894.0], [29.3, 61894.0], [29.4, 61895.0], [29.5, 61895.0], [29.6, 61895.0], [29.7, 61899.0], [29.8, 61899.0], [29.9, 61899.0], [30.0, 61901.0], [30.1, 61901.0], [30.2, 61901.0], [30.3, 61901.0], [30.4, 61908.0], [30.5, 61908.0], [30.6, 61908.0], [30.7, 61910.0], [30.8, 61910.0], [30.9, 61910.0], [31.0, 61911.0], [31.1, 61911.0], [31.2, 61911.0], [31.3, 61911.0], [31.4, 61914.0], [31.5, 61914.0], [31.6, 61914.0], [31.7, 61918.0], [31.8, 61918.0], [31.9, 61918.0], [32.0, 61920.0], [32.1, 61920.0], [32.2, 61920.0], [32.3, 61920.0], [32.4, 61922.0], [32.5, 61922.0], [32.6, 61922.0], [32.7, 61925.0], [32.8, 61925.0], [32.9, 61925.0], [33.0, 61929.0], [33.1, 61929.0], [33.2, 61929.0], [33.3, 61929.0], [33.4, 61937.0], [33.5, 61937.0], [33.6, 61937.0], [33.7, 61940.0], [33.8, 61940.0], [33.9, 61940.0], [34.0, 61940.0], [34.1, 61940.0], [34.2, 61940.0], [34.3, 61940.0], [34.4, 61941.0], [34.5, 61941.0], [34.6, 61941.0], [34.7, 61945.0], [34.8, 61945.0], [34.9, 61945.0], [35.0, 61946.0], [35.1, 61946.0], [35.2, 61946.0], [35.3, 61946.0], [35.4, 61947.0], [35.5, 61947.0], [35.6, 61947.0], [35.7, 61952.0], [35.8, 61952.0], [35.9, 61952.0], [36.0, 61954.0], [36.1, 61954.0], [36.2, 61954.0], [36.3, 61954.0], [36.4, 61954.0], [36.5, 61954.0], [36.6, 61954.0], [36.7, 61962.0], [36.8, 61962.0], [36.9, 61962.0], [37.0, 61967.0], [37.1, 61967.0], [37.2, 61967.0], [37.3, 61967.0], [37.4, 61971.0], [37.5, 61971.0], [37.6, 61971.0], [37.7, 61976.0], [37.8, 61976.0], [37.9, 61976.0], [38.0, 61977.0], [38.1, 61977.0], [38.2, 61977.0], [38.3, 61977.0], [38.4, 61980.0], [38.5, 61980.0], [38.6, 61980.0], [38.7, 61994.0], [38.8, 61994.0], [38.9, 61994.0], [39.0, 61994.0], [39.1, 61995.0], [39.2, 61995.0], [39.3, 61995.0], [39.4, 61999.0], [39.5, 61999.0], [39.6, 61999.0], [39.7, 61999.0], [39.8, 61999.0], [39.9, 61999.0], [40.0, 61999.0], [40.1, 62003.0], [40.2, 62003.0], [40.3, 62003.0], [40.4, 62010.0], [40.5, 62010.0], [40.6, 62010.0], [40.7, 62011.0], [40.8, 62011.0], [40.9, 62011.0], [41.0, 62011.0], [41.1, 62013.0], [41.2, 62013.0], [41.3, 62013.0], [41.4, 62013.0], [41.5, 62013.0], [41.6, 62013.0], [41.7, 62014.0], [41.8, 62014.0], [41.9, 62014.0], [42.0, 62014.0], [42.1, 62015.0], [42.2, 62015.0], [42.3, 62015.0], [42.4, 62026.0], [42.5, 62026.0], [42.6, 62026.0], [42.7, 62028.0], [42.8, 62028.0], [42.9, 62028.0], [43.0, 62028.0], [43.1, 62032.0], [43.2, 62032.0], [43.3, 62032.0], [43.4, 62033.0], [43.5, 62033.0], [43.6, 62033.0], [43.7, 62033.0], [43.8, 62033.0], [43.9, 62033.0], [44.0, 62033.0], [44.1, 62038.0], [44.2, 62038.0], [44.3, 62038.0], [44.4, 62043.0], [44.5, 62043.0], [44.6, 62043.0], [44.7, 62045.0], [44.8, 62045.0], [44.9, 62045.0], [45.0, 62045.0], [45.1, 62050.0], [45.2, 62050.0], [45.3, 62050.0], [45.4, 62061.0], [45.5, 62061.0], [45.6, 62061.0], [45.7, 62062.0], [45.8, 62062.0], [45.9, 62062.0], [46.0, 62062.0], [46.1, 62062.0], [46.2, 62062.0], [46.3, 62062.0], [46.4, 62063.0], [46.5, 62063.0], [46.6, 62063.0], [46.7, 62065.0], [46.8, 62065.0], [46.9, 62065.0], [47.0, 62065.0], [47.1, 62069.0], [47.2, 62069.0], [47.3, 62069.0], [47.4, 62069.0], [47.5, 62069.0], [47.6, 62069.0], [47.7, 62073.0], [47.8, 62073.0], [47.9, 62073.0], [48.0, 62073.0], [48.1, 62076.0], [48.2, 62076.0], [48.3, 62076.0], [48.4, 62077.0], [48.5, 62077.0], [48.6, 62077.0], [48.7, 62079.0], [48.8, 62079.0], [48.9, 62079.0], [49.0, 62079.0], [49.1, 62082.0], [49.2, 62082.0], [49.3, 62082.0], [49.4, 62089.0], [49.5, 62089.0], [49.6, 62089.0], [49.7, 62089.0], [49.8, 62089.0], [49.9, 62089.0], [50.0, 62089.0], [50.1, 62098.0], [50.2, 62098.0], [50.3, 62098.0], [50.4, 62099.0], [50.5, 62099.0], [50.6, 62099.0], [50.7, 62103.0], [50.8, 62103.0], [50.9, 62103.0], [51.0, 62103.0], [51.1, 62104.0], [51.2, 62104.0], [51.3, 62104.0], [51.4, 62104.0], [51.5, 62104.0], [51.6, 62104.0], [51.7, 62105.0], [51.8, 62105.0], [51.9, 62105.0], [52.0, 62105.0], [52.1, 62109.0], [52.2, 62109.0], [52.3, 62109.0], [52.4, 62111.0], [52.5, 62111.0], [52.6, 62111.0], [52.7, 62115.0], [52.8, 62115.0], [52.9, 62115.0], [53.0, 62115.0], [53.1, 62118.0], [53.2, 62118.0], [53.3, 62118.0], [53.4, 62120.0], [53.5, 62120.0], [53.6, 62120.0], [53.7, 62121.0], [53.8, 62121.0], [53.9, 62121.0], [54.0, 62121.0], [54.1, 62121.0], [54.2, 62121.0], [54.3, 62121.0], [54.4, 62124.0], [54.5, 62124.0], [54.6, 62124.0], [54.7, 62125.0], [54.8, 62125.0], [54.9, 62125.0], [55.0, 62125.0], [55.1, 62127.0], [55.2, 62127.0], [55.3, 62127.0], [55.4, 62130.0], [55.5, 62130.0], [55.6, 62130.0], [55.7, 62134.0], [55.8, 62134.0], [55.9, 62134.0], [56.0, 62134.0], [56.1, 62134.0], [56.2, 62134.0], [56.3, 62134.0], [56.4, 62135.0], [56.5, 62135.0], [56.6, 62135.0], [56.7, 62138.0], [56.8, 62138.0], [56.9, 62138.0], [57.0, 62138.0], [57.1, 62142.0], [57.2, 62142.0], [57.3, 62142.0], [57.4, 62147.0], [57.5, 62147.0], [57.6, 62147.0], [57.7, 62148.0], [57.8, 62148.0], [57.9, 62148.0], [58.0, 62148.0], [58.1, 62154.0], [58.2, 62154.0], [58.3, 62154.0], [58.4, 62155.0], [58.5, 62155.0], [58.6, 62155.0], [58.7, 62157.0], [58.8, 62157.0], [58.9, 62157.0], [59.0, 62157.0], [59.1, 62158.0], [59.2, 62158.0], [59.3, 62158.0], [59.4, 62159.0], [59.5, 62159.0], [59.6, 62159.0], [59.7, 62160.0], [59.8, 62160.0], [59.9, 62160.0], [60.0, 62160.0], [60.1, 62164.0], [60.2, 62164.0], [60.3, 62164.0], [60.4, 62165.0], [60.5, 62165.0], [60.6, 62165.0], [60.7, 62167.0], [60.8, 62167.0], [60.9, 62167.0], [61.0, 62167.0], [61.1, 62168.0], [61.2, 62168.0], [61.3, 62168.0], [61.4, 62169.0], [61.5, 62169.0], [61.6, 62169.0], [61.7, 62170.0], [61.8, 62170.0], [61.9, 62170.0], [62.0, 62170.0], [62.1, 62179.0], [62.2, 62179.0], [62.3, 62179.0], [62.4, 62190.0], [62.5, 62190.0], [62.6, 62190.0], [62.7, 62190.0], [62.8, 62190.0], [62.9, 62190.0], [63.0, 62190.0], [63.1, 62198.0], [63.2, 62198.0], [63.3, 62198.0], [63.4, 62198.0], [63.5, 62198.0], [63.6, 62198.0], [63.7, 62203.0], [63.8, 62203.0], [63.9, 62203.0], [64.0, 62203.0], [64.1, 62203.0], [64.2, 62203.0], [64.3, 62203.0], [64.4, 62204.0], [64.5, 62204.0], [64.6, 62204.0], [64.7, 62204.0], [64.8, 62204.0], [64.9, 62204.0], [65.0, 62204.0], [65.1, 62204.0], [65.2, 62204.0], [65.3, 62204.0], [65.4, 62204.0], [65.5, 62204.0], [65.6, 62204.0], [65.7, 62205.0], [65.8, 62205.0], [65.9, 62205.0], [66.0, 62205.0], [66.1, 62205.0], [66.2, 62205.0], [66.3, 62205.0], [66.4, 62225.0], [66.5, 62225.0], [66.6, 62225.0], [66.7, 62227.0], [66.8, 62227.0], [66.9, 62227.0], [67.0, 62227.0], [67.1, 62229.0], [67.2, 62229.0], [67.3, 62229.0], [67.4, 62232.0], [67.5, 62232.0], [67.6, 62232.0], [67.7, 62237.0], [67.8, 62237.0], [67.9, 62237.0], [68.0, 62237.0], [68.1, 62241.0], [68.2, 62241.0], [68.3, 62241.0], [68.4, 62245.0], [68.5, 62245.0], [68.6, 62245.0], [68.7, 62247.0], [68.8, 62247.0], [68.9, 62247.0], [69.0, 62247.0], [69.1, 62249.0], [69.2, 62249.0], [69.3, 62249.0], [69.4, 62250.0], [69.5, 62250.0], [69.6, 62250.0], [69.7, 62258.0], [69.8, 62258.0], [69.9, 62258.0], [70.0, 62258.0], [70.1, 62261.0], [70.2, 62261.0], [70.3, 62261.0], [70.4, 62262.0], [70.5, 62262.0], [70.6, 62262.0], [70.7, 62265.0], [70.8, 62265.0], [70.9, 62265.0], [71.0, 62265.0], [71.1, 62267.0], [71.2, 62267.0], [71.3, 62267.0], [71.4, 62270.0], [71.5, 62270.0], [71.6, 62270.0], [71.7, 62272.0], [71.8, 62272.0], [71.9, 62272.0], [72.0, 62272.0], [72.1, 62278.0], [72.2, 62278.0], [72.3, 62278.0], [72.4, 62278.0], [72.5, 62278.0], [72.6, 62278.0], [72.7, 62279.0], [72.8, 62279.0], [72.9, 62279.0], [73.0, 62279.0], [73.1, 62280.0], [73.2, 62280.0], [73.3, 62280.0], [73.4, 62285.0], [73.5, 62285.0], [73.6, 62285.0], [73.7, 62303.0], [73.8, 62303.0], [73.9, 62303.0], [74.0, 62303.0], [74.1, 62311.0], [74.2, 62311.0], [74.3, 62311.0], [74.4, 62315.0], [74.5, 62315.0], [74.6, 62315.0], [74.7, 62318.0], [74.8, 62318.0], [74.9, 62318.0], [75.0, 62320.0], [75.1, 62320.0], [75.2, 62320.0], [75.3, 62320.0], [75.4, 62326.0], [75.5, 62326.0], [75.6, 62326.0], [75.7, 62328.0], [75.8, 62328.0], [75.9, 62328.0], [76.0, 62329.0], [76.1, 62329.0], [76.2, 62329.0], [76.3, 62329.0], [76.4, 62333.0], [76.5, 62333.0], [76.6, 62333.0], [76.7, 62337.0], [76.8, 62337.0], [76.9, 62337.0], [77.0, 62346.0], [77.1, 62346.0], [77.2, 62346.0], [77.3, 62346.0], [77.4, 62347.0], [77.5, 62347.0], [77.6, 62347.0], [77.7, 62347.0], [77.8, 62347.0], [77.9, 62347.0], [78.0, 62348.0], [78.1, 62348.0], [78.2, 62348.0], [78.3, 62348.0], [78.4, 62349.0], [78.5, 62349.0], [78.6, 62349.0], [78.7, 62349.0], [78.8, 62349.0], [78.9, 62349.0], [79.0, 62350.0], [79.1, 62350.0], [79.2, 62350.0], [79.3, 62350.0], [79.4, 62353.0], [79.5, 62353.0], [79.6, 62353.0], [79.7, 62355.0], [79.8, 62355.0], [79.9, 62355.0], [80.0, 62358.0], [80.1, 62358.0], [80.2, 62358.0], [80.3, 62358.0], [80.4, 62359.0], [80.5, 62359.0], [80.6, 62359.0], [80.7, 62359.0], [80.8, 62359.0], [80.9, 62359.0], [81.0, 62360.0], [81.1, 62360.0], [81.2, 62360.0], [81.3, 62360.0], [81.4, 62361.0], [81.5, 62361.0], [81.6, 62361.0], [81.7, 62361.0], [81.8, 62361.0], [81.9, 62361.0], [82.0, 62362.0], [82.1, 62362.0], [82.2, 62362.0], [82.3, 62362.0], [82.4, 62366.0], [82.5, 62366.0], [82.6, 62366.0], [82.7, 62368.0], [82.8, 62368.0], [82.9, 62368.0], [83.0, 62369.0], [83.1, 62369.0], [83.2, 62369.0], [83.3, 62369.0], [83.4, 62371.0], [83.5, 62371.0], [83.6, 62371.0], [83.7, 62380.0], [83.8, 62380.0], [83.9, 62380.0], [84.0, 62384.0], [84.1, 62384.0], [84.2, 62384.0], [84.3, 62384.0], [84.4, 62389.0], [84.5, 62389.0], [84.6, 62389.0], [84.7, 62390.0], [84.8, 62390.0], [84.9, 62390.0], [85.0, 62392.0], [85.1, 62392.0], [85.2, 62392.0], [85.3, 62392.0], [85.4, 62394.0], [85.5, 62394.0], [85.6, 62394.0], [85.7, 62394.0], [85.8, 62394.0], [85.9, 62394.0], [86.0, 62396.0], [86.1, 62396.0], [86.2, 62396.0], [86.3, 62396.0], [86.4, 62400.0], [86.5, 62400.0], [86.6, 62400.0], [86.7, 62400.0], [86.8, 62400.0], [86.9, 62400.0], [87.0, 62401.0], [87.1, 62401.0], [87.2, 62401.0], [87.3, 62401.0], [87.4, 62408.0], [87.5, 62408.0], [87.6, 62408.0], [87.7, 62415.0], [87.8, 62415.0], [87.9, 62415.0], [88.0, 62419.0], [88.1, 62419.0], [88.2, 62419.0], [88.3, 62419.0], [88.4, 62430.0], [88.5, 62430.0], [88.6, 62430.0], [88.7, 62432.0], [88.8, 62432.0], [88.9, 62432.0], [89.0, 62435.0], [89.1, 62435.0], [89.2, 62435.0], [89.3, 62435.0], [89.4, 62438.0], [89.5, 62438.0], [89.6, 62438.0], [89.7, 62439.0], [89.8, 62439.0], [89.9, 62439.0], [90.0, 62446.0], [90.1, 62446.0], [90.2, 62446.0], [90.3, 62446.0], [90.4, 62454.0], [90.5, 62454.0], [90.6, 62454.0], [90.7, 62455.0], [90.8, 62455.0], [90.9, 62455.0], [91.0, 62461.0], [91.1, 62461.0], [91.2, 62461.0], [91.3, 62461.0], [91.4, 62463.0], [91.5, 62463.0], [91.6, 62463.0], [91.7, 62474.0], [91.8, 62474.0], [91.9, 62474.0], [92.0, 62475.0], [92.1, 62475.0], [92.2, 62475.0], [92.3, 62475.0], [92.4, 62476.0], [92.5, 62476.0], [92.6, 62476.0], [92.7, 62479.0], [92.8, 62479.0], [92.9, 62479.0], [93.0, 62481.0], [93.1, 62481.0], [93.2, 62481.0], [93.3, 62481.0], [93.4, 62481.0], [93.5, 62481.0], [93.6, 62481.0], [93.7, 62484.0], [93.8, 62484.0], [93.9, 62484.0], [94.0, 62486.0], [94.1, 62486.0], [94.2, 62486.0], [94.3, 62486.0], [94.4, 62487.0], [94.5, 62487.0], [94.6, 62487.0], [94.7, 62495.0], [94.8, 62495.0], [94.9, 62495.0], [95.0, 62513.0], [95.1, 62513.0], [95.2, 62513.0], [95.3, 62513.0], [95.4, 62514.0], [95.5, 62514.0], [95.6, 62514.0], [95.7, 62520.0], [95.8, 62520.0], [95.9, 62520.0], [96.0, 62524.0], [96.1, 62524.0], [96.2, 62524.0], [96.3, 62524.0], [96.4, 62526.0], [96.5, 62526.0], [96.6, 62526.0], [96.7, 62528.0], [96.8, 62528.0], [96.9, 62528.0], [97.0, 62530.0], [97.1, 62530.0], [97.2, 62530.0], [97.3, 62530.0], [97.4, 62530.0], [97.5, 62530.0], [97.6, 62530.0], [97.7, 62539.0], [97.8, 62539.0], [97.9, 62539.0], [98.0, 62540.0], [98.1, 62540.0], [98.2, 62540.0], [98.3, 62540.0], [98.4, 62547.0], [98.5, 62547.0], [98.6, 62547.0], [98.7, 62548.0], [98.8, 62548.0], [98.9, 62548.0], [99.0, 62562.0], [99.1, 62562.0], [99.2, 62562.0], [99.3, 62562.0], [99.4, 62568.0], [99.5, 62568.0], [99.6, 62568.0], [99.7, 62579.0], [99.8, 62579.0], [99.9, 62579.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64546.0], [0.1, 64546.0], [0.2, 64546.0], [0.3, 64546.0], [0.4, 64546.0], [0.5, 64546.0], [0.6, 64546.0], [0.7, 64546.0], [0.8, 64546.0], [0.9, 64546.0], [1.0, 64546.0], [1.1, 64546.0], [1.2, 64546.0], [1.3, 64546.0], [1.4, 64546.0], [1.5, 64546.0], [1.6, 64546.0], [1.7, 64546.0], [1.8, 64546.0], [1.9, 64546.0], [2.0, 64546.0], [2.1, 64546.0], [2.2, 64546.0], [2.3, 64546.0], [2.4, 64546.0], [2.5, 64546.0], [2.6, 64546.0], [2.7, 64546.0], [2.8, 64546.0], [2.9, 64546.0], [3.0, 64546.0], [3.1, 64546.0], [3.2, 64546.0], [3.3, 64546.0], [3.4, 64562.0], [3.5, 64562.0], [3.6, 64562.0], [3.7, 64562.0], [3.8, 64562.0], [3.9, 64562.0], [4.0, 64562.0], [4.1, 64562.0], [4.2, 64562.0], [4.3, 64562.0], [4.4, 64562.0], [4.5, 64562.0], [4.6, 64562.0], [4.7, 64562.0], [4.8, 64562.0], [4.9, 64562.0], [5.0, 64562.0], [5.1, 64562.0], [5.2, 64562.0], [5.3, 64562.0], [5.4, 64562.0], [5.5, 64562.0], [5.6, 64562.0], [5.7, 64562.0], [5.8, 64562.0], [5.9, 64562.0], [6.0, 64562.0], [6.1, 64562.0], [6.2, 64562.0], [6.3, 64562.0], [6.4, 64562.0], [6.5, 64562.0], [6.6, 64562.0], [6.7, 64643.0], [6.8, 64643.0], [6.9, 64643.0], [7.0, 64643.0], [7.1, 64643.0], [7.2, 64643.0], [7.3, 64643.0], [7.4, 64643.0], [7.5, 64643.0], [7.6, 64643.0], [7.7, 64643.0], [7.8, 64643.0], [7.9, 64643.0], [8.0, 64643.0], [8.1, 64643.0], [8.2, 64643.0], [8.3, 64643.0], [8.4, 64643.0], [8.5, 64643.0], [8.6, 64643.0], [8.7, 64643.0], [8.8, 64643.0], [8.9, 64643.0], [9.0, 64643.0], [9.1, 64643.0], [9.2, 64643.0], [9.3, 64643.0], [9.4, 64643.0], [9.5, 64643.0], [9.6, 64643.0], [9.7, 64643.0], [9.8, 64643.0], [9.9, 64643.0], [10.0, 64675.0], [10.1, 64675.0], [10.2, 64675.0], [10.3, 64675.0], [10.4, 64675.0], [10.5, 64675.0], [10.6, 64675.0], [10.7, 64675.0], [10.8, 64675.0], [10.9, 64675.0], [11.0, 64675.0], [11.1, 64675.0], [11.2, 64675.0], [11.3, 64675.0], [11.4, 64675.0], [11.5, 64675.0], [11.6, 64675.0], [11.7, 64675.0], [11.8, 64675.0], [11.9, 64675.0], [12.0, 64675.0], [12.1, 64675.0], [12.2, 64675.0], [12.3, 64675.0], [12.4, 64675.0], [12.5, 64675.0], [12.6, 64675.0], [12.7, 64675.0], [12.8, 64675.0], [12.9, 64675.0], [13.0, 64675.0], [13.1, 64675.0], [13.2, 64675.0], [13.3, 64675.0], [13.4, 64676.0], [13.5, 64676.0], [13.6, 64676.0], [13.7, 64676.0], [13.8, 64676.0], [13.9, 64676.0], [14.0, 64676.0], [14.1, 64676.0], [14.2, 64676.0], [14.3, 64676.0], [14.4, 64676.0], [14.5, 64676.0], [14.6, 64676.0], [14.7, 64676.0], [14.8, 64676.0], [14.9, 64676.0], [15.0, 64676.0], [15.1, 64676.0], [15.2, 64676.0], [15.3, 64676.0], [15.4, 64676.0], [15.5, 64676.0], [15.6, 64676.0], [15.7, 64676.0], [15.8, 64676.0], [15.9, 64676.0], [16.0, 64676.0], [16.1, 64676.0], [16.2, 64676.0], [16.3, 64676.0], [16.4, 64676.0], [16.5, 64676.0], [16.6, 64676.0], [16.7, 64693.0], [16.8, 64693.0], [16.9, 64693.0], [17.0, 64693.0], [17.1, 64693.0], [17.2, 64693.0], [17.3, 64693.0], [17.4, 64693.0], [17.5, 64693.0], [17.6, 64693.0], [17.7, 64693.0], [17.8, 64693.0], [17.9, 64693.0], [18.0, 64693.0], [18.1, 64693.0], [18.2, 64693.0], [18.3, 64693.0], [18.4, 64693.0], [18.5, 64693.0], [18.6, 64693.0], [18.7, 64693.0], [18.8, 64693.0], [18.9, 64693.0], [19.0, 64693.0], [19.1, 64693.0], [19.2, 64693.0], [19.3, 64693.0], [19.4, 64693.0], [19.5, 64693.0], [19.6, 64693.0], [19.7, 64693.0], [19.8, 64693.0], [19.9, 64693.0], [20.0, 64758.0], [20.1, 64758.0], [20.2, 64758.0], [20.3, 64758.0], [20.4, 64758.0], [20.5, 64758.0], [20.6, 64758.0], [20.7, 64758.0], [20.8, 64758.0], [20.9, 64758.0], [21.0, 64758.0], [21.1, 64758.0], [21.2, 64758.0], [21.3, 64758.0], [21.4, 64758.0], [21.5, 64758.0], [21.6, 64758.0], [21.7, 64758.0], [21.8, 64758.0], [21.9, 64758.0], [22.0, 64758.0], [22.1, 64758.0], [22.2, 64758.0], [22.3, 64758.0], [22.4, 64758.0], [22.5, 64758.0], [22.6, 64758.0], [22.7, 64758.0], [22.8, 64758.0], [22.9, 64758.0], [23.0, 64758.0], [23.1, 64758.0], [23.2, 64758.0], [23.3, 64758.0], [23.4, 64807.0], [23.5, 64807.0], [23.6, 64807.0], [23.7, 64807.0], [23.8, 64807.0], [23.9, 64807.0], [24.0, 64807.0], [24.1, 64807.0], [24.2, 64807.0], [24.3, 64807.0], [24.4, 64807.0], [24.5, 64807.0], [24.6, 64807.0], [24.7, 64807.0], [24.8, 64807.0], [24.9, 64807.0], [25.0, 64807.0], [25.1, 64807.0], [25.2, 64807.0], [25.3, 64807.0], [25.4, 64807.0], [25.5, 64807.0], [25.6, 64807.0], [25.7, 64807.0], [25.8, 64807.0], [25.9, 64807.0], [26.0, 64807.0], [26.1, 64807.0], [26.2, 64807.0], [26.3, 64807.0], [26.4, 64807.0], [26.5, 64807.0], [26.6, 64807.0], [26.7, 64825.0], [26.8, 64825.0], [26.9, 64825.0], [27.0, 64825.0], [27.1, 64825.0], [27.2, 64825.0], [27.3, 64825.0], [27.4, 64825.0], [27.5, 64825.0], [27.6, 64825.0], [27.7, 64825.0], [27.8, 64825.0], [27.9, 64825.0], [28.0, 64825.0], [28.1, 64825.0], [28.2, 64825.0], [28.3, 64825.0], [28.4, 64825.0], [28.5, 64825.0], [28.6, 64825.0], [28.7, 64825.0], [28.8, 64825.0], [28.9, 64825.0], [29.0, 64825.0], [29.1, 64825.0], [29.2, 64825.0], [29.3, 64825.0], [29.4, 64825.0], [29.5, 64825.0], [29.6, 64825.0], [29.7, 64825.0], [29.8, 64825.0], [29.9, 64825.0], [30.0, 64842.0], [30.1, 64842.0], [30.2, 64842.0], [30.3, 64842.0], [30.4, 64842.0], [30.5, 64842.0], [30.6, 64842.0], [30.7, 64842.0], [30.8, 64842.0], [30.9, 64842.0], [31.0, 64842.0], [31.1, 64842.0], [31.2, 64842.0], [31.3, 64842.0], [31.4, 64842.0], [31.5, 64842.0], [31.6, 64842.0], [31.7, 64842.0], [31.8, 64842.0], [31.9, 64842.0], [32.0, 64842.0], [32.1, 64842.0], [32.2, 64842.0], [32.3, 64842.0], [32.4, 64842.0], [32.5, 64842.0], [32.6, 64842.0], [32.7, 64842.0], [32.8, 64842.0], [32.9, 64842.0], [33.0, 64842.0], [33.1, 64842.0], [33.2, 64842.0], [33.3, 64842.0], [33.4, 64892.0], [33.5, 64892.0], [33.6, 64892.0], [33.7, 64892.0], [33.8, 64892.0], [33.9, 64892.0], [34.0, 64892.0], [34.1, 64892.0], [34.2, 64892.0], [34.3, 64892.0], [34.4, 64892.0], [34.5, 64892.0], [34.6, 64892.0], [34.7, 64892.0], [34.8, 64892.0], [34.9, 64892.0], [35.0, 64892.0], [35.1, 64892.0], [35.2, 64892.0], [35.3, 64892.0], [35.4, 64892.0], [35.5, 64892.0], [35.6, 64892.0], [35.7, 64892.0], [35.8, 64892.0], [35.9, 64892.0], [36.0, 64892.0], [36.1, 64892.0], [36.2, 64892.0], [36.3, 64892.0], [36.4, 64892.0], [36.5, 64892.0], [36.6, 64892.0], [36.7, 64906.0], [36.8, 64906.0], [36.9, 64906.0], [37.0, 64906.0], [37.1, 64906.0], [37.2, 64906.0], [37.3, 64906.0], [37.4, 64906.0], [37.5, 64906.0], [37.6, 64906.0], [37.7, 64906.0], [37.8, 64906.0], [37.9, 64906.0], [38.0, 64906.0], [38.1, 64906.0], [38.2, 64906.0], [38.3, 64906.0], [38.4, 64906.0], [38.5, 64906.0], [38.6, 64906.0], [38.7, 64906.0], [38.8, 64906.0], [38.9, 64906.0], [39.0, 64906.0], [39.1, 64906.0], [39.2, 64906.0], [39.3, 64906.0], [39.4, 64906.0], [39.5, 64906.0], [39.6, 64906.0], [39.7, 64906.0], [39.8, 64906.0], [39.9, 64906.0], [40.0, 64952.0], [40.1, 64952.0], [40.2, 64952.0], [40.3, 64952.0], [40.4, 64952.0], [40.5, 64952.0], [40.6, 64952.0], [40.7, 64952.0], [40.8, 64952.0], [40.9, 64952.0], [41.0, 64952.0], [41.1, 64952.0], [41.2, 64952.0], [41.3, 64952.0], [41.4, 64952.0], [41.5, 64952.0], [41.6, 64952.0], [41.7, 64952.0], [41.8, 64952.0], [41.9, 64952.0], [42.0, 64952.0], [42.1, 64952.0], [42.2, 64952.0], [42.3, 64952.0], [42.4, 64952.0], [42.5, 64952.0], [42.6, 64952.0], [42.7, 64952.0], [42.8, 64952.0], [42.9, 64952.0], [43.0, 64952.0], [43.1, 64952.0], [43.2, 64952.0], [43.3, 64952.0], [43.4, 64981.0], [43.5, 64981.0], [43.6, 64981.0], [43.7, 64981.0], [43.8, 64981.0], [43.9, 64981.0], [44.0, 64981.0], [44.1, 64981.0], [44.2, 64981.0], [44.3, 64981.0], [44.4, 64981.0], [44.5, 64981.0], [44.6, 64981.0], [44.7, 64981.0], [44.8, 64981.0], [44.9, 64981.0], [45.0, 64981.0], [45.1, 64981.0], [45.2, 64981.0], [45.3, 64981.0], [45.4, 64981.0], [45.5, 64981.0], [45.6, 64981.0], [45.7, 64981.0], [45.8, 64981.0], [45.9, 64981.0], [46.0, 64981.0], [46.1, 64981.0], [46.2, 64981.0], [46.3, 64981.0], [46.4, 64981.0], [46.5, 64981.0], [46.6, 64981.0], [46.7, 64988.0], [46.8, 64988.0], [46.9, 64988.0], [47.0, 64988.0], [47.1, 64988.0], [47.2, 64988.0], [47.3, 64988.0], [47.4, 64988.0], [47.5, 64988.0], [47.6, 64988.0], [47.7, 64988.0], [47.8, 64988.0], [47.9, 64988.0], [48.0, 64988.0], [48.1, 64988.0], [48.2, 64988.0], [48.3, 64988.0], [48.4, 64988.0], [48.5, 64988.0], [48.6, 64988.0], [48.7, 64988.0], [48.8, 64988.0], [48.9, 64988.0], [49.0, 64988.0], [49.1, 64988.0], [49.2, 64988.0], [49.3, 64988.0], [49.4, 64988.0], [49.5, 64988.0], [49.6, 64988.0], [49.7, 64988.0], [49.8, 64988.0], [49.9, 64988.0], [50.0, 64988.0], [50.1, 65009.0], [50.2, 65009.0], [50.3, 65009.0], [50.4, 65009.0], [50.5, 65009.0], [50.6, 65009.0], [50.7, 65009.0], [50.8, 65009.0], [50.9, 65009.0], [51.0, 65009.0], [51.1, 65009.0], [51.2, 65009.0], [51.3, 65009.0], [51.4, 65009.0], [51.5, 65009.0], [51.6, 65009.0], [51.7, 65009.0], [51.8, 65009.0], [51.9, 65009.0], [52.0, 65009.0], [52.1, 65009.0], [52.2, 65009.0], [52.3, 65009.0], [52.4, 65009.0], [52.5, 65009.0], [52.6, 65009.0], [52.7, 65009.0], [52.8, 65009.0], [52.9, 65009.0], [53.0, 65009.0], [53.1, 65009.0], [53.2, 65009.0], [53.3, 65009.0], [53.4, 65035.0], [53.5, 65035.0], [53.6, 65035.0], [53.7, 65035.0], [53.8, 65035.0], [53.9, 65035.0], [54.0, 65035.0], [54.1, 65035.0], [54.2, 65035.0], [54.3, 65035.0], [54.4, 65035.0], [54.5, 65035.0], [54.6, 65035.0], [54.7, 65035.0], [54.8, 65035.0], [54.9, 65035.0], [55.0, 65035.0], [55.1, 65035.0], [55.2, 65035.0], [55.3, 65035.0], [55.4, 65035.0], [55.5, 65035.0], [55.6, 65035.0], [55.7, 65035.0], [55.8, 65035.0], [55.9, 65035.0], [56.0, 65035.0], [56.1, 65035.0], [56.2, 65035.0], [56.3, 65035.0], [56.4, 65035.0], [56.5, 65035.0], [56.6, 65035.0], [56.7, 65105.0], [56.8, 65105.0], [56.9, 65105.0], [57.0, 65105.0], [57.1, 65105.0], [57.2, 65105.0], [57.3, 65105.0], [57.4, 65105.0], [57.5, 65105.0], [57.6, 65105.0], [57.7, 65105.0], [57.8, 65105.0], [57.9, 65105.0], [58.0, 65105.0], [58.1, 65105.0], [58.2, 65105.0], [58.3, 65105.0], [58.4, 65105.0], [58.5, 65105.0], [58.6, 65105.0], [58.7, 65105.0], [58.8, 65105.0], [58.9, 65105.0], [59.0, 65105.0], [59.1, 65105.0], [59.2, 65105.0], [59.3, 65105.0], [59.4, 65105.0], [59.5, 65105.0], [59.6, 65105.0], [59.7, 65105.0], [59.8, 65105.0], [59.9, 65105.0], [60.0, 65105.0], [60.1, 65136.0], [60.2, 65136.0], [60.3, 65136.0], [60.4, 65136.0], [60.5, 65136.0], [60.6, 65136.0], [60.7, 65136.0], [60.8, 65136.0], [60.9, 65136.0], [61.0, 65136.0], [61.1, 65136.0], [61.2, 65136.0], [61.3, 65136.0], [61.4, 65136.0], [61.5, 65136.0], [61.6, 65136.0], [61.7, 65136.0], [61.8, 65136.0], [61.9, 65136.0], [62.0, 65136.0], [62.1, 65136.0], [62.2, 65136.0], [62.3, 65136.0], [62.4, 65136.0], [62.5, 65136.0], [62.6, 65136.0], [62.7, 65136.0], [62.8, 65136.0], [62.9, 65136.0], [63.0, 65136.0], [63.1, 65136.0], [63.2, 65136.0], [63.3, 65136.0], [63.4, 65183.0], [63.5, 65183.0], [63.6, 65183.0], [63.7, 65183.0], [63.8, 65183.0], [63.9, 65183.0], [64.0, 65183.0], [64.1, 65183.0], [64.2, 65183.0], [64.3, 65183.0], [64.4, 65183.0], [64.5, 65183.0], [64.6, 65183.0], [64.7, 65183.0], [64.8, 65183.0], [64.9, 65183.0], [65.0, 65183.0], [65.1, 65183.0], [65.2, 65183.0], [65.3, 65183.0], [65.4, 65183.0], [65.5, 65183.0], [65.6, 65183.0], [65.7, 65183.0], [65.8, 65183.0], [65.9, 65183.0], [66.0, 65183.0], [66.1, 65183.0], [66.2, 65183.0], [66.3, 65183.0], [66.4, 65183.0], [66.5, 65183.0], [66.6, 65183.0], [66.7, 65228.0], [66.8, 65228.0], [66.9, 65228.0], [67.0, 65228.0], [67.1, 65228.0], [67.2, 65228.0], [67.3, 65228.0], [67.4, 65228.0], [67.5, 65228.0], [67.6, 65228.0], [67.7, 65228.0], [67.8, 65228.0], [67.9, 65228.0], [68.0, 65228.0], [68.1, 65228.0], [68.2, 65228.0], [68.3, 65228.0], [68.4, 65228.0], [68.5, 65228.0], [68.6, 65228.0], [68.7, 65228.0], [68.8, 65228.0], [68.9, 65228.0], [69.0, 65228.0], [69.1, 65228.0], [69.2, 65228.0], [69.3, 65228.0], [69.4, 65228.0], [69.5, 65228.0], [69.6, 65228.0], [69.7, 65228.0], [69.8, 65228.0], [69.9, 65228.0], [70.0, 65228.0], [70.1, 65237.0], [70.2, 65237.0], [70.3, 65237.0], [70.4, 65237.0], [70.5, 65237.0], [70.6, 65237.0], [70.7, 65237.0], [70.8, 65237.0], [70.9, 65237.0], [71.0, 65237.0], [71.1, 65237.0], [71.2, 65237.0], [71.3, 65237.0], [71.4, 65237.0], [71.5, 65237.0], [71.6, 65237.0], [71.7, 65237.0], [71.8, 65237.0], [71.9, 65237.0], [72.0, 65237.0], [72.1, 65237.0], [72.2, 65237.0], [72.3, 65237.0], [72.4, 65237.0], [72.5, 65237.0], [72.6, 65237.0], [72.7, 65237.0], [72.8, 65237.0], [72.9, 65237.0], [73.0, 65237.0], [73.1, 65237.0], [73.2, 65237.0], [73.3, 65237.0], [73.4, 65286.0], [73.5, 65286.0], [73.6, 65286.0], [73.7, 65286.0], [73.8, 65286.0], [73.9, 65286.0], [74.0, 65286.0], [74.1, 65286.0], [74.2, 65286.0], [74.3, 65286.0], [74.4, 65286.0], [74.5, 65286.0], [74.6, 65286.0], [74.7, 65286.0], [74.8, 65286.0], [74.9, 65286.0], [75.0, 65286.0], [75.1, 65286.0], [75.2, 65286.0], [75.3, 65286.0], [75.4, 65286.0], [75.5, 65286.0], [75.6, 65286.0], [75.7, 65286.0], [75.8, 65286.0], [75.9, 65286.0], [76.0, 65286.0], [76.1, 65286.0], [76.2, 65286.0], [76.3, 65286.0], [76.4, 65286.0], [76.5, 65286.0], [76.6, 65286.0], [76.7, 65287.0], [76.8, 65287.0], [76.9, 65287.0], [77.0, 65287.0], [77.1, 65287.0], [77.2, 65287.0], [77.3, 65287.0], [77.4, 65287.0], [77.5, 65287.0], [77.6, 65287.0], [77.7, 65287.0], [77.8, 65287.0], [77.9, 65287.0], [78.0, 65287.0], [78.1, 65287.0], [78.2, 65287.0], [78.3, 65287.0], [78.4, 65287.0], [78.5, 65287.0], [78.6, 65287.0], [78.7, 65287.0], [78.8, 65287.0], [78.9, 65287.0], [79.0, 65287.0], [79.1, 65287.0], [79.2, 65287.0], [79.3, 65287.0], [79.4, 65287.0], [79.5, 65287.0], [79.6, 65287.0], [79.7, 65287.0], [79.8, 65287.0], [79.9, 65287.0], [80.0, 65336.0], [80.1, 65336.0], [80.2, 65336.0], [80.3, 65336.0], [80.4, 65336.0], [80.5, 65336.0], [80.6, 65336.0], [80.7, 65336.0], [80.8, 65336.0], [80.9, 65336.0], [81.0, 65336.0], [81.1, 65336.0], [81.2, 65336.0], [81.3, 65336.0], [81.4, 65336.0], [81.5, 65336.0], [81.6, 65336.0], [81.7, 65336.0], [81.8, 65336.0], [81.9, 65336.0], [82.0, 65336.0], [82.1, 65336.0], [82.2, 65336.0], [82.3, 65336.0], [82.4, 65336.0], [82.5, 65336.0], [82.6, 65336.0], [82.7, 65336.0], [82.8, 65336.0], [82.9, 65336.0], [83.0, 65336.0], [83.1, 65336.0], [83.2, 65336.0], [83.3, 65336.0], [83.4, 65399.0], [83.5, 65399.0], [83.6, 65399.0], [83.7, 65399.0], [83.8, 65399.0], [83.9, 65399.0], [84.0, 65399.0], [84.1, 65399.0], [84.2, 65399.0], [84.3, 65399.0], [84.4, 65399.0], [84.5, 65399.0], [84.6, 65399.0], [84.7, 65399.0], [84.8, 65399.0], [84.9, 65399.0], [85.0, 65399.0], [85.1, 65399.0], [85.2, 65399.0], [85.3, 65399.0], [85.4, 65399.0], [85.5, 65399.0], [85.6, 65399.0], [85.7, 65399.0], [85.8, 65399.0], [85.9, 65399.0], [86.0, 65399.0], [86.1, 65399.0], [86.2, 65399.0], [86.3, 65399.0], [86.4, 65399.0], [86.5, 65399.0], [86.6, 65399.0], [86.7, 65434.0], [86.8, 65434.0], [86.9, 65434.0], [87.0, 65434.0], [87.1, 65434.0], [87.2, 65434.0], [87.3, 65434.0], [87.4, 65434.0], [87.5, 65434.0], [87.6, 65434.0], [87.7, 65434.0], [87.8, 65434.0], [87.9, 65434.0], [88.0, 65434.0], [88.1, 65434.0], [88.2, 65434.0], [88.3, 65434.0], [88.4, 65434.0], [88.5, 65434.0], [88.6, 65434.0], [88.7, 65434.0], [88.8, 65434.0], [88.9, 65434.0], [89.0, 65434.0], [89.1, 65434.0], [89.2, 65434.0], [89.3, 65434.0], [89.4, 65434.0], [89.5, 65434.0], [89.6, 65434.0], [89.7, 65434.0], [89.8, 65434.0], [89.9, 65434.0], [90.0, 65434.0], [90.1, 65434.0], [90.2, 65434.0], [90.3, 65434.0], [90.4, 65434.0], [90.5, 65434.0], [90.6, 65434.0], [90.7, 65434.0], [90.8, 65434.0], [90.9, 65434.0], [91.0, 65434.0], [91.1, 65434.0], [91.2, 65434.0], [91.3, 65434.0], [91.4, 65434.0], [91.5, 65434.0], [91.6, 65434.0], [91.7, 65434.0], [91.8, 65434.0], [91.9, 65434.0], [92.0, 65434.0], [92.1, 65434.0], [92.2, 65434.0], [92.3, 65434.0], [92.4, 65434.0], [92.5, 65434.0], [92.6, 65434.0], [92.7, 65434.0], [92.8, 65434.0], [92.9, 65434.0], [93.0, 65434.0], [93.1, 65434.0], [93.2, 65434.0], [93.3, 65434.0], [93.4, 65479.0], [93.5, 65479.0], [93.6, 65479.0], [93.7, 65479.0], [93.8, 65479.0], [93.9, 65479.0], [94.0, 65479.0], [94.1, 65479.0], [94.2, 65479.0], [94.3, 65479.0], [94.4, 65479.0], [94.5, 65479.0], [94.6, 65479.0], [94.7, 65479.0], [94.8, 65479.0], [94.9, 65479.0], [95.0, 65479.0], [95.1, 65479.0], [95.2, 65479.0], [95.3, 65479.0], [95.4, 65479.0], [95.5, 65479.0], [95.6, 65479.0], [95.7, 65479.0], [95.8, 65479.0], [95.9, 65479.0], [96.0, 65479.0], [96.1, 65479.0], [96.2, 65479.0], [96.3, 65479.0], [96.4, 65479.0], [96.5, 65479.0], [96.6, 65479.0], [96.7, 65482.0], [96.8, 65482.0], [96.9, 65482.0], [97.0, 65482.0], [97.1, 65482.0], [97.2, 65482.0], [97.3, 65482.0], [97.4, 65482.0], [97.5, 65482.0], [97.6, 65482.0], [97.7, 65482.0], [97.8, 65482.0], [97.9, 65482.0], [98.0, 65482.0], [98.1, 65482.0], [98.2, 65482.0], [98.3, 65482.0], [98.4, 65482.0], [98.5, 65482.0], [98.6, 65482.0], [98.7, 65482.0], [98.8, 65482.0], [98.9, 65482.0], [99.0, 65482.0], [99.1, 65482.0], [99.2, 65482.0], [99.3, 65482.0], [99.4, 65482.0], [99.5, 65482.0], [99.6, 65482.0], [99.7, 65482.0], [99.8, 65482.0], [99.9, 65482.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 61402.0], [0.1, 61402.0], [0.2, 61406.0], [0.3, 61406.0], [0.4, 61408.0], [0.5, 61409.0], [0.6, 61409.0], [0.7, 61410.0], [0.8, 61410.0], [0.9, 61419.0], [1.0, 61432.0], [1.1, 61432.0], [1.2, 61433.0], [1.3, 61433.0], [1.4, 61436.0], [1.5, 61440.0], [1.6, 61440.0], [1.7, 61447.0], [1.8, 61447.0], [1.9, 61450.0], [2.0, 61451.0], [2.1, 61451.0], [2.2, 61453.0], [2.3, 61453.0], [2.4, 61456.0], [2.5, 61459.0], [2.6, 61459.0], [2.7, 61460.0], [2.8, 61460.0], [2.9, 61462.0], [3.0, 61468.0], [3.1, 61468.0], [3.2, 61470.0], [3.3, 61470.0], [3.4, 61470.0], [3.5, 61471.0], [3.6, 61471.0], [3.7, 61471.0], [3.8, 61471.0], [3.9, 61475.0], [4.0, 61475.0], [4.1, 61475.0], [4.2, 61475.0], [4.3, 61475.0], [4.4, 61478.0], [4.5, 61482.0], [4.6, 61482.0], [4.7, 61486.0], [4.8, 61486.0], [4.9, 61495.0], [5.0, 61496.0], [5.1, 61496.0], [5.2, 61497.0], [5.3, 61497.0], [5.4, 61499.0], [5.5, 61499.0], [5.6, 61501.0], [5.7, 61505.0], [5.8, 61505.0], [5.9, 61506.0], [6.0, 61506.0], [6.1, 61507.0], [6.2, 61511.0], [6.3, 61511.0], [6.4, 61512.0], [6.5, 61512.0], [6.6, 61518.0], [6.7, 61520.0], [6.8, 61520.0], [6.9, 61522.0], [7.0, 61522.0], [7.1, 61522.0], [7.2, 61523.0], [7.3, 61523.0], [7.4, 61523.0], [7.5, 61523.0], [7.6, 61524.0], [7.7, 61525.0], [7.8, 61525.0], [7.9, 61526.0], [8.0, 61526.0], [8.1, 61530.0], [8.2, 61534.0], [8.3, 61534.0], [8.4, 61537.0], [8.5, 61537.0], [8.6, 61541.0], [8.7, 61541.0], [8.8, 61541.0], [8.9, 61544.0], [9.0, 61544.0], [9.1, 61550.0], [9.2, 61553.0], [9.3, 61553.0], [9.4, 61553.0], [9.5, 61553.0], [9.6, 61554.0], [9.7, 61559.0], [9.8, 61559.0], [9.9, 61559.0], [10.0, 61559.0], [10.1, 61561.0], [10.2, 61564.0], [10.3, 61564.0], [10.4, 61564.0], [10.5, 61564.0], [10.6, 61570.0], [10.7, 61571.0], [10.8, 61571.0], [10.9, 61572.0], [11.0, 61575.0], [11.1, 61575.0], [11.2, 61579.0], [11.3, 61579.0], [11.4, 61581.0], [11.5, 61585.0], [11.6, 61585.0], [11.7, 61585.0], [11.8, 61585.0], [11.9, 61589.0], [12.0, 61590.0], [12.1, 61590.0], [12.2, 61594.0], [12.3, 61594.0], [12.4, 61596.0], [12.5, 61598.0], [12.6, 61598.0], [12.7, 61598.0], [12.8, 61598.0], [12.9, 61599.0], [13.0, 61599.0], [13.1, 61599.0], [13.2, 61600.0], [13.3, 61600.0], [13.4, 61601.0], [13.5, 61601.0], [13.6, 61601.0], [13.7, 61602.0], [13.8, 61602.0], [13.9, 61604.0], [14.0, 61605.0], [14.1, 61605.0], [14.2, 61608.0], [14.3, 61608.0], [14.4, 61612.0], [14.5, 61613.0], [14.6, 61613.0], [14.7, 61613.0], [14.8, 61613.0], [14.9, 61625.0], [15.0, 61627.0], [15.1, 61627.0], [15.2, 61628.0], [15.3, 61628.0], [15.4, 61629.0], [15.5, 61632.0], [15.6, 61632.0], [15.7, 61636.0], [15.8, 61636.0], [15.9, 61636.0], [16.0, 61636.0], [16.1, 61636.0], [16.2, 61639.0], [16.3, 61639.0], [16.4, 61642.0], [16.5, 61643.0], [16.6, 61643.0], [16.7, 61644.0], [16.8, 61644.0], [16.9, 61646.0], [17.0, 61651.0], [17.1, 61651.0], [17.2, 61652.0], [17.3, 61652.0], [17.4, 61652.0], [17.5, 61653.0], [17.6, 61653.0], [17.7, 61654.0], [17.8, 61654.0], [17.9, 61657.0], [18.0, 61658.0], [18.1, 61658.0], [18.2, 61661.0], [18.3, 61661.0], [18.4, 61662.0], [18.5, 61662.0], [18.6, 61663.0], [18.7, 61664.0], [18.8, 61664.0], [18.9, 61664.0], [19.0, 61664.0], [19.1, 61666.0], [19.2, 61666.0], [19.3, 61666.0], [19.4, 61668.0], [19.5, 61668.0], [19.6, 61670.0], [19.7, 61671.0], [19.8, 61671.0], [19.9, 61671.0], [20.0, 61671.0], [20.1, 61672.0], [20.2, 61672.0], [20.3, 61672.0], [20.4, 61675.0], [20.5, 61675.0], [20.6, 61677.0], [20.7, 61678.0], [20.8, 61678.0], [20.9, 61683.0], [21.0, 61683.0], [21.1, 61685.0], [21.2, 61689.0], [21.3, 61689.0], [21.4, 61689.0], [21.5, 61689.0], [21.6, 61693.0], [21.7, 61694.0], [21.8, 61694.0], [21.9, 61700.0], [22.0, 61700.0], [22.1, 61706.0], [22.2, 61710.0], [22.3, 61710.0], [22.4, 61710.0], [22.5, 61710.0], [22.6, 61713.0], [22.7, 61714.0], [22.8, 61714.0], [22.9, 61714.0], [23.0, 61714.0], [23.1, 61716.0], [23.2, 61718.0], [23.3, 61718.0], [23.4, 61720.0], [23.5, 61720.0], [23.6, 61721.0], [23.7, 61726.0], [23.8, 61726.0], [23.9, 61727.0], [24.0, 61727.0], [24.1, 61731.0], [24.2, 61732.0], [24.3, 61732.0], [24.4, 61732.0], [24.5, 61732.0], [24.6, 61733.0], [24.7, 61734.0], [24.8, 61734.0], [24.9, 61738.0], [25.0, 61738.0], [25.1, 61739.0], [25.2, 61742.0], [25.3, 61742.0], [25.4, 61742.0], [25.5, 61742.0], [25.6, 61744.0], [25.7, 61746.0], [25.8, 61746.0], [25.9, 61747.0], [26.0, 61747.0], [26.1, 61757.0], [26.2, 61759.0], [26.3, 61759.0], [26.4, 61759.0], [26.5, 61759.0], [26.6, 61764.0], [26.7, 61766.0], [26.8, 61766.0], [26.9, 61767.0], [27.0, 61767.0], [27.1, 61767.0], [27.2, 61769.0], [27.3, 61769.0], [27.4, 61771.0], [27.5, 61771.0], [27.6, 61772.0], [27.7, 61773.0], [27.8, 61773.0], [27.9, 61774.0], [28.0, 61774.0], [28.1, 61775.0], [28.2, 61776.0], [28.3, 61776.0], [28.4, 61776.0], [28.5, 61776.0], [28.6, 61777.0], [28.7, 61782.0], [28.8, 61782.0], [28.9, 61784.0], [29.0, 61784.0], [29.1, 61787.0], [29.2, 61788.0], [29.3, 61788.0], [29.4, 61788.0], [29.5, 61788.0], [29.6, 61789.0], [29.7, 61789.0], [29.8, 61789.0], [29.9, 61790.0], [30.0, 61790.0], [30.1, 61793.0], [30.2, 61800.0], [30.3, 61800.0], [30.4, 61800.0], [30.5, 61800.0], [30.6, 61801.0], [30.7, 61801.0], [30.8, 61801.0], [30.9, 61802.0], [31.0, 61802.0], [31.1, 61805.0], [31.2, 61810.0], [31.3, 61810.0], [31.4, 61812.0], [31.5, 61812.0], [31.6, 61813.0], [31.7, 61818.0], [31.8, 61818.0], [31.9, 61821.0], [32.0, 61821.0], [32.1, 61821.0], [32.2, 61823.0], [32.3, 61823.0], [32.4, 61828.0], [32.5, 61828.0], [32.6, 61830.0], [32.7, 61832.0], [32.8, 61832.0], [32.9, 61833.0], [33.0, 61833.0], [33.1, 61835.0], [33.2, 61835.0], [33.3, 61835.0], [33.4, 61837.0], [33.5, 61837.0], [33.6, 61838.0], [33.7, 61839.0], [33.8, 61839.0], [33.9, 61840.0], [34.0, 61840.0], [34.1, 61841.0], [34.2, 61842.0], [34.3, 61842.0], [34.4, 61847.0], [34.5, 61847.0], [34.6, 61847.0], [34.7, 61848.0], [34.8, 61848.0], [34.9, 61855.0], [35.0, 61855.0], [35.1, 61856.0], [35.2, 61859.0], [35.3, 61859.0], [35.4, 61860.0], [35.5, 61860.0], [35.6, 61864.0], [35.7, 61867.0], [35.8, 61867.0], [35.9, 61867.0], [36.0, 61867.0], [36.1, 61867.0], [36.2, 61867.0], [36.3, 61867.0], [36.4, 61869.0], [36.5, 61869.0], [36.6, 61869.0], [36.7, 61870.0], [36.8, 61870.0], [36.9, 61871.0], [37.0, 61873.0], [37.1, 61873.0], [37.2, 61875.0], [37.3, 61875.0], [37.4, 61880.0], [37.5, 61881.0], [37.6, 61881.0], [37.7, 61882.0], [37.8, 61882.0], [37.9, 61887.0], [38.0, 61888.0], [38.1, 61888.0], [38.2, 61890.0], [38.3, 61890.0], [38.4, 61892.0], [38.5, 61894.0], [38.6, 61894.0], [38.7, 61895.0], [38.8, 61895.0], [38.9, 61897.0], [39.0, 61897.0], [39.1, 61897.0], [39.2, 61898.0], [39.3, 61898.0], [39.4, 61901.0], [39.5, 61908.0], [39.6, 61908.0], [39.7, 61911.0], [39.8, 61911.0], [39.9, 61911.0], [40.0, 61912.0], [40.1, 61912.0], [40.2, 61913.0], [40.3, 61913.0], [40.4, 61917.0], [40.5, 61919.0], [40.6, 61919.0], [40.7, 61920.0], [40.8, 61920.0], [40.9, 61921.0], [41.0, 61922.0], [41.1, 61922.0], [41.2, 61924.0], [41.3, 61924.0], [41.4, 61924.0], [41.5, 61925.0], [41.6, 61925.0], [41.7, 61926.0], [41.8, 61926.0], [41.9, 61935.0], [42.0, 61938.0], [42.1, 61938.0], [42.2, 61941.0], [42.3, 61941.0], [42.4, 61942.0], [42.5, 61942.0], [42.6, 61942.0], [42.7, 61946.0], [42.8, 61946.0], [42.9, 61946.0], [43.0, 61947.0], [43.1, 61947.0], [43.2, 61949.0], [43.3, 61949.0], [43.4, 61950.0], [43.5, 61952.0], [43.6, 61952.0], [43.7, 61956.0], [43.8, 61956.0], [43.9, 61958.0], [44.0, 61958.0], [44.1, 61958.0], [44.2, 61960.0], [44.3, 61960.0], [44.4, 61963.0], [44.5, 61966.0], [44.6, 61966.0], [44.7, 61970.0], [44.8, 61970.0], [44.9, 61972.0], [45.0, 61974.0], [45.1, 61974.0], [45.2, 61974.0], [45.3, 61974.0], [45.4, 61981.0], [45.5, 61981.0], [45.6, 61981.0], [45.7, 61981.0], [45.8, 61981.0], [45.9, 61985.0], [46.0, 61987.0], [46.1, 61987.0], [46.2, 61989.0], [46.3, 61989.0], [46.4, 61990.0], [46.5, 61991.0], [46.6, 61991.0], [46.7, 61995.0], [46.8, 61995.0], [46.9, 62000.0], [47.0, 62001.0], [47.1, 62001.0], [47.2, 62002.0], [47.3, 62002.0], [47.4, 62008.0], [47.5, 62008.0], [47.6, 62008.0], [47.7, 62009.0], [47.8, 62009.0], [47.9, 62011.0], [48.0, 62015.0], [48.1, 62015.0], [48.2, 62018.0], [48.3, 62018.0], [48.4, 62018.0], [48.5, 62018.0], [48.6, 62018.0], [48.7, 62020.0], [48.8, 62020.0], [48.9, 62020.0], [49.0, 62021.0], [49.1, 62021.0], [49.2, 62023.0], [49.3, 62023.0], [49.4, 62025.0], [49.5, 62027.0], [49.6, 62027.0], [49.7, 62037.0], [49.8, 62037.0], [49.9, 62039.0], [50.0, 62040.0], [50.1, 62040.0], [50.2, 62041.0], [50.3, 62041.0], [50.4, 62041.0], [50.5, 62042.0], [50.6, 62042.0], [50.7, 62042.0], [50.8, 62042.0], [50.9, 62044.0], [51.0, 62044.0], [51.1, 62044.0], [51.2, 62045.0], [51.3, 62045.0], [51.4, 62054.0], [51.5, 62054.0], [51.6, 62054.0], [51.7, 62056.0], [51.8, 62056.0], [51.9, 62056.0], [52.0, 62057.0], [52.1, 62057.0], [52.2, 62058.0], [52.3, 62058.0], [52.4, 62059.0], [52.5, 62061.0], [52.6, 62061.0], [52.7, 62061.0], [52.8, 62061.0], [52.9, 62063.0], [53.0, 62065.0], [53.1, 62065.0], [53.2, 62066.0], [53.3, 62066.0], [53.4, 62067.0], [53.5, 62067.0], [53.6, 62067.0], [53.7, 62068.0], [53.8, 62068.0], [53.9, 62069.0], [54.0, 62079.0], [54.1, 62079.0], [54.2, 62079.0], [54.3, 62079.0], [54.4, 62082.0], [54.5, 62086.0], [54.6, 62086.0], [54.7, 62092.0], [54.8, 62092.0], [54.9, 62092.0], [55.0, 62094.0], [55.1, 62094.0], [55.2, 62094.0], [55.3, 62094.0], [55.4, 62095.0], [55.5, 62101.0], [55.6, 62101.0], [55.7, 62103.0], [55.8, 62103.0], [55.9, 62103.0], [56.0, 62105.0], [56.1, 62105.0], [56.2, 62105.0], [56.3, 62105.0], [56.4, 62108.0], [56.5, 62108.0], [56.6, 62108.0], [56.7, 62110.0], [56.8, 62110.0], [56.9, 62110.0], [57.0, 62114.0], [57.1, 62114.0], [57.2, 62114.0], [57.3, 62114.0], [57.4, 62115.0], [57.5, 62116.0], [57.6, 62116.0], [57.7, 62127.0], [57.8, 62127.0], [57.9, 62128.0], [58.0, 62129.0], [58.1, 62129.0], [58.2, 62129.0], [58.3, 62129.0], [58.4, 62130.0], [58.5, 62130.0], [58.6, 62130.0], [58.7, 62133.0], [58.8, 62133.0], [58.9, 62134.0], [59.0, 62138.0], [59.1, 62138.0], [59.2, 62139.0], [59.3, 62139.0], [59.4, 62143.0], [59.5, 62143.0], [59.6, 62143.0], [59.7, 62146.0], [59.8, 62146.0], [59.9, 62154.0], [60.0, 62158.0], [60.1, 62158.0], [60.2, 62162.0], [60.3, 62162.0], [60.4, 62162.0], [60.5, 62164.0], [60.6, 62164.0], [60.7, 62169.0], [60.8, 62169.0], [60.9, 62171.0], [61.0, 62172.0], [61.1, 62172.0], [61.2, 62174.0], [61.3, 62174.0], [61.4, 62176.0], [61.5, 62177.0], [61.6, 62177.0], [61.7, 62179.0], [61.8, 62179.0], [61.9, 62179.0], [62.0, 62179.0], [62.1, 62179.0], [62.2, 62184.0], [62.3, 62184.0], [62.4, 62185.0], [62.5, 62187.0], [62.6, 62187.0], [62.7, 62188.0], [62.8, 62188.0], [62.9, 62189.0], [63.0, 62190.0], [63.1, 62190.0], [63.2, 62191.0], [63.3, 62191.0], [63.4, 62195.0], [63.5, 62198.0], [63.6, 62198.0], [63.7, 62199.0], [63.8, 62199.0], [63.9, 62199.0], [64.0, 62200.0], [64.1, 62200.0], [64.2, 62207.0], [64.3, 62207.0], [64.4, 62207.0], [64.5, 62209.0], [64.6, 62209.0], [64.7, 62210.0], [64.8, 62210.0], [64.9, 62211.0], [65.0, 62213.0], [65.1, 62213.0], [65.2, 62217.0], [65.3, 62217.0], [65.4, 62219.0], [65.5, 62219.0], [65.6, 62219.0], [65.7, 62225.0], [65.8, 62225.0], [65.9, 62228.0], [66.0, 62228.0], [66.1, 62228.0], [66.2, 62228.0], [66.3, 62228.0], [66.4, 62229.0], [66.5, 62230.0], [66.6, 62230.0], [66.7, 62230.0], [66.8, 62230.0], [66.9, 62234.0], [67.0, 62236.0], [67.1, 62236.0], [67.2, 62240.0], [67.3, 62240.0], [67.4, 62240.0], [67.5, 62244.0], [67.6, 62244.0], [67.7, 62250.0], [67.8, 62250.0], [67.9, 62253.0], [68.0, 62259.0], [68.1, 62259.0], [68.2, 62260.0], [68.3, 62260.0], [68.4, 62265.0], [68.5, 62266.0], [68.6, 62266.0], [68.7, 62274.0], [68.8, 62274.0], [68.9, 62276.0], [69.0, 62279.0], [69.1, 62279.0], [69.2, 62282.0], [69.3, 62282.0], [69.4, 62282.0], [69.5, 62284.0], [69.6, 62284.0], [69.7, 62286.0], [69.8, 62286.0], [69.9, 62286.0], [70.0, 62286.0], [70.1, 62286.0], [70.2, 62288.0], [70.3, 62288.0], [70.4, 62288.0], [70.5, 62291.0], [70.6, 62291.0], [70.7, 62295.0], [70.8, 62295.0], [70.9, 62296.0], [71.0, 62298.0], [71.1, 62298.0], [71.2, 62302.0], [71.3, 62302.0], [71.4, 62303.0], [71.5, 62305.0], [71.6, 62305.0], [71.7, 62309.0], [71.8, 62309.0], [71.9, 62312.0], [72.0, 62314.0], [72.1, 62314.0], [72.2, 62315.0], [72.3, 62315.0], [72.4, 62317.0], [72.5, 62318.0], [72.6, 62318.0], [72.7, 62319.0], [72.8, 62319.0], [72.9, 62319.0], [73.0, 62327.0], [73.1, 62327.0], [73.2, 62328.0], [73.3, 62328.0], [73.4, 62329.0], [73.5, 62329.0], [73.6, 62329.0], [73.7, 62330.0], [73.8, 62330.0], [73.9, 62333.0], [74.0, 62333.0], [74.1, 62333.0], [74.2, 62334.0], [74.3, 62334.0], [74.4, 62335.0], [74.5, 62336.0], [74.6, 62336.0], [74.7, 62343.0], [74.8, 62343.0], [74.9, 62345.0], [75.0, 62346.0], [75.1, 62346.0], [75.2, 62348.0], [75.3, 62348.0], [75.4, 62352.0], [75.5, 62352.0], [75.6, 62353.0], [75.7, 62353.0], [75.8, 62353.0], [75.9, 62354.0], [76.0, 62354.0], [76.1, 62356.0], [76.2, 62356.0], [76.3, 62356.0], [76.4, 62358.0], [76.5, 62358.0], [76.6, 62361.0], [76.7, 62365.0], [76.8, 62365.0], [76.9, 62367.0], [77.0, 62367.0], [77.1, 62368.0], [77.2, 62370.0], [77.3, 62370.0], [77.4, 62371.0], [77.5, 62371.0], [77.6, 62372.0], [77.7, 62373.0], [77.8, 62373.0], [77.9, 62376.0], [78.0, 62376.0], [78.1, 62377.0], [78.2, 62377.0], [78.3, 62377.0], [78.4, 62379.0], [78.5, 62379.0], [78.6, 62379.0], [78.7, 62379.0], [78.8, 62379.0], [78.9, 62383.0], [79.0, 62383.0], [79.1, 62384.0], [79.2, 62385.0], [79.3, 62385.0], [79.4, 62385.0], [79.5, 62385.0], [79.6, 62392.0], [79.7, 62393.0], [79.8, 62393.0], [79.9, 62395.0], [80.0, 62395.0], [80.1, 62398.0], [80.2, 62399.0], [80.3, 62399.0], [80.4, 62399.0], [80.5, 62399.0], [80.6, 62399.0], [80.7, 62400.0], [80.8, 62400.0], [80.9, 62401.0], [81.0, 62401.0], [81.1, 62404.0], [81.2, 62404.0], [81.3, 62404.0], [81.4, 62408.0], [81.5, 62408.0], [81.6, 62409.0], [81.7, 62413.0], [81.8, 62413.0], [81.9, 62415.0], [82.0, 62415.0], [82.1, 62415.0], [82.2, 62416.0], [82.3, 62416.0], [82.4, 62418.0], [82.5, 62418.0], [82.6, 62423.0], [82.7, 62424.0], [82.8, 62424.0], [82.9, 62424.0], [83.0, 62424.0], [83.1, 62425.0], [83.2, 62426.0], [83.3, 62426.0], [83.4, 62428.0], [83.5, 62428.0], [83.6, 62431.0], [83.7, 62432.0], [83.8, 62432.0], [83.9, 62436.0], [84.0, 62436.0], [84.1, 62437.0], [84.2, 62445.0], [84.3, 62445.0], [84.4, 62445.0], [84.5, 62445.0], [84.6, 62445.0], [84.7, 62449.0], [84.8, 62449.0], [84.9, 62451.0], [85.0, 62451.0], [85.1, 62455.0], [85.2, 62455.0], [85.3, 62455.0], [85.4, 62456.0], [85.5, 62456.0], [85.6, 62458.0], [85.7, 62461.0], [85.8, 62461.0], [85.9, 62464.0], [86.0, 62464.0], [86.1, 62467.0], [86.2, 62468.0], [86.3, 62468.0], [86.4, 62469.0], [86.5, 62469.0], [86.6, 62475.0], [86.7, 62478.0], [86.8, 62478.0], [86.9, 62479.0], [87.0, 62479.0], [87.1, 62480.0], [87.2, 62480.0], [87.3, 62480.0], [87.4, 62480.0], [87.5, 62480.0], [87.6, 62481.0], [87.7, 62481.0], [87.8, 62481.0], [87.9, 62485.0], [88.0, 62485.0], [88.1, 62487.0], [88.2, 62491.0], [88.3, 62491.0], [88.4, 62492.0], [88.5, 62492.0], [88.6, 62494.0], [88.7, 62497.0], [88.8, 62497.0], [88.9, 62499.0], [89.0, 62499.0], [89.1, 62502.0], [89.2, 62506.0], [89.3, 62506.0], [89.4, 62507.0], [89.5, 62507.0], [89.6, 62508.0], [89.7, 62512.0], [89.8, 62512.0], [89.9, 62513.0], [90.0, 62513.0], [90.1, 62513.0], [90.2, 62514.0], [90.3, 62514.0], [90.4, 62516.0], [90.5, 62516.0], [90.6, 62519.0], [90.7, 62519.0], [90.8, 62519.0], [90.9, 62522.0], [91.0, 62522.0], [91.1, 62525.0], [91.2, 62527.0], [91.3, 62527.0], [91.4, 62528.0], [91.5, 62528.0], [91.6, 62530.0], [91.7, 62533.0], [91.8, 62533.0], [91.9, 62537.0], [92.0, 62537.0], [92.1, 62539.0], [92.2, 62547.0], [92.3, 62547.0], [92.4, 62548.0], [92.5, 62548.0], [92.6, 62552.0], [92.7, 62554.0], [92.8, 62554.0], [92.9, 62556.0], [93.0, 62556.0], [93.1, 62557.0], [93.2, 62562.0], [93.3, 62562.0], [93.4, 62563.0], [93.5, 62563.0], [93.6, 62563.0], [93.7, 62565.0], [93.8, 62565.0], [93.9, 62567.0], [94.0, 62567.0], [94.1, 62568.0], [94.2, 62568.0], [94.3, 62568.0], [94.4, 62571.0], [94.5, 62571.0], [94.6, 62575.0], [94.7, 62582.0], [94.8, 62582.0], [94.9, 62585.0], [95.0, 62585.0], [95.1, 62586.0], [95.2, 62587.0], [95.3, 62587.0], [95.4, 62587.0], [95.5, 62587.0], [95.6, 62590.0], [95.7, 62591.0], [95.8, 62591.0], [95.9, 62592.0], [96.0, 62592.0], [96.1, 62595.0], [96.2, 62598.0], [96.3, 62598.0], [96.4, 62599.0], [96.5, 62599.0], [96.6, 62601.0], [96.7, 62606.0], [96.8, 62606.0], [96.9, 62609.0], [97.0, 62609.0], [97.1, 62610.0], [97.2, 62611.0], [97.3, 62611.0], [97.4, 62611.0], [97.5, 62611.0], [97.6, 62611.0], [97.7, 62615.0], [97.8, 62615.0], [97.9, 62621.0], [98.0, 62621.0], [98.1, 62623.0], [98.2, 62624.0], [98.3, 62624.0], [98.4, 62630.0], [98.5, 62630.0], [98.6, 62636.0], [98.7, 62636.0], [98.8, 62636.0], [98.9, 62650.0], [99.0, 62650.0], [99.1, 62654.0], [99.2, 62656.0], [99.3, 62656.0], [99.4, 62659.0], [99.5, 62659.0], [99.6, 62663.0], [99.7, 62669.0], [99.8, 62669.0], [99.9, 62676.0], [100.0, 62676.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 61300.0, "maxY": 61.0, "series": [{"data": [[61400.0, 52.0], [61300.0, 11.0], [62400.0, 44.0], [61600.0, 45.0], [62200.0, 49.0], [61500.0, 52.0], [62300.0, 51.0], [62100.0, 56.0], [62000.0, 61.0], [61700.0, 52.0], [61800.0, 50.0], [62500.0, 34.0], [62600.0, 4.0], [61900.0, 39.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[62300.0, 38.0], [61900.0, 30.0], [62200.0, 30.0], [62000.0, 32.0], [62100.0, 39.0], [61700.0, 32.0], [62400.0, 26.0], [61800.0, 35.0], [61600.0, 22.0], [61500.0, 1.0], [62500.0, 15.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[65200.0, 4.0], [65000.0, 2.0], [64800.0, 4.0], [64600.0, 4.0], [64500.0, 2.0], [65400.0, 4.0], [64900.0, 4.0], [65100.0, 3.0], [65300.0, 2.0], [64700.0, 1.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[61400.0, 33.0], [61600.0, 52.0], [61700.0, 50.0], [62000.0, 52.0], [62500.0, 45.0], [62600.0, 21.0], [62300.0, 57.0], [62200.0, 43.0], [61900.0, 45.0], [62100.0, 51.0], [61800.0, 55.0], [61500.0, 46.0], [62400.0, 50.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 65400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1530.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 1530.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 1530.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.366666666666664, "minX": 1.61939988E12, "maxY": 370.34166666666647, "series": [{"data": [[1.61939988E12, 189.05333333333354]], "isOverall": false, "label": "UserType4_V1V2", "isController": false}, {"data": [[1.61939988E12, 17.366666666666664]], "isOverall": false, "label": "UserType1_V1V2", "isController": false}, {"data": [[1.61939988E12, 369.95]], "isOverall": false, "label": "UserType2_V1V2", "isController": false}, {"data": [[1.61939988E12, 370.34166666666647]], "isOverall": false, "label": "UserType3_V1V2", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939988E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 61339.0, "minX": 2.0, "maxY": 65482.0, "series": [{"data": [[284.0, 62367.0], [277.0, 62483.0], [273.0, 62179.0], [300.0, 61673.0], [295.0, 62484.0], [291.0, 62308.0], [319.0, 61948.0], [334.0, 62141.0], [327.0, 62192.0], [323.0, 62501.0], [321.0, 62514.0], [351.0, 62238.0], [345.0, 62616.0], [343.0, 62316.0], [342.0, 62208.0], [366.0, 62079.0], [365.0, 62109.0], [361.0, 62074.0], [360.0, 62627.0], [359.0, 61433.0], [358.0, 61547.0], [356.0, 62604.0], [379.0, 62281.0], [376.0, 62352.0], [372.0, 62339.0], [370.0, 62063.0], [393.0, 62001.0], [387.0, 62183.0], [408.0, 61837.0], [406.0, 62084.0], [404.0, 61609.0], [419.0, 62016.0], [416.0, 61722.0], [434.0, 61774.0], [447.0, 61839.5], [444.0, 61918.0], [441.0, 62041.0], [440.0, 61811.0], [437.0, 61780.0], [436.0, 61525.0], [433.0, 61991.0], [432.0, 62030.5], [463.0, 61991.142857142855], [462.0, 62613.0], [460.0, 62555.0], [459.0, 61586.0], [456.0, 61787.5], [453.0, 61741.75], [452.0, 61865.0], [449.0, 61516.0], [479.0, 62541.0], [475.0, 62168.0], [474.0, 61706.0], [472.0, 62536.0], [469.0, 61836.0], [470.0, 61723.0], [465.0, 61575.0], [482.0, 62279.0], [493.0, 62221.333333333336], [492.0, 61952.0], [491.0, 61580.0], [488.0, 62086.0], [487.0, 62566.0], [486.0, 62170.0], [485.0, 62546.5], [484.0, 62346.0], [481.0, 62009.333333333336], [480.0, 61768.0], [511.0, 62252.0], [505.0, 61985.21428571428], [501.0, 62484.0], [500.0, 62104.0], [496.0, 61954.0], [543.0, 62416.5], [542.0, 61600.0], [530.0, 61469.0], [525.0, 62501.0], [572.0, 61550.0], [568.0, 62149.0], [561.0, 62366.0], [548.0, 62428.0], [603.0, 62378.0], [602.0, 61883.0], [587.0, 62199.0], [635.0, 61885.0], [634.0, 61826.0], [628.0, 61681.0], [624.0, 62013.0], [617.0, 61477.0], [615.0, 62249.0], [658.0, 62251.0], [665.0, 61889.0], [662.0, 62587.0], [661.0, 62131.5], [659.0, 61650.0], [652.0, 61632.0], [651.0, 62348.5], [649.0, 62131.0], [646.0, 61531.0], [645.0, 61907.5], [699.0, 61873.0], [702.0, 62229.0], [696.0, 62510.0], [679.0, 62116.0], [675.0, 62120.0], [672.0, 61926.0], [695.0, 61999.0], [692.0, 61765.0], [690.0, 62319.0], [683.0, 61636.0], [682.0, 62011.0], [680.0, 61699.0], [730.0, 62404.0], [734.0, 61822.0], [733.0, 61903.153846153844], [732.0, 62560.0], [727.0, 62262.0], [719.0, 61514.0], [705.0, 61429.0], [718.0, 62176.0], [716.0, 62133.0], [715.0, 61783.0], [756.0, 61727.0], [766.0, 61653.5], [765.0, 61760.0], [760.0, 62033.0], [743.0, 61694.5], [740.0, 61705.0], [739.0, 61830.0], [738.0, 62287.0], [759.0, 61824.0], [758.0, 61524.0], [757.0, 61455.0], [755.0, 61808.0], [751.0, 61467.0], [749.0, 61767.0], [746.0, 61498.0], [745.0, 61908.5], [744.0, 61620.0], [795.0, 61994.5], [797.0, 62092.0], [793.0, 62272.0], [775.0, 61476.0], [774.0, 62082.0], [773.0, 61634.5], [770.0, 61889.0], [769.0, 61943.333333333336], [768.0, 61513.0], [790.0, 61604.0], [786.0, 61848.0], [785.0, 61714.0], [783.0, 61852.0], [782.0, 61978.666666666664], [781.0, 61632.0], [780.0, 61952.0], [778.0, 61653.0], [818.0, 62469.0], [829.0, 61783.666666666664], [827.0, 62100.5], [825.0, 61669.0], [824.0, 62290.0], [815.0, 61684.0], [805.0, 62040.0], [807.0, 62351.0], [806.0, 61630.0], [813.0, 62419.0], [810.0, 62301.5], [808.0, 61938.0], [823.0, 62510.0], [822.0, 62332.0], [821.0, 62150.0], [817.0, 62008.0], [816.0, 61412.0], [862.0, 61752.0], [863.0, 61681.333333333336], [860.0, 61961.5], [859.0, 61954.0], [857.0, 62047.0], [838.0, 61597.0], [836.0, 61727.5], [834.0, 61479.0], [833.0, 62434.0], [832.0, 61437.0], [839.0, 61603.0], [853.0, 62395.0], [851.0, 62103.85714285714], [849.0, 61836.0], [847.0, 62010.0], [845.0, 62336.5], [842.0, 61496.0], [840.0, 61770.0], [893.0, 61918.0], [894.0, 62058.0], [891.0, 61571.0], [889.0, 62050.0], [888.0, 61935.0], [871.0, 62482.0], [869.0, 61562.0], [867.0, 62287.0], [865.0, 62036.0], [864.0, 61681.5], [885.0, 62450.0], [882.0, 61392.0], [881.0, 62331.0], [877.0, 61932.0], [875.0, 62141.5], [873.0, 61446.0], [872.0, 61634.0], [925.0, 61681.0], [920.0, 61565.0], [903.0, 61434.0], [902.0, 62520.0], [898.0, 61942.0], [897.0, 61784.5], [919.0, 62092.0], [917.0, 61534.0], [915.0, 61642.0], [914.0, 61577.5], [912.0, 61714.0], [910.0, 61606.0], [909.0, 61947.0], [906.0, 61961.0], [904.0, 62466.0], [957.0, 61425.0], [953.0, 62045.0], [947.0, 61805.0], [939.0, 62427.0], [937.0, 61814.0], [935.0, 61704.0], [929.0, 62194.0], [990.0, 61677.0], [987.0, 61702.0], [979.0, 61824.0], [978.0, 62031.0], [968.0, 61862.0], [966.0, 61931.0], [1018.0, 61878.0], [1009.0, 61760.0], [1006.0, 62496.0], [1000.0, 62190.0], [998.0, 61401.0], [994.0, 61901.0], [1080.0, 62514.0], [1084.0, 61738.0], [1078.0, 62038.0], [1073.0, 62496.0], [1063.0, 62481.0], [1061.0, 62541.0], [1057.0, 62320.0], [1056.0, 61406.0], [1055.0, 61596.0], [1037.0, 61610.0], [1029.0, 61894.0], [1051.0, 61720.0], [1046.0, 61568.0], [1044.0, 62146.0], [1128.0, 62518.0], [1147.0, 62235.5], [1124.0, 62157.0], [1143.0, 61855.0], [1142.0, 62543.0], [1139.0, 62406.0], [1115.0, 62055.5], [1101.0, 61941.0], [1099.0, 61795.0], [1097.0, 61367.0], [1093.0, 61904.0], [1108.0, 62127.0], [1133.0, 62184.0], [1132.0, 62185.0], [1130.0, 62148.0], [1127.0, 62228.0], [1126.0, 61405.0], [1210.0, 61866.0], [1191.0, 62494.0], [1214.0, 62274.333333333336], [1186.0, 62155.0], [1184.0, 62443.0], [1190.0, 62052.0], [1187.0, 62403.333333333336], [1202.0, 62271.0], [1206.0, 62150.5], [1200.0, 62349.0], [1165.0, 62350.0], [1163.0, 62295.0], [1161.0, 62344.0], [1157.0, 61468.0], [1152.0, 61854.0], [1153.0, 62336.0], [1183.0, 61572.0], [1179.0, 61704.0], [1173.0, 62043.5], [1199.0, 62159.0], [1196.0, 62161.0], [1194.0, 61548.0], [1274.0, 61384.0], [1278.0, 62228.0], [1267.0, 61555.0], [1266.0, 62368.0], [1265.0, 61863.0], [1230.0, 62393.0], [1228.0, 62494.0], [1226.0, 62278.0], [1224.0, 62039.0], [1222.0, 62209.0], [1262.0, 62416.0], [1254.0, 62357.0], [1249.0, 61829.0], [1245.0, 62507.0], [1241.0, 61888.0], [1240.0, 62515.0], [1234.0, 61803.0], [1338.0, 61760.0], [1339.0, 61700.0], [1337.0, 61479.0], [1335.0, 62319.0], [1336.0, 62195.0], [1330.0, 62013.0], [1311.0, 62029.0], [1294.0, 62291.0], [1292.0, 62055.0], [1286.0, 61966.5], [1283.0, 61840.5], [1309.0, 62100.0], [1319.0, 61716.0], [1317.0, 62025.333333333336], [1313.0, 62358.0], [1407.0, 62248.0], [1405.0, 61415.0], [1400.0, 62296.0], [1395.0, 61853.0], [1375.0, 61507.0], [1347.0, 61410.0], [1345.0, 61474.0], [1351.0, 61820.0], [1348.0, 62306.0], [1373.0, 61975.0], [1372.0, 61875.333333333336], [1369.0, 61643.0], [1367.0, 62229.0], [1366.0, 62125.0], [1360.0, 61417.0], [1406.0, 61744.0], [1389.0, 61865.0], [1387.0, 61955.0], [1388.0, 62010.0], [1386.0, 61852.5], [1384.0, 62242.0], [1382.0, 61898.5], [1380.0, 61668.0], [1466.0, 62322.0], [1471.0, 61797.0], [1441.0, 62036.0], [1442.0, 62071.0], [1443.0, 61880.0], [1447.0, 61339.0], [1453.0, 62504.0], [1449.0, 61470.0], [1470.0, 61844.666666666664], [1469.0, 62128.0], [1463.0, 61821.5], [1462.0, 61722.0], [1461.0, 62444.5], [1456.0, 62023.333333333336], [1436.0, 61765.0], [1408.0, 62181.0], [1413.0, 61888.666666666664], [1412.0, 61464.0], [1423.0, 62113.0], [1421.0, 62123.0], [1435.0, 61791.5], [1433.0, 62358.0], [1431.0, 61762.0], [1429.0, 62266.0], [1430.0, 62366.0], [1426.0, 61530.0], [1425.0, 61642.0], [1424.0, 61719.0], [1455.0, 61824.0], [1454.0, 61585.0], [1508.0, 62191.0], [1513.0, 61771.0], [1530.0, 61991.833333333336], [1504.0, 62232.0], [1506.0, 62055.0], [1505.0, 61391.0], [1522.0, 62175.0], [1521.0, 62209.0], [1487.0, 62254.0], [1483.0, 62374.0], [1479.0, 62104.0], [1482.0, 61977.0], [1476.0, 61677.0], [1475.0, 61708.0], [1473.0, 62016.0], [1501.0, 61728.0], [1499.0, 61783.0], [1500.0, 62073.0], [1478.0, 62267.0], [1498.0, 61589.5], [1497.0, 62157.0], [1496.0, 61714.0], [1495.0, 61899.0], [1494.0, 62006.0], [1490.0, 61534.0], [1489.0, 61724.0], [1488.0, 62093.5], [1519.0, 61481.0], [1517.0, 61592.0], [1518.0, 62432.0], [1516.0, 61728.333333333336], [1514.0, 61772.0], [1512.0, 61511.0], [1511.0, 62113.0], [1509.0, 61549.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[960.2416666666657, 61973.45833333332]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[286.0, 62361.0], [285.0, 62524.0], [282.0, 62014.0], [303.0, 62548.0], [299.0, 61940.0], [297.0, 61946.0], [294.0, 62540.0], [291.0, 62073.0], [288.0, 62355.0], [318.0, 62190.5], [312.0, 62278.0], [309.0, 61980.0], [306.0, 62270.0], [305.0, 62292.5], [334.0, 62530.0], [330.0, 62232.0], [327.0, 61976.0], [347.0, 62134.0], [355.0, 62157.0], [377.0, 61995.0], [375.0, 62562.0], [370.0, 62258.0], [368.0, 62204.0], [395.0, 62265.0], [391.0, 62579.0], [428.0, 61947.0], [425.0, 62120.0], [423.0, 61849.0], [446.0, 61864.0], [445.0, 62530.0], [443.0, 62315.0], [442.0, 62026.0], [440.0, 62481.0], [439.0, 62568.0], [437.0, 62082.0], [436.0, 62062.0], [463.0, 62280.5], [460.0, 62158.0], [454.0, 62252.0], [479.0, 62285.0], [477.0, 62495.0], [474.0, 61953.5], [469.0, 62057.0], [494.0, 62127.0], [492.0, 62394.0], [484.0, 62353.0], [483.0, 62159.0], [482.0, 62366.0], [481.0, 62135.0], [480.0, 62111.0], [510.0, 62476.0], [505.0, 62086.0], [500.0, 62326.0], [499.0, 62513.0], [535.0, 61823.0], [519.0, 61952.0], [517.0, 61787.0], [568.0, 62401.0], [563.0, 61929.0], [607.0, 62038.0], [596.0, 62130.0], [590.0, 61730.0], [630.0, 61887.0], [627.0, 62203.0], [671.0, 61757.0], [667.0, 62333.0], [664.0, 62118.0], [654.0, 61743.0], [645.0, 61940.0], [641.0, 62487.0], [701.0, 62262.0], [695.0, 61760.0], [676.0, 62303.0], [733.0, 61817.454545454544], [729.0, 62528.0], [723.0, 61914.0], [719.0, 62455.0], [709.0, 62145.5], [757.0, 62435.0], [740.0, 62204.0], [796.0, 61851.0], [797.0, 62490.5], [795.0, 61977.0], [794.0, 62285.0], [791.0, 61837.0], [790.0, 62069.0], [784.0, 62514.0], [782.0, 62358.0], [775.0, 62151.5], [773.0, 62347.0], [772.0, 61654.0], [768.0, 62394.0], [780.0, 61770.0], [825.0, 62526.0], [813.0, 62090.5], [810.0, 62396.0], [863.0, 62124.0], [860.0, 62346.0], [859.0, 61838.0], [852.0, 62362.0], [851.0, 62018.0], [849.0, 62279.0], [845.0, 62154.0], [835.0, 61872.0], [894.0, 61999.0], [882.0, 62010.0], [879.0, 61812.0], [876.0, 62170.0], [875.0, 62104.0], [869.0, 62539.0], [864.0, 61819.0], [924.0, 61748.0], [906.0, 62062.0], [905.0, 62350.0], [899.0, 62360.0], [947.0, 61676.0], [939.0, 61682.0], [983.0, 61724.0], [978.0, 61844.0], [1018.0, 61766.0], [1003.0, 62245.0], [1001.0, 61734.0], [994.0, 62134.0], [993.0, 62380.0], [1036.0, 61653.0], [1086.0, 62249.0], [1085.0, 61954.0], [1074.0, 61947.0], [1055.0, 62446.0], [1047.0, 61727.0], [1044.0, 62484.0], [1035.0, 61680.0], [1032.0, 61630.0], [1030.0, 62272.0], [1141.0, 61837.0], [1150.0, 61759.0], [1137.0, 62390.0], [1126.0, 61890.0], [1124.0, 61920.0], [1123.0, 62203.0], [1108.0, 62475.0], [1103.0, 61910.0], [1096.0, 62058.0], [1093.0, 61636.0], [1193.0, 62004.5], [1209.0, 62247.0], [1210.0, 62160.0], [1191.0, 61817.0], [1190.0, 61620.0], [1188.0, 61709.0], [1207.0, 61796.0], [1206.0, 62104.0], [1200.0, 62064.5], [1165.0, 62348.0], [1161.0, 61937.0], [1155.0, 62125.0], [1199.0, 62015.0], [1198.0, 62185.0], [1194.0, 62204.0], [1277.0, 62408.0], [1279.0, 62400.0], [1276.0, 62384.0], [1269.0, 62359.0], [1268.0, 62061.0], [1264.0, 62369.0], [1230.0, 61901.0], [1226.0, 61626.0], [1225.0, 62161.0], [1216.0, 62098.0], [1263.0, 62121.0], [1249.0, 61941.0], [1248.0, 62225.0], [1316.0, 61728.0], [1341.0, 61719.0], [1337.0, 62164.0], [1334.0, 61971.0], [1295.0, 62474.0], [1291.0, 62329.0], [1284.0, 62278.0], [1283.0, 62179.0], [1326.0, 62220.5], [1322.0, 62138.0], [1320.0, 61894.0], [1312.0, 61823.0], [1306.0, 62011.0], [1299.0, 61954.0], [1297.0, 61945.0], [1308.0, 61908.0], [1309.0, 61732.0], [1406.0, 61881.0], [1401.0, 62105.0], [1403.0, 62415.0], [1397.0, 61606.0], [1359.0, 61879.0], [1358.0, 61810.0], [1352.0, 61871.0], [1350.0, 62432.0], [1348.0, 62205.0], [1347.0, 62115.0], [1344.0, 61706.0], [1371.0, 61647.5], [1368.0, 62328.0], [1362.0, 61669.0], [1360.0, 61855.0], [1390.0, 62147.0], [1389.0, 61786.0], [1385.0, 61628.0], [1380.0, 62190.0], [1379.0, 61847.0], [1468.0, 62038.0], [1470.0, 62069.666666666664], [1466.0, 61788.0], [1462.0, 62311.0], [1463.0, 62400.0], [1459.0, 62250.0], [1434.0, 61788.0], [1420.0, 62013.0], [1418.0, 61716.0], [1413.0, 61922.0], [1409.0, 62479.0], [1429.0, 61609.0], [1450.0, 61703.0], [1445.0, 61613.0], [1443.0, 62280.0], [1444.0, 61740.0], [1440.0, 62028.0], [1441.0, 62389.0], [1442.0, 62168.666666666664], [1530.0, 62116.5], [1521.0, 62168.0], [1519.0, 61718.0], [1515.0, 61627.0], [1514.0, 62135.0], [1512.0, 62347.0], [1510.0, 62076.0], [1506.0, 61889.5], [1490.0, 62155.5], [1478.0, 62267.0], [1483.0, 62198.0], [1499.0, 62064.0], [1500.0, 62438.0], [1476.0, 61889.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[954.3133333333335, 62082.09333333336]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[2.0, 64906.0], [9.0, 65033.6], [10.0, 64825.0], [11.0, 64952.0], [12.0, 65482.0], [13.0, 64981.0], [15.0, 65022.0], [4.0, 64675.0], [18.0, 64546.0], [19.0, 64842.0], [20.0, 65235.333333333336], [22.0, 65006.0], [6.0, 65434.0], [7.0, 65228.0], [30.0, 65001.875]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[17.366666666666664, 65027.2]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[283.0, 62630.0], [278.0, 62162.0], [303.0, 62610.0], [301.0, 62169.0], [291.0, 61774.0], [288.0, 61950.0], [311.0, 62487.0], [309.0, 62552.0], [335.0, 62286.0], [333.0, 62563.0], [323.0, 61677.0], [322.0, 62601.0], [348.0, 61598.0], [346.0, 62368.0], [339.0, 62190.0], [338.0, 62296.0], [367.0, 61520.0], [364.0, 61579.0], [359.0, 62023.0], [352.0, 62399.0], [376.0, 62079.0], [370.0, 62383.0], [368.0, 61946.0], [386.0, 62116.0], [384.0, 62602.0], [412.0, 61935.0], [430.0, 61958.0], [429.0, 62054.0], [428.0, 62295.0], [425.0, 61525.0], [417.0, 61599.0], [416.0, 62200.0], [445.0, 62169.6], [437.0, 61991.666666666664], [436.0, 62152.0], [463.0, 61947.0], [462.0, 62568.0], [459.0, 62343.0], [456.0, 61670.0], [454.0, 62282.0], [453.0, 61608.0], [452.0, 62352.0], [451.0, 61742.0], [448.0, 62346.0], [479.0, 61680.0], [476.0, 62348.0], [474.0, 61896.5], [471.0, 62259.666666666664], [469.0, 61892.0], [466.0, 62379.0], [465.0, 62669.0], [483.0, 62388.666666666664], [494.0, 61930.666666666664], [493.0, 61789.0], [492.0, 62389.0], [491.0, 61636.0], [485.0, 62049.5], [484.0, 61867.0], [482.0, 62174.0], [481.0, 62020.4], [480.0, 62213.0], [510.0, 61880.0], [506.0, 61941.0], [505.0, 62148.62499999999], [502.0, 61742.0], [501.0, 62315.0], [499.0, 62217.0], [497.0, 62266.0], [540.0, 61771.0], [529.0, 61963.5], [521.0, 62058.0], [517.0, 62611.0], [514.0, 62265.0], [573.0, 61636.0], [545.0, 62623.0], [602.0, 62067.0], [593.0, 61482.0], [587.0, 61601.0], [580.0, 61995.0], [637.0, 62213.0], [621.0, 62654.0], [614.0, 62189.0], [670.0, 61683.0], [666.0, 61775.0], [662.0, 62133.0], [661.0, 61657.0], [655.0, 61892.0], [651.0, 62158.0], [649.0, 61713.0], [644.0, 62663.0], [641.0, 61572.0], [678.0, 62478.0], [701.0, 61942.0], [700.0, 62480.0], [691.0, 61639.5], [689.0, 62523.0], [688.0, 62537.0], [686.0, 62240.0], [685.0, 61949.0], [675.0, 62395.0], [672.0, 62191.0], [733.0, 61971.666666666664], [731.0, 61871.0], [729.0, 62191.0], [727.0, 62395.0], [719.0, 62115.0], [709.0, 62161.0], [707.0, 61731.0], [757.0, 62110.0], [755.0, 61823.0], [747.0, 61499.0], [745.0, 62480.0], [743.0, 61678.0], [742.0, 62279.0], [792.0, 62042.0], [796.0, 62525.0], [797.0, 62507.0], [795.0, 61776.0], [790.0, 61671.0], [784.0, 62334.0], [782.0, 61734.75], [768.0, 62064.5], [773.0, 62039.0], [769.0, 61987.0], [775.0, 61735.0], [774.0, 62335.5], [780.0, 62032.333333333336], [776.0, 61805.5], [813.0, 61652.0], [810.0, 62562.0], [809.0, 62082.0], [808.0, 62481.0], [807.0, 62475.0], [805.0, 61860.0], [859.0, 62590.0], [863.0, 62127.5], [857.0, 61675.0], [839.0, 61601.5], [838.0, 61646.0], [835.0, 61671.0], [855.0, 62329.0], [851.0, 61930.25], [850.0, 61855.5], [849.0, 62025.0], [847.0, 61590.0], [845.0, 62103.0], [844.0, 62031.0], [883.0, 62591.0], [887.0, 62171.0], [886.0, 62516.0], [885.0, 62636.0], [882.0, 61689.0], [878.0, 62586.0], [873.0, 62286.0], [869.0, 61746.0], [867.0, 61627.0], [927.0, 61666.0], [921.0, 62002.0], [918.0, 61960.5], [917.0, 61759.0], [914.0, 62228.0], [905.0, 61912.0], [899.0, 61989.0], [898.0, 62528.0], [896.0, 62393.0], [957.0, 61628.0], [959.0, 62367.5], [954.0, 62499.0], [953.0, 62058.5], [945.0, 61710.5], [944.0, 61501.0], [942.0, 61920.0], [934.0, 62429.5], [931.0, 61835.0], [989.0, 61505.0], [990.0, 61884.0], [987.0, 62186.5], [984.0, 61685.0], [979.0, 62303.0], [978.0, 62449.0], [976.0, 62161.0], [968.0, 61706.0], [964.0, 61668.0], [960.0, 61955.0], [1011.0, 61714.0], [1020.0, 61981.0], [1019.0, 61537.0], [1016.0, 61700.0], [997.0, 61995.0], [994.0, 62101.0], [995.0, 62284.0], [992.0, 61564.0], [1015.0, 62274.0], [1014.0, 62350.0], [1013.0, 61966.0], [1010.0, 62000.0], [1007.0, 61882.0], [1005.0, 62136.0], [1002.0, 62415.0], [1001.0, 61801.0], [1000.0, 62554.0], [1072.0, 61841.0], [1079.0, 61734.0], [1087.0, 62423.0], [1062.0, 61478.0], [1065.0, 62046.5], [1063.0, 61561.0], [1084.0, 62392.0], [1082.0, 61952.0], [1078.0, 62416.0], [1075.0, 61974.0], [1073.0, 62217.0], [1055.0, 61798.0], [1025.0, 62469.0], [1024.0, 62318.0], [1028.0, 61598.0], [1027.0, 61733.0], [1036.0, 62179.0], [1031.0, 62565.0], [1038.0, 61462.0], [1037.0, 61968.666666666664], [1053.0, 62014.666666666664], [1051.0, 61847.0], [1047.0, 61780.75], [1044.0, 61787.0], [1041.0, 61512.0], [1071.0, 62230.0], [1068.0, 61767.0], [1140.0, 61917.0], [1124.0, 62455.0], [1148.0, 62512.0], [1151.0, 61956.0], [1120.0, 61855.0], [1146.0, 61793.0], [1137.0, 61897.0], [1102.0, 61612.0], [1100.0, 61710.0], [1099.0, 61983.666666666664], [1097.0, 61433.0], [1096.0, 62399.0], [1095.0, 62128.0], [1089.0, 61663.0], [1088.0, 62336.0], [1118.0, 62172.0], [1114.0, 62464.0], [1112.0, 62105.0], [1111.0, 61888.0], [1110.0, 62222.5], [1105.0, 61691.5], [1104.0, 62176.0], [1131.0, 62041.0], [1130.0, 62426.0], [1126.0, 61496.0], [1210.0, 62611.0], [1212.0, 62036.333333333336], [1187.0, 62217.5], [1184.0, 62592.0], [1209.0, 62259.0], [1204.0, 61658.0], [1203.0, 61901.0], [1202.0, 61807.0], [1200.0, 62059.0], [1165.0, 61919.0], [1164.0, 62092.0], [1160.0, 62491.0], [1157.0, 61497.0], [1154.0, 62533.0], [1153.0, 61958.5], [1180.0, 62094.0], [1178.0, 61553.0], [1177.0, 62345.0], [1172.0, 61970.0], [1205.0, 61530.0], [1199.0, 62461.0], [1196.0, 62240.0], [1252.0, 61664.0], [1279.0, 61867.0], [1275.0, 62127.0], [1270.0, 62358.0], [1267.0, 62456.0], [1244.0, 62044.0], [1216.0, 61802.0], [1217.0, 62219.0], [1226.0, 61523.0], [1225.0, 62377.0], [1230.0, 61924.0], [1231.0, 61864.0], [1227.0, 62575.0], [1242.0, 61895.0], [1233.0, 61571.0], [1260.0, 62599.0], [1257.0, 61882.5], [1253.0, 62494.0], [1249.0, 62179.0], [1330.0, 61901.0], [1341.0, 61772.0], [1342.0, 61720.0], [1315.0, 62054.0], [1313.0, 62282.0], [1319.0, 62305.0], [1317.0, 62115.0], [1321.0, 62481.0], [1320.0, 62424.0], [1336.0, 62377.0], [1337.0, 62557.0], [1331.0, 62227.5], [1328.0, 62114.0], [1295.0, 61456.0], [1292.0, 61873.0], [1289.0, 61938.0], [1287.0, 62404.0], [1286.0, 61553.5], [1283.0, 62020.0], [1281.0, 61410.0], [1301.0, 62244.0], [1300.0, 61694.0], [1297.0, 61989.0], [1296.0, 62188.5], [1324.0, 61950.0], [1322.0, 62316.0], [1393.0, 61589.0], [1406.0, 61951.0], [1407.0, 62416.0], [1376.0, 62458.0], [1378.0, 62385.0], [1377.0, 62225.0], [1383.0, 61869.0], [1382.0, 61911.5], [1403.0, 62004.666666666664], [1399.0, 61775.333333333336], [1398.0, 61764.0], [1392.0, 61644.0], [1359.0, 61475.0], [1357.0, 62367.0], [1354.0, 61984.0], [1350.0, 62552.0], [1348.0, 61652.0], [1373.0, 61559.0], [1370.0, 61830.0], [1368.0, 62260.0], [1366.0, 62040.0], [1364.0, 61947.0], [1360.0, 61805.0], [1390.0, 62065.0], [1384.0, 61594.0], [1463.0, 62329.0], [1466.0, 61801.0], [1471.0, 62095.0], [1470.0, 61958.0], [1442.0, 62112.5], [1444.0, 62170.5], [1440.0, 61972.0], [1464.0, 62461.5], [1461.0, 62425.0], [1459.0, 61471.0], [1457.0, 62186.0], [1423.0, 62286.0], [1419.0, 61890.0], [1415.0, 62587.0], [1413.0, 61447.0], [1410.0, 61713.0], [1408.0, 61471.5], [1439.0, 61894.0], [1436.0, 62418.0], [1433.0, 61402.0], [1434.0, 62480.0], [1430.0, 61769.0], [1429.0, 62130.0], [1427.0, 61835.0], [1424.0, 62094.0], [1450.0, 61768.666666666664], [1447.0, 61879.0], [1529.0, 61736.0], [1515.0, 61654.0], [1530.0, 62036.2380952381], [1522.0, 62295.333333333336], [1487.0, 61718.5], [1485.0, 61803.0], [1484.0, 62288.0], [1480.0, 62502.0], [1481.0, 61554.0], [1476.0, 61868.0], [1473.0, 62120.0], [1502.0, 61475.0], [1498.0, 62467.0], [1499.0, 62428.0], [1496.0, 61596.0], [1495.0, 62179.0], [1490.0, 62219.0], [1519.0, 62139.0], [1518.0, 61806.5], [1517.0, 61732.0], [1514.0, 61924.0], [1513.0, 61714.0], [1506.0, 62004.0], [1508.0, 61526.0], [1504.0, 61839.0]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[961.9283333333324, 62035.995000000075]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1530.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61939988E12, "maxY": 4.9E-324, "series": [{"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939988E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 61973.45833333332, "minX": 1.61939988E12, "maxY": 65027.2, "series": [{"data": [[1.61939988E12, 61973.45833333332]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61939988E12, 62082.09333333336]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61939988E12, 65027.2]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61939988E12, 62035.995000000075]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939988E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61939988E12, "maxY": 4.9E-324, "series": [{"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939988E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61939988E12, "maxY": 4.9E-324, "series": [{"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61939988E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939988E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 61327.0, "minX": 1.61939988E12, "maxY": 65482.0, "series": [{"data": [[1.61939988E12, 65482.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61939988E12, 62495.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61939988E12, 65002.49]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61939988E12, 62568.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61939988E12, 61327.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61939988E12, 62042.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939988E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 62032.5, "minX": 30.0, "maxY": 64998.5, "series": [{"data": [[1500.0, 62032.5], [30.0, 64998.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1500.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 30.0, "maxY": 4.9E-324, "series": [{"data": [[1500.0, 0.0], [30.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1500.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.5, "minX": 1.61939982E12, "maxY": 25.5, "series": [{"data": [[1.61939982E12, 25.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939982E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 25.5, "minX": 1.61939988E12, "maxY": 25.5, "series": [{"data": [[1.61939988E12, 25.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939988E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.61939988E12, "maxY": 10.0, "series": [{"data": [[1.61939988E12, 0.5]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61939988E12, 10.0]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61939988E12, 5.0]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61939988E12, 10.0]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939988E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 25.5, "minX": 1.61939988E12, "maxY": 25.5, "series": [{"data": [[1.61939988E12, 25.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939988E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

