/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 59736.0, "minX": 0.0, "maxY": 64679.0, "series": [{"data": [[0.0, 60393.0], [0.1, 60393.0], [0.2, 60403.0], [0.3, 60403.0], [0.4, 60405.0], [0.5, 60410.0], [0.6, 60410.0], [0.7, 60413.0], [0.8, 60415.0], [0.9, 60415.0], [1.0, 60416.0], [1.1, 60419.0], [1.2, 60419.0], [1.3, 60420.0], [1.4, 60422.0], [1.5, 60422.0], [1.6, 60428.0], [1.7, 60430.0], [1.8, 60430.0], [1.9, 60435.0], [2.0, 60437.0], [2.1, 60437.0], [2.2, 60438.0], [2.3, 60446.0], [2.4, 60446.0], [2.5, 60449.0], [2.6, 60450.0], [2.7, 60450.0], [2.8, 60450.0], [2.9, 60450.0], [3.0, 60450.0], [3.1, 60452.0], [3.2, 60459.0], [3.3, 60459.0], [3.4, 60461.0], [3.5, 60462.0], [3.6, 60462.0], [3.7, 60468.0], [3.8, 60473.0], [3.9, 60473.0], [4.0, 60474.0], [4.1, 60481.0], [4.2, 60481.0], [4.3, 60485.0], [4.4, 60486.0], [4.5, 60486.0], [4.6, 60486.0], [4.7, 60487.0], [4.8, 60487.0], [4.9, 60492.0], [5.0, 60494.0], [5.1, 60494.0], [5.2, 60497.0], [5.3, 60497.0], [5.4, 60497.0], [5.5, 60502.0], [5.6, 60502.0], [5.7, 60503.0], [5.8, 60507.0], [5.9, 60507.0], [6.0, 60507.0], [6.1, 60510.0], [6.2, 60510.0], [6.3, 60511.0], [6.4, 60512.0], [6.5, 60512.0], [6.6, 60513.0], [6.7, 60513.0], [6.8, 60513.0], [6.9, 60516.0], [7.0, 60526.0], [7.1, 60526.0], [7.2, 60526.0], [7.3, 60530.0], [7.4, 60530.0], [7.5, 60534.0], [7.6, 60534.0], [7.7, 60534.0], [7.8, 60538.0], [7.9, 60540.0], [8.0, 60540.0], [8.1, 60546.0], [8.2, 60548.0], [8.3, 60548.0], [8.4, 60550.0], [8.5, 60552.0], [8.6, 60552.0], [8.7, 60556.0], [8.8, 60557.0], [8.9, 60557.0], [9.0, 60557.0], [9.1, 60557.0], [9.2, 60557.0], [9.3, 60559.0], [9.4, 60570.0], [9.5, 60570.0], [9.6, 60571.0], [9.7, 60572.0], [9.8, 60572.0], [9.9, 60573.0], [10.0, 60573.0], [10.1, 60579.0], [10.2, 60581.0], [10.3, 60581.0], [10.4, 60584.0], [10.5, 60585.0], [10.6, 60585.0], [10.7, 60586.0], [10.8, 60592.0], [10.9, 60592.0], [11.0, 60593.0], [11.1, 60594.0], [11.2, 60594.0], [11.3, 60596.0], [11.4, 60597.0], [11.5, 60597.0], [11.6, 60601.0], [11.7, 60605.0], [11.8, 60605.0], [11.9, 60606.0], [12.0, 60615.0], [12.1, 60615.0], [12.2, 60616.0], [12.3, 60616.0], [12.4, 60616.0], [12.5, 60617.0], [12.6, 60619.0], [12.7, 60619.0], [12.8, 60620.0], [12.9, 60622.0], [13.0, 60622.0], [13.1, 60623.0], [13.2, 60625.0], [13.3, 60625.0], [13.4, 60629.0], [13.5, 60629.0], [13.6, 60629.0], [13.7, 60629.0], [13.8, 60631.0], [13.9, 60631.0], [14.0, 60635.0], [14.1, 60636.0], [14.2, 60636.0], [14.3, 60640.0], [14.4, 60641.0], [14.5, 60641.0], [14.6, 60643.0], [14.7, 60645.0], [14.8, 60645.0], [14.9, 60646.0], [15.0, 60646.0], [15.1, 60654.0], [15.2, 60654.0], [15.3, 60654.0], [15.4, 60656.0], [15.5, 60658.0], [15.6, 60658.0], [15.7, 60658.0], [15.8, 60663.0], [15.9, 60663.0], [16.0, 60667.0], [16.1, 60670.0], [16.2, 60670.0], [16.3, 60671.0], [16.4, 60674.0], [16.5, 60674.0], [16.6, 60678.0], [16.7, 60681.0], [16.8, 60681.0], [16.9, 60681.0], [17.0, 60682.0], [17.1, 60682.0], [17.2, 60683.0], [17.3, 60687.0], [17.4, 60687.0], [17.5, 60689.0], [17.6, 60690.0], [17.7, 60690.0], [17.8, 60690.0], [17.9, 60691.0], [18.0, 60691.0], [18.1, 60692.0], [18.2, 60696.0], [18.3, 60696.0], [18.4, 60700.0], [18.5, 60700.0], [18.6, 60700.0], [18.7, 60701.0], [18.8, 60701.0], [18.9, 60701.0], [19.0, 60703.0], [19.1, 60704.0], [19.2, 60704.0], [19.3, 60711.0], [19.4, 60714.0], [19.5, 60714.0], [19.6, 60715.0], [19.7, 60719.0], [19.8, 60719.0], [19.9, 60723.0], [20.0, 60723.0], [20.1, 60723.0], [20.2, 60724.0], [20.3, 60724.0], [20.4, 60728.0], [20.5, 60728.0], [20.6, 60728.0], [20.7, 60729.0], [20.8, 60729.0], [20.9, 60729.0], [21.0, 60730.0], [21.1, 60731.0], [21.2, 60731.0], [21.3, 60739.0], [21.4, 60743.0], [21.5, 60743.0], [21.6, 60744.0], [21.7, 60746.0], [21.8, 60746.0], [21.9, 60746.0], [22.0, 60748.0], [22.1, 60748.0], [22.2, 60750.0], [22.3, 60751.0], [22.4, 60751.0], [22.5, 60751.0], [22.6, 60754.0], [22.7, 60754.0], [22.8, 60758.0], [22.9, 60760.0], [23.0, 60760.0], [23.1, 60761.0], [23.2, 60762.0], [23.3, 60762.0], [23.4, 60764.0], [23.5, 60766.0], [23.6, 60766.0], [23.7, 60766.0], [23.8, 60767.0], [23.9, 60767.0], [24.0, 60767.0], [24.1, 60770.0], [24.2, 60770.0], [24.3, 60774.0], [24.4, 60777.0], [24.5, 60777.0], [24.6, 60784.0], [24.7, 60785.0], [24.8, 60785.0], [24.9, 60788.0], [25.0, 60788.0], [25.1, 60788.0], [25.2, 60791.0], [25.3, 60791.0], [25.4, 60792.0], [25.5, 60794.0], [25.6, 60794.0], [25.7, 60795.0], [25.8, 60799.0], [25.9, 60799.0], [26.0, 60802.0], [26.1, 60805.0], [26.2, 60805.0], [26.3, 60806.0], [26.4, 60808.0], [26.5, 60808.0], [26.6, 60811.0], [26.7, 60812.0], [26.8, 60812.0], [26.9, 60813.0], [27.0, 60814.0], [27.1, 60814.0], [27.2, 60815.0], [27.3, 60817.0], [27.4, 60817.0], [27.5, 60819.0], [27.6, 60820.0], [27.7, 60820.0], [27.8, 60822.0], [27.9, 60824.0], [28.0, 60824.0], [28.1, 60828.0], [28.2, 60831.0], [28.3, 60831.0], [28.4, 60832.0], [28.5, 60832.0], [28.6, 60832.0], [28.7, 60833.0], [28.8, 60835.0], [28.9, 60835.0], [29.0, 60840.0], [29.1, 60844.0], [29.2, 60844.0], [29.3, 60845.0], [29.4, 60846.0], [29.5, 60846.0], [29.6, 60850.0], [29.7, 60850.0], [29.8, 60850.0], [29.9, 60855.0], [30.0, 60855.0], [30.1, 60856.0], [30.2, 60856.0], [30.3, 60856.0], [30.4, 60862.0], [30.5, 60863.0], [30.6, 60863.0], [30.7, 60869.0], [30.8, 60871.0], [30.9, 60871.0], [31.0, 60875.0], [31.1, 60878.0], [31.2, 60878.0], [31.3, 60879.0], [31.4, 60879.0], [31.5, 60879.0], [31.6, 60881.0], [31.7, 60882.0], [31.8, 60882.0], [31.9, 60882.0], [32.0, 60883.0], [32.1, 60883.0], [32.2, 60884.0], [32.3, 60885.0], [32.4, 60885.0], [32.5, 60887.0], [32.6, 60887.0], [32.7, 60887.0], [32.8, 60887.0], [32.9, 60888.0], [33.0, 60888.0], [33.1, 60891.0], [33.2, 60892.0], [33.3, 60892.0], [33.4, 60893.0], [33.5, 60898.0], [33.6, 60898.0], [33.7, 60898.0], [33.8, 60899.0], [33.9, 60899.0], [34.0, 60901.0], [34.1, 60902.0], [34.2, 60902.0], [34.3, 60904.0], [34.4, 60906.0], [34.5, 60906.0], [34.6, 60911.0], [34.7, 60916.0], [34.8, 60916.0], [34.9, 60918.0], [35.0, 60918.0], [35.1, 60920.0], [35.2, 60921.0], [35.3, 60921.0], [35.4, 60921.0], [35.5, 60926.0], [35.6, 60926.0], [35.7, 60928.0], [35.8, 60930.0], [35.9, 60930.0], [36.0, 60934.0], [36.1, 60937.0], [36.2, 60937.0], [36.3, 60937.0], [36.4, 60941.0], [36.5, 60941.0], [36.6, 60943.0], [36.7, 60944.0], [36.8, 60944.0], [36.9, 60945.0], [37.0, 60948.0], [37.1, 60948.0], [37.2, 60950.0], [37.3, 60952.0], [37.4, 60952.0], [37.5, 60952.0], [37.6, 60953.0], [37.7, 60953.0], [37.8, 60953.0], [37.9, 60954.0], [38.0, 60954.0], [38.1, 60956.0], [38.2, 60957.0], [38.3, 60957.0], [38.4, 60959.0], [38.5, 60964.0], [38.6, 60964.0], [38.7, 60965.0], [38.8, 60965.0], [38.9, 60965.0], [39.0, 60967.0], [39.1, 60970.0], [39.2, 60970.0], [39.3, 60976.0], [39.4, 60980.0], [39.5, 60980.0], [39.6, 60980.0], [39.7, 60982.0], [39.8, 60982.0], [39.9, 60987.0], [40.0, 60987.0], [40.1, 60988.0], [40.2, 60988.0], [40.3, 60988.0], [40.4, 60991.0], [40.5, 60991.0], [40.6, 60991.0], [40.7, 60993.0], [40.8, 60995.0], [40.9, 60995.0], [41.0, 61000.0], [41.1, 61001.0], [41.2, 61001.0], [41.3, 61002.0], [41.4, 61007.0], [41.5, 61007.0], [41.6, 61009.0], [41.7, 61011.0], [41.8, 61011.0], [41.9, 61012.0], [42.0, 61012.0], [42.1, 61012.0], [42.2, 61015.0], [42.3, 61016.0], [42.4, 61016.0], [42.5, 61019.0], [42.6, 61019.0], [42.7, 61019.0], [42.8, 61021.0], [42.9, 61024.0], [43.0, 61024.0], [43.1, 61025.0], [43.2, 61026.0], [43.3, 61026.0], [43.4, 61026.0], [43.5, 61029.0], [43.6, 61029.0], [43.7, 61030.0], [43.8, 61032.0], [43.9, 61032.0], [44.0, 61034.0], [44.1, 61036.0], [44.2, 61036.0], [44.3, 61037.0], [44.4, 61040.0], [44.5, 61040.0], [44.6, 61040.0], [44.7, 61040.0], [44.8, 61040.0], [44.9, 61040.0], [45.0, 61048.0], [45.1, 61048.0], [45.2, 61052.0], [45.3, 61052.0], [45.4, 61053.0], [45.5, 61057.0], [45.6, 61057.0], [45.7, 61059.0], [45.8, 61063.0], [45.9, 61063.0], [46.0, 61067.0], [46.1, 61068.0], [46.2, 61068.0], [46.3, 61069.0], [46.4, 61073.0], [46.5, 61073.0], [46.6, 61076.0], [46.7, 61077.0], [46.8, 61077.0], [46.9, 61078.0], [47.0, 61078.0], [47.1, 61078.0], [47.2, 61081.0], [47.3, 61082.0], [47.4, 61082.0], [47.5, 61083.0], [47.6, 61084.0], [47.7, 61084.0], [47.8, 61085.0], [47.9, 61086.0], [48.0, 61086.0], [48.1, 61089.0], [48.2, 61090.0], [48.3, 61090.0], [48.4, 61095.0], [48.5, 61096.0], [48.6, 61096.0], [48.7, 61097.0], [48.8, 61097.0], [48.9, 61097.0], [49.0, 61097.0], [49.1, 61102.0], [49.2, 61102.0], [49.3, 61107.0], [49.4, 61110.0], [49.5, 61110.0], [49.6, 61111.0], [49.7, 61114.0], [49.8, 61114.0], [49.9, 61114.0], [50.0, 61117.0], [50.1, 61117.0], [50.2, 61118.0], [50.3, 61118.0], [50.4, 61120.0], [50.5, 61120.0], [50.6, 61120.0], [50.7, 61124.0], [50.8, 61130.0], [50.9, 61130.0], [51.0, 61132.0], [51.1, 61134.0], [51.2, 61134.0], [51.3, 61135.0], [51.4, 61140.0], [51.5, 61140.0], [51.6, 61141.0], [51.7, 61143.0], [51.8, 61143.0], [51.9, 61143.0], [52.0, 61145.0], [52.1, 61145.0], [52.2, 61147.0], [52.3, 61147.0], [52.4, 61147.0], [52.5, 61150.0], [52.6, 61153.0], [52.7, 61153.0], [52.8, 61154.0], [52.9, 61157.0], [53.0, 61157.0], [53.1, 61157.0], [53.2, 61158.0], [53.3, 61158.0], [53.4, 61162.0], [53.5, 61162.0], [53.6, 61162.0], [53.7, 61166.0], [53.8, 61167.0], [53.9, 61167.0], [54.0, 61167.0], [54.1, 61168.0], [54.2, 61168.0], [54.3, 61171.0], [54.4, 61172.0], [54.5, 61172.0], [54.6, 61172.0], [54.7, 61174.0], [54.8, 61174.0], [54.9, 61178.0], [55.0, 61183.0], [55.1, 61183.0], [55.2, 61184.0], [55.3, 61184.0], [55.4, 61184.0], [55.5, 61190.0], [55.6, 61190.0], [55.7, 61191.0], [55.8, 61196.0], [55.9, 61196.0], [56.0, 61199.0], [56.1, 61204.0], [56.2, 61204.0], [56.3, 61209.0], [56.4, 61210.0], [56.5, 61210.0], [56.6, 61213.0], [56.7, 61213.0], [56.8, 61213.0], [56.9, 61214.0], [57.0, 61216.0], [57.1, 61216.0], [57.2, 61218.0], [57.3, 61218.0], [57.4, 61218.0], [57.5, 61218.0], [57.6, 61220.0], [57.7, 61220.0], [57.8, 61222.0], [57.9, 61227.0], [58.0, 61227.0], [58.1, 61227.0], [58.2, 61228.0], [58.3, 61228.0], [58.4, 61228.0], [58.5, 61229.0], [58.6, 61229.0], [58.7, 61229.0], [58.8, 61230.0], [58.9, 61230.0], [59.0, 61234.0], [59.1, 61236.0], [59.2, 61236.0], [59.3, 61240.0], [59.4, 61241.0], [59.5, 61241.0], [59.6, 61243.0], [59.7, 61244.0], [59.8, 61244.0], [59.9, 61246.0], [60.0, 61249.0], [60.1, 61249.0], [60.2, 61250.0], [60.3, 61250.0], [60.4, 61251.0], [60.5, 61256.0], [60.6, 61256.0], [60.7, 61257.0], [60.8, 61259.0], [60.9, 61259.0], [61.0, 61265.0], [61.1, 61265.0], [61.2, 61265.0], [61.3, 61265.0], [61.4, 61269.0], [61.5, 61269.0], [61.6, 61271.0], [61.7, 61273.0], [61.8, 61273.0], [61.9, 61274.0], [62.0, 61277.0], [62.1, 61277.0], [62.2, 61278.0], [62.3, 61280.0], [62.4, 61280.0], [62.5, 61281.0], [62.6, 61284.0], [62.7, 61284.0], [62.8, 61284.0], [62.9, 61286.0], [63.0, 61286.0], [63.1, 61287.0], [63.2, 61289.0], [63.3, 61289.0], [63.4, 61291.0], [63.5, 61293.0], [63.6, 61293.0], [63.7, 61295.0], [63.8, 61297.0], [63.9, 61297.0], [64.0, 61297.0], [64.1, 61297.0], [64.2, 61297.0], [64.3, 61301.0], [64.4, 61305.0], [64.5, 61305.0], [64.6, 61305.0], [64.7, 61311.0], [64.8, 61311.0], [64.9, 61315.0], [65.0, 61316.0], [65.1, 61316.0], [65.2, 61316.0], [65.3, 61316.0], [65.4, 61317.0], [65.5, 61322.0], [65.6, 61322.0], [65.7, 61323.0], [65.8, 61323.0], [65.9, 61323.0], [66.0, 61327.0], [66.1, 61330.0], [66.2, 61330.0], [66.3, 61332.0], [66.4, 61332.0], [66.5, 61332.0], [66.6, 61336.0], [66.7, 61337.0], [66.8, 61337.0], [66.9, 61341.0], [67.0, 61341.0], [67.1, 61341.0], [67.2, 61343.0], [67.3, 61345.0], [67.4, 61345.0], [67.5, 61347.0], [67.6, 61349.0], [67.7, 61349.0], [67.8, 61349.0], [67.9, 61350.0], [68.0, 61350.0], [68.1, 61352.0], [68.2, 61353.0], [68.3, 61353.0], [68.4, 61355.0], [68.5, 61360.0], [68.6, 61360.0], [68.7, 61360.0], [68.8, 61361.0], [68.9, 61361.0], [69.0, 61365.0], [69.1, 61366.0], [69.2, 61366.0], [69.3, 61371.0], [69.4, 61371.0], [69.5, 61371.0], [69.6, 61373.0], [69.7, 61375.0], [69.8, 61375.0], [69.9, 61378.0], [70.0, 61383.0], [70.1, 61383.0], [70.2, 61384.0], [70.3, 61384.0], [70.4, 61388.0], [70.5, 61389.0], [70.6, 61389.0], [70.7, 61390.0], [70.8, 61392.0], [70.9, 61392.0], [71.0, 61397.0], [71.1, 61398.0], [71.2, 61398.0], [71.3, 61398.0], [71.4, 61405.0], [71.5, 61405.0], [71.6, 61405.0], [71.7, 61406.0], [71.8, 61406.0], [71.9, 61407.0], [72.0, 61412.0], [72.1, 61412.0], [72.2, 61413.0], [72.3, 61413.0], [72.4, 61413.0], [72.5, 61416.0], [72.6, 61416.0], [72.7, 61416.0], [72.8, 61420.0], [72.9, 61421.0], [73.0, 61421.0], [73.1, 61425.0], [73.2, 61425.0], [73.3, 61425.0], [73.4, 61425.0], [73.5, 61430.0], [73.6, 61430.0], [73.7, 61431.0], [73.8, 61434.0], [73.9, 61434.0], [74.0, 61436.0], [74.1, 61436.0], [74.2, 61436.0], [74.3, 61442.0], [74.4, 61443.0], [74.5, 61443.0], [74.6, 61444.0], [74.7, 61447.0], [74.8, 61447.0], [74.9, 61447.0], [75.0, 61448.0], [75.1, 61448.0], [75.2, 61449.0], [75.3, 61449.0], [75.4, 61449.0], [75.5, 61449.0], [75.6, 61449.0], [75.7, 61449.0], [75.8, 61454.0], [75.9, 61454.0], [76.0, 61454.0], [76.1, 61454.0], [76.2, 61454.0], [76.3, 61464.0], [76.4, 61469.0], [76.5, 61469.0], [76.6, 61472.0], [76.7, 61472.0], [76.8, 61472.0], [76.9, 61473.0], [77.0, 61473.0], [77.1, 61473.0], [77.2, 61474.0], [77.3, 61475.0], [77.4, 61475.0], [77.5, 61476.0], [77.6, 61478.0], [77.7, 61478.0], [77.8, 61479.0], [77.9, 61479.0], [78.0, 61479.0], [78.1, 61482.0], [78.2, 61484.0], [78.3, 61484.0], [78.4, 61486.0], [78.5, 61488.0], [78.6, 61488.0], [78.7, 61492.0], [78.8, 61492.0], [78.9, 61492.0], [79.0, 61493.0], [79.1, 61494.0], [79.2, 61494.0], [79.3, 61501.0], [79.4, 61504.0], [79.5, 61504.0], [79.6, 61507.0], [79.7, 61510.0], [79.8, 61510.0], [79.9, 61514.0], [80.0, 61514.0], [80.1, 61514.0], [80.2, 61516.0], [80.3, 61516.0], [80.4, 61517.0], [80.5, 61520.0], [80.6, 61520.0], [80.7, 61520.0], [80.8, 61522.0], [80.9, 61522.0], [81.0, 61530.0], [81.1, 61530.0], [81.2, 61530.0], [81.3, 61532.0], [81.4, 61537.0], [81.5, 61537.0], [81.6, 61537.0], [81.7, 61538.0], [81.8, 61538.0], [81.9, 61539.0], [82.0, 61543.0], [82.1, 61543.0], [82.2, 61545.0], [82.3, 61545.0], [82.4, 61545.0], [82.5, 61546.0], [82.6, 61549.0], [82.7, 61549.0], [82.8, 61552.0], [82.9, 61553.0], [83.0, 61553.0], [83.1, 61553.0], [83.2, 61557.0], [83.3, 61557.0], [83.4, 61557.0], [83.5, 61558.0], [83.6, 61558.0], [83.7, 61558.0], [83.8, 61562.0], [83.9, 61562.0], [84.0, 61564.0], [84.1, 61565.0], [84.2, 61565.0], [84.3, 61567.0], [84.4, 61568.0], [84.5, 61568.0], [84.6, 61569.0], [84.7, 61576.0], [84.8, 61576.0], [84.9, 61580.0], [85.0, 61580.0], [85.1, 61580.0], [85.2, 61580.0], [85.3, 61580.0], [85.4, 61582.0], [85.5, 61586.0], [85.6, 61586.0], [85.7, 61587.0], [85.8, 61590.0], [85.9, 61590.0], [86.0, 61595.0], [86.1, 61596.0], [86.2, 61596.0], [86.3, 61600.0], [86.4, 61601.0], [86.5, 61601.0], [86.6, 61603.0], [86.7, 61604.0], [86.8, 61604.0], [86.9, 61606.0], [87.0, 61610.0], [87.1, 61610.0], [87.2, 61610.0], [87.3, 61610.0], [87.4, 61610.0], [87.5, 61612.0], [87.6, 61614.0], [87.7, 61614.0], [87.8, 61614.0], [87.9, 61617.0], [88.0, 61617.0], [88.1, 61618.0], [88.2, 61619.0], [88.3, 61619.0], [88.4, 61621.0], [88.5, 61624.0], [88.6, 61624.0], [88.7, 61624.0], [88.8, 61625.0], [88.9, 61625.0], [89.0, 61626.0], [89.1, 61632.0], [89.2, 61632.0], [89.3, 61634.0], [89.4, 61636.0], [89.5, 61636.0], [89.6, 61637.0], [89.7, 61638.0], [89.8, 61638.0], [89.9, 61641.0], [90.0, 61641.0], [90.1, 61645.0], [90.2, 61647.0], [90.3, 61647.0], [90.4, 61648.0], [90.5, 61651.0], [90.6, 61651.0], [90.7, 61653.0], [90.8, 61659.0], [90.9, 61659.0], [91.0, 61660.0], [91.1, 61662.0], [91.2, 61662.0], [91.3, 61667.0], [91.4, 61670.0], [91.5, 61670.0], [91.6, 61672.0], [91.7, 61673.0], [91.8, 61673.0], [91.9, 61674.0], [92.0, 61675.0], [92.1, 61675.0], [92.2, 61677.0], [92.3, 61679.0], [92.4, 61679.0], [92.5, 61680.0], [92.6, 61681.0], [92.7, 61681.0], [92.8, 61683.0], [92.9, 61684.0], [93.0, 61684.0], [93.1, 61685.0], [93.2, 61685.0], [93.3, 61685.0], [93.4, 61686.0], [93.5, 61689.0], [93.6, 61689.0], [93.7, 61690.0], [93.8, 61690.0], [93.9, 61690.0], [94.0, 61694.0], [94.1, 61697.0], [94.2, 61697.0], [94.3, 61699.0], [94.4, 61700.0], [94.5, 61700.0], [94.6, 61702.0], [94.7, 61708.0], [94.8, 61708.0], [94.9, 61711.0], [95.0, 61711.0], [95.1, 61712.0], [95.2, 61712.0], [95.3, 61712.0], [95.4, 61717.0], [95.5, 61718.0], [95.6, 61718.0], [95.7, 61727.0], [95.8, 61736.0], [95.9, 61736.0], [96.0, 61745.0], [96.1, 61749.0], [96.2, 61749.0], [96.3, 61756.0], [96.4, 61756.0], [96.5, 61756.0], [96.6, 61774.0], [96.7, 61778.0], [96.8, 61778.0], [96.9, 61784.0], [97.0, 61784.0], [97.1, 61784.0], [97.2, 61794.0], [97.3, 61802.0], [97.4, 61802.0], [97.5, 61813.0], [97.6, 61817.0], [97.7, 61817.0], [97.8, 61822.0], [97.9, 61840.0], [98.0, 61840.0], [98.1, 61844.0], [98.2, 61850.0], [98.3, 61850.0], [98.4, 61859.0], [98.5, 61869.0], [98.6, 61869.0], [98.7, 61880.0], [98.8, 61888.0], [98.9, 61888.0], [99.0, 61910.0], [99.1, 61916.0], [99.2, 61916.0], [99.3, 61923.0], [99.4, 61952.0], [99.5, 61952.0], [99.6, 61976.0], [99.7, 61980.0], [99.8, 61980.0], [99.9, 62041.0], [100.0, 62041.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 59736.0], [0.1, 59736.0], [0.2, 59736.0], [0.3, 59736.0], [0.4, 59736.0], [0.5, 59736.0], [0.6, 59736.0], [0.7, 59737.0], [0.8, 59737.0], [0.9, 59737.0], [1.0, 59738.0], [1.1, 59738.0], [1.2, 59738.0], [1.3, 59738.0], [1.4, 59738.0], [1.5, 59738.0], [1.6, 59739.0], [1.7, 59739.0], [1.8, 59739.0], [1.9, 59747.0], [2.0, 59747.0], [2.1, 59747.0], [2.2, 59748.0], [2.3, 59748.0], [2.4, 59748.0], [2.5, 59750.0], [2.6, 59750.0], [2.7, 59750.0], [2.8, 59752.0], [2.9, 59752.0], [3.0, 59752.0], [3.1, 59755.0], [3.2, 59755.0], [3.3, 59755.0], [3.4, 59757.0], [3.5, 59757.0], [3.6, 59757.0], [3.7, 59760.0], [3.8, 59760.0], [3.9, 59760.0], [4.0, 59764.0], [4.1, 59764.0], [4.2, 59764.0], [4.3, 59765.0], [4.4, 59765.0], [4.5, 59765.0], [4.6, 59766.0], [4.7, 59766.0], [4.8, 59766.0], [4.9, 59769.0], [5.0, 59769.0], [5.1, 59769.0], [5.2, 59772.0], [5.3, 59772.0], [5.4, 59772.0], [5.5, 59772.0], [5.6, 59772.0], [5.7, 59772.0], [5.8, 59773.0], [5.9, 59773.0], [6.0, 59773.0], [6.1, 59776.0], [6.2, 59776.0], [6.3, 59776.0], [6.4, 59781.0], [6.5, 59781.0], [6.6, 59781.0], [6.7, 59782.0], [6.8, 59782.0], [6.9, 59782.0], [7.0, 59788.0], [7.1, 59788.0], [7.2, 59788.0], [7.3, 59828.0], [7.4, 59828.0], [7.5, 59828.0], [7.6, 59830.0], [7.7, 59830.0], [7.8, 59830.0], [7.9, 59831.0], [8.0, 59831.0], [8.1, 59831.0], [8.2, 59834.0], [8.3, 59834.0], [8.4, 59834.0], [8.5, 59835.0], [8.6, 59835.0], [8.7, 59835.0], [8.8, 59836.0], [8.9, 59836.0], [9.0, 59836.0], [9.1, 59839.0], [9.2, 59839.0], [9.3, 59839.0], [9.4, 59839.0], [9.5, 59839.0], [9.6, 59839.0], [9.7, 59843.0], [9.8, 59843.0], [9.9, 59843.0], [10.0, 59847.0], [10.1, 59847.0], [10.2, 59847.0], [10.3, 59847.0], [10.4, 59848.0], [10.5, 59848.0], [10.6, 59848.0], [10.7, 59852.0], [10.8, 59852.0], [10.9, 59852.0], [11.0, 59855.0], [11.1, 59855.0], [11.2, 59855.0], [11.3, 59855.0], [11.4, 59855.0], [11.5, 59855.0], [11.6, 59858.0], [11.7, 59858.0], [11.8, 59858.0], [11.9, 59860.0], [12.0, 59860.0], [12.1, 59860.0], [12.2, 59870.0], [12.3, 59870.0], [12.4, 59870.0], [12.5, 59871.0], [12.6, 59871.0], [12.7, 59871.0], [12.8, 59871.0], [12.9, 59871.0], [13.0, 59871.0], [13.1, 59875.0], [13.2, 59875.0], [13.3, 59875.0], [13.4, 59875.0], [13.5, 59875.0], [13.6, 59875.0], [13.7, 59878.0], [13.8, 59878.0], [13.9, 59878.0], [14.0, 59882.0], [14.1, 59882.0], [14.2, 59882.0], [14.3, 59885.0], [14.4, 59885.0], [14.5, 59885.0], [14.6, 59886.0], [14.7, 59886.0], [14.8, 59886.0], [14.9, 59886.0], [15.0, 59886.0], [15.1, 59886.0], [15.2, 59887.0], [15.3, 59887.0], [15.4, 59887.0], [15.5, 59913.0], [15.6, 59913.0], [15.7, 59913.0], [15.8, 59925.0], [15.9, 59925.0], [16.0, 59925.0], [16.1, 59930.0], [16.2, 59930.0], [16.3, 59930.0], [16.4, 59933.0], [16.5, 59933.0], [16.6, 59933.0], [16.7, 59934.0], [16.8, 59934.0], [16.9, 59934.0], [17.0, 59935.0], [17.1, 59935.0], [17.2, 59935.0], [17.3, 59937.0], [17.4, 59937.0], [17.5, 59937.0], [17.6, 59937.0], [17.7, 59937.0], [17.8, 59937.0], [17.9, 59937.0], [18.0, 59937.0], [18.1, 59937.0], [18.2, 59938.0], [18.3, 59938.0], [18.4, 59938.0], [18.5, 59946.0], [18.6, 59946.0], [18.7, 59946.0], [18.8, 59947.0], [18.9, 59947.0], [19.0, 59947.0], [19.1, 59948.0], [19.2, 59948.0], [19.3, 59948.0], [19.4, 59951.0], [19.5, 59951.0], [19.6, 59951.0], [19.7, 59955.0], [19.8, 59955.0], [19.9, 59955.0], [20.0, 59955.0], [20.1, 59957.0], [20.2, 59957.0], [20.3, 59957.0], [20.4, 59959.0], [20.5, 59959.0], [20.6, 59959.0], [20.7, 59962.0], [20.8, 59962.0], [20.9, 59962.0], [21.0, 59962.0], [21.1, 59962.0], [21.2, 59962.0], [21.3, 59967.0], [21.4, 59967.0], [21.5, 59967.0], [21.6, 59968.0], [21.7, 59968.0], [21.8, 59968.0], [21.9, 59970.0], [22.0, 59970.0], [22.1, 59970.0], [22.2, 59974.0], [22.3, 59974.0], [22.4, 59974.0], [22.5, 59979.0], [22.6, 59979.0], [22.7, 59979.0], [22.8, 59980.0], [22.9, 59980.0], [23.0, 59980.0], [23.1, 59982.0], [23.2, 59982.0], [23.3, 59982.0], [23.4, 59982.0], [23.5, 59982.0], [23.6, 59982.0], [23.7, 59984.0], [23.8, 59984.0], [23.9, 59984.0], [24.0, 59984.0], [24.1, 59984.0], [24.2, 59984.0], [24.3, 59986.0], [24.4, 59986.0], [24.5, 59986.0], [24.6, 59994.0], [24.7, 59994.0], [24.8, 59994.0], [24.9, 60012.0], [25.0, 60012.0], [25.1, 60012.0], [25.2, 60022.0], [25.3, 60022.0], [25.4, 60022.0], [25.5, 60022.0], [25.6, 60022.0], [25.7, 60022.0], [25.8, 60025.0], [25.9, 60025.0], [26.0, 60025.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60029.0], [26.5, 60029.0], [26.6, 60029.0], [26.7, 60032.0], [26.8, 60032.0], [26.9, 60032.0], [27.0, 60032.0], [27.1, 60032.0], [27.2, 60032.0], [27.3, 60033.0], [27.4, 60033.0], [27.5, 60033.0], [27.6, 60034.0], [27.7, 60034.0], [27.8, 60034.0], [27.9, 60037.0], [28.0, 60037.0], [28.1, 60037.0], [28.2, 60043.0], [28.3, 60043.0], [28.4, 60043.0], [28.5, 60043.0], [28.6, 60043.0], [28.7, 60043.0], [28.8, 60044.0], [28.9, 60044.0], [29.0, 60044.0], [29.1, 60050.0], [29.2, 60050.0], [29.3, 60050.0], [29.4, 60054.0], [29.5, 60054.0], [29.6, 60054.0], [29.7, 60056.0], [29.8, 60056.0], [29.9, 60056.0], [30.0, 60056.0], [30.1, 60057.0], [30.2, 60057.0], [30.3, 60057.0], [30.4, 60061.0], [30.5, 60061.0], [30.6, 60061.0], [30.7, 60061.0], [30.8, 60061.0], [30.9, 60061.0], [31.0, 60063.0], [31.1, 60063.0], [31.2, 60063.0], [31.3, 60064.0], [31.4, 60064.0], [31.5, 60064.0], [31.6, 60065.0], [31.7, 60065.0], [31.8, 60065.0], [31.9, 60066.0], [32.0, 60066.0], [32.1, 60066.0], [32.2, 60069.0], [32.3, 60069.0], [32.4, 60069.0], [32.5, 60078.0], [32.6, 60078.0], [32.7, 60078.0], [32.8, 60080.0], [32.9, 60080.0], [33.0, 60080.0], [33.1, 60081.0], [33.2, 60081.0], [33.3, 60081.0], [33.4, 60082.0], [33.5, 60082.0], [33.6, 60082.0], [33.7, 60083.0], [33.8, 60083.0], [33.9, 60083.0], [34.0, 60084.0], [34.1, 60084.0], [34.2, 60084.0], [34.3, 60085.0], [34.4, 60085.0], [34.5, 60085.0], [34.6, 60093.0], [34.7, 60093.0], [34.8, 60093.0], [34.9, 60111.0], [35.0, 60111.0], [35.1, 60111.0], [35.2, 60121.0], [35.3, 60121.0], [35.4, 60121.0], [35.5, 60123.0], [35.6, 60123.0], [35.7, 60123.0], [35.8, 60124.0], [35.9, 60124.0], [36.0, 60124.0], [36.1, 60125.0], [36.2, 60125.0], [36.3, 60125.0], [36.4, 60131.0], [36.5, 60131.0], [36.6, 60131.0], [36.7, 60133.0], [36.8, 60133.0], [36.9, 60133.0], [37.0, 60133.0], [37.1, 60133.0], [37.2, 60133.0], [37.3, 60133.0], [37.4, 60133.0], [37.5, 60133.0], [37.6, 60136.0], [37.7, 60136.0], [37.8, 60136.0], [37.9, 60143.0], [38.0, 60143.0], [38.1, 60143.0], [38.2, 60144.0], [38.3, 60144.0], [38.4, 60144.0], [38.5, 60146.0], [38.6, 60146.0], [38.7, 60146.0], [38.8, 60147.0], [38.9, 60147.0], [39.0, 60147.0], [39.1, 60148.0], [39.2, 60148.0], [39.3, 60148.0], [39.4, 60150.0], [39.5, 60150.0], [39.6, 60150.0], [39.7, 60154.0], [39.8, 60154.0], [39.9, 60154.0], [40.0, 60154.0], [40.1, 60154.0], [40.2, 60154.0], [40.3, 60154.0], [40.4, 60159.0], [40.5, 60159.0], [40.6, 60159.0], [40.7, 60161.0], [40.8, 60161.0], [40.9, 60161.0], [41.0, 60162.0], [41.1, 60162.0], [41.2, 60162.0], [41.3, 60163.0], [41.4, 60163.0], [41.5, 60163.0], [41.6, 60165.0], [41.7, 60165.0], [41.8, 60165.0], [41.9, 60167.0], [42.0, 60167.0], [42.1, 60167.0], [42.2, 60169.0], [42.3, 60169.0], [42.4, 60169.0], [42.5, 60172.0], [42.6, 60172.0], [42.7, 60172.0], [42.8, 60173.0], [42.9, 60173.0], [43.0, 60173.0], [43.1, 60174.0], [43.2, 60174.0], [43.3, 60174.0], [43.4, 60179.0], [43.5, 60179.0], [43.6, 60179.0], [43.7, 60182.0], [43.8, 60182.0], [43.9, 60182.0], [44.0, 60184.0], [44.1, 60184.0], [44.2, 60184.0], [44.3, 60184.0], [44.4, 60184.0], [44.5, 60184.0], [44.6, 60192.0], [44.7, 60192.0], [44.8, 60192.0], [44.9, 60210.0], [45.0, 60210.0], [45.1, 60210.0], [45.2, 60220.0], [45.3, 60220.0], [45.4, 60220.0], [45.5, 60222.0], [45.6, 60222.0], [45.7, 60222.0], [45.8, 60224.0], [45.9, 60224.0], [46.0, 60224.0], [46.1, 60227.0], [46.2, 60227.0], [46.3, 60227.0], [46.4, 60230.0], [46.5, 60230.0], [46.6, 60230.0], [46.7, 60230.0], [46.8, 60230.0], [46.9, 60230.0], [47.0, 60233.0], [47.1, 60233.0], [47.2, 60233.0], [47.3, 60233.0], [47.4, 60233.0], [47.5, 60233.0], [47.6, 60233.0], [47.7, 60233.0], [47.8, 60233.0], [47.9, 60235.0], [48.0, 60235.0], [48.1, 60235.0], [48.2, 60240.0], [48.3, 60240.0], [48.4, 60240.0], [48.5, 60241.0], [48.6, 60241.0], [48.7, 60241.0], [48.8, 60243.0], [48.9, 60243.0], [49.0, 60243.0], [49.1, 60249.0], [49.2, 60249.0], [49.3, 60249.0], [49.4, 60251.0], [49.5, 60251.0], [49.6, 60251.0], [49.7, 60254.0], [49.8, 60254.0], [49.9, 60254.0], [50.0, 60254.0], [50.1, 60255.0], [50.2, 60255.0], [50.3, 60255.0], [50.4, 60262.0], [50.5, 60262.0], [50.6, 60262.0], [50.7, 60263.0], [50.8, 60263.0], [50.9, 60263.0], [51.0, 60264.0], [51.1, 60264.0], [51.2, 60264.0], [51.3, 60266.0], [51.4, 60266.0], [51.5, 60266.0], [51.6, 60267.0], [51.7, 60267.0], [51.8, 60267.0], [51.9, 60268.0], [52.0, 60268.0], [52.1, 60268.0], [52.2, 60271.0], [52.3, 60271.0], [52.4, 60271.0], [52.5, 60273.0], [52.6, 60273.0], [52.7, 60273.0], [52.8, 60276.0], [52.9, 60276.0], [53.0, 60276.0], [53.1, 60277.0], [53.2, 60277.0], [53.3, 60277.0], [53.4, 60278.0], [53.5, 60278.0], [53.6, 60278.0], [53.7, 60282.0], [53.8, 60282.0], [53.9, 60282.0], [54.0, 60282.0], [54.1, 60282.0], [54.2, 60282.0], [54.3, 60283.0], [54.4, 60283.0], [54.5, 60283.0], [54.6, 60291.0], [54.7, 60291.0], [54.8, 60291.0], [54.9, 60309.0], [55.0, 60309.0], [55.1, 60309.0], [55.2, 60319.0], [55.3, 60319.0], [55.4, 60319.0], [55.5, 60321.0], [55.6, 60321.0], [55.7, 60321.0], [55.8, 60324.0], [55.9, 60324.0], [56.0, 60324.0], [56.1, 60325.0], [56.2, 60325.0], [56.3, 60325.0], [56.4, 60326.0], [56.5, 60326.0], [56.6, 60326.0], [56.7, 60328.0], [56.8, 60328.0], [56.9, 60328.0], [57.0, 60329.0], [57.1, 60329.0], [57.2, 60329.0], [57.3, 60331.0], [57.4, 60331.0], [57.5, 60331.0], [57.6, 60332.0], [57.7, 60332.0], [57.8, 60332.0], [57.9, 60341.0], [58.0, 60341.0], [58.1, 60341.0], [58.2, 60341.0], [58.3, 60341.0], [58.4, 60341.0], [58.5, 60342.0], [58.6, 60342.0], [58.7, 60342.0], [58.8, 60345.0], [58.9, 60345.0], [59.0, 60345.0], [59.1, 60349.0], [59.2, 60349.0], [59.3, 60349.0], [59.4, 60351.0], [59.5, 60351.0], [59.6, 60351.0], [59.7, 60353.0], [59.8, 60353.0], [59.9, 60353.0], [60.0, 60353.0], [60.1, 60355.0], [60.2, 60355.0], [60.3, 60355.0], [60.4, 60358.0], [60.5, 60358.0], [60.6, 60358.0], [60.7, 60360.0], [60.8, 60360.0], [60.9, 60360.0], [61.0, 60361.0], [61.1, 60361.0], [61.2, 60361.0], [61.3, 60363.0], [61.4, 60363.0], [61.5, 60363.0], [61.6, 60367.0], [61.7, 60367.0], [61.8, 60367.0], [61.9, 60367.0], [62.0, 60367.0], [62.1, 60367.0], [62.2, 60370.0], [62.3, 60370.0], [62.4, 60370.0], [62.5, 60371.0], [62.6, 60371.0], [62.7, 60371.0], [62.8, 60372.0], [62.9, 60372.0], [63.0, 60372.0], [63.1, 60373.0], [63.2, 60373.0], [63.3, 60373.0], [63.4, 60376.0], [63.5, 60376.0], [63.6, 60376.0], [63.7, 60379.0], [63.8, 60379.0], [63.9, 60379.0], [64.0, 60380.0], [64.1, 60380.0], [64.2, 60380.0], [64.3, 60382.0], [64.4, 60382.0], [64.5, 60382.0], [64.6, 60390.0], [64.7, 60390.0], [64.8, 60390.0], [64.9, 60408.0], [65.0, 60408.0], [65.1, 60408.0], [65.2, 60418.0], [65.3, 60418.0], [65.4, 60418.0], [65.5, 60420.0], [65.6, 60420.0], [65.7, 60420.0], [65.8, 60422.0], [65.9, 60422.0], [66.0, 60422.0], [66.1, 60424.0], [66.2, 60424.0], [66.3, 60424.0], [66.4, 60425.0], [66.5, 60425.0], [66.6, 60425.0], [66.7, 60428.0], [66.8, 60428.0], [66.9, 60428.0], [67.0, 60429.0], [67.1, 60429.0], [67.2, 60429.0], [67.3, 60430.0], [67.4, 60430.0], [67.5, 60430.0], [67.6, 60432.0], [67.7, 60432.0], [67.8, 60432.0], [67.9, 60435.0], [68.0, 60435.0], [68.1, 60435.0], [68.2, 60437.0], [68.3, 60437.0], [68.4, 60437.0], [68.5, 60441.0], [68.6, 60441.0], [68.7, 60441.0], [68.8, 60441.0], [68.9, 60441.0], [69.0, 60441.0], [69.1, 60442.0], [69.2, 60442.0], [69.3, 60442.0], [69.4, 60450.0], [69.5, 60450.0], [69.6, 60450.0], [69.7, 60452.0], [69.8, 60452.0], [69.9, 60452.0], [70.0, 60452.0], [70.1, 60452.0], [70.2, 60452.0], [70.3, 60452.0], [70.4, 60452.0], [70.5, 60452.0], [70.6, 60452.0], [70.7, 60457.0], [70.8, 60457.0], [70.9, 60457.0], [71.0, 60459.0], [71.1, 60459.0], [71.2, 60459.0], [71.3, 60461.0], [71.4, 60461.0], [71.5, 60461.0], [71.6, 60462.0], [71.7, 60462.0], [71.8, 60462.0], [71.9, 60466.0], [72.0, 60466.0], [72.1, 60466.0], [72.2, 60469.0], [72.3, 60469.0], [72.4, 60469.0], [72.5, 60470.0], [72.6, 60470.0], [72.7, 60470.0], [72.8, 60470.0], [72.9, 60470.0], [73.0, 60470.0], [73.1, 60475.0], [73.2, 60475.0], [73.3, 60475.0], [73.4, 60477.0], [73.5, 60477.0], [73.6, 60477.0], [73.7, 60479.0], [73.8, 60479.0], [73.9, 60479.0], [74.0, 60480.0], [74.1, 60480.0], [74.2, 60480.0], [74.3, 60481.0], [74.4, 60481.0], [74.5, 60481.0], [74.6, 60489.0], [74.7, 60489.0], [74.8, 60489.0], [74.9, 60507.0], [75.0, 60507.0], [75.1, 60507.0], [75.2, 60517.0], [75.3, 60517.0], [75.4, 60517.0], [75.5, 60519.0], [75.6, 60519.0], [75.7, 60519.0], [75.8, 60519.0], [75.9, 60519.0], [76.0, 60519.0], [76.1, 60524.0], [76.2, 60524.0], [76.3, 60524.0], [76.4, 60524.0], [76.5, 60524.0], [76.6, 60524.0], [76.7, 60526.0], [76.8, 60526.0], [76.9, 60526.0], [77.0, 60527.0], [77.1, 60527.0], [77.2, 60527.0], [77.3, 60529.0], [77.4, 60529.0], [77.5, 60529.0], [77.6, 60529.0], [77.7, 60529.0], [77.8, 60529.0], [77.9, 60533.0], [78.0, 60533.0], [78.1, 60533.0], [78.2, 60536.0], [78.3, 60536.0], [78.4, 60536.0], [78.5, 60540.0], [78.6, 60540.0], [78.7, 60540.0], [78.8, 60544.0], [78.9, 60544.0], [79.0, 60544.0], [79.1, 60545.0], [79.2, 60545.0], [79.3, 60545.0], [79.4, 60546.0], [79.5, 60546.0], [79.6, 60546.0], [79.7, 60550.0], [79.8, 60550.0], [79.9, 60550.0], [80.0, 60551.0], [80.1, 60551.0], [80.2, 60551.0], [80.3, 60551.0], [80.4, 60553.0], [80.5, 60553.0], [80.6, 60553.0], [80.7, 60554.0], [80.8, 60554.0], [80.9, 60554.0], [81.0, 60556.0], [81.1, 60556.0], [81.2, 60556.0], [81.3, 60559.0], [81.4, 60559.0], [81.5, 60559.0], [81.6, 60561.0], [81.7, 60561.0], [81.8, 60561.0], [81.9, 60563.0], [82.0, 60563.0], [82.1, 60563.0], [82.2, 60564.0], [82.3, 60564.0], [82.4, 60564.0], [82.5, 60565.0], [82.6, 60565.0], [82.7, 60565.0], [82.8, 60565.0], [82.9, 60565.0], [83.0, 60565.0], [83.1, 60570.0], [83.2, 60570.0], [83.3, 60570.0], [83.4, 60572.0], [83.5, 60572.0], [83.6, 60572.0], [83.7, 60578.0], [83.8, 60578.0], [83.9, 60578.0], [84.0, 60578.0], [84.1, 60578.0], [84.2, 60578.0], [84.3, 60580.0], [84.4, 60580.0], [84.5, 60580.0], [84.6, 60588.0], [84.7, 60588.0], [84.8, 60588.0], [84.9, 60606.0], [85.0, 60606.0], [85.1, 60606.0], [85.2, 60611.0], [85.3, 60611.0], [85.4, 60611.0], [85.5, 60616.0], [85.6, 60616.0], [85.7, 60616.0], [85.8, 60618.0], [85.9, 60618.0], [86.0, 60618.0], [86.1, 60621.0], [86.2, 60621.0], [86.3, 60621.0], [86.4, 60625.0], [86.5, 60625.0], [86.6, 60625.0], [86.7, 60626.0], [86.8, 60626.0], [86.9, 60626.0], [87.0, 60628.0], [87.1, 60628.0], [87.2, 60628.0], [87.3, 60628.0], [87.4, 60628.0], [87.5, 60628.0], [87.6, 60629.0], [87.7, 60629.0], [87.8, 60629.0], [87.9, 60638.0], [88.0, 60638.0], [88.1, 60638.0], [88.2, 60638.0], [88.3, 60638.0], [88.4, 60638.0], [88.5, 60639.0], [88.6, 60639.0], [88.7, 60639.0], [88.8, 60641.0], [88.9, 60641.0], [89.0, 60641.0], [89.1, 60642.0], [89.2, 60642.0], [89.3, 60642.0], [89.4, 60647.0], [89.5, 60647.0], [89.6, 60647.0], [89.7, 60650.0], [89.8, 60650.0], [89.9, 60650.0], [90.0, 60651.0], [90.1, 60651.0], [90.2, 60651.0], [90.3, 60651.0], [90.4, 60656.0], [90.5, 60656.0], [90.6, 60656.0], [90.7, 60658.0], [90.8, 60658.0], [90.9, 60658.0], [91.0, 60658.0], [91.1, 60658.0], [91.2, 60658.0], [91.3, 60658.0], [91.4, 60658.0], [91.5, 60658.0], [91.6, 60660.0], [91.7, 60660.0], [91.8, 60660.0], [91.9, 60661.0], [92.0, 60661.0], [92.1, 60661.0], [92.2, 60667.0], [92.3, 60667.0], [92.4, 60667.0], [92.5, 60667.0], [92.6, 60667.0], [92.7, 60667.0], [92.8, 60670.0], [92.9, 60670.0], [93.0, 60670.0], [93.1, 60673.0], [93.2, 60673.0], [93.3, 60673.0], [93.4, 60676.0], [93.5, 60676.0], [93.6, 60676.0], [93.7, 60676.0], [93.8, 60676.0], [93.9, 60676.0], [94.0, 60679.0], [94.1, 60679.0], [94.2, 60679.0], [94.3, 60679.0], [94.4, 60679.0], [94.5, 60679.0], [94.6, 60687.0], [94.7, 60687.0], [94.8, 60687.0], [94.9, 60701.0], [95.0, 60701.0], [95.1, 60701.0], [95.2, 60705.0], [95.3, 60705.0], [95.4, 60705.0], [95.5, 60716.0], [95.6, 60716.0], [95.7, 60716.0], [95.8, 60722.0], [95.9, 60722.0], [96.0, 60722.0], [96.1, 60749.0], [96.2, 60749.0], [96.3, 60749.0], [96.4, 60751.0], [96.5, 60751.0], [96.6, 60751.0], [96.7, 60759.0], [96.8, 60759.0], [96.9, 60759.0], [97.0, 60776.0], [97.1, 60776.0], [97.2, 60776.0], [97.3, 60786.0], [97.4, 60786.0], [97.5, 60786.0], [97.6, 60804.0], [97.7, 60804.0], [97.8, 60804.0], [97.9, 60813.0], [98.0, 60813.0], [98.1, 60813.0], [98.2, 60816.0], [98.3, 60816.0], [98.4, 60816.0], [98.5, 60856.0], [98.6, 60856.0], [98.7, 60856.0], [98.8, 60858.0], [98.9, 60858.0], [99.0, 60858.0], [99.1, 60885.0], [99.2, 60885.0], [99.3, 60885.0], [99.4, 60913.0], [99.5, 60913.0], [99.6, 60913.0], [99.7, 60955.0], [99.8, 60955.0], [99.9, 60955.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64092.0], [0.1, 64092.0], [0.2, 64092.0], [0.3, 64092.0], [0.4, 64092.0], [0.5, 64092.0], [0.6, 64092.0], [0.7, 64092.0], [0.8, 64092.0], [0.9, 64092.0], [1.0, 64092.0], [1.1, 64092.0], [1.2, 64092.0], [1.3, 64092.0], [1.4, 64092.0], [1.5, 64092.0], [1.6, 64092.0], [1.7, 64092.0], [1.8, 64092.0], [1.9, 64092.0], [2.0, 64092.0], [2.1, 64092.0], [2.2, 64092.0], [2.3, 64092.0], [2.4, 64092.0], [2.5, 64092.0], [2.6, 64092.0], [2.7, 64092.0], [2.8, 64092.0], [2.9, 64092.0], [3.0, 64092.0], [3.1, 64102.0], [3.2, 64102.0], [3.3, 64102.0], [3.4, 64102.0], [3.5, 64102.0], [3.6, 64102.0], [3.7, 64102.0], [3.8, 64102.0], [3.9, 64102.0], [4.0, 64102.0], [4.1, 64102.0], [4.2, 64102.0], [4.3, 64102.0], [4.4, 64102.0], [4.5, 64102.0], [4.6, 64102.0], [4.7, 64102.0], [4.8, 64102.0], [4.9, 64102.0], [5.0, 64102.0], [5.1, 64102.0], [5.2, 64102.0], [5.3, 64102.0], [5.4, 64102.0], [5.5, 64102.0], [5.6, 64102.0], [5.7, 64102.0], [5.8, 64102.0], [5.9, 64102.0], [6.0, 64102.0], [6.1, 64102.0], [6.2, 64102.0], [6.3, 64102.0], [6.4, 64102.0], [6.5, 64102.0], [6.6, 64102.0], [6.7, 64102.0], [6.8, 64102.0], [6.9, 64102.0], [7.0, 64102.0], [7.1, 64102.0], [7.2, 64102.0], [7.3, 64102.0], [7.4, 64102.0], [7.5, 64102.0], [7.6, 64102.0], [7.7, 64102.0], [7.8, 64102.0], [7.9, 64102.0], [8.0, 64102.0], [8.1, 64102.0], [8.2, 64102.0], [8.3, 64102.0], [8.4, 64102.0], [8.5, 64102.0], [8.6, 64102.0], [8.7, 64102.0], [8.8, 64102.0], [8.9, 64102.0], [9.0, 64102.0], [9.1, 64103.0], [9.2, 64103.0], [9.3, 64103.0], [9.4, 64103.0], [9.5, 64103.0], [9.6, 64103.0], [9.7, 64103.0], [9.8, 64103.0], [9.9, 64103.0], [10.0, 64103.0], [10.1, 64103.0], [10.2, 64103.0], [10.3, 64103.0], [10.4, 64103.0], [10.5, 64103.0], [10.6, 64103.0], [10.7, 64103.0], [10.8, 64103.0], [10.9, 64103.0], [11.0, 64103.0], [11.1, 64103.0], [11.2, 64103.0], [11.3, 64103.0], [11.4, 64103.0], [11.5, 64103.0], [11.6, 64103.0], [11.7, 64103.0], [11.8, 64103.0], [11.9, 64103.0], [12.0, 64103.0], [12.1, 64103.0], [12.2, 64104.0], [12.3, 64104.0], [12.4, 64104.0], [12.5, 64104.0], [12.6, 64104.0], [12.7, 64104.0], [12.8, 64104.0], [12.9, 64104.0], [13.0, 64104.0], [13.1, 64104.0], [13.2, 64104.0], [13.3, 64104.0], [13.4, 64104.0], [13.5, 64104.0], [13.6, 64104.0], [13.7, 64104.0], [13.8, 64104.0], [13.9, 64104.0], [14.0, 64104.0], [14.1, 64104.0], [14.2, 64104.0], [14.3, 64104.0], [14.4, 64104.0], [14.5, 64104.0], [14.6, 64104.0], [14.7, 64104.0], [14.8, 64104.0], [14.9, 64104.0], [15.0, 64104.0], [15.1, 64104.0], [15.2, 64105.0], [15.3, 64105.0], [15.4, 64105.0], [15.5, 64105.0], [15.6, 64105.0], [15.7, 64105.0], [15.8, 64105.0], [15.9, 64105.0], [16.0, 64105.0], [16.1, 64105.0], [16.2, 64105.0], [16.3, 64105.0], [16.4, 64105.0], [16.5, 64105.0], [16.6, 64105.0], [16.7, 64105.0], [16.8, 64105.0], [16.9, 64105.0], [17.0, 64105.0], [17.1, 64105.0], [17.2, 64105.0], [17.3, 64105.0], [17.4, 64105.0], [17.5, 64105.0], [17.6, 64105.0], [17.7, 64105.0], [17.8, 64105.0], [17.9, 64105.0], [18.0, 64105.0], [18.1, 64105.0], [18.2, 64105.0], [18.3, 64105.0], [18.4, 64105.0], [18.5, 64105.0], [18.6, 64105.0], [18.7, 64105.0], [18.8, 64105.0], [18.9, 64105.0], [19.0, 64105.0], [19.1, 64105.0], [19.2, 64105.0], [19.3, 64105.0], [19.4, 64105.0], [19.5, 64105.0], [19.6, 64105.0], [19.7, 64105.0], [19.8, 64105.0], [19.9, 64105.0], [20.0, 64105.0], [20.1, 64105.0], [20.2, 64105.0], [20.3, 64105.0], [20.4, 64105.0], [20.5, 64105.0], [20.6, 64105.0], [20.7, 64105.0], [20.8, 64105.0], [20.9, 64105.0], [21.0, 64105.0], [21.1, 64105.0], [21.2, 64105.0], [21.3, 64106.0], [21.4, 64106.0], [21.5, 64106.0], [21.6, 64106.0], [21.7, 64106.0], [21.8, 64106.0], [21.9, 64106.0], [22.0, 64106.0], [22.1, 64106.0], [22.2, 64106.0], [22.3, 64106.0], [22.4, 64106.0], [22.5, 64106.0], [22.6, 64106.0], [22.7, 64106.0], [22.8, 64106.0], [22.9, 64106.0], [23.0, 64106.0], [23.1, 64106.0], [23.2, 64106.0], [23.3, 64106.0], [23.4, 64106.0], [23.5, 64106.0], [23.6, 64106.0], [23.7, 64106.0], [23.8, 64106.0], [23.9, 64106.0], [24.0, 64106.0], [24.1, 64106.0], [24.2, 64106.0], [24.3, 64108.0], [24.4, 64108.0], [24.5, 64108.0], [24.6, 64108.0], [24.7, 64108.0], [24.8, 64108.0], [24.9, 64108.0], [25.0, 64108.0], [25.1, 64108.0], [25.2, 64108.0], [25.3, 64108.0], [25.4, 64108.0], [25.5, 64108.0], [25.6, 64108.0], [25.7, 64108.0], [25.8, 64108.0], [25.9, 64108.0], [26.0, 64108.0], [26.1, 64108.0], [26.2, 64108.0], [26.3, 64108.0], [26.4, 64108.0], [26.5, 64108.0], [26.6, 64108.0], [26.7, 64108.0], [26.8, 64108.0], [26.9, 64108.0], [27.0, 64108.0], [27.1, 64108.0], [27.2, 64108.0], [27.3, 64109.0], [27.4, 64109.0], [27.5, 64109.0], [27.6, 64109.0], [27.7, 64109.0], [27.8, 64109.0], [27.9, 64109.0], [28.0, 64109.0], [28.1, 64109.0], [28.2, 64109.0], [28.3, 64109.0], [28.4, 64109.0], [28.5, 64109.0], [28.6, 64109.0], [28.7, 64109.0], [28.8, 64109.0], [28.9, 64109.0], [29.0, 64109.0], [29.1, 64109.0], [29.2, 64109.0], [29.3, 64109.0], [29.4, 64109.0], [29.5, 64109.0], [29.6, 64109.0], [29.7, 64109.0], [29.8, 64109.0], [29.9, 64109.0], [30.0, 64109.0], [30.1, 64109.0], [30.2, 64109.0], [30.3, 64109.0], [30.4, 64109.0], [30.5, 64109.0], [30.6, 64109.0], [30.7, 64109.0], [30.8, 64109.0], [30.9, 64109.0], [31.0, 64109.0], [31.1, 64109.0], [31.2, 64109.0], [31.3, 64109.0], [31.4, 64109.0], [31.5, 64109.0], [31.6, 64109.0], [31.7, 64109.0], [31.8, 64109.0], [31.9, 64109.0], [32.0, 64109.0], [32.1, 64109.0], [32.2, 64109.0], [32.3, 64109.0], [32.4, 64109.0], [32.5, 64109.0], [32.6, 64109.0], [32.7, 64109.0], [32.8, 64109.0], [32.9, 64109.0], [33.0, 64109.0], [33.1, 64109.0], [33.2, 64109.0], [33.3, 64109.0], [33.4, 64118.0], [33.5, 64118.0], [33.6, 64118.0], [33.7, 64118.0], [33.8, 64118.0], [33.9, 64118.0], [34.0, 64118.0], [34.1, 64118.0], [34.2, 64118.0], [34.3, 64118.0], [34.4, 64118.0], [34.5, 64118.0], [34.6, 64118.0], [34.7, 64118.0], [34.8, 64118.0], [34.9, 64118.0], [35.0, 64118.0], [35.1, 64118.0], [35.2, 64118.0], [35.3, 64118.0], [35.4, 64118.0], [35.5, 64118.0], [35.6, 64118.0], [35.7, 64118.0], [35.8, 64118.0], [35.9, 64118.0], [36.0, 64118.0], [36.1, 64118.0], [36.2, 64118.0], [36.3, 64118.0], [36.4, 64125.0], [36.5, 64125.0], [36.6, 64125.0], [36.7, 64125.0], [36.8, 64125.0], [36.9, 64125.0], [37.0, 64125.0], [37.1, 64125.0], [37.2, 64125.0], [37.3, 64125.0], [37.4, 64125.0], [37.5, 64125.0], [37.6, 64125.0], [37.7, 64125.0], [37.8, 64125.0], [37.9, 64125.0], [38.0, 64125.0], [38.1, 64125.0], [38.2, 64125.0], [38.3, 64125.0], [38.4, 64125.0], [38.5, 64125.0], [38.6, 64125.0], [38.7, 64125.0], [38.8, 64125.0], [38.9, 64125.0], [39.0, 64125.0], [39.1, 64125.0], [39.2, 64125.0], [39.3, 64125.0], [39.4, 64131.0], [39.5, 64131.0], [39.6, 64131.0], [39.7, 64131.0], [39.8, 64131.0], [39.9, 64131.0], [40.0, 64131.0], [40.1, 64131.0], [40.2, 64131.0], [40.3, 64131.0], [40.4, 64131.0], [40.5, 64131.0], [40.6, 64131.0], [40.7, 64131.0], [40.8, 64131.0], [40.9, 64131.0], [41.0, 64131.0], [41.1, 64131.0], [41.2, 64131.0], [41.3, 64131.0], [41.4, 64131.0], [41.5, 64131.0], [41.6, 64131.0], [41.7, 64131.0], [41.8, 64131.0], [41.9, 64131.0], [42.0, 64131.0], [42.1, 64131.0], [42.2, 64131.0], [42.3, 64131.0], [42.4, 64131.0], [42.5, 64147.0], [42.6, 64147.0], [42.7, 64147.0], [42.8, 64147.0], [42.9, 64147.0], [43.0, 64147.0], [43.1, 64147.0], [43.2, 64147.0], [43.3, 64147.0], [43.4, 64147.0], [43.5, 64147.0], [43.6, 64147.0], [43.7, 64147.0], [43.8, 64147.0], [43.9, 64147.0], [44.0, 64147.0], [44.1, 64147.0], [44.2, 64147.0], [44.3, 64147.0], [44.4, 64147.0], [44.5, 64147.0], [44.6, 64147.0], [44.7, 64147.0], [44.8, 64147.0], [44.9, 64147.0], [45.0, 64147.0], [45.1, 64147.0], [45.2, 64147.0], [45.3, 64147.0], [45.4, 64147.0], [45.5, 64174.0], [45.6, 64174.0], [45.7, 64174.0], [45.8, 64174.0], [45.9, 64174.0], [46.0, 64174.0], [46.1, 64174.0], [46.2, 64174.0], [46.3, 64174.0], [46.4, 64174.0], [46.5, 64174.0], [46.6, 64174.0], [46.7, 64174.0], [46.8, 64174.0], [46.9, 64174.0], [47.0, 64174.0], [47.1, 64174.0], [47.2, 64174.0], [47.3, 64174.0], [47.4, 64174.0], [47.5, 64174.0], [47.6, 64174.0], [47.7, 64174.0], [47.8, 64174.0], [47.9, 64174.0], [48.0, 64174.0], [48.1, 64174.0], [48.2, 64174.0], [48.3, 64174.0], [48.4, 64174.0], [48.5, 64205.0], [48.6, 64205.0], [48.7, 64205.0], [48.8, 64205.0], [48.9, 64205.0], [49.0, 64205.0], [49.1, 64205.0], [49.2, 64205.0], [49.3, 64205.0], [49.4, 64205.0], [49.5, 64205.0], [49.6, 64205.0], [49.7, 64205.0], [49.8, 64205.0], [49.9, 64205.0], [50.0, 64205.0], [50.1, 64205.0], [50.2, 64205.0], [50.3, 64205.0], [50.4, 64205.0], [50.5, 64205.0], [50.6, 64205.0], [50.7, 64205.0], [50.8, 64205.0], [50.9, 64205.0], [51.0, 64205.0], [51.1, 64205.0], [51.2, 64205.0], [51.3, 64205.0], [51.4, 64205.0], [51.5, 64205.0], [51.6, 64236.0], [51.7, 64236.0], [51.8, 64236.0], [51.9, 64236.0], [52.0, 64236.0], [52.1, 64236.0], [52.2, 64236.0], [52.3, 64236.0], [52.4, 64236.0], [52.5, 64236.0], [52.6, 64236.0], [52.7, 64236.0], [52.8, 64236.0], [52.9, 64236.0], [53.0, 64236.0], [53.1, 64236.0], [53.2, 64236.0], [53.3, 64236.0], [53.4, 64236.0], [53.5, 64236.0], [53.6, 64236.0], [53.7, 64236.0], [53.8, 64236.0], [53.9, 64236.0], [54.0, 64236.0], [54.1, 64236.0], [54.2, 64236.0], [54.3, 64236.0], [54.4, 64236.0], [54.5, 64236.0], [54.6, 64263.0], [54.7, 64263.0], [54.8, 64263.0], [54.9, 64263.0], [55.0, 64263.0], [55.1, 64263.0], [55.2, 64263.0], [55.3, 64263.0], [55.4, 64263.0], [55.5, 64263.0], [55.6, 64263.0], [55.7, 64263.0], [55.8, 64263.0], [55.9, 64263.0], [56.0, 64263.0], [56.1, 64263.0], [56.2, 64263.0], [56.3, 64263.0], [56.4, 64263.0], [56.5, 64263.0], [56.6, 64263.0], [56.7, 64263.0], [56.8, 64263.0], [56.9, 64263.0], [57.0, 64263.0], [57.1, 64263.0], [57.2, 64263.0], [57.3, 64263.0], [57.4, 64263.0], [57.5, 64263.0], [57.6, 64296.0], [57.7, 64296.0], [57.8, 64296.0], [57.9, 64296.0], [58.0, 64296.0], [58.1, 64296.0], [58.2, 64296.0], [58.3, 64296.0], [58.4, 64296.0], [58.5, 64296.0], [58.6, 64296.0], [58.7, 64296.0], [58.8, 64296.0], [58.9, 64296.0], [59.0, 64296.0], [59.1, 64296.0], [59.2, 64296.0], [59.3, 64296.0], [59.4, 64296.0], [59.5, 64296.0], [59.6, 64296.0], [59.7, 64296.0], [59.8, 64296.0], [59.9, 64296.0], [60.0, 64296.0], [60.1, 64296.0], [60.2, 64296.0], [60.3, 64296.0], [60.4, 64296.0], [60.5, 64296.0], [60.6, 64296.0], [60.7, 64327.0], [60.8, 64327.0], [60.9, 64327.0], [61.0, 64327.0], [61.1, 64327.0], [61.2, 64327.0], [61.3, 64327.0], [61.4, 64327.0], [61.5, 64327.0], [61.6, 64327.0], [61.7, 64327.0], [61.8, 64327.0], [61.9, 64327.0], [62.0, 64327.0], [62.1, 64327.0], [62.2, 64327.0], [62.3, 64327.0], [62.4, 64327.0], [62.5, 64327.0], [62.6, 64327.0], [62.7, 64327.0], [62.8, 64327.0], [62.9, 64327.0], [63.0, 64327.0], [63.1, 64327.0], [63.2, 64327.0], [63.3, 64327.0], [63.4, 64327.0], [63.5, 64327.0], [63.6, 64327.0], [63.7, 64355.0], [63.8, 64355.0], [63.9, 64355.0], [64.0, 64355.0], [64.1, 64355.0], [64.2, 64355.0], [64.3, 64355.0], [64.4, 64355.0], [64.5, 64355.0], [64.6, 64355.0], [64.7, 64355.0], [64.8, 64355.0], [64.9, 64355.0], [65.0, 64355.0], [65.1, 64355.0], [65.2, 64355.0], [65.3, 64355.0], [65.4, 64355.0], [65.5, 64355.0], [65.6, 64355.0], [65.7, 64355.0], [65.8, 64355.0], [65.9, 64355.0], [66.0, 64355.0], [66.1, 64355.0], [66.2, 64355.0], [66.3, 64355.0], [66.4, 64355.0], [66.5, 64355.0], [66.6, 64355.0], [66.7, 64386.0], [66.8, 64386.0], [66.9, 64386.0], [67.0, 64386.0], [67.1, 64386.0], [67.2, 64386.0], [67.3, 64386.0], [67.4, 64386.0], [67.5, 64386.0], [67.6, 64386.0], [67.7, 64386.0], [67.8, 64386.0], [67.9, 64386.0], [68.0, 64386.0], [68.1, 64386.0], [68.2, 64386.0], [68.3, 64386.0], [68.4, 64386.0], [68.5, 64386.0], [68.6, 64386.0], [68.7, 64386.0], [68.8, 64386.0], [68.9, 64386.0], [69.0, 64386.0], [69.1, 64386.0], [69.2, 64386.0], [69.3, 64386.0], [69.4, 64386.0], [69.5, 64386.0], [69.6, 64386.0], [69.7, 64416.0], [69.8, 64416.0], [69.9, 64416.0], [70.0, 64416.0], [70.1, 64416.0], [70.2, 64416.0], [70.3, 64416.0], [70.4, 64416.0], [70.5, 64416.0], [70.6, 64416.0], [70.7, 64416.0], [70.8, 64416.0], [70.9, 64416.0], [71.0, 64416.0], [71.1, 64416.0], [71.2, 64416.0], [71.3, 64416.0], [71.4, 64416.0], [71.5, 64416.0], [71.6, 64416.0], [71.7, 64416.0], [71.8, 64416.0], [71.9, 64416.0], [72.0, 64416.0], [72.1, 64416.0], [72.2, 64416.0], [72.3, 64416.0], [72.4, 64416.0], [72.5, 64416.0], [72.6, 64416.0], [72.7, 64416.0], [72.8, 64460.0], [72.9, 64460.0], [73.0, 64460.0], [73.1, 64460.0], [73.2, 64460.0], [73.3, 64460.0], [73.4, 64460.0], [73.5, 64460.0], [73.6, 64460.0], [73.7, 64460.0], [73.8, 64460.0], [73.9, 64460.0], [74.0, 64460.0], [74.1, 64460.0], [74.2, 64460.0], [74.3, 64460.0], [74.4, 64460.0], [74.5, 64460.0], [74.6, 64460.0], [74.7, 64460.0], [74.8, 64460.0], [74.9, 64460.0], [75.0, 64460.0], [75.1, 64460.0], [75.2, 64460.0], [75.3, 64460.0], [75.4, 64460.0], [75.5, 64460.0], [75.6, 64460.0], [75.7, 64460.0], [75.8, 64475.0], [75.9, 64475.0], [76.0, 64475.0], [76.1, 64475.0], [76.2, 64475.0], [76.3, 64475.0], [76.4, 64475.0], [76.5, 64475.0], [76.6, 64475.0], [76.7, 64475.0], [76.8, 64475.0], [76.9, 64475.0], [77.0, 64475.0], [77.1, 64475.0], [77.2, 64475.0], [77.3, 64475.0], [77.4, 64475.0], [77.5, 64475.0], [77.6, 64475.0], [77.7, 64475.0], [77.8, 64475.0], [77.9, 64475.0], [78.0, 64475.0], [78.1, 64475.0], [78.2, 64475.0], [78.3, 64475.0], [78.4, 64475.0], [78.5, 64475.0], [78.6, 64475.0], [78.7, 64475.0], [78.8, 64506.0], [78.9, 64506.0], [79.0, 64506.0], [79.1, 64506.0], [79.2, 64506.0], [79.3, 64506.0], [79.4, 64506.0], [79.5, 64506.0], [79.6, 64506.0], [79.7, 64506.0], [79.8, 64506.0], [79.9, 64506.0], [80.0, 64506.0], [80.1, 64506.0], [80.2, 64506.0], [80.3, 64506.0], [80.4, 64506.0], [80.5, 64506.0], [80.6, 64506.0], [80.7, 64506.0], [80.8, 64506.0], [80.9, 64506.0], [81.0, 64506.0], [81.1, 64506.0], [81.2, 64506.0], [81.3, 64506.0], [81.4, 64506.0], [81.5, 64506.0], [81.6, 64506.0], [81.7, 64506.0], [81.8, 64506.0], [81.9, 64535.0], [82.0, 64535.0], [82.1, 64535.0], [82.2, 64535.0], [82.3, 64535.0], [82.4, 64535.0], [82.5, 64535.0], [82.6, 64535.0], [82.7, 64535.0], [82.8, 64535.0], [82.9, 64535.0], [83.0, 64535.0], [83.1, 64535.0], [83.2, 64535.0], [83.3, 64535.0], [83.4, 64535.0], [83.5, 64535.0], [83.6, 64535.0], [83.7, 64535.0], [83.8, 64535.0], [83.9, 64535.0], [84.0, 64535.0], [84.1, 64535.0], [84.2, 64535.0], [84.3, 64535.0], [84.4, 64535.0], [84.5, 64535.0], [84.6, 64535.0], [84.7, 64535.0], [84.8, 64535.0], [84.9, 64565.0], [85.0, 64565.0], [85.1, 64565.0], [85.2, 64565.0], [85.3, 64565.0], [85.4, 64565.0], [85.5, 64565.0], [85.6, 64565.0], [85.7, 64565.0], [85.8, 64565.0], [85.9, 64565.0], [86.0, 64565.0], [86.1, 64565.0], [86.2, 64565.0], [86.3, 64565.0], [86.4, 64565.0], [86.5, 64565.0], [86.6, 64565.0], [86.7, 64565.0], [86.8, 64565.0], [86.9, 64565.0], [87.0, 64565.0], [87.1, 64565.0], [87.2, 64565.0], [87.3, 64565.0], [87.4, 64565.0], [87.5, 64565.0], [87.6, 64565.0], [87.7, 64565.0], [87.8, 64565.0], [87.9, 64595.0], [88.0, 64595.0], [88.1, 64595.0], [88.2, 64595.0], [88.3, 64595.0], [88.4, 64595.0], [88.5, 64595.0], [88.6, 64595.0], [88.7, 64595.0], [88.8, 64595.0], [88.9, 64595.0], [89.0, 64595.0], [89.1, 64595.0], [89.2, 64595.0], [89.3, 64595.0], [89.4, 64595.0], [89.5, 64595.0], [89.6, 64595.0], [89.7, 64595.0], [89.8, 64595.0], [89.9, 64595.0], [90.0, 64595.0], [90.1, 64595.0], [90.2, 64595.0], [90.3, 64595.0], [90.4, 64595.0], [90.5, 64595.0], [90.6, 64595.0], [90.7, 64595.0], [90.8, 64595.0], [90.9, 64595.0], [91.0, 64626.0], [91.1, 64626.0], [91.2, 64626.0], [91.3, 64626.0], [91.4, 64626.0], [91.5, 64626.0], [91.6, 64626.0], [91.7, 64626.0], [91.8, 64626.0], [91.9, 64626.0], [92.0, 64626.0], [92.1, 64626.0], [92.2, 64626.0], [92.3, 64626.0], [92.4, 64626.0], [92.5, 64626.0], [92.6, 64626.0], [92.7, 64626.0], [92.8, 64626.0], [92.9, 64626.0], [93.0, 64626.0], [93.1, 64626.0], [93.2, 64626.0], [93.3, 64626.0], [93.4, 64626.0], [93.5, 64626.0], [93.6, 64626.0], [93.7, 64626.0], [93.8, 64626.0], [93.9, 64626.0], [94.0, 64654.0], [94.1, 64654.0], [94.2, 64654.0], [94.3, 64654.0], [94.4, 64654.0], [94.5, 64654.0], [94.6, 64654.0], [94.7, 64654.0], [94.8, 64654.0], [94.9, 64654.0], [95.0, 64654.0], [95.1, 64654.0], [95.2, 64654.0], [95.3, 64654.0], [95.4, 64654.0], [95.5, 64654.0], [95.6, 64654.0], [95.7, 64654.0], [95.8, 64654.0], [95.9, 64654.0], [96.0, 64654.0], [96.1, 64654.0], [96.2, 64654.0], [96.3, 64654.0], [96.4, 64654.0], [96.5, 64654.0], [96.6, 64654.0], [96.7, 64654.0], [96.8, 64654.0], [96.9, 64654.0], [97.0, 64679.0], [97.1, 64679.0], [97.2, 64679.0], [97.3, 64679.0], [97.4, 64679.0], [97.5, 64679.0], [97.6, 64679.0], [97.7, 64679.0], [97.8, 64679.0], [97.9, 64679.0], [98.0, 64679.0], [98.1, 64679.0], [98.2, 64679.0], [98.3, 64679.0], [98.4, 64679.0], [98.5, 64679.0], [98.6, 64679.0], [98.7, 64679.0], [98.8, 64679.0], [98.9, 64679.0], [99.0, 64679.0], [99.1, 64679.0], [99.2, 64679.0], [99.3, 64679.0], [99.4, 64679.0], [99.5, 64679.0], [99.6, 64679.0], [99.7, 64679.0], [99.8, 64679.0], [99.9, 64679.0], [100.0, 64679.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 60489.0], [0.1, 60489.0], [0.2, 60497.0], [0.3, 60497.0], [0.4, 60498.0], [0.5, 60498.0], [0.6, 60498.0], [0.7, 60503.0], [0.8, 60508.0], [0.9, 60508.0], [1.0, 60512.0], [1.1, 60515.0], [1.2, 60515.0], [1.3, 60516.0], [1.4, 60519.0], [1.5, 60519.0], [1.6, 60520.0], [1.7, 60521.0], [1.8, 60521.0], [1.9, 60522.0], [2.0, 60522.0], [2.1, 60522.0], [2.2, 60525.0], [2.3, 60527.0], [2.4, 60527.0], [2.5, 60529.0], [2.6, 60539.0], [2.7, 60539.0], [2.8, 60539.0], [2.9, 60541.0], [3.0, 60541.0], [3.1, 60551.0], [3.2, 60554.0], [3.3, 60554.0], [3.4, 60556.0], [3.5, 60557.0], [3.6, 60557.0], [3.7, 60559.0], [3.8, 60564.0], [3.9, 60564.0], [4.0, 60564.0], [4.1, 60567.0], [4.2, 60567.0], [4.3, 60569.0], [4.4, 60577.0], [4.5, 60577.0], [4.6, 60578.0], [4.7, 60580.0], [4.8, 60580.0], [4.9, 60583.0], [5.0, 60584.0], [5.1, 60584.0], [5.2, 60584.0], [5.3, 60584.0], [5.4, 60584.0], [5.5, 60587.0], [5.6, 60587.0], [5.7, 60589.0], [5.8, 60591.0], [5.9, 60591.0], [6.0, 60593.0], [6.1, 60593.0], [6.2, 60593.0], [6.3, 60595.0], [6.4, 60597.0], [6.5, 60597.0], [6.6, 60608.0], [6.7, 60612.0], [6.8, 60612.0], [6.9, 60613.0], [7.0, 60614.0], [7.1, 60614.0], [7.2, 60616.0], [7.3, 60621.0], [7.4, 60621.0], [7.5, 60625.0], [7.6, 60635.0], [7.7, 60635.0], [7.8, 60635.0], [7.9, 60639.0], [8.0, 60639.0], [8.1, 60640.0], [8.2, 60641.0], [8.3, 60641.0], [8.4, 60642.0], [8.5, 60642.0], [8.6, 60642.0], [8.7, 60644.0], [8.8, 60647.0], [8.9, 60647.0], [9.0, 60649.0], [9.1, 60650.0], [9.2, 60650.0], [9.3, 60651.0], [9.4, 60652.0], [9.5, 60652.0], [9.6, 60655.0], [9.7, 60657.0], [9.8, 60657.0], [9.9, 60659.0], [10.0, 60659.0], [10.1, 60661.0], [10.2, 60667.0], [10.3, 60667.0], [10.4, 60667.0], [10.5, 60669.0], [10.6, 60669.0], [10.7, 60673.0], [10.8, 60674.0], [10.9, 60674.0], [11.0, 60677.0], [11.1, 60683.0], [11.2, 60683.0], [11.3, 60686.0], [11.4, 60687.0], [11.5, 60687.0], [11.6, 60691.0], [11.7, 60693.0], [11.8, 60693.0], [11.9, 60695.0], [12.0, 60695.0], [12.1, 60695.0], [12.2, 60698.0], [12.3, 60702.0], [12.4, 60702.0], [12.5, 60704.0], [12.6, 60705.0], [12.7, 60705.0], [12.8, 60706.0], [12.9, 60709.0], [13.0, 60709.0], [13.1, 60712.0], [13.2, 60714.0], [13.3, 60714.0], [13.4, 60715.0], [13.5, 60716.0], [13.6, 60716.0], [13.7, 60719.0], [13.8, 60719.0], [13.9, 60719.0], [14.0, 60719.0], [14.1, 60725.0], [14.2, 60725.0], [14.3, 60730.0], [14.4, 60733.0], [14.5, 60733.0], [14.6, 60736.0], [14.7, 60736.0], [14.8, 60736.0], [14.9, 60737.0], [15.0, 60737.0], [15.1, 60738.0], [15.2, 60741.0], [15.3, 60741.0], [15.4, 60742.0], [15.5, 60743.0], [15.6, 60743.0], [15.7, 60748.0], [15.8, 60753.0], [15.9, 60753.0], [16.0, 60754.0], [16.1, 60756.0], [16.2, 60756.0], [16.3, 60756.0], [16.4, 60759.0], [16.5, 60759.0], [16.6, 60761.0], [16.7, 60762.0], [16.8, 60762.0], [16.9, 60764.0], [17.0, 60767.0], [17.1, 60767.0], [17.2, 60770.0], [17.3, 60771.0], [17.4, 60771.0], [17.5, 60772.0], [17.6, 60776.0], [17.7, 60776.0], [17.8, 60776.0], [17.9, 60779.0], [18.0, 60779.0], [18.1, 60780.0], [18.2, 60781.0], [18.3, 60781.0], [18.4, 60782.0], [18.5, 60785.0], [18.6, 60785.0], [18.7, 60790.0], [18.8, 60791.0], [18.9, 60791.0], [19.0, 60791.0], [19.1, 60792.0], [19.2, 60792.0], [19.3, 60792.0], [19.4, 60799.0], [19.5, 60799.0], [19.6, 60806.0], [19.7, 60809.0], [19.8, 60809.0], [19.9, 60809.0], [20.0, 60809.0], [20.1, 60809.0], [20.2, 60811.0], [20.3, 60811.0], [20.4, 60812.0], [20.5, 60816.0], [20.6, 60816.0], [20.7, 60818.0], [20.8, 60818.0], [20.9, 60818.0], [21.0, 60823.0], [21.1, 60825.0], [21.2, 60825.0], [21.3, 60826.0], [21.4, 60829.0], [21.5, 60829.0], [21.6, 60832.0], [21.7, 60834.0], [21.8, 60834.0], [21.9, 60838.0], [22.0, 60838.0], [22.1, 60838.0], [22.2, 60839.0], [22.3, 60841.0], [22.4, 60841.0], [22.5, 60844.0], [22.6, 60847.0], [22.7, 60847.0], [22.8, 60847.0], [22.9, 60847.0], [23.0, 60847.0], [23.1, 60850.0], [23.2, 60850.0], [23.3, 60850.0], [23.4, 60850.0], [23.5, 60852.0], [23.6, 60852.0], [23.7, 60852.0], [23.8, 60856.0], [23.9, 60856.0], [24.0, 60864.0], [24.1, 60865.0], [24.2, 60865.0], [24.3, 60866.0], [24.4, 60866.0], [24.5, 60866.0], [24.6, 60867.0], [24.7, 60867.0], [24.8, 60867.0], [24.9, 60871.0], [25.0, 60871.0], [25.1, 60873.0], [25.2, 60874.0], [25.3, 60874.0], [25.4, 60877.0], [25.5, 60880.0], [25.6, 60880.0], [25.7, 60883.0], [25.8, 60885.0], [25.9, 60885.0], [26.0, 60894.0], [26.1, 60894.0], [26.2, 60894.0], [26.3, 60895.0], [26.4, 60897.0], [26.5, 60897.0], [26.6, 60899.0], [26.7, 60899.0], [26.8, 60899.0], [26.9, 60902.0], [27.0, 60906.0], [27.1, 60906.0], [27.2, 60907.0], [27.3, 60908.0], [27.4, 60908.0], [27.5, 60911.0], [27.6, 60911.0], [27.7, 60911.0], [27.8, 60912.0], [27.9, 60912.0], [28.0, 60912.0], [28.1, 60913.0], [28.2, 60914.0], [28.3, 60914.0], [28.4, 60915.0], [28.5, 60918.0], [28.6, 60918.0], [28.7, 60920.0], [28.8, 60924.0], [28.9, 60924.0], [29.0, 60928.0], [29.1, 60928.0], [29.2, 60928.0], [29.3, 60929.0], [29.4, 60930.0], [29.5, 60930.0], [29.6, 60934.0], [29.7, 60939.0], [29.8, 60939.0], [29.9, 60940.0], [30.0, 60940.0], [30.1, 60942.0], [30.2, 60945.0], [30.3, 60945.0], [30.4, 60945.0], [30.5, 60948.0], [30.6, 60948.0], [30.7, 60950.0], [30.8, 60951.0], [30.9, 60951.0], [31.0, 60954.0], [31.1, 60957.0], [31.2, 60957.0], [31.3, 60958.0], [31.4, 60960.0], [31.5, 60960.0], [31.6, 60961.0], [31.7, 60964.0], [31.8, 60964.0], [31.9, 60965.0], [32.0, 60967.0], [32.1, 60967.0], [32.2, 60969.0], [32.3, 60969.0], [32.4, 60969.0], [32.5, 60971.0], [32.6, 60972.0], [32.7, 60972.0], [32.8, 60976.0], [32.9, 60979.0], [33.0, 60979.0], [33.1, 60982.0], [33.2, 60982.0], [33.3, 60982.0], [33.4, 60984.0], [33.5, 60984.0], [33.6, 60984.0], [33.7, 60986.0], [33.8, 60988.0], [33.9, 60988.0], [34.0, 60992.0], [34.1, 60992.0], [34.2, 60992.0], [34.3, 60993.0], [34.4, 60995.0], [34.5, 60995.0], [34.6, 60998.0], [34.7, 60999.0], [34.8, 60999.0], [34.9, 60999.0], [35.0, 60999.0], [35.1, 61007.0], [35.2, 61008.0], [35.3, 61008.0], [35.4, 61008.0], [35.5, 61015.0], [35.6, 61015.0], [35.7, 61015.0], [35.8, 61015.0], [35.9, 61015.0], [36.0, 61019.0], [36.1, 61022.0], [36.2, 61022.0], [36.3, 61025.0], [36.4, 61030.0], [36.5, 61030.0], [36.6, 61032.0], [36.7, 61034.0], [36.8, 61034.0], [36.9, 61035.0], [37.0, 61035.0], [37.1, 61035.0], [37.2, 61035.0], [37.3, 61037.0], [37.4, 61037.0], [37.5, 61037.0], [37.6, 61037.0], [37.7, 61037.0], [37.8, 61039.0], [37.9, 61041.0], [38.0, 61041.0], [38.1, 61044.0], [38.2, 61045.0], [38.3, 61045.0], [38.4, 61047.0], [38.5, 61052.0], [38.6, 61052.0], [38.7, 61053.0], [38.8, 61054.0], [38.9, 61054.0], [39.0, 61056.0], [39.1, 61057.0], [39.2, 61057.0], [39.3, 61059.0], [39.4, 61061.0], [39.5, 61061.0], [39.6, 61062.0], [39.7, 61067.0], [39.8, 61067.0], [39.9, 61070.0], [40.0, 61070.0], [40.1, 61071.0], [40.2, 61072.0], [40.3, 61072.0], [40.4, 61072.0], [40.5, 61080.0], [40.6, 61080.0], [40.7, 61082.0], [40.8, 61082.0], [40.9, 61082.0], [41.0, 61084.0], [41.1, 61085.0], [41.2, 61085.0], [41.3, 61087.0], [41.4, 61090.0], [41.5, 61090.0], [41.6, 61093.0], [41.7, 61101.0], [41.8, 61101.0], [41.9, 61103.0], [42.0, 61104.0], [42.1, 61104.0], [42.2, 61107.0], [42.3, 61109.0], [42.4, 61109.0], [42.5, 61110.0], [42.6, 61110.0], [42.7, 61110.0], [42.8, 61113.0], [42.9, 61113.0], [43.0, 61113.0], [43.1, 61113.0], [43.2, 61114.0], [43.3, 61114.0], [43.4, 61115.0], [43.5, 61118.0], [43.6, 61118.0], [43.7, 61118.0], [43.8, 61120.0], [43.9, 61120.0], [44.0, 61121.0], [44.1, 61123.0], [44.2, 61123.0], [44.3, 61128.0], [44.4, 61128.0], [44.5, 61128.0], [44.6, 61129.0], [44.7, 61130.0], [44.8, 61130.0], [44.9, 61131.0], [45.0, 61139.0], [45.1, 61139.0], [45.2, 61142.0], [45.3, 61142.0], [45.4, 61143.0], [45.5, 61144.0], [45.6, 61144.0], [45.7, 61148.0], [45.8, 61148.0], [45.9, 61148.0], [46.0, 61149.0], [46.1, 61156.0], [46.2, 61156.0], [46.3, 61159.0], [46.4, 61162.0], [46.5, 61162.0], [46.6, 61163.0], [46.7, 61166.0], [46.8, 61166.0], [46.9, 61167.0], [47.0, 61168.0], [47.1, 61168.0], [47.2, 61170.0], [47.3, 61170.0], [47.4, 61170.0], [47.5, 61172.0], [47.6, 61175.0], [47.7, 61175.0], [47.8, 61175.0], [47.9, 61178.0], [48.0, 61178.0], [48.1, 61178.0], [48.2, 61179.0], [48.3, 61179.0], [48.4, 61185.0], [48.5, 61187.0], [48.6, 61187.0], [48.7, 61187.0], [48.8, 61188.0], [48.9, 61188.0], [49.0, 61190.0], [49.1, 61190.0], [49.2, 61190.0], [49.3, 61196.0], [49.4, 61196.0], [49.5, 61196.0], [49.6, 61199.0], [49.7, 61204.0], [49.8, 61204.0], [49.9, 61204.0], [50.0, 61206.0], [50.1, 61206.0], [50.2, 61206.0], [50.3, 61206.0], [50.4, 61212.0], [50.5, 61214.0], [50.6, 61214.0], [50.7, 61215.0], [50.8, 61216.0], [50.9, 61216.0], [51.0, 61219.0], [51.1, 61222.0], [51.2, 61222.0], [51.3, 61222.0], [51.4, 61227.0], [51.5, 61227.0], [51.6, 61228.0], [51.7, 61229.0], [51.8, 61229.0], [51.9, 61232.0], [52.0, 61233.0], [52.1, 61233.0], [52.2, 61233.0], [52.3, 61234.0], [52.4, 61234.0], [52.5, 61234.0], [52.6, 61236.0], [52.7, 61236.0], [52.8, 61238.0], [52.9, 61239.0], [53.0, 61239.0], [53.1, 61242.0], [53.2, 61242.0], [53.3, 61242.0], [53.4, 61245.0], [53.5, 61246.0], [53.6, 61246.0], [53.7, 61249.0], [53.8, 61252.0], [53.9, 61252.0], [54.0, 61255.0], [54.1, 61256.0], [54.2, 61256.0], [54.3, 61260.0], [54.4, 61260.0], [54.5, 61260.0], [54.6, 61262.0], [54.7, 61265.0], [54.8, 61265.0], [54.9, 61270.0], [55.0, 61270.0], [55.1, 61270.0], [55.2, 61272.0], [55.3, 61272.0], [55.4, 61274.0], [55.5, 61277.0], [55.6, 61277.0], [55.7, 61280.0], [55.8, 61281.0], [55.9, 61281.0], [56.0, 61287.0], [56.1, 61289.0], [56.2, 61289.0], [56.3, 61294.0], [56.4, 61295.0], [56.5, 61295.0], [56.6, 61296.0], [56.7, 61298.0], [56.8, 61298.0], [56.9, 61299.0], [57.0, 61302.0], [57.1, 61302.0], [57.2, 61302.0], [57.3, 61304.0], [57.4, 61304.0], [57.5, 61304.0], [57.6, 61307.0], [57.7, 61307.0], [57.8, 61307.0], [57.9, 61308.0], [58.0, 61308.0], [58.1, 61309.0], [58.2, 61310.0], [58.3, 61310.0], [58.4, 61311.0], [58.5, 61313.0], [58.6, 61313.0], [58.7, 61317.0], [58.8, 61320.0], [58.9, 61320.0], [59.0, 61321.0], [59.1, 61325.0], [59.2, 61325.0], [59.3, 61326.0], [59.4, 61329.0], [59.5, 61329.0], [59.6, 61331.0], [59.7, 61336.0], [59.8, 61336.0], [59.9, 61336.0], [60.0, 61337.0], [60.1, 61337.0], [60.2, 61337.0], [60.3, 61337.0], [60.4, 61344.0], [60.5, 61346.0], [60.6, 61346.0], [60.7, 61346.0], [60.8, 61347.0], [60.9, 61347.0], [61.0, 61351.0], [61.1, 61354.0], [61.2, 61354.0], [61.3, 61356.0], [61.4, 61359.0], [61.5, 61359.0], [61.6, 61360.0], [61.7, 61364.0], [61.8, 61364.0], [61.9, 61365.0], [62.0, 61368.0], [62.1, 61368.0], [62.2, 61368.0], [62.3, 61371.0], [62.4, 61371.0], [62.5, 61375.0], [62.6, 61375.0], [62.7, 61375.0], [62.8, 61376.0], [62.9, 61376.0], [63.0, 61376.0], [63.1, 61377.0], [63.2, 61380.0], [63.3, 61380.0], [63.4, 61381.0], [63.5, 61381.0], [63.6, 61381.0], [63.7, 61384.0], [63.8, 61385.0], [63.9, 61385.0], [64.0, 61387.0], [64.1, 61388.0], [64.2, 61388.0], [64.3, 61392.0], [64.4, 61392.0], [64.5, 61392.0], [64.6, 61393.0], [64.7, 61394.0], [64.8, 61394.0], [64.9, 61396.0], [65.0, 61398.0], [65.1, 61398.0], [65.2, 61402.0], [65.3, 61402.0], [65.4, 61403.0], [65.5, 61405.0], [65.6, 61405.0], [65.7, 61406.0], [65.8, 61411.0], [65.9, 61411.0], [66.0, 61412.0], [66.1, 61413.0], [66.2, 61413.0], [66.3, 61422.0], [66.4, 61422.0], [66.5, 61422.0], [66.6, 61423.0], [66.7, 61425.0], [66.8, 61425.0], [66.9, 61427.0], [67.0, 61430.0], [67.1, 61430.0], [67.2, 61433.0], [67.3, 61434.0], [67.4, 61434.0], [67.5, 61436.0], [67.6, 61439.0], [67.7, 61439.0], [67.8, 61440.0], [67.9, 61441.0], [68.0, 61441.0], [68.1, 61441.0], [68.2, 61441.0], [68.3, 61441.0], [68.4, 61442.0], [68.5, 61445.0], [68.6, 61445.0], [68.7, 61447.0], [68.8, 61448.0], [68.9, 61448.0], [69.0, 61451.0], [69.1, 61451.0], [69.2, 61451.0], [69.3, 61458.0], [69.4, 61462.0], [69.5, 61462.0], [69.6, 61463.0], [69.7, 61467.0], [69.8, 61467.0], [69.9, 61467.0], [70.0, 61469.0], [70.1, 61469.0], [70.2, 61469.0], [70.3, 61469.0], [70.4, 61471.0], [70.5, 61477.0], [70.6, 61477.0], [70.7, 61477.0], [70.8, 61478.0], [70.9, 61478.0], [71.0, 61481.0], [71.1, 61482.0], [71.2, 61482.0], [71.3, 61485.0], [71.4, 61486.0], [71.5, 61486.0], [71.6, 61489.0], [71.7, 61492.0], [71.8, 61492.0], [71.9, 61497.0], [72.0, 61498.0], [72.1, 61498.0], [72.2, 61499.0], [72.3, 61499.0], [72.4, 61499.0], [72.5, 61501.0], [72.6, 61501.0], [72.7, 61501.0], [72.8, 61503.0], [72.9, 61504.0], [73.0, 61504.0], [73.1, 61505.0], [73.2, 61506.0], [73.3, 61506.0], [73.4, 61506.0], [73.5, 61508.0], [73.6, 61508.0], [73.7, 61508.0], [73.8, 61509.0], [73.9, 61509.0], [74.0, 61512.0], [74.1, 61514.0], [74.2, 61514.0], [74.3, 61515.0], [74.4, 61522.0], [74.5, 61522.0], [74.6, 61523.0], [74.7, 61533.0], [74.8, 61533.0], [74.9, 61533.0], [75.0, 61534.0], [75.1, 61534.0], [75.2, 61535.0], [75.3, 61535.0], [75.4, 61538.0], [75.5, 61541.0], [75.6, 61541.0], [75.7, 61543.0], [75.8, 61543.0], [75.9, 61543.0], [76.0, 61544.0], [76.1, 61545.0], [76.2, 61545.0], [76.3, 61553.0], [76.4, 61558.0], [76.5, 61558.0], [76.6, 61561.0], [76.7, 61563.0], [76.8, 61563.0], [76.9, 61563.0], [77.0, 61563.0], [77.1, 61563.0], [77.2, 61564.0], [77.3, 61564.0], [77.4, 61564.0], [77.5, 61565.0], [77.6, 61567.0], [77.7, 61567.0], [77.8, 61567.0], [77.9, 61572.0], [78.0, 61572.0], [78.1, 61574.0], [78.2, 61576.0], [78.3, 61576.0], [78.4, 61579.0], [78.5, 61580.0], [78.6, 61580.0], [78.7, 61581.0], [78.8, 61582.0], [78.9, 61582.0], [79.0, 61583.0], [79.1, 61584.0], [79.2, 61584.0], [79.3, 61591.0], [79.4, 61591.0], [79.5, 61591.0], [79.6, 61595.0], [79.7, 61600.0], [79.8, 61600.0], [79.9, 61601.0], [80.0, 61602.0], [80.1, 61602.0], [80.2, 61606.0], [80.3, 61606.0], [80.4, 61607.0], [80.5, 61610.0], [80.6, 61610.0], [80.7, 61611.0], [80.8, 61611.0], [80.9, 61611.0], [81.0, 61611.0], [81.1, 61615.0], [81.2, 61615.0], [81.3, 61615.0], [81.4, 61621.0], [81.5, 61621.0], [81.6, 61624.0], [81.7, 61624.0], [81.8, 61624.0], [81.9, 61628.0], [82.0, 61628.0], [82.1, 61628.0], [82.2, 61628.0], [82.3, 61629.0], [82.4, 61629.0], [82.5, 61630.0], [82.6, 61631.0], [82.7, 61631.0], [82.8, 61636.0], [82.9, 61637.0], [83.0, 61637.0], [83.1, 61638.0], [83.2, 61638.0], [83.3, 61638.0], [83.4, 61639.0], [83.5, 61644.0], [83.6, 61644.0], [83.7, 61645.0], [83.8, 61647.0], [83.9, 61647.0], [84.0, 61647.0], [84.1, 61648.0], [84.2, 61648.0], [84.3, 61649.0], [84.4, 61655.0], [84.5, 61655.0], [84.6, 61657.0], [84.7, 61658.0], [84.8, 61658.0], [84.9, 61665.0], [85.0, 61665.0], [85.1, 61666.0], [85.2, 61667.0], [85.3, 61667.0], [85.4, 61668.0], [85.5, 61672.0], [85.6, 61672.0], [85.7, 61672.0], [85.8, 61675.0], [85.9, 61675.0], [86.0, 61676.0], [86.1, 61677.0], [86.2, 61677.0], [86.3, 61680.0], [86.4, 61683.0], [86.5, 61683.0], [86.6, 61685.0], [86.7, 61686.0], [86.8, 61686.0], [86.9, 61691.0], [87.0, 61693.0], [87.1, 61693.0], [87.2, 61694.0], [87.3, 61694.0], [87.4, 61694.0], [87.5, 61697.0], [87.6, 61704.0], [87.7, 61704.0], [87.8, 61704.0], [87.9, 61705.0], [88.0, 61705.0], [88.1, 61706.0], [88.2, 61707.0], [88.3, 61707.0], [88.4, 61709.0], [88.5, 61710.0], [88.6, 61710.0], [88.7, 61712.0], [88.8, 61712.0], [88.9, 61712.0], [89.0, 61716.0], [89.1, 61719.0], [89.2, 61719.0], [89.3, 61721.0], [89.4, 61722.0], [89.5, 61722.0], [89.6, 61727.0], [89.7, 61730.0], [89.8, 61730.0], [89.9, 61732.0], [90.0, 61732.0], [90.1, 61732.0], [90.2, 61736.0], [90.3, 61736.0], [90.4, 61737.0], [90.5, 61738.0], [90.6, 61738.0], [90.7, 61741.0], [90.8, 61743.0], [90.9, 61743.0], [91.0, 61743.0], [91.1, 61745.0], [91.2, 61745.0], [91.3, 61749.0], [91.4, 61753.0], [91.5, 61753.0], [91.6, 61756.0], [91.7, 61759.0], [91.8, 61759.0], [91.9, 61761.0], [92.0, 61761.0], [92.1, 61761.0], [92.2, 61765.0], [92.3, 61765.0], [92.4, 61765.0], [92.5, 61769.0], [92.6, 61770.0], [92.7, 61770.0], [92.8, 61770.0], [92.9, 61770.0], [93.0, 61770.0], [93.1, 61773.0], [93.2, 61773.0], [93.3, 61773.0], [93.4, 61774.0], [93.5, 61777.0], [93.6, 61777.0], [93.7, 61777.0], [93.8, 61779.0], [93.9, 61779.0], [94.0, 61780.0], [94.1, 61786.0], [94.2, 61786.0], [94.3, 61787.0], [94.4, 61788.0], [94.5, 61788.0], [94.6, 61794.0], [94.7, 61797.0], [94.8, 61797.0], [94.9, 61799.0], [95.0, 61799.0], [95.1, 61800.0], [95.2, 61800.0], [95.3, 61800.0], [95.4, 61803.0], [95.5, 61808.0], [95.6, 61808.0], [95.7, 61808.0], [95.8, 61816.0], [95.9, 61816.0], [96.0, 61822.0], [96.1, 61825.0], [96.2, 61825.0], [96.3, 61830.0], [96.4, 61836.0], [96.5, 61836.0], [96.6, 61843.0], [96.7, 61854.0], [96.8, 61854.0], [96.9, 61865.0], [97.0, 61865.0], [97.1, 61865.0], [97.2, 61874.0], [97.3, 61885.0], [97.4, 61885.0], [97.5, 61892.0], [97.6, 61896.0], [97.7, 61896.0], [97.8, 61902.0], [97.9, 61908.0], [98.0, 61908.0], [98.1, 61921.0], [98.2, 61931.0], [98.3, 61931.0], [98.4, 61939.0], [98.5, 61949.0], [98.6, 61949.0], [98.7, 61962.0], [98.8, 61968.0], [98.9, 61968.0], [99.0, 61975.0], [99.1, 61996.0], [99.2, 61996.0], [99.3, 62005.0], [99.4, 62034.0], [99.5, 62034.0], [99.6, 62041.0], [99.7, 62063.0], [99.8, 62063.0], [99.9, 62106.0], [100.0, 62106.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 59700.0, "maxY": 54.0, "series": [{"data": [[61300.0, 47.0], [60500.0, 40.0], [60400.0, 35.0], [60300.0, 1.0], [60800.0, 53.0], [61400.0, 52.0], [60600.0, 45.0], [61200.0, 54.0], [61000.0, 54.0], [61100.0, 46.0], [60900.0, 46.0], [60700.0, 50.0], [61600.0, 54.0], [61500.0, 46.0], [61700.0, 19.0], [61800.0, 11.0], [61900.0, 6.0], [62000.0, 1.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[59700.0, 24.0], [59900.0, 31.0], [60100.0, 33.0], [60500.0, 33.0], [60400.0, 33.0], [59800.0, 27.0], [60300.0, 33.0], [60200.0, 33.0], [60000.0, 33.0], [60600.0, 33.0], [60700.0, 9.0], [60800.0, 6.0], [60900.0, 2.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[64200.0, 4.0], [64600.0, 3.0], [64100.0, 15.0], [64300.0, 3.0], [64400.0, 3.0], [64500.0, 4.0], [64000.0, 1.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[61300.0, 54.0], [61200.0, 48.0], [61400.0, 48.0], [60600.0, 38.0], [61100.0, 53.0], [60900.0, 54.0], [61000.0, 44.0], [60400.0, 4.0], [60700.0, 48.0], [60500.0, 39.0], [60800.0, 48.0], [61600.0, 52.0], [61700.0, 49.0], [61500.0, 48.0], [61800.0, 18.0], [61900.0, 10.0], [62000.0, 4.0], [62100.0, 1.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1683.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 1683.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 1683.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 19.060606060606055, "minX": 1.61940126E12, "maxY": 357.9681818181819, "series": [{"data": [[1.61940126E12, 357.9681818181819]], "isOverall": false, "label": "UserType3_LB-split(Nutt)", "isController": false}, {"data": [[1.61940126E12, 339.2075757575754]], "isOverall": false, "label": "UserType2_LB-split(Boss)", "isController": false}, {"data": [[1.61940126E12, 19.060606060606055]], "isOverall": false, "label": "UserType1_LB-split(Dear)", "isController": false}, {"data": [[1.61940126E12, 201.60909090909064]], "isOverall": false, "label": "UserType4_LB-split(Haris)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940126E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 59747.0, "minX": 1.0, "maxY": 64626.0, "series": [{"data": [[49.0, 62041.0], [50.0, 61515.0], [55.0, 61514.0], [54.0, 61580.0], [56.0, 61910.0], [59.0, 61382.333333333336], [58.0, 60855.0], [61.0, 61299.75], [60.0, 61365.5], [63.0, 61053.0], [95.0, 61455.0], [99.0, 61037.333333333336], [96.0, 61257.0], [103.0, 61980.0], [102.0, 60928.0], [101.0, 61521.0], [107.0, 61718.0], [105.0, 61289.0], [110.0, 61916.0], [109.0, 61366.333333333336], [113.0, 61190.333333333336], [135.0, 60767.0], [143.0, 61162.0], [142.0, 61574.75], [141.0, 61360.0], [137.0, 61624.0], [136.0, 61657.0], [150.0, 61029.0], [148.0, 61326.0], [147.0, 61524.0], [146.0, 60700.0], [153.0, 61227.333333333336], [152.0, 60898.0], [174.0, 61134.0], [183.0, 61200.5], [181.0, 61332.0], [180.0, 61332.5], [179.0, 61530.0], [176.0, 60903.5], [187.0, 60805.0], [185.0, 61596.0], [184.0, 61530.0], [193.0, 61396.66666666667], [192.0, 61265.0], [231.0, 61586.0], [229.0, 60794.5], [227.0, 61157.0], [226.0, 61421.0], [235.0, 61090.0], [234.0, 60629.0], [233.0, 60828.0], [246.0, 60761.0], [244.0, 61880.0], [243.0, 61122.0], [241.0, 61618.0], [255.0, 60748.0], [253.0, 61463.0], [248.0, 61486.0], [264.0, 61869.0], [267.0, 60682.0], [266.0, 61407.0], [265.0, 60912.0], [263.0, 61341.0], [262.0, 61077.0], [260.0, 60857.0], [258.0, 61275.0], [257.0, 61473.0], [273.0, 61548.33333333333], [303.0, 61136.0], [302.0, 60785.0], [299.0, 61510.0], [298.0, 61741.0], [297.0, 60719.0], [295.0, 60818.0], [313.0, 61267.333333333336], [312.0, 61048.0], [309.0, 61246.0], [308.0, 61444.0], [307.0, 61174.0], [305.0, 61114.0], [349.0, 61284.0], [347.0, 61416.0], [346.0, 61086.0], [344.0, 60691.0], [343.0, 61482.0], [336.0, 61153.5], [342.0, 61174.333333333336], [341.0, 60888.0], [340.0, 60559.0], [339.0, 61145.0], [338.0, 61813.0], [364.0, 60875.0], [353.0, 61316.25], [352.0, 60953.0], [382.0, 61322.0], [381.0, 61190.0], [379.0, 60530.0], [378.0, 61256.0], [377.0, 61114.0], [376.0, 61223.0], [393.0, 61238.75], [391.0, 61057.0], [388.0, 61256.5], [387.0, 61454.0], [385.0, 61080.333333333336], [409.0, 60570.0], [404.0, 61295.0], [430.0, 61030.0], [431.0, 61129.0], [428.0, 61624.0], [427.0, 61756.0], [425.0, 60898.333333333336], [423.0, 60502.0], [421.0, 60964.0], [420.0, 61195.0], [417.0, 61114.666666666664], [433.0, 61557.0], [461.0, 60461.0], [478.0, 61317.0], [476.0, 61350.0], [473.0, 61648.0], [472.0, 61384.0], [470.0, 61582.0], [468.0, 60988.0], [464.0, 60593.0], [493.0, 61299.5], [487.0, 60783.0], [482.0, 60921.0], [481.0, 60658.0], [480.0, 60723.0], [639.0, 60640.0], [627.0, 61167.0], [664.0, 61297.0], [655.0, 61562.0], [654.0, 61430.0], [653.0, 60902.0], [652.0, 61694.0], [649.0, 60507.0], [643.0, 60902.0], [692.0, 60745.0], [691.0, 60965.0], [690.0, 61097.0], [686.0, 61229.0], [685.0, 60571.0], [681.0, 61560.0], [796.0, 61254.0], [797.0, 61243.0], [795.0, 61229.0], [793.0, 61373.0], [792.0, 60594.0], [771.0, 60631.0], [783.0, 60728.0], [781.0, 60529.5], [780.0, 60597.0], [776.0, 60462.0], [790.0, 61010.5], [788.0, 61146.0], [787.0, 61123.0], [784.0, 60452.0], [828.0, 61212.0], [829.0, 60690.0], [827.0, 61021.0], [825.0, 60450.0], [824.0, 60715.0], [823.0, 61153.0], [822.0, 61089.0], [821.0, 61111.0], [807.0, 60856.0], [806.0, 60936.333333333336], [803.0, 61146.0], [839.0, 61085.0], [858.0, 61240.0], [860.0, 61026.0], [857.0, 61218.0], [849.0, 60954.0], [847.0, 60581.0], [846.0, 60557.0], [844.0, 60976.0], [836.0, 60953.0], [834.0, 61447.0], [837.0, 61711.0], [890.0, 60688.666666666664], [883.0, 61315.0], [880.0, 61305.0], [874.0, 61569.0], [873.0, 60654.0], [869.0, 61413.0], [866.0, 60690.0], [926.0, 61436.0], [920.0, 60513.0], [915.0, 60820.0], [913.0, 61016.0], [911.0, 60918.0], [957.0, 60882.0], [954.0, 61478.0], [928.0, 61386.5], [951.0, 61348.5], [949.0, 61365.0], [948.0, 60784.0], [946.0, 60556.0], [945.0, 61454.5], [943.0, 61675.0], [942.0, 61345.0], [940.0, 60762.0], [939.0, 61347.0], [937.0, 60701.0], [974.0, 61278.0], [970.0, 60487.0], [969.0, 60906.0], [960.0, 61327.0], [1059.0, 61637.0], [1084.0, 60687.0], [1079.0, 60845.0], [1074.0, 61097.0], [1065.0, 60450.0], [1062.0, 61158.0], [1061.0, 60784.0], [1056.0, 60952.0], [1055.0, 61168.0], [1049.0, 60510.0], [1047.0, 61181.0], [1045.0, 61375.0], [1050.0, 60772.5], [1143.0, 61481.2], [1149.0, 60969.333333333336], [1127.0, 61287.0], [1122.0, 60865.0], [1129.0, 61638.0], [1128.0, 61443.0], [1148.0, 61474.0], [1147.0, 61352.0], [1141.0, 61610.0], [1139.0, 61408.333333333336], [1140.0, 60438.0], [1138.0, 61619.0], [1119.0, 61553.0], [1090.0, 61227.0], [1103.0, 60619.0], [1095.0, 60704.0], [1113.0, 60980.0], [1111.0, 60497.0], [1110.0, 61378.0], [1106.0, 60573.0], [1105.0, 60882.0], [1131.0, 60928.5], [1132.0, 61685.0], [1133.0, 60492.0], [1188.0, 61200.8], [1212.0, 60722.5], [1215.0, 61216.0], [1184.0, 61686.0], [1186.0, 60943.166666666664], [1185.0, 60992.5], [1189.0, 61107.0], [1192.0, 60777.0], [1191.0, 60916.333333333336], [1195.0, 60616.0], [1193.0, 60741.5], [1198.0, 60844.25], [1196.0, 60903.333333333336], [1214.0, 61073.0], [1213.0, 60681.0], [1211.0, 61621.0], [1210.0, 61015.5], [1209.0, 61040.0], [1208.0, 60507.0], [1206.0, 60629.0], [1204.0, 60865.666666666664], [1203.0, 60997.666666666664], [1202.0, 61020.666666666664], [1182.0, 61515.0], [1153.0, 61406.0], [1152.0, 61546.0], [1155.0, 60723.5], [1157.0, 61507.0], [1160.0, 61336.0], [1159.0, 60885.0], [1164.0, 61567.0], [1162.0, 61485.0], [1167.0, 60887.5], [1166.0, 60816.5], [1181.0, 61461.666666666664], [1179.0, 61280.0], [1178.0, 60774.0], [1177.0, 61037.0], [1176.0, 60750.5], [1175.0, 61600.0], [1174.0, 61110.0], [1173.0, 61308.0], [1169.0, 61167.0], [1168.0, 61147.0], [1238.0, 61065.71428571429], [1240.0, 61464.0], [1217.0, 60636.0], [1221.0, 60854.4], [1220.0, 60711.0], [1219.0, 61151.90909090908], [1224.0, 60973.4], [1222.0, 60912.71428571428], [1237.0, 60767.5], [1236.0, 61222.333333333336], [1235.0, 61375.0], [1234.0, 60740.333333333336], [1233.0, 61685.0], [1231.0, 61094.49999999999], [1228.0, 61260.0], [1229.0, 61281.333333333336], [1230.0, 60956.0], [1340.0, 60976.0], [1343.0, 61089.333333333336], [1312.0, 61103.0], [1315.0, 60908.333333333336], [1313.0, 60410.0], [1319.0, 60887.0], [1317.0, 60941.5], [1321.0, 60898.666666666664], [1320.0, 61072.0], [1323.0, 60776.5], [1322.0, 60758.333333333336], [1342.0, 60819.0], [1341.0, 60838.0], [1339.0, 60920.0], [1338.0, 61162.0], [1337.0, 61197.28571428571], [1336.0, 60670.0], [1335.0, 61076.0], [1334.0, 61154.333333333336], [1333.0, 60602.5], [1330.0, 60877.25], [1328.0, 60592.0], [1295.0, 61672.0], [1290.0, 61023.25], [1289.0, 60815.0], [1308.0, 61130.0], [1306.0, 60485.0], [1302.0, 61001.0], [1301.0, 61346.0], [1300.0, 60658.0], [1298.0, 61516.0], [1297.0, 61405.5], [1296.0, 61137.0], [1304.0, 61210.0], [1353.0, 61201.470588235294], [1352.0, 61164.833333333336], [1351.0, 60540.0], [1350.0, 61083.0], [1349.0, 60887.0], [1347.0, 61222.0], [1346.0, 60838.8], [1344.0, 61141.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[843.5136363636361, 61116.80303030304]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[1403.0, 60395.25], [1402.0, 60123.0], [1401.0, 60468.75], [1393.0, 60412.5], [1383.0, 60439.5], [1373.0, 60515.625], [1371.0, 60269.5], [1363.0, 60509.2], [1463.0, 60218.700000000004], [1453.0, 60231.3], [1443.0, 60274.899999999994], [1433.0, 60302.5], [1423.0, 60329.9], [1413.0, 60358.1], [1481.0, 60331.0], [1506.0, 59781.0], [1511.0, 60197.666666666664], [1509.0, 60445.333333333336], [1507.0, 60282.0], [1502.0, 60069.0], [1475.0, 60676.0], [1473.0, 60192.299999999996], [1480.0, 60529.0], [1477.0, 60082.0], [1483.0, 60052.0], [1485.0, 60053.5], [1484.0, 60398.5], [1500.0, 60432.0], [1497.0, 59937.0], [1499.0, 59886.0], [1495.0, 59926.5], [1493.0, 60111.0], [1492.0, 60379.0], [1491.0, 60406.0], [1489.0, 60085.0], [1490.0, 60037.0], [1638.0, 60197.8], [1659.0, 60215.25], [1663.0, 60179.0], [1633.0, 60483.5], [1632.0, 59933.0], [1635.0, 60285.0], [1636.0, 59968.0], [1634.0, 60303.5], [1640.0, 60361.0], [1642.0, 60269.5], [1641.0, 60388.0], [1644.0, 60155.0], [1643.0, 60544.0], [1647.0, 60284.0], [1645.0, 60069.5], [1662.0, 60230.0], [1660.0, 60197.0], [1658.0, 60049.5], [1657.0, 60174.0], [1656.0, 59937.0], [1654.0, 60183.0], [1652.0, 59933.333333333336], [1651.0, 60295.5], [1650.0, 60007.5], [1649.0, 60190.333333333336], [1631.0, 60143.0], [1613.0, 60055.5], [1612.0, 59926.5], [1615.0, 59955.0], [1614.0, 59757.0], [1629.0, 60365.0], [1628.0, 60146.0], [1626.0, 59948.0], [1625.0, 60452.0], [1624.0, 59747.0], [1622.0, 59802.5], [1623.0, 60647.0], [1619.0, 60345.0], [1618.0, 60189.0], [1617.0, 60084.0], [1616.0, 60154.5], [1683.0, 60234.97560975608], [1682.0, 60406.5], [1681.0, 60240.0], [1679.0, 59947.0], [1677.0, 60208.0], [1676.0, 60060.5], [1675.0, 60475.0], [1674.0, 60154.0], [1671.0, 59954.5], [1670.0, 59962.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1554.60303030303, 60253.31818181817]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[33.0, 64378.4], [32.0, 64595.0], [8.0, 64105.0], [2.0, 64109.0], [9.0, 64104.0], [10.0, 64103.0], [11.0, 64118.0], [12.0, 64102.0], [3.0, 64109.0], [15.0, 64231.0], [4.0, 64108.0], [1.0, 64125.0], [17.0, 64626.0], [18.0, 64236.0], [20.0, 64565.0], [5.0, 64092.0], [22.0, 64495.666666666664], [23.0, 64147.0], [6.0, 64106.0], [7.0, 64105.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[19.060606060606055, 64285.42424242423]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[54.0, 60920.0], [56.0, 61546.25], [59.0, 61447.0], [61.0, 61579.0], [62.0, 61942.0], [66.0, 61512.0], [65.0, 62106.0], [64.0, 61908.0], [68.0, 61445.0], [73.0, 61191.833333333336], [79.0, 61513.0], [76.0, 61426.333333333336], [82.0, 61008.0], [81.0, 61997.0], [87.0, 61204.0], [86.0, 60809.0], [85.0, 61502.0], [84.0, 60942.0], [93.0, 61490.0], [114.0, 61441.0], [119.0, 61506.0], [118.0, 61704.0], [116.0, 61375.0], [123.0, 61638.0], [122.0, 61572.0], [121.0, 61836.0], [120.0, 61044.5], [126.0, 61902.0], [125.0, 60979.0], [124.0, 61110.0], [133.0, 61110.0], [130.0, 61506.0], [129.0, 62034.0], [159.0, 61478.0], [157.0, 61346.0], [156.0, 61182.5], [155.0, 61743.0], [167.0, 61280.0], [166.0, 61412.0], [165.0, 61214.0], [164.0, 60885.0], [163.0, 61808.0], [162.0, 61874.0], [161.0, 61049.5], [160.0, 61082.0], [173.0, 60916.5], [172.0, 61790.5], [198.0, 61017.0], [197.0, 61765.0], [196.0, 61501.0], [207.0, 61434.0], [206.0, 61302.0], [205.0, 61170.0], [204.0, 61962.0], [203.0, 60709.0], [202.0, 61896.0], [201.0, 61335.5], [200.0, 61368.0], [215.0, 61423.0], [213.0, 61380.4], [208.0, 60972.0], [221.0, 61445.0], [219.0, 61222.0], [217.0, 61621.0], [216.0, 60698.0], [226.0, 61356.0], [225.0, 60829.0], [235.0, 61422.0], [246.0, 61553.0], [243.0, 61949.0], [240.0, 61157.5], [253.0, 61816.0], [252.0, 61156.0], [248.0, 61025.0], [287.0, 60733.0], [286.0, 61722.0], [285.0, 61392.0], [282.0, 61062.0], [281.0, 60996.5], [279.0, 61095.5], [278.0, 61854.0], [276.0, 61567.333333333336], [293.0, 61259.25], [291.0, 61128.0], [288.0, 61260.0], [319.0, 61365.0], [318.0, 60838.0], [316.0, 61167.0], [315.0, 61497.0], [323.0, 61331.0], [333.0, 61693.0], [331.0, 61430.0], [330.0, 61408.333333333336], [327.0, 60902.5], [326.0, 61628.0], [324.0, 61159.0], [322.0, 60902.0], [320.0, 60705.0], [367.0, 61446.0], [364.0, 61138.0], [363.0, 60809.0], [361.0, 60743.0], [359.0, 61270.0], [358.0, 61271.333333333336], [355.0, 61238.0], [374.0, 61467.0], [371.0, 61311.0], [368.0, 60677.0], [399.0, 61427.0], [396.0, 61087.0], [395.0, 60899.0], [394.0, 60702.0], [414.0, 61206.0], [411.0, 61294.0], [410.0, 60569.0], [409.0, 61228.0], [408.0, 61756.0], [405.0, 61030.0], [404.0, 61074.666666666664], [402.0, 61558.0], [418.0, 61359.0], [446.0, 60621.0], [445.0, 60944.0], [444.0, 60753.0], [442.0, 61313.0], [440.0, 61610.0], [439.0, 61434.0], [437.0, 60556.0], [436.0, 61248.0], [463.0, 61121.0], [461.0, 61452.0], [459.0, 60529.0], [457.0, 60924.0], [456.0, 60990.5], [454.0, 61584.0], [453.0, 61250.85714285714], [476.0, 60988.0], [472.0, 61385.0], [469.0, 61041.0], [468.0, 61121.0], [495.0, 60614.0], [490.0, 61515.0], [488.0, 61780.0], [487.0, 61648.0], [484.0, 60790.5], [481.0, 61252.0], [480.0, 60593.0], [510.0, 61607.0], [509.0, 61178.0], [499.0, 61212.0], [498.0, 61774.0], [507.0, 60734.5], [505.0, 61246.0], [504.0, 61279.0], [503.0, 60683.0], [502.0, 61738.0], [501.0, 60551.0], [500.0, 61212.0], [541.0, 61067.0], [543.0, 61076.5], [528.0, 61540.0], [540.0, 61234.333333333336], [539.0, 60999.0], [538.0, 60584.0], [536.0, 61109.0], [527.0, 61440.0], [513.0, 61045.0], [512.0, 61409.0], [519.0, 61188.333333333336], [518.0, 60760.333333333336], [526.0, 61274.0], [522.0, 61396.0], [521.0, 61094.0], [535.0, 61265.0], [533.0, 61307.333333333336], [531.0, 61122.5], [530.0, 60721.5], [572.0, 60911.0], [573.0, 61304.5], [570.0, 61329.0], [569.0, 60712.0], [568.0, 60614.0], [548.0, 61307.0], [546.0, 61639.0], [545.0, 61232.5], [558.0, 61219.0], [556.0, 61267.0], [554.0, 61335.0], [552.0, 60859.666666666664], [553.0, 60976.0], [567.0, 61101.0], [566.0, 61392.0], [564.0, 60984.0], [561.0, 60909.5], [606.0, 60865.0], [607.0, 60911.0], [604.0, 61621.0], [602.0, 61376.0], [601.0, 61582.0], [576.0, 61188.333333333336], [599.0, 61209.666666666664], [597.0, 61375.0], [595.0, 60928.0], [592.0, 61178.0], [627.0, 60539.0], [637.0, 61390.0], [636.0, 61730.0], [635.0, 61423.0], [614.0, 61307.0], [612.0, 61618.0], [611.0, 60716.0], [609.0, 61595.0], [608.0, 61331.0], [631.0, 61473.5], [630.0, 60515.0], [628.0, 61256.0], [625.0, 61587.0], [621.0, 61187.0], [620.0, 61317.0], [619.0, 61533.0], [618.0, 61182.0], [617.0, 60520.0], [616.0, 60847.0], [670.0, 61243.5], [671.0, 61190.0], [669.0, 60866.0], [667.0, 60928.0], [666.0, 61008.0], [664.0, 60669.0], [654.0, 61321.0], [647.0, 61405.0], [646.0, 61309.0], [645.0, 61601.0], [641.0, 61325.0], [640.0, 60593.0], [651.0, 60736.0], [662.0, 61126.666666666664], [660.0, 61129.0], [657.0, 61107.0], [689.0, 61304.0], [702.0, 60907.0], [703.0, 61352.0], [688.0, 60852.0], [701.0, 61783.5], [700.0, 60627.0], [698.0, 60690.0], [679.0, 61036.0], [676.0, 61116.5], [673.0, 60579.0], [672.0, 60647.0], [686.0, 61072.0], [685.0, 61353.0], [684.0, 60999.0], [681.0, 61534.333333333336], [680.0, 61596.0], [695.0, 60857.0], [694.0, 61054.0], [692.0, 61462.0], [732.0, 61445.666666666664], [734.0, 61060.0], [728.0, 61436.5], [710.0, 61059.5], [708.0, 60880.333333333336], [707.0, 60790.5], [706.0, 60806.0], [705.0, 61721.0], [704.0, 61351.0], [727.0, 61464.5], [726.0, 60595.0], [722.0, 61378.0], [719.0, 60827.5], [718.0, 61041.0], [717.0, 61384.0], [716.0, 61017.0], [714.0, 61399.0], [713.0, 60998.0], [712.0, 61564.0], [761.0, 60657.0], [766.0, 61343.0], [767.0, 61693.0], [754.0, 60667.0], [765.0, 61489.0], [764.0, 60527.0], [763.0, 60541.0], [760.0, 60659.0], [742.0, 61433.0], [741.0, 61138.166666666664], [740.0, 61583.0], [739.0, 60584.0], [738.0, 60706.0], [737.0, 61447.0], [751.0, 60597.0], [750.0, 60790.0], [748.0, 60787.5], [746.0, 61638.0], [745.0, 61628.0], [744.0, 61275.0], [757.0, 60632.0], [756.0, 61284.0], [796.0, 60984.0], [786.0, 61563.0], [784.0, 60642.0], [776.0, 61175.0], [774.0, 61104.0], [773.0, 61123.0], [771.0, 61376.0], [769.0, 61371.0], [828.0, 61759.0], [826.0, 61749.0], [825.0, 61295.0], [823.0, 61238.0], [819.0, 60850.0], [817.0, 61221.0], [814.0, 60855.5], [812.0, 60695.0], [862.0, 60897.0], [847.0, 61486.0], [890.0, 61309.5], [893.0, 61597.0], [891.0, 60641.0], [892.0, 61162.0], [888.0, 61232.0], [874.0, 61496.666666666664], [872.0, 60954.0], [870.0, 61384.0], [866.0, 60764.0], [922.0, 61229.0], [920.0, 61425.0], [919.0, 61769.0], [916.0, 61035.0], [909.0, 61053.0], [943.0, 61216.0], [958.0, 61239.0], [957.0, 61683.0], [955.0, 60761.0], [931.0, 61381.0], [928.0, 61296.0], [945.0, 61694.0], [942.0, 61636.0], [941.0, 61514.0], [940.0, 61032.0], [936.0, 61019.0], [988.0, 60776.5], [989.0, 61304.0], [987.0, 60781.5], [985.0, 60850.0], [984.0, 61149.0], [962.0, 61710.0], [961.0, 60957.0], [975.0, 60965.0], [970.0, 60967.0], [983.0, 60629.0], [981.0, 61611.0], [980.0, 60895.0], [977.0, 60704.0], [1017.0, 61351.0], [1018.0, 61109.166666666664], [1016.0, 60543.0], [996.0, 60735.5], [993.0, 60693.0], [994.0, 61082.0], [1012.0, 61334.0], [1015.0, 60785.0], [1010.0, 61567.0], [1009.0, 60759.0], [1007.0, 61156.0], [1004.0, 61114.0], [1003.0, 61258.0], [1001.0, 61512.5], [1076.0, 61672.0], [1083.0, 61680.0], [1087.0, 60557.0], [1062.0, 61427.5], [1067.0, 61311.0], [1063.0, 61037.0], [1070.0, 61615.0], [1068.0, 61282.0], [1086.0, 60880.0], [1085.0, 60756.0], [1082.0, 60958.0], [1081.0, 60691.0], [1075.0, 60748.0], [1079.0, 60715.0], [1072.0, 60823.0], [1039.0, 60577.0], [1033.0, 60826.0], [1032.0, 60503.0], [1031.0, 60958.0], [1029.0, 60695.0], [1028.0, 60846.333333333336], [1035.0, 60960.0], [1044.0, 60816.0], [1041.0, 60587.0], [1040.0, 60737.5], [1073.0, 61441.0], [1125.0, 60497.0], [1120.0, 60770.0], [1111.0, 60508.0], [1095.0, 60628.0], [1093.0, 60649.0], [1090.0, 60567.0], [1089.0, 61030.0], [1088.0, 60625.0], [1186.0, 61015.0], [1238.0, 61303.16666666667], [1237.0, 61657.0], [1227.0, 61611.0], [1224.0, 61329.42857142857], [1228.0, 61737.0], [1223.0, 61611.0], [1222.0, 61343.8]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[594.7969696969706, 61203.7590909091]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1683.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61940126E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940126E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 60253.31818181817, "minX": 1.61940126E12, "maxY": 64285.42424242423, "series": [{"data": [[1.61940126E12, 61116.80303030304]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940126E12, 60253.31818181817]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940126E12, 64285.42424242423]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940126E12, 61203.7590909091]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940126E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940126E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940126E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940126E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940126E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940126E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 59736.0, "minX": 1.61940126E12, "maxY": 64679.0, "series": [{"data": [[1.61940126E12, 64679.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61940126E12, 61684.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61940126E12, 64209.96]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61940126E12, 61799.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61940126E12, 59736.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61940126E12, 61012.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940126E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60254.5, "minX": 33.0, "maxY": 64205.0, "series": [{"data": [[33.0, 64205.0], [330.0, 60254.5], [1320.0, 61162.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1320.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 33.0, "maxY": 4.9E-324, "series": [{"data": [[33.0, 0.0], [330.0, 0.0], [1320.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1320.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 28.05, "minX": 1.6194012E12, "maxY": 28.05, "series": [{"data": [[1.6194012E12, 28.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6194012E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 28.05, "minX": 1.61940126E12, "maxY": 28.05, "series": [{"data": [[1.61940126E12, 28.05]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940126E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.61940126E12, "maxY": 11.0, "series": [{"data": [[1.61940126E12, 0.55]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61940126E12, 11.0]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61940126E12, 5.5]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61940126E12, 11.0]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940126E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 28.05, "minX": 1.61940126E12, "maxY": 28.05, "series": [{"data": [[1.61940126E12, 28.05]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940126E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

