/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 59494.0, "minX": 0.0, "maxY": 64662.0, "series": [{"data": [[0.0, 60854.0], [0.1, 60854.0], [0.2, 60879.0], [0.3, 60879.0], [0.4, 60880.0], [0.5, 60881.0], [0.6, 60881.0], [0.7, 60881.0], [0.8, 60883.0], [0.9, 60883.0], [1.0, 60883.0], [1.1, 60883.0], [1.2, 60883.0], [1.3, 60884.0], [1.4, 60887.0], [1.5, 60888.0], [1.6, 60888.0], [1.7, 60888.0], [1.8, 60892.0], [1.9, 60894.0], [2.0, 60896.0], [2.1, 60896.0], [2.2, 60898.0], [2.3, 60899.0], [2.4, 60906.0], [2.5, 60908.0], [2.6, 60908.0], [2.7, 60910.0], [2.8, 60910.0], [2.9, 60911.0], [3.0, 60915.0], [3.1, 60915.0], [3.2, 60915.0], [3.3, 60917.0], [3.4, 60918.0], [3.5, 60919.0], [3.6, 60919.0], [3.7, 60921.0], [3.8, 60922.0], [3.9, 60923.0], [4.0, 60924.0], [4.1, 60924.0], [4.2, 60926.0], [4.3, 60927.0], [4.4, 60929.0], [4.5, 60929.0], [4.6, 60929.0], [4.7, 60931.0], [4.8, 60931.0], [4.9, 60933.0], [5.0, 60933.0], [5.1, 60933.0], [5.2, 60934.0], [5.3, 60935.0], [5.4, 60941.0], [5.5, 60943.0], [5.6, 60943.0], [5.7, 60943.0], [5.8, 60944.0], [5.9, 60949.0], [6.0, 60950.0], [6.1, 60950.0], [6.2, 60951.0], [6.3, 60955.0], [6.4, 60958.0], [6.5, 60958.0], [6.6, 60958.0], [6.7, 60962.0], [6.8, 60963.0], [6.9, 60964.0], [7.0, 60964.0], [7.1, 60964.0], [7.2, 60964.0], [7.3, 60964.0], [7.4, 60967.0], [7.5, 60967.0], [7.6, 60967.0], [7.7, 60968.0], [7.8, 60969.0], [7.9, 60969.0], [8.0, 60969.0], [8.1, 60969.0], [8.2, 60970.0], [8.3, 60970.0], [8.4, 60972.0], [8.5, 60972.0], [8.6, 60972.0], [8.7, 60977.0], [8.8, 60982.0], [8.9, 60982.0], [9.0, 60983.0], [9.1, 60983.0], [9.2, 60987.0], [9.3, 60988.0], [9.4, 60993.0], [9.5, 60994.0], [9.6, 60994.0], [9.7, 60994.0], [9.8, 60996.0], [9.9, 60996.0], [10.0, 60999.0], [10.1, 60999.0], [10.2, 61001.0], [10.3, 61002.0], [10.4, 61002.0], [10.5, 61002.0], [10.6, 61002.0], [10.7, 61003.0], [10.8, 61004.0], [10.9, 61007.0], [11.0, 61007.0], [11.1, 61007.0], [11.2, 61008.0], [11.3, 61011.0], [11.4, 61011.0], [11.5, 61012.0], [11.6, 61012.0], [11.7, 61012.0], [11.8, 61014.0], [11.9, 61014.0], [12.0, 61014.0], [12.1, 61014.0], [12.2, 61017.0], [12.3, 61018.0], [12.4, 61018.0], [12.5, 61022.0], [12.6, 61022.0], [12.7, 61022.0], [12.8, 61023.0], [12.9, 61025.0], [13.0, 61027.0], [13.1, 61027.0], [13.2, 61031.0], [13.3, 61034.0], [13.4, 61034.0], [13.5, 61035.0], [13.6, 61035.0], [13.7, 61036.0], [13.8, 61037.0], [13.9, 61042.0], [14.0, 61042.0], [14.1, 61042.0], [14.2, 61042.0], [14.3, 61043.0], [14.4, 61043.0], [14.5, 61044.0], [14.6, 61044.0], [14.7, 61046.0], [14.8, 61047.0], [14.9, 61049.0], [15.0, 61050.0], [15.1, 61050.0], [15.2, 61050.0], [15.3, 61051.0], [15.4, 61051.0], [15.5, 61053.0], [15.6, 61053.0], [15.7, 61054.0], [15.8, 61054.0], [15.9, 61056.0], [16.0, 61056.0], [16.1, 61056.0], [16.2, 61057.0], [16.3, 61058.0], [16.4, 61059.0], [16.5, 61060.0], [16.6, 61060.0], [16.7, 61062.0], [16.8, 61062.0], [16.9, 61064.0], [17.0, 61068.0], [17.1, 61068.0], [17.2, 61072.0], [17.3, 61072.0], [17.4, 61074.0], [17.5, 61076.0], [17.6, 61076.0], [17.7, 61078.0], [17.8, 61079.0], [17.9, 61079.0], [18.0, 61080.0], [18.1, 61080.0], [18.2, 61080.0], [18.3, 61080.0], [18.4, 61080.0], [18.5, 61083.0], [18.6, 61083.0], [18.7, 61084.0], [18.8, 61084.0], [18.9, 61085.0], [19.0, 61087.0], [19.1, 61087.0], [19.2, 61088.0], [19.3, 61091.0], [19.4, 61091.0], [19.5, 61092.0], [19.6, 61092.0], [19.7, 61093.0], [19.8, 61093.0], [19.9, 61094.0], [20.0, 61094.0], [20.1, 61094.0], [20.2, 61095.0], [20.3, 61098.0], [20.4, 61098.0], [20.5, 61099.0], [20.6, 61099.0], [20.7, 61101.0], [20.8, 61102.0], [20.9, 61103.0], [21.0, 61103.0], [21.1, 61103.0], [21.2, 61103.0], [21.3, 61105.0], [21.4, 61109.0], [21.5, 61111.0], [21.6, 61111.0], [21.7, 61113.0], [21.8, 61115.0], [21.9, 61117.0], [22.0, 61119.0], [22.1, 61119.0], [22.2, 61119.0], [22.3, 61121.0], [22.4, 61121.0], [22.5, 61122.0], [22.6, 61122.0], [22.7, 61122.0], [22.8, 61122.0], [22.9, 61123.0], [23.0, 61125.0], [23.1, 61125.0], [23.2, 61125.0], [23.3, 61125.0], [23.4, 61126.0], [23.5, 61126.0], [23.6, 61126.0], [23.7, 61129.0], [23.8, 61130.0], [23.9, 61130.0], [24.0, 61131.0], [24.1, 61131.0], [24.2, 61131.0], [24.3, 61134.0], [24.4, 61135.0], [24.5, 61137.0], [24.6, 61137.0], [24.7, 61140.0], [24.8, 61142.0], [24.9, 61144.0], [25.0, 61144.0], [25.1, 61144.0], [25.2, 61144.0], [25.3, 61146.0], [25.4, 61149.0], [25.5, 61149.0], [25.6, 61149.0], [25.7, 61150.0], [25.8, 61152.0], [25.9, 61153.0], [26.0, 61154.0], [26.1, 61154.0], [26.2, 61155.0], [26.3, 61155.0], [26.4, 61157.0], [26.5, 61158.0], [26.6, 61158.0], [26.7, 61161.0], [26.8, 61162.0], [26.9, 61164.0], [27.0, 61165.0], [27.1, 61165.0], [27.2, 61165.0], [27.3, 61165.0], [27.4, 61166.0], [27.5, 61166.0], [27.6, 61166.0], [27.7, 61167.0], [27.8, 61168.0], [27.9, 61169.0], [28.0, 61169.0], [28.1, 61169.0], [28.2, 61170.0], [28.3, 61172.0], [28.4, 61172.0], [28.5, 61173.0], [28.6, 61173.0], [28.7, 61174.0], [28.8, 61177.0], [28.9, 61177.0], [29.0, 61177.0], [29.1, 61177.0], [29.2, 61181.0], [29.3, 61182.0], [29.4, 61184.0], [29.5, 61185.0], [29.6, 61185.0], [29.7, 61187.0], [29.8, 61190.0], [29.9, 61192.0], [30.0, 61193.0], [30.1, 61193.0], [30.2, 61196.0], [30.3, 61196.0], [30.4, 61198.0], [30.5, 61199.0], [30.6, 61199.0], [30.7, 61199.0], [30.8, 61200.0], [30.9, 61201.0], [31.0, 61201.0], [31.1, 61201.0], [31.2, 61202.0], [31.3, 61205.0], [31.4, 61207.0], [31.5, 61209.0], [31.6, 61209.0], [31.7, 61209.0], [31.8, 61209.0], [31.9, 61210.0], [32.0, 61211.0], [32.1, 61211.0], [32.2, 61212.0], [32.3, 61212.0], [32.4, 61213.0], [32.5, 61213.0], [32.6, 61213.0], [32.7, 61214.0], [32.8, 61215.0], [32.9, 61218.0], [33.0, 61219.0], [33.1, 61219.0], [33.2, 61221.0], [33.3, 61222.0], [33.4, 61222.0], [33.5, 61223.0], [33.6, 61223.0], [33.7, 61223.0], [33.8, 61223.0], [33.9, 61224.0], [34.0, 61224.0], [34.1, 61224.0], [34.2, 61224.0], [34.3, 61225.0], [34.4, 61226.0], [34.5, 61226.0], [34.6, 61226.0], [34.7, 61228.0], [34.8, 61229.0], [34.9, 61232.0], [35.0, 61232.0], [35.1, 61232.0], [35.2, 61234.0], [35.3, 61234.0], [35.4, 61234.0], [35.5, 61237.0], [35.6, 61237.0], [35.7, 61237.0], [35.8, 61237.0], [35.9, 61237.0], [36.0, 61239.0], [36.1, 61239.0], [36.2, 61239.0], [36.3, 61240.0], [36.4, 61241.0], [36.5, 61243.0], [36.6, 61243.0], [36.7, 61244.0], [36.8, 61246.0], [36.9, 61247.0], [37.0, 61249.0], [37.1, 61249.0], [37.2, 61252.0], [37.3, 61253.0], [37.4, 61254.0], [37.5, 61254.0], [37.6, 61254.0], [37.7, 61255.0], [37.8, 61255.0], [37.9, 61255.0], [38.0, 61256.0], [38.1, 61256.0], [38.2, 61256.0], [38.3, 61257.0], [38.4, 61259.0], [38.5, 61260.0], [38.6, 61260.0], [38.7, 61261.0], [38.8, 61262.0], [38.9, 61263.0], [39.0, 61264.0], [39.1, 61264.0], [39.2, 61265.0], [39.3, 61265.0], [39.4, 61266.0], [39.5, 61267.0], [39.6, 61267.0], [39.7, 61269.0], [39.8, 61272.0], [39.9, 61273.0], [40.0, 61275.0], [40.1, 61275.0], [40.2, 61276.0], [40.3, 61277.0], [40.4, 61277.0], [40.5, 61278.0], [40.6, 61278.0], [40.7, 61280.0], [40.8, 61280.0], [40.9, 61281.0], [41.0, 61283.0], [41.1, 61283.0], [41.2, 61283.0], [41.3, 61284.0], [41.4, 61285.0], [41.5, 61286.0], [41.6, 61286.0], [41.7, 61286.0], [41.8, 61287.0], [41.9, 61288.0], [42.0, 61288.0], [42.1, 61288.0], [42.2, 61288.0], [42.3, 61289.0], [42.4, 61292.0], [42.5, 61292.0], [42.6, 61292.0], [42.7, 61292.0], [42.8, 61292.0], [42.9, 61292.0], [43.0, 61293.0], [43.1, 61293.0], [43.2, 61295.0], [43.3, 61295.0], [43.4, 61296.0], [43.5, 61296.0], [43.6, 61296.0], [43.7, 61298.0], [43.8, 61299.0], [43.9, 61299.0], [44.0, 61300.0], [44.1, 61300.0], [44.2, 61302.0], [44.3, 61303.0], [44.4, 61304.0], [44.5, 61304.0], [44.6, 61304.0], [44.7, 61307.0], [44.8, 61308.0], [44.9, 61308.0], [45.0, 61309.0], [45.1, 61309.0], [45.2, 61309.0], [45.3, 61310.0], [45.4, 61311.0], [45.5, 61312.0], [45.6, 61312.0], [45.7, 61312.0], [45.8, 61314.0], [45.9, 61315.0], [46.0, 61316.0], [46.1, 61316.0], [46.2, 61316.0], [46.3, 61317.0], [46.4, 61319.0], [46.5, 61321.0], [46.6, 61321.0], [46.7, 61322.0], [46.8, 61323.0], [46.9, 61323.0], [47.0, 61332.0], [47.1, 61332.0], [47.2, 61332.0], [47.3, 61333.0], [47.4, 61333.0], [47.5, 61334.0], [47.6, 61334.0], [47.7, 61334.0], [47.8, 61336.0], [47.9, 61336.0], [48.0, 61336.0], [48.1, 61336.0], [48.2, 61336.0], [48.3, 61337.0], [48.4, 61339.0], [48.5, 61340.0], [48.6, 61340.0], [48.7, 61343.0], [48.8, 61343.0], [48.9, 61343.0], [49.0, 61344.0], [49.1, 61344.0], [49.2, 61346.0], [49.3, 61348.0], [49.4, 61351.0], [49.5, 61351.0], [49.6, 61351.0], [49.7, 61352.0], [49.8, 61352.0], [49.9, 61353.0], [50.0, 61354.0], [50.1, 61354.0], [50.2, 61358.0], [50.3, 61359.0], [50.4, 61360.0], [50.5, 61361.0], [50.6, 61361.0], [50.7, 61362.0], [50.8, 61362.0], [50.9, 61362.0], [51.0, 61363.0], [51.1, 61363.0], [51.2, 61364.0], [51.3, 61365.0], [51.4, 61368.0], [51.5, 61369.0], [51.6, 61369.0], [51.7, 61370.0], [51.8, 61370.0], [51.9, 61371.0], [52.0, 61371.0], [52.1, 61371.0], [52.2, 61372.0], [52.3, 61373.0], [52.4, 61374.0], [52.5, 61375.0], [52.6, 61375.0], [52.7, 61375.0], [52.8, 61376.0], [52.9, 61379.0], [53.0, 61379.0], [53.1, 61379.0], [53.2, 61380.0], [53.3, 61380.0], [53.4, 61380.0], [53.5, 61382.0], [53.6, 61382.0], [53.7, 61382.0], [53.8, 61383.0], [53.9, 61384.0], [54.0, 61386.0], [54.1, 61386.0], [54.2, 61389.0], [54.3, 61389.0], [54.4, 61390.0], [54.5, 61391.0], [54.6, 61391.0], [54.7, 61393.0], [54.8, 61393.0], [54.9, 61393.0], [55.0, 61394.0], [55.1, 61394.0], [55.2, 61394.0], [55.3, 61398.0], [55.4, 61399.0], [55.5, 61401.0], [55.6, 61401.0], [55.7, 61401.0], [55.8, 61401.0], [55.9, 61402.0], [56.0, 61402.0], [56.1, 61402.0], [56.2, 61402.0], [56.3, 61402.0], [56.4, 61403.0], [56.5, 61404.0], [56.6, 61404.0], [56.7, 61405.0], [56.8, 61406.0], [56.9, 61408.0], [57.0, 61408.0], [57.1, 61408.0], [57.2, 61409.0], [57.3, 61409.0], [57.4, 61410.0], [57.5, 61412.0], [57.6, 61412.0], [57.7, 61413.0], [57.8, 61414.0], [57.9, 61415.0], [58.0, 61415.0], [58.1, 61415.0], [58.2, 61415.0], [58.3, 61417.0], [58.4, 61418.0], [58.5, 61419.0], [58.6, 61419.0], [58.7, 61419.0], [58.8, 61419.0], [58.9, 61422.0], [59.0, 61424.0], [59.1, 61424.0], [59.2, 61425.0], [59.3, 61425.0], [59.4, 61425.0], [59.5, 61427.0], [59.6, 61427.0], [59.7, 61430.0], [59.8, 61433.0], [59.9, 61435.0], [60.0, 61436.0], [60.1, 61436.0], [60.2, 61437.0], [60.3, 61438.0], [60.4, 61439.0], [60.5, 61440.0], [60.6, 61440.0], [60.7, 61441.0], [60.8, 61441.0], [60.9, 61441.0], [61.0, 61442.0], [61.1, 61442.0], [61.2, 61443.0], [61.3, 61444.0], [61.4, 61445.0], [61.5, 61447.0], [61.6, 61447.0], [61.7, 61448.0], [61.8, 61450.0], [61.9, 61451.0], [62.0, 61451.0], [62.1, 61451.0], [62.2, 61452.0], [62.3, 61452.0], [62.4, 61454.0], [62.5, 61454.0], [62.6, 61454.0], [62.7, 61455.0], [62.8, 61456.0], [62.9, 61456.0], [63.0, 61456.0], [63.1, 61456.0], [63.2, 61461.0], [63.3, 61463.0], [63.4, 61463.0], [63.5, 61463.0], [63.6, 61463.0], [63.7, 61464.0], [63.8, 61464.0], [63.9, 61464.0], [64.0, 61465.0], [64.1, 61465.0], [64.2, 61466.0], [64.3, 61466.0], [64.4, 61469.0], [64.5, 61469.0], [64.6, 61469.0], [64.7, 61470.0], [64.8, 61471.0], [64.9, 61472.0], [65.0, 61474.0], [65.1, 61474.0], [65.2, 61474.0], [65.3, 61475.0], [65.4, 61477.0], [65.5, 61477.0], [65.6, 61477.0], [65.7, 61477.0], [65.8, 61478.0], [65.9, 61479.0], [66.0, 61481.0], [66.1, 61481.0], [66.2, 61481.0], [66.3, 61481.0], [66.4, 61481.0], [66.5, 61483.0], [66.6, 61483.0], [66.7, 61483.0], [66.8, 61483.0], [66.9, 61483.0], [67.0, 61485.0], [67.1, 61485.0], [67.2, 61485.0], [67.3, 61488.0], [67.4, 61489.0], [67.5, 61489.0], [67.6, 61489.0], [67.7, 61489.0], [67.8, 61491.0], [67.9, 61492.0], [68.0, 61493.0], [68.1, 61493.0], [68.2, 61494.0], [68.3, 61496.0], [68.4, 61498.0], [68.5, 61502.0], [68.6, 61502.0], [68.7, 61502.0], [68.8, 61503.0], [68.9, 61503.0], [69.0, 61504.0], [69.1, 61504.0], [69.2, 61504.0], [69.3, 61504.0], [69.4, 61506.0], [69.5, 61506.0], [69.6, 61506.0], [69.7, 61509.0], [69.8, 61510.0], [69.9, 61513.0], [70.0, 61513.0], [70.1, 61513.0], [70.2, 61515.0], [70.3, 61517.0], [70.4, 61521.0], [70.5, 61522.0], [70.6, 61522.0], [70.7, 61523.0], [70.8, 61523.0], [70.9, 61525.0], [71.0, 61526.0], [71.1, 61526.0], [71.2, 61526.0], [71.3, 61526.0], [71.4, 61527.0], [71.5, 61528.0], [71.6, 61528.0], [71.7, 61529.0], [71.8, 61531.0], [71.9, 61532.0], [72.0, 61532.0], [72.1, 61532.0], [72.2, 61533.0], [72.3, 61533.0], [72.4, 61533.0], [72.5, 61533.0], [72.6, 61533.0], [72.7, 61534.0], [72.8, 61534.0], [72.9, 61535.0], [73.0, 61537.0], [73.1, 61537.0], [73.2, 61537.0], [73.3, 61539.0], [73.4, 61540.0], [73.5, 61540.0], [73.6, 61540.0], [73.7, 61541.0], [73.8, 61542.0], [73.9, 61542.0], [74.0, 61544.0], [74.1, 61544.0], [74.2, 61544.0], [74.3, 61544.0], [74.4, 61546.0], [74.5, 61547.0], [74.6, 61547.0], [74.7, 61551.0], [74.8, 61551.0], [74.9, 61551.0], [75.0, 61551.0], [75.1, 61551.0], [75.2, 61552.0], [75.3, 61554.0], [75.4, 61554.0], [75.5, 61557.0], [75.6, 61557.0], [75.7, 61557.0], [75.8, 61558.0], [75.9, 61559.0], [76.0, 61561.0], [76.1, 61561.0], [76.2, 61561.0], [76.3, 61563.0], [76.4, 61566.0], [76.5, 61566.0], [76.6, 61566.0], [76.7, 61568.0], [76.8, 61568.0], [76.9, 61569.0], [77.0, 61569.0], [77.1, 61569.0], [77.2, 61569.0], [77.3, 61571.0], [77.4, 61571.0], [77.5, 61572.0], [77.6, 61572.0], [77.7, 61573.0], [77.8, 61575.0], [77.9, 61576.0], [78.0, 61576.0], [78.1, 61576.0], [78.2, 61579.0], [78.3, 61581.0], [78.4, 61581.0], [78.5, 61582.0], [78.6, 61582.0], [78.7, 61583.0], [78.8, 61583.0], [78.9, 61583.0], [79.0, 61584.0], [79.1, 61584.0], [79.2, 61587.0], [79.3, 61592.0], [79.4, 61592.0], [79.5, 61594.0], [79.6, 61594.0], [79.7, 61594.0], [79.8, 61597.0], [79.9, 61598.0], [80.0, 61599.0], [80.1, 61599.0], [80.2, 61600.0], [80.3, 61600.0], [80.4, 61600.0], [80.5, 61600.0], [80.6, 61600.0], [80.7, 61601.0], [80.8, 61601.0], [80.9, 61603.0], [81.0, 61603.0], [81.1, 61603.0], [81.2, 61603.0], [81.3, 61603.0], [81.4, 61604.0], [81.5, 61604.0], [81.6, 61604.0], [81.7, 61605.0], [81.8, 61606.0], [81.9, 61607.0], [82.0, 61607.0], [82.1, 61607.0], [82.2, 61609.0], [82.3, 61609.0], [82.4, 61610.0], [82.5, 61610.0], [82.6, 61610.0], [82.7, 61612.0], [82.8, 61612.0], [82.9, 61612.0], [83.0, 61614.0], [83.1, 61614.0], [83.2, 61615.0], [83.3, 61616.0], [83.4, 61618.0], [83.5, 61620.0], [83.6, 61620.0], [83.7, 61623.0], [83.8, 61623.0], [83.9, 61624.0], [84.0, 61625.0], [84.1, 61625.0], [84.2, 61625.0], [84.3, 61626.0], [84.4, 61627.0], [84.5, 61629.0], [84.6, 61629.0], [84.7, 61629.0], [84.8, 61630.0], [84.9, 61630.0], [85.0, 61632.0], [85.1, 61632.0], [85.2, 61633.0], [85.3, 61634.0], [85.4, 61635.0], [85.5, 61636.0], [85.6, 61636.0], [85.7, 61637.0], [85.8, 61639.0], [85.9, 61642.0], [86.0, 61642.0], [86.1, 61642.0], [86.2, 61642.0], [86.3, 61643.0], [86.4, 61643.0], [86.5, 61645.0], [86.6, 61645.0], [86.7, 61646.0], [86.8, 61647.0], [86.9, 61648.0], [87.0, 61650.0], [87.1, 61650.0], [87.2, 61650.0], [87.3, 61650.0], [87.4, 61650.0], [87.5, 61651.0], [87.6, 61651.0], [87.7, 61652.0], [87.8, 61654.0], [87.9, 61654.0], [88.0, 61654.0], [88.1, 61654.0], [88.2, 61656.0], [88.3, 61656.0], [88.4, 61658.0], [88.5, 61659.0], [88.6, 61659.0], [88.7, 61659.0], [88.8, 61662.0], [88.9, 61662.0], [89.0, 61663.0], [89.1, 61663.0], [89.2, 61664.0], [89.3, 61664.0], [89.4, 61664.0], [89.5, 61670.0], [89.6, 61670.0], [89.7, 61671.0], [89.8, 61672.0], [89.9, 61673.0], [90.0, 61675.0], [90.1, 61675.0], [90.2, 61677.0], [90.3, 61678.0], [90.4, 61678.0], [90.5, 61678.0], [90.6, 61678.0], [90.7, 61681.0], [90.8, 61682.0], [90.9, 61683.0], [91.0, 61690.0], [91.1, 61690.0], [91.2, 61703.0], [91.3, 61703.0], [91.4, 61703.0], [91.5, 61704.0], [91.6, 61704.0], [91.7, 61705.0], [91.8, 61705.0], [91.9, 61706.0], [92.0, 61712.0], [92.1, 61712.0], [92.2, 61714.0], [92.3, 61716.0], [92.4, 61720.0], [92.5, 61721.0], [92.6, 61721.0], [92.7, 61730.0], [92.8, 61732.0], [92.9, 61733.0], [93.0, 61733.0], [93.1, 61733.0], [93.2, 61734.0], [93.3, 61739.0], [93.4, 61742.0], [93.5, 61743.0], [93.6, 61743.0], [93.7, 61746.0], [93.8, 61749.0], [93.9, 61754.0], [94.0, 61756.0], [94.1, 61756.0], [94.2, 61760.0], [94.3, 61761.0], [94.4, 61763.0], [94.5, 61766.0], [94.6, 61766.0], [94.7, 61772.0], [94.8, 61775.0], [94.9, 61781.0], [95.0, 61782.0], [95.1, 61782.0], [95.2, 61785.0], [95.3, 61792.0], [95.4, 61795.0], [95.5, 61801.0], [95.6, 61801.0], [95.7, 61804.0], [95.8, 61811.0], [95.9, 61813.0], [96.0, 61820.0], [96.1, 61820.0], [96.2, 61822.0], [96.3, 61824.0], [96.4, 61827.0], [96.5, 61829.0], [96.6, 61829.0], [96.7, 61832.0], [96.8, 61834.0], [96.9, 61837.0], [97.0, 61837.0], [97.1, 61837.0], [97.2, 61863.0], [97.3, 61864.0], [97.4, 61873.0], [97.5, 61878.0], [97.6, 61878.0], [97.7, 61881.0], [97.8, 61882.0], [97.9, 61886.0], [98.0, 61887.0], [98.1, 61887.0], [98.2, 61892.0], [98.3, 61902.0], [98.4, 61906.0], [98.5, 61910.0], [98.6, 61910.0], [98.7, 61917.0], [98.8, 61921.0], [98.9, 61932.0], [99.0, 61949.0], [99.1, 61949.0], [99.2, 61955.0], [99.3, 61961.0], [99.4, 61969.0], [99.5, 61992.0], [99.6, 61992.0], [99.7, 61996.0], [99.8, 62021.0], [99.9, 62049.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 59494.0], [0.1, 59494.0], [0.2, 59494.0], [0.3, 59495.0], [0.4, 59495.0], [0.5, 59499.0], [0.6, 59499.0], [0.7, 59499.0], [0.8, 59500.0], [0.9, 59500.0], [1.0, 59501.0], [1.1, 59501.0], [1.2, 59501.0], [1.3, 59504.0], [1.4, 59504.0], [1.5, 59505.0], [1.6, 59505.0], [1.7, 59505.0], [1.8, 59508.0], [1.9, 59508.0], [2.0, 59514.0], [2.1, 59514.0], [2.2, 59514.0], [2.3, 59518.0], [2.4, 59518.0], [2.5, 59519.0], [2.6, 59519.0], [2.7, 59519.0], [2.8, 59522.0], [2.9, 59522.0], [3.0, 59523.0], [3.1, 59523.0], [3.2, 59523.0], [3.3, 59524.0], [3.4, 59524.0], [3.5, 59525.0], [3.6, 59525.0], [3.7, 59525.0], [3.8, 59531.0], [3.9, 59531.0], [4.0, 59533.0], [4.1, 59533.0], [4.2, 59533.0], [4.3, 59535.0], [4.4, 59535.0], [4.5, 59537.0], [4.6, 59537.0], [4.7, 59537.0], [4.8, 59541.0], [4.9, 59541.0], [5.0, 59545.0], [5.1, 59545.0], [5.2, 59545.0], [5.3, 59546.0], [5.4, 59546.0], [5.5, 59554.0], [5.6, 59554.0], [5.7, 59554.0], [5.8, 59560.0], [5.9, 59560.0], [6.0, 59561.0], [6.1, 59561.0], [6.2, 59561.0], [6.3, 59563.0], [6.4, 59563.0], [6.5, 59565.0], [6.6, 59565.0], [6.7, 59565.0], [6.8, 59575.0], [6.9, 59575.0], [7.0, 59587.0], [7.1, 59587.0], [7.2, 59587.0], [7.3, 59599.0], [7.4, 59599.0], [7.5, 59603.0], [7.6, 59603.0], [7.7, 59603.0], [7.8, 59608.0], [7.9, 59608.0], [8.0, 59613.0], [8.1, 59613.0], [8.2, 59613.0], [8.3, 59619.0], [8.4, 59619.0], [8.5, 59620.0], [8.6, 59620.0], [8.7, 59620.0], [8.8, 59626.0], [8.9, 59626.0], [9.0, 59627.0], [9.1, 59627.0], [9.2, 59627.0], [9.3, 59631.0], [9.4, 59631.0], [9.5, 59632.0], [9.6, 59632.0], [9.7, 59632.0], [9.8, 59633.0], [9.9, 59633.0], [10.0, 59635.0], [10.1, 59635.0], [10.2, 59635.0], [10.3, 59637.0], [10.4, 59637.0], [10.5, 59639.0], [10.6, 59639.0], [10.7, 59639.0], [10.8, 59643.0], [10.9, 59643.0], [11.0, 59645.0], [11.1, 59645.0], [11.2, 59645.0], [11.3, 59648.0], [11.4, 59648.0], [11.5, 59649.0], [11.6, 59649.0], [11.7, 59649.0], [11.8, 59652.0], [11.9, 59652.0], [12.0, 59654.0], [12.1, 59654.0], [12.2, 59654.0], [12.3, 59655.0], [12.4, 59655.0], [12.5, 59656.0], [12.6, 59656.0], [12.7, 59656.0], [12.8, 59660.0], [12.9, 59660.0], [13.0, 59660.0], [13.1, 59660.0], [13.2, 59660.0], [13.3, 59663.0], [13.4, 59663.0], [13.5, 59668.0], [13.6, 59668.0], [13.7, 59668.0], [13.8, 59671.0], [13.9, 59671.0], [14.0, 59672.0], [14.1, 59672.0], [14.2, 59672.0], [14.3, 59675.0], [14.4, 59675.0], [14.5, 59679.0], [14.6, 59679.0], [14.7, 59679.0], [14.8, 59680.0], [14.9, 59680.0], [15.0, 59691.0], [15.1, 59691.0], [15.2, 59691.0], [15.3, 59695.0], [15.4, 59695.0], [15.5, 59704.0], [15.6, 59704.0], [15.7, 59704.0], [15.8, 59707.0], [15.9, 59707.0], [16.0, 59721.0], [16.1, 59721.0], [16.2, 59721.0], [16.3, 59722.0], [16.4, 59722.0], [16.5, 59730.0], [16.6, 59730.0], [16.7, 59730.0], [16.8, 59731.0], [16.9, 59731.0], [17.0, 59734.0], [17.1, 59734.0], [17.2, 59734.0], [17.3, 59742.0], [17.4, 59742.0], [17.5, 59743.0], [17.6, 59743.0], [17.7, 59743.0], [17.8, 59744.0], [17.9, 59744.0], [18.0, 59745.0], [18.1, 59745.0], [18.2, 59745.0], [18.3, 59748.0], [18.4, 59748.0], [18.5, 59749.0], [18.6, 59749.0], [18.7, 59749.0], [18.8, 59754.0], [18.9, 59754.0], [19.0, 59759.0], [19.1, 59759.0], [19.2, 59759.0], [19.3, 59759.0], [19.4, 59759.0], [19.5, 59759.0], [19.6, 59759.0], [19.7, 59759.0], [19.8, 59760.0], [19.9, 59760.0], [20.0, 59760.0], [20.1, 59760.0], [20.2, 59760.0], [20.3, 59762.0], [20.4, 59762.0], [20.5, 59764.0], [20.6, 59764.0], [20.7, 59764.0], [20.8, 59771.0], [20.9, 59771.0], [21.0, 59771.0], [21.1, 59771.0], [21.2, 59771.0], [21.3, 59772.0], [21.4, 59772.0], [21.5, 59773.0], [21.6, 59773.0], [21.7, 59773.0], [21.8, 59775.0], [21.9, 59775.0], [22.0, 59776.0], [22.1, 59776.0], [22.2, 59776.0], [22.3, 59779.0], [22.4, 59779.0], [22.5, 59782.0], [22.6, 59782.0], [22.7, 59782.0], [22.8, 59782.0], [22.9, 59782.0], [23.0, 59784.0], [23.1, 59784.0], [23.2, 59784.0], [23.3, 59787.0], [23.4, 59787.0], [23.5, 59787.0], [23.6, 59787.0], [23.7, 59787.0], [23.8, 59788.0], [23.9, 59788.0], [24.0, 59799.0], [24.1, 59799.0], [24.2, 59799.0], [24.3, 59803.0], [24.4, 59803.0], [24.5, 59810.0], [24.6, 59810.0], [24.7, 59810.0], [24.8, 59814.0], [24.9, 59814.0], [25.0, 59823.0], [25.1, 59823.0], [25.2, 59823.0], [25.3, 59826.0], [25.4, 59826.0], [25.5, 59828.0], [25.6, 59828.0], [25.7, 59828.0], [25.8, 59840.0], [25.9, 59840.0], [26.0, 59842.0], [26.1, 59842.0], [26.2, 59842.0], [26.3, 59849.0], [26.4, 59849.0], [26.5, 59852.0], [26.6, 59852.0], [26.7, 59852.0], [26.8, 59853.0], [26.9, 59853.0], [27.0, 59854.0], [27.1, 59854.0], [27.2, 59854.0], [27.3, 59855.0], [27.4, 59855.0], [27.5, 59862.0], [27.6, 59862.0], [27.7, 59862.0], [27.8, 59864.0], [27.9, 59864.0], [28.0, 59866.0], [28.1, 59866.0], [28.2, 59866.0], [28.3, 59868.0], [28.4, 59868.0], [28.5, 59870.0], [28.6, 59870.0], [28.7, 59870.0], [28.8, 59874.0], [28.9, 59874.0], [29.0, 59875.0], [29.1, 59875.0], [29.2, 59875.0], [29.3, 59879.0], [29.4, 59879.0], [29.5, 59879.0], [29.6, 59879.0], [29.7, 59879.0], [29.8, 59880.0], [29.9, 59880.0], [30.0, 59884.0], [30.1, 59884.0], [30.2, 59884.0], [30.3, 59885.0], [30.4, 59885.0], [30.5, 59887.0], [30.6, 59887.0], [30.7, 59887.0], [30.8, 59888.0], [30.9, 59888.0], [31.0, 59892.0], [31.1, 59892.0], [31.2, 59892.0], [31.3, 59894.0], [31.4, 59894.0], [31.5, 59898.0], [31.6, 59898.0], [31.7, 59898.0], [31.8, 59901.0], [31.9, 59901.0], [32.0, 59901.0], [32.1, 59901.0], [32.2, 59901.0], [32.3, 59903.0], [32.4, 59903.0], [32.5, 59905.0], [32.6, 59905.0], [32.7, 59905.0], [32.8, 59906.0], [32.9, 59906.0], [33.0, 59907.0], [33.1, 59907.0], [33.2, 59907.0], [33.3, 59909.0], [33.4, 59909.0], [33.5, 59909.0], [33.6, 59909.0], [33.7, 59909.0], [33.8, 59916.0], [33.9, 59916.0], [34.0, 59916.0], [34.1, 59916.0], [34.2, 59916.0], [34.3, 59919.0], [34.4, 59919.0], [34.5, 59921.0], [34.6, 59921.0], [34.7, 59921.0], [34.8, 59922.0], [34.9, 59922.0], [35.0, 59934.0], [35.1, 59934.0], [35.2, 59934.0], [35.3, 59943.0], [35.4, 59943.0], [35.5, 59946.0], [35.6, 59946.0], [35.7, 59946.0], [35.8, 59961.0], [35.9, 59961.0], [36.0, 59963.0], [36.1, 59963.0], [36.2, 59963.0], [36.3, 59967.0], [36.4, 59967.0], [36.5, 59970.0], [36.6, 59970.0], [36.7, 59970.0], [36.8, 59971.0], [36.9, 59971.0], [37.0, 59972.0], [37.1, 59972.0], [37.2, 59972.0], [37.3, 59973.0], [37.4, 59973.0], [37.5, 59975.0], [37.6, 59975.0], [37.7, 59975.0], [37.8, 59986.0], [37.9, 59986.0], [38.0, 59990.0], [38.1, 59990.0], [38.2, 59990.0], [38.3, 59992.0], [38.4, 59992.0], [38.5, 59995.0], [38.6, 59995.0], [38.7, 59995.0], [38.8, 59996.0], [38.9, 59996.0], [39.0, 59996.0], [39.1, 59996.0], [39.2, 59996.0], [39.3, 59998.0], [39.4, 59998.0], [39.5, 59998.0], [39.6, 59998.0], [39.7, 59998.0], [39.8, 59999.0], [39.9, 59999.0], [40.0, 60001.0], [40.1, 60001.0], [40.2, 60001.0], [40.3, 60003.0], [40.4, 60003.0], [40.5, 60004.0], [40.6, 60004.0], [40.7, 60004.0], [40.8, 60008.0], [40.9, 60008.0], [41.0, 60009.0], [41.1, 60009.0], [41.2, 60009.0], [41.3, 60011.0], [41.4, 60011.0], [41.5, 60014.0], [41.6, 60014.0], [41.7, 60014.0], [41.8, 60017.0], [41.9, 60017.0], [42.0, 60017.0], [42.1, 60017.0], [42.2, 60017.0], [42.3, 60017.0], [42.4, 60017.0], [42.5, 60021.0], [42.6, 60021.0], [42.7, 60021.0], [42.8, 60026.0], [42.9, 60026.0], [43.0, 60028.0], [43.1, 60028.0], [43.2, 60028.0], [43.3, 60029.0], [43.4, 60029.0], [43.5, 60032.0], [43.6, 60032.0], [43.7, 60032.0], [43.8, 60037.0], [43.9, 60037.0], [44.0, 60038.0], [44.1, 60038.0], [44.2, 60038.0], [44.3, 60041.0], [44.4, 60041.0], [44.5, 60041.0], [44.6, 60041.0], [44.7, 60041.0], [44.8, 60044.0], [44.9, 60044.0], [45.0, 60055.0], [45.1, 60055.0], [45.2, 60055.0], [45.3, 60064.0], [45.4, 60064.0], [45.5, 60067.0], [45.6, 60067.0], [45.7, 60067.0], [45.8, 60080.0], [45.9, 60080.0], [46.0, 60087.0], [46.1, 60087.0], [46.2, 60087.0], [46.3, 60092.0], [46.4, 60092.0], [46.5, 60093.0], [46.6, 60093.0], [46.7, 60093.0], [46.8, 60094.0], [46.9, 60094.0], [47.0, 60095.0], [47.1, 60095.0], [47.2, 60095.0], [47.3, 60096.0], [47.4, 60096.0], [47.5, 60104.0], [47.6, 60104.0], [47.7, 60104.0], [47.8, 60105.0], [47.9, 60105.0], [48.0, 60107.0], [48.1, 60107.0], [48.2, 60107.0], [48.3, 60108.0], [48.4, 60108.0], [48.5, 60113.0], [48.6, 60113.0], [48.7, 60113.0], [48.8, 60115.0], [48.9, 60115.0], [49.0, 60119.0], [49.1, 60119.0], [49.2, 60119.0], [49.3, 60120.0], [49.4, 60120.0], [49.5, 60122.0], [49.6, 60122.0], [49.7, 60122.0], [49.8, 60124.0], [49.9, 60124.0], [50.0, 60124.0], [50.1, 60124.0], [50.2, 60124.0], [50.3, 60127.0], [50.4, 60127.0], [50.5, 60128.0], [50.6, 60128.0], [50.7, 60128.0], [50.8, 60129.0], [50.9, 60129.0], [51.0, 60131.0], [51.1, 60131.0], [51.2, 60131.0], [51.3, 60133.0], [51.4, 60133.0], [51.5, 60134.0], [51.6, 60134.0], [51.7, 60134.0], [51.8, 60141.0], [51.9, 60141.0], [52.0, 60143.0], [52.1, 60143.0], [52.2, 60143.0], [52.3, 60143.0], [52.4, 60143.0], [52.5, 60144.0], [52.6, 60144.0], [52.7, 60144.0], [52.8, 60146.0], [52.9, 60146.0], [53.0, 60147.0], [53.1, 60147.0], [53.2, 60147.0], [53.3, 60148.0], [53.4, 60148.0], [53.5, 60150.0], [53.6, 60150.0], [53.7, 60150.0], [53.8, 60154.0], [53.9, 60154.0], [54.0, 60160.0], [54.1, 60160.0], [54.2, 60160.0], [54.3, 60160.0], [54.4, 60160.0], [54.5, 60163.0], [54.6, 60163.0], [54.7, 60163.0], [54.8, 60172.0], [54.9, 60172.0], [55.0, 60175.0], [55.1, 60175.0], [55.2, 60175.0], [55.3, 60187.0], [55.4, 60187.0], [55.5, 60199.0], [55.6, 60199.0], [55.7, 60199.0], [55.8, 60201.0], [55.9, 60201.0], [56.0, 60204.0], [56.1, 60204.0], [56.2, 60204.0], [56.3, 60213.0], [56.4, 60213.0], [56.5, 60214.0], [56.6, 60214.0], [56.7, 60214.0], [56.8, 60220.0], [56.9, 60220.0], [57.0, 60221.0], [57.1, 60221.0], [57.2, 60221.0], [57.3, 60222.0], [57.4, 60222.0], [57.5, 60223.0], [57.6, 60223.0], [57.7, 60223.0], [57.8, 60227.0], [57.9, 60227.0], [58.0, 60228.0], [58.1, 60228.0], [58.2, 60228.0], [58.3, 60230.0], [58.4, 60230.0], [58.5, 60235.0], [58.6, 60235.0], [58.7, 60235.0], [58.8, 60238.0], [58.9, 60238.0], [59.0, 60239.0], [59.1, 60239.0], [59.2, 60239.0], [59.3, 60240.0], [59.4, 60240.0], [59.5, 60240.0], [59.6, 60240.0], [59.7, 60240.0], [59.8, 60242.0], [59.9, 60242.0], [60.0, 60242.0], [60.1, 60242.0], [60.2, 60242.0], [60.3, 60245.0], [60.4, 60245.0], [60.5, 60246.0], [60.6, 60246.0], [60.7, 60246.0], [60.8, 60248.0], [60.9, 60248.0], [61.0, 60255.0], [61.1, 60255.0], [61.2, 60255.0], [61.3, 60255.0], [61.4, 60255.0], [61.5, 60256.0], [61.6, 60256.0], [61.7, 60256.0], [61.8, 60258.0], [61.9, 60258.0], [62.0, 60260.0], [62.1, 60260.0], [62.2, 60260.0], [62.3, 60260.0], [62.4, 60260.0], [62.5, 60261.0], [62.6, 60261.0], [62.7, 60261.0], [62.8, 60263.0], [62.9, 60263.0], [63.0, 60264.0], [63.1, 60264.0], [63.2, 60264.0], [63.3, 60267.0], [63.4, 60267.0], [63.5, 60269.0], [63.6, 60269.0], [63.7, 60269.0], [63.8, 60269.0], [63.9, 60269.0], [64.0, 60270.0], [64.1, 60270.0], [64.2, 60270.0], [64.3, 60281.0], [64.4, 60281.0], [64.5, 60281.0], [64.6, 60281.0], [64.7, 60281.0], [64.8, 60283.0], [64.9, 60283.0], [65.0, 60295.0], [65.1, 60295.0], [65.2, 60295.0], [65.3, 60306.0], [65.4, 60306.0], [65.5, 60307.0], [65.6, 60307.0], [65.7, 60307.0], [65.8, 60315.0], [65.9, 60315.0], [66.0, 60319.0], [66.1, 60319.0], [66.2, 60319.0], [66.3, 60324.0], [66.4, 60324.0], [66.5, 60330.0], [66.6, 60330.0], [66.7, 60330.0], [66.8, 60331.0], [66.9, 60331.0], [67.0, 60336.0], [67.1, 60336.0], [67.2, 60336.0], [67.3, 60338.0], [67.4, 60338.0], [67.5, 60338.0], [67.6, 60338.0], [67.7, 60338.0], [67.8, 60345.0], [67.9, 60345.0], [68.0, 60348.0], [68.1, 60348.0], [68.2, 60348.0], [68.3, 60349.0], [68.4, 60349.0], [68.5, 60349.0], [68.6, 60349.0], [68.7, 60349.0], [68.8, 60350.0], [68.9, 60350.0], [69.0, 60351.0], [69.1, 60351.0], [69.2, 60351.0], [69.3, 60351.0], [69.4, 60351.0], [69.5, 60352.0], [69.6, 60352.0], [69.7, 60352.0], [69.8, 60353.0], [69.9, 60353.0], [70.0, 60354.0], [70.1, 60354.0], [70.2, 60354.0], [70.3, 60359.0], [70.4, 60359.0], [70.5, 60359.0], [70.6, 60359.0], [70.7, 60359.0], [70.8, 60362.0], [70.9, 60362.0], [71.0, 60365.0], [71.1, 60365.0], [71.2, 60365.0], [71.3, 60372.0], [71.4, 60372.0], [71.5, 60374.0], [71.6, 60374.0], [71.7, 60374.0], [71.8, 60377.0], [71.9, 60377.0], [72.0, 60378.0], [72.1, 60378.0], [72.2, 60378.0], [72.3, 60381.0], [72.4, 60381.0], [72.5, 60382.0], [72.6, 60382.0], [72.7, 60382.0], [72.8, 60384.0], [72.9, 60384.0], [73.0, 60387.0], [73.1, 60387.0], [73.2, 60387.0], [73.3, 60387.0], [73.4, 60387.0], [73.5, 60388.0], [73.6, 60388.0], [73.7, 60388.0], [73.8, 60391.0], [73.9, 60391.0], [74.0, 60395.0], [74.1, 60395.0], [74.2, 60395.0], [74.3, 60399.0], [74.4, 60399.0], [74.5, 60401.0], [74.6, 60401.0], [74.7, 60401.0], [74.8, 60415.0], [74.9, 60415.0], [75.0, 60421.0], [75.1, 60421.0], [75.2, 60421.0], [75.3, 60427.0], [75.4, 60427.0], [75.5, 60439.0], [75.6, 60439.0], [75.7, 60439.0], [75.8, 60441.0], [75.9, 60441.0], [76.0, 60450.0], [76.1, 60450.0], [76.2, 60450.0], [76.3, 60453.0], [76.4, 60453.0], [76.5, 60455.0], [76.6, 60455.0], [76.7, 60455.0], [76.8, 60455.0], [76.9, 60455.0], [77.0, 60457.0], [77.1, 60457.0], [77.2, 60457.0], [77.3, 60461.0], [77.4, 60461.0], [77.5, 60464.0], [77.6, 60464.0], [77.7, 60464.0], [77.8, 60466.0], [77.9, 60466.0], [78.0, 60467.0], [78.1, 60467.0], [78.2, 60467.0], [78.3, 60472.0], [78.4, 60472.0], [78.5, 60473.0], [78.6, 60473.0], [78.7, 60473.0], [78.8, 60479.0], [78.9, 60479.0], [79.0, 60480.0], [79.1, 60480.0], [79.2, 60480.0], [79.3, 60480.0], [79.4, 60480.0], [79.5, 60480.0], [79.6, 60480.0], [79.7, 60480.0], [79.8, 60481.0], [79.9, 60481.0], [80.0, 60482.0], [80.1, 60482.0], [80.2, 60482.0], [80.3, 60482.0], [80.4, 60482.0], [80.5, 60483.0], [80.6, 60483.0], [80.7, 60483.0], [80.8, 60486.0], [80.9, 60486.0], [81.0, 60488.0], [81.1, 60488.0], [81.2, 60488.0], [81.3, 60492.0], [81.4, 60492.0], [81.5, 60493.0], [81.6, 60493.0], [81.7, 60493.0], [81.8, 60495.0], [81.9, 60495.0], [82.0, 60499.0], [82.1, 60499.0], [82.2, 60499.0], [82.3, 60499.0], [82.4, 60499.0], [82.5, 60504.0], [82.6, 60504.0], [82.7, 60504.0], [82.8, 60507.0], [82.9, 60507.0], [83.0, 60508.0], [83.1, 60508.0], [83.2, 60508.0], [83.3, 60508.0], [83.4, 60508.0], [83.5, 60517.0], [83.6, 60517.0], [83.7, 60517.0], [83.8, 60519.0], [83.9, 60519.0], [84.0, 60520.0], [84.1, 60520.0], [84.2, 60520.0], [84.3, 60522.0], [84.4, 60522.0], [84.5, 60524.0], [84.6, 60524.0], [84.7, 60524.0], [84.8, 60531.0], [84.9, 60531.0], [85.0, 60534.0], [85.1, 60534.0], [85.2, 60534.0], [85.3, 60546.0], [85.4, 60546.0], [85.5, 60559.0], [85.6, 60559.0], [85.7, 60559.0], [85.8, 60560.0], [85.9, 60560.0], [86.0, 60561.0], [86.1, 60561.0], [86.2, 60561.0], [86.3, 60565.0], [86.4, 60565.0], [86.5, 60565.0], [86.6, 60565.0], [86.7, 60565.0], [86.8, 60567.0], [86.9, 60567.0], [87.0, 60567.0], [87.1, 60567.0], [87.2, 60567.0], [87.3, 60568.0], [87.4, 60568.0], [87.5, 60570.0], [87.6, 60570.0], [87.7, 60570.0], [87.8, 60572.0], [87.9, 60572.0], [88.0, 60575.0], [88.1, 60575.0], [88.2, 60575.0], [88.3, 60588.0], [88.4, 60588.0], [88.5, 60590.0], [88.6, 60590.0], [88.7, 60590.0], [88.8, 60591.0], [88.9, 60591.0], [89.0, 60597.0], [89.1, 60597.0], [89.2, 60597.0], [89.3, 60598.0], [89.4, 60598.0], [89.5, 60600.0], [89.6, 60600.0], [89.7, 60600.0], [89.8, 60600.0], [89.9, 60600.0], [90.0, 60601.0], [90.1, 60601.0], [90.2, 60601.0], [90.3, 60603.0], [90.4, 60603.0], [90.5, 60603.0], [90.6, 60603.0], [90.7, 60603.0], [90.8, 60607.0], [90.9, 60607.0], [91.0, 60608.0], [91.1, 60608.0], [91.2, 60608.0], [91.3, 60611.0], [91.4, 60611.0], [91.5, 60612.0], [91.6, 60612.0], [91.7, 60612.0], [91.8, 60615.0], [91.9, 60615.0], [92.0, 60616.0], [92.1, 60616.0], [92.2, 60616.0], [92.3, 60616.0], [92.4, 60616.0], [92.5, 60623.0], [92.6, 60623.0], [92.7, 60623.0], [92.8, 60623.0], [92.9, 60623.0], [93.0, 60626.0], [93.1, 60626.0], [93.2, 60626.0], [93.3, 60632.0], [93.4, 60632.0], [93.5, 60633.0], [93.6, 60633.0], [93.7, 60633.0], [93.8, 60634.0], [93.9, 60634.0], [94.0, 60642.0], [94.1, 60642.0], [94.2, 60642.0], [94.3, 60642.0], [94.4, 60642.0], [94.5, 60643.0], [94.6, 60643.0], [94.7, 60643.0], [94.8, 60654.0], [94.9, 60654.0], [95.0, 60666.0], [95.1, 60666.0], [95.2, 60666.0], [95.3, 60669.0], [95.4, 60669.0], [95.5, 60678.0], [95.6, 60678.0], [95.7, 60678.0], [95.8, 60682.0], [95.9, 60682.0], [96.0, 60690.0], [96.1, 60690.0], [96.2, 60690.0], [96.3, 60690.0], [96.4, 60690.0], [96.5, 60709.0], [96.6, 60709.0], [96.7, 60709.0], [96.8, 60718.0], [96.9, 60718.0], [97.0, 60736.0], [97.1, 60736.0], [97.2, 60736.0], [97.3, 60746.0], [97.4, 60746.0], [97.5, 60748.0], [97.6, 60748.0], [97.7, 60748.0], [97.8, 60758.0], [97.9, 60758.0], [98.0, 60771.0], [98.1, 60771.0], [98.2, 60771.0], [98.3, 60800.0], [98.4, 60800.0], [98.5, 60816.0], [98.6, 60816.0], [98.7, 60816.0], [98.8, 60827.0], [98.9, 60827.0], [99.0, 60854.0], [99.1, 60854.0], [99.2, 60854.0], [99.3, 60863.0], [99.4, 60863.0], [99.5, 60890.0], [99.6, 60890.0], [99.7, 60890.0], [99.8, 60934.0], [99.9, 60934.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64099.0], [0.1, 64099.0], [0.2, 64099.0], [0.3, 64099.0], [0.4, 64099.0], [0.5, 64099.0], [0.6, 64099.0], [0.7, 64099.0], [0.8, 64099.0], [0.9, 64099.0], [1.0, 64099.0], [1.1, 64099.0], [1.2, 64099.0], [1.3, 64099.0], [1.4, 64099.0], [1.5, 64099.0], [1.6, 64099.0], [1.7, 64099.0], [1.8, 64099.0], [1.9, 64099.0], [2.0, 64099.0], [2.1, 64099.0], [2.2, 64099.0], [2.3, 64099.0], [2.4, 64099.0], [2.5, 64100.0], [2.6, 64100.0], [2.7, 64100.0], [2.8, 64100.0], [2.9, 64100.0], [3.0, 64100.0], [3.1, 64100.0], [3.2, 64100.0], [3.3, 64100.0], [3.4, 64100.0], [3.5, 64100.0], [3.6, 64100.0], [3.7, 64100.0], [3.8, 64100.0], [3.9, 64100.0], [4.0, 64100.0], [4.1, 64100.0], [4.2, 64100.0], [4.3, 64100.0], [4.4, 64100.0], [4.5, 64100.0], [4.6, 64100.0], [4.7, 64100.0], [4.8, 64100.0], [4.9, 64100.0], [5.0, 64103.0], [5.1, 64103.0], [5.2, 64103.0], [5.3, 64103.0], [5.4, 64103.0], [5.5, 64103.0], [5.6, 64103.0], [5.7, 64103.0], [5.8, 64103.0], [5.9, 64103.0], [6.0, 64103.0], [6.1, 64103.0], [6.2, 64103.0], [6.3, 64103.0], [6.4, 64103.0], [6.5, 64103.0], [6.6, 64103.0], [6.7, 64103.0], [6.8, 64103.0], [6.9, 64103.0], [7.0, 64103.0], [7.1, 64103.0], [7.2, 64103.0], [7.3, 64103.0], [7.4, 64103.0], [7.5, 64103.0], [7.6, 64103.0], [7.7, 64103.0], [7.8, 64103.0], [7.9, 64103.0], [8.0, 64103.0], [8.1, 64103.0], [8.2, 64103.0], [8.3, 64103.0], [8.4, 64103.0], [8.5, 64103.0], [8.6, 64103.0], [8.7, 64103.0], [8.8, 64103.0], [8.9, 64103.0], [9.0, 64103.0], [9.1, 64103.0], [9.2, 64103.0], [9.3, 64103.0], [9.4, 64103.0], [9.5, 64103.0], [9.6, 64103.0], [9.7, 64103.0], [9.8, 64103.0], [9.9, 64103.0], [10.0, 64106.0], [10.1, 64106.0], [10.2, 64106.0], [10.3, 64106.0], [10.4, 64106.0], [10.5, 64106.0], [10.6, 64106.0], [10.7, 64106.0], [10.8, 64106.0], [10.9, 64106.0], [11.0, 64106.0], [11.1, 64106.0], [11.2, 64106.0], [11.3, 64106.0], [11.4, 64106.0], [11.5, 64106.0], [11.6, 64106.0], [11.7, 64106.0], [11.8, 64106.0], [11.9, 64106.0], [12.0, 64106.0], [12.1, 64106.0], [12.2, 64106.0], [12.3, 64106.0], [12.4, 64106.0], [12.5, 64109.0], [12.6, 64109.0], [12.7, 64109.0], [12.8, 64109.0], [12.9, 64109.0], [13.0, 64109.0], [13.1, 64109.0], [13.2, 64109.0], [13.3, 64109.0], [13.4, 64109.0], [13.5, 64109.0], [13.6, 64109.0], [13.7, 64109.0], [13.8, 64109.0], [13.9, 64109.0], [14.0, 64109.0], [14.1, 64109.0], [14.2, 64109.0], [14.3, 64109.0], [14.4, 64109.0], [14.5, 64109.0], [14.6, 64109.0], [14.7, 64109.0], [14.8, 64109.0], [14.9, 64109.0], [15.0, 64109.0], [15.1, 64109.0], [15.2, 64109.0], [15.3, 64109.0], [15.4, 64109.0], [15.5, 64109.0], [15.6, 64109.0], [15.7, 64109.0], [15.8, 64109.0], [15.9, 64109.0], [16.0, 64109.0], [16.1, 64109.0], [16.2, 64109.0], [16.3, 64109.0], [16.4, 64109.0], [16.5, 64109.0], [16.6, 64109.0], [16.7, 64109.0], [16.8, 64109.0], [16.9, 64109.0], [17.0, 64109.0], [17.1, 64109.0], [17.2, 64109.0], [17.3, 64109.0], [17.4, 64109.0], [17.5, 64110.0], [17.6, 64110.0], [17.7, 64110.0], [17.8, 64110.0], [17.9, 64110.0], [18.0, 64110.0], [18.1, 64110.0], [18.2, 64110.0], [18.3, 64110.0], [18.4, 64110.0], [18.5, 64110.0], [18.6, 64110.0], [18.7, 64110.0], [18.8, 64110.0], [18.9, 64110.0], [19.0, 64110.0], [19.1, 64110.0], [19.2, 64110.0], [19.3, 64110.0], [19.4, 64110.0], [19.5, 64110.0], [19.6, 64110.0], [19.7, 64110.0], [19.8, 64110.0], [19.9, 64110.0], [20.0, 64113.0], [20.1, 64113.0], [20.2, 64113.0], [20.3, 64113.0], [20.4, 64113.0], [20.5, 64113.0], [20.6, 64113.0], [20.7, 64113.0], [20.8, 64113.0], [20.9, 64113.0], [21.0, 64113.0], [21.1, 64113.0], [21.2, 64113.0], [21.3, 64113.0], [21.4, 64113.0], [21.5, 64113.0], [21.6, 64113.0], [21.7, 64113.0], [21.8, 64113.0], [21.9, 64113.0], [22.0, 64113.0], [22.1, 64113.0], [22.2, 64113.0], [22.3, 64113.0], [22.4, 64113.0], [22.5, 64113.0], [22.6, 64113.0], [22.7, 64113.0], [22.8, 64113.0], [22.9, 64113.0], [23.0, 64113.0], [23.1, 64113.0], [23.2, 64113.0], [23.3, 64113.0], [23.4, 64113.0], [23.5, 64113.0], [23.6, 64113.0], [23.7, 64113.0], [23.8, 64113.0], [23.9, 64113.0], [24.0, 64113.0], [24.1, 64113.0], [24.2, 64113.0], [24.3, 64113.0], [24.4, 64113.0], [24.5, 64113.0], [24.6, 64113.0], [24.7, 64113.0], [24.8, 64113.0], [24.9, 64113.0], [25.0, 64117.0], [25.1, 64117.0], [25.2, 64117.0], [25.3, 64117.0], [25.4, 64117.0], [25.5, 64117.0], [25.6, 64117.0], [25.7, 64117.0], [25.8, 64117.0], [25.9, 64117.0], [26.0, 64117.0], [26.1, 64117.0], [26.2, 64117.0], [26.3, 64117.0], [26.4, 64117.0], [26.5, 64117.0], [26.6, 64117.0], [26.7, 64117.0], [26.8, 64117.0], [26.9, 64117.0], [27.0, 64117.0], [27.1, 64117.0], [27.2, 64117.0], [27.3, 64117.0], [27.4, 64117.0], [27.5, 64119.0], [27.6, 64119.0], [27.7, 64119.0], [27.8, 64119.0], [27.9, 64119.0], [28.0, 64119.0], [28.1, 64119.0], [28.2, 64119.0], [28.3, 64119.0], [28.4, 64119.0], [28.5, 64119.0], [28.6, 64119.0], [28.7, 64119.0], [28.8, 64119.0], [28.9, 64119.0], [29.0, 64119.0], [29.1, 64119.0], [29.2, 64119.0], [29.3, 64119.0], [29.4, 64119.0], [29.5, 64119.0], [29.6, 64119.0], [29.7, 64119.0], [29.8, 64119.0], [29.9, 64119.0], [30.0, 64119.0], [30.1, 64119.0], [30.2, 64119.0], [30.3, 64119.0], [30.4, 64119.0], [30.5, 64119.0], [30.6, 64119.0], [30.7, 64119.0], [30.8, 64119.0], [30.9, 64119.0], [31.0, 64119.0], [31.1, 64119.0], [31.2, 64119.0], [31.3, 64119.0], [31.4, 64119.0], [31.5, 64119.0], [31.6, 64119.0], [31.7, 64119.0], [31.8, 64119.0], [31.9, 64119.0], [32.0, 64119.0], [32.1, 64119.0], [32.2, 64119.0], [32.3, 64119.0], [32.4, 64119.0], [32.5, 64119.0], [32.6, 64119.0], [32.7, 64119.0], [32.8, 64119.0], [32.9, 64119.0], [33.0, 64119.0], [33.1, 64119.0], [33.2, 64119.0], [33.3, 64119.0], [33.4, 64119.0], [33.5, 64119.0], [33.6, 64119.0], [33.7, 64119.0], [33.8, 64119.0], [33.9, 64119.0], [34.0, 64119.0], [34.1, 64119.0], [34.2, 64119.0], [34.3, 64119.0], [34.4, 64119.0], [34.5, 64119.0], [34.6, 64119.0], [34.7, 64119.0], [34.8, 64119.0], [34.9, 64119.0], [35.0, 64123.0], [35.1, 64123.0], [35.2, 64123.0], [35.3, 64123.0], [35.4, 64123.0], [35.5, 64123.0], [35.6, 64123.0], [35.7, 64123.0], [35.8, 64123.0], [35.9, 64123.0], [36.0, 64123.0], [36.1, 64123.0], [36.2, 64123.0], [36.3, 64123.0], [36.4, 64123.0], [36.5, 64123.0], [36.6, 64123.0], [36.7, 64123.0], [36.8, 64123.0], [36.9, 64123.0], [37.0, 64123.0], [37.1, 64123.0], [37.2, 64123.0], [37.3, 64123.0], [37.4, 64123.0], [37.5, 64126.0], [37.6, 64126.0], [37.7, 64126.0], [37.8, 64126.0], [37.9, 64126.0], [38.0, 64126.0], [38.1, 64126.0], [38.2, 64126.0], [38.3, 64126.0], [38.4, 64126.0], [38.5, 64126.0], [38.6, 64126.0], [38.7, 64126.0], [38.8, 64126.0], [38.9, 64126.0], [39.0, 64126.0], [39.1, 64126.0], [39.2, 64126.0], [39.3, 64126.0], [39.4, 64126.0], [39.5, 64126.0], [39.6, 64126.0], [39.7, 64126.0], [39.8, 64126.0], [39.9, 64126.0], [40.0, 64140.0], [40.1, 64140.0], [40.2, 64140.0], [40.3, 64140.0], [40.4, 64140.0], [40.5, 64140.0], [40.6, 64140.0], [40.7, 64140.0], [40.8, 64140.0], [40.9, 64140.0], [41.0, 64140.0], [41.1, 64140.0], [41.2, 64140.0], [41.3, 64140.0], [41.4, 64140.0], [41.5, 64140.0], [41.6, 64140.0], [41.7, 64140.0], [41.8, 64140.0], [41.9, 64140.0], [42.0, 64140.0], [42.1, 64140.0], [42.2, 64140.0], [42.3, 64140.0], [42.4, 64140.0], [42.5, 64145.0], [42.6, 64145.0], [42.7, 64145.0], [42.8, 64145.0], [42.9, 64145.0], [43.0, 64145.0], [43.1, 64145.0], [43.2, 64145.0], [43.3, 64145.0], [43.4, 64145.0], [43.5, 64145.0], [43.6, 64145.0], [43.7, 64145.0], [43.8, 64145.0], [43.9, 64145.0], [44.0, 64145.0], [44.1, 64145.0], [44.2, 64145.0], [44.3, 64145.0], [44.4, 64145.0], [44.5, 64145.0], [44.6, 64145.0], [44.7, 64145.0], [44.8, 64145.0], [44.9, 64145.0], [45.0, 64146.0], [45.1, 64146.0], [45.2, 64146.0], [45.3, 64146.0], [45.4, 64146.0], [45.5, 64146.0], [45.6, 64146.0], [45.7, 64146.0], [45.8, 64146.0], [45.9, 64146.0], [46.0, 64146.0], [46.1, 64146.0], [46.2, 64146.0], [46.3, 64146.0], [46.4, 64146.0], [46.5, 64146.0], [46.6, 64146.0], [46.7, 64146.0], [46.8, 64146.0], [46.9, 64146.0], [47.0, 64146.0], [47.1, 64146.0], [47.2, 64146.0], [47.3, 64146.0], [47.4, 64146.0], [47.5, 64171.0], [47.6, 64171.0], [47.7, 64171.0], [47.8, 64171.0], [47.9, 64171.0], [48.0, 64171.0], [48.1, 64171.0], [48.2, 64171.0], [48.3, 64171.0], [48.4, 64171.0], [48.5, 64171.0], [48.6, 64171.0], [48.7, 64171.0], [48.8, 64171.0], [48.9, 64171.0], [49.0, 64171.0], [49.1, 64171.0], [49.2, 64171.0], [49.3, 64171.0], [49.4, 64171.0], [49.5, 64171.0], [49.6, 64171.0], [49.7, 64171.0], [49.8, 64171.0], [49.9, 64171.0], [50.0, 64196.0], [50.1, 64196.0], [50.2, 64196.0], [50.3, 64196.0], [50.4, 64196.0], [50.5, 64196.0], [50.6, 64196.0], [50.7, 64196.0], [50.8, 64196.0], [50.9, 64196.0], [51.0, 64196.0], [51.1, 64196.0], [51.2, 64196.0], [51.3, 64196.0], [51.4, 64196.0], [51.5, 64196.0], [51.6, 64196.0], [51.7, 64196.0], [51.8, 64196.0], [51.9, 64196.0], [52.0, 64196.0], [52.1, 64196.0], [52.2, 64196.0], [52.3, 64196.0], [52.4, 64196.0], [52.5, 64215.0], [52.6, 64215.0], [52.7, 64215.0], [52.8, 64215.0], [52.9, 64215.0], [53.0, 64215.0], [53.1, 64215.0], [53.2, 64215.0], [53.3, 64215.0], [53.4, 64215.0], [53.5, 64215.0], [53.6, 64215.0], [53.7, 64215.0], [53.8, 64215.0], [53.9, 64215.0], [54.0, 64215.0], [54.1, 64215.0], [54.2, 64215.0], [54.3, 64215.0], [54.4, 64215.0], [54.5, 64215.0], [54.6, 64215.0], [54.7, 64215.0], [54.8, 64215.0], [54.9, 64215.0], [55.0, 64220.0], [55.1, 64220.0], [55.2, 64220.0], [55.3, 64220.0], [55.4, 64220.0], [55.5, 64220.0], [55.6, 64220.0], [55.7, 64220.0], [55.8, 64220.0], [55.9, 64220.0], [56.0, 64220.0], [56.1, 64220.0], [56.2, 64220.0], [56.3, 64220.0], [56.4, 64220.0], [56.5, 64220.0], [56.6, 64220.0], [56.7, 64220.0], [56.8, 64220.0], [56.9, 64220.0], [57.0, 64220.0], [57.1, 64220.0], [57.2, 64220.0], [57.3, 64220.0], [57.4, 64220.0], [57.5, 64269.0], [57.6, 64269.0], [57.7, 64269.0], [57.8, 64269.0], [57.9, 64269.0], [58.0, 64269.0], [58.1, 64269.0], [58.2, 64269.0], [58.3, 64269.0], [58.4, 64269.0], [58.5, 64269.0], [58.6, 64269.0], [58.7, 64269.0], [58.8, 64269.0], [58.9, 64269.0], [59.0, 64269.0], [59.1, 64269.0], [59.2, 64269.0], [59.3, 64269.0], [59.4, 64269.0], [59.5, 64269.0], [59.6, 64269.0], [59.7, 64269.0], [59.8, 64269.0], [59.9, 64269.0], [60.0, 64292.0], [60.1, 64292.0], [60.2, 64292.0], [60.3, 64292.0], [60.4, 64292.0], [60.5, 64292.0], [60.6, 64292.0], [60.7, 64292.0], [60.8, 64292.0], [60.9, 64292.0], [61.0, 64292.0], [61.1, 64292.0], [61.2, 64292.0], [61.3, 64292.0], [61.4, 64292.0], [61.5, 64292.0], [61.6, 64292.0], [61.7, 64292.0], [61.8, 64292.0], [61.9, 64292.0], [62.0, 64292.0], [62.1, 64292.0], [62.2, 64292.0], [62.3, 64292.0], [62.4, 64292.0], [62.5, 64320.0], [62.6, 64320.0], [62.7, 64320.0], [62.8, 64320.0], [62.9, 64320.0], [63.0, 64320.0], [63.1, 64320.0], [63.2, 64320.0], [63.3, 64320.0], [63.4, 64320.0], [63.5, 64320.0], [63.6, 64320.0], [63.7, 64320.0], [63.8, 64320.0], [63.9, 64320.0], [64.0, 64320.0], [64.1, 64320.0], [64.2, 64320.0], [64.3, 64320.0], [64.4, 64320.0], [64.5, 64320.0], [64.6, 64320.0], [64.7, 64320.0], [64.8, 64320.0], [64.9, 64320.0], [65.0, 64345.0], [65.1, 64345.0], [65.2, 64345.0], [65.3, 64345.0], [65.4, 64345.0], [65.5, 64345.0], [65.6, 64345.0], [65.7, 64345.0], [65.8, 64345.0], [65.9, 64345.0], [66.0, 64345.0], [66.1, 64345.0], [66.2, 64345.0], [66.3, 64345.0], [66.4, 64345.0], [66.5, 64345.0], [66.6, 64345.0], [66.7, 64345.0], [66.8, 64345.0], [66.9, 64345.0], [67.0, 64345.0], [67.1, 64345.0], [67.2, 64345.0], [67.3, 64345.0], [67.4, 64345.0], [67.5, 64370.0], [67.6, 64370.0], [67.7, 64370.0], [67.8, 64370.0], [67.9, 64370.0], [68.0, 64370.0], [68.1, 64370.0], [68.2, 64370.0], [68.3, 64370.0], [68.4, 64370.0], [68.5, 64370.0], [68.6, 64370.0], [68.7, 64370.0], [68.8, 64370.0], [68.9, 64370.0], [69.0, 64370.0], [69.1, 64370.0], [69.2, 64370.0], [69.3, 64370.0], [69.4, 64370.0], [69.5, 64370.0], [69.6, 64370.0], [69.7, 64370.0], [69.8, 64370.0], [69.9, 64370.0], [70.0, 64418.0], [70.1, 64418.0], [70.2, 64418.0], [70.3, 64418.0], [70.4, 64418.0], [70.5, 64418.0], [70.6, 64418.0], [70.7, 64418.0], [70.8, 64418.0], [70.9, 64418.0], [71.0, 64418.0], [71.1, 64418.0], [71.2, 64418.0], [71.3, 64418.0], [71.4, 64418.0], [71.5, 64418.0], [71.6, 64418.0], [71.7, 64418.0], [71.8, 64418.0], [71.9, 64418.0], [72.0, 64418.0], [72.1, 64418.0], [72.2, 64418.0], [72.3, 64418.0], [72.4, 64418.0], [72.5, 64423.0], [72.6, 64423.0], [72.7, 64423.0], [72.8, 64423.0], [72.9, 64423.0], [73.0, 64423.0], [73.1, 64423.0], [73.2, 64423.0], [73.3, 64423.0], [73.4, 64423.0], [73.5, 64423.0], [73.6, 64423.0], [73.7, 64423.0], [73.8, 64423.0], [73.9, 64423.0], [74.0, 64423.0], [74.1, 64423.0], [74.2, 64423.0], [74.3, 64423.0], [74.4, 64423.0], [74.5, 64423.0], [74.6, 64423.0], [74.7, 64423.0], [74.8, 64423.0], [74.9, 64423.0], [75.0, 64443.0], [75.1, 64443.0], [75.2, 64443.0], [75.3, 64443.0], [75.4, 64443.0], [75.5, 64443.0], [75.6, 64443.0], [75.7, 64443.0], [75.8, 64443.0], [75.9, 64443.0], [76.0, 64443.0], [76.1, 64443.0], [76.2, 64443.0], [76.3, 64443.0], [76.4, 64443.0], [76.5, 64443.0], [76.6, 64443.0], [76.7, 64443.0], [76.8, 64443.0], [76.9, 64443.0], [77.0, 64443.0], [77.1, 64443.0], [77.2, 64443.0], [77.3, 64443.0], [77.4, 64443.0], [77.5, 64463.0], [77.6, 64463.0], [77.7, 64463.0], [77.8, 64463.0], [77.9, 64463.0], [78.0, 64463.0], [78.1, 64463.0], [78.2, 64463.0], [78.3, 64463.0], [78.4, 64463.0], [78.5, 64463.0], [78.6, 64463.0], [78.7, 64463.0], [78.8, 64463.0], [78.9, 64463.0], [79.0, 64463.0], [79.1, 64463.0], [79.2, 64463.0], [79.3, 64463.0], [79.4, 64463.0], [79.5, 64463.0], [79.6, 64463.0], [79.7, 64463.0], [79.8, 64463.0], [79.9, 64463.0], [80.0, 64468.0], [80.1, 64468.0], [80.2, 64468.0], [80.3, 64468.0], [80.4, 64468.0], [80.5, 64468.0], [80.6, 64468.0], [80.7, 64468.0], [80.8, 64468.0], [80.9, 64468.0], [81.0, 64468.0], [81.1, 64468.0], [81.2, 64468.0], [81.3, 64468.0], [81.4, 64468.0], [81.5, 64468.0], [81.6, 64468.0], [81.7, 64468.0], [81.8, 64468.0], [81.9, 64468.0], [82.0, 64468.0], [82.1, 64468.0], [82.2, 64468.0], [82.3, 64468.0], [82.4, 64468.0], [82.5, 64518.0], [82.6, 64518.0], [82.7, 64518.0], [82.8, 64518.0], [82.9, 64518.0], [83.0, 64518.0], [83.1, 64518.0], [83.2, 64518.0], [83.3, 64518.0], [83.4, 64518.0], [83.5, 64518.0], [83.6, 64518.0], [83.7, 64518.0], [83.8, 64518.0], [83.9, 64518.0], [84.0, 64518.0], [84.1, 64518.0], [84.2, 64518.0], [84.3, 64518.0], [84.4, 64518.0], [84.5, 64518.0], [84.6, 64518.0], [84.7, 64518.0], [84.8, 64518.0], [84.9, 64518.0], [85.0, 64543.0], [85.1, 64543.0], [85.2, 64543.0], [85.3, 64543.0], [85.4, 64543.0], [85.5, 64543.0], [85.6, 64543.0], [85.7, 64543.0], [85.8, 64543.0], [85.9, 64543.0], [86.0, 64543.0], [86.1, 64543.0], [86.2, 64543.0], [86.3, 64543.0], [86.4, 64543.0], [86.5, 64543.0], [86.6, 64543.0], [86.7, 64543.0], [86.8, 64543.0], [86.9, 64543.0], [87.0, 64543.0], [87.1, 64543.0], [87.2, 64543.0], [87.3, 64543.0], [87.4, 64543.0], [87.5, 64567.0], [87.6, 64567.0], [87.7, 64567.0], [87.8, 64567.0], [87.9, 64567.0], [88.0, 64567.0], [88.1, 64567.0], [88.2, 64567.0], [88.3, 64567.0], [88.4, 64567.0], [88.5, 64567.0], [88.6, 64567.0], [88.7, 64567.0], [88.8, 64567.0], [88.9, 64567.0], [89.0, 64567.0], [89.1, 64567.0], [89.2, 64567.0], [89.3, 64567.0], [89.4, 64567.0], [89.5, 64567.0], [89.6, 64567.0], [89.7, 64567.0], [89.8, 64567.0], [89.9, 64567.0], [90.0, 64593.0], [90.1, 64593.0], [90.2, 64593.0], [90.3, 64593.0], [90.4, 64593.0], [90.5, 64593.0], [90.6, 64593.0], [90.7, 64593.0], [90.8, 64593.0], [90.9, 64593.0], [91.0, 64593.0], [91.1, 64593.0], [91.2, 64593.0], [91.3, 64593.0], [91.4, 64593.0], [91.5, 64593.0], [91.6, 64593.0], [91.7, 64593.0], [91.8, 64593.0], [91.9, 64593.0], [92.0, 64593.0], [92.1, 64593.0], [92.2, 64593.0], [92.3, 64593.0], [92.4, 64593.0], [92.5, 64640.0], [92.6, 64640.0], [92.7, 64640.0], [92.8, 64640.0], [92.9, 64640.0], [93.0, 64640.0], [93.1, 64640.0], [93.2, 64640.0], [93.3, 64640.0], [93.4, 64640.0], [93.5, 64640.0], [93.6, 64640.0], [93.7, 64640.0], [93.8, 64640.0], [93.9, 64640.0], [94.0, 64640.0], [94.1, 64640.0], [94.2, 64640.0], [94.3, 64640.0], [94.4, 64640.0], [94.5, 64640.0], [94.6, 64640.0], [94.7, 64640.0], [94.8, 64640.0], [94.9, 64640.0], [95.0, 64648.0], [95.1, 64648.0], [95.2, 64648.0], [95.3, 64648.0], [95.4, 64648.0], [95.5, 64648.0], [95.6, 64648.0], [95.7, 64648.0], [95.8, 64648.0], [95.9, 64648.0], [96.0, 64648.0], [96.1, 64648.0], [96.2, 64648.0], [96.3, 64648.0], [96.4, 64648.0], [96.5, 64648.0], [96.6, 64648.0], [96.7, 64648.0], [96.8, 64648.0], [96.9, 64648.0], [97.0, 64648.0], [97.1, 64648.0], [97.2, 64648.0], [97.3, 64648.0], [97.4, 64648.0], [97.5, 64662.0], [97.6, 64662.0], [97.7, 64662.0], [97.8, 64662.0], [97.9, 64662.0], [98.0, 64662.0], [98.1, 64662.0], [98.2, 64662.0], [98.3, 64662.0], [98.4, 64662.0], [98.5, 64662.0], [98.6, 64662.0], [98.7, 64662.0], [98.8, 64662.0], [98.9, 64662.0], [99.0, 64662.0], [99.1, 64662.0], [99.2, 64662.0], [99.3, 64662.0], [99.4, 64662.0], [99.5, 64662.0], [99.6, 64662.0], [99.7, 64662.0], [99.8, 64662.0], [99.9, 64662.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 60969.0], [0.1, 60969.0], [0.2, 60978.0], [0.3, 60983.0], [0.4, 60987.0], [0.5, 60987.0], [0.6, 60987.0], [0.7, 60991.0], [0.8, 60991.0], [0.9, 60992.0], [1.0, 60994.0], [1.1, 60994.0], [1.2, 60994.0], [1.3, 60996.0], [1.4, 60997.0], [1.5, 60997.0], [1.6, 60997.0], [1.7, 60997.0], [1.8, 60998.0], [1.9, 61000.0], [2.0, 61000.0], [2.1, 61000.0], [2.2, 61006.0], [2.3, 61010.0], [2.4, 61010.0], [2.5, 61013.0], [2.6, 61013.0], [2.7, 61014.0], [2.8, 61014.0], [2.9, 61016.0], [3.0, 61017.0], [3.1, 61017.0], [3.2, 61017.0], [3.3, 61020.0], [3.4, 61021.0], [3.5, 61022.0], [3.6, 61022.0], [3.7, 61022.0], [3.8, 61022.0], [3.9, 61029.0], [4.0, 61029.0], [4.1, 61029.0], [4.2, 61029.0], [4.3, 61030.0], [4.4, 61037.0], [4.5, 61037.0], [4.6, 61037.0], [4.7, 61039.0], [4.8, 61039.0], [4.9, 61040.0], [5.0, 61041.0], [5.1, 61041.0], [5.2, 61044.0], [5.3, 61044.0], [5.4, 61045.0], [5.5, 61045.0], [5.6, 61045.0], [5.7, 61045.0], [5.8, 61050.0], [5.9, 61052.0], [6.0, 61056.0], [6.1, 61056.0], [6.2, 61056.0], [6.3, 61057.0], [6.4, 61058.0], [6.5, 61058.0], [6.6, 61058.0], [6.7, 61063.0], [6.8, 61067.0], [6.9, 61068.0], [7.0, 61069.0], [7.1, 61069.0], [7.2, 61070.0], [7.3, 61071.0], [7.4, 61072.0], [7.5, 61075.0], [7.6, 61075.0], [7.7, 61075.0], [7.8, 61078.0], [7.9, 61079.0], [8.0, 61080.0], [8.1, 61080.0], [8.2, 61081.0], [8.3, 61081.0], [8.4, 61082.0], [8.5, 61082.0], [8.6, 61082.0], [8.7, 61083.0], [8.8, 61084.0], [8.9, 61085.0], [9.0, 61094.0], [9.1, 61094.0], [9.2, 61095.0], [9.3, 61095.0], [9.4, 61096.0], [9.5, 61096.0], [9.6, 61096.0], [9.7, 61099.0], [9.8, 61099.0], [9.9, 61101.0], [10.0, 61101.0], [10.1, 61101.0], [10.2, 61102.0], [10.3, 61104.0], [10.4, 61106.0], [10.5, 61107.0], [10.6, 61107.0], [10.7, 61109.0], [10.8, 61110.0], [10.9, 61111.0], [11.0, 61112.0], [11.1, 61112.0], [11.2, 61112.0], [11.3, 61113.0], [11.4, 61117.0], [11.5, 61117.0], [11.6, 61117.0], [11.7, 61118.0], [11.8, 61119.0], [11.9, 61119.0], [12.0, 61120.0], [12.1, 61120.0], [12.2, 61121.0], [12.3, 61123.0], [12.4, 61124.0], [12.5, 61127.0], [12.6, 61127.0], [12.7, 61128.0], [12.8, 61132.0], [12.9, 61134.0], [13.0, 61135.0], [13.1, 61135.0], [13.2, 61135.0], [13.3, 61135.0], [13.4, 61137.0], [13.5, 61137.0], [13.6, 61137.0], [13.7, 61140.0], [13.8, 61141.0], [13.9, 61142.0], [14.0, 61144.0], [14.1, 61144.0], [14.2, 61145.0], [14.3, 61145.0], [14.4, 61150.0], [14.5, 61151.0], [14.6, 61151.0], [14.7, 61152.0], [14.8, 61152.0], [14.9, 61153.0], [15.0, 61154.0], [15.1, 61154.0], [15.2, 61156.0], [15.3, 61159.0], [15.4, 61160.0], [15.5, 61162.0], [15.6, 61162.0], [15.7, 61165.0], [15.8, 61165.0], [15.9, 61165.0], [16.0, 61165.0], [16.1, 61165.0], [16.2, 61165.0], [16.3, 61166.0], [16.4, 61167.0], [16.5, 61169.0], [16.6, 61169.0], [16.7, 61169.0], [16.8, 61171.0], [16.9, 61172.0], [17.0, 61173.0], [17.1, 61173.0], [17.2, 61176.0], [17.3, 61176.0], [17.4, 61177.0], [17.5, 61179.0], [17.6, 61179.0], [17.7, 61181.0], [17.8, 61181.0], [17.9, 61183.0], [18.0, 61187.0], [18.1, 61187.0], [18.2, 61187.0], [18.3, 61189.0], [18.4, 61189.0], [18.5, 61192.0], [18.6, 61192.0], [18.7, 61193.0], [18.8, 61194.0], [18.9, 61195.0], [19.0, 61197.0], [19.1, 61197.0], [19.2, 61198.0], [19.3, 61198.0], [19.4, 61199.0], [19.5, 61200.0], [19.6, 61200.0], [19.7, 61200.0], [19.8, 61201.0], [19.9, 61203.0], [20.0, 61204.0], [20.1, 61204.0], [20.2, 61204.0], [20.3, 61205.0], [20.4, 61207.0], [20.5, 61207.0], [20.6, 61207.0], [20.7, 61208.0], [20.8, 61209.0], [20.9, 61210.0], [21.0, 61211.0], [21.1, 61211.0], [21.2, 61211.0], [21.3, 61213.0], [21.4, 61214.0], [21.5, 61217.0], [21.6, 61217.0], [21.7, 61219.0], [21.8, 61219.0], [21.9, 61220.0], [22.0, 61221.0], [22.1, 61221.0], [22.2, 61223.0], [22.3, 61223.0], [22.4, 61224.0], [22.5, 61225.0], [22.6, 61225.0], [22.7, 61226.0], [22.8, 61231.0], [22.9, 61231.0], [23.0, 61231.0], [23.1, 61231.0], [23.2, 61232.0], [23.3, 61233.0], [23.4, 61236.0], [23.5, 61238.0], [23.6, 61238.0], [23.7, 61238.0], [23.8, 61238.0], [23.9, 61238.0], [24.0, 61239.0], [24.1, 61239.0], [24.2, 61244.0], [24.3, 61244.0], [24.4, 61246.0], [24.5, 61247.0], [24.6, 61247.0], [24.7, 61247.0], [24.8, 61248.0], [24.9, 61248.0], [25.0, 61248.0], [25.1, 61248.0], [25.2, 61249.0], [25.3, 61249.0], [25.4, 61252.0], [25.5, 61252.0], [25.6, 61252.0], [25.7, 61254.0], [25.8, 61255.0], [25.9, 61255.0], [26.0, 61255.0], [26.1, 61255.0], [26.2, 61257.0], [26.3, 61258.0], [26.4, 61258.0], [26.5, 61258.0], [26.6, 61258.0], [26.7, 61258.0], [26.8, 61263.0], [26.9, 61265.0], [27.0, 61267.0], [27.1, 61267.0], [27.2, 61267.0], [27.3, 61267.0], [27.4, 61268.0], [27.5, 61270.0], [27.6, 61270.0], [27.7, 61271.0], [27.8, 61271.0], [27.9, 61271.0], [28.0, 61272.0], [28.1, 61272.0], [28.2, 61275.0], [28.3, 61276.0], [28.4, 61277.0], [28.5, 61278.0], [28.6, 61278.0], [28.7, 61278.0], [28.8, 61279.0], [28.9, 61280.0], [29.0, 61283.0], [29.1, 61283.0], [29.2, 61283.0], [29.3, 61284.0], [29.4, 61286.0], [29.5, 61288.0], [29.6, 61288.0], [29.7, 61289.0], [29.8, 61292.0], [29.9, 61293.0], [30.0, 61293.0], [30.1, 61293.0], [30.2, 61294.0], [30.3, 61294.0], [30.4, 61297.0], [30.5, 61297.0], [30.6, 61297.0], [30.7, 61298.0], [30.8, 61299.0], [30.9, 61300.0], [31.0, 61302.0], [31.1, 61302.0], [31.2, 61303.0], [31.3, 61303.0], [31.4, 61307.0], [31.5, 61307.0], [31.6, 61307.0], [31.7, 61308.0], [31.8, 61310.0], [31.9, 61310.0], [32.0, 61310.0], [32.1, 61310.0], [32.2, 61311.0], [32.3, 61312.0], [32.4, 61313.0], [32.5, 61314.0], [32.6, 61314.0], [32.7, 61315.0], [32.8, 61316.0], [32.9, 61317.0], [33.0, 61317.0], [33.1, 61317.0], [33.2, 61318.0], [33.3, 61318.0], [33.4, 61319.0], [33.5, 61320.0], [33.6, 61320.0], [33.7, 61322.0], [33.8, 61322.0], [33.9, 61322.0], [34.0, 61323.0], [34.1, 61323.0], [34.2, 61323.0], [34.3, 61325.0], [34.4, 61326.0], [34.5, 61328.0], [34.6, 61328.0], [34.7, 61328.0], [34.8, 61329.0], [34.9, 61330.0], [35.0, 61330.0], [35.1, 61330.0], [35.2, 61331.0], [35.3, 61332.0], [35.4, 61336.0], [35.5, 61338.0], [35.6, 61338.0], [35.7, 61338.0], [35.8, 61338.0], [35.9, 61339.0], [36.0, 61342.0], [36.1, 61342.0], [36.2, 61342.0], [36.3, 61343.0], [36.4, 61348.0], [36.5, 61349.0], [36.6, 61349.0], [36.7, 61350.0], [36.8, 61350.0], [36.9, 61351.0], [37.0, 61352.0], [37.1, 61352.0], [37.2, 61353.0], [37.3, 61353.0], [37.4, 61357.0], [37.5, 61357.0], [37.6, 61357.0], [37.7, 61357.0], [37.8, 61358.0], [37.9, 61358.0], [38.0, 61358.0], [38.1, 61358.0], [38.2, 61359.0], [38.3, 61359.0], [38.4, 61360.0], [38.5, 61360.0], [38.6, 61360.0], [38.7, 61363.0], [38.8, 61363.0], [38.9, 61364.0], [39.0, 61366.0], [39.1, 61366.0], [39.2, 61366.0], [39.3, 61368.0], [39.4, 61369.0], [39.5, 61370.0], [39.6, 61370.0], [39.7, 61371.0], [39.8, 61373.0], [39.9, 61374.0], [40.0, 61375.0], [40.1, 61375.0], [40.2, 61375.0], [40.3, 61377.0], [40.4, 61378.0], [40.5, 61379.0], [40.6, 61379.0], [40.7, 61379.0], [40.8, 61381.0], [40.9, 61381.0], [41.0, 61382.0], [41.1, 61382.0], [41.2, 61382.0], [41.3, 61387.0], [41.4, 61387.0], [41.5, 61388.0], [41.6, 61388.0], [41.7, 61390.0], [41.8, 61391.0], [41.9, 61392.0], [42.0, 61392.0], [42.1, 61392.0], [42.2, 61392.0], [42.3, 61392.0], [42.4, 61394.0], [42.5, 61395.0], [42.6, 61395.0], [42.7, 61395.0], [42.8, 61395.0], [42.9, 61398.0], [43.0, 61399.0], [43.1, 61399.0], [43.2, 61399.0], [43.3, 61399.0], [43.4, 61401.0], [43.5, 61401.0], [43.6, 61401.0], [43.7, 61402.0], [43.8, 61404.0], [43.9, 61404.0], [44.0, 61404.0], [44.1, 61404.0], [44.2, 61405.0], [44.3, 61406.0], [44.4, 61408.0], [44.5, 61410.0], [44.6, 61410.0], [44.7, 61413.0], [44.8, 61414.0], [44.9, 61415.0], [45.0, 61416.0], [45.1, 61416.0], [45.2, 61417.0], [45.3, 61418.0], [45.4, 61418.0], [45.5, 61419.0], [45.6, 61419.0], [45.7, 61419.0], [45.8, 61419.0], [45.9, 61422.0], [46.0, 61422.0], [46.1, 61422.0], [46.2, 61423.0], [46.3, 61425.0], [46.4, 61425.0], [46.5, 61426.0], [46.6, 61426.0], [46.7, 61427.0], [46.8, 61428.0], [46.9, 61430.0], [47.0, 61430.0], [47.1, 61430.0], [47.2, 61430.0], [47.3, 61431.0], [47.4, 61435.0], [47.5, 61435.0], [47.6, 61435.0], [47.7, 61436.0], [47.8, 61436.0], [47.9, 61439.0], [48.0, 61439.0], [48.1, 61439.0], [48.2, 61440.0], [48.3, 61441.0], [48.4, 61442.0], [48.5, 61446.0], [48.6, 61446.0], [48.7, 61447.0], [48.8, 61448.0], [48.9, 61449.0], [49.0, 61450.0], [49.1, 61450.0], [49.2, 61452.0], [49.3, 61452.0], [49.4, 61452.0], [49.5, 61452.0], [49.6, 61452.0], [49.7, 61454.0], [49.8, 61455.0], [49.9, 61456.0], [50.0, 61458.0], [50.1, 61458.0], [50.2, 61459.0], [50.3, 61459.0], [50.4, 61459.0], [50.5, 61460.0], [50.6, 61460.0], [50.7, 61460.0], [50.8, 61460.0], [50.9, 61461.0], [51.0, 61462.0], [51.1, 61462.0], [51.2, 61462.0], [51.3, 61463.0], [51.4, 61463.0], [51.5, 61463.0], [51.6, 61463.0], [51.7, 61463.0], [51.8, 61469.0], [51.9, 61471.0], [52.0, 61471.0], [52.1, 61471.0], [52.2, 61471.0], [52.3, 61471.0], [52.4, 61473.0], [52.5, 61474.0], [52.6, 61474.0], [52.7, 61475.0], [52.8, 61477.0], [52.9, 61478.0], [53.0, 61479.0], [53.1, 61479.0], [53.2, 61479.0], [53.3, 61479.0], [53.4, 61480.0], [53.5, 61482.0], [53.6, 61482.0], [53.7, 61483.0], [53.8, 61487.0], [53.9, 61488.0], [54.0, 61489.0], [54.1, 61489.0], [54.2, 61490.0], [54.3, 61491.0], [54.4, 61493.0], [54.5, 61494.0], [54.6, 61494.0], [54.7, 61495.0], [54.8, 61496.0], [54.9, 61498.0], [55.0, 61498.0], [55.1, 61498.0], [55.2, 61498.0], [55.3, 61499.0], [55.4, 61500.0], [55.5, 61502.0], [55.6, 61502.0], [55.7, 61504.0], [55.8, 61504.0], [55.9, 61504.0], [56.0, 61507.0], [56.1, 61507.0], [56.2, 61509.0], [56.3, 61510.0], [56.4, 61512.0], [56.5, 61512.0], [56.6, 61512.0], [56.7, 61513.0], [56.8, 61516.0], [56.9, 61517.0], [57.0, 61518.0], [57.1, 61518.0], [57.2, 61518.0], [57.3, 61518.0], [57.4, 61519.0], [57.5, 61521.0], [57.6, 61521.0], [57.7, 61522.0], [57.8, 61522.0], [57.9, 61522.0], [58.0, 61524.0], [58.1, 61524.0], [58.2, 61524.0], [58.3, 61524.0], [58.4, 61526.0], [58.5, 61526.0], [58.6, 61526.0], [58.7, 61527.0], [58.8, 61529.0], [58.9, 61530.0], [59.0, 61530.0], [59.1, 61530.0], [59.2, 61530.0], [59.3, 61532.0], [59.4, 61532.0], [59.5, 61534.0], [59.6, 61534.0], [59.7, 61534.0], [59.8, 61536.0], [59.9, 61537.0], [60.0, 61537.0], [60.1, 61537.0], [60.2, 61538.0], [60.3, 61539.0], [60.4, 61540.0], [60.5, 61542.0], [60.6, 61542.0], [60.7, 61543.0], [60.8, 61544.0], [60.9, 61544.0], [61.0, 61544.0], [61.1, 61544.0], [61.2, 61544.0], [61.3, 61546.0], [61.4, 61547.0], [61.5, 61550.0], [61.6, 61550.0], [61.7, 61552.0], [61.8, 61554.0], [61.9, 61556.0], [62.0, 61556.0], [62.1, 61556.0], [62.2, 61557.0], [62.3, 61557.0], [62.4, 61557.0], [62.5, 61558.0], [62.6, 61558.0], [62.7, 61559.0], [62.8, 61561.0], [62.9, 61562.0], [63.0, 61562.0], [63.1, 61562.0], [63.2, 61562.0], [63.3, 61564.0], [63.4, 61565.0], [63.5, 61565.0], [63.6, 61565.0], [63.7, 61565.0], [63.8, 61566.0], [63.9, 61566.0], [64.0, 61567.0], [64.1, 61567.0], [64.2, 61567.0], [64.3, 61568.0], [64.4, 61570.0], [64.5, 61570.0], [64.6, 61570.0], [64.7, 61570.0], [64.8, 61570.0], [64.9, 61571.0], [65.0, 61571.0], [65.1, 61571.0], [65.2, 61571.0], [65.3, 61572.0], [65.4, 61574.0], [65.5, 61580.0], [65.6, 61580.0], [65.7, 61582.0], [65.8, 61584.0], [65.9, 61584.0], [66.0, 61587.0], [66.1, 61587.0], [66.2, 61590.0], [66.3, 61590.0], [66.4, 61591.0], [66.5, 61592.0], [66.6, 61592.0], [66.7, 61593.0], [66.8, 61594.0], [66.9, 61594.0], [67.0, 61597.0], [67.1, 61597.0], [67.2, 61597.0], [67.3, 61597.0], [67.4, 61598.0], [67.5, 61598.0], [67.6, 61598.0], [67.7, 61598.0], [67.8, 61599.0], [67.9, 61599.0], [68.0, 61599.0], [68.1, 61599.0], [68.2, 61599.0], [68.3, 61601.0], [68.4, 61602.0], [68.5, 61602.0], [68.6, 61602.0], [68.7, 61604.0], [68.8, 61605.0], [68.9, 61606.0], [69.0, 61607.0], [69.1, 61607.0], [69.2, 61609.0], [69.3, 61610.0], [69.4, 61611.0], [69.5, 61611.0], [69.6, 61611.0], [69.7, 61612.0], [69.8, 61612.0], [69.9, 61613.0], [70.0, 61613.0], [70.1, 61613.0], [70.2, 61614.0], [70.3, 61615.0], [70.4, 61616.0], [70.5, 61617.0], [70.6, 61617.0], [70.7, 61617.0], [70.8, 61617.0], [70.9, 61618.0], [71.0, 61618.0], [71.1, 61618.0], [71.2, 61622.0], [71.3, 61623.0], [71.4, 61624.0], [71.5, 61625.0], [71.6, 61625.0], [71.7, 61625.0], [71.8, 61627.0], [71.9, 61632.0], [72.0, 61633.0], [72.1, 61633.0], [72.2, 61635.0], [72.3, 61635.0], [72.4, 61636.0], [72.5, 61637.0], [72.6, 61637.0], [72.7, 61638.0], [72.8, 61639.0], [72.9, 61639.0], [73.0, 61641.0], [73.1, 61641.0], [73.2, 61643.0], [73.3, 61644.0], [73.4, 61644.0], [73.5, 61644.0], [73.6, 61644.0], [73.7, 61646.0], [73.8, 61646.0], [73.9, 61647.0], [74.0, 61648.0], [74.1, 61648.0], [74.2, 61649.0], [74.3, 61652.0], [74.4, 61652.0], [74.5, 61654.0], [74.6, 61654.0], [74.7, 61655.0], [74.8, 61657.0], [74.9, 61658.0], [75.0, 61658.0], [75.1, 61658.0], [75.2, 61659.0], [75.3, 61662.0], [75.4, 61662.0], [75.5, 61663.0], [75.6, 61663.0], [75.7, 61663.0], [75.8, 61666.0], [75.9, 61667.0], [76.0, 61668.0], [76.1, 61668.0], [76.2, 61668.0], [76.3, 61668.0], [76.4, 61669.0], [76.5, 61670.0], [76.6, 61670.0], [76.7, 61671.0], [76.8, 61671.0], [76.9, 61672.0], [77.0, 61672.0], [77.1, 61672.0], [77.2, 61672.0], [77.3, 61672.0], [77.4, 61675.0], [77.5, 61676.0], [77.6, 61676.0], [77.7, 61677.0], [77.8, 61678.0], [77.9, 61679.0], [78.0, 61679.0], [78.1, 61679.0], [78.2, 61682.0], [78.3, 61682.0], [78.4, 61683.0], [78.5, 61683.0], [78.6, 61683.0], [78.7, 61685.0], [78.8, 61686.0], [78.9, 61688.0], [79.0, 61688.0], [79.1, 61688.0], [79.2, 61689.0], [79.3, 61689.0], [79.4, 61690.0], [79.5, 61690.0], [79.6, 61690.0], [79.7, 61692.0], [79.8, 61693.0], [79.9, 61694.0], [80.0, 61695.0], [80.1, 61695.0], [80.2, 61696.0], [80.3, 61696.0], [80.4, 61696.0], [80.5, 61697.0], [80.6, 61697.0], [80.7, 61698.0], [80.8, 61699.0], [80.9, 61700.0], [81.0, 61700.0], [81.1, 61700.0], [81.2, 61702.0], [81.3, 61703.0], [81.4, 61704.0], [81.5, 61704.0], [81.6, 61704.0], [81.7, 61705.0], [81.8, 61706.0], [81.9, 61706.0], [82.0, 61707.0], [82.1, 61707.0], [82.2, 61707.0], [82.3, 61709.0], [82.4, 61710.0], [82.5, 61713.0], [82.6, 61713.0], [82.7, 61714.0], [82.8, 61717.0], [82.9, 61717.0], [83.0, 61719.0], [83.1, 61719.0], [83.2, 61719.0], [83.3, 61720.0], [83.4, 61720.0], [83.5, 61722.0], [83.6, 61722.0], [83.7, 61723.0], [83.8, 61725.0], [83.9, 61725.0], [84.0, 61726.0], [84.1, 61726.0], [84.2, 61726.0], [84.3, 61727.0], [84.4, 61730.0], [84.5, 61731.0], [84.6, 61731.0], [84.7, 61731.0], [84.8, 61731.0], [84.9, 61732.0], [85.0, 61732.0], [85.1, 61732.0], [85.2, 61733.0], [85.3, 61733.0], [85.4, 61733.0], [85.5, 61734.0], [85.6, 61734.0], [85.7, 61736.0], [85.8, 61737.0], [85.9, 61738.0], [86.0, 61739.0], [86.1, 61739.0], [86.2, 61740.0], [86.3, 61741.0], [86.4, 61744.0], [86.5, 61746.0], [86.6, 61746.0], [86.7, 61749.0], [86.8, 61749.0], [86.9, 61749.0], [87.0, 61749.0], [87.1, 61749.0], [87.2, 61750.0], [87.3, 61751.0], [87.4, 61751.0], [87.5, 61755.0], [87.6, 61755.0], [87.7, 61756.0], [87.8, 61757.0], [87.9, 61758.0], [88.0, 61761.0], [88.1, 61761.0], [88.2, 61762.0], [88.3, 61763.0], [88.4, 61764.0], [88.5, 61764.0], [88.6, 61764.0], [88.7, 61764.0], [88.8, 61764.0], [88.9, 61765.0], [89.0, 61767.0], [89.1, 61767.0], [89.2, 61767.0], [89.3, 61769.0], [89.4, 61770.0], [89.5, 61771.0], [89.6, 61771.0], [89.7, 61773.0], [89.8, 61774.0], [89.9, 61779.0], [90.0, 61779.0], [90.1, 61779.0], [90.2, 61781.0], [90.3, 61781.0], [90.4, 61783.0], [90.5, 61792.0], [90.6, 61792.0], [90.7, 61796.0], [90.8, 61796.0], [90.9, 61798.0], [91.0, 61798.0], [91.1, 61798.0], [91.2, 61802.0], [91.3, 61802.0], [91.4, 61804.0], [91.5, 61805.0], [91.6, 61805.0], [91.7, 61806.0], [91.8, 61807.0], [91.9, 61808.0], [92.0, 61812.0], [92.1, 61812.0], [92.2, 61817.0], [92.3, 61818.0], [92.4, 61825.0], [92.5, 61827.0], [92.6, 61827.0], [92.7, 61829.0], [92.8, 61831.0], [92.9, 61831.0], [93.0, 61837.0], [93.1, 61837.0], [93.2, 61839.0], [93.3, 61842.0], [93.4, 61843.0], [93.5, 61843.0], [93.6, 61843.0], [93.7, 61848.0], [93.8, 61850.0], [93.9, 61852.0], [94.0, 61853.0], [94.1, 61853.0], [94.2, 61858.0], [94.3, 61863.0], [94.4, 61870.0], [94.5, 61871.0], [94.6, 61871.0], [94.7, 61876.0], [94.8, 61878.0], [94.9, 61885.0], [95.0, 61888.0], [95.1, 61888.0], [95.2, 61890.0], [95.3, 61893.0], [95.4, 61898.0], [95.5, 61898.0], [95.6, 61898.0], [95.7, 61902.0], [95.8, 61903.0], [95.9, 61904.0], [96.0, 61911.0], [96.1, 61911.0], [96.2, 61917.0], [96.3, 61918.0], [96.4, 61922.0], [96.5, 61928.0], [96.6, 61928.0], [96.7, 61938.0], [96.8, 61951.0], [96.9, 61957.0], [97.0, 61958.0], [97.1, 61958.0], [97.2, 61963.0], [97.3, 61964.0], [97.4, 61971.0], [97.5, 61972.0], [97.6, 61972.0], [97.7, 61978.0], [97.8, 61981.0], [97.9, 61984.0], [98.0, 61992.0], [98.1, 61992.0], [98.2, 62006.0], [98.3, 62009.0], [98.4, 62018.0], [98.5, 62020.0], [98.6, 62020.0], [98.7, 62024.0], [98.8, 62042.0], [98.9, 62046.0], [99.0, 62050.0], [99.1, 62050.0], [99.2, 62064.0], [99.3, 62077.0], [99.4, 62083.0], [99.5, 62090.0], [99.6, 62090.0], [99.7, 62092.0], [99.8, 62118.0], [99.9, 62163.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 59400.0, "maxY": 106.0, "series": [{"data": [[60800.0, 19.0], [61400.0, 104.0], [61000.0, 84.0], [61300.0, 92.0], [61100.0, 81.0], [61200.0, 106.0], [60900.0, 62.0], [61600.0, 88.0], [61500.0, 93.0], [61700.0, 35.0], [61800.0, 22.0], [61900.0, 12.0], [62000.0, 2.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[59600.0, 32.0], [60500.0, 28.0], [60000.0, 30.0], [59700.0, 35.0], [60600.0, 28.0], [60700.0, 7.0], [60800.0, 6.0], [60900.0, 1.0], [60300.0, 37.0], [59900.0, 33.0], [59800.0, 30.0], [60400.0, 32.0], [60200.0, 38.0], [59400.0, 3.0], [59500.0, 27.0], [60100.0, 33.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[64400.0, 5.0], [64200.0, 4.0], [64500.0, 4.0], [64100.0, 20.0], [64600.0, 3.0], [64300.0, 3.0], [64000.0, 1.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[61400.0, 96.0], [61300.0, 100.0], [60900.0, 15.0], [61100.0, 77.0], [61200.0, 91.0], [61000.0, 64.0], [61700.0, 82.0], [61600.0, 101.0], [61500.0, 103.0], [61800.0, 36.0], [61900.0, 20.0], [62000.0, 13.0], [62100.0, 2.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2040.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 2040.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 2040.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 21.37499999999999, "minX": 1.61940162E12, "maxY": 404.6387499999996, "series": [{"data": [[1.61940162E12, 404.6387499999996]], "isOverall": false, "label": "UserType3_LB-split(Nutt)", "isController": false}, {"data": [[1.61940162E12, 402.42124999999993]], "isOverall": false, "label": "UserType2_LB-split(Boss)", "isController": false}, {"data": [[1.61940162E12, 21.37499999999999]], "isOverall": false, "label": "UserType1_LB-split(Dear)", "isController": false}, {"data": [[1.61940162E12, 234.69500000000008]], "isOverall": false, "label": "UserType4_LB-split(Haris)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940162E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 59494.0, "minX": 1.0, "maxY": 64567.0, "series": [{"data": [[58.0, 61670.5], [63.0, 61629.0], [62.0, 61472.5], [71.0, 61412.0], [69.0, 61492.5], [75.0, 61612.0], [72.0, 61532.0], [78.0, 61678.0], [76.0, 61857.8], [86.0, 61477.0], [85.0, 61996.0], [84.0, 61837.0], [90.0, 61705.0], [95.0, 61824.0], [94.0, 61504.0], [93.0, 61343.0], [99.0, 62021.0], [98.0, 61864.0], [96.0, 61415.0], [103.0, 61782.0], [102.0, 61743.0], [105.0, 61503.0], [124.0, 61569.0], [135.0, 61247.0], [132.0, 61917.0], [131.0, 61609.0], [129.0, 61969.0], [140.0, 61608.0], [137.0, 61368.0], [149.0, 61795.0], [144.0, 61315.0], [156.0, 61594.5], [166.0, 61834.0], [165.0, 61834.5], [163.0, 61234.0], [161.0, 61727.333333333336], [160.0, 61902.0], [175.0, 61586.0], [172.0, 61384.0], [169.0, 61414.0], [182.0, 61886.0], [179.0, 61820.0], [177.0, 61461.0], [189.0, 61566.333333333336], [186.0, 61260.0], [185.0, 61540.0], [184.0, 61369.0], [207.0, 61551.0], [214.0, 61329.5], [211.0, 61190.0], [209.0, 61471.0], [221.0, 61781.6], [217.0, 61829.0], [234.0, 61537.0], [233.0, 61256.0], [244.0, 61656.0], [240.0, 61296.0], [254.0, 61681.0], [253.0, 61854.5], [250.0, 61721.0], [249.0, 61161.0], [259.0, 61361.0], [270.0, 61266.5], [268.0, 61811.0], [267.0, 61541.0], [266.0, 61322.0], [264.0, 61381.5], [262.0, 61441.0], [261.0, 61921.0], [260.0, 61821.0], [257.0, 61502.5], [256.0, 61801.0], [285.0, 61346.5], [283.0, 61765.5], [281.0, 61615.5], [280.0, 61426.0], [279.0, 61626.0], [277.0, 61426.0], [272.0, 61347.0], [319.0, 61450.333333333336], [318.0, 61716.0], [313.0, 61557.0], [312.0, 61635.0], [309.0, 61358.0], [307.0, 61278.0], [305.0, 61878.0], [304.0, 61117.0], [335.0, 61544.0], [332.0, 61664.0], [331.0, 61304.0], [330.0, 61425.0], [327.0, 61692.75], [326.0, 61477.0], [322.0, 61317.0], [351.0, 61842.5], [349.0, 61643.0], [348.0, 61742.0], [345.0, 61102.0], [344.0, 61363.0], [343.0, 61463.0], [339.0, 61402.5], [358.0, 61502.0], [357.0, 61242.0], [353.0, 61142.0], [352.0, 61766.0], [382.0, 61234.0], [399.0, 61552.0], [398.0, 61152.0], [397.0, 61632.333333333336], [396.0, 61452.5], [393.0, 61433.0], [390.0, 61212.5], [387.0, 61113.0], [385.0, 61474.0], [407.0, 61380.0], [406.0, 61632.0], [405.0, 61605.333333333336], [404.0, 61733.0], [403.0, 61272.0], [400.0, 61393.0], [420.0, 61137.0], [419.0, 61218.0], [447.0, 61483.0], [446.0, 61383.0], [445.0, 61523.0], [441.0, 61783.5], [439.0, 61324.0], [437.0, 61423.5], [436.0, 61084.0], [433.0, 61164.0], [452.0, 61342.0], [450.0, 61704.0], [449.0, 61603.0], [448.0, 61683.0], [477.0, 61149.0], [495.0, 61614.0], [492.0, 61386.0], [489.0, 61456.0], [485.0, 61496.0], [511.0, 61373.666666666664], [508.0, 61227.333333333336], [506.0, 61654.0], [505.0, 61454.0], [503.0, 61734.0], [502.0, 61454.666666666664], [499.0, 61336.0], [497.0, 61255.0], [538.0, 61720.0], [542.0, 61281.0], [537.0, 61663.0], [519.0, 61162.0], [535.0, 61401.0], [534.0, 61481.0], [531.0, 61122.0], [530.0, 61362.0], [527.0, 61342.0], [523.0, 61521.0], [551.0, 61119.5], [574.0, 61092.0], [573.0, 61532.5], [569.0, 61333.0], [564.0, 61465.333333333336], [557.0, 61627.0], [544.0, 61561.0], [549.0, 61079.0], [548.0, 61480.0], [546.0, 61321.0], [545.0, 61599.0], [594.0, 61491.0], [606.0, 61583.333333333336], [603.0, 61196.333333333336], [600.0, 61477.0], [582.0, 61292.0], [581.0, 61212.0], [580.0, 61591.5], [578.0, 61332.333333333336], [576.0, 61172.0], [597.0, 61451.0], [596.0, 61310.0], [595.0, 61091.0], [592.0, 61252.0], [590.0, 61074.8], [589.0, 61011.0], [588.0, 61651.0], [586.0, 61531.0], [612.0, 61199.0], [610.0, 61079.0], [609.0, 61119.0], [659.0, 61185.0], [669.0, 61343.0], [671.0, 61223.0], [658.0, 61303.5], [668.0, 61490.0], [666.0, 61265.0], [664.0, 61064.0], [649.0, 61002.5], [646.0, 61265.0], [645.0, 61624.0], [647.0, 61425.0], [663.0, 61462.333333333336], [661.0, 61144.0], [660.0, 60943.0], [676.0, 60982.0], [687.0, 61404.57142857143], [680.0, 61583.0], [679.0, 61542.0], [678.0, 61541.0], [677.0, 61369.0], [675.0, 61303.0], [673.0, 61503.0], [672.0, 61224.0], [720.0, 61223.0], [719.0, 61060.0], [713.0, 61463.0], [776.0, 61419.0], [829.0, 60934.0], [826.0, 61017.0], [825.0, 61533.0], [819.0, 61376.0], [816.0, 61257.0], [802.0, 61259.0], [857.0, 61351.0], [855.0, 61566.0], [854.0, 61292.0], [852.0, 61166.0], [848.0, 61352.0], [843.0, 61650.0], [837.0, 61526.0], [895.0, 61409.0], [894.0, 61031.0], [891.0, 61510.0], [889.0, 60910.0], [909.0, 61402.0], [905.0, 61448.0], [903.0, 61203.0], [902.0, 61168.0], [900.0, 61187.666666666664], [899.0, 61610.0], [896.0, 61046.0], [1010.0, 61405.0], [1022.0, 61577.0], [1023.0, 61466.0], [1009.0, 61583.0], [1008.0, 61264.0], [1021.0, 61475.0], [1019.0, 61278.0], [1016.0, 61198.5], [998.0, 61105.0], [1007.0, 61339.0], [1004.0, 61165.0], [1002.0, 61464.0], [1001.0, 61439.0], [1015.0, 60918.0], [1013.0, 61401.0], [1012.0, 61076.0], [1075.0, 60906.0], [1083.0, 60950.0], [1085.0, 61419.0], [1056.0, 61336.0], [1063.0, 61551.0], [1061.0, 61147.5], [1067.0, 61034.0], [1064.0, 61410.0], [1081.0, 61382.0], [1080.0, 61201.0], [1077.0, 61280.0], [1074.0, 61303.0], [1036.0, 61276.0], [1033.0, 60955.0], [1030.0, 61678.0], [1029.0, 61566.0], [1028.0, 61158.0], [1026.0, 61014.5], [1025.0, 60944.0], [1055.0, 61278.0], [1053.0, 61382.0], [1052.0, 61229.0], [1050.0, 61682.0], [1046.0, 61319.0], [1041.0, 61483.0], [1071.0, 61148.666666666664], [1069.0, 61186.0], [1110.0, 61537.0], [1146.0, 61380.0], [1099.0, 61246.5], [1096.0, 61068.0], [1094.0, 61422.0], [1093.0, 61542.0], [1092.0, 61393.0], [1090.0, 61592.0], [1089.0, 61664.0], [1088.0, 61106.0], [1098.0, 61150.5], [1115.0, 61027.0], [1112.0, 61547.0], [1108.0, 61308.0], [1107.0, 61319.0], [1106.0, 61465.0], [1105.0, 61671.0], [1104.0, 61360.0], [1211.0, 61630.0], [1212.0, 60896.0], [1200.0, 61394.0], [1167.0, 61113.5], [1160.0, 61540.0], [1155.0, 61419.0], [1199.0, 61221.0], [1197.0, 61625.0], [1186.0, 61389.0], [1184.0, 61584.0], [1183.0, 60994.0], [1179.0, 61424.0], [1178.0, 61629.0], [1175.0, 61302.333333333336], [1172.0, 60908.0], [1255.0, 61128.0], [1275.0, 61497.5], [1264.0, 61047.0], [1230.0, 61101.0], [1226.0, 60977.0], [1224.0, 61351.0], [1222.0, 60911.0], [1262.0, 61647.0], [1260.0, 61249.0], [1259.0, 61167.0], [1254.0, 61311.0], [1248.0, 61191.5], [1247.0, 61553.5], [1245.0, 61539.0], [1244.0, 61098.0], [1242.0, 61658.0], [1239.0, 61091.0], [1234.0, 61111.0], [1331.0, 61650.0], [1338.0, 61018.0], [1343.0, 61333.0], [1316.0, 61246.0], [1312.0, 61481.0], [1322.0, 61534.0], [1318.0, 61129.0], [1326.0, 61581.0], [1325.0, 61053.0], [1341.0, 61572.0], [1340.0, 60883.0], [1335.0, 61566.0], [1334.0, 60964.0], [1333.0, 61225.0], [1328.0, 61409.0], [1292.0, 61288.0], [1291.0, 61177.0], [1290.0, 61300.0], [1288.0, 61469.0], [1287.0, 60982.0], [1281.0, 61557.0], [1308.0, 61286.0], [1306.0, 61288.0], [1304.0, 61476.0], [1303.0, 61615.0], [1302.0, 61184.0], [1300.0, 61295.0], [1298.0, 60988.0], [1407.0, 61181.0], [1392.0, 61324.5], [1354.0, 60943.0], [1353.0, 61410.5], [1351.0, 61361.5], [1349.0, 61261.0], [1347.0, 60931.0], [1344.0, 61018.0], [1390.0, 61103.0], [1388.0, 61418.333333333336], [1387.0, 61442.0], [1380.0, 61390.666666666664], [1377.0, 61205.0], [1375.0, 61336.0], [1374.0, 61043.0], [1373.0, 61144.0], [1372.0, 60883.0], [1371.0, 61008.0], [1368.0, 61011.0], [1366.0, 61240.2], [1364.0, 61207.0], [1362.0, 61243.0], [1468.0, 61122.5], [1471.0, 61235.333333333336], [1441.0, 61171.5], [1440.0, 60962.0], [1447.0, 60958.0], [1442.0, 61012.0], [1450.0, 61228.0], [1449.0, 61284.0], [1455.0, 61605.0], [1453.0, 61384.0], [1470.0, 61165.25], [1469.0, 61283.0], [1466.0, 61375.0], [1464.0, 61299.0], [1467.0, 61659.0], [1463.0, 61061.5], [1459.0, 61600.0], [1456.0, 61254.5], [1439.0, 61598.0], [1409.0, 61296.0], [1412.0, 60935.0], [1411.0, 61299.0], [1414.0, 61643.0], [1413.0, 61208.0], [1419.0, 61002.0], [1417.0, 61621.5], [1421.0, 61213.0], [1420.0, 61610.0], [1423.0, 60881.0], [1422.0, 61336.0], [1437.0, 61021.5], [1436.0, 61087.0], [1435.0, 61175.0], [1434.0, 61413.5], [1432.0, 61058.0], [1431.0, 61302.75], [1429.0, 61140.0], [1427.0, 61099.0], [1426.0, 61116.5], [1424.0, 61460.5], [1529.0, 61309.0], [1534.0, 61308.0], [1505.0, 61123.0], [1509.0, 61488.0], [1508.0, 61650.0], [1506.0, 61262.0], [1514.0, 61127.5], [1513.0, 61525.0], [1512.0, 61202.5], [1516.0, 61210.666666666664], [1515.0, 61169.0], [1531.0, 61208.0], [1530.0, 61155.0], [1528.0, 61361.5], [1524.0, 61477.0], [1523.0, 61465.5], [1522.0, 61349.666666666664], [1503.0, 61340.666666666664], [1472.0, 61080.0], [1479.0, 61235.4], [1476.0, 61209.0], [1484.0, 61262.0], [1480.0, 61131.0], [1486.0, 61359.25], [1485.0, 61260.5], [1501.0, 61576.333333333336], [1500.0, 61636.0], [1499.0, 61310.0], [1497.0, 61399.333333333336], [1496.0, 61606.0], [1495.0, 61199.666666666664], [1493.0, 61208.0], [1490.0, 60918.0], [1489.0, 61311.5], [1488.0, 61237.0], [1519.0, 60894.0], [1517.0, 61254.0], [1591.0, 61285.0], [1597.0, 61338.5], [1571.0, 61236.0], [1570.0, 61153.0], [1574.0, 61049.0], [1572.0, 61155.0], [1580.0, 60968.0], [1576.0, 60879.0], [1596.0, 61312.5], [1594.0, 61034.0], [1590.0, 61003.0], [1589.0, 61551.0], [1588.0, 61308.0], [1585.0, 61130.0], [1566.0, 61007.0], [1537.0, 61277.0], [1536.0, 61384.0], [1539.0, 61085.0], [1538.0, 60915.0], [1543.0, 61399.0], [1540.0, 61239.333333333336], [1546.0, 61119.0], [1544.0, 61633.0], [1549.0, 61451.0], [1548.0, 60931.0], [1551.0, 61181.0], [1550.0, 61359.0], [1565.0, 61052.4], [1562.0, 61126.0], [1561.0, 60882.0], [1560.0, 61441.0], [1559.0, 60879.0], [1554.0, 61218.0], [1553.0, 61199.0], [1582.0, 61401.0], [1581.0, 61424.666666666664], [1637.0, 60854.0], [1640.0, 61254.42857142858], [1639.0, 61266.0], [1638.0, 61189.25], [1636.0, 61126.0], [1635.0, 61214.0], [1634.0, 60933.0], [1607.0, 61234.27272727273], [1606.0, 61322.0], [1603.0, 61232.0], [1601.0, 61035.0], [1602.0, 60969.0], [1600.0, 61472.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[958.5812500000002, 61351.90750000003]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[1679.0, 60359.0], [1720.0, 60116.75000000001], [1712.0, 60500.5], [1710.0, 60217.75], [1702.0, 60248.5], [1700.0, 60260.2], [1690.0, 60152.166666666664], [1684.0, 60468.0], [1680.0, 60240.0], [1678.0, 60312.75], [1670.0, 60352.43333333332], [1782.0, 59956.0], [1780.0, 59955.6], [1775.0, 60234.6], [1770.0, 60114.6], [1760.0, 60057.14285714286], [1746.0, 60298.833333333336], [1740.0, 60258.4], [1735.0, 60058.8], [1730.0, 60178.7], [1803.0, 60131.333333333336], [1800.0, 60182.0], [1799.0, 59979.4], [1798.0, 60122.0], [1793.0, 60245.0], [1796.0, 59645.0], [1795.0, 60003.0], [1893.0, 60212.5], [1913.0, 60348.0], [1919.0, 59777.5], [1890.0, 59782.0], [1888.0, 60457.0], [1892.0, 60026.0], [1891.0, 60152.0], [1896.0, 60508.0], [1898.0, 60230.0], [1897.0, 59941.333333333336], [1901.0, 60480.0], [1900.0, 59901.0], [1916.0, 60129.0], [1915.0, 59888.0], [1911.0, 60065.75], [1907.0, 60260.0], [1905.0, 59916.0], [1904.0, 60125.0], [1886.0, 59980.5], [1884.0, 59752.0], [1903.0, 60643.0], [1902.0, 59518.0], [1957.0, 60354.0], [1977.0, 59916.0], [1982.0, 59745.0], [1952.0, 60032.0], [1953.0, 59704.0], [1956.0, 60473.0], [1955.0, 60225.2], [1958.0, 60175.333333333336], [1960.0, 60374.0], [1961.0, 60222.0], [1959.0, 60116.333333333336], [1964.0, 60049.75], [1962.0, 59620.0], [1967.0, 59728.333333333336], [1965.0, 59630.0], [1980.0, 60358.5], [1978.0, 59494.0], [1975.0, 59882.5], [1974.0, 60484.5], [1971.0, 60130.333333333336], [1970.0, 59818.666666666664], [1968.0, 60493.0], [1935.0, 59957.333333333336], [1934.0, 59986.0], [1933.0, 59495.0], [1932.0, 59803.0], [1931.0, 59916.666666666664], [1930.0, 60191.0], [1926.0, 60248.333333333336], [1924.0, 60131.0], [1922.0, 60195.5], [1921.0, 60017.0], [1920.0, 60235.0], [1951.0, 59799.666666666664], [1950.0, 60175.5], [1949.0, 60107.5], [1948.0, 60094.0], [1947.0, 60228.0], [1946.0, 60055.8], [1945.0, 59560.0], [1944.0, 59805.75], [1941.0, 60124.0], [1940.0, 60348.5], [1938.0, 59648.0], [1936.0, 59871.0], [2039.0, 59749.0], [2023.0, 60116.0], [2040.0, 60068.88095238095], [2017.0, 59940.5], [2016.0, 60223.0], [2037.0, 59901.0], [2035.0, 60105.75], [2032.0, 59688.0], [1999.0, 60427.5], [1998.0, 59923.5], [1996.0, 60567.0], [1995.0, 60269.0], [1993.0, 59875.0], [1990.0, 59953.0], [1988.0, 60096.0], [1987.0, 60166.0], [1986.0, 60029.0], [1985.0, 60523.0], [1984.0, 60266.0], [2013.0, 60059.0], [2012.0, 59862.0], [2011.0, 60060.5], [2007.0, 59868.0], [2006.0, 60607.0], [2005.0, 59940.0], [2003.0, 60349.0], [2001.0, 60128.0], [2002.0, 59730.0], [2031.0, 59924.75], [2028.0, 60623.0], [2029.0, 60017.0], [2024.0, 60176.666666666664], [2022.0, 60144.0], [2021.0, 60504.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1874.695000000001, 60120.05999999999]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[2.0, 64103.0], [35.0, 64567.0], [37.0, 64280.5], [36.0, 64468.0], [38.0, 64460.5], [40.0, 64339.0], [3.0, 64113.0], [4.0, 64106.0], [5.0, 64100.0], [6.0, 64110.0], [7.0, 64103.0], [8.0, 64099.0], [9.0, 64109.0], [10.0, 64119.0], [11.0, 64113.0], [12.0, 64123.0], [13.0, 64117.0], [14.0, 64140.0], [15.0, 64146.0], [16.0, 64119.0], [1.0, 64109.0], [17.0, 64423.0], [19.0, 64387.0], [20.0, 64145.0], [21.0, 64196.0], [23.0, 64220.0], [25.0, 64370.0], [26.0, 64171.0], [27.0, 64419.333333333336], [30.0, 64500.333333333336]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[21.349999999999998, 64275.075000000004]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[43.0, 61402.0], [44.0, 61779.0], [48.0, 61890.25], [50.0, 62163.0], [53.0, 61602.0], [52.0, 61562.0], [55.0, 62042.0], [54.0, 61922.0], [56.0, 61682.0], [63.0, 61853.0], [67.0, 62092.0], [64.0, 61532.0], [69.0, 61612.0], [77.0, 61479.0], [82.0, 61398.0], [81.0, 61518.0], [80.0, 61357.0], [84.0, 61878.0], [92.0, 61624.5], [98.0, 61984.0], [97.0, 62024.0], [102.0, 61863.0], [100.0, 61984.0], [107.0, 61812.0], [106.0, 61783.0], [105.0, 61663.0], [111.0, 61558.0], [108.0, 61612.0], [115.0, 61401.0], [114.0, 61918.0], [113.0, 61530.0], [119.0, 61401.0], [118.0, 61971.0], [117.0, 61571.0], [116.0, 61690.0], [123.0, 61370.0], [121.0, 62090.0], [120.0, 61570.0], [127.0, 62050.0], [126.0, 61917.0], [125.0, 61690.0], [135.0, 62009.0], [134.0, 61808.0], [132.0, 61890.0], [129.0, 61770.0], [142.0, 62017.0], [136.0, 61649.0], [151.0, 61876.0], [150.0, 61316.0], [149.0, 61597.0], [147.0, 61810.0], [145.0, 61357.0], [144.0, 61837.0], [156.0, 61796.0], [154.0, 61556.0], [152.0, 61436.0], [167.0, 61755.0], [163.0, 61516.0], [161.0, 61636.0], [182.0, 61740.0], [179.0, 61369.0], [177.0, 61981.0], [190.0, 61487.0], [184.0, 61659.0], [199.0, 61886.0], [196.0, 61627.666666666664], [193.0, 61807.0], [192.0, 61746.5], [206.0, 61672.0], [205.0, 61352.0], [203.0, 61271.0], [202.0, 61593.0], [201.0, 61586.0], [214.0, 61951.0], [211.0, 61632.0], [216.0, 61831.0], [231.0, 61418.0], [230.0, 61658.0], [229.0, 61842.0], [228.0, 61696.0], [227.0, 61918.0], [225.0, 61569.0], [239.0, 61297.0], [238.0, 61737.0], [237.0, 61978.0], [236.0, 61818.0], [234.0, 61257.0], [245.0, 61564.0], [244.0, 61597.0], [241.0, 61338.0], [253.0, 61524.0], [249.0, 61710.666666666664], [286.0, 61733.0], [291.0, 61844.5], [302.0, 61550.0], [303.0, 61198.0], [300.0, 61712.0], [298.0, 61492.5], [297.0, 61652.0], [295.0, 61612.0], [294.0, 61331.5], [290.0, 61613.0], [288.0, 61393.0], [315.0, 61918.0], [313.0, 61839.0], [309.0, 61360.0], [334.0, 61624.0], [330.0, 61404.5], [349.0, 61663.0], [341.0, 61343.0], [338.0, 61744.0], [336.0, 61664.5], [367.0, 61348.0], [366.0, 61289.0], [364.0, 61167.0], [363.0, 61208.0], [361.0, 61728.666666666664], [357.0, 61402.0], [382.0, 61154.0], [380.0, 61567.0], [378.0, 61567.0], [377.0, 61749.0], [376.0, 61607.0], [374.0, 61568.0], [372.0, 61888.0], [370.0, 61688.0], [368.0, 61368.0], [394.0, 61554.0], [390.0, 61594.0], [387.0, 61675.0], [386.0, 61275.0], [384.0, 61635.0], [415.0, 61458.0], [414.0, 61479.0], [413.0, 61720.0], [412.0, 61699.0], [410.0, 61260.0], [408.0, 61419.0], [429.0, 61765.0], [428.0, 61459.666666666664], [426.0, 61686.0], [424.0, 61806.0], [423.0, 61418.0], [421.0, 61818.0], [420.0, 61878.0], [417.0, 61378.0], [446.0, 61244.0], [444.0, 61124.0], [434.0, 61165.0], [433.0, 61578.666666666664], [462.0, 61411.5], [460.0, 61471.5], [459.0, 61512.0], [457.0, 61492.5], [458.0, 61392.0], [456.0, 61694.0], [453.0, 61632.0], [467.0, 61671.0], [478.0, 61310.0], [477.0, 61870.0], [475.0, 61670.5], [474.0, 61831.0], [473.0, 61591.0], [471.0, 61410.5], [469.0, 61110.0], [468.0, 61451.333333333336], [465.0, 61310.0], [464.0, 61272.0], [494.0, 61217.0], [491.0, 61137.0], [489.0, 61437.5], [486.0, 61338.0], [485.0, 61458.0], [482.0, 61538.0], [481.0, 61290.0], [480.0, 61829.0], [503.0, 61696.0], [498.0, 61456.0], [542.0, 61483.0], [543.0, 61081.0], [540.0, 61363.0], [538.0, 61244.0], [534.0, 61802.0], [532.0, 61764.0], [529.0, 61503.5], [527.0, 61843.0], [513.0, 61805.0], [512.0, 61764.0], [517.0, 61084.0], [516.0, 61165.0], [519.0, 61243.5], [518.0, 61644.0], [524.0, 61723.0], [523.0, 61464.0], [521.0, 61165.0], [571.0, 61414.0], [573.0, 61494.0], [569.0, 61494.0], [544.0, 61562.0], [565.0, 61374.0], [564.0, 61547.0], [563.0, 61413.666666666664], [560.0, 61647.0], [559.0, 61425.0], [554.0, 61666.0], [552.0, 61268.0], [626.0, 61477.0], [638.0, 61424.333333333336], [635.0, 61637.0], [634.0, 61457.5], [632.0, 61118.0], [621.0, 61518.333333333336], [609.0, 61080.0], [614.0, 61306.333333333336], [611.0, 61159.0], [618.0, 61238.0], [617.0, 61679.0], [616.0, 61300.0], [631.0, 61478.5], [629.0, 61359.5], [627.0, 61719.0], [625.0, 61395.0], [624.0, 61317.5], [668.0, 61045.0], [662.0, 61625.0], [659.0, 61406.0], [657.0, 61598.0], [656.0, 61366.0], [645.0, 61246.0], [643.0, 61517.666666666664], [641.0, 61518.0], [701.0, 61430.0], [703.0, 61465.5], [700.0, 61507.0], [699.0, 61749.0], [698.0, 61527.0], [697.0, 61510.0], [695.0, 61262.0], [693.0, 61436.333333333336], [690.0, 61366.5], [688.0, 61462.0], [733.0, 61221.0], [735.0, 61647.0], [721.0, 61528.0], [720.0, 61358.0], [731.0, 61083.0], [730.0, 61570.0], [729.0, 61169.0], [728.0, 61258.0], [719.0, 61404.0], [706.0, 61454.5], [705.0, 61662.0], [710.0, 61165.0], [708.0, 61530.0], [718.0, 61764.0], [715.0, 61644.0], [713.0, 61044.0], [712.0, 61478.5], [727.0, 61336.0], [725.0, 61738.0], [724.0, 61477.5], [722.0, 61359.0], [765.0, 61199.0], [766.0, 61328.0], [764.0, 61258.0], [761.0, 61357.0], [760.0, 61411.0], [742.0, 61327.0], [741.0, 61101.0], [739.0, 61515.0], [738.0, 61455.0], [736.0, 61449.0], [751.0, 61101.0], [748.0, 61773.0], [747.0, 61172.0], [746.0, 61562.0], [745.0, 61142.0], [744.0, 61354.0], [759.0, 61615.0], [757.0, 61322.0], [755.0, 61402.6], [754.0, 61283.0], [798.0, 61444.0], [799.0, 61537.0], [793.0, 61382.5], [792.0, 61616.0], [791.0, 61099.0], [788.0, 61529.0], [786.0, 61259.0], [784.0, 61585.0], [783.0, 61410.0], [768.0, 61460.0], [770.0, 61365.0], [769.0, 61479.0], [774.0, 61561.5], [773.0, 61490.0], [782.0, 61604.0], [781.0, 61570.0], [780.0, 61418.5], [778.0, 61599.0], [776.0, 61165.0], [829.0, 61211.0], [831.0, 61582.0], [827.0, 61561.0], [826.0, 61265.0], [824.0, 61489.0], [807.0, 61694.0], [805.0, 61484.5], [804.0, 61336.0], [800.0, 61044.0], [822.0, 61375.0], [819.0, 61597.0], [817.0, 61108.0], [814.0, 61135.5], [813.0, 61452.0], [812.0, 61203.0], [810.0, 61415.0], [808.0, 61078.0], [862.0, 61332.0], [863.0, 61255.0], [861.0, 61689.0], [860.0, 61128.0], [858.0, 61182.5], [839.0, 61350.0], [838.0, 61493.0], [835.0, 61136.0], [834.0, 61648.5], [847.0, 61761.0], [845.0, 61277.0], [844.0, 61720.0], [842.0, 61384.5], [840.0, 61294.0], [854.0, 61452.0], [852.0, 61635.0], [851.0, 61733.0], [849.0, 61341.5], [892.0, 61555.5], [894.0, 61006.0], [889.0, 61208.666666666664], [888.0, 61678.0], [884.0, 61248.0], [883.0, 61236.0], [882.0, 61204.6], [877.0, 61274.0], [865.0, 61326.0], [868.0, 61323.5], [866.0, 61197.0], [876.0, 61141.5], [875.0, 61298.5], [874.0, 61769.0], [873.0, 61014.0], [923.0, 61103.5], [927.0, 61343.0], [921.0, 61152.0], [920.0, 61165.333333333336], [917.0, 61242.5], [915.0, 61293.0], [914.0, 61371.0], [912.0, 61599.0], [911.0, 61731.0], [908.0, 61176.0], [906.0, 61239.0], [904.0, 61173.0], [956.0, 61408.75], [955.0, 61117.0], [948.0, 61509.0], [949.0, 61322.0], [950.0, 61109.0], [952.0, 60997.0], [944.0, 61521.0], [942.0, 61389.5], [929.0, 61480.0], [928.0, 61075.0], [931.0, 60991.0], [930.0, 61473.0], [935.0, 61270.0], [933.0, 61390.0], [941.0, 60992.0], [940.0, 61030.0], [989.0, 61386.5], [991.0, 61277.666666666664], [987.0, 61405.0], [984.0, 61717.0], [982.0, 61602.0], [981.0, 61249.0], [978.0, 61355.5], [976.0, 61320.0], [971.0, 61399.0], [965.0, 61709.0], [964.0, 61238.0], [963.0, 61089.5], [969.0, 61317.0], [1022.0, 61242.0], [1016.0, 61225.0], [998.0, 61166.0], [997.0, 61360.0], [996.0, 61254.5], [994.0, 61490.0], [992.0, 61088.0], [1012.0, 61394.0], [1014.0, 61359.0], [1010.0, 61187.0], [1009.0, 61357.0], [1006.0, 61597.5], [1004.0, 61195.0], [1002.0, 60991.0], [1001.0, 61764.0], [1000.0, 61331.5], [1034.0, 61751.0], [1060.0, 61395.0], [1071.0, 61439.0], [1067.0, 61224.0], [1061.0, 61112.0], [1055.0, 61111.0], [1058.0, 61388.0], [1039.0, 61633.0], [1036.0, 61072.0], [1033.0, 61592.5], [1032.0, 61200.0], [1030.0, 61605.0], [1028.0, 61223.0], [1024.0, 61000.0], [1052.0, 61749.0], [1050.0, 61642.0], [1048.0, 61504.0], [1047.0, 61145.0], [1046.0, 61037.0], [1045.0, 61463.0], [1044.0, 61544.0], [1043.0, 61538.333333333336], [1041.0, 61559.0], [1148.0, 61022.0], [1151.0, 61029.0], [1120.0, 61622.0], [1125.0, 61426.0], [1123.0, 61560.0], [1129.0, 61643.5], [1127.0, 61306.5], [1132.0, 61459.0], [1131.0, 61477.0], [1133.0, 61382.0], [1134.0, 61668.0], [1150.0, 61183.0], [1149.0, 61234.0], [1147.0, 61231.0], [1145.0, 61471.0], [1144.0, 61331.0], [1143.0, 61394.0], [1140.0, 61553.0], [1139.0, 61029.0], [1137.0, 61428.0], [1136.0, 61258.5], [1119.0, 61456.333333333336], [1094.0, 61700.0], [1116.0, 61459.0], [1115.0, 61403.0], [1114.0, 61423.0], [1112.0, 61459.0], [1108.0, 61676.0], [1106.0, 61707.0], [1202.0, 61177.0], [1208.0, 61187.0], [1213.0, 61214.25], [1186.0, 61219.0], [1184.0, 61328.0], [1191.0, 61368.0], [1190.0, 61253.5], [1198.0, 61205.5], [1193.0, 60987.0], [1212.0, 61144.0], [1209.0, 61584.0], [1206.0, 61115.5], [1204.0, 61293.0], [1203.0, 61016.0], [1201.0, 61181.0], [1200.0, 61657.0], [1183.0, 61488.0], [1152.0, 61627.0], [1155.0, 61303.0], [1154.0, 61298.0], [1158.0, 61453.0], [1156.0, 61075.0], [1164.0, 61458.5], [1161.0, 61389.5], [1167.0, 60978.0], [1166.0, 61387.0], [1180.0, 61303.5], [1173.0, 61543.0], [1172.0, 61267.0], [1171.0, 61141.0], [1168.0, 61153.0], [1265.0, 61416.0], [1276.0, 61322.0], [1279.0, 61613.0], [1250.0, 61058.0], [1248.0, 61532.0], [1258.0, 61732.0], [1256.0, 61704.0], [1275.0, 61319.0], [1272.0, 61267.0], [1268.0, 61286.25], [1264.0, 61322.0], [1228.0, 61077.0], [1227.0, 61411.5], [1224.0, 61325.0], [1223.0, 61271.0], [1222.0, 61618.0], [1221.0, 61353.0], [1218.0, 61453.5], [1217.0, 61067.0], [1216.0, 61500.0], [1245.0, 61502.0], [1241.0, 61537.0], [1238.0, 61496.0], [1237.0, 61695.0], [1236.0, 61574.0], [1234.0, 61399.0], [1233.0, 61020.0], [1235.0, 61463.0], [1261.0, 61746.0], [1259.0, 61740.0], [1332.0, 61463.0], [1338.0, 60969.0], [1343.0, 61725.5], [1336.0, 61703.0], [1335.0, 61379.0], [1334.0, 61598.0], [1330.0, 61697.0], [1293.0, 61177.0], [1288.0, 61248.0], [1287.0, 61248.0], [1284.0, 61022.0], [1283.0, 61638.5], [1281.0, 61310.0], [1308.0, 61427.0], [1304.0, 61302.0], [1303.0, 61247.0], [1302.0, 61021.0], [1301.0, 61068.0], [1300.0, 61099.0], [1326.0, 61739.0], [1321.0, 61205.5], [1312.0, 61335.0], [1370.0, 61534.0], [1366.0, 61611.0], [1365.0, 61592.0], [1360.0, 61688.0], [1357.0, 61449.0], [1353.0, 61498.0], [1347.0, 61467.333333333336], [1585.0, 61733.0], [1564.0, 61614.0], [1607.0, 61478.0], [1605.0, 61358.0]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[730.1350000000001, 61455.40625000001]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2040.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61940162E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940162E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 60120.05999999999, "minX": 1.61940162E12, "maxY": 64275.075000000004, "series": [{"data": [[1.61940162E12, 61351.90750000003]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940162E12, 60120.05999999999]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940162E12, 64275.075000000004]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940162E12, 61455.40625000001]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940162E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940162E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940162E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940162E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940162E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940162E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 59494.0, "minX": 1.61940162E12, "maxY": 64662.0, "series": [{"data": [[1.61940162E12, 64662.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61940162E12, 61739.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61940162E12, 64185.75]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61940162E12, 61877.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61940162E12, 59494.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61940162E12, 61310.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940162E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60124.0, "minX": 19.0, "maxY": 64113.0, "series": [{"data": [[19.0, 64113.0], [400.0, 60124.0], [1621.0, 61408.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1621.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 19.0, "maxY": 4.9E-324, "series": [{"data": [[19.0, 0.0], [400.0, 0.0], [1621.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1621.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.61940156E12, "maxY": 34.0, "series": [{"data": [[1.61940156E12, 34.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940156E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.61940162E12, "maxY": 34.0, "series": [{"data": [[1.61940162E12, 34.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940162E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6666666666666666, "minX": 1.61940162E12, "maxY": 13.333333333333334, "series": [{"data": [[1.61940162E12, 0.6666666666666666]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61940162E12, 13.333333333333334]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61940162E12, 6.666666666666667]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61940162E12, 13.333333333333334]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940162E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.61940162E12, "maxY": 34.0, "series": [{"data": [[1.61940162E12, 34.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940162E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

