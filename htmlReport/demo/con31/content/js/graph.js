/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 61241.0, "minX": 0.0, "maxY": 65417.0, "series": [{"data": [[0.0, 61241.0], [0.1, 61241.0], [0.2, 61243.0], [0.3, 61243.0], [0.4, 61246.0], [0.5, 61247.0], [0.6, 61247.0], [0.7, 61272.0], [0.8, 61272.0], [0.9, 61281.0], [1.0, 61287.0], [1.1, 61287.0], [1.2, 61289.0], [1.3, 61295.0], [1.4, 61295.0], [1.5, 61303.0], [1.6, 61303.0], [1.7, 61303.0], [1.8, 61308.0], [1.9, 61308.0], [2.0, 61309.0], [2.1, 61325.0], [2.2, 61325.0], [2.3, 61325.0], [2.4, 61325.0], [2.5, 61332.0], [2.6, 61340.0], [2.7, 61340.0], [2.8, 61343.0], [2.9, 61343.0], [3.0, 61347.0], [3.1, 61349.0], [3.2, 61349.0], [3.3, 61349.0], [3.4, 61352.0], [3.5, 61352.0], [3.6, 61359.0], [3.7, 61359.0], [3.8, 61368.0], [3.9, 61371.0], [4.0, 61371.0], [4.1, 61374.0], [4.2, 61375.0], [4.3, 61375.0], [4.4, 61376.0], [4.5, 61376.0], [4.6, 61377.0], [4.7, 61390.0], [4.8, 61390.0], [4.9, 61399.0], [5.0, 61402.0], [5.1, 61402.0], [5.2, 61405.0], [5.3, 61405.0], [5.4, 61407.0], [5.5, 61410.0], [5.6, 61410.0], [5.7, 61416.0], [5.8, 61416.0], [5.9, 61420.0], [6.0, 61421.0], [6.1, 61421.0], [6.2, 61423.0], [6.3, 61429.0], [6.4, 61429.0], [6.5, 61433.0], [6.6, 61433.0], [6.7, 61434.0], [6.8, 61438.0], [6.9, 61438.0], [7.0, 61440.0], [7.1, 61442.0], [7.2, 61442.0], [7.3, 61444.0], [7.4, 61444.0], [7.5, 61446.0], [7.6, 61448.0], [7.7, 61448.0], [7.8, 61454.0], [7.9, 61454.0], [8.0, 61454.0], [8.1, 61455.0], [8.2, 61455.0], [8.3, 61455.0], [8.4, 61471.0], [8.5, 61471.0], [8.6, 61472.0], [8.7, 61472.0], [8.8, 61474.0], [8.9, 61487.0], [9.0, 61487.0], [9.1, 61487.0], [9.2, 61487.0], [9.3, 61487.0], [9.4, 61491.0], [9.5, 61491.0], [9.6, 61495.0], [9.7, 61497.0], [9.8, 61497.0], [9.9, 61500.0], [10.0, 61500.0], [10.1, 61501.0], [10.2, 61505.0], [10.3, 61505.0], [10.4, 61505.0], [10.5, 61506.0], [10.6, 61506.0], [10.7, 61508.0], [10.8, 61508.0], [10.9, 61509.0], [11.0, 61510.0], [11.1, 61510.0], [11.2, 61512.0], [11.3, 61513.0], [11.4, 61513.0], [11.5, 61514.0], [11.6, 61514.0], [11.7, 61521.0], [11.8, 61521.0], [11.9, 61521.0], [12.0, 61521.0], [12.1, 61521.0], [12.2, 61521.0], [12.3, 61524.0], [12.4, 61524.0], [12.5, 61527.0], [12.6, 61529.0], [12.7, 61529.0], [12.8, 61530.0], [12.9, 61530.0], [13.0, 61530.0], [13.1, 61530.0], [13.2, 61530.0], [13.3, 61531.0], [13.4, 61531.0], [13.5, 61531.0], [13.6, 61535.0], [13.7, 61535.0], [13.8, 61538.0], [13.9, 61538.0], [14.0, 61538.0], [14.1, 61543.0], [14.2, 61543.0], [14.3, 61543.0], [14.4, 61544.0], [14.5, 61544.0], [14.6, 61547.0], [14.7, 61547.0], [14.8, 61547.0], [14.9, 61549.0], [15.0, 61549.0], [15.1, 61550.0], [15.2, 61553.0], [15.3, 61553.0], [15.4, 61553.0], [15.5, 61553.0], [15.6, 61553.0], [15.7, 61554.0], [15.8, 61554.0], [15.9, 61558.0], [16.0, 61558.0], [16.1, 61558.0], [16.2, 61559.0], [16.3, 61561.0], [16.4, 61561.0], [16.5, 61561.0], [16.6, 61561.0], [16.7, 61564.0], [16.8, 61569.0], [16.9, 61569.0], [17.0, 61570.0], [17.1, 61570.0], [17.2, 61570.0], [17.3, 61572.0], [17.4, 61572.0], [17.5, 61575.0], [17.6, 61578.0], [17.7, 61578.0], [17.8, 61581.0], [17.9, 61581.0], [18.0, 61581.0], [18.1, 61583.0], [18.2, 61583.0], [18.3, 61584.0], [18.4, 61585.0], [18.5, 61585.0], [18.6, 61586.0], [18.7, 61586.0], [18.8, 61588.0], [18.9, 61589.0], [19.0, 61589.0], [19.1, 61591.0], [19.2, 61597.0], [19.3, 61597.0], [19.4, 61598.0], [19.5, 61598.0], [19.6, 61601.0], [19.7, 61602.0], [19.8, 61602.0], [19.9, 61603.0], [20.0, 61604.0], [20.1, 61604.0], [20.2, 61607.0], [20.3, 61607.0], [20.4, 61608.0], [20.5, 61609.0], [20.6, 61609.0], [20.7, 61610.0], [20.8, 61610.0], [20.9, 61611.0], [21.0, 61611.0], [21.1, 61611.0], [21.2, 61613.0], [21.3, 61613.0], [21.4, 61613.0], [21.5, 61614.0], [21.6, 61614.0], [21.7, 61616.0], [21.8, 61617.0], [21.9, 61617.0], [22.0, 61618.0], [22.1, 61619.0], [22.2, 61619.0], [22.3, 61620.0], [22.4, 61620.0], [22.5, 61620.0], [22.6, 61629.0], [22.7, 61629.0], [22.8, 61632.0], [22.9, 61632.0], [23.0, 61632.0], [23.1, 61635.0], [23.2, 61635.0], [23.3, 61639.0], [23.4, 61639.0], [23.5, 61639.0], [23.6, 61639.0], [23.7, 61639.0], [23.8, 61642.0], [23.9, 61646.0], [24.0, 61646.0], [24.1, 61649.0], [24.2, 61650.0], [24.3, 61650.0], [24.4, 61652.0], [24.5, 61652.0], [24.6, 61652.0], [24.7, 61653.0], [24.8, 61653.0], [24.9, 61654.0], [25.0, 61655.0], [25.1, 61655.0], [25.2, 61656.0], [25.3, 61656.0], [25.4, 61656.0], [25.5, 61658.0], [25.6, 61658.0], [25.7, 61659.0], [25.8, 61659.0], [25.9, 61659.0], [26.0, 61659.0], [26.1, 61659.0], [26.2, 61660.0], [26.3, 61662.0], [26.4, 61662.0], [26.5, 61663.0], [26.6, 61663.0], [26.7, 61667.0], [26.8, 61668.0], [26.9, 61668.0], [27.0, 61669.0], [27.1, 61670.0], [27.2, 61670.0], [27.3, 61674.0], [27.4, 61674.0], [27.5, 61675.0], [27.6, 61675.0], [27.7, 61675.0], [27.8, 61677.0], [27.9, 61677.0], [28.0, 61679.0], [28.1, 61679.0], [28.2, 61679.0], [28.3, 61680.0], [28.4, 61681.0], [28.5, 61681.0], [28.6, 61684.0], [28.7, 61684.0], [28.8, 61691.0], [28.9, 61693.0], [29.0, 61693.0], [29.1, 61694.0], [29.2, 61696.0], [29.3, 61696.0], [29.4, 61706.0], [29.5, 61706.0], [29.6, 61707.0], [29.7, 61708.0], [29.8, 61708.0], [29.9, 61713.0], [30.0, 61714.0], [30.1, 61714.0], [30.2, 61716.0], [30.3, 61716.0], [30.4, 61725.0], [30.5, 61727.0], [30.6, 61727.0], [30.7, 61728.0], [30.8, 61728.0], [30.9, 61729.0], [31.0, 61732.0], [31.1, 61732.0], [31.2, 61733.0], [31.3, 61734.0], [31.4, 61734.0], [31.5, 61736.0], [31.6, 61736.0], [31.7, 61740.0], [31.8, 61742.0], [31.9, 61742.0], [32.0, 61742.0], [32.1, 61745.0], [32.2, 61745.0], [32.3, 61745.0], [32.4, 61745.0], [32.5, 61751.0], [32.6, 61753.0], [32.7, 61753.0], [32.8, 61759.0], [32.9, 61759.0], [33.0, 61761.0], [33.1, 61761.0], [33.2, 61761.0], [33.3, 61762.0], [33.4, 61764.0], [33.5, 61764.0], [33.6, 61766.0], [33.7, 61766.0], [33.8, 61768.0], [33.9, 61768.0], [34.0, 61768.0], [34.1, 61776.0], [34.2, 61776.0], [34.3, 61776.0], [34.4, 61777.0], [34.5, 61777.0], [34.6, 61780.0], [34.7, 61781.0], [34.8, 61781.0], [34.9, 61782.0], [35.0, 61784.0], [35.1, 61784.0], [35.2, 61786.0], [35.3, 61786.0], [35.4, 61787.0], [35.5, 61787.0], [35.6, 61787.0], [35.7, 61789.0], [35.8, 61789.0], [35.9, 61790.0], [36.0, 61792.0], [36.1, 61792.0], [36.2, 61795.0], [36.3, 61797.0], [36.4, 61797.0], [36.5, 61799.0], [36.6, 61799.0], [36.7, 61806.0], [36.8, 61806.0], [36.9, 61806.0], [37.0, 61806.0], [37.1, 61808.0], [37.2, 61808.0], [37.3, 61809.0], [37.4, 61809.0], [37.5, 61809.0], [37.6, 61811.0], [37.7, 61811.0], [37.8, 61812.0], [37.9, 61812.0], [38.0, 61816.0], [38.1, 61816.0], [38.2, 61816.0], [38.3, 61822.0], [38.4, 61822.0], [38.5, 61822.0], [38.6, 61824.0], [38.7, 61824.0], [38.8, 61826.0], [38.9, 61828.0], [39.0, 61828.0], [39.1, 61835.0], [39.2, 61842.0], [39.3, 61842.0], [39.4, 61843.0], [39.5, 61843.0], [39.6, 61846.0], [39.7, 61848.0], [39.8, 61848.0], [39.9, 61848.0], [40.0, 61848.0], [40.1, 61848.0], [40.2, 61848.0], [40.3, 61848.0], [40.4, 61855.0], [40.5, 61857.0], [40.6, 61857.0], [40.7, 61859.0], [40.8, 61859.0], [40.9, 61865.0], [41.0, 61865.0], [41.1, 61865.0], [41.2, 61868.0], [41.3, 61872.0], [41.4, 61872.0], [41.5, 61872.0], [41.6, 61872.0], [41.7, 61873.0], [41.8, 61873.0], [41.9, 61873.0], [42.0, 61875.0], [42.1, 61876.0], [42.2, 61876.0], [42.3, 61879.0], [42.4, 61879.0], [42.5, 61882.0], [42.6, 61883.0], [42.7, 61883.0], [42.8, 61891.0], [42.9, 61891.0], [43.0, 61893.0], [43.1, 61894.0], [43.2, 61894.0], [43.3, 61894.0], [43.4, 61896.0], [43.5, 61896.0], [43.6, 61901.0], [43.7, 61901.0], [43.8, 61902.0], [43.9, 61903.0], [44.0, 61903.0], [44.1, 61908.0], [44.2, 61908.0], [44.3, 61908.0], [44.4, 61909.0], [44.5, 61909.0], [44.6, 61914.0], [44.7, 61915.0], [44.8, 61915.0], [44.9, 61917.0], [45.0, 61917.0], [45.1, 61924.0], [45.2, 61929.0], [45.3, 61929.0], [45.4, 61930.0], [45.5, 61931.0], [45.6, 61931.0], [45.7, 61933.0], [45.8, 61933.0], [45.9, 61935.0], [46.0, 61936.0], [46.1, 61936.0], [46.2, 61938.0], [46.3, 61940.0], [46.4, 61940.0], [46.5, 61942.0], [46.6, 61942.0], [46.7, 61943.0], [46.8, 61943.0], [46.9, 61943.0], [47.0, 61943.0], [47.1, 61946.0], [47.2, 61946.0], [47.3, 61947.0], [47.4, 61947.0], [47.5, 61949.0], [47.6, 61949.0], [47.7, 61949.0], [47.8, 61952.0], [47.9, 61952.0], [48.0, 61953.0], [48.1, 61954.0], [48.2, 61954.0], [48.3, 61955.0], [48.4, 61955.0], [48.5, 61955.0], [48.6, 61956.0], [48.7, 61956.0], [48.8, 61957.0], [48.9, 61957.0], [49.0, 61957.0], [49.1, 61960.0], [49.2, 61962.0], [49.3, 61962.0], [49.4, 61966.0], [49.5, 61966.0], [49.6, 61971.0], [49.7, 61972.0], [49.8, 61972.0], [49.9, 61973.0], [50.0, 61973.0], [50.1, 61974.0], [50.2, 61974.0], [50.3, 61974.0], [50.4, 61975.0], [50.5, 61976.0], [50.6, 61976.0], [50.7, 61977.0], [50.8, 61977.0], [50.9, 61977.0], [51.0, 61979.0], [51.1, 61979.0], [51.2, 61979.0], [51.3, 61981.0], [51.4, 61981.0], [51.5, 61982.0], [51.6, 61982.0], [51.7, 61983.0], [51.8, 61983.0], [51.9, 61983.0], [52.0, 61984.0], [52.1, 61984.0], [52.2, 61984.0], [52.3, 61986.0], [52.4, 61986.0], [52.5, 61989.0], [52.6, 61992.0], [52.7, 61992.0], [52.8, 61993.0], [52.9, 61993.0], [53.0, 61995.0], [53.1, 61995.0], [53.2, 61995.0], [53.3, 61998.0], [53.4, 61999.0], [53.5, 61999.0], [53.6, 62001.0], [53.7, 62001.0], [53.8, 62001.0], [53.9, 62003.0], [54.0, 62003.0], [54.1, 62003.0], [54.2, 62006.0], [54.3, 62006.0], [54.4, 62009.0], [54.5, 62009.0], [54.6, 62011.0], [54.7, 62011.0], [54.8, 62011.0], [54.9, 62015.0], [55.0, 62015.0], [55.1, 62015.0], [55.2, 62016.0], [55.3, 62016.0], [55.4, 62022.0], [55.5, 62022.0], [55.6, 62022.0], [55.7, 62022.0], [55.8, 62022.0], [55.9, 62030.0], [56.0, 62032.0], [56.1, 62032.0], [56.2, 62038.0], [56.3, 62038.0], [56.4, 62038.0], [56.5, 62040.0], [56.6, 62040.0], [56.7, 62046.0], [56.8, 62048.0], [56.9, 62048.0], [57.0, 62048.0], [57.1, 62049.0], [57.2, 62049.0], [57.3, 62049.0], [57.4, 62049.0], [57.5, 62052.0], [57.6, 62056.0], [57.7, 62056.0], [57.8, 62057.0], [57.9, 62057.0], [58.0, 62065.0], [58.1, 62069.0], [58.2, 62069.0], [58.3, 62072.0], [58.4, 62073.0], [58.5, 62073.0], [58.6, 62073.0], [58.7, 62073.0], [58.8, 62078.0], [58.9, 62086.0], [59.0, 62086.0], [59.1, 62087.0], [59.2, 62089.0], [59.3, 62089.0], [59.4, 62091.0], [59.5, 62091.0], [59.6, 62097.0], [59.7, 62098.0], [59.8, 62098.0], [59.9, 62098.0], [60.0, 62098.0], [60.1, 62099.0], [60.2, 62099.0], [60.3, 62099.0], [60.4, 62101.0], [60.5, 62102.0], [60.6, 62102.0], [60.7, 62103.0], [60.8, 62103.0], [60.9, 62103.0], [61.0, 62104.0], [61.1, 62104.0], [61.2, 62104.0], [61.3, 62105.0], [61.4, 62105.0], [61.5, 62105.0], [61.6, 62105.0], [61.7, 62108.0], [61.8, 62109.0], [61.9, 62109.0], [62.0, 62110.0], [62.1, 62110.0], [62.2, 62110.0], [62.3, 62113.0], [62.4, 62113.0], [62.5, 62117.0], [62.6, 62118.0], [62.7, 62118.0], [62.8, 62120.0], [62.9, 62120.0], [63.0, 62120.0], [63.1, 62128.0], [63.2, 62128.0], [63.3, 62134.0], [63.4, 62135.0], [63.5, 62135.0], [63.6, 62135.0], [63.7, 62135.0], [63.8, 62137.0], [63.9, 62138.0], [64.0, 62138.0], [64.1, 62140.0], [64.2, 62146.0], [64.3, 62146.0], [64.4, 62152.0], [64.5, 62152.0], [64.6, 62152.0], [64.7, 62158.0], [64.8, 62158.0], [64.9, 62161.0], [65.0, 62161.0], [65.1, 62163.0], [65.2, 62165.0], [65.3, 62165.0], [65.4, 62167.0], [65.5, 62173.0], [65.6, 62173.0], [65.7, 62181.0], [65.8, 62181.0], [65.9, 62184.0], [66.0, 62189.0], [66.1, 62189.0], [66.2, 62190.0], [66.3, 62192.0], [66.4, 62192.0], [66.5, 62195.0], [66.6, 62195.0], [66.7, 62195.0], [66.8, 62199.0], [66.9, 62199.0], [67.0, 62199.0], [67.1, 62199.0], [67.2, 62199.0], [67.3, 62200.0], [67.4, 62200.0], [67.5, 62201.0], [67.6, 62201.0], [67.7, 62201.0], [67.8, 62205.0], [67.9, 62205.0], [68.0, 62210.0], [68.1, 62212.0], [68.2, 62212.0], [68.3, 62212.0], [68.4, 62213.0], [68.5, 62213.0], [68.6, 62214.0], [68.7, 62214.0], [68.8, 62215.0], [68.9, 62224.0], [69.0, 62224.0], [69.1, 62224.0], [69.2, 62231.0], [69.3, 62231.0], [69.4, 62232.0], [69.5, 62232.0], [69.6, 62233.0], [69.7, 62233.0], [69.8, 62233.0], [69.9, 62236.0], [70.0, 62236.0], [70.1, 62237.0], [70.2, 62237.0], [70.3, 62237.0], [70.4, 62240.0], [70.5, 62241.0], [70.6, 62241.0], [70.7, 62243.0], [70.8, 62243.0], [70.9, 62248.0], [71.0, 62249.0], [71.1, 62249.0], [71.2, 62250.0], [71.3, 62251.0], [71.4, 62251.0], [71.5, 62251.0], [71.6, 62251.0], [71.7, 62260.0], [71.8, 62263.0], [71.9, 62263.0], [72.0, 62264.0], [72.1, 62264.0], [72.2, 62264.0], [72.3, 62267.0], [72.4, 62267.0], [72.5, 62267.0], [72.6, 62268.0], [72.7, 62268.0], [72.8, 62271.0], [72.9, 62271.0], [73.0, 62271.0], [73.1, 62271.0], [73.2, 62271.0], [73.3, 62273.0], [73.4, 62274.0], [73.5, 62274.0], [73.6, 62276.0], [73.7, 62276.0], [73.8, 62276.0], [73.9, 62279.0], [74.0, 62279.0], [74.1, 62281.0], [74.2, 62288.0], [74.3, 62288.0], [74.4, 62289.0], [74.5, 62289.0], [74.6, 62289.0], [74.7, 62291.0], [74.8, 62291.0], [74.9, 62293.0], [75.0, 62293.0], [75.1, 62300.0], [75.2, 62301.0], [75.3, 62301.0], [75.4, 62302.0], [75.5, 62304.0], [75.6, 62304.0], [75.7, 62306.0], [75.8, 62306.0], [75.9, 62306.0], [76.0, 62311.0], [76.1, 62311.0], [76.2, 62314.0], [76.3, 62315.0], [76.4, 62315.0], [76.5, 62319.0], [76.6, 62319.0], [76.7, 62319.0], [76.8, 62327.0], [76.9, 62327.0], [77.0, 62330.0], [77.1, 62334.0], [77.2, 62334.0], [77.3, 62337.0], [77.4, 62337.0], [77.5, 62337.0], [77.6, 62340.0], [77.7, 62340.0], [77.8, 62341.0], [77.9, 62341.0], [78.0, 62341.0], [78.1, 62345.0], [78.2, 62345.0], [78.3, 62345.0], [78.4, 62348.0], [78.5, 62348.0], [78.6, 62353.0], [78.7, 62353.0], [78.8, 62354.0], [78.9, 62355.0], [79.0, 62355.0], [79.1, 62356.0], [79.2, 62356.0], [79.3, 62356.0], [79.4, 62357.0], [79.5, 62357.0], [79.6, 62357.0], [79.7, 62358.0], [79.8, 62358.0], [79.9, 62358.0], [80.0, 62358.0], [80.1, 62364.0], [80.2, 62364.0], [80.3, 62364.0], [80.4, 62364.0], [80.5, 62370.0], [80.6, 62370.0], [80.7, 62371.0], [80.8, 62371.0], [80.9, 62376.0], [81.0, 62380.0], [81.1, 62380.0], [81.2, 62381.0], [81.3, 62383.0], [81.4, 62383.0], [81.5, 62383.0], [81.6, 62383.0], [81.7, 62384.0], [81.8, 62385.0], [81.9, 62385.0], [82.0, 62390.0], [82.1, 62391.0], [82.2, 62391.0], [82.3, 62391.0], [82.4, 62391.0], [82.5, 62392.0], [82.6, 62394.0], [82.7, 62394.0], [82.8, 62395.0], [82.9, 62395.0], [83.0, 62395.0], [83.1, 62395.0], [83.2, 62395.0], [83.3, 62396.0], [83.4, 62396.0], [83.5, 62396.0], [83.6, 62397.0], [83.7, 62397.0], [83.8, 62399.0], [83.9, 62400.0], [84.0, 62400.0], [84.1, 62404.0], [84.2, 62405.0], [84.3, 62405.0], [84.4, 62406.0], [84.5, 62406.0], [84.6, 62413.0], [84.7, 62416.0], [84.8, 62416.0], [84.9, 62418.0], [85.0, 62419.0], [85.1, 62419.0], [85.2, 62419.0], [85.3, 62419.0], [85.4, 62420.0], [85.5, 62420.0], [85.6, 62420.0], [85.7, 62422.0], [85.8, 62422.0], [85.9, 62424.0], [86.0, 62425.0], [86.1, 62425.0], [86.2, 62428.0], [86.3, 62430.0], [86.4, 62430.0], [86.5, 62433.0], [86.6, 62433.0], [86.7, 62434.0], [86.8, 62435.0], [86.9, 62435.0], [87.0, 62435.0], [87.1, 62437.0], [87.2, 62437.0], [87.3, 62438.0], [87.4, 62438.0], [87.5, 62442.0], [87.6, 62442.0], [87.7, 62442.0], [87.8, 62446.0], [87.9, 62446.0], [88.0, 62447.0], [88.1, 62448.0], [88.2, 62448.0], [88.3, 62454.0], [88.4, 62456.0], [88.5, 62456.0], [88.6, 62456.0], [88.7, 62456.0], [88.8, 62459.0], [88.9, 62459.0], [89.0, 62459.0], [89.1, 62460.0], [89.2, 62461.0], [89.3, 62461.0], [89.4, 62463.0], [89.5, 62463.0], [89.6, 62464.0], [89.7, 62466.0], [89.8, 62466.0], [89.9, 62468.0], [90.0, 62470.0], [90.1, 62470.0], [90.2, 62472.0], [90.3, 62472.0], [90.4, 62476.0], [90.5, 62478.0], [90.6, 62478.0], [90.7, 62482.0], [90.8, 62482.0], [90.9, 62484.0], [91.0, 62486.0], [91.1, 62486.0], [91.2, 62490.0], [91.3, 62494.0], [91.4, 62494.0], [91.5, 62495.0], [91.6, 62495.0], [91.7, 62500.0], [91.8, 62500.0], [91.9, 62500.0], [92.0, 62502.0], [92.1, 62507.0], [92.2, 62507.0], [92.3, 62510.0], [92.4, 62510.0], [92.5, 62510.0], [92.6, 62513.0], [92.7, 62513.0], [92.8, 62513.0], [92.9, 62513.0], [93.0, 62514.0], [93.1, 62519.0], [93.2, 62519.0], [93.3, 62526.0], [93.4, 62526.0], [93.5, 62526.0], [93.6, 62531.0], [93.7, 62531.0], [93.8, 62539.0], [93.9, 62540.0], [94.0, 62540.0], [94.1, 62543.0], [94.2, 62545.0], [94.3, 62545.0], [94.4, 62545.0], [94.5, 62545.0], [94.6, 62551.0], [94.7, 62551.0], [94.8, 62551.0], [94.9, 62559.0], [95.0, 62560.0], [95.1, 62560.0], [95.2, 62565.0], [95.3, 62565.0], [95.4, 62569.0], [95.5, 62573.0], [95.6, 62573.0], [95.7, 62574.0], [95.8, 62574.0], [95.9, 62578.0], [96.0, 62582.0], [96.1, 62582.0], [96.2, 62586.0], [96.3, 62589.0], [96.4, 62589.0], [96.5, 62595.0], [96.6, 62595.0], [96.7, 62596.0], [96.8, 62614.0], [96.9, 62614.0], [97.0, 62618.0], [97.1, 62619.0], [97.2, 62619.0], [97.3, 62620.0], [97.4, 62620.0], [97.5, 62628.0], [97.6, 62632.0], [97.7, 62632.0], [97.8, 62643.0], [97.9, 62643.0], [98.0, 62648.0], [98.1, 62650.0], [98.2, 62650.0], [98.3, 62652.0], [98.4, 62654.0], [98.5, 62654.0], [98.6, 62667.0], [98.7, 62667.0], [98.8, 62677.0], [98.9, 62685.0], [99.0, 62685.0], [99.1, 62686.0], [99.2, 62693.0], [99.3, 62693.0], [99.4, 62709.0], [99.5, 62709.0], [99.6, 62710.0], [99.7, 62721.0], [99.8, 62721.0], [99.9, 62729.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 61502.0], [0.1, 61502.0], [0.2, 61502.0], [0.3, 61502.0], [0.4, 61515.0], [0.5, 61515.0], [0.6, 61515.0], [0.7, 61523.0], [0.8, 61523.0], [0.9, 61523.0], [1.0, 61552.0], [1.1, 61552.0], [1.2, 61552.0], [1.3, 61554.0], [1.4, 61554.0], [1.5, 61554.0], [1.6, 61554.0], [1.7, 61564.0], [1.8, 61564.0], [1.9, 61564.0], [2.0, 61569.0], [2.1, 61569.0], [2.2, 61569.0], [2.3, 61569.0], [2.4, 61569.0], [2.5, 61569.0], [2.6, 61575.0], [2.7, 61575.0], [2.8, 61575.0], [2.9, 61575.0], [3.0, 61582.0], [3.1, 61582.0], [3.2, 61582.0], [3.3, 61583.0], [3.4, 61583.0], [3.5, 61583.0], [3.6, 61584.0], [3.7, 61584.0], [3.8, 61584.0], [3.9, 61590.0], [4.0, 61590.0], [4.1, 61590.0], [4.2, 61596.0], [4.3, 61596.0], [4.4, 61596.0], [4.5, 61596.0], [4.6, 61599.0], [4.7, 61599.0], [4.8, 61599.0], [4.9, 61610.0], [5.0, 61610.0], [5.1, 61610.0], [5.2, 61623.0], [5.3, 61623.0], [5.4, 61623.0], [5.5, 61636.0], [5.6, 61636.0], [5.7, 61636.0], [5.8, 61636.0], [5.9, 61637.0], [6.0, 61637.0], [6.1, 61637.0], [6.2, 61662.0], [6.3, 61662.0], [6.4, 61662.0], [6.5, 61667.0], [6.6, 61667.0], [6.7, 61667.0], [6.8, 61669.0], [6.9, 61669.0], [7.0, 61669.0], [7.1, 61677.0], [7.2, 61677.0], [7.3, 61677.0], [7.4, 61677.0], [7.5, 61681.0], [7.6, 61681.0], [7.7, 61681.0], [7.8, 61683.0], [7.9, 61683.0], [8.0, 61683.0], [8.1, 61685.0], [8.2, 61685.0], [8.3, 61685.0], [8.4, 61685.0], [8.5, 61685.0], [8.6, 61685.0], [8.7, 61685.0], [8.8, 61687.0], [8.9, 61687.0], [9.0, 61687.0], [9.1, 61690.0], [9.2, 61690.0], [9.3, 61690.0], [9.4, 61695.0], [9.5, 61695.0], [9.6, 61695.0], [9.7, 61701.0], [9.8, 61701.0], [9.9, 61701.0], [10.0, 61701.0], [10.1, 61701.0], [10.2, 61701.0], [10.3, 61701.0], [10.4, 61719.0], [10.5, 61719.0], [10.6, 61719.0], [10.7, 61724.0], [10.8, 61724.0], [10.9, 61724.0], [11.0, 61727.0], [11.1, 61727.0], [11.2, 61727.0], [11.3, 61734.0], [11.4, 61734.0], [11.5, 61734.0], [11.6, 61734.0], [11.7, 61736.0], [11.8, 61736.0], [11.9, 61736.0], [12.0, 61739.0], [12.1, 61739.0], [12.2, 61739.0], [12.3, 61739.0], [12.4, 61739.0], [12.5, 61739.0], [12.6, 61739.0], [12.7, 61739.0], [12.8, 61739.0], [12.9, 61739.0], [13.0, 61742.0], [13.1, 61742.0], [13.2, 61742.0], [13.3, 61743.0], [13.4, 61743.0], [13.5, 61743.0], [13.6, 61746.0], [13.7, 61746.0], [13.8, 61746.0], [13.9, 61750.0], [14.0, 61750.0], [14.1, 61750.0], [14.2, 61765.0], [14.3, 61765.0], [14.4, 61765.0], [14.5, 61765.0], [14.6, 61766.0], [14.7, 61766.0], [14.8, 61766.0], [14.9, 61766.0], [15.0, 61766.0], [15.1, 61766.0], [15.2, 61766.0], [15.3, 61766.0], [15.4, 61766.0], [15.5, 61768.0], [15.6, 61768.0], [15.7, 61768.0], [15.8, 61768.0], [15.9, 61771.0], [16.0, 61771.0], [16.1, 61771.0], [16.2, 61771.0], [16.3, 61771.0], [16.4, 61771.0], [16.5, 61777.0], [16.6, 61777.0], [16.7, 61777.0], [16.8, 61777.0], [16.9, 61777.0], [17.0, 61777.0], [17.1, 61785.0], [17.2, 61785.0], [17.3, 61785.0], [17.4, 61785.0], [17.5, 61786.0], [17.6, 61786.0], [17.7, 61786.0], [17.8, 61791.0], [17.9, 61791.0], [18.0, 61791.0], [18.1, 61793.0], [18.2, 61793.0], [18.3, 61793.0], [18.4, 61795.0], [18.5, 61795.0], [18.6, 61795.0], [18.7, 61795.0], [18.8, 61796.0], [18.9, 61796.0], [19.0, 61796.0], [19.1, 61804.0], [19.2, 61804.0], [19.3, 61804.0], [19.4, 61808.0], [19.5, 61808.0], [19.6, 61808.0], [19.7, 61812.0], [19.8, 61812.0], [19.9, 61812.0], [20.0, 61812.0], [20.1, 61817.0], [20.2, 61817.0], [20.3, 61817.0], [20.4, 61820.0], [20.5, 61820.0], [20.6, 61820.0], [20.7, 61820.0], [20.8, 61820.0], [20.9, 61820.0], [21.0, 61821.0], [21.1, 61821.0], [21.2, 61821.0], [21.3, 61823.0], [21.4, 61823.0], [21.5, 61823.0], [21.6, 61823.0], [21.7, 61829.0], [21.8, 61829.0], [21.9, 61829.0], [22.0, 61832.0], [22.1, 61832.0], [22.2, 61832.0], [22.3, 61834.0], [22.4, 61834.0], [22.5, 61834.0], [22.6, 61837.0], [22.7, 61837.0], [22.8, 61837.0], [22.9, 61837.0], [23.0, 61842.0], [23.1, 61842.0], [23.2, 61842.0], [23.3, 61843.0], [23.4, 61843.0], [23.5, 61843.0], [23.6, 61844.0], [23.7, 61844.0], [23.8, 61844.0], [23.9, 61847.0], [24.0, 61847.0], [24.1, 61847.0], [24.2, 61853.0], [24.3, 61853.0], [24.4, 61853.0], [24.5, 61853.0], [24.6, 61859.0], [24.7, 61859.0], [24.8, 61859.0], [24.9, 61862.0], [25.0, 61862.0], [25.1, 61862.0], [25.2, 61864.0], [25.3, 61864.0], [25.4, 61864.0], [25.5, 61865.0], [25.6, 61865.0], [25.7, 61865.0], [25.8, 61865.0], [25.9, 61867.0], [26.0, 61867.0], [26.1, 61867.0], [26.2, 61869.0], [26.3, 61869.0], [26.4, 61869.0], [26.5, 61872.0], [26.6, 61872.0], [26.7, 61872.0], [26.8, 61877.0], [26.9, 61877.0], [27.0, 61877.0], [27.1, 61879.0], [27.2, 61879.0], [27.3, 61879.0], [27.4, 61879.0], [27.5, 61882.0], [27.6, 61882.0], [27.7, 61882.0], [27.8, 61882.0], [27.9, 61882.0], [28.0, 61882.0], [28.1, 61885.0], [28.2, 61885.0], [28.3, 61885.0], [28.4, 61887.0], [28.5, 61887.0], [28.6, 61887.0], [28.7, 61887.0], [28.8, 61894.0], [28.9, 61894.0], [29.0, 61894.0], [29.1, 61900.0], [29.2, 61900.0], [29.3, 61900.0], [29.4, 61905.0], [29.5, 61905.0], [29.6, 61905.0], [29.7, 61911.0], [29.8, 61911.0], [29.9, 61911.0], [30.0, 61911.0], [30.1, 61916.0], [30.2, 61916.0], [30.3, 61916.0], [30.4, 61916.0], [30.5, 61916.0], [30.6, 61916.0], [30.7, 61917.0], [30.8, 61917.0], [30.9, 61917.0], [31.0, 61920.0], [31.1, 61920.0], [31.2, 61920.0], [31.3, 61924.0], [31.4, 61924.0], [31.5, 61924.0], [31.6, 61924.0], [31.7, 61926.0], [31.8, 61926.0], [31.9, 61926.0], [32.0, 61936.0], [32.1, 61936.0], [32.2, 61936.0], [32.3, 61937.0], [32.4, 61937.0], [32.5, 61937.0], [32.6, 61937.0], [32.7, 61937.0], [32.8, 61937.0], [32.9, 61937.0], [33.0, 61939.0], [33.1, 61939.0], [33.2, 61939.0], [33.3, 61943.0], [33.4, 61943.0], [33.5, 61943.0], [33.6, 61944.0], [33.7, 61944.0], [33.8, 61944.0], [33.9, 61950.0], [34.0, 61950.0], [34.1, 61950.0], [34.2, 61955.0], [34.3, 61955.0], [34.4, 61955.0], [34.5, 61955.0], [34.6, 61955.0], [34.7, 61955.0], [34.8, 61955.0], [34.9, 61962.0], [35.0, 61962.0], [35.1, 61962.0], [35.2, 61964.0], [35.3, 61964.0], [35.4, 61964.0], [35.5, 61972.0], [35.6, 61972.0], [35.7, 61972.0], [35.8, 61972.0], [35.9, 61976.0], [36.0, 61976.0], [36.1, 61976.0], [36.2, 61977.0], [36.3, 61977.0], [36.4, 61977.0], [36.5, 61981.0], [36.6, 61981.0], [36.7, 61981.0], [36.8, 61983.0], [36.9, 61983.0], [37.0, 61983.0], [37.1, 61987.0], [37.2, 61987.0], [37.3, 61987.0], [37.4, 61987.0], [37.5, 61989.0], [37.6, 61989.0], [37.7, 61989.0], [37.8, 61994.0], [37.9, 61994.0], [38.0, 61994.0], [38.1, 61994.0], [38.2, 61994.0], [38.3, 61994.0], [38.4, 61994.0], [38.5, 61994.0], [38.6, 61994.0], [38.7, 61994.0], [38.8, 61998.0], [38.9, 61998.0], [39.0, 61998.0], [39.1, 62000.0], [39.2, 62000.0], [39.3, 62000.0], [39.4, 62000.0], [39.5, 62000.0], [39.6, 62000.0], [39.7, 62001.0], [39.8, 62001.0], [39.9, 62001.0], [40.0, 62001.0], [40.1, 62002.0], [40.2, 62002.0], [40.3, 62002.0], [40.4, 62010.0], [40.5, 62010.0], [40.6, 62010.0], [40.7, 62010.0], [40.8, 62010.0], [40.9, 62010.0], [41.0, 62011.0], [41.1, 62011.0], [41.2, 62011.0], [41.3, 62012.0], [41.4, 62012.0], [41.5, 62012.0], [41.6, 62012.0], [41.7, 62017.0], [41.8, 62017.0], [41.9, 62017.0], [42.0, 62018.0], [42.1, 62018.0], [42.2, 62018.0], [42.3, 62019.0], [42.4, 62019.0], [42.5, 62019.0], [42.6, 62019.0], [42.7, 62019.0], [42.8, 62019.0], [42.9, 62019.0], [43.0, 62022.0], [43.1, 62022.0], [43.2, 62022.0], [43.3, 62022.0], [43.4, 62022.0], [43.5, 62022.0], [43.6, 62031.0], [43.7, 62031.0], [43.8, 62031.0], [43.9, 62031.0], [44.0, 62031.0], [44.1, 62031.0], [44.2, 62032.0], [44.3, 62032.0], [44.4, 62032.0], [44.5, 62032.0], [44.6, 62032.0], [44.7, 62032.0], [44.8, 62032.0], [44.9, 62033.0], [45.0, 62033.0], [45.1, 62033.0], [45.2, 62037.0], [45.3, 62037.0], [45.4, 62037.0], [45.5, 62045.0], [45.6, 62045.0], [45.7, 62045.0], [45.8, 62045.0], [45.9, 62047.0], [46.0, 62047.0], [46.1, 62047.0], [46.2, 62048.0], [46.3, 62048.0], [46.4, 62048.0], [46.5, 62049.0], [46.6, 62049.0], [46.7, 62049.0], [46.8, 62059.0], [46.9, 62059.0], [47.0, 62059.0], [47.1, 62061.0], [47.2, 62061.0], [47.3, 62061.0], [47.4, 62061.0], [47.5, 62063.0], [47.6, 62063.0], [47.7, 62063.0], [47.8, 62066.0], [47.9, 62066.0], [48.0, 62066.0], [48.1, 62067.0], [48.2, 62067.0], [48.3, 62067.0], [48.4, 62071.0], [48.5, 62071.0], [48.6, 62071.0], [48.7, 62071.0], [48.8, 62075.0], [48.9, 62075.0], [49.0, 62075.0], [49.1, 62083.0], [49.2, 62083.0], [49.3, 62083.0], [49.4, 62088.0], [49.5, 62088.0], [49.6, 62088.0], [49.7, 62089.0], [49.8, 62089.0], [49.9, 62089.0], [50.0, 62089.0], [50.1, 62089.0], [50.2, 62089.0], [50.3, 62089.0], [50.4, 62098.0], [50.5, 62098.0], [50.6, 62098.0], [50.7, 62103.0], [50.8, 62103.0], [50.9, 62103.0], [51.0, 62106.0], [51.1, 62106.0], [51.2, 62106.0], [51.3, 62111.0], [51.4, 62111.0], [51.5, 62111.0], [51.6, 62111.0], [51.7, 62112.0], [51.8, 62112.0], [51.9, 62112.0], [52.0, 62115.0], [52.1, 62115.0], [52.2, 62115.0], [52.3, 62115.0], [52.4, 62115.0], [52.5, 62115.0], [52.6, 62118.0], [52.7, 62118.0], [52.8, 62118.0], [52.9, 62118.0], [53.0, 62118.0], [53.1, 62118.0], [53.2, 62118.0], [53.3, 62120.0], [53.4, 62120.0], [53.5, 62120.0], [53.6, 62120.0], [53.7, 62120.0], [53.8, 62120.0], [53.9, 62126.0], [54.0, 62126.0], [54.1, 62126.0], [54.2, 62142.0], [54.3, 62142.0], [54.4, 62142.0], [54.5, 62142.0], [54.6, 62144.0], [54.7, 62144.0], [54.8, 62144.0], [54.9, 62148.0], [55.0, 62148.0], [55.1, 62148.0], [55.2, 62150.0], [55.3, 62150.0], [55.4, 62150.0], [55.5, 62151.0], [55.6, 62151.0], [55.7, 62151.0], [55.8, 62151.0], [55.9, 62154.0], [56.0, 62154.0], [56.1, 62154.0], [56.2, 62159.0], [56.3, 62159.0], [56.4, 62159.0], [56.5, 62160.0], [56.6, 62160.0], [56.7, 62160.0], [56.8, 62160.0], [56.9, 62160.0], [57.0, 62160.0], [57.1, 62176.0], [57.2, 62176.0], [57.3, 62176.0], [57.4, 62176.0], [57.5, 62176.0], [57.6, 62176.0], [57.7, 62176.0], [57.8, 62177.0], [57.9, 62177.0], [58.0, 62177.0], [58.1, 62179.0], [58.2, 62179.0], [58.3, 62179.0], [58.4, 62180.0], [58.5, 62180.0], [58.6, 62180.0], [58.7, 62180.0], [58.8, 62182.0], [58.9, 62182.0], [59.0, 62182.0], [59.1, 62182.0], [59.2, 62182.0], [59.3, 62182.0], [59.4, 62183.0], [59.5, 62183.0], [59.6, 62183.0], [59.7, 62184.0], [59.8, 62184.0], [59.9, 62184.0], [60.0, 62187.0], [60.1, 62187.0], [60.2, 62187.0], [60.3, 62187.0], [60.4, 62192.0], [60.5, 62192.0], [60.6, 62192.0], [60.7, 62194.0], [60.8, 62194.0], [60.9, 62194.0], [61.0, 62206.0], [61.1, 62206.0], [61.2, 62206.0], [61.3, 62206.0], [61.4, 62206.0], [61.5, 62206.0], [61.6, 62206.0], [61.7, 62213.0], [61.8, 62213.0], [61.9, 62213.0], [62.0, 62217.0], [62.1, 62217.0], [62.2, 62217.0], [62.3, 62218.0], [62.4, 62218.0], [62.5, 62218.0], [62.6, 62220.0], [62.7, 62220.0], [62.8, 62220.0], [62.9, 62220.0], [63.0, 62224.0], [63.1, 62224.0], [63.2, 62224.0], [63.3, 62224.0], [63.4, 62224.0], [63.5, 62224.0], [63.6, 62229.0], [63.7, 62229.0], [63.8, 62229.0], [63.9, 62230.0], [64.0, 62230.0], [64.1, 62230.0], [64.2, 62232.0], [64.3, 62232.0], [64.4, 62232.0], [64.5, 62232.0], [64.6, 62232.0], [64.7, 62232.0], [64.8, 62232.0], [64.9, 62232.0], [65.0, 62232.0], [65.1, 62232.0], [65.2, 62234.0], [65.3, 62234.0], [65.4, 62234.0], [65.5, 62234.0], [65.6, 62234.0], [65.7, 62234.0], [65.8, 62234.0], [65.9, 62236.0], [66.0, 62236.0], [66.1, 62236.0], [66.2, 62238.0], [66.3, 62238.0], [66.4, 62238.0], [66.5, 62238.0], [66.6, 62238.0], [66.7, 62238.0], [66.8, 62239.0], [66.9, 62239.0], [67.0, 62239.0], [67.1, 62240.0], [67.2, 62240.0], [67.3, 62240.0], [67.4, 62240.0], [67.5, 62242.0], [67.6, 62242.0], [67.7, 62242.0], [67.8, 62243.0], [67.9, 62243.0], [68.0, 62243.0], [68.1, 62245.0], [68.2, 62245.0], [68.3, 62245.0], [68.4, 62248.0], [68.5, 62248.0], [68.6, 62248.0], [68.7, 62248.0], [68.8, 62254.0], [68.9, 62254.0], [69.0, 62254.0], [69.1, 62259.0], [69.2, 62259.0], [69.3, 62259.0], [69.4, 62261.0], [69.5, 62261.0], [69.6, 62261.0], [69.7, 62264.0], [69.8, 62264.0], [69.9, 62264.0], [70.0, 62264.0], [70.1, 62265.0], [70.2, 62265.0], [70.3, 62265.0], [70.4, 62268.0], [70.5, 62268.0], [70.6, 62268.0], [70.7, 62268.0], [70.8, 62268.0], [70.9, 62268.0], [71.0, 62271.0], [71.1, 62271.0], [71.2, 62271.0], [71.3, 62273.0], [71.4, 62273.0], [71.5, 62273.0], [71.6, 62273.0], [71.7, 62273.0], [71.8, 62273.0], [71.9, 62273.0], [72.0, 62275.0], [72.1, 62275.0], [72.2, 62275.0], [72.3, 62278.0], [72.4, 62278.0], [72.5, 62278.0], [72.6, 62286.0], [72.7, 62286.0], [72.8, 62286.0], [72.9, 62286.0], [73.0, 62288.0], [73.1, 62288.0], [73.2, 62288.0], [73.3, 62290.0], [73.4, 62290.0], [73.5, 62290.0], [73.6, 62294.0], [73.7, 62294.0], [73.8, 62294.0], [73.9, 62295.0], [74.0, 62295.0], [74.1, 62295.0], [74.2, 62295.0], [74.3, 62295.0], [74.4, 62295.0], [74.5, 62295.0], [74.6, 62296.0], [74.7, 62296.0], [74.8, 62296.0], [74.9, 62302.0], [75.0, 62302.0], [75.1, 62302.0], [75.2, 62303.0], [75.3, 62303.0], [75.4, 62303.0], [75.5, 62304.0], [75.6, 62304.0], [75.7, 62304.0], [75.8, 62304.0], [75.9, 62305.0], [76.0, 62305.0], [76.1, 62305.0], [76.2, 62311.0], [76.3, 62311.0], [76.4, 62311.0], [76.5, 62313.0], [76.6, 62313.0], [76.7, 62313.0], [76.8, 62315.0], [76.9, 62315.0], [77.0, 62315.0], [77.1, 62317.0], [77.2, 62317.0], [77.3, 62317.0], [77.4, 62317.0], [77.5, 62317.0], [77.6, 62317.0], [77.7, 62317.0], [77.8, 62320.0], [77.9, 62320.0], [78.0, 62320.0], [78.1, 62333.0], [78.2, 62333.0], [78.3, 62333.0], [78.4, 62336.0], [78.5, 62336.0], [78.6, 62336.0], [78.7, 62336.0], [78.8, 62336.0], [78.9, 62336.0], [79.0, 62336.0], [79.1, 62338.0], [79.2, 62338.0], [79.3, 62338.0], [79.4, 62343.0], [79.5, 62343.0], [79.6, 62343.0], [79.7, 62346.0], [79.8, 62346.0], [79.9, 62346.0], [80.0, 62346.0], [80.1, 62349.0], [80.2, 62349.0], [80.3, 62349.0], [80.4, 62352.0], [80.5, 62352.0], [80.6, 62352.0], [80.7, 62353.0], [80.8, 62353.0], [80.9, 62353.0], [81.0, 62355.0], [81.1, 62355.0], [81.2, 62355.0], [81.3, 62361.0], [81.4, 62361.0], [81.5, 62361.0], [81.6, 62361.0], [81.7, 62364.0], [81.8, 62364.0], [81.9, 62364.0], [82.0, 62366.0], [82.1, 62366.0], [82.2, 62366.0], [82.3, 62375.0], [82.4, 62375.0], [82.5, 62375.0], [82.6, 62378.0], [82.7, 62378.0], [82.8, 62378.0], [82.9, 62378.0], [83.0, 62390.0], [83.1, 62390.0], [83.2, 62390.0], [83.3, 62392.0], [83.4, 62392.0], [83.5, 62392.0], [83.6, 62394.0], [83.7, 62394.0], [83.8, 62394.0], [83.9, 62394.0], [84.0, 62394.0], [84.1, 62394.0], [84.2, 62394.0], [84.3, 62394.0], [84.4, 62394.0], [84.5, 62394.0], [84.6, 62407.0], [84.7, 62407.0], [84.8, 62407.0], [84.9, 62410.0], [85.0, 62410.0], [85.1, 62410.0], [85.2, 62412.0], [85.3, 62412.0], [85.4, 62412.0], [85.5, 62414.0], [85.6, 62414.0], [85.7, 62414.0], [85.8, 62414.0], [85.9, 62416.0], [86.0, 62416.0], [86.1, 62416.0], [86.2, 62424.0], [86.3, 62424.0], [86.4, 62424.0], [86.5, 62425.0], [86.6, 62425.0], [86.7, 62425.0], [86.8, 62427.0], [86.9, 62427.0], [87.0, 62427.0], [87.1, 62430.0], [87.2, 62430.0], [87.3, 62430.0], [87.4, 62430.0], [87.5, 62431.0], [87.6, 62431.0], [87.7, 62431.0], [87.8, 62435.0], [87.9, 62435.0], [88.0, 62435.0], [88.1, 62449.0], [88.2, 62449.0], [88.3, 62449.0], [88.4, 62449.0], [88.5, 62449.0], [88.6, 62449.0], [88.7, 62449.0], [88.8, 62449.0], [88.9, 62449.0], [89.0, 62449.0], [89.1, 62454.0], [89.2, 62454.0], [89.3, 62454.0], [89.4, 62455.0], [89.5, 62455.0], [89.6, 62455.0], [89.7, 62457.0], [89.8, 62457.0], [89.9, 62457.0], [90.0, 62457.0], [90.1, 62462.0], [90.2, 62462.0], [90.3, 62462.0], [90.4, 62465.0], [90.5, 62465.0], [90.6, 62465.0], [90.7, 62475.0], [90.8, 62475.0], [90.9, 62475.0], [91.0, 62484.0], [91.1, 62484.0], [91.2, 62484.0], [91.3, 62486.0], [91.4, 62486.0], [91.5, 62486.0], [91.6, 62486.0], [91.7, 62499.0], [91.8, 62499.0], [91.9, 62499.0], [92.0, 62503.0], [92.1, 62503.0], [92.2, 62503.0], [92.3, 62514.0], [92.4, 62514.0], [92.5, 62514.0], [92.6, 62521.0], [92.7, 62521.0], [92.8, 62521.0], [92.9, 62521.0], [93.0, 62521.0], [93.1, 62521.0], [93.2, 62521.0], [93.3, 62533.0], [93.4, 62533.0], [93.5, 62533.0], [93.6, 62539.0], [93.7, 62539.0], [93.8, 62539.0], [93.9, 62541.0], [94.0, 62541.0], [94.1, 62541.0], [94.2, 62542.0], [94.3, 62542.0], [94.4, 62542.0], [94.5, 62542.0], [94.6, 62545.0], [94.7, 62545.0], [94.8, 62545.0], [94.9, 62548.0], [95.0, 62548.0], [95.1, 62548.0], [95.2, 62556.0], [95.3, 62556.0], [95.4, 62556.0], [95.5, 62560.0], [95.6, 62560.0], [95.7, 62560.0], [95.8, 62560.0], [95.9, 62563.0], [96.0, 62563.0], [96.1, 62563.0], [96.2, 62585.0], [96.3, 62585.0], [96.4, 62585.0], [96.5, 62610.0], [96.6, 62610.0], [96.7, 62610.0], [96.8, 62613.0], [96.9, 62613.0], [97.0, 62613.0], [97.1, 62618.0], [97.2, 62618.0], [97.3, 62618.0], [97.4, 62618.0], [97.5, 62622.0], [97.6, 62622.0], [97.7, 62622.0], [97.8, 62622.0], [97.9, 62622.0], [98.0, 62622.0], [98.1, 62627.0], [98.2, 62627.0], [98.3, 62627.0], [98.4, 62641.0], [98.5, 62641.0], [98.6, 62641.0], [98.7, 62641.0], [98.8, 62642.0], [98.9, 62642.0], [99.0, 62642.0], [99.1, 62664.0], [99.2, 62664.0], [99.3, 62664.0], [99.4, 62668.0], [99.5, 62668.0], [99.6, 62668.0], [99.7, 62705.0], [99.8, 62705.0], [99.9, 62705.0], [100.0, 62705.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64463.0], [0.1, 64463.0], [0.2, 64463.0], [0.3, 64463.0], [0.4, 64463.0], [0.5, 64463.0], [0.6, 64463.0], [0.7, 64463.0], [0.8, 64463.0], [0.9, 64463.0], [1.0, 64463.0], [1.1, 64463.0], [1.2, 64463.0], [1.3, 64463.0], [1.4, 64463.0], [1.5, 64463.0], [1.6, 64463.0], [1.7, 64463.0], [1.8, 64463.0], [1.9, 64463.0], [2.0, 64463.0], [2.1, 64463.0], [2.2, 64463.0], [2.3, 64463.0], [2.4, 64463.0], [2.5, 64463.0], [2.6, 64463.0], [2.7, 64463.0], [2.8, 64463.0], [2.9, 64463.0], [3.0, 64463.0], [3.1, 64463.0], [3.2, 64463.0], [3.3, 64508.0], [3.4, 64508.0], [3.5, 64508.0], [3.6, 64508.0], [3.7, 64508.0], [3.8, 64508.0], [3.9, 64508.0], [4.0, 64508.0], [4.1, 64508.0], [4.2, 64508.0], [4.3, 64508.0], [4.4, 64508.0], [4.5, 64508.0], [4.6, 64508.0], [4.7, 64508.0], [4.8, 64508.0], [4.9, 64508.0], [5.0, 64508.0], [5.1, 64508.0], [5.2, 64508.0], [5.3, 64508.0], [5.4, 64508.0], [5.5, 64508.0], [5.6, 64508.0], [5.7, 64508.0], [5.8, 64508.0], [5.9, 64508.0], [6.0, 64508.0], [6.1, 64508.0], [6.2, 64508.0], [6.3, 64508.0], [6.4, 64508.0], [6.5, 64541.0], [6.6, 64541.0], [6.7, 64541.0], [6.8, 64541.0], [6.9, 64541.0], [7.0, 64541.0], [7.1, 64541.0], [7.2, 64541.0], [7.3, 64541.0], [7.4, 64541.0], [7.5, 64541.0], [7.6, 64541.0], [7.7, 64541.0], [7.8, 64541.0], [7.9, 64541.0], [8.0, 64541.0], [8.1, 64541.0], [8.2, 64541.0], [8.3, 64541.0], [8.4, 64541.0], [8.5, 64541.0], [8.6, 64541.0], [8.7, 64541.0], [8.8, 64541.0], [8.9, 64541.0], [9.0, 64541.0], [9.1, 64541.0], [9.2, 64541.0], [9.3, 64541.0], [9.4, 64541.0], [9.5, 64541.0], [9.6, 64541.0], [9.7, 64559.0], [9.8, 64559.0], [9.9, 64559.0], [10.0, 64559.0], [10.1, 64559.0], [10.2, 64559.0], [10.3, 64559.0], [10.4, 64559.0], [10.5, 64559.0], [10.6, 64559.0], [10.7, 64559.0], [10.8, 64559.0], [10.9, 64559.0], [11.0, 64559.0], [11.1, 64559.0], [11.2, 64559.0], [11.3, 64559.0], [11.4, 64559.0], [11.5, 64559.0], [11.6, 64559.0], [11.7, 64559.0], [11.8, 64559.0], [11.9, 64559.0], [12.0, 64559.0], [12.1, 64559.0], [12.2, 64559.0], [12.3, 64559.0], [12.4, 64559.0], [12.5, 64559.0], [12.6, 64559.0], [12.7, 64559.0], [12.8, 64559.0], [12.9, 64559.0], [13.0, 64605.0], [13.1, 64605.0], [13.2, 64605.0], [13.3, 64605.0], [13.4, 64605.0], [13.5, 64605.0], [13.6, 64605.0], [13.7, 64605.0], [13.8, 64605.0], [13.9, 64605.0], [14.0, 64605.0], [14.1, 64605.0], [14.2, 64605.0], [14.3, 64605.0], [14.4, 64605.0], [14.5, 64605.0], [14.6, 64605.0], [14.7, 64605.0], [14.8, 64605.0], [14.9, 64605.0], [15.0, 64605.0], [15.1, 64605.0], [15.2, 64605.0], [15.3, 64605.0], [15.4, 64605.0], [15.5, 64605.0], [15.6, 64605.0], [15.7, 64605.0], [15.8, 64605.0], [15.9, 64605.0], [16.0, 64605.0], [16.1, 64605.0], [16.2, 64638.0], [16.3, 64638.0], [16.4, 64638.0], [16.5, 64638.0], [16.6, 64638.0], [16.7, 64638.0], [16.8, 64638.0], [16.9, 64638.0], [17.0, 64638.0], [17.1, 64638.0], [17.2, 64638.0], [17.3, 64638.0], [17.4, 64638.0], [17.5, 64638.0], [17.6, 64638.0], [17.7, 64638.0], [17.8, 64638.0], [17.9, 64638.0], [18.0, 64638.0], [18.1, 64638.0], [18.2, 64638.0], [18.3, 64638.0], [18.4, 64638.0], [18.5, 64638.0], [18.6, 64638.0], [18.7, 64638.0], [18.8, 64638.0], [18.9, 64638.0], [19.0, 64638.0], [19.1, 64638.0], [19.2, 64638.0], [19.3, 64638.0], [19.4, 64654.0], [19.5, 64654.0], [19.6, 64654.0], [19.7, 64654.0], [19.8, 64654.0], [19.9, 64654.0], [20.0, 64654.0], [20.1, 64654.0], [20.2, 64654.0], [20.3, 64654.0], [20.4, 64654.0], [20.5, 64654.0], [20.6, 64654.0], [20.7, 64654.0], [20.8, 64654.0], [20.9, 64654.0], [21.0, 64654.0], [21.1, 64654.0], [21.2, 64654.0], [21.3, 64654.0], [21.4, 64654.0], [21.5, 64654.0], [21.6, 64654.0], [21.7, 64654.0], [21.8, 64654.0], [21.9, 64654.0], [22.0, 64654.0], [22.1, 64654.0], [22.2, 64654.0], [22.3, 64654.0], [22.4, 64654.0], [22.5, 64654.0], [22.6, 64690.0], [22.7, 64690.0], [22.8, 64690.0], [22.9, 64690.0], [23.0, 64690.0], [23.1, 64690.0], [23.2, 64690.0], [23.3, 64690.0], [23.4, 64690.0], [23.5, 64690.0], [23.6, 64690.0], [23.7, 64690.0], [23.8, 64690.0], [23.9, 64690.0], [24.0, 64690.0], [24.1, 64690.0], [24.2, 64690.0], [24.3, 64690.0], [24.4, 64690.0], [24.5, 64690.0], [24.6, 64690.0], [24.7, 64690.0], [24.8, 64690.0], [24.9, 64690.0], [25.0, 64690.0], [25.1, 64690.0], [25.2, 64690.0], [25.3, 64690.0], [25.4, 64690.0], [25.5, 64690.0], [25.6, 64690.0], [25.7, 64690.0], [25.8, 64690.0], [25.9, 64717.0], [26.0, 64717.0], [26.1, 64717.0], [26.2, 64717.0], [26.3, 64717.0], [26.4, 64717.0], [26.5, 64717.0], [26.6, 64717.0], [26.7, 64717.0], [26.8, 64717.0], [26.9, 64717.0], [27.0, 64717.0], [27.1, 64717.0], [27.2, 64717.0], [27.3, 64717.0], [27.4, 64717.0], [27.5, 64717.0], [27.6, 64717.0], [27.7, 64717.0], [27.8, 64717.0], [27.9, 64717.0], [28.0, 64717.0], [28.1, 64717.0], [28.2, 64717.0], [28.3, 64717.0], [28.4, 64717.0], [28.5, 64717.0], [28.6, 64717.0], [28.7, 64717.0], [28.8, 64717.0], [28.9, 64717.0], [29.0, 64717.0], [29.1, 64749.0], [29.2, 64749.0], [29.3, 64749.0], [29.4, 64749.0], [29.5, 64749.0], [29.6, 64749.0], [29.7, 64749.0], [29.8, 64749.0], [29.9, 64749.0], [30.0, 64749.0], [30.1, 64749.0], [30.2, 64749.0], [30.3, 64749.0], [30.4, 64749.0], [30.5, 64749.0], [30.6, 64749.0], [30.7, 64749.0], [30.8, 64749.0], [30.9, 64749.0], [31.0, 64749.0], [31.1, 64749.0], [31.2, 64749.0], [31.3, 64749.0], [31.4, 64749.0], [31.5, 64749.0], [31.6, 64749.0], [31.7, 64749.0], [31.8, 64749.0], [31.9, 64749.0], [32.0, 64749.0], [32.1, 64749.0], [32.2, 64749.0], [32.3, 64782.0], [32.4, 64782.0], [32.5, 64782.0], [32.6, 64782.0], [32.7, 64782.0], [32.8, 64782.0], [32.9, 64782.0], [33.0, 64782.0], [33.1, 64782.0], [33.2, 64782.0], [33.3, 64782.0], [33.4, 64782.0], [33.5, 64782.0], [33.6, 64782.0], [33.7, 64782.0], [33.8, 64782.0], [33.9, 64782.0], [34.0, 64782.0], [34.1, 64782.0], [34.2, 64782.0], [34.3, 64782.0], [34.4, 64782.0], [34.5, 64782.0], [34.6, 64782.0], [34.7, 64782.0], [34.8, 64782.0], [34.9, 64782.0], [35.0, 64782.0], [35.1, 64782.0], [35.2, 64782.0], [35.3, 64782.0], [35.4, 64782.0], [35.5, 64829.0], [35.6, 64829.0], [35.7, 64829.0], [35.8, 64829.0], [35.9, 64829.0], [36.0, 64829.0], [36.1, 64829.0], [36.2, 64829.0], [36.3, 64829.0], [36.4, 64829.0], [36.5, 64829.0], [36.6, 64829.0], [36.7, 64829.0], [36.8, 64829.0], [36.9, 64829.0], [37.0, 64829.0], [37.1, 64829.0], [37.2, 64829.0], [37.3, 64829.0], [37.4, 64829.0], [37.5, 64829.0], [37.6, 64829.0], [37.7, 64829.0], [37.8, 64829.0], [37.9, 64829.0], [38.0, 64829.0], [38.1, 64829.0], [38.2, 64829.0], [38.3, 64829.0], [38.4, 64829.0], [38.5, 64829.0], [38.6, 64829.0], [38.7, 64829.0], [38.8, 64846.0], [38.9, 64846.0], [39.0, 64846.0], [39.1, 64846.0], [39.2, 64846.0], [39.3, 64846.0], [39.4, 64846.0], [39.5, 64846.0], [39.6, 64846.0], [39.7, 64846.0], [39.8, 64846.0], [39.9, 64846.0], [40.0, 64846.0], [40.1, 64846.0], [40.2, 64846.0], [40.3, 64846.0], [40.4, 64846.0], [40.5, 64846.0], [40.6, 64846.0], [40.7, 64846.0], [40.8, 64846.0], [40.9, 64846.0], [41.0, 64846.0], [41.1, 64846.0], [41.2, 64846.0], [41.3, 64846.0], [41.4, 64846.0], [41.5, 64846.0], [41.6, 64846.0], [41.7, 64846.0], [41.8, 64846.0], [41.9, 64846.0], [42.0, 64891.0], [42.1, 64891.0], [42.2, 64891.0], [42.3, 64891.0], [42.4, 64891.0], [42.5, 64891.0], [42.6, 64891.0], [42.7, 64891.0], [42.8, 64891.0], [42.9, 64891.0], [43.0, 64891.0], [43.1, 64891.0], [43.2, 64891.0], [43.3, 64891.0], [43.4, 64891.0], [43.5, 64891.0], [43.6, 64891.0], [43.7, 64891.0], [43.8, 64891.0], [43.9, 64891.0], [44.0, 64891.0], [44.1, 64891.0], [44.2, 64891.0], [44.3, 64891.0], [44.4, 64891.0], [44.5, 64891.0], [44.6, 64891.0], [44.7, 64891.0], [44.8, 64891.0], [44.9, 64891.0], [45.0, 64891.0], [45.1, 64891.0], [45.2, 64925.0], [45.3, 64925.0], [45.4, 64925.0], [45.5, 64925.0], [45.6, 64925.0], [45.7, 64925.0], [45.8, 64925.0], [45.9, 64925.0], [46.0, 64925.0], [46.1, 64925.0], [46.2, 64925.0], [46.3, 64925.0], [46.4, 64925.0], [46.5, 64925.0], [46.6, 64925.0], [46.7, 64925.0], [46.8, 64925.0], [46.9, 64925.0], [47.0, 64925.0], [47.1, 64925.0], [47.2, 64925.0], [47.3, 64925.0], [47.4, 64925.0], [47.5, 64925.0], [47.6, 64925.0], [47.7, 64925.0], [47.8, 64925.0], [47.9, 64925.0], [48.0, 64925.0], [48.1, 64925.0], [48.2, 64925.0], [48.3, 64925.0], [48.4, 64928.0], [48.5, 64928.0], [48.6, 64928.0], [48.7, 64928.0], [48.8, 64928.0], [48.9, 64928.0], [49.0, 64928.0], [49.1, 64928.0], [49.2, 64928.0], [49.3, 64928.0], [49.4, 64928.0], [49.5, 64928.0], [49.6, 64928.0], [49.7, 64928.0], [49.8, 64928.0], [49.9, 64928.0], [50.0, 64928.0], [50.1, 64928.0], [50.2, 64928.0], [50.3, 64928.0], [50.4, 64928.0], [50.5, 64928.0], [50.6, 64928.0], [50.7, 64928.0], [50.8, 64928.0], [50.9, 64928.0], [51.0, 64928.0], [51.1, 64928.0], [51.2, 64928.0], [51.3, 64928.0], [51.4, 64928.0], [51.5, 64928.0], [51.6, 64928.0], [51.7, 64970.0], [51.8, 64970.0], [51.9, 64970.0], [52.0, 64970.0], [52.1, 64970.0], [52.2, 64970.0], [52.3, 64970.0], [52.4, 64970.0], [52.5, 64970.0], [52.6, 64970.0], [52.7, 64970.0], [52.8, 64970.0], [52.9, 64970.0], [53.0, 64970.0], [53.1, 64970.0], [53.2, 64970.0], [53.3, 64970.0], [53.4, 64970.0], [53.5, 64970.0], [53.6, 64970.0], [53.7, 64970.0], [53.8, 64970.0], [53.9, 64970.0], [54.0, 64970.0], [54.1, 64970.0], [54.2, 64970.0], [54.3, 64970.0], [54.4, 64970.0], [54.5, 64970.0], [54.6, 64970.0], [54.7, 64970.0], [54.8, 64970.0], [54.9, 64981.0], [55.0, 64981.0], [55.1, 64981.0], [55.2, 64981.0], [55.3, 64981.0], [55.4, 64981.0], [55.5, 64981.0], [55.6, 64981.0], [55.7, 64981.0], [55.8, 64981.0], [55.9, 64981.0], [56.0, 64981.0], [56.1, 64981.0], [56.2, 64981.0], [56.3, 64981.0], [56.4, 64981.0], [56.5, 64981.0], [56.6, 64981.0], [56.7, 64981.0], [56.8, 64981.0], [56.9, 64981.0], [57.0, 64981.0], [57.1, 64981.0], [57.2, 64981.0], [57.3, 64981.0], [57.4, 64981.0], [57.5, 64981.0], [57.6, 64981.0], [57.7, 64981.0], [57.8, 64981.0], [57.9, 64981.0], [58.0, 64981.0], [58.1, 65037.0], [58.2, 65037.0], [58.3, 65037.0], [58.4, 65037.0], [58.5, 65037.0], [58.6, 65037.0], [58.7, 65037.0], [58.8, 65037.0], [58.9, 65037.0], [59.0, 65037.0], [59.1, 65037.0], [59.2, 65037.0], [59.3, 65037.0], [59.4, 65037.0], [59.5, 65037.0], [59.6, 65037.0], [59.7, 65037.0], [59.8, 65037.0], [59.9, 65037.0], [60.0, 65037.0], [60.1, 65037.0], [60.2, 65037.0], [60.3, 65037.0], [60.4, 65037.0], [60.5, 65037.0], [60.6, 65037.0], [60.7, 65037.0], [60.8, 65037.0], [60.9, 65037.0], [61.0, 65037.0], [61.1, 65037.0], [61.2, 65037.0], [61.3, 65078.0], [61.4, 65078.0], [61.5, 65078.0], [61.6, 65078.0], [61.7, 65078.0], [61.8, 65078.0], [61.9, 65078.0], [62.0, 65078.0], [62.1, 65078.0], [62.2, 65078.0], [62.3, 65078.0], [62.4, 65078.0], [62.5, 65078.0], [62.6, 65078.0], [62.7, 65078.0], [62.8, 65078.0], [62.9, 65078.0], [63.0, 65078.0], [63.1, 65078.0], [63.2, 65078.0], [63.3, 65078.0], [63.4, 65078.0], [63.5, 65078.0], [63.6, 65078.0], [63.7, 65078.0], [63.8, 65078.0], [63.9, 65078.0], [64.0, 65078.0], [64.1, 65078.0], [64.2, 65078.0], [64.3, 65078.0], [64.4, 65078.0], [64.5, 65078.0], [64.6, 65100.0], [64.7, 65100.0], [64.8, 65100.0], [64.9, 65100.0], [65.0, 65100.0], [65.1, 65100.0], [65.2, 65100.0], [65.3, 65100.0], [65.4, 65100.0], [65.5, 65100.0], [65.6, 65100.0], [65.7, 65100.0], [65.8, 65100.0], [65.9, 65100.0], [66.0, 65100.0], [66.1, 65100.0], [66.2, 65100.0], [66.3, 65100.0], [66.4, 65100.0], [66.5, 65100.0], [66.6, 65100.0], [66.7, 65100.0], [66.8, 65100.0], [66.9, 65100.0], [67.0, 65100.0], [67.1, 65100.0], [67.2, 65100.0], [67.3, 65100.0], [67.4, 65100.0], [67.5, 65100.0], [67.6, 65100.0], [67.7, 65100.0], [67.8, 65131.0], [67.9, 65131.0], [68.0, 65131.0], [68.1, 65131.0], [68.2, 65131.0], [68.3, 65131.0], [68.4, 65131.0], [68.5, 65131.0], [68.6, 65131.0], [68.7, 65131.0], [68.8, 65131.0], [68.9, 65131.0], [69.0, 65131.0], [69.1, 65131.0], [69.2, 65131.0], [69.3, 65131.0], [69.4, 65131.0], [69.5, 65131.0], [69.6, 65131.0], [69.7, 65131.0], [69.8, 65131.0], [69.9, 65131.0], [70.0, 65131.0], [70.1, 65131.0], [70.2, 65131.0], [70.3, 65131.0], [70.4, 65131.0], [70.5, 65131.0], [70.6, 65131.0], [70.7, 65131.0], [70.8, 65131.0], [70.9, 65131.0], [71.0, 65167.0], [71.1, 65167.0], [71.2, 65167.0], [71.3, 65167.0], [71.4, 65167.0], [71.5, 65167.0], [71.6, 65167.0], [71.7, 65167.0], [71.8, 65167.0], [71.9, 65167.0], [72.0, 65167.0], [72.1, 65167.0], [72.2, 65167.0], [72.3, 65167.0], [72.4, 65167.0], [72.5, 65167.0], [72.6, 65167.0], [72.7, 65167.0], [72.8, 65167.0], [72.9, 65167.0], [73.0, 65167.0], [73.1, 65167.0], [73.2, 65167.0], [73.3, 65167.0], [73.4, 65167.0], [73.5, 65167.0], [73.6, 65167.0], [73.7, 65167.0], [73.8, 65167.0], [73.9, 65167.0], [74.0, 65167.0], [74.1, 65167.0], [74.2, 65197.0], [74.3, 65197.0], [74.4, 65197.0], [74.5, 65197.0], [74.6, 65197.0], [74.7, 65197.0], [74.8, 65197.0], [74.9, 65197.0], [75.0, 65197.0], [75.1, 65197.0], [75.2, 65197.0], [75.3, 65197.0], [75.4, 65197.0], [75.5, 65197.0], [75.6, 65197.0], [75.7, 65197.0], [75.8, 65197.0], [75.9, 65197.0], [76.0, 65197.0], [76.1, 65197.0], [76.2, 65197.0], [76.3, 65197.0], [76.4, 65197.0], [76.5, 65197.0], [76.6, 65197.0], [76.7, 65197.0], [76.8, 65197.0], [76.9, 65197.0], [77.0, 65197.0], [77.1, 65197.0], [77.2, 65197.0], [77.3, 65197.0], [77.4, 65197.0], [77.5, 65229.0], [77.6, 65229.0], [77.7, 65229.0], [77.8, 65229.0], [77.9, 65229.0], [78.0, 65229.0], [78.1, 65229.0], [78.2, 65229.0], [78.3, 65229.0], [78.4, 65229.0], [78.5, 65229.0], [78.6, 65229.0], [78.7, 65229.0], [78.8, 65229.0], [78.9, 65229.0], [79.0, 65229.0], [79.1, 65229.0], [79.2, 65229.0], [79.3, 65229.0], [79.4, 65229.0], [79.5, 65229.0], [79.6, 65229.0], [79.7, 65229.0], [79.8, 65229.0], [79.9, 65229.0], [80.0, 65229.0], [80.1, 65229.0], [80.2, 65229.0], [80.3, 65229.0], [80.4, 65229.0], [80.5, 65229.0], [80.6, 65229.0], [80.7, 65262.0], [80.8, 65262.0], [80.9, 65262.0], [81.0, 65262.0], [81.1, 65262.0], [81.2, 65262.0], [81.3, 65262.0], [81.4, 65262.0], [81.5, 65262.0], [81.6, 65262.0], [81.7, 65262.0], [81.8, 65262.0], [81.9, 65262.0], [82.0, 65262.0], [82.1, 65262.0], [82.2, 65262.0], [82.3, 65262.0], [82.4, 65262.0], [82.5, 65262.0], [82.6, 65262.0], [82.7, 65262.0], [82.8, 65262.0], [82.9, 65262.0], [83.0, 65262.0], [83.1, 65262.0], [83.2, 65262.0], [83.3, 65262.0], [83.4, 65262.0], [83.5, 65262.0], [83.6, 65262.0], [83.7, 65262.0], [83.8, 65262.0], [83.9, 65294.0], [84.0, 65294.0], [84.1, 65294.0], [84.2, 65294.0], [84.3, 65294.0], [84.4, 65294.0], [84.5, 65294.0], [84.6, 65294.0], [84.7, 65294.0], [84.8, 65294.0], [84.9, 65294.0], [85.0, 65294.0], [85.1, 65294.0], [85.2, 65294.0], [85.3, 65294.0], [85.4, 65294.0], [85.5, 65294.0], [85.6, 65294.0], [85.7, 65294.0], [85.8, 65294.0], [85.9, 65294.0], [86.0, 65294.0], [86.1, 65294.0], [86.2, 65294.0], [86.3, 65294.0], [86.4, 65294.0], [86.5, 65294.0], [86.6, 65294.0], [86.7, 65294.0], [86.8, 65294.0], [86.9, 65294.0], [87.0, 65294.0], [87.1, 65325.0], [87.2, 65325.0], [87.3, 65325.0], [87.4, 65325.0], [87.5, 65325.0], [87.6, 65325.0], [87.7, 65325.0], [87.8, 65325.0], [87.9, 65325.0], [88.0, 65325.0], [88.1, 65325.0], [88.2, 65325.0], [88.3, 65325.0], [88.4, 65325.0], [88.5, 65325.0], [88.6, 65325.0], [88.7, 65325.0], [88.8, 65325.0], [88.9, 65325.0], [89.0, 65325.0], [89.1, 65325.0], [89.2, 65325.0], [89.3, 65325.0], [89.4, 65325.0], [89.5, 65325.0], [89.6, 65325.0], [89.7, 65325.0], [89.8, 65325.0], [89.9, 65325.0], [90.0, 65325.0], [90.1, 65325.0], [90.2, 65325.0], [90.3, 65325.0], [90.4, 65356.0], [90.5, 65356.0], [90.6, 65356.0], [90.7, 65356.0], [90.8, 65356.0], [90.9, 65356.0], [91.0, 65356.0], [91.1, 65356.0], [91.2, 65356.0], [91.3, 65356.0], [91.4, 65356.0], [91.5, 65356.0], [91.6, 65356.0], [91.7, 65356.0], [91.8, 65356.0], [91.9, 65356.0], [92.0, 65356.0], [92.1, 65356.0], [92.2, 65356.0], [92.3, 65356.0], [92.4, 65356.0], [92.5, 65356.0], [92.6, 65356.0], [92.7, 65356.0], [92.8, 65356.0], [92.9, 65356.0], [93.0, 65356.0], [93.1, 65356.0], [93.2, 65356.0], [93.3, 65356.0], [93.4, 65356.0], [93.5, 65356.0], [93.6, 65403.0], [93.7, 65403.0], [93.8, 65403.0], [93.9, 65403.0], [94.0, 65403.0], [94.1, 65403.0], [94.2, 65403.0], [94.3, 65403.0], [94.4, 65403.0], [94.5, 65403.0], [94.6, 65403.0], [94.7, 65403.0], [94.8, 65403.0], [94.9, 65403.0], [95.0, 65403.0], [95.1, 65403.0], [95.2, 65403.0], [95.3, 65403.0], [95.4, 65403.0], [95.5, 65403.0], [95.6, 65403.0], [95.7, 65403.0], [95.8, 65403.0], [95.9, 65403.0], [96.0, 65403.0], [96.1, 65403.0], [96.2, 65403.0], [96.3, 65403.0], [96.4, 65403.0], [96.5, 65403.0], [96.6, 65403.0], [96.7, 65403.0], [96.8, 65417.0], [96.9, 65417.0], [97.0, 65417.0], [97.1, 65417.0], [97.2, 65417.0], [97.3, 65417.0], [97.4, 65417.0], [97.5, 65417.0], [97.6, 65417.0], [97.7, 65417.0], [97.8, 65417.0], [97.9, 65417.0], [98.0, 65417.0], [98.1, 65417.0], [98.2, 65417.0], [98.3, 65417.0], [98.4, 65417.0], [98.5, 65417.0], [98.6, 65417.0], [98.7, 65417.0], [98.8, 65417.0], [98.9, 65417.0], [99.0, 65417.0], [99.1, 65417.0], [99.2, 65417.0], [99.3, 65417.0], [99.4, 65417.0], [99.5, 65417.0], [99.6, 65417.0], [99.7, 65417.0], [99.8, 65417.0], [99.9, 65417.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 61300.0], [0.1, 61300.0], [0.2, 61324.0], [0.3, 61324.0], [0.4, 61324.0], [0.5, 61324.0], [0.6, 61324.0], [0.7, 61328.0], [0.8, 61328.0], [0.9, 61336.0], [1.0, 61349.0], [1.1, 61349.0], [1.2, 61352.0], [1.3, 61361.0], [1.4, 61361.0], [1.5, 61365.0], [1.6, 61365.0], [1.7, 61377.0], [1.8, 61380.0], [1.9, 61380.0], [2.0, 61382.0], [2.1, 61390.0], [2.2, 61390.0], [2.3, 61405.0], [2.4, 61405.0], [2.5, 61408.0], [2.6, 61408.0], [2.7, 61408.0], [2.8, 61412.0], [2.9, 61412.0], [3.0, 61413.0], [3.1, 61416.0], [3.2, 61416.0], [3.3, 61427.0], [3.4, 61430.0], [3.5, 61430.0], [3.6, 61433.0], [3.7, 61433.0], [3.8, 61437.0], [3.9, 61442.0], [4.0, 61442.0], [4.1, 61442.0], [4.2, 61443.0], [4.3, 61443.0], [4.4, 61444.0], [4.5, 61444.0], [4.6, 61447.0], [4.7, 61458.0], [4.8, 61458.0], [4.9, 61464.0], [5.0, 61470.0], [5.1, 61470.0], [5.2, 61473.0], [5.3, 61473.0], [5.4, 61480.0], [5.5, 61484.0], [5.6, 61484.0], [5.7, 61489.0], [5.8, 61489.0], [5.9, 61490.0], [6.0, 61495.0], [6.1, 61495.0], [6.2, 61497.0], [6.3, 61497.0], [6.4, 61497.0], [6.5, 61498.0], [6.6, 61498.0], [6.7, 61499.0], [6.8, 61501.0], [6.9, 61501.0], [7.0, 61502.0], [7.1, 61502.0], [7.2, 61502.0], [7.3, 61507.0], [7.4, 61507.0], [7.5, 61509.0], [7.6, 61510.0], [7.7, 61510.0], [7.8, 61520.0], [7.9, 61520.0], [8.0, 61523.0], [8.1, 61527.0], [8.2, 61527.0], [8.3, 61527.0], [8.4, 61530.0], [8.5, 61530.0], [8.6, 61535.0], [8.7, 61535.0], [8.8, 61535.0], [8.9, 61536.0], [9.0, 61536.0], [9.1, 61539.0], [9.2, 61541.0], [9.3, 61541.0], [9.4, 61548.0], [9.5, 61548.0], [9.6, 61549.0], [9.7, 61553.0], [9.8, 61553.0], [9.9, 61553.0], [10.0, 61555.0], [10.1, 61555.0], [10.2, 61558.0], [10.3, 61558.0], [10.4, 61558.0], [10.5, 61559.0], [10.6, 61559.0], [10.7, 61559.0], [10.8, 61559.0], [10.9, 61560.0], [11.0, 61561.0], [11.1, 61561.0], [11.2, 61562.0], [11.3, 61563.0], [11.4, 61563.0], [11.5, 61563.0], [11.6, 61563.0], [11.7, 61568.0], [11.8, 61571.0], [11.9, 61571.0], [12.0, 61583.0], [12.1, 61583.0], [12.2, 61583.0], [12.3, 61583.0], [12.4, 61583.0], [12.5, 61590.0], [12.6, 61592.0], [12.7, 61592.0], [12.8, 61594.0], [12.9, 61594.0], [13.0, 61594.0], [13.1, 61595.0], [13.2, 61595.0], [13.3, 61602.0], [13.4, 61603.0], [13.5, 61603.0], [13.6, 61604.0], [13.7, 61604.0], [13.8, 61607.0], [13.9, 61607.0], [14.0, 61607.0], [14.1, 61608.0], [14.2, 61609.0], [14.3, 61609.0], [14.4, 61609.0], [14.5, 61609.0], [14.6, 61609.0], [14.7, 61610.0], [14.8, 61610.0], [14.9, 61610.0], [15.0, 61610.0], [15.1, 61614.0], [15.2, 61618.0], [15.3, 61618.0], [15.4, 61620.0], [15.5, 61622.0], [15.6, 61622.0], [15.7, 61623.0], [15.8, 61623.0], [15.9, 61624.0], [16.0, 61624.0], [16.1, 61624.0], [16.2, 61628.0], [16.3, 61631.0], [16.4, 61631.0], [16.5, 61633.0], [16.6, 61633.0], [16.7, 61637.0], [16.8, 61637.0], [16.9, 61637.0], [17.0, 61638.0], [17.1, 61639.0], [17.2, 61639.0], [17.3, 61649.0], [17.4, 61649.0], [17.5, 61649.0], [17.6, 61650.0], [17.7, 61650.0], [17.8, 61651.0], [17.9, 61651.0], [18.0, 61653.0], [18.1, 61654.0], [18.2, 61654.0], [18.3, 61655.0], [18.4, 61657.0], [18.5, 61657.0], [18.6, 61659.0], [18.7, 61659.0], [18.8, 61661.0], [18.9, 61661.0], [19.0, 61661.0], [19.1, 61666.0], [19.2, 61667.0], [19.3, 61667.0], [19.4, 61671.0], [19.5, 61671.0], [19.6, 61677.0], [19.7, 61678.0], [19.8, 61678.0], [19.9, 61680.0], [20.0, 61680.0], [20.1, 61680.0], [20.2, 61680.0], [20.3, 61680.0], [20.4, 61681.0], [20.5, 61681.0], [20.6, 61681.0], [20.7, 61686.0], [20.8, 61686.0], [20.9, 61689.0], [21.0, 61689.0], [21.1, 61689.0], [21.2, 61690.0], [21.3, 61694.0], [21.4, 61694.0], [21.5, 61695.0], [21.6, 61695.0], [21.7, 61695.0], [21.8, 61700.0], [21.9, 61700.0], [22.0, 61702.0], [22.1, 61703.0], [22.2, 61703.0], [22.3, 61708.0], [22.4, 61708.0], [22.5, 61710.0], [22.6, 61711.0], [22.7, 61711.0], [22.8, 61712.0], [22.9, 61712.0], [23.0, 61712.0], [23.1, 61713.0], [23.2, 61713.0], [23.3, 61718.0], [23.4, 61726.0], [23.5, 61726.0], [23.6, 61727.0], [23.7, 61727.0], [23.8, 61728.0], [23.9, 61728.0], [24.0, 61728.0], [24.1, 61730.0], [24.2, 61731.0], [24.3, 61731.0], [24.4, 61733.0], [24.5, 61733.0], [24.6, 61733.0], [24.7, 61734.0], [24.8, 61734.0], [24.9, 61739.0], [25.0, 61745.0], [25.1, 61745.0], [25.2, 61747.0], [25.3, 61747.0], [25.4, 61748.0], [25.5, 61750.0], [25.6, 61750.0], [25.7, 61751.0], [25.8, 61751.0], [25.9, 61752.0], [26.0, 61752.0], [26.1, 61752.0], [26.2, 61753.0], [26.3, 61754.0], [26.4, 61754.0], [26.5, 61756.0], [26.6, 61756.0], [26.7, 61757.0], [26.8, 61762.0], [26.9, 61762.0], [27.0, 61764.0], [27.1, 61770.0], [27.2, 61770.0], [27.3, 61772.0], [27.4, 61772.0], [27.5, 61779.0], [27.6, 61779.0], [27.7, 61779.0], [27.8, 61780.0], [27.9, 61780.0], [28.0, 61783.0], [28.1, 61783.0], [28.2, 61783.0], [28.3, 61784.0], [28.4, 61786.0], [28.5, 61786.0], [28.6, 61789.0], [28.7, 61789.0], [28.8, 61790.0], [28.9, 61790.0], [29.0, 61790.0], [29.1, 61793.0], [29.2, 61798.0], [29.3, 61798.0], [29.4, 61799.0], [29.5, 61799.0], [29.6, 61802.0], [29.7, 61803.0], [29.8, 61803.0], [29.9, 61803.0], [30.0, 61806.0], [30.1, 61806.0], [30.2, 61810.0], [30.3, 61810.0], [30.4, 61812.0], [30.5, 61816.0], [30.6, 61816.0], [30.7, 61817.0], [30.8, 61817.0], [30.9, 61817.0], [31.0, 61819.0], [31.1, 61819.0], [31.2, 61821.0], [31.3, 61821.0], [31.4, 61821.0], [31.5, 61821.0], [31.6, 61821.0], [31.7, 61822.0], [31.8, 61827.0], [31.9, 61827.0], [32.0, 61829.0], [32.1, 61831.0], [32.2, 61831.0], [32.3, 61837.0], [32.4, 61837.0], [32.5, 61844.0], [32.6, 61846.0], [32.7, 61846.0], [32.8, 61847.0], [32.9, 61847.0], [33.0, 61848.0], [33.1, 61849.0], [33.2, 61849.0], [33.3, 61853.0], [33.4, 61854.0], [33.5, 61854.0], [33.6, 61854.0], [33.7, 61854.0], [33.8, 61855.0], [33.9, 61855.0], [34.0, 61855.0], [34.1, 61858.0], [34.2, 61858.0], [34.3, 61858.0], [34.4, 61861.0], [34.5, 61861.0], [34.6, 61863.0], [34.7, 61865.0], [34.8, 61865.0], [34.9, 61869.0], [35.0, 61869.0], [35.1, 61869.0], [35.2, 61869.0], [35.3, 61869.0], [35.4, 61872.0], [35.5, 61874.0], [35.6, 61874.0], [35.7, 61875.0], [35.8, 61875.0], [35.9, 61878.0], [36.0, 61879.0], [36.1, 61879.0], [36.2, 61880.0], [36.3, 61880.0], [36.4, 61880.0], [36.5, 61880.0], [36.6, 61880.0], [36.7, 61883.0], [36.8, 61885.0], [36.9, 61885.0], [37.0, 61885.0], [37.1, 61887.0], [37.2, 61887.0], [37.3, 61887.0], [37.4, 61887.0], [37.5, 61889.0], [37.6, 61891.0], [37.7, 61891.0], [37.8, 61893.0], [37.9, 61893.0], [38.0, 61902.0], [38.1, 61902.0], [38.2, 61902.0], [38.3, 61904.0], [38.4, 61906.0], [38.5, 61906.0], [38.6, 61908.0], [38.7, 61908.0], [38.8, 61909.0], [38.9, 61911.0], [39.0, 61911.0], [39.1, 61911.0], [39.2, 61913.0], [39.3, 61913.0], [39.4, 61914.0], [39.5, 61914.0], [39.6, 61914.0], [39.7, 61919.0], [39.8, 61919.0], [39.9, 61919.0], [40.0, 61919.0], [40.1, 61930.0], [40.2, 61931.0], [40.3, 61931.0], [40.4, 61931.0], [40.5, 61936.0], [40.6, 61936.0], [40.7, 61938.0], [40.8, 61938.0], [40.9, 61940.0], [41.0, 61940.0], [41.1, 61940.0], [41.2, 61940.0], [41.3, 61944.0], [41.4, 61944.0], [41.5, 61944.0], [41.6, 61944.0], [41.7, 61945.0], [41.8, 61946.0], [41.9, 61946.0], [42.0, 61947.0], [42.1, 61948.0], [42.2, 61948.0], [42.3, 61952.0], [42.4, 61952.0], [42.5, 61953.0], [42.6, 61953.0], [42.7, 61953.0], [42.8, 61954.0], [42.9, 61954.0], [43.0, 61955.0], [43.1, 61955.0], [43.2, 61955.0], [43.3, 61956.0], [43.4, 61958.0], [43.5, 61958.0], [43.6, 61960.0], [43.7, 61960.0], [43.8, 61962.0], [43.9, 61964.0], [44.0, 61964.0], [44.1, 61967.0], [44.2, 61967.0], [44.3, 61967.0], [44.4, 61972.0], [44.5, 61972.0], [44.6, 61973.0], [44.7, 61974.0], [44.8, 61974.0], [44.9, 61978.0], [45.0, 61978.0], [45.1, 61981.0], [45.2, 61988.0], [45.3, 61988.0], [45.4, 61989.0], [45.5, 61994.0], [45.6, 61994.0], [45.7, 61996.0], [45.8, 61996.0], [45.9, 61996.0], [46.0, 61996.0], [46.1, 61996.0], [46.2, 61998.0], [46.3, 61999.0], [46.4, 61999.0], [46.5, 61999.0], [46.6, 61999.0], [46.7, 61999.0], [46.8, 62002.0], [46.9, 62002.0], [47.0, 62007.0], [47.1, 62007.0], [47.2, 62007.0], [47.3, 62007.0], [47.4, 62007.0], [47.5, 62010.0], [47.6, 62011.0], [47.7, 62011.0], [47.8, 62011.0], [47.9, 62011.0], [48.0, 62013.0], [48.1, 62018.0], [48.2, 62018.0], [48.3, 62020.0], [48.4, 62023.0], [48.5, 62023.0], [48.6, 62024.0], [48.7, 62024.0], [48.8, 62027.0], [48.9, 62028.0], [49.0, 62028.0], [49.1, 62029.0], [49.2, 62030.0], [49.3, 62030.0], [49.4, 62031.0], [49.5, 62031.0], [49.6, 62031.0], [49.7, 62034.0], [49.8, 62034.0], [49.9, 62040.0], [50.0, 62040.0], [50.1, 62042.0], [50.2, 62048.0], [50.3, 62048.0], [50.4, 62049.0], [50.5, 62051.0], [50.6, 62051.0], [50.7, 62055.0], [50.8, 62055.0], [50.9, 62057.0], [51.0, 62058.0], [51.1, 62058.0], [51.2, 62059.0], [51.3, 62061.0], [51.4, 62061.0], [51.5, 62062.0], [51.6, 62062.0], [51.7, 62076.0], [51.8, 62076.0], [51.9, 62076.0], [52.0, 62077.0], [52.1, 62078.0], [52.2, 62078.0], [52.3, 62078.0], [52.4, 62078.0], [52.5, 62079.0], [52.6, 62083.0], [52.7, 62083.0], [52.8, 62083.0], [52.9, 62083.0], [53.0, 62085.0], [53.1, 62086.0], [53.2, 62086.0], [53.3, 62087.0], [53.4, 62091.0], [53.5, 62091.0], [53.6, 62096.0], [53.7, 62096.0], [53.8, 62096.0], [53.9, 62097.0], [54.0, 62097.0], [54.1, 62100.0], [54.2, 62101.0], [54.3, 62101.0], [54.4, 62102.0], [54.5, 62102.0], [54.6, 62102.0], [54.7, 62103.0], [54.8, 62103.0], [54.9, 62106.0], [55.0, 62106.0], [55.1, 62106.0], [55.2, 62106.0], [55.3, 62106.0], [55.4, 62115.0], [55.5, 62116.0], [55.6, 62116.0], [55.7, 62118.0], [55.8, 62118.0], [55.9, 62119.0], [56.0, 62119.0], [56.1, 62119.0], [56.2, 62121.0], [56.3, 62123.0], [56.4, 62123.0], [56.5, 62124.0], [56.6, 62124.0], [56.7, 62124.0], [56.8, 62126.0], [56.9, 62126.0], [57.0, 62127.0], [57.1, 62137.0], [57.2, 62137.0], [57.3, 62137.0], [57.4, 62137.0], [57.5, 62139.0], [57.6, 62139.0], [57.7, 62139.0], [57.8, 62140.0], [57.9, 62140.0], [58.0, 62142.0], [58.1, 62145.0], [58.2, 62145.0], [58.3, 62148.0], [58.4, 62149.0], [58.5, 62149.0], [58.6, 62158.0], [58.7, 62158.0], [58.8, 62158.0], [58.9, 62159.0], [59.0, 62159.0], [59.1, 62160.0], [59.2, 62161.0], [59.3, 62161.0], [59.4, 62168.0], [59.5, 62168.0], [59.6, 62170.0], [59.7, 62170.0], [59.8, 62170.0], [59.9, 62172.0], [60.0, 62172.0], [60.1, 62172.0], [60.2, 62174.0], [60.3, 62174.0], [60.4, 62186.0], [60.5, 62188.0], [60.6, 62188.0], [60.7, 62193.0], [60.8, 62193.0], [60.9, 62194.0], [61.0, 62195.0], [61.1, 62195.0], [61.2, 62196.0], [61.3, 62199.0], [61.4, 62199.0], [61.5, 62202.0], [61.6, 62202.0], [61.7, 62203.0], [61.8, 62204.0], [61.9, 62204.0], [62.0, 62205.0], [62.1, 62207.0], [62.2, 62207.0], [62.3, 62208.0], [62.4, 62208.0], [62.5, 62210.0], [62.6, 62211.0], [62.7, 62211.0], [62.8, 62212.0], [62.9, 62212.0], [63.0, 62213.0], [63.1, 62215.0], [63.2, 62215.0], [63.3, 62223.0], [63.4, 62223.0], [63.5, 62223.0], [63.6, 62225.0], [63.7, 62225.0], [63.8, 62231.0], [63.9, 62234.0], [64.0, 62234.0], [64.1, 62234.0], [64.2, 62236.0], [64.3, 62236.0], [64.4, 62239.0], [64.5, 62239.0], [64.6, 62240.0], [64.7, 62240.0], [64.8, 62240.0], [64.9, 62245.0], [65.0, 62245.0], [65.1, 62246.0], [65.2, 62248.0], [65.3, 62248.0], [65.4, 62248.0], [65.5, 62256.0], [65.6, 62256.0], [65.7, 62258.0], [65.8, 62258.0], [65.9, 62261.0], [66.0, 62265.0], [66.1, 62265.0], [66.2, 62265.0], [66.3, 62266.0], [66.4, 62266.0], [66.5, 62269.0], [66.6, 62269.0], [66.7, 62272.0], [66.8, 62273.0], [66.9, 62273.0], [67.0, 62273.0], [67.1, 62273.0], [67.2, 62273.0], [67.3, 62273.0], [67.4, 62273.0], [67.5, 62279.0], [67.6, 62280.0], [67.7, 62280.0], [67.8, 62280.0], [67.9, 62280.0], [68.0, 62282.0], [68.1, 62287.0], [68.2, 62287.0], [68.3, 62288.0], [68.4, 62289.0], [68.5, 62289.0], [68.6, 62290.0], [68.7, 62290.0], [68.8, 62290.0], [68.9, 62293.0], [69.0, 62293.0], [69.1, 62298.0], [69.2, 62300.0], [69.3, 62300.0], [69.4, 62301.0], [69.5, 62301.0], [69.6, 62302.0], [69.7, 62302.0], [69.8, 62302.0], [69.9, 62303.0], [70.0, 62303.0], [70.1, 62304.0], [70.2, 62306.0], [70.3, 62306.0], [70.4, 62313.0], [70.5, 62314.0], [70.6, 62314.0], [70.7, 62316.0], [70.8, 62316.0], [70.9, 62316.0], [71.0, 62316.0], [71.1, 62316.0], [71.2, 62316.0], [71.3, 62316.0], [71.4, 62316.0], [71.5, 62317.0], [71.6, 62317.0], [71.7, 62318.0], [71.8, 62318.0], [71.9, 62318.0], [72.0, 62320.0], [72.1, 62321.0], [72.2, 62321.0], [72.3, 62323.0], [72.4, 62323.0], [72.5, 62323.0], [72.6, 62325.0], [72.7, 62325.0], [72.8, 62325.0], [72.9, 62325.0], [73.0, 62328.0], [73.1, 62329.0], [73.2, 62329.0], [73.3, 62333.0], [73.4, 62333.0], [73.5, 62333.0], [73.6, 62337.0], [73.7, 62337.0], [73.8, 62338.0], [73.9, 62339.0], [74.0, 62339.0], [74.1, 62344.0], [74.2, 62346.0], [74.3, 62346.0], [74.4, 62349.0], [74.5, 62349.0], [74.6, 62350.0], [74.7, 62350.0], [74.8, 62350.0], [74.9, 62350.0], [75.0, 62350.0], [75.1, 62354.0], [75.2, 62355.0], [75.3, 62355.0], [75.4, 62356.0], [75.5, 62357.0], [75.6, 62357.0], [75.7, 62362.0], [75.8, 62362.0], [75.9, 62364.0], [76.0, 62365.0], [76.1, 62365.0], [76.2, 62367.0], [76.3, 62368.0], [76.4, 62368.0], [76.5, 62369.0], [76.6, 62369.0], [76.7, 62373.0], [76.8, 62375.0], [76.9, 62375.0], [77.0, 62376.0], [77.1, 62377.0], [77.2, 62377.0], [77.3, 62378.0], [77.4, 62378.0], [77.5, 62380.0], [77.6, 62388.0], [77.7, 62388.0], [77.8, 62389.0], [77.9, 62389.0], [78.0, 62396.0], [78.1, 62396.0], [78.2, 62396.0], [78.3, 62396.0], [78.4, 62396.0], [78.5, 62396.0], [78.6, 62396.0], [78.7, 62396.0], [78.8, 62398.0], [78.9, 62399.0], [79.0, 62399.0], [79.1, 62399.0], [79.2, 62403.0], [79.3, 62403.0], [79.4, 62404.0], [79.5, 62404.0], [79.6, 62409.0], [79.7, 62416.0], [79.8, 62416.0], [79.9, 62418.0], [80.0, 62418.0], [80.1, 62420.0], [80.2, 62421.0], [80.3, 62421.0], [80.4, 62425.0], [80.5, 62425.0], [80.6, 62425.0], [80.7, 62426.0], [80.8, 62426.0], [80.9, 62428.0], [81.0, 62429.0], [81.1, 62429.0], [81.2, 62432.0], [81.3, 62434.0], [81.4, 62434.0], [81.5, 62434.0], [81.6, 62434.0], [81.7, 62438.0], [81.8, 62442.0], [81.9, 62442.0], [82.0, 62444.0], [82.1, 62444.0], [82.2, 62444.0], [82.3, 62444.0], [82.4, 62444.0], [82.5, 62444.0], [82.6, 62448.0], [82.7, 62448.0], [82.8, 62453.0], [82.9, 62453.0], [83.0, 62456.0], [83.1, 62463.0], [83.2, 62463.0], [83.3, 62464.0], [83.4, 62469.0], [83.5, 62469.0], [83.6, 62471.0], [83.7, 62471.0], [83.8, 62471.0], [83.9, 62472.0], [84.0, 62472.0], [84.1, 62473.0], [84.2, 62473.0], [84.3, 62473.0], [84.4, 62474.0], [84.5, 62474.0], [84.6, 62477.0], [84.7, 62477.0], [84.8, 62477.0], [84.9, 62478.0], [85.0, 62478.0], [85.1, 62478.0], [85.2, 62478.0], [85.3, 62478.0], [85.4, 62481.0], [85.5, 62483.0], [85.6, 62483.0], [85.7, 62483.0], [85.8, 62483.0], [85.9, 62486.0], [86.0, 62486.0], [86.1, 62486.0], [86.2, 62487.0], [86.3, 62490.0], [86.4, 62490.0], [86.5, 62491.0], [86.6, 62491.0], [86.7, 62495.0], [86.8, 62499.0], [86.9, 62499.0], [87.0, 62501.0], [87.1, 62502.0], [87.2, 62502.0], [87.3, 62504.0], [87.4, 62504.0], [87.5, 62509.0], [87.6, 62510.0], [87.7, 62510.0], [87.8, 62511.0], [87.9, 62511.0], [88.0, 62513.0], [88.1, 62517.0], [88.2, 62517.0], [88.3, 62520.0], [88.4, 62521.0], [88.5, 62521.0], [88.6, 62523.0], [88.7, 62523.0], [88.8, 62526.0], [88.9, 62527.0], [89.0, 62527.0], [89.1, 62528.0], [89.2, 62530.0], [89.3, 62530.0], [89.4, 62532.0], [89.5, 62532.0], [89.6, 62533.0], [89.7, 62537.0], [89.8, 62537.0], [89.9, 62540.0], [90.0, 62546.0], [90.1, 62546.0], [90.2, 62548.0], [90.3, 62548.0], [90.4, 62548.0], [90.5, 62550.0], [90.6, 62550.0], [90.7, 62562.0], [90.8, 62562.0], [90.9, 62564.0], [91.0, 62564.0], [91.1, 62564.0], [91.2, 62569.0], [91.3, 62578.0], [91.4, 62578.0], [91.5, 62581.0], [91.6, 62581.0], [91.7, 62581.0], [91.8, 62584.0], [91.9, 62584.0], [92.0, 62585.0], [92.1, 62586.0], [92.2, 62586.0], [92.3, 62588.0], [92.4, 62588.0], [92.5, 62593.0], [92.6, 62597.0], [92.7, 62597.0], [92.8, 62613.0], [92.9, 62613.0], [93.0, 62616.0], [93.1, 62619.0], [93.2, 62619.0], [93.3, 62620.0], [93.4, 62628.0], [93.5, 62628.0], [93.6, 62633.0], [93.7, 62633.0], [93.8, 62636.0], [93.9, 62637.0], [94.0, 62637.0], [94.1, 62643.0], [94.2, 62645.0], [94.3, 62645.0], [94.4, 62647.0], [94.5, 62647.0], [94.6, 62650.0], [94.7, 62651.0], [94.8, 62651.0], [94.9, 62654.0], [95.0, 62668.0], [95.1, 62668.0], [95.2, 62671.0], [95.3, 62671.0], [95.4, 62672.0], [95.5, 62678.0], [95.6, 62678.0], [95.7, 62678.0], [95.8, 62678.0], [95.9, 62679.0], [96.0, 62681.0], [96.1, 62681.0], [96.2, 62683.0], [96.3, 62698.0], [96.4, 62698.0], [96.5, 62699.0], [96.6, 62699.0], [96.7, 62699.0], [96.8, 62701.0], [96.9, 62701.0], [97.0, 62701.0], [97.1, 62705.0], [97.2, 62705.0], [97.3, 62708.0], [97.4, 62708.0], [97.5, 62714.0], [97.6, 62718.0], [97.7, 62718.0], [97.8, 62718.0], [97.9, 62718.0], [98.0, 62724.0], [98.1, 62740.0], [98.2, 62740.0], [98.3, 62742.0], [98.4, 62755.0], [98.5, 62755.0], [98.6, 62761.0], [98.7, 62761.0], [98.8, 62766.0], [98.9, 62779.0], [99.0, 62779.0], [99.1, 62790.0], [99.2, 62791.0], [99.3, 62791.0], [99.4, 62794.0], [99.5, 62794.0], [99.6, 62796.0], [99.7, 62803.0], [99.8, 62803.0], [99.9, 62804.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 61200.0, "maxY": 62.0, "series": [{"data": [[61400.0, 30.0], [61300.0, 22.0], [61200.0, 9.0], [61600.0, 61.0], [62300.0, 55.0], [62000.0, 42.0], [61900.0, 62.0], [61500.0, 60.0], [62200.0, 48.0], [61800.0, 43.0], [62100.0, 43.0], [61700.0, 45.0], [62400.0, 48.0], [62500.0, 32.0], [62600.0, 16.0], [62700.0, 4.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[61500.0, 15.0], [61700.0, 29.0], [62200.0, 43.0], [61800.0, 31.0], [62300.0, 30.0], [62000.0, 36.0], [61600.0, 15.0], [62100.0, 32.0], [61900.0, 31.0], [62400.0, 23.0], [62500.0, 14.0], [62600.0, 10.0], [62700.0, 1.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[64600.0, 4.0], [64800.0, 3.0], [65300.0, 2.0], [64700.0, 3.0], [65100.0, 4.0], [65200.0, 3.0], [65400.0, 2.0], [64500.0, 3.0], [64400.0, 1.0], [65000.0, 2.0], [64900.0, 4.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[61400.0, 28.0], [61300.0, 14.0], [61500.0, 40.0], [62000.0, 45.0], [61700.0, 48.0], [61900.0, 55.0], [61800.0, 52.0], [62100.0, 46.0], [62400.0, 48.0], [61600.0, 53.0], [62300.0, 62.0], [62200.0, 48.0], [62500.0, 36.0], [62600.0, 25.0], [62700.0, 18.0], [62800.0, 2.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 65400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1581.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 1581.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 1581.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.806451612903224, "minX": 1.61940024E12, "maxY": 312.1532258064519, "series": [{"data": [[1.61940024E12, 156.39677419354842]], "isOverall": false, "label": "UserType4_V1V2", "isController": false}, {"data": [[1.61940024E12, 17.806451612903224]], "isOverall": false, "label": "UserType1_V1V2", "isController": false}, {"data": [[1.61940024E12, 312.1016129032261]], "isOverall": false, "label": "UserType2_V1V2", "isController": false}, {"data": [[1.61940024E12, 312.1532258064519]], "isOverall": false, "label": "UserType3_V1V2", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940024E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 61241.0, "minX": 2.0, "maxY": 65339.5, "series": [{"data": [[37.0, 62279.0], [41.0, 61901.0], [44.0, 61613.0], [46.0, 62205.0], [53.0, 62424.0], [55.0, 62464.0], [54.0, 62569.0], [57.0, 62510.0], [58.0, 61981.0], [61.0, 62461.0], [60.0, 61975.0], [64.0, 61889.0], [71.0, 61603.0], [69.0, 61652.0], [75.0, 62191.0], [78.0, 62022.0], [77.0, 62513.0], [76.0, 62215.0], [83.0, 62306.0], [81.0, 62394.0], [86.0, 61543.0], [85.0, 62619.0], [91.0, 62107.0], [88.0, 62271.0], [102.0, 62011.0], [100.0, 62543.0], [106.0, 62396.0], [104.0, 61883.0], [114.0, 61761.0], [112.0, 62109.0], [118.0, 62123.0], [117.0, 61620.0], [116.0, 62199.0], [121.0, 62120.0], [120.0, 62192.0], [125.0, 61616.0], [135.0, 61564.0], [128.0, 61553.0], [142.0, 62224.0], [140.0, 62264.0], [139.0, 61693.0], [146.0, 62729.0], [144.0, 61828.0], [159.0, 62356.0], [157.0, 61701.0], [156.0, 61538.0], [153.0, 61675.0], [167.0, 61663.0], [165.0, 61787.0], [162.0, 62237.0], [161.0, 62560.0], [174.0, 61811.0], [173.0, 61894.0], [168.0, 62404.0], [183.0, 61790.0], [182.0, 61768.0], [180.0, 61706.0], [179.0, 62015.0], [177.0, 61521.0], [176.0, 62001.0], [189.0, 62237.0], [186.0, 61759.0], [185.0, 61653.0], [184.0, 61549.0], [199.0, 62315.0], [197.0, 62234.5], [193.0, 62358.0], [207.0, 62354.0], [205.0, 61942.0], [203.0, 61915.5], [214.0, 62523.5], [213.0, 62381.0], [220.0, 62442.0], [217.0, 62033.5], [231.0, 62545.0], [230.0, 62582.0], [228.0, 62216.0], [224.0, 62163.0], [239.0, 62650.0], [237.0, 62291.0], [245.0, 62654.0], [244.0, 61902.0], [243.0, 62643.0], [242.0, 62685.0], [252.0, 62648.0], [250.0, 62337.0], [271.0, 62721.0], [269.0, 62596.0], [267.0, 62614.0], [266.0, 62686.0], [263.0, 62677.0], [258.0, 62709.0], [287.0, 62532.0], [286.0, 62400.0], [284.0, 62526.0], [281.0, 61789.0], [303.0, 62578.0], [288.0, 62276.0], [312.0, 62446.0], [310.0, 62256.0], [326.0, 62340.0], [323.0, 61727.0], [320.0, 62652.0], [343.0, 62098.0], [340.0, 62232.0], [365.0, 62459.0], [363.0, 62391.0], [361.0, 62500.0], [355.0, 62118.0], [383.0, 62586.0], [378.0, 62545.0], [376.0, 62559.0], [375.0, 62463.0], [369.0, 62667.0], [368.0, 61960.0], [398.0, 62472.0], [397.0, 61824.0], [394.0, 61487.0], [393.0, 62199.0], [390.0, 62312.0], [386.0, 62573.0], [413.0, 61768.0], [411.0, 61917.0], [409.0, 61922.0], [406.0, 61901.0], [403.0, 62595.0], [431.0, 61885.0], [424.0, 62289.0], [423.0, 62251.0], [422.0, 61753.0], [421.0, 62101.0], [418.0, 62534.5], [447.0, 62385.0], [445.0, 62190.0], [443.0, 61816.0], [436.0, 62500.0], [434.0, 62435.0], [433.0, 62413.0], [461.0, 62169.0], [455.0, 62484.5], [452.0, 61915.0], [450.0, 62167.0], [479.0, 61668.0], [476.0, 62072.0], [474.0, 61740.0], [471.0, 62433.0], [466.0, 61995.0], [494.0, 62434.0], [492.0, 62109.5], [488.0, 62212.0], [487.0, 62065.0], [484.0, 61865.0], [482.0, 61977.0], [480.0, 62470.0], [511.0, 61806.0], [505.0, 61492.0], [502.0, 62311.0], [498.0, 61948.5], [497.0, 62268.0], [543.0, 62364.0], [536.0, 61876.0], [535.0, 61514.0], [531.0, 61655.0], [526.0, 61872.0], [518.0, 61935.0], [516.0, 62267.0], [561.0, 61924.0], [570.0, 61639.0], [567.0, 61999.0], [563.0, 61529.0], [562.0, 61547.0], [559.0, 61998.0], [555.0, 61992.0], [553.0, 62632.0], [551.0, 62395.0], [549.0, 62519.0], [544.0, 62152.0], [604.0, 61656.0], [607.0, 61521.0], [601.0, 61536.0], [581.0, 61491.0], [578.0, 61543.0], [577.0, 62102.0], [576.0, 61936.0], [598.0, 61487.0], [597.0, 61822.0], [596.0, 61914.0], [592.0, 61609.0], [589.0, 61581.0], [588.0, 61659.0], [637.0, 62365.0], [638.0, 62038.0], [635.0, 62289.0], [634.0, 61544.0], [633.0, 62099.0], [615.0, 61993.0], [613.0, 62395.0], [611.0, 62110.0], [623.0, 61736.0], [620.0, 61813.0], [617.0, 61973.0], [631.0, 61738.0], [628.0, 61955.0], [627.0, 61585.0], [625.0, 62184.0], [670.0, 61535.0], [671.0, 62510.0], [668.0, 61597.0], [666.0, 62539.0], [665.0, 62240.0], [663.0, 62551.0], [658.0, 61578.0], [644.0, 61680.0], [640.0, 61784.0], [700.0, 62087.0], [702.0, 61734.0], [703.0, 61806.0], [701.0, 62380.0], [699.0, 61484.5], [697.0, 62456.0], [696.0, 62135.0], [682.0, 61455.0], [677.0, 61707.0], [675.0, 61584.0], [678.0, 62009.0], [691.0, 62392.0], [689.0, 62456.0], [729.0, 62054.0], [725.0, 61530.0], [722.0, 62589.0], [720.0, 61434.0], [717.0, 62236.0], [713.0, 61949.0], [711.0, 61857.0], [709.0, 62507.0], [707.0, 62468.0], [706.0, 62104.0], [766.0, 62195.0], [767.0, 61614.0], [764.0, 61505.0], [761.0, 62540.0], [759.0, 62330.0], [755.0, 61531.0], [754.0, 62597.0], [752.0, 62069.0], [751.0, 61955.0], [737.0, 61572.0], [741.0, 61649.0], [739.0, 61589.0], [749.0, 61420.0], [748.0, 61618.0], [794.0, 61611.0], [799.0, 61976.0], [796.0, 62399.0], [795.0, 61909.0], [793.0, 62003.0], [792.0, 61799.0], [787.0, 61632.0], [783.0, 61718.5], [770.0, 61908.0], [768.0, 61632.0], [775.0, 62001.0], [774.0, 61938.0], [781.0, 62134.0], [780.0, 61598.0], [825.0, 61521.0], [821.0, 61846.0], [818.0, 61399.0], [817.0, 62416.0], [814.0, 62200.0], [804.0, 61550.0], [801.0, 62076.0], [858.0, 62115.0], [861.0, 61930.0], [856.0, 62263.0], [838.0, 61943.0], [855.0, 62241.0], [854.0, 61745.0], [852.0, 62201.0], [848.0, 62252.5], [846.0, 61952.0], [843.0, 62502.0], [841.0, 61474.0], [840.0, 62357.0], [894.0, 61809.333333333336], [895.0, 62454.0], [890.0, 61444.0], [887.0, 62013.0], [884.0, 61604.0], [878.0, 62448.0], [877.0, 62210.0], [872.0, 61845.5], [870.0, 62189.0], [869.0, 61495.0], [926.0, 61932.25], [923.0, 61308.0], [918.0, 62048.0], [917.0, 61893.0], [914.0, 62011.0], [904.0, 62514.0], [898.0, 61505.0], [956.0, 61652.0], [955.0, 62249.0], [951.0, 62314.0], [946.0, 61473.5], [943.0, 62040.0], [941.0, 61929.0], [940.0, 61527.0], [938.0, 61856.333333333336], [929.0, 61559.0], [928.0, 61442.0], [990.0, 61787.0], [985.0, 61947.0], [981.0, 61359.0], [978.0, 62167.0], [972.0, 61659.0], [966.0, 61376.0], [960.0, 61962.0], [1021.0, 61421.0], [1022.0, 62460.0], [1017.0, 62078.0], [1013.0, 61761.0], [1010.0, 62396.0], [1003.0, 61984.0], [998.0, 62356.0], [996.0, 62447.0], [994.0, 62494.0], [1076.0, 62158.0], [1077.0, 62478.0], [1075.0, 61433.0], [1038.0, 61822.0], [1035.0, 61558.0], [1033.0, 62201.0], [1030.0, 62422.0], [1028.0, 62097.0], [1069.0, 61675.0], [1065.0, 61407.0], [1060.0, 61660.0], [1057.0, 61694.0], [1048.0, 61639.0], [1044.0, 62355.0], [1136.0, 61619.0], [1123.0, 61775.0], [1151.0, 62165.0], [1149.0, 62250.0], [1147.0, 61816.0], [1119.0, 61859.0], [1089.0, 61686.5], [1088.0, 62110.0], [1094.0, 62293.0], [1091.0, 61973.0], [1097.0, 62364.0], [1096.0, 61732.0], [1101.0, 61691.0], [1100.0, 61390.0], [1103.0, 62273.0], [1102.0, 61303.0], [1116.0, 61530.0], [1113.0, 62419.0], [1109.0, 61570.0], [1107.0, 61659.0], [1106.0, 61368.0], [1135.0, 61983.0], [1132.0, 61632.0], [1127.0, 62371.0], [1122.0, 61873.5], [1201.0, 62135.0], [1209.0, 61982.5], [1213.0, 61510.0], [1188.0, 61500.0], [1184.0, 62195.0], [1208.0, 62319.0], [1205.0, 61733.0], [1203.0, 62015.0], [1182.0, 61973.0], [1156.0, 61879.0], [1155.0, 61893.0], [1159.0, 62022.0], [1158.0, 62224.0], [1163.0, 62385.5], [1162.0, 61454.0], [1166.0, 62103.0], [1165.0, 62022.0], [1177.0, 62110.0], [1175.0, 61272.0], [1172.0, 61602.0], [1171.0, 61287.0], [1170.0, 61907.0], [1197.0, 62199.0], [1196.0, 61971.0], [1194.0, 61431.5], [1192.0, 61569.0], [1271.0, 61639.0], [1257.0, 62105.333333333336], [1276.0, 62358.0], [1278.0, 61656.0], [1252.0, 62057.0], [1251.0, 62442.0], [1275.0, 61757.0], [1264.0, 61524.0], [1231.0, 61990.0], [1225.0, 61295.0], [1224.0, 61667.0], [1218.0, 62254.0], [1217.0, 62490.0], [1216.0, 61662.0], [1245.0, 61347.0], [1243.0, 62006.0], [1241.0, 61806.0], [1235.0, 61840.5], [1234.0, 62486.0], [1233.0, 61588.0], [1232.0, 61446.0], [1262.0, 61780.0], [1261.0, 62271.0], [1260.0, 62370.0], [1332.0, 61508.0], [1319.0, 61646.0], [1339.0, 62173.0], [1340.0, 62364.0], [1313.0, 62484.0], [1333.0, 61984.0], [1331.0, 61795.0], [1292.0, 61713.0], [1289.0, 61835.0], [1288.0, 61583.0], [1281.0, 62271.0], [1280.0, 61713.0], [1311.0, 61943.0], [1307.0, 62091.0], [1304.0, 61325.0], [1298.0, 61776.0], [1296.0, 61629.0], [1327.0, 61873.0], [1326.0, 61639.0], [1324.0, 61849.0], [1394.0, 61674.0], [1402.0, 62056.0], [1406.0, 62046.0], [1376.0, 62105.0], [1380.0, 61243.0], [1378.0, 61877.0], [1397.0, 61247.0], [1396.0, 62476.0], [1398.0, 61613.0], [1373.0, 61553.0], [1344.0, 61561.0], [1350.0, 61405.0], [1346.0, 61309.0], [1355.0, 61931.0], [1352.0, 61923.0], [1358.0, 61598.0], [1357.0, 61989.0], [1372.0, 61241.0], [1370.0, 61966.0], [1369.0, 61246.0], [1366.0, 62383.0], [1361.0, 61621.0], [1390.0, 61646.333333333336], [1388.0, 62383.0], [1384.0, 61677.0], [1383.0, 61340.0], [1469.0, 61986.0], [1446.0, 61742.0], [1471.0, 61547.0], [1440.0, 62418.0], [1445.0, 61848.0], [1443.0, 61766.0], [1465.0, 61602.5], [1464.0, 61558.0], [1457.0, 61781.0], [1422.0, 61786.0], [1420.0, 62189.5], [1419.0, 62304.0], [1418.0, 61977.0], [1415.0, 61804.0], [1410.0, 61862.0], [1409.0, 62301.0], [1438.0, 61487.0], [1432.0, 61729.0], [1428.0, 61868.0], [1425.0, 61728.0], [1453.0, 61843.0], [1451.0, 62345.0], [1448.0, 62016.0], [1508.0, 62123.0], [1535.0, 62353.0], [1533.0, 61699.0], [1526.0, 61685.333333333336], [1520.0, 61957.0], [1503.0, 62156.0], [1480.0, 61875.0], [1477.0, 62384.0], [1486.0, 61774.5], [1485.0, 62042.5], [1502.0, 61538.0], [1501.0, 61946.0], [1500.0, 62438.0], [1496.0, 61981.0], [1493.0, 62025.666666666664], [1516.0, 61696.0], [1511.0, 61809.0], [1510.0, 62161.0], [1506.0, 62030.0], [1505.0, 61402.0], [1581.0, 61846.0], [1578.0, 62281.0], [1559.0, 61558.0], [1555.0, 62146.0], [1554.0, 61561.0], [1552.0, 62397.0], [1548.0, 61751.0], [1547.0, 61933.0], [1543.0, 61908.0], [1540.0, 61714.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[835.9999999999995, 61976.095161290315]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[41.0, 62176.0], [48.0, 62622.0], [50.0, 62410.0], [54.0, 62234.0], [74.0, 61844.0], [87.0, 62424.0], [84.0, 61867.0], [95.0, 62541.0], [92.0, 62150.0], [98.0, 62242.0], [124.0, 62118.0], [135.0, 61865.0], [131.0, 61874.0], [151.0, 61877.0], [148.0, 62012.0], [145.0, 61842.0], [160.0, 61977.0], [181.0, 62022.0], [191.0, 61981.0], [188.0, 62121.5], [197.0, 61882.0], [201.0, 62427.0], [214.0, 62416.0], [223.0, 62375.0], [218.0, 62610.0], [238.0, 62001.0], [232.0, 62560.0], [246.0, 62641.0], [241.0, 62240.0], [252.0, 62431.0], [251.0, 62455.0], [260.0, 62548.0], [258.0, 62085.0], [286.0, 62000.0], [284.0, 62088.0], [281.0, 62304.0], [279.0, 62521.0], [277.0, 62556.0], [275.0, 62613.0], [274.0, 62668.0], [273.0, 62273.5], [296.0, 62394.0], [294.0, 61837.0], [292.0, 62032.0], [314.0, 62454.0], [311.0, 62176.0], [310.0, 62000.0], [308.0, 61994.0], [332.0, 61765.0], [328.0, 62180.0], [327.0, 61916.0], [326.0, 62378.0], [325.0, 61955.0], [321.0, 62168.5], [349.0, 62499.0], [346.0, 62448.0], [345.0, 62031.0], [340.0, 62232.0], [336.0, 62182.0], [367.0, 62159.0], [366.0, 62364.0], [360.0, 62271.0], [358.0, 62302.0], [357.0, 61924.0], [354.0, 62390.5], [352.0, 62192.0], [381.0, 61972.0], [376.0, 62011.0], [375.0, 61936.0], [373.0, 62642.0], [399.0, 62224.0], [390.0, 62261.0], [385.0, 62475.0], [413.0, 62288.0], [407.0, 62017.0], [404.0, 62118.0], [401.0, 62099.5], [429.0, 62100.0], [428.0, 61962.0], [425.0, 62542.0], [421.0, 62449.0], [419.0, 62018.0], [416.0, 62264.0], [439.0, 62334.5], [438.0, 62273.0], [463.0, 62618.0], [459.0, 62144.0], [478.0, 61905.0], [475.0, 61821.0], [474.0, 62622.0], [469.0, 62194.0], [465.0, 61864.0], [505.0, 62112.0], [503.0, 61872.0], [500.0, 62352.0], [540.0, 62254.0], [535.0, 62585.0], [532.0, 61766.0], [531.0, 61796.0], [530.0, 61742.0], [527.0, 62177.0], [524.0, 61791.0], [520.0, 61785.0], [574.0, 62061.0], [556.0, 62627.0], [555.0, 62366.0], [549.0, 62457.0], [544.0, 61882.0], [585.0, 61724.0], [639.0, 62071.0], [611.0, 62047.0], [665.0, 62484.0], [662.0, 62111.0], [654.0, 62407.0], [649.0, 61989.0], [641.0, 62521.0], [695.0, 62290.0], [691.0, 61847.0], [690.0, 62268.0], [686.0, 62394.0], [685.0, 62230.0], [681.0, 61685.0], [721.0, 62160.0], [713.0, 61808.0], [710.0, 61823.0], [762.0, 62032.0], [767.0, 62067.0], [766.0, 62234.5], [764.0, 62539.0], [761.0, 62248.0], [757.0, 62533.0], [750.0, 62343.5], [744.0, 61834.0], [742.0, 62503.0], [737.0, 62486.0], [797.0, 61786.0], [790.0, 61976.0], [789.0, 62161.0], [780.0, 61683.0], [778.0, 61729.0], [772.0, 62120.0], [831.0, 62206.0], [825.0, 61599.0], [824.0, 62224.0], [819.0, 61743.0], [809.0, 62238.0], [807.0, 61920.0], [847.0, 61667.0], [843.0, 61569.0], [867.0, 62121.0], [864.0, 61687.0], [926.0, 62220.0], [918.0, 62296.0], [916.0, 61994.0], [912.0, 61637.0], [910.0, 62346.0], [909.0, 62317.0], [907.0, 61569.0], [899.0, 62148.0], [896.0, 61777.0], [953.0, 62183.0], [952.0, 62435.0], [950.0, 61583.0], [946.0, 62154.0], [944.0, 61701.0], [943.0, 61950.0], [937.0, 62465.0], [935.0, 62002.5], [929.0, 62049.0], [980.0, 62019.5], [971.0, 62265.0], [969.0, 61746.0], [966.0, 62259.0], [963.0, 62236.0], [1023.0, 62311.0], [1018.0, 62315.5], [1010.0, 61739.0], [1007.0, 62273.0], [1006.0, 62243.0], [1001.0, 61869.0], [996.0, 61584.0], [1085.0, 61623.0], [1086.0, 61695.0], [1083.0, 62295.0], [1075.0, 62315.0], [1073.0, 61669.0], [1031.0, 62055.5], [1053.0, 61719.0], [1044.0, 61771.0], [1070.0, 61739.0], [1061.0, 61596.0], [1060.0, 62217.0], [1057.0, 61590.0], [1146.0, 62390.0], [1150.0, 62114.5], [1144.0, 62213.0], [1143.0, 62286.0], [1141.0, 61746.0], [1136.0, 62010.0], [1094.0, 62031.0], [1132.0, 62206.0], [1128.0, 61820.0], [1127.0, 61880.0], [1188.0, 62336.0], [1207.0, 61900.0], [1194.0, 61812.0], [1192.0, 61564.0], [1190.0, 61853.0], [1185.0, 62410.0], [1183.0, 62187.0], [1154.0, 61795.0], [1179.0, 62115.333333333336], [1177.0, 62059.0], [1169.0, 61937.0], [1228.0, 62063.0], [1276.0, 62169.0], [1272.0, 62037.0], [1254.0, 61739.0], [1252.0, 62120.0], [1248.0, 62010.0], [1244.0, 61515.0], [1240.0, 62002.0], [1234.0, 61937.0], [1222.0, 62020.5], [1216.0, 62089.0], [1327.0, 61554.0], [1323.0, 61885.0], [1320.0, 62338.0], [1296.0, 62089.0], [1291.0, 62182.0], [1290.0, 61939.0], [1283.0, 62033.0], [1282.0, 62295.0], [1406.0, 61911.0], [1399.0, 62412.0], [1355.0, 61685.0], [1352.0, 61998.0], [1346.0, 61793.0], [1389.0, 61502.0], [1388.0, 61820.0], [1386.0, 61727.0], [1384.0, 62238.0], [1373.0, 62232.0], [1365.0, 61636.0], [1363.0, 62349.0], [1460.0, 62200.0], [1463.0, 62184.0], [1457.0, 62245.0], [1456.0, 61987.0], [1449.0, 61859.0], [1448.0, 61736.0], [1447.0, 62045.0], [1433.0, 61944.0], [1423.0, 62320.0], [1415.0, 61776.5], [1410.0, 62278.0], [1425.0, 61552.0], [1534.0, 62048.0], [1529.0, 61766.0], [1522.0, 61677.0], [1523.0, 62343.0], [1514.0, 61771.0], [1511.0, 61843.0], [1497.0, 61523.0], [1491.0, 62353.0], [1480.0, 62179.0], [1581.0, 61911.0], [1580.0, 62229.0], [1579.0, 62361.0], [1577.0, 62275.0], [1555.0, 61817.0], [1554.0, 62022.0], [1543.0, 62083.0], [1542.0, 61690.0], [1537.0, 61582.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[799.9290322580644, 62088.44193548389]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[2.0, 64925.0], [9.0, 65078.0], [12.0, 64904.166666666664], [3.0, 64699.5], [13.0, 65294.0], [15.0, 65040.5], [16.0, 65167.0], [4.0, 64638.0], [17.0, 65037.0], [18.0, 64782.0], [20.0, 64511.0], [22.0, 65339.5], [6.0, 64541.0], [27.0, 65325.0], [31.0, 64984.875]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[17.806451612903224, 64944.25806451613]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[32.0, 62483.0], [39.0, 62619.333333333336], [38.0, 61909.0], [42.0, 62317.0], [45.0, 62102.0], [47.0, 62584.0], [52.0, 61848.0], [59.0, 62207.0], [58.0, 62708.0], [67.0, 61978.0], [66.0, 61662.5], [64.0, 62338.0], [71.0, 62350.0], [74.0, 62647.0], [78.0, 62448.0], [81.0, 62322.5], [86.0, 61919.0], [94.0, 61846.0], [93.0, 62432.0], [92.0, 61940.0], [99.0, 61793.0], [97.0, 61885.0], [96.0, 62258.0], [107.0, 62142.0], [104.0, 62347.0], [111.0, 61779.0], [108.0, 62059.0], [119.0, 62396.0], [118.0, 61991.0], [117.0, 61657.0], [122.0, 62613.0], [126.0, 62586.0], [124.0, 61885.0], [134.0, 62672.0], [132.0, 61806.0], [129.0, 62523.0], [128.0, 62714.0], [143.0, 62434.0], [142.0, 61889.0], [138.0, 62057.0], [137.0, 62103.0], [136.0, 61865.0], [151.0, 62145.0], [150.0, 62123.0], [147.0, 62148.0], [158.0, 62165.0], [155.0, 62349.0], [166.0, 61603.0], [165.0, 62062.0], [173.0, 62194.0], [174.0, 61710.0], [171.0, 61914.0], [169.0, 61944.0], [179.0, 62718.0], [178.0, 61931.0], [190.0, 62011.0], [198.0, 62195.0], [195.0, 62204.0], [193.0, 62240.0], [206.0, 62411.5], [202.0, 62077.0], [212.0, 62790.0], [209.0, 62097.0], [208.0, 62473.0], [222.0, 62756.0], [219.0, 62100.0], [217.0, 62287.0], [228.0, 62494.0], [239.0, 62248.0], [235.0, 61681.0], [234.0, 62288.0], [233.0, 62248.0], [247.0, 62409.0], [241.0, 62597.0], [253.0, 62396.0], [251.0, 61555.0], [271.0, 61812.0], [269.0, 62668.0], [266.0, 62742.0], [264.0, 61639.0], [262.0, 62481.0], [261.0, 61783.0], [259.0, 62643.0], [256.0, 62604.0], [286.0, 62030.0], [278.0, 62678.0], [302.0, 61854.0], [299.0, 62272.0], [298.0, 62714.5], [295.0, 62654.0], [294.0, 62593.0], [292.0, 62701.0], [290.0, 62426.0], [318.0, 61819.5], [315.0, 62766.0], [314.0, 62208.0], [310.0, 62265.0], [305.0, 62222.5], [304.0, 62139.0], [334.0, 62022.0], [331.0, 62558.5], [330.0, 61728.0], [322.0, 61653.0], [320.0, 61945.0], [351.0, 61953.0], [350.0, 62569.0], [349.0, 62325.0], [347.0, 62061.0], [342.0, 62699.0], [341.0, 62678.0], [338.0, 61889.5], [336.0, 62279.0], [366.0, 61821.0], [365.0, 62365.0], [360.0, 62513.0], [357.0, 62444.0], [382.0, 62351.0], [379.0, 62119.0], [378.0, 62317.0], [373.0, 62356.0], [370.0, 62346.0], [396.0, 61728.0], [392.0, 62284.0], [387.0, 62416.0], [384.0, 62444.0], [412.0, 62474.0], [406.0, 62699.0], [403.0, 62215.0], [426.0, 62585.0], [416.0, 62078.0], [447.0, 62705.0], [445.0, 62320.0], [443.0, 61872.0], [442.0, 61902.0], [441.0, 62637.0], [439.0, 62636.0], [433.0, 62755.0], [462.0, 61954.0], [461.0, 61810.0], [459.0, 62698.0], [458.0, 61946.0], [455.0, 61753.0], [453.0, 61803.0], [450.0, 62086.0], [472.0, 61536.0], [470.0, 62530.0], [468.0, 61871.0], [465.0, 61607.0], [494.0, 61996.0], [491.0, 61638.0], [489.0, 62124.0], [487.0, 62323.0], [485.0, 62159.0], [484.0, 62213.0], [481.0, 61930.0], [480.0, 62426.0], [511.0, 62318.0], [506.0, 61908.0], [501.0, 61694.0], [498.0, 62007.0], [519.0, 61728.0], [540.0, 61620.0], [538.0, 61874.0], [537.0, 62280.0], [533.0, 62425.5], [525.0, 62367.5], [522.0, 62065.0], [518.0, 62127.0], [515.0, 61999.666666666664], [514.0, 61598.0], [513.0, 61996.0], [572.0, 62616.0], [574.0, 61618.0], [570.0, 62303.0], [551.0, 61817.0], [549.0, 62059.0], [547.0, 62104.0], [545.0, 62399.0], [567.0, 62125.0], [566.0, 62083.0], [562.0, 62261.0], [559.0, 61680.0], [558.0, 61530.0], [553.0, 61996.0], [606.0, 62168.0], [605.0, 61984.666666666664], [581.0, 61863.0], [579.0, 62106.0], [578.0, 62499.0], [576.0, 62126.0], [599.0, 62239.0], [598.0, 61967.0], [596.0, 62434.0], [595.0, 61650.0], [592.0, 62116.0], [590.0, 61902.0], [588.0, 62415.0], [585.0, 62169.0], [615.0, 62033.5], [626.0, 62174.0], [636.0, 62471.0], [631.0, 61607.0], [623.0, 61712.0], [621.0, 61562.0], [620.0, 62483.0], [618.0, 62085.0], [612.0, 61931.0], [608.0, 62118.0], [654.0, 62290.0], [669.0, 61808.0], [664.0, 62140.0], [645.0, 62121.0], [660.0, 62529.5], [659.0, 61802.0], [658.0, 62223.0], [652.0, 61622.0], [651.0, 62159.5], [649.0, 62007.0], [648.0, 61911.0], [689.0, 61727.0], [694.0, 62679.0], [693.0, 62078.0], [692.0, 62266.0], [686.0, 61713.0], [672.0, 62396.0], [675.0, 62086.0], [673.0, 61680.0], [683.0, 61802.0], [681.0, 62029.0], [679.0, 61651.0], [677.0, 61786.0], [709.0, 62313.0], [729.0, 62564.0], [728.0, 61994.5], [725.0, 61661.0], [719.0, 61689.0], [717.0, 62102.0], [715.0, 62521.0], [714.0, 61594.0], [705.0, 61940.0], [704.0, 61484.0], [764.0, 61726.0], [759.0, 61854.0], [756.0, 61747.0], [754.0, 62007.0], [752.0, 62301.0], [748.0, 62309.333333333336], [744.0, 61827.0], [740.0, 61856.0], [792.0, 61553.0], [787.0, 62495.0], [785.0, 62131.0], [777.0, 61781.0], [774.0, 61501.0], [773.0, 61952.0], [828.0, 61853.0], [829.0, 61443.0], [827.0, 61549.0], [826.0, 61480.0], [825.0, 61953.0], [804.0, 61689.0], [800.0, 61560.0], [809.0, 62119.0], [808.0, 61893.0], [823.0, 61644.0], [822.0, 62506.5], [820.0, 61879.0], [819.0, 62480.5], [849.0, 61583.0], [862.0, 61979.0], [853.0, 61609.0], [852.0, 62139.0], [850.0, 62137.0], [841.0, 61858.0], [840.0, 61416.0], [839.0, 62512.5], [834.0, 62205.0], [832.0, 61497.0], [892.0, 61468.0], [878.0, 62502.0], [875.0, 61827.5], [872.0, 61883.0], [871.0, 62527.0], [868.0, 62004.5], [865.0, 61748.0], [902.0, 62138.0], [926.0, 62362.0], [920.0, 61750.0], [918.0, 62478.0], [916.0, 61663.0], [914.0, 62049.0], [909.0, 61827.0], [896.0, 61427.0], [900.0, 61458.0], [898.0, 62137.0], [957.0, 62210.0], [959.0, 62502.0], [956.0, 62203.0], [953.0, 62438.0], [950.0, 61433.0], [945.0, 61822.0], [944.0, 61940.0], [943.0, 62344.5], [935.0, 62357.0], [939.0, 61631.0], [937.0, 61408.0], [936.0, 62102.0], [989.0, 61559.0], [990.0, 62153.0], [987.0, 62304.0], [986.0, 62550.0], [980.0, 61770.0], [979.0, 62367.0], [978.0, 62042.0], [974.0, 62501.0], [967.0, 62121.0], [963.0, 61624.0], [960.0, 62106.0], [971.0, 61695.0], [1016.0, 61623.5], [1013.0, 62040.0], [1012.0, 62421.0], [1010.0, 61681.0], [1006.0, 62300.0], [1003.0, 61772.0], [1002.0, 61497.0], [1001.0, 61536.0], [999.0, 61444.0], [993.0, 62083.0], [1085.0, 61559.0], [1087.0, 61756.0], [1082.0, 61527.0], [1083.0, 62463.0], [1079.0, 62306.0], [1074.0, 61962.0], [1055.0, 62473.0], [1030.0, 61665.0], [1026.0, 61869.0], [1035.0, 62269.0], [1034.0, 61753.0], [1052.0, 61678.0], [1048.0, 61437.0], [1044.0, 62199.5], [1042.0, 61911.0], [1070.0, 62074.5], [1067.0, 62564.0], [1059.0, 62444.0], [1149.0, 62189.0], [1151.0, 61361.0], [1127.0, 62300.0], [1120.0, 61413.0], [1146.0, 61998.0], [1141.0, 62398.5], [1140.0, 62316.0], [1139.0, 61535.0], [1116.0, 62333.0], [1103.0, 62453.0], [1099.0, 62115.0], [1114.0, 62106.0], [1113.0, 61853.0], [1111.0, 62027.0], [1110.0, 62018.0], [1104.0, 62471.0], [1134.0, 61819.0], [1132.0, 62076.0], [1130.0, 62096.0], [1128.0, 61473.0], [1209.0, 61470.0], [1191.0, 62344.0], [1215.0, 62121.0], [1186.0, 61529.0], [1190.0, 61958.5], [1188.0, 62172.0], [1208.0, 62325.0], [1206.0, 62013.0], [1201.0, 61620.5], [1166.0, 62537.0], [1164.0, 62425.0], [1160.0, 62160.0], [1158.0, 62323.0], [1152.0, 61646.0], [1183.0, 62051.0], [1182.0, 62472.0], [1176.0, 62337.0], [1175.0, 61790.0], [1173.0, 62041.0], [1171.0, 62339.0], [1170.0, 61816.0], [1168.0, 62316.0], [1197.0, 61952.5], [1196.0, 62273.0], [1194.0, 61973.0], [1269.0, 62491.0], [1273.0, 62007.0], [1267.0, 62124.0], [1266.0, 62321.0], [1264.0, 61960.0], [1225.0, 61938.0], [1224.0, 62245.0], [1222.0, 61671.0], [1217.0, 61498.0], [1262.0, 61654.0], [1254.0, 61349.0], [1249.0, 62010.0], [1247.0, 61610.0], [1245.0, 61788.666666666664], [1239.0, 62211.0], [1236.0, 61609.0], [1235.0, 61849.0], [1313.0, 61798.0], [1320.0, 62369.0], [1338.0, 61745.0], [1312.0, 61637.0], [1314.0, 62058.0], [1336.0, 61877.75], [1333.0, 61994.0], [1330.0, 62380.0], [1310.0, 62302.0], [1281.0, 62511.0], [1285.0, 62088.5], [1283.0, 61614.0], [1287.0, 62212.0], [1286.0, 61610.0], [1295.0, 62548.0], [1294.0, 62193.0], [1306.0, 61968.0], [1305.0, 62490.0], [1304.0, 61328.0], [1301.0, 61799.0], [1300.0, 62469.0], [1298.0, 62273.0], [1327.0, 61377.0], [1324.0, 62031.0], [1323.0, 61502.0], [1319.0, 62002.0], [1318.0, 61784.0], [1403.0, 62354.0], [1405.0, 61764.0], [1398.0, 61888.0], [1396.0, 61751.0], [1393.0, 62240.0], [1356.0, 61365.0], [1349.0, 61408.0], [1348.0, 62327.0], [1347.0, 62227.5], [1344.0, 61677.0], [1387.0, 62062.0], [1385.0, 62486.0], [1380.0, 61790.0], [1372.0, 62364.0], [1370.0, 61819.0], [1368.0, 62188.0], [1366.0, 61324.0], [1444.0, 61510.0], [1471.0, 62532.0], [1460.0, 62227.0], [1457.0, 62197.5], [1422.0, 61324.0], [1412.0, 61953.0], [1453.0, 61869.0], [1449.0, 61674.0], [1446.0, 61522.0], [1442.0, 62158.0], [1437.0, 61523.0], [1434.0, 62350.0], [1432.0, 62231.0], [1428.0, 61761.0], [1425.0, 61730.0], [1498.0, 61548.0], [1529.0, 61894.0], [1525.0, 62234.0], [1485.0, 62376.0], [1484.0, 61762.0], [1477.0, 62316.0], [1475.0, 61442.0], [1474.0, 61733.0], [1473.0, 61623.0], [1518.0, 61604.0], [1513.0, 61609.0], [1511.0, 61892.0], [1495.0, 61733.0], [1494.0, 62199.0], [1490.0, 62158.0], [1488.0, 61558.0], [1581.0, 61879.92307692308], [1571.0, 61844.0], [1565.0, 61847.0], [1561.0, 62087.0], [1553.0, 61873.0], [1550.0, 61539.0], [1548.0, 61689.0], [1537.0, 61686.0]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[790.7483870967748, 62050.729032258125]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1581.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61940024E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940024E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 61976.095161290315, "minX": 1.61940024E12, "maxY": 64944.25806451613, "series": [{"data": [[1.61940024E12, 61976.095161290315]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940024E12, 62088.44193548389]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940024E12, 64944.25806451613]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940024E12, 62050.729032258125]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940024E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940024E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940024E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940024E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940024E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940024E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 61241.0, "minX": 1.61940024E12, "maxY": 65417.0, "series": [{"data": [[1.61940024E12, 65417.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61940024E12, 62530.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61940024E12, 64935.560000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61940024E12, 62650.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61940024E12, 61241.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61940024E12, 62031.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940024E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 62019.5, "minX": 31.0, "maxY": 64928.0, "series": [{"data": [[1550.0, 62019.5], [31.0, 64928.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1550.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 31.0, "maxY": 4.9E-324, "series": [{"data": [[1550.0, 0.0], [31.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1550.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 26.35, "minX": 1.61940018E12, "maxY": 26.35, "series": [{"data": [[1.61940018E12, 26.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940018E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 26.35, "minX": 1.61940024E12, "maxY": 26.35, "series": [{"data": [[1.61940024E12, 26.35]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940024E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5166666666666667, "minX": 1.61940024E12, "maxY": 10.333333333333334, "series": [{"data": [[1.61940024E12, 0.5166666666666667]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61940024E12, 10.333333333333334]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61940024E12, 5.166666666666667]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61940024E12, 10.333333333333334]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940024E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 26.35, "minX": 1.61940024E12, "maxY": 26.35, "series": [{"data": [[1.61940024E12, 26.35]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940024E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

