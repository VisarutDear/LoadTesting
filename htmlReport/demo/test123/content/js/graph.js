/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 59800.0, "minX": 0.0, "maxY": 64715.0, "series": [{"data": [[0.0, 60474.0], [0.1, 60474.0], [0.2, 60477.0], [0.3, 60477.0], [0.4, 60489.0], [0.5, 60493.0], [0.6, 60493.0], [0.7, 60495.0], [0.8, 60495.0], [0.9, 60495.0], [1.0, 60499.0], [1.1, 60499.0], [1.2, 60508.0], [1.3, 60508.0], [1.4, 60511.0], [1.5, 60511.0], [1.6, 60517.0], [1.7, 60517.0], [1.8, 60517.0], [1.9, 60520.0], [2.0, 60525.0], [2.1, 60525.0], [2.2, 60525.0], [2.3, 60525.0], [2.4, 60525.0], [2.5, 60527.0], [2.6, 60527.0], [2.7, 60533.0], [2.8, 60533.0], [2.9, 60537.0], [3.0, 60538.0], [3.1, 60538.0], [3.2, 60539.0], [3.3, 60539.0], [3.4, 60540.0], [3.5, 60540.0], [3.6, 60540.0], [3.7, 60541.0], [3.8, 60541.0], [3.9, 60541.0], [4.0, 60541.0], [4.1, 60541.0], [4.2, 60546.0], [4.3, 60546.0], [4.4, 60551.0], [4.5, 60555.0], [4.6, 60555.0], [4.7, 60556.0], [4.8, 60556.0], [4.9, 60557.0], [5.0, 60557.0], [5.1, 60565.0], [5.2, 60566.0], [5.3, 60566.0], [5.4, 60567.0], [5.5, 60567.0], [5.6, 60573.0], [5.7, 60574.0], [5.8, 60574.0], [5.9, 60575.0], [6.0, 60575.0], [6.1, 60577.0], [6.2, 60580.0], [6.3, 60580.0], [6.4, 60588.0], [6.5, 60588.0], [6.6, 60588.0], [6.7, 60591.0], [6.8, 60591.0], [6.9, 60591.0], [7.0, 60591.0], [7.1, 60594.0], [7.2, 60595.0], [7.3, 60595.0], [7.4, 60596.0], [7.5, 60596.0], [7.6, 60596.0], [7.7, 60608.0], [7.8, 60608.0], [7.9, 60610.0], [8.0, 60610.0], [8.1, 60612.0], [8.2, 60615.0], [8.3, 60615.0], [8.4, 60616.0], [8.5, 60616.0], [8.6, 60617.0], [8.7, 60618.0], [8.8, 60618.0], [8.9, 60621.0], [9.0, 60622.0], [9.1, 60622.0], [9.2, 60623.0], [9.3, 60623.0], [9.4, 60625.0], [9.5, 60625.0], [9.6, 60625.0], [9.7, 60626.0], [9.8, 60626.0], [9.9, 60627.0], [10.0, 60630.0], [10.1, 60630.0], [10.2, 60634.0], [10.3, 60634.0], [10.4, 60638.0], [10.5, 60638.0], [10.6, 60638.0], [10.7, 60641.0], [10.8, 60641.0], [10.9, 60644.0], [11.0, 60648.0], [11.1, 60648.0], [11.2, 60650.0], [11.3, 60650.0], [11.4, 60651.0], [11.5, 60656.0], [11.6, 60656.0], [11.7, 60659.0], [11.8, 60659.0], [11.9, 60660.0], [12.0, 60663.0], [12.1, 60663.0], [12.2, 60665.0], [12.3, 60665.0], [12.4, 60666.0], [12.5, 60666.0], [12.6, 60666.0], [12.7, 60670.0], [12.8, 60670.0], [12.9, 60672.0], [13.0, 60676.0], [13.1, 60676.0], [13.2, 60677.0], [13.3, 60677.0], [13.4, 60681.0], [13.5, 60685.0], [13.6, 60685.0], [13.7, 60686.0], [13.8, 60686.0], [13.9, 60687.0], [14.0, 60691.0], [14.1, 60691.0], [14.2, 60691.0], [14.3, 60691.0], [14.4, 60691.0], [14.5, 60695.0], [14.6, 60695.0], [14.7, 60695.0], [14.8, 60695.0], [14.9, 60696.0], [15.0, 60696.0], [15.1, 60696.0], [15.2, 60699.0], [15.3, 60699.0], [15.4, 60709.0], [15.5, 60709.0], [15.6, 60709.0], [15.7, 60710.0], [15.8, 60710.0], [15.9, 60712.0], [16.0, 60714.0], [16.1, 60714.0], [16.2, 60716.0], [16.3, 60716.0], [16.4, 60718.0], [16.5, 60720.0], [16.6, 60720.0], [16.7, 60721.0], [16.8, 60721.0], [16.9, 60721.0], [17.0, 60725.0], [17.1, 60725.0], [17.2, 60726.0], [17.3, 60726.0], [17.4, 60726.0], [17.5, 60733.0], [17.6, 60733.0], [17.7, 60733.0], [17.8, 60733.0], [17.9, 60733.0], [18.0, 60735.0], [18.1, 60735.0], [18.2, 60736.0], [18.3, 60736.0], [18.4, 60740.0], [18.5, 60741.0], [18.6, 60741.0], [18.7, 60743.0], [18.8, 60743.0], [18.9, 60744.0], [19.0, 60748.0], [19.1, 60748.0], [19.2, 60749.0], [19.3, 60749.0], [19.4, 60751.0], [19.5, 60752.0], [19.6, 60752.0], [19.7, 60753.0], [19.8, 60753.0], [19.9, 60754.0], [20.0, 60754.0], [20.1, 60755.0], [20.2, 60760.0], [20.3, 60760.0], [20.4, 60765.0], [20.5, 60765.0], [20.6, 60767.0], [20.7, 60770.0], [20.8, 60770.0], [20.9, 60773.0], [21.0, 60773.0], [21.1, 60774.0], [21.2, 60776.0], [21.3, 60776.0], [21.4, 60776.0], [21.5, 60776.0], [21.6, 60776.0], [21.7, 60783.0], [21.8, 60783.0], [21.9, 60783.0], [22.0, 60783.0], [22.1, 60785.0], [22.2, 60786.0], [22.3, 60786.0], [22.4, 60787.0], [22.5, 60787.0], [22.6, 60789.0], [22.7, 60791.0], [22.8, 60791.0], [22.9, 60792.0], [23.0, 60792.0], [23.1, 60794.0], [23.2, 60794.0], [23.3, 60794.0], [23.4, 60800.0], [23.5, 60800.0], [23.6, 60803.0], [23.7, 60807.0], [23.8, 60807.0], [23.9, 60808.0], [24.0, 60808.0], [24.1, 60809.0], [24.2, 60812.0], [24.3, 60812.0], [24.4, 60815.0], [24.5, 60815.0], [24.6, 60817.0], [24.7, 60817.0], [24.8, 60817.0], [24.9, 60818.0], [25.0, 60818.0], [25.1, 60820.0], [25.2, 60823.0], [25.3, 60823.0], [25.4, 60823.0], [25.5, 60823.0], [25.6, 60826.0], [25.7, 60834.0], [25.8, 60834.0], [25.9, 60836.0], [26.0, 60836.0], [26.1, 60837.0], [26.2, 60840.0], [26.3, 60840.0], [26.4, 60840.0], [26.5, 60840.0], [26.6, 60841.0], [26.7, 60841.0], [26.8, 60841.0], [26.9, 60843.0], [27.0, 60843.0], [27.1, 60844.0], [27.2, 60847.0], [27.3, 60847.0], [27.4, 60849.0], [27.5, 60849.0], [27.6, 60853.0], [27.7, 60858.0], [27.8, 60858.0], [27.9, 60862.0], [28.0, 60862.0], [28.1, 60865.0], [28.2, 60866.0], [28.3, 60866.0], [28.4, 60866.0], [28.5, 60866.0], [28.6, 60867.0], [28.7, 60868.0], [28.8, 60868.0], [28.9, 60869.0], [29.0, 60869.0], [29.1, 60870.0], [29.2, 60873.0], [29.3, 60873.0], [29.4, 60875.0], [29.5, 60875.0], [29.6, 60875.0], [29.7, 60876.0], [29.8, 60876.0], [29.9, 60876.0], [30.0, 60876.0], [30.1, 60878.0], [30.2, 60879.0], [30.3, 60879.0], [30.4, 60886.0], [30.5, 60886.0], [30.6, 60887.0], [30.7, 60887.0], [30.8, 60887.0], [30.9, 60889.0], [31.0, 60889.0], [31.1, 60891.0], [31.2, 60892.0], [31.3, 60892.0], [31.4, 60894.0], [31.5, 60894.0], [31.6, 60895.0], [31.7, 60900.0], [31.8, 60900.0], [31.9, 60901.0], [32.0, 60901.0], [32.1, 60904.0], [32.2, 60907.0], [32.3, 60907.0], [32.4, 60912.0], [32.5, 60912.0], [32.6, 60913.0], [32.7, 60915.0], [32.8, 60915.0], [32.9, 60916.0], [33.0, 60916.0], [33.1, 60917.0], [33.2, 60919.0], [33.3, 60919.0], [33.4, 60920.0], [33.5, 60920.0], [33.6, 60923.0], [33.7, 60923.0], [33.8, 60923.0], [33.9, 60924.0], [34.0, 60924.0], [34.1, 60924.0], [34.2, 60925.0], [34.3, 60925.0], [34.4, 60931.0], [34.5, 60931.0], [34.6, 60935.0], [34.7, 60937.0], [34.8, 60937.0], [34.9, 60937.0], [35.0, 60937.0], [35.1, 60940.0], [35.2, 60940.0], [35.3, 60940.0], [35.4, 60945.0], [35.5, 60945.0], [35.6, 60947.0], [35.7, 60949.0], [35.8, 60949.0], [35.9, 60949.0], [36.0, 60949.0], [36.1, 60954.0], [36.2, 60959.0], [36.3, 60959.0], [36.4, 60959.0], [36.5, 60959.0], [36.6, 60959.0], [36.7, 60963.0], [36.8, 60963.0], [36.9, 60964.0], [37.0, 60964.0], [37.1, 60966.0], [37.2, 60966.0], [37.3, 60966.0], [37.4, 60968.0], [37.5, 60968.0], [37.6, 60968.0], [37.7, 60971.0], [37.8, 60971.0], [37.9, 60971.0], [38.0, 60971.0], [38.1, 60973.0], [38.2, 60975.0], [38.3, 60975.0], [38.4, 60977.0], [38.5, 60977.0], [38.6, 60978.0], [38.7, 60983.0], [38.8, 60983.0], [38.9, 60984.0], [39.0, 60984.0], [39.1, 60984.0], [39.2, 60987.0], [39.3, 60987.0], [39.4, 60989.0], [39.5, 60989.0], [39.6, 60990.0], [39.7, 60993.0], [39.8, 60993.0], [39.9, 60993.0], [40.0, 60993.0], [40.1, 60993.0], [40.2, 60994.0], [40.3, 60994.0], [40.4, 60999.0], [40.5, 60999.0], [40.6, 61005.0], [40.7, 61005.0], [40.8, 61005.0], [40.9, 61011.0], [41.0, 61011.0], [41.1, 61013.0], [41.2, 61015.0], [41.3, 61015.0], [41.4, 61016.0], [41.5, 61017.0], [41.6, 61017.0], [41.7, 61020.0], [41.8, 61020.0], [41.9, 61020.0], [42.0, 61023.0], [42.1, 61023.0], [42.2, 61024.0], [42.3, 61024.0], [42.4, 61025.0], [42.5, 61027.0], [42.6, 61027.0], [42.7, 61027.0], [42.8, 61027.0], [42.9, 61030.0], [43.0, 61033.0], [43.1, 61033.0], [43.2, 61034.0], [43.3, 61034.0], [43.4, 61037.0], [43.5, 61038.0], [43.6, 61038.0], [43.7, 61040.0], [43.8, 61040.0], [43.9, 61041.0], [44.0, 61046.0], [44.1, 61046.0], [44.2, 61049.0], [44.3, 61049.0], [44.4, 61049.0], [44.5, 61056.0], [44.6, 61056.0], [44.7, 61057.0], [44.8, 61057.0], [44.9, 61058.0], [45.0, 61062.0], [45.1, 61062.0], [45.2, 61066.0], [45.3, 61066.0], [45.4, 61067.0], [45.5, 61070.0], [45.6, 61070.0], [45.7, 61070.0], [45.8, 61070.0], [45.9, 61070.0], [46.0, 61072.0], [46.1, 61072.0], [46.2, 61075.0], [46.3, 61075.0], [46.4, 61075.0], [46.5, 61076.0], [46.6, 61076.0], [46.7, 61077.0], [46.8, 61077.0], [46.9, 61078.0], [47.0, 61082.0], [47.1, 61082.0], [47.2, 61083.0], [47.3, 61083.0], [47.4, 61084.0], [47.5, 61087.0], [47.6, 61087.0], [47.7, 61090.0], [47.8, 61090.0], [47.9, 61090.0], [48.0, 61090.0], [48.1, 61090.0], [48.2, 61091.0], [48.3, 61091.0], [48.4, 61091.0], [48.5, 61094.0], [48.6, 61094.0], [48.7, 61097.0], [48.8, 61097.0], [48.9, 61102.0], [49.0, 61104.0], [49.1, 61104.0], [49.2, 61110.0], [49.3, 61110.0], [49.4, 61115.0], [49.5, 61116.0], [49.6, 61116.0], [49.7, 61117.0], [49.8, 61117.0], [49.9, 61117.0], [50.0, 61118.0], [50.1, 61118.0], [50.2, 61118.0], [50.3, 61118.0], [50.4, 61123.0], [50.5, 61123.0], [50.6, 61123.0], [50.7, 61124.0], [50.8, 61124.0], [50.9, 61124.0], [51.0, 61126.0], [51.1, 61126.0], [51.2, 61127.0], [51.3, 61127.0], [51.4, 61127.0], [51.5, 61131.0], [51.6, 61131.0], [51.7, 61136.0], [51.8, 61136.0], [51.9, 61139.0], [52.0, 61139.0], [52.1, 61139.0], [52.2, 61140.0], [52.3, 61140.0], [52.4, 61142.0], [52.5, 61142.0], [52.6, 61142.0], [52.7, 61145.0], [52.8, 61145.0], [52.9, 61146.0], [53.0, 61146.0], [53.1, 61146.0], [53.2, 61146.0], [53.3, 61146.0], [53.4, 61153.0], [53.5, 61157.0], [53.6, 61157.0], [53.7, 61157.0], [53.8, 61157.0], [53.9, 61158.0], [54.0, 61161.0], [54.1, 61161.0], [54.2, 61166.0], [54.3, 61166.0], [54.4, 61167.0], [54.5, 61172.0], [54.6, 61172.0], [54.7, 61174.0], [54.8, 61174.0], [54.9, 61175.0], [55.0, 61175.0], [55.1, 61175.0], [55.2, 61176.0], [55.3, 61176.0], [55.4, 61177.0], [55.5, 61179.0], [55.6, 61179.0], [55.7, 61185.0], [55.8, 61185.0], [55.9, 61187.0], [56.0, 61188.0], [56.1, 61188.0], [56.2, 61189.0], [56.3, 61189.0], [56.4, 61190.0], [56.5, 61194.0], [56.6, 61194.0], [56.7, 61195.0], [56.8, 61195.0], [56.9, 61196.0], [57.0, 61197.0], [57.1, 61197.0], [57.2, 61210.0], [57.3, 61210.0], [57.4, 61210.0], [57.5, 61214.0], [57.6, 61214.0], [57.7, 61215.0], [57.8, 61215.0], [57.9, 61215.0], [58.0, 61217.0], [58.1, 61217.0], [58.2, 61217.0], [58.3, 61217.0], [58.4, 61220.0], [58.5, 61222.0], [58.6, 61222.0], [58.7, 61224.0], [58.8, 61224.0], [58.9, 61225.0], [59.0, 61225.0], [59.1, 61225.0], [59.2, 61226.0], [59.3, 61226.0], [59.4, 61226.0], [59.5, 61232.0], [59.6, 61232.0], [59.7, 61236.0], [59.8, 61236.0], [59.9, 61237.0], [60.0, 61238.0], [60.1, 61238.0], [60.2, 61238.0], [60.3, 61238.0], [60.4, 61240.0], [60.5, 61241.0], [60.6, 61241.0], [60.7, 61244.0], [60.8, 61244.0], [60.9, 61245.0], [61.0, 61249.0], [61.1, 61249.0], [61.2, 61253.0], [61.3, 61253.0], [61.4, 61253.0], [61.5, 61254.0], [61.6, 61254.0], [61.7, 61260.0], [61.8, 61260.0], [61.9, 61262.0], [62.0, 61263.0], [62.1, 61263.0], [62.2, 61264.0], [62.3, 61264.0], [62.4, 61266.0], [62.5, 61267.0], [62.6, 61267.0], [62.7, 61273.0], [62.8, 61273.0], [62.9, 61274.0], [63.0, 61275.0], [63.1, 61275.0], [63.2, 61276.0], [63.3, 61276.0], [63.4, 61279.0], [63.5, 61284.0], [63.6, 61284.0], [63.7, 61285.0], [63.8, 61285.0], [63.9, 61285.0], [64.0, 61286.0], [64.1, 61286.0], [64.2, 61286.0], [64.3, 61286.0], [64.4, 61287.0], [64.5, 61293.0], [64.6, 61293.0], [64.7, 61295.0], [64.8, 61295.0], [64.9, 61295.0], [65.0, 61296.0], [65.1, 61296.0], [65.2, 61297.0], [65.3, 61297.0], [65.4, 61297.0], [65.5, 61300.0], [65.6, 61300.0], [65.7, 61307.0], [65.8, 61307.0], [65.9, 61307.0], [66.0, 61313.0], [66.1, 61313.0], [66.2, 61314.0], [66.3, 61314.0], [66.4, 61315.0], [66.5, 61315.0], [66.6, 61315.0], [66.7, 61317.0], [66.8, 61317.0], [66.9, 61320.0], [67.0, 61321.0], [67.1, 61321.0], [67.2, 61323.0], [67.3, 61323.0], [67.4, 61326.0], [67.5, 61326.0], [67.6, 61326.0], [67.7, 61327.0], [67.8, 61327.0], [67.9, 61332.0], [68.0, 61332.0], [68.1, 61332.0], [68.2, 61334.0], [68.3, 61334.0], [68.4, 61336.0], [68.5, 61338.0], [68.6, 61338.0], [68.7, 61340.0], [68.8, 61340.0], [68.9, 61341.0], [69.0, 61341.0], [69.1, 61341.0], [69.2, 61343.0], [69.3, 61343.0], [69.4, 61345.0], [69.5, 61347.0], [69.6, 61347.0], [69.7, 61347.0], [69.8, 61347.0], [69.9, 61348.0], [70.0, 61358.0], [70.1, 61358.0], [70.2, 61360.0], [70.3, 61360.0], [70.4, 61363.0], [70.5, 61365.0], [70.6, 61365.0], [70.7, 61365.0], [70.8, 61365.0], [70.9, 61367.0], [71.0, 61368.0], [71.1, 61368.0], [71.2, 61370.0], [71.3, 61370.0], [71.4, 61373.0], [71.5, 61375.0], [71.6, 61375.0], [71.7, 61376.0], [71.8, 61376.0], [71.9, 61376.0], [72.0, 61376.0], [72.1, 61376.0], [72.2, 61378.0], [72.3, 61378.0], [72.4, 61382.0], [72.5, 61383.0], [72.6, 61383.0], [72.7, 61384.0], [72.8, 61384.0], [72.9, 61386.0], [73.0, 61390.0], [73.1, 61390.0], [73.2, 61391.0], [73.3, 61391.0], [73.4, 61391.0], [73.5, 61398.0], [73.6, 61398.0], [73.7, 61404.0], [73.8, 61404.0], [73.9, 61406.0], [74.0, 61407.0], [74.1, 61407.0], [74.2, 61409.0], [74.3, 61409.0], [74.4, 61409.0], [74.5, 61414.0], [74.6, 61414.0], [74.7, 61417.0], [74.8, 61417.0], [74.9, 61417.0], [75.0, 61418.0], [75.1, 61418.0], [75.2, 61419.0], [75.3, 61419.0], [75.4, 61420.0], [75.5, 61423.0], [75.6, 61423.0], [75.7, 61423.0], [75.8, 61423.0], [75.9, 61425.0], [76.0, 61426.0], [76.1, 61426.0], [76.2, 61427.0], [76.3, 61427.0], [76.4, 61427.0], [76.5, 61437.0], [76.6, 61437.0], [76.7, 61437.0], [76.8, 61437.0], [76.9, 61438.0], [77.0, 61442.0], [77.1, 61442.0], [77.2, 61442.0], [77.3, 61442.0], [77.4, 61444.0], [77.5, 61445.0], [77.6, 61445.0], [77.7, 61448.0], [77.8, 61448.0], [77.9, 61459.0], [78.0, 61459.0], [78.1, 61459.0], [78.2, 61464.0], [78.3, 61464.0], [78.4, 61466.0], [78.5, 61466.0], [78.6, 61466.0], [78.7, 61467.0], [78.8, 61467.0], [78.9, 61467.0], [79.0, 61467.0], [79.1, 61467.0], [79.2, 61469.0], [79.3, 61469.0], [79.4, 61470.0], [79.5, 61472.0], [79.6, 61472.0], [79.7, 61474.0], [79.8, 61474.0], [79.9, 61474.0], [80.0, 61477.0], [80.1, 61477.0], [80.2, 61477.0], [80.3, 61477.0], [80.4, 61478.0], [80.5, 61479.0], [80.6, 61479.0], [80.7, 61488.0], [80.8, 61488.0], [80.9, 61491.0], [81.0, 61491.0], [81.1, 61493.0], [81.2, 61494.0], [81.3, 61494.0], [81.4, 61494.0], [81.5, 61494.0], [81.6, 61496.0], [81.7, 61497.0], [81.8, 61497.0], [81.9, 61502.0], [82.0, 61502.0], [82.1, 61503.0], [82.2, 61508.0], [82.3, 61508.0], [82.4, 61508.0], [82.5, 61508.0], [82.6, 61511.0], [82.7, 61514.0], [82.8, 61514.0], [82.9, 61515.0], [83.0, 61515.0], [83.1, 61516.0], [83.2, 61520.0], [83.3, 61520.0], [83.4, 61523.0], [83.5, 61523.0], [83.6, 61524.0], [83.7, 61524.0], [83.8, 61524.0], [83.9, 61526.0], [84.0, 61526.0], [84.1, 61526.0], [84.2, 61526.0], [84.3, 61526.0], [84.4, 61527.0], [84.5, 61527.0], [84.6, 61528.0], [84.7, 61533.0], [84.8, 61533.0], [84.9, 61536.0], [85.0, 61536.0], [85.1, 61537.0], [85.2, 61538.0], [85.3, 61538.0], [85.4, 61538.0], [85.5, 61538.0], [85.6, 61541.0], [85.7, 61542.0], [85.8, 61542.0], [85.9, 61542.0], [86.0, 61542.0], [86.1, 61543.0], [86.2, 61546.0], [86.3, 61546.0], [86.4, 61549.0], [86.5, 61549.0], [86.6, 61554.0], [86.7, 61558.0], [86.8, 61558.0], [86.9, 61559.0], [87.0, 61559.0], [87.1, 61566.0], [87.2, 61567.0], [87.3, 61567.0], [87.4, 61567.0], [87.5, 61567.0], [87.6, 61570.0], [87.7, 61571.0], [87.8, 61571.0], [87.9, 61573.0], [88.0, 61573.0], [88.1, 61575.0], [88.2, 61576.0], [88.3, 61576.0], [88.4, 61580.0], [88.5, 61580.0], [88.6, 61584.0], [88.7, 61584.0], [88.8, 61584.0], [88.9, 61585.0], [89.0, 61585.0], [89.1, 61586.0], [89.2, 61587.0], [89.3, 61587.0], [89.4, 61592.0], [89.5, 61592.0], [89.6, 61592.0], [89.7, 61596.0], [89.8, 61596.0], [89.9, 61596.0], [90.0, 61596.0], [90.1, 61598.0], [90.2, 61602.0], [90.3, 61602.0], [90.4, 61603.0], [90.5, 61603.0], [90.6, 61603.0], [90.7, 61607.0], [90.8, 61607.0], [90.9, 61610.0], [91.0, 61610.0], [91.1, 61614.0], [91.2, 61616.0], [91.3, 61616.0], [91.4, 61618.0], [91.5, 61618.0], [91.6, 61620.0], [91.7, 61622.0], [91.8, 61622.0], [91.9, 61622.0], [92.0, 61622.0], [92.1, 61622.0], [92.2, 61624.0], [92.3, 61624.0], [92.4, 61626.0], [92.5, 61626.0], [92.6, 61631.0], [92.7, 61633.0], [92.8, 61633.0], [92.9, 61633.0], [93.0, 61633.0], [93.1, 61635.0], [93.2, 61635.0], [93.3, 61635.0], [93.4, 61637.0], [93.5, 61637.0], [93.6, 61638.0], [93.7, 61639.0], [93.8, 61639.0], [93.9, 61640.0], [94.0, 61640.0], [94.1, 61640.0], [94.2, 61640.0], [94.3, 61640.0], [94.4, 61643.0], [94.5, 61643.0], [94.6, 61645.0], [94.7, 61648.0], [94.8, 61648.0], [94.9, 61649.0], [95.0, 61649.0], [95.1, 61653.0], [95.2, 61655.0], [95.3, 61655.0], [95.4, 61657.0], [95.5, 61657.0], [95.6, 61658.0], [95.7, 61659.0], [95.8, 61659.0], [95.9, 61664.0], [96.0, 61664.0], [96.1, 61665.0], [96.2, 61670.0], [96.3, 61670.0], [96.4, 61674.0], [96.5, 61674.0], [96.6, 61674.0], [96.7, 61677.0], [96.8, 61677.0], [96.9, 61680.0], [97.0, 61680.0], [97.1, 61686.0], [97.2, 61690.0], [97.3, 61690.0], [97.4, 61700.0], [97.5, 61700.0], [97.6, 61700.0], [97.7, 61714.0], [97.8, 61714.0], [97.9, 61721.0], [98.0, 61721.0], [98.1, 61723.0], [98.2, 61727.0], [98.3, 61727.0], [98.4, 61735.0], [98.5, 61735.0], [98.6, 61749.0], [98.7, 61754.0], [98.8, 61754.0], [98.9, 61770.0], [99.0, 61770.0], [99.1, 61771.0], [99.2, 61776.0], [99.3, 61776.0], [99.4, 61797.0], [99.5, 61797.0], [99.6, 61804.0], [99.7, 61826.0], [99.8, 61826.0], [99.9, 61870.0], [100.0, 61870.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 59800.0], [0.1, 59800.0], [0.2, 59800.0], [0.3, 59800.0], [0.4, 59800.0], [0.5, 59800.0], [0.6, 59800.0], [0.7, 59802.0], [0.8, 59802.0], [0.9, 59802.0], [1.0, 59804.0], [1.1, 59804.0], [1.2, 59804.0], [1.3, 59804.0], [1.4, 59808.0], [1.5, 59808.0], [1.6, 59808.0], [1.7, 59808.0], [1.8, 59808.0], [1.9, 59808.0], [2.0, 59808.0], [2.1, 59808.0], [2.2, 59808.0], [2.3, 59808.0], [2.4, 59811.0], [2.5, 59811.0], [2.6, 59811.0], [2.7, 59819.0], [2.8, 59819.0], [2.9, 59819.0], [3.0, 59820.0], [3.1, 59820.0], [3.2, 59820.0], [3.3, 59820.0], [3.4, 59822.0], [3.5, 59822.0], [3.6, 59822.0], [3.7, 59825.0], [3.8, 59825.0], [3.9, 59825.0], [4.0, 59827.0], [4.1, 59827.0], [4.2, 59827.0], [4.3, 59827.0], [4.4, 59829.0], [4.5, 59829.0], [4.6, 59829.0], [4.7, 59832.0], [4.8, 59832.0], [4.9, 59832.0], [5.0, 59846.0], [5.1, 59846.0], [5.2, 59846.0], [5.3, 59846.0], [5.4, 59846.0], [5.5, 59846.0], [5.6, 59846.0], [5.7, 59846.0], [5.8, 59846.0], [5.9, 59846.0], [6.0, 59846.0], [6.1, 59846.0], [6.2, 59846.0], [6.3, 59846.0], [6.4, 59855.0], [6.5, 59855.0], [6.6, 59855.0], [6.7, 59857.0], [6.8, 59857.0], [6.9, 59857.0], [7.0, 59866.0], [7.1, 59866.0], [7.2, 59866.0], [7.3, 59866.0], [7.4, 59875.0], [7.5, 59875.0], [7.6, 59875.0], [7.7, 59878.0], [7.8, 59878.0], [7.9, 59878.0], [8.0, 59878.0], [8.1, 59878.0], [8.2, 59878.0], [8.3, 59878.0], [8.4, 59883.0], [8.5, 59883.0], [8.6, 59883.0], [8.7, 59884.0], [8.8, 59884.0], [8.9, 59884.0], [9.0, 59889.0], [9.1, 59889.0], [9.2, 59889.0], [9.3, 59889.0], [9.4, 59890.0], [9.5, 59890.0], [9.6, 59890.0], [9.7, 59890.0], [9.8, 59890.0], [9.9, 59890.0], [10.0, 59891.0], [10.1, 59891.0], [10.2, 59891.0], [10.3, 59891.0], [10.4, 59894.0], [10.5, 59894.0], [10.6, 59894.0], [10.7, 59896.0], [10.8, 59896.0], [10.9, 59896.0], [11.0, 59900.0], [11.1, 59900.0], [11.2, 59900.0], [11.3, 59900.0], [11.4, 59900.0], [11.5, 59900.0], [11.6, 59900.0], [11.7, 59901.0], [11.8, 59901.0], [11.9, 59901.0], [12.0, 59903.0], [12.1, 59903.0], [12.2, 59903.0], [12.3, 59903.0], [12.4, 59905.0], [12.5, 59905.0], [12.6, 59905.0], [12.7, 59907.0], [12.8, 59907.0], [12.9, 59907.0], [13.0, 59907.0], [13.1, 59911.0], [13.2, 59911.0], [13.3, 59911.0], [13.4, 59924.0], [13.5, 59924.0], [13.6, 59924.0], [13.7, 59925.0], [13.8, 59925.0], [13.9, 59925.0], [14.0, 59925.0], [14.1, 59931.0], [14.2, 59931.0], [14.3, 59931.0], [14.4, 59932.0], [14.5, 59932.0], [14.6, 59932.0], [14.7, 59932.0], [14.8, 59932.0], [14.9, 59932.0], [15.0, 59932.0], [15.1, 59946.0], [15.2, 59946.0], [15.3, 59946.0], [15.4, 59949.0], [15.5, 59949.0], [15.6, 59949.0], [15.7, 59949.0], [15.8, 59949.0], [15.9, 59949.0], [16.0, 59949.0], [16.1, 59953.0], [16.2, 59953.0], [16.3, 59953.0], [16.4, 59958.0], [16.5, 59958.0], [16.6, 59958.0], [16.7, 59959.0], [16.8, 59959.0], [16.9, 59959.0], [17.0, 59959.0], [17.1, 59959.0], [17.2, 59959.0], [17.3, 59959.0], [17.4, 59960.0], [17.5, 59960.0], [17.6, 59960.0], [17.7, 59964.0], [17.8, 59964.0], [17.9, 59964.0], [18.0, 59966.0], [18.1, 59966.0], [18.2, 59966.0], [18.3, 59966.0], [18.4, 59968.0], [18.5, 59968.0], [18.6, 59968.0], [18.7, 59970.0], [18.8, 59970.0], [18.9, 59970.0], [19.0, 59971.0], [19.1, 59971.0], [19.2, 59971.0], [19.3, 59971.0], [19.4, 59979.0], [19.5, 59979.0], [19.6, 59979.0], [19.7, 59980.0], [19.8, 59980.0], [19.9, 59980.0], [20.0, 59983.0], [20.1, 59983.0], [20.2, 59983.0], [20.3, 59983.0], [20.4, 59985.0], [20.5, 59985.0], [20.6, 59985.0], [20.7, 59986.0], [20.8, 59986.0], [20.9, 59986.0], [21.0, 59987.0], [21.1, 59987.0], [21.2, 59987.0], [21.3, 59987.0], [21.4, 59989.0], [21.5, 59989.0], [21.6, 59989.0], [21.7, 59993.0], [21.8, 59993.0], [21.9, 59993.0], [22.0, 59998.0], [22.1, 59998.0], [22.2, 59998.0], [22.3, 59998.0], [22.4, 60003.0], [22.5, 60003.0], [22.6, 60003.0], [22.7, 60007.0], [22.8, 60007.0], [22.9, 60007.0], [23.0, 60014.0], [23.1, 60014.0], [23.2, 60014.0], [23.3, 60014.0], [23.4, 60019.0], [23.5, 60019.0], [23.6, 60019.0], [23.7, 60021.0], [23.8, 60021.0], [23.9, 60021.0], [24.0, 60024.0], [24.1, 60024.0], [24.2, 60024.0], [24.3, 60024.0], [24.4, 60024.0], [24.5, 60024.0], [24.6, 60024.0], [24.7, 60025.0], [24.8, 60025.0], [24.9, 60025.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60034.0], [25.5, 60034.0], [25.6, 60034.0], [25.7, 60039.0], [25.8, 60039.0], [25.9, 60039.0], [26.0, 60041.0], [26.1, 60041.0], [26.2, 60041.0], [26.3, 60041.0], [26.4, 60043.0], [26.5, 60043.0], [26.6, 60043.0], [26.7, 60047.0], [26.8, 60047.0], [26.9, 60047.0], [27.0, 60047.0], [27.1, 60047.0], [27.2, 60047.0], [27.3, 60047.0], [27.4, 60047.0], [27.5, 60047.0], [27.6, 60047.0], [27.7, 60050.0], [27.8, 60050.0], [27.9, 60050.0], [28.0, 60055.0], [28.1, 60055.0], [28.2, 60055.0], [28.3, 60055.0], [28.4, 60058.0], [28.5, 60058.0], [28.6, 60058.0], [28.7, 60059.0], [28.8, 60059.0], [28.9, 60059.0], [29.0, 60059.0], [29.1, 60059.0], [29.2, 60059.0], [29.3, 60059.0], [29.4, 60061.0], [29.5, 60061.0], [29.6, 60061.0], [29.7, 60061.0], [29.8, 60061.0], [29.9, 60061.0], [30.0, 60071.0], [30.1, 60071.0], [30.2, 60071.0], [30.3, 60071.0], [30.4, 60073.0], [30.5, 60073.0], [30.6, 60073.0], [30.7, 60075.0], [30.8, 60075.0], [30.9, 60075.0], [31.0, 60082.0], [31.1, 60082.0], [31.2, 60082.0], [31.3, 60082.0], [31.4, 60089.0], [31.5, 60089.0], [31.6, 60089.0], [31.7, 60093.0], [31.8, 60093.0], [31.9, 60093.0], [32.0, 60095.0], [32.1, 60095.0], [32.2, 60095.0], [32.3, 60095.0], [32.4, 60102.0], [32.5, 60102.0], [32.6, 60102.0], [32.7, 60105.0], [32.8, 60105.0], [32.9, 60105.0], [33.0, 60107.0], [33.1, 60107.0], [33.2, 60107.0], [33.3, 60107.0], [33.4, 60109.0], [33.5, 60109.0], [33.6, 60109.0], [33.7, 60111.0], [33.8, 60111.0], [33.9, 60111.0], [34.0, 60114.0], [34.1, 60114.0], [34.2, 60114.0], [34.3, 60114.0], [34.4, 60116.0], [34.5, 60116.0], [34.6, 60116.0], [34.7, 60118.0], [34.8, 60118.0], [34.9, 60118.0], [35.0, 60119.0], [35.1, 60119.0], [35.2, 60119.0], [35.3, 60119.0], [35.4, 60121.0], [35.5, 60121.0], [35.6, 60121.0], [35.7, 60123.0], [35.8, 60123.0], [35.9, 60123.0], [36.0, 60124.0], [36.1, 60124.0], [36.2, 60124.0], [36.3, 60124.0], [36.4, 60126.0], [36.5, 60126.0], [36.6, 60126.0], [36.7, 60126.0], [36.8, 60126.0], [36.9, 60126.0], [37.0, 60128.0], [37.1, 60128.0], [37.2, 60128.0], [37.3, 60128.0], [37.4, 60136.0], [37.5, 60136.0], [37.6, 60136.0], [37.7, 60141.0], [37.8, 60141.0], [37.9, 60141.0], [38.0, 60145.0], [38.1, 60145.0], [38.2, 60145.0], [38.3, 60145.0], [38.4, 60146.0], [38.5, 60146.0], [38.6, 60146.0], [38.7, 60148.0], [38.8, 60148.0], [38.9, 60148.0], [39.0, 60148.0], [39.1, 60155.0], [39.2, 60155.0], [39.3, 60155.0], [39.4, 60157.0], [39.5, 60157.0], [39.6, 60157.0], [39.7, 60164.0], [39.8, 60164.0], [39.9, 60164.0], [40.0, 60164.0], [40.1, 60167.0], [40.2, 60167.0], [40.3, 60167.0], [40.4, 60177.0], [40.5, 60177.0], [40.6, 60177.0], [40.7, 60179.0], [40.8, 60179.0], [40.9, 60179.0], [41.0, 60179.0], [41.1, 60184.0], [41.2, 60184.0], [41.3, 60184.0], [41.4, 60184.0], [41.5, 60184.0], [41.6, 60184.0], [41.7, 60186.0], [41.8, 60186.0], [41.9, 60186.0], [42.0, 60186.0], [42.1, 60189.0], [42.2, 60189.0], [42.3, 60189.0], [42.4, 60191.0], [42.5, 60191.0], [42.6, 60191.0], [42.7, 60192.0], [42.8, 60192.0], [42.9, 60192.0], [43.0, 60192.0], [43.1, 60195.0], [43.2, 60195.0], [43.3, 60195.0], [43.4, 60196.0], [43.5, 60196.0], [43.6, 60196.0], [43.7, 60198.0], [43.8, 60198.0], [43.9, 60198.0], [44.0, 60198.0], [44.1, 60198.0], [44.2, 60198.0], [44.3, 60198.0], [44.4, 60201.0], [44.5, 60201.0], [44.6, 60201.0], [44.7, 60204.0], [44.8, 60204.0], [44.9, 60204.0], [45.0, 60204.0], [45.1, 60205.0], [45.2, 60205.0], [45.3, 60205.0], [45.4, 60206.0], [45.5, 60206.0], [45.6, 60206.0], [45.7, 60210.0], [45.8, 60210.0], [45.9, 60210.0], [46.0, 60210.0], [46.1, 60211.0], [46.2, 60211.0], [46.3, 60211.0], [46.4, 60219.0], [46.5, 60219.0], [46.6, 60219.0], [46.7, 60222.0], [46.8, 60222.0], [46.9, 60222.0], [47.0, 60222.0], [47.1, 60226.0], [47.2, 60226.0], [47.3, 60226.0], [47.4, 60232.0], [47.5, 60232.0], [47.6, 60232.0], [47.7, 60232.0], [47.8, 60232.0], [47.9, 60232.0], [48.0, 60232.0], [48.1, 60239.0], [48.2, 60239.0], [48.3, 60239.0], [48.4, 60241.0], [48.5, 60241.0], [48.6, 60241.0], [48.7, 60248.0], [48.8, 60248.0], [48.9, 60248.0], [49.0, 60248.0], [49.1, 60250.0], [49.2, 60250.0], [49.3, 60250.0], [49.4, 60252.0], [49.5, 60252.0], [49.6, 60252.0], [49.7, 60253.0], [49.8, 60253.0], [49.9, 60253.0], [50.0, 60253.0], [50.1, 60258.0], [50.2, 60258.0], [50.3, 60258.0], [50.4, 60259.0], [50.5, 60259.0], [50.6, 60259.0], [50.7, 60264.0], [50.8, 60264.0], [50.9, 60264.0], [51.0, 60264.0], [51.1, 60266.0], [51.2, 60266.0], [51.3, 60266.0], [51.4, 60267.0], [51.5, 60267.0], [51.6, 60267.0], [51.7, 60270.0], [51.8, 60270.0], [51.9, 60270.0], [52.0, 60270.0], [52.1, 60274.0], [52.2, 60274.0], [52.3, 60274.0], [52.4, 60275.0], [52.5, 60275.0], [52.6, 60275.0], [52.7, 60278.0], [52.8, 60278.0], [52.9, 60278.0], [53.0, 60278.0], [53.1, 60280.0], [53.2, 60280.0], [53.3, 60280.0], [53.4, 60282.0], [53.5, 60282.0], [53.6, 60282.0], [53.7, 60284.0], [53.8, 60284.0], [53.9, 60284.0], [54.0, 60284.0], [54.1, 60285.0], [54.2, 60285.0], [54.3, 60285.0], [54.4, 60286.0], [54.5, 60286.0], [54.6, 60286.0], [54.7, 60296.0], [54.8, 60296.0], [54.9, 60296.0], [55.0, 60296.0], [55.1, 60299.0], [55.2, 60299.0], [55.3, 60299.0], [55.4, 60305.0], [55.5, 60305.0], [55.6, 60305.0], [55.7, 60307.0], [55.8, 60307.0], [55.9, 60307.0], [56.0, 60307.0], [56.1, 60307.0], [56.2, 60307.0], [56.3, 60307.0], [56.4, 60314.0], [56.5, 60314.0], [56.6, 60314.0], [56.7, 60322.0], [56.8, 60322.0], [56.9, 60322.0], [57.0, 60322.0], [57.1, 60325.0], [57.2, 60325.0], [57.3, 60325.0], [57.4, 60326.0], [57.5, 60326.0], [57.6, 60326.0], [57.7, 60328.0], [57.8, 60328.0], [57.9, 60328.0], [58.0, 60328.0], [58.1, 60330.0], [58.2, 60330.0], [58.3, 60330.0], [58.4, 60334.0], [58.5, 60334.0], [58.6, 60334.0], [58.7, 60336.0], [58.8, 60336.0], [58.9, 60336.0], [59.0, 60336.0], [59.1, 60338.0], [59.2, 60338.0], [59.3, 60338.0], [59.4, 60339.0], [59.5, 60339.0], [59.6, 60339.0], [59.7, 60341.0], [59.8, 60341.0], [59.9, 60341.0], [60.0, 60341.0], [60.1, 60347.0], [60.2, 60347.0], [60.3, 60347.0], [60.4, 60349.0], [60.5, 60349.0], [60.6, 60349.0], [60.7, 60351.0], [60.8, 60351.0], [60.9, 60351.0], [61.0, 60351.0], [61.1, 60351.0], [61.2, 60351.0], [61.3, 60351.0], [61.4, 60352.0], [61.5, 60352.0], [61.6, 60352.0], [61.7, 60354.0], [61.8, 60354.0], [61.9, 60354.0], [62.0, 60354.0], [62.1, 60355.0], [62.2, 60355.0], [62.3, 60355.0], [62.4, 60361.0], [62.5, 60361.0], [62.6, 60361.0], [62.7, 60361.0], [62.8, 60361.0], [62.9, 60361.0], [63.0, 60361.0], [63.1, 60362.0], [63.2, 60362.0], [63.3, 60362.0], [63.4, 60365.0], [63.5, 60365.0], [63.6, 60365.0], [63.7, 60367.0], [63.8, 60367.0], [63.9, 60367.0], [64.0, 60367.0], [64.1, 60377.0], [64.2, 60377.0], [64.3, 60377.0], [64.4, 60382.0], [64.5, 60382.0], [64.6, 60382.0], [64.7, 60389.0], [64.8, 60389.0], [64.9, 60389.0], [65.0, 60389.0], [65.1, 60396.0], [65.2, 60396.0], [65.3, 60396.0], [65.4, 60400.0], [65.5, 60400.0], [65.6, 60400.0], [65.7, 60404.0], [65.8, 60404.0], [65.9, 60404.0], [66.0, 60404.0], [66.1, 60405.0], [66.2, 60405.0], [66.3, 60405.0], [66.4, 60409.0], [66.5, 60409.0], [66.6, 60409.0], [66.7, 60412.0], [66.8, 60412.0], [66.9, 60412.0], [67.0, 60412.0], [67.1, 60413.0], [67.2, 60413.0], [67.3, 60413.0], [67.4, 60414.0], [67.5, 60414.0], [67.6, 60414.0], [67.7, 60415.0], [67.8, 60415.0], [67.9, 60415.0], [68.0, 60415.0], [68.1, 60416.0], [68.2, 60416.0], [68.3, 60416.0], [68.4, 60421.0], [68.5, 60421.0], [68.6, 60421.0], [68.7, 60423.0], [68.8, 60423.0], [68.9, 60423.0], [69.0, 60423.0], [69.1, 60423.0], [69.2, 60423.0], [69.3, 60423.0], [69.4, 60424.0], [69.5, 60424.0], [69.6, 60424.0], [69.7, 60428.0], [69.8, 60428.0], [69.9, 60428.0], [70.0, 60428.0], [70.1, 60434.0], [70.2, 60434.0], [70.3, 60434.0], [70.4, 60436.0], [70.5, 60436.0], [70.6, 60436.0], [70.7, 60438.0], [70.8, 60438.0], [70.9, 60438.0], [71.0, 60438.0], [71.1, 60438.0], [71.2, 60438.0], [71.3, 60438.0], [71.4, 60438.0], [71.5, 60438.0], [71.6, 60438.0], [71.7, 60440.0], [71.8, 60440.0], [71.9, 60440.0], [72.0, 60440.0], [72.1, 60448.0], [72.2, 60448.0], [72.3, 60448.0], [72.4, 60449.0], [72.5, 60449.0], [72.6, 60449.0], [72.7, 60457.0], [72.8, 60457.0], [72.9, 60457.0], [73.0, 60457.0], [73.1, 60464.0], [73.2, 60464.0], [73.3, 60464.0], [73.4, 60466.0], [73.5, 60466.0], [73.6, 60466.0], [73.7, 60466.0], [73.8, 60466.0], [73.9, 60466.0], [74.0, 60466.0], [74.1, 60472.0], [74.2, 60472.0], [74.3, 60472.0], [74.4, 60477.0], [74.5, 60477.0], [74.6, 60477.0], [74.7, 60479.0], [74.8, 60479.0], [74.9, 60479.0], [75.0, 60479.0], [75.1, 60481.0], [75.2, 60481.0], [75.3, 60481.0], [75.4, 60484.0], [75.5, 60484.0], [75.6, 60484.0], [75.7, 60487.0], [75.8, 60487.0], [75.9, 60487.0], [76.0, 60487.0], [76.1, 60491.0], [76.2, 60491.0], [76.3, 60491.0], [76.4, 60491.0], [76.5, 60491.0], [76.6, 60491.0], [76.7, 60493.0], [76.8, 60493.0], [76.9, 60493.0], [77.0, 60493.0], [77.1, 60496.0], [77.2, 60496.0], [77.3, 60496.0], [77.4, 60496.0], [77.5, 60496.0], [77.6, 60496.0], [77.7, 60500.0], [77.8, 60500.0], [77.9, 60500.0], [78.0, 60500.0], [78.1, 60501.0], [78.2, 60501.0], [78.3, 60501.0], [78.4, 60503.0], [78.5, 60503.0], [78.6, 60503.0], [78.7, 60504.0], [78.8, 60504.0], [78.9, 60504.0], [79.0, 60510.0], [79.1, 60510.0], [79.2, 60510.0], [79.3, 60510.0], [79.4, 60510.0], [79.5, 60510.0], [79.6, 60510.0], [79.7, 60516.0], [79.8, 60516.0], [79.9, 60516.0], [80.0, 60518.0], [80.1, 60518.0], [80.2, 60518.0], [80.3, 60518.0], [80.4, 60519.0], [80.5, 60519.0], [80.6, 60519.0], [80.7, 60523.0], [80.8, 60523.0], [80.9, 60523.0], [81.0, 60527.0], [81.1, 60527.0], [81.2, 60527.0], [81.3, 60527.0], [81.4, 60531.0], [81.5, 60531.0], [81.6, 60531.0], [81.7, 60547.0], [81.8, 60547.0], [81.9, 60547.0], [82.0, 60552.0], [82.1, 60552.0], [82.2, 60552.0], [82.3, 60552.0], [82.4, 60555.0], [82.5, 60555.0], [82.6, 60555.0], [82.7, 60555.0], [82.8, 60555.0], [82.9, 60555.0], [83.0, 60555.0], [83.1, 60555.0], [83.2, 60555.0], [83.3, 60555.0], [83.4, 60561.0], [83.5, 60561.0], [83.6, 60561.0], [83.7, 60562.0], [83.8, 60562.0], [83.9, 60562.0], [84.0, 60564.0], [84.1, 60564.0], [84.2, 60564.0], [84.3, 60564.0], [84.4, 60564.0], [84.5, 60564.0], [84.6, 60564.0], [84.7, 60569.0], [84.8, 60569.0], [84.9, 60569.0], [85.0, 60574.0], [85.1, 60574.0], [85.2, 60574.0], [85.3, 60574.0], [85.4, 60574.0], [85.5, 60574.0], [85.6, 60574.0], [85.7, 60574.0], [85.8, 60574.0], [85.9, 60574.0], [86.0, 60577.0], [86.1, 60577.0], [86.2, 60577.0], [86.3, 60577.0], [86.4, 60577.0], [86.5, 60577.0], [86.6, 60577.0], [86.7, 60582.0], [86.8, 60582.0], [86.9, 60582.0], [87.0, 60586.0], [87.1, 60586.0], [87.2, 60586.0], [87.3, 60586.0], [87.4, 60589.0], [87.5, 60589.0], [87.6, 60589.0], [87.7, 60592.0], [87.8, 60592.0], [87.9, 60592.0], [88.0, 60597.0], [88.1, 60597.0], [88.2, 60597.0], [88.3, 60597.0], [88.4, 60598.0], [88.5, 60598.0], [88.6, 60598.0], [88.7, 60599.0], [88.8, 60599.0], [88.9, 60599.0], [89.0, 60603.0], [89.1, 60603.0], [89.2, 60603.0], [89.3, 60603.0], [89.4, 60607.0], [89.5, 60607.0], [89.6, 60607.0], [89.7, 60613.0], [89.8, 60613.0], [89.9, 60613.0], [90.0, 60622.0], [90.1, 60622.0], [90.2, 60622.0], [90.3, 60622.0], [90.4, 60624.0], [90.5, 60624.0], [90.6, 60624.0], [90.7, 60629.0], [90.8, 60629.0], [90.9, 60629.0], [91.0, 60630.0], [91.1, 60630.0], [91.2, 60630.0], [91.3, 60630.0], [91.4, 60633.0], [91.5, 60633.0], [91.6, 60633.0], [91.7, 60635.0], [91.8, 60635.0], [91.9, 60635.0], [92.0, 60635.0], [92.1, 60635.0], [92.2, 60635.0], [92.3, 60635.0], [92.4, 60639.0], [92.5, 60639.0], [92.6, 60639.0], [92.7, 60642.0], [92.8, 60642.0], [92.9, 60642.0], [93.0, 60642.0], [93.1, 60642.0], [93.2, 60642.0], [93.3, 60642.0], [93.4, 60645.0], [93.5, 60645.0], [93.6, 60645.0], [93.7, 60648.0], [93.8, 60648.0], [93.9, 60648.0], [94.0, 60649.0], [94.1, 60649.0], [94.2, 60649.0], [94.3, 60649.0], [94.4, 60650.0], [94.5, 60650.0], [94.6, 60650.0], [94.7, 60651.0], [94.8, 60651.0], [94.9, 60651.0], [95.0, 60653.0], [95.1, 60653.0], [95.2, 60653.0], [95.3, 60653.0], [95.4, 60661.0], [95.5, 60661.0], [95.6, 60661.0], [95.7, 60662.0], [95.8, 60662.0], [95.9, 60662.0], [96.0, 60664.0], [96.1, 60664.0], [96.2, 60664.0], [96.3, 60664.0], [96.4, 60664.0], [96.5, 60664.0], [96.6, 60664.0], [96.7, 60670.0], [96.8, 60670.0], [96.9, 60670.0], [97.0, 60674.0], [97.1, 60674.0], [97.2, 60674.0], [97.3, 60674.0], [97.4, 60677.0], [97.5, 60677.0], [97.6, 60677.0], [97.7, 60682.0], [97.8, 60682.0], [97.9, 60682.0], [98.0, 60689.0], [98.1, 60689.0], [98.2, 60689.0], [98.3, 60689.0], [98.4, 60709.0], [98.5, 60709.0], [98.6, 60709.0], [98.7, 60716.0], [98.8, 60716.0], [98.9, 60716.0], [99.0, 60737.0], [99.1, 60737.0], [99.2, 60737.0], [99.3, 60737.0], [99.4, 60765.0], [99.5, 60765.0], [99.6, 60765.0], [99.7, 60792.0], [99.8, 60792.0], [99.9, 60792.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64102.0], [0.1, 64102.0], [0.2, 64102.0], [0.3, 64102.0], [0.4, 64102.0], [0.5, 64102.0], [0.6, 64102.0], [0.7, 64102.0], [0.8, 64102.0], [0.9, 64102.0], [1.0, 64102.0], [1.1, 64102.0], [1.2, 64102.0], [1.3, 64102.0], [1.4, 64102.0], [1.5, 64102.0], [1.6, 64102.0], [1.7, 64102.0], [1.8, 64102.0], [1.9, 64102.0], [2.0, 64102.0], [2.1, 64102.0], [2.2, 64102.0], [2.3, 64102.0], [2.4, 64102.0], [2.5, 64102.0], [2.6, 64102.0], [2.7, 64102.0], [2.8, 64102.0], [2.9, 64102.0], [3.0, 64102.0], [3.1, 64102.0], [3.2, 64102.0], [3.3, 64102.0], [3.4, 64105.0], [3.5, 64105.0], [3.6, 64105.0], [3.7, 64105.0], [3.8, 64105.0], [3.9, 64105.0], [4.0, 64105.0], [4.1, 64105.0], [4.2, 64105.0], [4.3, 64105.0], [4.4, 64105.0], [4.5, 64105.0], [4.6, 64105.0], [4.7, 64105.0], [4.8, 64105.0], [4.9, 64105.0], [5.0, 64105.0], [5.1, 64105.0], [5.2, 64105.0], [5.3, 64105.0], [5.4, 64105.0], [5.5, 64105.0], [5.6, 64105.0], [5.7, 64105.0], [5.8, 64105.0], [5.9, 64105.0], [6.0, 64105.0], [6.1, 64105.0], [6.2, 64105.0], [6.3, 64105.0], [6.4, 64105.0], [6.5, 64105.0], [6.6, 64105.0], [6.7, 64108.0], [6.8, 64108.0], [6.9, 64108.0], [7.0, 64108.0], [7.1, 64108.0], [7.2, 64108.0], [7.3, 64108.0], [7.4, 64108.0], [7.5, 64108.0], [7.6, 64108.0], [7.7, 64108.0], [7.8, 64108.0], [7.9, 64108.0], [8.0, 64108.0], [8.1, 64108.0], [8.2, 64108.0], [8.3, 64108.0], [8.4, 64108.0], [8.5, 64108.0], [8.6, 64108.0], [8.7, 64108.0], [8.8, 64108.0], [8.9, 64108.0], [9.0, 64108.0], [9.1, 64108.0], [9.2, 64108.0], [9.3, 64108.0], [9.4, 64108.0], [9.5, 64108.0], [9.6, 64108.0], [9.7, 64108.0], [9.8, 64108.0], [9.9, 64108.0], [10.0, 64112.0], [10.1, 64112.0], [10.2, 64112.0], [10.3, 64112.0], [10.4, 64112.0], [10.5, 64112.0], [10.6, 64112.0], [10.7, 64112.0], [10.8, 64112.0], [10.9, 64112.0], [11.0, 64112.0], [11.1, 64112.0], [11.2, 64112.0], [11.3, 64112.0], [11.4, 64112.0], [11.5, 64112.0], [11.6, 64112.0], [11.7, 64112.0], [11.8, 64112.0], [11.9, 64112.0], [12.0, 64112.0], [12.1, 64112.0], [12.2, 64112.0], [12.3, 64112.0], [12.4, 64112.0], [12.5, 64112.0], [12.6, 64112.0], [12.7, 64112.0], [12.8, 64112.0], [12.9, 64112.0], [13.0, 64112.0], [13.1, 64112.0], [13.2, 64112.0], [13.3, 64112.0], [13.4, 64112.0], [13.5, 64112.0], [13.6, 64112.0], [13.7, 64112.0], [13.8, 64112.0], [13.9, 64112.0], [14.0, 64112.0], [14.1, 64112.0], [14.2, 64112.0], [14.3, 64112.0], [14.4, 64112.0], [14.5, 64112.0], [14.6, 64112.0], [14.7, 64112.0], [14.8, 64112.0], [14.9, 64112.0], [15.0, 64112.0], [15.1, 64112.0], [15.2, 64112.0], [15.3, 64112.0], [15.4, 64112.0], [15.5, 64112.0], [15.6, 64112.0], [15.7, 64112.0], [15.8, 64112.0], [15.9, 64112.0], [16.0, 64112.0], [16.1, 64112.0], [16.2, 64112.0], [16.3, 64112.0], [16.4, 64112.0], [16.5, 64112.0], [16.6, 64112.0], [16.7, 64115.0], [16.8, 64115.0], [16.9, 64115.0], [17.0, 64115.0], [17.1, 64115.0], [17.2, 64115.0], [17.3, 64115.0], [17.4, 64115.0], [17.5, 64115.0], [17.6, 64115.0], [17.7, 64115.0], [17.8, 64115.0], [17.9, 64115.0], [18.0, 64115.0], [18.1, 64115.0], [18.2, 64115.0], [18.3, 64115.0], [18.4, 64115.0], [18.5, 64115.0], [18.6, 64115.0], [18.7, 64115.0], [18.8, 64115.0], [18.9, 64115.0], [19.0, 64115.0], [19.1, 64115.0], [19.2, 64115.0], [19.3, 64115.0], [19.4, 64115.0], [19.5, 64115.0], [19.6, 64115.0], [19.7, 64115.0], [19.8, 64115.0], [19.9, 64115.0], [20.0, 64116.0], [20.1, 64116.0], [20.2, 64116.0], [20.3, 64116.0], [20.4, 64116.0], [20.5, 64116.0], [20.6, 64116.0], [20.7, 64116.0], [20.8, 64116.0], [20.9, 64116.0], [21.0, 64116.0], [21.1, 64116.0], [21.2, 64116.0], [21.3, 64116.0], [21.4, 64116.0], [21.5, 64116.0], [21.6, 64116.0], [21.7, 64116.0], [21.8, 64116.0], [21.9, 64116.0], [22.0, 64116.0], [22.1, 64116.0], [22.2, 64116.0], [22.3, 64116.0], [22.4, 64116.0], [22.5, 64116.0], [22.6, 64116.0], [22.7, 64116.0], [22.8, 64116.0], [22.9, 64116.0], [23.0, 64116.0], [23.1, 64116.0], [23.2, 64116.0], [23.3, 64116.0], [23.4, 64117.0], [23.5, 64117.0], [23.6, 64117.0], [23.7, 64117.0], [23.8, 64117.0], [23.9, 64117.0], [24.0, 64117.0], [24.1, 64117.0], [24.2, 64117.0], [24.3, 64117.0], [24.4, 64117.0], [24.5, 64117.0], [24.6, 64117.0], [24.7, 64117.0], [24.8, 64117.0], [24.9, 64117.0], [25.0, 64117.0], [25.1, 64117.0], [25.2, 64117.0], [25.3, 64117.0], [25.4, 64117.0], [25.5, 64117.0], [25.6, 64117.0], [25.7, 64117.0], [25.8, 64117.0], [25.9, 64117.0], [26.0, 64117.0], [26.1, 64117.0], [26.2, 64117.0], [26.3, 64117.0], [26.4, 64117.0], [26.5, 64117.0], [26.6, 64117.0], [26.7, 64119.0], [26.8, 64119.0], [26.9, 64119.0], [27.0, 64119.0], [27.1, 64119.0], [27.2, 64119.0], [27.3, 64119.0], [27.4, 64119.0], [27.5, 64119.0], [27.6, 64119.0], [27.7, 64119.0], [27.8, 64119.0], [27.9, 64119.0], [28.0, 64119.0], [28.1, 64119.0], [28.2, 64119.0], [28.3, 64119.0], [28.4, 64119.0], [28.5, 64119.0], [28.6, 64119.0], [28.7, 64119.0], [28.8, 64119.0], [28.9, 64119.0], [29.0, 64119.0], [29.1, 64119.0], [29.2, 64119.0], [29.3, 64119.0], [29.4, 64119.0], [29.5, 64119.0], [29.6, 64119.0], [29.7, 64119.0], [29.8, 64119.0], [29.9, 64119.0], [30.0, 64119.0], [30.1, 64119.0], [30.2, 64119.0], [30.3, 64119.0], [30.4, 64119.0], [30.5, 64119.0], [30.6, 64119.0], [30.7, 64119.0], [30.8, 64119.0], [30.9, 64119.0], [31.0, 64119.0], [31.1, 64119.0], [31.2, 64119.0], [31.3, 64119.0], [31.4, 64119.0], [31.5, 64119.0], [31.6, 64119.0], [31.7, 64119.0], [31.8, 64119.0], [31.9, 64119.0], [32.0, 64119.0], [32.1, 64119.0], [32.2, 64119.0], [32.3, 64119.0], [32.4, 64119.0], [32.5, 64119.0], [32.6, 64119.0], [32.7, 64119.0], [32.8, 64119.0], [32.9, 64119.0], [33.0, 64119.0], [33.1, 64119.0], [33.2, 64119.0], [33.3, 64119.0], [33.4, 64121.0], [33.5, 64121.0], [33.6, 64121.0], [33.7, 64121.0], [33.8, 64121.0], [33.9, 64121.0], [34.0, 64121.0], [34.1, 64121.0], [34.2, 64121.0], [34.3, 64121.0], [34.4, 64121.0], [34.5, 64121.0], [34.6, 64121.0], [34.7, 64121.0], [34.8, 64121.0], [34.9, 64121.0], [35.0, 64121.0], [35.1, 64121.0], [35.2, 64121.0], [35.3, 64121.0], [35.4, 64121.0], [35.5, 64121.0], [35.6, 64121.0], [35.7, 64121.0], [35.8, 64121.0], [35.9, 64121.0], [36.0, 64121.0], [36.1, 64121.0], [36.2, 64121.0], [36.3, 64121.0], [36.4, 64121.0], [36.5, 64121.0], [36.6, 64121.0], [36.7, 64125.0], [36.8, 64125.0], [36.9, 64125.0], [37.0, 64125.0], [37.1, 64125.0], [37.2, 64125.0], [37.3, 64125.0], [37.4, 64125.0], [37.5, 64125.0], [37.6, 64125.0], [37.7, 64125.0], [37.8, 64125.0], [37.9, 64125.0], [38.0, 64125.0], [38.1, 64125.0], [38.2, 64125.0], [38.3, 64125.0], [38.4, 64125.0], [38.5, 64125.0], [38.6, 64125.0], [38.7, 64125.0], [38.8, 64125.0], [38.9, 64125.0], [39.0, 64125.0], [39.1, 64125.0], [39.2, 64125.0], [39.3, 64125.0], [39.4, 64125.0], [39.5, 64125.0], [39.6, 64125.0], [39.7, 64125.0], [39.8, 64125.0], [39.9, 64125.0], [40.0, 64129.0], [40.1, 64129.0], [40.2, 64129.0], [40.3, 64129.0], [40.4, 64129.0], [40.5, 64129.0], [40.6, 64129.0], [40.7, 64129.0], [40.8, 64129.0], [40.9, 64129.0], [41.0, 64129.0], [41.1, 64129.0], [41.2, 64129.0], [41.3, 64129.0], [41.4, 64129.0], [41.5, 64129.0], [41.6, 64129.0], [41.7, 64129.0], [41.8, 64129.0], [41.9, 64129.0], [42.0, 64129.0], [42.1, 64129.0], [42.2, 64129.0], [42.3, 64129.0], [42.4, 64129.0], [42.5, 64129.0], [42.6, 64129.0], [42.7, 64129.0], [42.8, 64129.0], [42.9, 64129.0], [43.0, 64129.0], [43.1, 64129.0], [43.2, 64129.0], [43.3, 64129.0], [43.4, 64137.0], [43.5, 64137.0], [43.6, 64137.0], [43.7, 64137.0], [43.8, 64137.0], [43.9, 64137.0], [44.0, 64137.0], [44.1, 64137.0], [44.2, 64137.0], [44.3, 64137.0], [44.4, 64137.0], [44.5, 64137.0], [44.6, 64137.0], [44.7, 64137.0], [44.8, 64137.0], [44.9, 64137.0], [45.0, 64137.0], [45.1, 64137.0], [45.2, 64137.0], [45.3, 64137.0], [45.4, 64137.0], [45.5, 64137.0], [45.6, 64137.0], [45.7, 64137.0], [45.8, 64137.0], [45.9, 64137.0], [46.0, 64137.0], [46.1, 64137.0], [46.2, 64137.0], [46.3, 64137.0], [46.4, 64137.0], [46.5, 64137.0], [46.6, 64137.0], [46.7, 64154.0], [46.8, 64154.0], [46.9, 64154.0], [47.0, 64154.0], [47.1, 64154.0], [47.2, 64154.0], [47.3, 64154.0], [47.4, 64154.0], [47.5, 64154.0], [47.6, 64154.0], [47.7, 64154.0], [47.8, 64154.0], [47.9, 64154.0], [48.0, 64154.0], [48.1, 64154.0], [48.2, 64154.0], [48.3, 64154.0], [48.4, 64154.0], [48.5, 64154.0], [48.6, 64154.0], [48.7, 64154.0], [48.8, 64154.0], [48.9, 64154.0], [49.0, 64154.0], [49.1, 64154.0], [49.2, 64154.0], [49.3, 64154.0], [49.4, 64154.0], [49.5, 64154.0], [49.6, 64154.0], [49.7, 64154.0], [49.8, 64154.0], [49.9, 64154.0], [50.0, 64154.0], [50.1, 64189.0], [50.2, 64189.0], [50.3, 64189.0], [50.4, 64189.0], [50.5, 64189.0], [50.6, 64189.0], [50.7, 64189.0], [50.8, 64189.0], [50.9, 64189.0], [51.0, 64189.0], [51.1, 64189.0], [51.2, 64189.0], [51.3, 64189.0], [51.4, 64189.0], [51.5, 64189.0], [51.6, 64189.0], [51.7, 64189.0], [51.8, 64189.0], [51.9, 64189.0], [52.0, 64189.0], [52.1, 64189.0], [52.2, 64189.0], [52.3, 64189.0], [52.4, 64189.0], [52.5, 64189.0], [52.6, 64189.0], [52.7, 64189.0], [52.8, 64189.0], [52.9, 64189.0], [53.0, 64189.0], [53.1, 64189.0], [53.2, 64189.0], [53.3, 64189.0], [53.4, 64221.0], [53.5, 64221.0], [53.6, 64221.0], [53.7, 64221.0], [53.8, 64221.0], [53.9, 64221.0], [54.0, 64221.0], [54.1, 64221.0], [54.2, 64221.0], [54.3, 64221.0], [54.4, 64221.0], [54.5, 64221.0], [54.6, 64221.0], [54.7, 64221.0], [54.8, 64221.0], [54.9, 64221.0], [55.0, 64221.0], [55.1, 64221.0], [55.2, 64221.0], [55.3, 64221.0], [55.4, 64221.0], [55.5, 64221.0], [55.6, 64221.0], [55.7, 64221.0], [55.8, 64221.0], [55.9, 64221.0], [56.0, 64221.0], [56.1, 64221.0], [56.2, 64221.0], [56.3, 64221.0], [56.4, 64221.0], [56.5, 64221.0], [56.6, 64221.0], [56.7, 64270.0], [56.8, 64270.0], [56.9, 64270.0], [57.0, 64270.0], [57.1, 64270.0], [57.2, 64270.0], [57.3, 64270.0], [57.4, 64270.0], [57.5, 64270.0], [57.6, 64270.0], [57.7, 64270.0], [57.8, 64270.0], [57.9, 64270.0], [58.0, 64270.0], [58.1, 64270.0], [58.2, 64270.0], [58.3, 64270.0], [58.4, 64270.0], [58.5, 64270.0], [58.6, 64270.0], [58.7, 64270.0], [58.8, 64270.0], [58.9, 64270.0], [59.0, 64270.0], [59.1, 64270.0], [59.2, 64270.0], [59.3, 64270.0], [59.4, 64270.0], [59.5, 64270.0], [59.6, 64270.0], [59.7, 64270.0], [59.8, 64270.0], [59.9, 64270.0], [60.0, 64270.0], [60.1, 64288.0], [60.2, 64288.0], [60.3, 64288.0], [60.4, 64288.0], [60.5, 64288.0], [60.6, 64288.0], [60.7, 64288.0], [60.8, 64288.0], [60.9, 64288.0], [61.0, 64288.0], [61.1, 64288.0], [61.2, 64288.0], [61.3, 64288.0], [61.4, 64288.0], [61.5, 64288.0], [61.6, 64288.0], [61.7, 64288.0], [61.8, 64288.0], [61.9, 64288.0], [62.0, 64288.0], [62.1, 64288.0], [62.2, 64288.0], [62.3, 64288.0], [62.4, 64288.0], [62.5, 64288.0], [62.6, 64288.0], [62.7, 64288.0], [62.8, 64288.0], [62.9, 64288.0], [63.0, 64288.0], [63.1, 64288.0], [63.2, 64288.0], [63.3, 64288.0], [63.4, 64320.0], [63.5, 64320.0], [63.6, 64320.0], [63.7, 64320.0], [63.8, 64320.0], [63.9, 64320.0], [64.0, 64320.0], [64.1, 64320.0], [64.2, 64320.0], [64.3, 64320.0], [64.4, 64320.0], [64.5, 64320.0], [64.6, 64320.0], [64.7, 64320.0], [64.8, 64320.0], [64.9, 64320.0], [65.0, 64320.0], [65.1, 64320.0], [65.2, 64320.0], [65.3, 64320.0], [65.4, 64320.0], [65.5, 64320.0], [65.6, 64320.0], [65.7, 64320.0], [65.8, 64320.0], [65.9, 64320.0], [66.0, 64320.0], [66.1, 64320.0], [66.2, 64320.0], [66.3, 64320.0], [66.4, 64320.0], [66.5, 64320.0], [66.6, 64320.0], [66.7, 64384.0], [66.8, 64384.0], [66.9, 64384.0], [67.0, 64384.0], [67.1, 64384.0], [67.2, 64384.0], [67.3, 64384.0], [67.4, 64384.0], [67.5, 64384.0], [67.6, 64384.0], [67.7, 64384.0], [67.8, 64384.0], [67.9, 64384.0], [68.0, 64384.0], [68.1, 64384.0], [68.2, 64384.0], [68.3, 64384.0], [68.4, 64384.0], [68.5, 64384.0], [68.6, 64384.0], [68.7, 64384.0], [68.8, 64384.0], [68.9, 64384.0], [69.0, 64384.0], [69.1, 64384.0], [69.2, 64384.0], [69.3, 64384.0], [69.4, 64384.0], [69.5, 64384.0], [69.6, 64384.0], [69.7, 64384.0], [69.8, 64384.0], [69.9, 64384.0], [70.0, 64384.0], [70.1, 64431.0], [70.2, 64431.0], [70.3, 64431.0], [70.4, 64431.0], [70.5, 64431.0], [70.6, 64431.0], [70.7, 64431.0], [70.8, 64431.0], [70.9, 64431.0], [71.0, 64431.0], [71.1, 64431.0], [71.2, 64431.0], [71.3, 64431.0], [71.4, 64431.0], [71.5, 64431.0], [71.6, 64431.0], [71.7, 64431.0], [71.8, 64431.0], [71.9, 64431.0], [72.0, 64431.0], [72.1, 64431.0], [72.2, 64431.0], [72.3, 64431.0], [72.4, 64431.0], [72.5, 64431.0], [72.6, 64431.0], [72.7, 64431.0], [72.8, 64431.0], [72.9, 64431.0], [73.0, 64431.0], [73.1, 64431.0], [73.2, 64431.0], [73.3, 64431.0], [73.4, 64434.0], [73.5, 64434.0], [73.6, 64434.0], [73.7, 64434.0], [73.8, 64434.0], [73.9, 64434.0], [74.0, 64434.0], [74.1, 64434.0], [74.2, 64434.0], [74.3, 64434.0], [74.4, 64434.0], [74.5, 64434.0], [74.6, 64434.0], [74.7, 64434.0], [74.8, 64434.0], [74.9, 64434.0], [75.0, 64434.0], [75.1, 64434.0], [75.2, 64434.0], [75.3, 64434.0], [75.4, 64434.0], [75.5, 64434.0], [75.6, 64434.0], [75.7, 64434.0], [75.8, 64434.0], [75.9, 64434.0], [76.0, 64434.0], [76.1, 64434.0], [76.2, 64434.0], [76.3, 64434.0], [76.4, 64434.0], [76.5, 64434.0], [76.6, 64434.0], [76.7, 64452.0], [76.8, 64452.0], [76.9, 64452.0], [77.0, 64452.0], [77.1, 64452.0], [77.2, 64452.0], [77.3, 64452.0], [77.4, 64452.0], [77.5, 64452.0], [77.6, 64452.0], [77.7, 64452.0], [77.8, 64452.0], [77.9, 64452.0], [78.0, 64452.0], [78.1, 64452.0], [78.2, 64452.0], [78.3, 64452.0], [78.4, 64452.0], [78.5, 64452.0], [78.6, 64452.0], [78.7, 64452.0], [78.8, 64452.0], [78.9, 64452.0], [79.0, 64452.0], [79.1, 64452.0], [79.2, 64452.0], [79.3, 64452.0], [79.4, 64452.0], [79.5, 64452.0], [79.6, 64452.0], [79.7, 64452.0], [79.8, 64452.0], [79.9, 64452.0], [80.0, 64533.0], [80.1, 64533.0], [80.2, 64533.0], [80.3, 64533.0], [80.4, 64533.0], [80.5, 64533.0], [80.6, 64533.0], [80.7, 64533.0], [80.8, 64533.0], [80.9, 64533.0], [81.0, 64533.0], [81.1, 64533.0], [81.2, 64533.0], [81.3, 64533.0], [81.4, 64533.0], [81.5, 64533.0], [81.6, 64533.0], [81.7, 64533.0], [81.8, 64533.0], [81.9, 64533.0], [82.0, 64533.0], [82.1, 64533.0], [82.2, 64533.0], [82.3, 64533.0], [82.4, 64533.0], [82.5, 64533.0], [82.6, 64533.0], [82.7, 64533.0], [82.8, 64533.0], [82.9, 64533.0], [83.0, 64533.0], [83.1, 64533.0], [83.2, 64533.0], [83.3, 64533.0], [83.4, 64551.0], [83.5, 64551.0], [83.6, 64551.0], [83.7, 64551.0], [83.8, 64551.0], [83.9, 64551.0], [84.0, 64551.0], [84.1, 64551.0], [84.2, 64551.0], [84.3, 64551.0], [84.4, 64551.0], [84.5, 64551.0], [84.6, 64551.0], [84.7, 64551.0], [84.8, 64551.0], [84.9, 64551.0], [85.0, 64551.0], [85.1, 64551.0], [85.2, 64551.0], [85.3, 64551.0], [85.4, 64551.0], [85.5, 64551.0], [85.6, 64551.0], [85.7, 64551.0], [85.8, 64551.0], [85.9, 64551.0], [86.0, 64551.0], [86.1, 64551.0], [86.2, 64551.0], [86.3, 64551.0], [86.4, 64551.0], [86.5, 64551.0], [86.6, 64551.0], [86.7, 64599.0], [86.8, 64599.0], [86.9, 64599.0], [87.0, 64599.0], [87.1, 64599.0], [87.2, 64599.0], [87.3, 64599.0], [87.4, 64599.0], [87.5, 64599.0], [87.6, 64599.0], [87.7, 64599.0], [87.8, 64599.0], [87.9, 64599.0], [88.0, 64599.0], [88.1, 64599.0], [88.2, 64599.0], [88.3, 64599.0], [88.4, 64599.0], [88.5, 64599.0], [88.6, 64599.0], [88.7, 64599.0], [88.8, 64599.0], [88.9, 64599.0], [89.0, 64599.0], [89.1, 64599.0], [89.2, 64599.0], [89.3, 64599.0], [89.4, 64599.0], [89.5, 64599.0], [89.6, 64599.0], [89.7, 64599.0], [89.8, 64599.0], [89.9, 64599.0], [90.0, 64617.0], [90.1, 64617.0], [90.2, 64617.0], [90.3, 64617.0], [90.4, 64617.0], [90.5, 64617.0], [90.6, 64617.0], [90.7, 64617.0], [90.8, 64617.0], [90.9, 64617.0], [91.0, 64617.0], [91.1, 64617.0], [91.2, 64617.0], [91.3, 64617.0], [91.4, 64617.0], [91.5, 64617.0], [91.6, 64617.0], [91.7, 64617.0], [91.8, 64617.0], [91.9, 64617.0], [92.0, 64617.0], [92.1, 64617.0], [92.2, 64617.0], [92.3, 64617.0], [92.4, 64617.0], [92.5, 64617.0], [92.6, 64617.0], [92.7, 64617.0], [92.8, 64617.0], [92.9, 64617.0], [93.0, 64617.0], [93.1, 64617.0], [93.2, 64617.0], [93.3, 64617.0], [93.4, 64644.0], [93.5, 64644.0], [93.6, 64644.0], [93.7, 64644.0], [93.8, 64644.0], [93.9, 64644.0], [94.0, 64644.0], [94.1, 64644.0], [94.2, 64644.0], [94.3, 64644.0], [94.4, 64644.0], [94.5, 64644.0], [94.6, 64644.0], [94.7, 64644.0], [94.8, 64644.0], [94.9, 64644.0], [95.0, 64644.0], [95.1, 64644.0], [95.2, 64644.0], [95.3, 64644.0], [95.4, 64644.0], [95.5, 64644.0], [95.6, 64644.0], [95.7, 64644.0], [95.8, 64644.0], [95.9, 64644.0], [96.0, 64644.0], [96.1, 64644.0], [96.2, 64644.0], [96.3, 64644.0], [96.4, 64644.0], [96.5, 64644.0], [96.6, 64644.0], [96.7, 64715.0], [96.8, 64715.0], [96.9, 64715.0], [97.0, 64715.0], [97.1, 64715.0], [97.2, 64715.0], [97.3, 64715.0], [97.4, 64715.0], [97.5, 64715.0], [97.6, 64715.0], [97.7, 64715.0], [97.8, 64715.0], [97.9, 64715.0], [98.0, 64715.0], [98.1, 64715.0], [98.2, 64715.0], [98.3, 64715.0], [98.4, 64715.0], [98.5, 64715.0], [98.6, 64715.0], [98.7, 64715.0], [98.8, 64715.0], [98.9, 64715.0], [99.0, 64715.0], [99.1, 64715.0], [99.2, 64715.0], [99.3, 64715.0], [99.4, 64715.0], [99.5, 64715.0], [99.6, 64715.0], [99.7, 64715.0], [99.8, 64715.0], [99.9, 64715.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 60557.0], [0.1, 60557.0], [0.2, 60562.0], [0.3, 60562.0], [0.4, 60565.0], [0.5, 60566.0], [0.6, 60566.0], [0.7, 60566.0], [0.8, 60566.0], [0.9, 60570.0], [1.0, 60580.0], [1.1, 60580.0], [1.2, 60580.0], [1.3, 60580.0], [1.4, 60585.0], [1.5, 60589.0], [1.6, 60589.0], [1.7, 60595.0], [1.8, 60595.0], [1.9, 60596.0], [2.0, 60604.0], [2.1, 60604.0], [2.2, 60605.0], [2.3, 60605.0], [2.4, 60606.0], [2.5, 60607.0], [2.6, 60607.0], [2.7, 60610.0], [2.8, 60610.0], [2.9, 60611.0], [3.0, 60615.0], [3.1, 60615.0], [3.2, 60617.0], [3.3, 60617.0], [3.4, 60619.0], [3.5, 60619.0], [3.6, 60619.0], [3.7, 60620.0], [3.8, 60620.0], [3.9, 60625.0], [4.0, 60626.0], [4.1, 60626.0], [4.2, 60629.0], [4.3, 60629.0], [4.4, 60630.0], [4.5, 60633.0], [4.6, 60633.0], [4.7, 60633.0], [4.8, 60633.0], [4.9, 60644.0], [5.0, 60647.0], [5.1, 60647.0], [5.2, 60649.0], [5.3, 60649.0], [5.4, 60650.0], [5.5, 60651.0], [5.6, 60651.0], [5.7, 60652.0], [5.8, 60652.0], [5.9, 60653.0], [6.0, 60653.0], [6.1, 60656.0], [6.2, 60660.0], [6.3, 60660.0], [6.4, 60661.0], [6.5, 60661.0], [6.6, 60662.0], [6.7, 60665.0], [6.8, 60665.0], [6.9, 60665.0], [7.0, 60665.0], [7.1, 60668.0], [7.2, 60673.0], [7.3, 60673.0], [7.4, 60676.0], [7.5, 60676.0], [7.6, 60680.0], [7.7, 60681.0], [7.8, 60681.0], [7.9, 60685.0], [8.0, 60685.0], [8.1, 60689.0], [8.2, 60689.0], [8.3, 60689.0], [8.4, 60689.0], [8.5, 60689.0], [8.6, 60692.0], [8.7, 60692.0], [8.8, 60692.0], [8.9, 60695.0], [9.0, 60695.0], [9.1, 60697.0], [9.2, 60697.0], [9.3, 60697.0], [9.4, 60700.0], [9.5, 60700.0], [9.6, 60707.0], [9.7, 60708.0], [9.8, 60708.0], [9.9, 60709.0], [10.0, 60709.0], [10.1, 60709.0], [10.2, 60713.0], [10.3, 60713.0], [10.4, 60714.0], [10.5, 60714.0], [10.6, 60715.0], [10.7, 60717.0], [10.8, 60717.0], [10.9, 60719.0], [11.0, 60719.0], [11.1, 60719.0], [11.2, 60719.0], [11.3, 60719.0], [11.4, 60723.0], [11.5, 60730.0], [11.6, 60730.0], [11.7, 60730.0], [11.8, 60730.0], [11.9, 60731.0], [12.0, 60732.0], [12.1, 60732.0], [12.2, 60732.0], [12.3, 60732.0], [12.4, 60732.0], [12.5, 60736.0], [12.6, 60736.0], [12.7, 60740.0], [12.8, 60740.0], [12.9, 60742.0], [13.0, 60749.0], [13.1, 60749.0], [13.2, 60751.0], [13.3, 60751.0], [13.4, 60752.0], [13.5, 60758.0], [13.6, 60758.0], [13.7, 60758.0], [13.8, 60758.0], [13.9, 60758.0], [14.0, 60760.0], [14.1, 60760.0], [14.2, 60762.0], [14.3, 60762.0], [14.4, 60764.0], [14.5, 60765.0], [14.6, 60765.0], [14.7, 60767.0], [14.8, 60767.0], [14.9, 60770.0], [15.0, 60773.0], [15.1, 60773.0], [15.2, 60775.0], [15.3, 60775.0], [15.4, 60778.0], [15.5, 60779.0], [15.6, 60779.0], [15.7, 60780.0], [15.8, 60780.0], [15.9, 60781.0], [16.0, 60782.0], [16.1, 60782.0], [16.2, 60784.0], [16.3, 60784.0], [16.4, 60784.0], [16.5, 60786.0], [16.6, 60786.0], [16.7, 60789.0], [16.8, 60789.0], [16.9, 60801.0], [17.0, 60804.0], [17.1, 60804.0], [17.2, 60804.0], [17.3, 60804.0], [17.4, 60805.0], [17.5, 60807.0], [17.6, 60807.0], [17.7, 60807.0], [17.8, 60807.0], [17.9, 60808.0], [18.0, 60808.0], [18.1, 60808.0], [18.2, 60815.0], [18.3, 60815.0], [18.4, 60815.0], [18.5, 60816.0], [18.6, 60816.0], [18.7, 60817.0], [18.8, 60817.0], [18.9, 60819.0], [19.0, 60821.0], [19.1, 60821.0], [19.2, 60826.0], [19.3, 60826.0], [19.4, 60827.0], [19.5, 60829.0], [19.6, 60829.0], [19.7, 60829.0], [19.8, 60829.0], [19.9, 60829.0], [20.0, 60831.0], [20.1, 60831.0], [20.2, 60834.0], [20.3, 60834.0], [20.4, 60836.0], [20.5, 60840.0], [20.6, 60840.0], [20.7, 60842.0], [20.8, 60842.0], [20.9, 60843.0], [21.0, 60843.0], [21.1, 60851.0], [21.2, 60852.0], [21.3, 60852.0], [21.4, 60855.0], [21.5, 60855.0], [21.6, 60855.0], [21.7, 60857.0], [21.8, 60857.0], [21.9, 60857.0], [22.0, 60857.0], [22.1, 60857.0], [22.2, 60860.0], [22.3, 60860.0], [22.4, 60860.0], [22.5, 60860.0], [22.6, 60864.0], [22.7, 60865.0], [22.8, 60865.0], [22.9, 60866.0], [23.0, 60866.0], [23.1, 60869.0], [23.2, 60873.0], [23.3, 60873.0], [23.4, 60877.0], [23.5, 60877.0], [23.6, 60878.0], [23.7, 60878.0], [23.8, 60878.0], [23.9, 60879.0], [24.0, 60879.0], [24.1, 60879.0], [24.2, 60880.0], [24.3, 60880.0], [24.4, 60881.0], [24.5, 60881.0], [24.6, 60884.0], [24.7, 60886.0], [24.8, 60886.0], [24.9, 60891.0], [25.0, 60891.0], [25.1, 60894.0], [25.2, 60902.0], [25.3, 60902.0], [25.4, 60902.0], [25.5, 60902.0], [25.6, 60904.0], [25.7, 60906.0], [25.8, 60906.0], [25.9, 60906.0], [26.0, 60906.0], [26.1, 60906.0], [26.2, 60906.0], [26.3, 60906.0], [26.4, 60907.0], [26.5, 60907.0], [26.6, 60916.0], [26.7, 60916.0], [26.8, 60916.0], [26.9, 60918.0], [27.0, 60918.0], [27.1, 60918.0], [27.2, 60921.0], [27.3, 60921.0], [27.4, 60923.0], [27.5, 60923.0], [27.6, 60924.0], [27.7, 60925.0], [27.8, 60925.0], [27.9, 60926.0], [28.0, 60926.0], [28.1, 60926.0], [28.2, 60928.0], [28.3, 60928.0], [28.4, 60928.0], [28.5, 60928.0], [28.6, 60929.0], [28.7, 60932.0], [28.8, 60932.0], [28.9, 60933.0], [29.0, 60933.0], [29.1, 60935.0], [29.2, 60941.0], [29.3, 60941.0], [29.4, 60942.0], [29.5, 60942.0], [29.6, 60944.0], [29.7, 60948.0], [29.8, 60948.0], [29.9, 60950.0], [30.0, 60950.0], [30.1, 60950.0], [30.2, 60951.0], [30.3, 60951.0], [30.4, 60955.0], [30.5, 60955.0], [30.6, 60956.0], [30.7, 60956.0], [30.8, 60956.0], [30.9, 60960.0], [31.0, 60960.0], [31.1, 60965.0], [31.2, 60965.0], [31.3, 60965.0], [31.4, 60966.0], [31.5, 60966.0], [31.6, 60967.0], [31.7, 60967.0], [31.8, 60967.0], [31.9, 60968.0], [32.0, 60968.0], [32.1, 60968.0], [32.2, 60972.0], [32.3, 60972.0], [32.4, 60975.0], [32.5, 60975.0], [32.6, 60977.0], [32.7, 60979.0], [32.8, 60979.0], [32.9, 60984.0], [33.0, 60984.0], [33.1, 60985.0], [33.2, 60988.0], [33.3, 60988.0], [33.4, 60991.0], [33.5, 60991.0], [33.6, 60995.0], [33.7, 60996.0], [33.8, 60996.0], [33.9, 60999.0], [34.0, 61000.0], [34.1, 61000.0], [34.2, 61005.0], [34.3, 61005.0], [34.4, 61005.0], [34.5, 61007.0], [34.6, 61007.0], [34.7, 61008.0], [34.8, 61008.0], [34.9, 61009.0], [35.0, 61010.0], [35.1, 61010.0], [35.2, 61015.0], [35.3, 61015.0], [35.4, 61017.0], [35.5, 61020.0], [35.6, 61020.0], [35.7, 61023.0], [35.8, 61023.0], [35.9, 61026.0], [36.0, 61027.0], [36.1, 61027.0], [36.2, 61027.0], [36.3, 61027.0], [36.4, 61028.0], [36.5, 61031.0], [36.6, 61031.0], [36.7, 61032.0], [36.8, 61032.0], [36.9, 61032.0], [37.0, 61035.0], [37.1, 61035.0], [37.2, 61042.0], [37.3, 61042.0], [37.4, 61043.0], [37.5, 61046.0], [37.6, 61046.0], [37.7, 61048.0], [37.8, 61048.0], [37.9, 61051.0], [38.0, 61054.0], [38.1, 61054.0], [38.2, 61055.0], [38.3, 61055.0], [38.4, 61055.0], [38.5, 61056.0], [38.6, 61056.0], [38.7, 61059.0], [38.8, 61059.0], [38.9, 61059.0], [39.0, 61060.0], [39.1, 61060.0], [39.2, 61062.0], [39.3, 61062.0], [39.4, 61066.0], [39.5, 61067.0], [39.6, 61067.0], [39.7, 61072.0], [39.8, 61072.0], [39.9, 61072.0], [40.0, 61074.0], [40.1, 61074.0], [40.2, 61076.0], [40.3, 61076.0], [40.4, 61079.0], [40.5, 61079.0], [40.6, 61079.0], [40.7, 61081.0], [40.8, 61081.0], [40.9, 61082.0], [41.0, 61084.0], [41.1, 61084.0], [41.2, 61085.0], [41.3, 61085.0], [41.4, 61085.0], [41.5, 61090.0], [41.6, 61090.0], [41.7, 61090.0], [41.8, 61090.0], [41.9, 61093.0], [42.0, 61100.0], [42.1, 61100.0], [42.2, 61102.0], [42.3, 61102.0], [42.4, 61104.0], [42.5, 61105.0], [42.6, 61105.0], [42.7, 61106.0], [42.8, 61106.0], [42.9, 61106.0], [43.0, 61108.0], [43.1, 61108.0], [43.2, 61108.0], [43.3, 61108.0], [43.4, 61110.0], [43.5, 61112.0], [43.6, 61112.0], [43.7, 61116.0], [43.8, 61116.0], [43.9, 61117.0], [44.0, 61122.0], [44.1, 61122.0], [44.2, 61125.0], [44.3, 61125.0], [44.4, 61127.0], [44.5, 61129.0], [44.6, 61129.0], [44.7, 61130.0], [44.8, 61130.0], [44.9, 61133.0], [45.0, 61133.0], [45.1, 61133.0], [45.2, 61133.0], [45.3, 61133.0], [45.4, 61133.0], [45.5, 61135.0], [45.6, 61135.0], [45.7, 61141.0], [45.8, 61141.0], [45.9, 61141.0], [46.0, 61150.0], [46.1, 61150.0], [46.2, 61150.0], [46.3, 61150.0], [46.4, 61153.0], [46.5, 61154.0], [46.6, 61154.0], [46.7, 61156.0], [46.8, 61156.0], [46.9, 61157.0], [47.0, 61157.0], [47.1, 61157.0], [47.2, 61157.0], [47.3, 61157.0], [47.4, 61161.0], [47.5, 61166.0], [47.6, 61166.0], [47.7, 61166.0], [47.8, 61166.0], [47.9, 61171.0], [48.0, 61174.0], [48.1, 61174.0], [48.2, 61175.0], [48.3, 61175.0], [48.4, 61175.0], [48.5, 61175.0], [48.6, 61175.0], [48.7, 61177.0], [48.8, 61177.0], [48.9, 61178.0], [49.0, 61178.0], [49.1, 61178.0], [49.2, 61180.0], [49.3, 61180.0], [49.4, 61182.0], [49.5, 61185.0], [49.6, 61185.0], [49.7, 61189.0], [49.8, 61189.0], [49.9, 61189.0], [50.0, 61193.0], [50.1, 61193.0], [50.2, 61195.0], [50.3, 61195.0], [50.4, 61198.0], [50.5, 61199.0], [50.6, 61199.0], [50.7, 61200.0], [50.8, 61200.0], [50.9, 61204.0], [51.0, 61206.0], [51.1, 61206.0], [51.2, 61206.0], [51.3, 61206.0], [51.4, 61208.0], [51.5, 61210.0], [51.6, 61210.0], [51.7, 61210.0], [51.8, 61210.0], [51.9, 61211.0], [52.0, 61214.0], [52.1, 61214.0], [52.2, 61216.0], [52.3, 61216.0], [52.4, 61217.0], [52.5, 61217.0], [52.6, 61217.0], [52.7, 61223.0], [52.8, 61223.0], [52.9, 61228.0], [53.0, 61229.0], [53.1, 61229.0], [53.2, 61229.0], [53.3, 61229.0], [53.4, 61229.0], [53.5, 61235.0], [53.6, 61235.0], [53.7, 61238.0], [53.8, 61238.0], [53.9, 61239.0], [54.0, 61241.0], [54.1, 61241.0], [54.2, 61243.0], [54.3, 61243.0], [54.4, 61244.0], [54.5, 61249.0], [54.6, 61249.0], [54.7, 61249.0], [54.8, 61249.0], [54.9, 61251.0], [55.0, 61253.0], [55.1, 61253.0], [55.2, 61255.0], [55.3, 61255.0], [55.4, 61255.0], [55.5, 61256.0], [55.6, 61256.0], [55.7, 61257.0], [55.8, 61257.0], [55.9, 61259.0], [56.0, 61263.0], [56.1, 61263.0], [56.2, 61264.0], [56.3, 61264.0], [56.4, 61266.0], [56.5, 61272.0], [56.6, 61272.0], [56.7, 61274.0], [56.8, 61274.0], [56.9, 61274.0], [57.0, 61278.0], [57.1, 61278.0], [57.2, 61279.0], [57.3, 61279.0], [57.4, 61281.0], [57.5, 61283.0], [57.6, 61283.0], [57.7, 61288.0], [57.8, 61288.0], [57.9, 61288.0], [58.0, 61289.0], [58.1, 61289.0], [58.2, 61290.0], [58.3, 61290.0], [58.4, 61293.0], [58.5, 61296.0], [58.6, 61296.0], [58.7, 61299.0], [58.8, 61299.0], [58.9, 61299.0], [59.0, 61301.0], [59.1, 61301.0], [59.2, 61302.0], [59.3, 61302.0], [59.4, 61304.0], [59.5, 61306.0], [59.6, 61306.0], [59.7, 61306.0], [59.8, 61306.0], [59.9, 61307.0], [60.0, 61311.0], [60.1, 61311.0], [60.2, 61311.0], [60.3, 61311.0], [60.4, 61315.0], [60.5, 61317.0], [60.6, 61317.0], [60.7, 61317.0], [60.8, 61317.0], [60.9, 61319.0], [61.0, 61322.0], [61.1, 61322.0], [61.2, 61325.0], [61.3, 61325.0], [61.4, 61328.0], [61.5, 61329.0], [61.6, 61329.0], [61.7, 61331.0], [61.8, 61331.0], [61.9, 61331.0], [62.0, 61332.0], [62.1, 61332.0], [62.2, 61335.0], [62.3, 61335.0], [62.4, 61337.0], [62.5, 61344.0], [62.6, 61344.0], [62.7, 61349.0], [62.8, 61349.0], [62.9, 61349.0], [63.0, 61351.0], [63.1, 61351.0], [63.2, 61354.0], [63.3, 61354.0], [63.4, 61356.0], [63.5, 61358.0], [63.6, 61358.0], [63.7, 61358.0], [63.8, 61358.0], [63.9, 61358.0], [64.0, 61365.0], [64.1, 61365.0], [64.2, 61366.0], [64.3, 61366.0], [64.4, 61366.0], [64.5, 61367.0], [64.6, 61367.0], [64.7, 61371.0], [64.8, 61371.0], [64.9, 61374.0], [65.0, 61379.0], [65.1, 61379.0], [65.2, 61379.0], [65.3, 61379.0], [65.4, 61382.0], [65.5, 61382.0], [65.6, 61382.0], [65.7, 61383.0], [65.8, 61383.0], [65.9, 61384.0], [66.0, 61385.0], [66.1, 61385.0], [66.2, 61385.0], [66.3, 61385.0], [66.4, 61390.0], [66.5, 61390.0], [66.6, 61390.0], [66.7, 61393.0], [66.8, 61393.0], [66.9, 61396.0], [67.0, 61397.0], [67.1, 61397.0], [67.2, 61400.0], [67.3, 61400.0], [67.4, 61403.0], [67.5, 61406.0], [67.6, 61406.0], [67.7, 61406.0], [67.8, 61406.0], [67.9, 61407.0], [68.0, 61410.0], [68.1, 61410.0], [68.2, 61411.0], [68.3, 61411.0], [68.4, 61412.0], [68.5, 61415.0], [68.6, 61415.0], [68.7, 61416.0], [68.8, 61416.0], [68.9, 61418.0], [69.0, 61422.0], [69.1, 61422.0], [69.2, 61423.0], [69.3, 61423.0], [69.4, 61425.0], [69.5, 61425.0], [69.6, 61425.0], [69.7, 61427.0], [69.8, 61427.0], [69.9, 61429.0], [70.0, 61429.0], [70.1, 61429.0], [70.2, 61430.0], [70.3, 61430.0], [70.4, 61430.0], [70.5, 61432.0], [70.6, 61432.0], [70.7, 61435.0], [70.8, 61435.0], [70.9, 61438.0], [71.0, 61444.0], [71.1, 61444.0], [71.2, 61444.0], [71.3, 61444.0], [71.4, 61450.0], [71.5, 61451.0], [71.6, 61451.0], [71.7, 61451.0], [71.8, 61451.0], [71.9, 61455.0], [72.0, 61455.0], [72.1, 61455.0], [72.2, 61457.0], [72.3, 61457.0], [72.4, 61462.0], [72.5, 61464.0], [72.6, 61464.0], [72.7, 61466.0], [72.8, 61466.0], [72.9, 61466.0], [73.0, 61467.0], [73.1, 61467.0], [73.2, 61469.0], [73.3, 61469.0], [73.4, 61473.0], [73.5, 61473.0], [73.6, 61473.0], [73.7, 61477.0], [73.8, 61477.0], [73.9, 61478.0], [74.0, 61478.0], [74.1, 61478.0], [74.2, 61479.0], [74.3, 61479.0], [74.4, 61480.0], [74.5, 61485.0], [74.6, 61485.0], [74.7, 61493.0], [74.8, 61493.0], [74.9, 61494.0], [75.0, 61494.0], [75.1, 61494.0], [75.2, 61500.0], [75.3, 61500.0], [75.4, 61503.0], [75.5, 61505.0], [75.6, 61505.0], [75.7, 61505.0], [75.8, 61505.0], [75.9, 61506.0], [76.0, 61508.0], [76.1, 61508.0], [76.2, 61508.0], [76.3, 61508.0], [76.4, 61508.0], [76.5, 61514.0], [76.6, 61514.0], [76.7, 61515.0], [76.8, 61515.0], [76.9, 61515.0], [77.0, 61516.0], [77.1, 61516.0], [77.2, 61517.0], [77.3, 61517.0], [77.4, 61523.0], [77.5, 61524.0], [77.6, 61524.0], [77.7, 61524.0], [77.8, 61524.0], [77.9, 61527.0], [78.0, 61528.0], [78.1, 61528.0], [78.2, 61528.0], [78.3, 61528.0], [78.4, 61529.0], [78.5, 61532.0], [78.6, 61532.0], [78.7, 61533.0], [78.8, 61533.0], [78.9, 61535.0], [79.0, 61540.0], [79.1, 61540.0], [79.2, 61546.0], [79.3, 61546.0], [79.4, 61546.0], [79.5, 61546.0], [79.6, 61546.0], [79.7, 61550.0], [79.8, 61550.0], [79.9, 61552.0], [80.0, 61555.0], [80.1, 61555.0], [80.2, 61556.0], [80.3, 61556.0], [80.4, 61557.0], [80.5, 61561.0], [80.6, 61561.0], [80.7, 61565.0], [80.8, 61565.0], [80.9, 61565.0], [81.0, 61567.0], [81.1, 61567.0], [81.2, 61568.0], [81.3, 61568.0], [81.4, 61569.0], [81.5, 61570.0], [81.6, 61570.0], [81.7, 61573.0], [81.8, 61573.0], [81.9, 61575.0], [82.0, 61579.0], [82.1, 61579.0], [82.2, 61579.0], [82.3, 61579.0], [82.4, 61580.0], [82.5, 61582.0], [82.6, 61582.0], [82.7, 61583.0], [82.8, 61583.0], [82.9, 61585.0], [83.0, 61585.0], [83.1, 61586.0], [83.2, 61589.0], [83.3, 61589.0], [83.4, 61595.0], [83.5, 61595.0], [83.6, 61599.0], [83.7, 61601.0], [83.8, 61601.0], [83.9, 61603.0], [84.0, 61603.0], [84.1, 61604.0], [84.2, 61607.0], [84.3, 61607.0], [84.4, 61609.0], [84.5, 61609.0], [84.6, 61611.0], [84.7, 61613.0], [84.8, 61613.0], [84.9, 61614.0], [85.0, 61614.0], [85.1, 61616.0], [85.2, 61617.0], [85.3, 61617.0], [85.4, 61622.0], [85.5, 61622.0], [85.6, 61623.0], [85.7, 61625.0], [85.8, 61625.0], [85.9, 61625.0], [86.0, 61625.0], [86.1, 61628.0], [86.2, 61629.0], [86.3, 61629.0], [86.4, 61630.0], [86.5, 61630.0], [86.6, 61630.0], [86.7, 61635.0], [86.8, 61635.0], [86.9, 61635.0], [87.0, 61635.0], [87.1, 61636.0], [87.2, 61638.0], [87.3, 61638.0], [87.4, 61638.0], [87.5, 61638.0], [87.6, 61645.0], [87.7, 61646.0], [87.8, 61646.0], [87.9, 61649.0], [88.0, 61649.0], [88.1, 61650.0], [88.2, 61650.0], [88.3, 61650.0], [88.4, 61650.0], [88.5, 61650.0], [88.6, 61653.0], [88.7, 61657.0], [88.8, 61657.0], [88.9, 61657.0], [89.0, 61657.0], [89.1, 61658.0], [89.2, 61660.0], [89.3, 61660.0], [89.4, 61665.0], [89.5, 61665.0], [89.6, 61666.0], [89.7, 61670.0], [89.8, 61670.0], [89.9, 61672.0], [90.0, 61672.0], [90.1, 61674.0], [90.2, 61675.0], [90.3, 61675.0], [90.4, 61677.0], [90.5, 61677.0], [90.6, 61680.0], [90.7, 61680.0], [90.8, 61680.0], [90.9, 61680.0], [91.0, 61680.0], [91.1, 61681.0], [91.2, 61685.0], [91.3, 61685.0], [91.4, 61685.0], [91.5, 61685.0], [91.6, 61691.0], [91.7, 61693.0], [91.8, 61693.0], [91.9, 61693.0], [92.0, 61693.0], [92.1, 61695.0], [92.2, 61699.0], [92.3, 61699.0], [92.4, 61706.0], [92.5, 61706.0], [92.6, 61708.0], [92.7, 61709.0], [92.8, 61709.0], [92.9, 61710.0], [93.0, 61710.0], [93.1, 61710.0], [93.2, 61713.0], [93.3, 61713.0], [93.4, 61717.0], [93.5, 61717.0], [93.6, 61720.0], [93.7, 61721.0], [93.8, 61721.0], [93.9, 61722.0], [94.0, 61722.0], [94.1, 61723.0], [94.2, 61726.0], [94.3, 61726.0], [94.4, 61726.0], [94.5, 61726.0], [94.6, 61728.0], [94.7, 61729.0], [94.8, 61729.0], [94.9, 61730.0], [95.0, 61730.0], [95.1, 61731.0], [95.2, 61732.0], [95.3, 61732.0], [95.4, 61736.0], [95.5, 61736.0], [95.6, 61740.0], [95.7, 61744.0], [95.8, 61744.0], [95.9, 61749.0], [96.0, 61749.0], [96.1, 61749.0], [96.2, 61750.0], [96.3, 61750.0], [96.4, 61753.0], [96.5, 61753.0], [96.6, 61755.0], [96.7, 61757.0], [96.8, 61757.0], [96.9, 61758.0], [97.0, 61758.0], [97.1, 61763.0], [97.2, 61765.0], [97.3, 61765.0], [97.4, 61773.0], [97.5, 61773.0], [97.6, 61775.0], [97.7, 61779.0], [97.8, 61779.0], [97.9, 61780.0], [98.0, 61780.0], [98.1, 61786.0], [98.2, 61801.0], [98.3, 61801.0], [98.4, 61807.0], [98.5, 61807.0], [98.6, 61822.0], [98.7, 61829.0], [98.8, 61829.0], [98.9, 61834.0], [99.0, 61834.0], [99.1, 61851.0], [99.2, 61857.0], [99.3, 61857.0], [99.4, 61878.0], [99.5, 61878.0], [99.6, 61885.0], [99.7, 61905.0], [99.8, 61905.0], [99.9, 61934.0], [100.0, 61934.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 59800.0, "maxY": 53.0, "series": [{"data": [[60500.0, 39.0], [61300.0, 49.0], [60900.0, 53.0], [60600.0, 46.0], [61400.0, 49.0], [60700.0, 48.0], [61000.0, 50.0], [61200.0, 50.0], [60800.0, 50.0], [61100.0, 50.0], [60400.0, 7.0], [61600.0, 43.0], [61500.0, 50.0], [61700.0, 13.0], [61800.0, 3.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[60200.0, 33.0], [59800.0, 33.0], [60400.0, 37.0], [60300.0, 30.0], [59900.0, 34.0], [60500.0, 34.0], [60100.0, 36.0], [60600.0, 28.0], [60000.0, 30.0], [60700.0, 5.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[64100.0, 16.0], [64500.0, 3.0], [64200.0, 3.0], [64300.0, 2.0], [64600.0, 2.0], [64400.0, 3.0], [64700.0, 1.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[61200.0, 50.0], [60700.0, 45.0], [61000.0, 48.0], [60900.0, 53.0], [61300.0, 49.0], [60600.0, 44.0], [60800.0, 50.0], [61100.0, 52.0], [61400.0, 48.0], [60500.0, 12.0], [61600.0, 52.0], [61500.0, 51.0], [61700.0, 35.0], [61800.0, 9.0], [61900.0, 2.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1530.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 1530.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 1530.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 16.500000000000004, "minX": 1.61939634E12, "maxY": 318.99000000000007, "series": [{"data": [[1.61939634E12, 318.99000000000007]], "isOverall": false, "label": "UserType3_LB-split(Nutt)", "isController": false}, {"data": [[1.61939634E12, 315.7266666666664]], "isOverall": false, "label": "UserType2_LB-split(Boss)", "isController": false}, {"data": [[1.61939634E12, 16.500000000000004]], "isOverall": false, "label": "UserType1_LB-split(Dear)", "isController": false}, {"data": [[1.61939634E12, 168.32000000000002]], "isOverall": false, "label": "UserType4_LB-split(Haris)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939634E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 59800.0, "minX": 1.0, "maxY": 64715.0, "series": [{"data": [[48.0, 61295.5], [50.0, 61152.5], [53.0, 61721.0], [59.0, 61330.0], [58.0, 61320.0], [61.0, 61370.0], [63.0, 60870.0], [71.0, 61029.0], [69.0, 61640.0], [73.0, 61279.0], [79.0, 61245.0], [87.0, 60843.0], [84.0, 61643.0], [91.0, 60940.0], [89.0, 60842.0], [111.0, 61626.5], [110.0, 61477.0], [115.0, 60977.0], [117.0, 61287.75], [116.0, 60676.0], [120.0, 61376.666666666664], [127.0, 61332.71428571429], [158.0, 60974.0], [157.0, 60899.0], [156.0, 60999.0], [153.0, 61496.0], [152.0, 60749.0], [166.0, 61121.5], [164.0, 61148.5], [162.0, 61250.0], [160.0, 61399.0], [175.0, 61147.0], [173.0, 61371.5], [172.0, 61448.0], [171.0, 61297.0], [170.0, 61797.0], [169.0, 61473.5], [183.0, 60836.0], [180.0, 61735.0], [177.0, 61487.5], [191.0, 61131.0], [188.0, 61386.0], [186.0, 61261.0], [197.0, 60786.0], [215.0, 61618.0], [214.0, 61117.0], [211.0, 60997.5], [223.0, 60621.0], [222.0, 61166.0], [220.0, 61597.75], [219.0, 61373.0], [218.0, 60923.0], [231.0, 60622.0], [230.0, 60920.0], [229.0, 61242.5], [228.0, 60971.0], [227.0, 61173.0], [239.0, 61222.0], [238.0, 61046.5], [237.0, 61070.0], [236.0, 61321.0], [235.0, 61072.0], [233.0, 60670.0], [232.0, 61771.0], [243.0, 61020.5], [271.0, 60941.0], [269.0, 61517.5], [267.0, 61142.0], [287.0, 60765.0], [286.0, 60966.0], [284.0, 60666.0], [282.0, 61216.333333333336], [281.0, 60716.0], [278.0, 61448.5], [275.0, 61212.666666666664], [274.0, 60820.0], [302.0, 61215.0], [298.0, 60840.0], [295.0, 61714.0], [294.0, 61015.333333333336], [292.0, 61664.0], [290.0, 61315.0], [289.0, 61336.5], [348.0, 61188.0], [345.0, 61488.0], [366.0, 61537.0], [367.0, 61062.0], [365.0, 61186.75], [363.0, 61181.5], [362.0, 61112.5], [361.0, 60987.0], [357.0, 60588.0], [356.0, 61376.0], [354.0, 60959.75], [368.0, 61048.25], [408.0, 61700.0], [575.0, 60685.0], [572.0, 60913.0], [571.0, 61033.0], [568.0, 61142.0], [566.0, 61418.0], [605.0, 61104.333333333336], [607.0, 60991.0], [602.0, 61382.0], [601.0, 61334.0], [599.0, 61312.0], [597.0, 60840.0], [595.0, 60753.666666666664], [594.0, 60517.0], [588.0, 61467.0], [576.0, 60891.0], [581.0, 60817.0], [577.0, 61491.0], [586.0, 60936.0], [585.0, 60783.0], [623.0, 61680.0], [620.0, 60949.0], [617.0, 60924.0], [614.0, 61086.0], [609.0, 60733.0], [611.0, 61526.0], [613.0, 60575.0], [608.0, 61166.0], [654.0, 60873.0], [647.0, 61174.0], [641.0, 60588.0], [702.0, 61177.0], [731.0, 61127.0], [735.0, 60709.0], [734.0, 61479.5], [732.0, 60767.0], [729.0, 61183.0], [728.0, 61188.0], [723.0, 61558.5], [718.0, 60959.0], [719.0, 61559.0], [710.0, 61247.0], [708.0, 61068.0], [707.0, 60984.0], [716.0, 60660.0], [713.0, 61078.0], [712.0, 60634.0], [752.0, 61328.6], [759.0, 61472.0], [754.0, 61272.45454545455], [753.0, 60955.857142857145], [743.0, 61063.972222222226], [742.0, 60876.5], [744.0, 60901.666666666664], [747.0, 61332.0], [751.0, 60623.0], [740.0, 60663.0], [741.0, 61474.0], [739.0, 61367.83333333333], [737.0, 61108.2], [750.0, 61225.0], [749.0, 60973.0], [797.0, 61124.0], [790.0, 61417.0], [780.0, 61005.0], [778.0, 61075.0], [768.0, 60752.0], [828.0, 61554.0], [822.0, 61567.0], [811.0, 61217.0], [813.0, 60919.0], [808.0, 60751.0], [803.0, 60618.0], [861.0, 61622.0], [859.0, 60770.0], [849.0, 61049.0], [847.0, 61479.0], [845.0, 60677.0], [839.0, 61503.0], [841.0, 60725.0], [892.0, 61146.0], [894.0, 61596.0], [889.0, 61573.0], [885.0, 60575.0], [884.0, 61219.666666666664], [876.0, 61239.5], [875.0, 61215.0], [869.0, 61528.0], [867.0, 61414.0], [922.0, 61445.0], [927.0, 60993.0], [926.0, 60663.0], [919.0, 61167.0], [916.0, 60520.0], [912.0, 61011.0], [911.0, 61622.0], [900.0, 60900.0], [908.0, 60495.0], [907.0, 60958.5], [905.0, 61388.0], [904.0, 61293.0], [946.0, 60860.666666666664], [958.0, 60853.0], [957.0, 60907.6], [955.0, 61494.0], [953.0, 61194.0], [941.0, 60935.0], [933.0, 61046.0], [930.0, 61494.0], [938.0, 60696.0], [951.0, 60594.0], [949.0, 60968.0], [947.0, 61118.0], [945.0, 61363.0], [944.0, 61062.0], [986.0, 61005.333333333336], [978.0, 60508.0], [990.0, 61016.5], [991.0, 60662.666666666664], [976.0, 61152.0], [989.0, 61027.0], [984.0, 60818.0], [967.0, 60665.0], [966.0, 60847.0], [964.0, 61612.0], [963.0, 61481.0], [961.0, 60917.0], [975.0, 60952.0], [974.0, 60835.333333333336], [972.0, 60993.6], [971.0, 61442.0], [970.0, 61123.0], [969.0, 61295.0], [968.0, 61373.5], [983.0, 60610.0], [981.0, 61409.0], [979.0, 60858.0], [1012.0, 60979.6], [1021.0, 61214.0], [1023.0, 60948.5], [1011.0, 61240.5], [1009.0, 60912.0], [1020.0, 61282.0], [1019.0, 61062.0], [1018.0, 61229.0], [996.0, 61464.0], [1006.0, 60555.0], [1004.0, 60862.0], [1002.0, 61139.0], [1000.0, 61167.99999999999], [1014.0, 61406.0], [1015.0, 60541.0], [1013.0, 61056.0], [1080.0, 61090.0], [1081.0, 61102.0], [1057.0, 61543.0], [1056.0, 61185.0], [1059.0, 60935.0], [1058.0, 60691.0], [1064.0, 61511.0], [1060.0, 60753.0], [1078.0, 60541.0], [1077.0, 60539.0], [1074.0, 60696.0], [1072.0, 61285.0], [1055.0, 61455.0], [1030.0, 61177.0], [1025.0, 61263.0], [1032.0, 61541.0], [1031.0, 60993.0], [1035.0, 61087.0], [1034.0, 61020.0], [1039.0, 61391.333333333336], [1038.0, 61515.0], [1054.0, 60886.0], [1048.0, 61190.0], [1053.0, 61639.0], [1046.0, 60638.0], [1044.0, 61238.0], [1042.0, 61343.0], [1041.0, 61168.0], [1071.0, 60695.0], [1070.0, 60947.0], [1069.0, 61073.0], [1065.0, 60612.0], [1128.0, 61038.0], [1151.0, 60630.0], [1121.0, 61637.0], [1147.0, 60937.0], [1140.0, 61187.0], [1102.0, 61139.0], [1099.0, 60887.0], [1090.0, 61498.0], [1100.0, 60789.0], [1116.0, 61158.0], [1109.0, 60856.0], [1108.0, 60743.0], [1106.0, 60659.0], [1134.0, 60923.666666666664], [1133.0, 61617.0], [1130.0, 61459.0], [1126.0, 60760.0], [1125.0, 60834.0], [1209.0, 61378.0], [1213.0, 61384.0], [1211.0, 61327.0], [1215.0, 61075.0], [1199.0, 61326.0], [1198.0, 61279.0], [1207.0, 61533.5], [1206.0, 61157.666666666664], [1205.0, 61070.0], [1204.0, 60862.0], [1203.0, 60916.333333333336], [1202.0, 61543.0], [1201.0, 61299.0], [1155.0, 61653.0], [1153.0, 61542.0], [1226.0, 60909.0], [1230.0, 60986.636363636375], [1229.0, 61226.0], [1227.0, 61161.0], [1225.0, 60835.0], [1224.0, 60876.0], [1223.0, 60732.0], [1222.0, 60982.0], [1219.0, 60785.0], [1217.0, 61345.0], [1216.0, 61176.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[715.7900000000003, 61117.134999999995]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[1278.0, 60296.0], [1266.0, 60321.5], [1254.0, 60350.166666666664], [1242.0, 60377.75], [1335.0, 60421.0], [1339.0, 60221.0], [1317.0, 60504.0], [1315.0, 60267.0], [1322.0, 60354.0], [1321.0, 60388.5], [1325.0, 60271.5], [1323.0, 60577.0], [1327.0, 60201.0], [1326.0, 60198.0], [1338.0, 60295.333333333336], [1336.0, 60181.0], [1334.0, 60251.0], [1333.0, 59924.0], [1331.0, 60190.5], [1330.0, 59891.0], [1329.0, 60077.0], [1291.0, 59829.0], [1290.0, 60289.333333333336], [1289.0, 60207.0], [1311.0, 60356.0], [1309.0, 59932.0], [1308.0, 59980.0], [1307.0, 60307.0], [1306.0, 60232.0], [1305.0, 60427.0], [1302.0, 60263.09090909091], [1402.0, 60642.0], [1407.0, 60282.0], [1376.0, 60305.0], [1378.0, 60413.0], [1377.0, 60050.0], [1383.0, 59900.0], [1381.0, 60527.0], [1386.0, 60648.0], [1385.0, 60047.0], [1391.0, 60496.0], [1390.0, 60574.0], [1406.0, 60487.0], [1404.0, 60370.5], [1400.0, 60373.0], [1399.0, 60415.0], [1398.0, 60670.0], [1395.0, 59890.0], [1394.0, 60318.0], [1359.0, 59985.0], [1358.0, 60139.5], [1357.0, 60629.0], [1356.0, 60253.0], [1355.0, 60198.0], [1353.0, 60466.0], [1352.0, 60118.0], [1351.0, 60445.0], [1350.0, 59878.0], [1348.0, 60328.0], [1374.0, 59846.0], [1371.0, 60155.0], [1368.0, 60377.0], [1367.0, 60423.0], [1363.0, 60603.0], [1361.0, 60064.5], [1360.0, 59802.0], [1465.0, 60500.0], [1470.0, 60196.0], [1441.0, 60400.0], [1440.0, 60073.0], [1445.0, 59975.5], [1443.0, 60406.0], [1448.0, 60252.0], [1446.0, 60056.5], [1452.0, 59832.0], [1449.0, 59808.0], [1455.0, 60249.5], [1453.0, 60331.5], [1468.0, 60126.5], [1466.0, 60365.0], [1463.0, 60475.333333333336], [1461.0, 60635.0], [1459.0, 60323.0], [1458.0, 60178.4], [1456.0, 59991.0], [1422.0, 60092.0], [1421.0, 60388.0], [1418.0, 59993.0], [1417.0, 60071.0], [1416.0, 60210.0], [1415.0, 60219.0], [1414.0, 60597.0], [1413.0, 60592.0], [1411.0, 60633.0], [1408.0, 60564.0], [1439.0, 60337.0], [1438.0, 60244.0], [1437.0, 59800.0], [1435.0, 60555.0], [1431.0, 60518.0], [1430.0, 60107.0], [1428.0, 59966.0], [1426.0, 60179.0], [1521.0, 60577.0], [1526.0, 60343.0], [1530.0, 60219.54545454546], [1505.0, 60274.75], [1508.0, 59896.0], [1529.0, 60059.0], [1528.0, 60128.0], [1524.0, 60200.0], [1523.0, 60438.0], [1522.0, 60391.5], [1501.0, 60059.0], [1473.0, 59949.5], [1475.0, 59899.0], [1476.0, 60622.0], [1479.0, 60322.0], [1478.0, 60361.0], [1480.0, 60131.0], [1482.0, 60340.5], [1485.0, 60125.0], [1483.0, 60351.0], [1487.0, 60040.5], [1486.0, 59974.5], [1500.0, 59832.5], [1499.0, 60428.0], [1498.0, 60019.0], [1496.0, 60278.5], [1495.0, 59894.0], [1494.0, 60171.5], [1492.0, 60277.0], [1490.0, 60412.0], [1489.0, 60085.5], [1518.0, 60152.0], [1514.0, 60307.5], [1513.0, 60396.0], [1512.0, 59820.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1398.3033333333346, 60252.72999999998]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[8.0, 64105.0], [2.0, 64125.0], [9.0, 64108.0], [10.0, 64112.0], [11.0, 64129.0], [12.0, 64117.0], [3.0, 64112.0], [13.0, 64119.0], [14.0, 64431.0], [15.0, 64384.0], [16.0, 64119.0], [4.0, 64115.0], [1.0, 64121.0], [18.0, 64285.5], [19.0, 64270.0], [5.0, 64116.0], [21.0, 64566.0], [22.0, 64288.0], [6.0, 64102.0], [7.0, 64715.0], [30.0, 64393.5]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[16.500000000000004, 64281.3]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[59.0, 61358.76470588235], [61.0, 61885.0], [62.0, 61385.0], [67.0, 61084.0], [64.0, 61834.0], [68.0, 61116.333333333336], [82.0, 61407.0], [80.0, 61709.0], [87.0, 61457.0], [86.0, 61007.0], [84.0, 61807.0], [91.0, 60758.0], [94.0, 61607.0], [92.0, 61857.0], [99.0, 60956.0], [98.0, 61289.666666666664], [97.0, 61306.0], [96.0, 60857.0], [102.0, 60956.5], [101.0, 61905.0], [104.0, 61356.0], [108.0, 61355.2], [135.0, 61729.0], [134.0, 61004.5], [132.0, 61379.333333333336], [131.0, 61279.0], [143.0, 61053.0], [141.0, 61645.666666666664], [139.0, 61079.0], [137.0, 61179.0], [151.0, 61327.666666666664], [150.0, 61278.0], [149.0, 61878.0], [148.0, 61528.0], [146.0, 60878.0], [145.0, 60829.0], [183.0, 61601.0], [182.0, 60951.0], [180.0, 61376.5], [190.0, 60851.0], [189.0, 61351.0], [186.0, 61801.0], [197.0, 61275.0], [196.0, 61000.0], [194.0, 61552.0], [193.0, 61051.0], [192.0, 61251.0], [206.0, 61100.0], [204.0, 61416.666666666664], [203.0, 61300.0], [202.0, 60751.0], [209.0, 61189.0], [208.0, 61299.5], [246.0, 61423.0], [245.0, 61323.0], [255.0, 61405.666666666664], [253.0, 61273.0], [250.0, 61647.5], [249.0, 60923.0], [266.0, 61271.333333333336], [265.0, 61122.0], [263.0, 61672.0], [261.0, 60698.0], [259.0, 61047.5], [257.0, 61172.0], [278.0, 61444.0], [302.0, 61696.666666666664], [298.0, 60681.0], [291.0, 61130.0], [290.0, 60731.0], [319.0, 61270.0], [314.0, 60779.0], [312.0, 61229.0], [311.0, 61004.0], [310.0, 60977.0], [308.0, 61316.75], [306.0, 60630.0], [304.0, 61329.0], [334.0, 61341.0], [333.0, 61191.0], [330.0, 61266.0], [328.0, 61066.0], [327.0, 61167.0], [324.0, 61284.0], [321.0, 61317.0], [320.0, 61517.0], [345.0, 61027.0], [343.0, 61228.25], [342.0, 60916.0], [339.0, 60617.0], [338.0, 60816.0], [337.0, 60717.0], [336.0, 61765.0], [383.0, 61569.0], [382.0, 61544.5], [381.0, 60768.5], [377.0, 61110.666666666664], [375.0, 61579.0], [373.0, 61069.5], [372.0, 61546.0], [370.0, 60981.0], [398.0, 61677.0], [399.0, 61693.0], [396.0, 61262.333333333336], [394.0, 61609.0], [392.0, 61009.0], [391.0, 60873.0], [388.0, 60737.0], [386.0, 61072.0], [384.0, 61410.0], [413.0, 61259.0], [415.0, 61240.0], [412.0, 61174.5], [410.0, 61335.5], [407.0, 61263.0], [406.0, 61166.0], [405.0, 60966.0], [404.0, 61210.0], [403.0, 61002.0], [400.0, 60751.5], [419.0, 61041.0], [431.0, 61466.0], [430.0, 61306.0], [427.0, 61461.75], [425.0, 61315.0], [422.0, 60758.5], [421.0, 61425.0], [418.0, 60991.0], [417.0, 60865.0], [447.0, 61723.0], [446.0, 60656.0], [443.0, 61157.5], [440.0, 61740.0], [438.0, 61763.0], [437.0, 61049.0], [436.0, 61508.0], [434.0, 61277.0], [432.0, 60931.0], [462.0, 61104.0], [463.0, 61258.0], [461.0, 61354.0], [459.0, 61155.5], [458.0, 61638.0], [455.0, 61438.0], [453.0, 61139.666666666664], [452.0, 61251.0], [451.0, 61623.0], [449.0, 60807.5], [467.0, 61532.0], [465.0, 61308.5], [638.0, 61208.333333333336], [636.0, 61432.0], [635.0, 61383.0], [630.0, 60713.0], [629.0, 60906.0], [626.0, 61108.0], [620.0, 61264.0], [617.0, 61157.5], [670.0, 61131.0], [671.0, 61646.0], [667.0, 61288.0], [664.0, 61431.2], [662.0, 61658.0], [658.0, 60950.0], [657.0, 61708.0], [656.0, 61505.0], [655.0, 60808.0], [643.0, 61349.0], [641.0, 60855.0], [653.0, 60689.0], [651.0, 61059.0], [701.0, 60990.0], [702.0, 60840.0], [700.0, 60878.0], [698.0, 61296.0], [697.0, 60732.0], [696.0, 61680.0], [686.0, 60628.0], [672.0, 61311.0], [675.0, 60802.0], [673.0, 60697.0], [684.0, 61299.0], [683.0, 60580.0], [681.0, 61406.0], [680.0, 61695.0], [694.0, 60744.5], [693.0, 61479.0], [690.0, 60781.0], [689.0, 61174.0], [734.0, 61204.0], [735.0, 61117.5], [732.0, 60902.0], [731.0, 61528.0], [729.0, 60629.0], [728.0, 61049.33333333333], [713.0, 61726.0], [705.0, 61730.0], [704.0, 61382.0], [707.0, 61266.0], [706.0, 61278.0], [710.0, 60829.0], [709.0, 60827.0], [727.0, 61744.0], [725.0, 60880.0], [724.0, 61039.0], [722.0, 60647.0], [762.0, 61155.0], [767.0, 60775.0], [765.0, 61319.0], [766.0, 60935.0], [761.0, 61520.0], [757.0, 61529.0], [754.0, 61138.875], [753.0, 61750.0], [752.0, 61119.25], [743.0, 61150.375], [740.0, 61397.5], [745.0, 60852.0], [744.0, 61274.0], [746.0, 61381.0], [749.0, 60786.5], [750.0, 60732.0], [737.0, 61424.0], [736.0, 61369.0], [741.0, 60941.0], [742.0, 61242.62500000001], [775.0, 61390.0], [797.0, 61015.0], [796.0, 61241.0], [774.0, 60894.0], [773.0, 60884.0], [772.0, 61418.0], [770.0, 60719.0], [769.0, 61625.0], [768.0, 61691.0], [789.0, 61207.0], [786.0, 61037.75], [785.0, 61616.0], [782.0, 61293.0], [780.0, 60809.0], [778.0, 60837.5], [777.0, 61079.0], [829.0, 61133.0], [825.0, 61325.0], [807.0, 60768.5], [805.0, 61115.0], [804.0, 61385.0], [803.0, 60967.0], [801.0, 61473.0], [823.0, 61469.0], [821.0, 61005.0], [818.0, 61638.0], [816.0, 60932.6], [815.0, 61565.0], [811.0, 61081.666666666664], [810.0, 60692.0], [809.0, 61720.0], [808.0, 60640.0], [858.0, 61205.5], [862.0, 60898.5], [856.0, 61290.0], [839.0, 61077.0], [838.0, 61189.0], [837.0, 61650.0], [835.0, 61176.333333333336], [833.0, 60620.0], [832.0, 61466.5], [855.0, 61331.0], [850.0, 60589.0], [849.0, 61614.0], [847.0, 60782.0], [841.0, 61338.333333333336], [840.0, 61214.0], [869.0, 61053.0], [892.0, 61635.0], [894.0, 61177.0], [890.0, 60879.0], [885.0, 61047.5], [884.0, 61497.0], [876.0, 61153.0], [875.0, 61412.0], [872.0, 61367.0], [867.0, 61143.5], [866.0, 60566.0], [864.0, 61004.0], [904.0, 61059.0], [902.0, 60580.0], [900.0, 60566.0], [898.0, 61515.0], [1086.0, 61161.0], [1087.0, 60719.0], [1077.0, 61153.0], [1074.0, 61710.0], [1072.0, 61570.0], [1069.0, 60990.666666666664], [1057.0, 60860.0], [1056.0, 61336.0], [1053.0, 61005.0], [1034.0, 61032.0], [1142.0, 60557.0], [1149.0, 60758.0], [1150.0, 61107.5], [1120.0, 61477.0], [1125.0, 61416.75], [1121.0, 61358.0], [1132.0, 61430.0], [1130.0, 60968.0], [1148.0, 61706.0], [1147.0, 61390.0], [1145.0, 60826.0], [1137.0, 60926.0], [1096.0, 61110.0], [1092.0, 61561.0], [1090.0, 60647.0], [1088.0, 60709.0], [1094.0, 61102.0], [1118.0, 60817.0], [1116.0, 60877.0], [1114.0, 60758.0], [1113.0, 61228.0], [1112.0, 61310.0], [1110.0, 60752.0], [1109.0, 60968.0], [1105.0, 61413.0], [1104.0, 60778.0], [1135.0, 61427.0], [1134.0, 61090.0], [1164.0, 61307.5], [1169.0, 61077.08333333333], [1153.0, 61430.6], [1155.0, 60606.0], [1167.0, 61150.5], [1166.0, 61304.0], [1165.0, 61114.5], [1163.0, 61084.666666666664], [1162.0, 61005.0], [1161.0, 61252.75], [1158.0, 60753.5], [1157.0, 61125.0], [1156.0, 61416.0], [1159.0, 60921.0]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[603.6749999999996, 61192.076666666704]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1530.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61939634E12, "maxY": 4.9E-324, "series": [{"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939634E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 60252.72999999998, "minX": 1.61939634E12, "maxY": 64281.3, "series": [{"data": [[1.61939634E12, 61117.134999999995]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61939634E12, 60252.72999999998]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61939634E12, 64281.3]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61939634E12, 61192.076666666704]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939634E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61939634E12, "maxY": 4.9E-324, "series": [{"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939634E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61939634E12, "maxY": 4.9E-324, "series": [{"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61939634E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939634E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 59800.0, "minX": 1.61939634E12, "maxY": 64715.0, "series": [{"data": [[1.61939634E12, 64715.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61939634E12, 61633.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61939634E12, 64178.15]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61939634E12, 61724.35]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61939634E12, 59800.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61939634E12, 61020.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939634E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60252.0, "minX": 11.0, "maxY": 64115.0, "series": [{"data": [[17.0, 60252.0], [1115.0, 60919.0], [11.0, 64115.0], [387.0, 61266.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1115.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 11.0, "maxY": 4.9E-324, "series": [{"data": [[17.0, 0.0], [1115.0, 0.0], [11.0, 0.0], [387.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1115.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.5, "minX": 1.61939628E12, "maxY": 25.5, "series": [{"data": [[1.61939628E12, 25.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939628E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 25.5, "minX": 1.61939634E12, "maxY": 25.5, "series": [{"data": [[1.61939634E12, 25.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61939634E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.61939634E12, "maxY": 10.0, "series": [{"data": [[1.61939634E12, 0.5]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61939634E12, 10.0]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61939634E12, 5.0]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61939634E12, 10.0]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939634E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 25.5, "minX": 1.61939634E12, "maxY": 25.5, "series": [{"data": [[1.61939634E12, 25.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61939634E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

