/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 59759.0, "minX": 0.0, "maxY": 64698.0, "series": [{"data": [[0.0, 60426.0], [0.1, 60426.0], [0.2, 60428.0], [0.3, 60428.0], [0.4, 60428.0], [0.5, 60434.0], [0.6, 60434.0], [0.7, 60438.0], [0.8, 60439.0], [0.9, 60439.0], [1.0, 60449.0], [1.1, 60450.0], [1.2, 60450.0], [1.3, 60452.0], [1.4, 60452.0], [1.5, 60456.0], [1.6, 60457.0], [1.7, 60457.0], [1.8, 60458.0], [1.9, 60458.0], [2.0, 60458.0], [2.1, 60462.0], [2.2, 60464.0], [2.3, 60464.0], [2.4, 60464.0], [2.5, 60465.0], [2.6, 60465.0], [2.7, 60466.0], [2.8, 60466.0], [2.9, 60471.0], [3.0, 60478.0], [3.1, 60478.0], [3.2, 60479.0], [3.3, 60493.0], [3.4, 60493.0], [3.5, 60494.0], [3.6, 60496.0], [3.7, 60496.0], [3.8, 60501.0], [3.9, 60501.0], [4.0, 60503.0], [4.1, 60507.0], [4.2, 60507.0], [4.3, 60509.0], [4.4, 60510.0], [4.5, 60510.0], [4.6, 60512.0], [4.7, 60514.0], [4.8, 60514.0], [4.9, 60514.0], [5.0, 60518.0], [5.1, 60518.0], [5.2, 60521.0], [5.3, 60521.0], [5.4, 60522.0], [5.5, 60523.0], [5.6, 60523.0], [5.7, 60524.0], [5.8, 60526.0], [5.9, 60526.0], [6.0, 60529.0], [6.1, 60529.0], [6.2, 60529.0], [6.3, 60534.0], [6.4, 60534.0], [6.5, 60534.0], [6.6, 60538.0], [6.7, 60538.0], [6.8, 60541.0], [6.9, 60549.0], [7.0, 60549.0], [7.1, 60553.0], [7.2, 60561.0], [7.3, 60561.0], [7.4, 60565.0], [7.5, 60565.0], [7.6, 60565.0], [7.7, 60568.0], [7.8, 60568.0], [7.9, 60569.0], [8.0, 60570.0], [8.1, 60570.0], [8.2, 60571.0], [8.3, 60572.0], [8.4, 60572.0], [8.5, 60574.0], [8.6, 60581.0], [8.7, 60581.0], [8.8, 60582.0], [8.9, 60582.0], [9.0, 60584.0], [9.1, 60587.0], [9.2, 60587.0], [9.3, 60588.0], [9.4, 60591.0], [9.5, 60591.0], [9.6, 60591.0], [9.7, 60592.0], [9.8, 60592.0], [9.9, 60592.0], [10.0, 60593.0], [10.1, 60593.0], [10.2, 60594.0], [10.3, 60594.0], [10.4, 60598.0], [10.5, 60599.0], [10.6, 60599.0], [10.7, 60604.0], [10.8, 60611.0], [10.9, 60611.0], [11.0, 60614.0], [11.1, 60617.0], [11.2, 60617.0], [11.3, 60622.0], [11.4, 60622.0], [11.5, 60624.0], [11.6, 60629.0], [11.7, 60629.0], [11.8, 60631.0], [11.9, 60631.0], [12.0, 60631.0], [12.1, 60633.0], [12.2, 60634.0], [12.3, 60634.0], [12.4, 60634.0], [12.5, 60635.0], [12.6, 60635.0], [12.7, 60637.0], [12.8, 60637.0], [12.9, 60640.0], [13.0, 60641.0], [13.1, 60641.0], [13.2, 60645.0], [13.3, 60646.0], [13.4, 60646.0], [13.5, 60648.0], [13.6, 60650.0], [13.7, 60650.0], [13.8, 60650.0], [13.9, 60650.0], [14.0, 60654.0], [14.1, 60657.0], [14.2, 60657.0], [14.3, 60658.0], [14.4, 60663.0], [14.5, 60663.0], [14.6, 60664.0], [14.7, 60665.0], [14.8, 60665.0], [14.9, 60669.0], [15.0, 60670.0], [15.1, 60670.0], [15.2, 60671.0], [15.3, 60671.0], [15.4, 60673.0], [15.5, 60681.0], [15.6, 60681.0], [15.7, 60681.0], [15.8, 60685.0], [15.9, 60685.0], [16.0, 60689.0], [16.1, 60690.0], [16.2, 60690.0], [16.3, 60694.0], [16.4, 60694.0], [16.5, 60694.0], [16.6, 60701.0], [16.7, 60701.0], [16.8, 60702.0], [16.9, 60706.0], [17.0, 60706.0], [17.1, 60708.0], [17.2, 60708.0], [17.3, 60708.0], [17.4, 60709.0], [17.5, 60709.0], [17.6, 60709.0], [17.7, 60713.0], [17.8, 60713.0], [17.9, 60714.0], [18.0, 60714.0], [18.1, 60714.0], [18.2, 60718.0], [18.3, 60722.0], [18.4, 60722.0], [18.5, 60724.0], [18.6, 60725.0], [18.7, 60725.0], [18.8, 60726.0], [18.9, 60726.0], [19.0, 60726.0], [19.1, 60727.0], [19.2, 60727.0], [19.3, 60729.0], [19.4, 60731.0], [19.5, 60731.0], [19.6, 60735.0], [19.7, 60736.0], [19.8, 60736.0], [19.9, 60737.0], [20.0, 60741.0], [20.1, 60741.0], [20.2, 60742.0], [20.3, 60742.0], [20.4, 60747.0], [20.5, 60749.0], [20.6, 60749.0], [20.7, 60753.0], [20.8, 60754.0], [20.9, 60754.0], [21.0, 60755.0], [21.1, 60757.0], [21.2, 60757.0], [21.3, 60758.0], [21.4, 60758.0], [21.5, 60759.0], [21.6, 60760.0], [21.7, 60760.0], [21.8, 60765.0], [21.9, 60766.0], [22.0, 60766.0], [22.1, 60768.0], [22.2, 60768.0], [22.3, 60768.0], [22.4, 60770.0], [22.5, 60772.0], [22.6, 60772.0], [22.7, 60773.0], [22.8, 60773.0], [22.9, 60776.0], [23.0, 60776.0], [23.1, 60776.0], [23.2, 60776.0], [23.3, 60778.0], [23.4, 60778.0], [23.5, 60779.0], [23.6, 60786.0], [23.7, 60786.0], [23.8, 60787.0], [23.9, 60787.0], [24.0, 60787.0], [24.1, 60788.0], [24.2, 60788.0], [24.3, 60789.0], [24.4, 60793.0], [24.5, 60793.0], [24.6, 60794.0], [24.7, 60795.0], [24.8, 60795.0], [24.9, 60800.0], [25.0, 60800.0], [25.1, 60800.0], [25.2, 60806.0], [25.3, 60806.0], [25.4, 60813.0], [25.5, 60816.0], [25.6, 60816.0], [25.7, 60818.0], [25.8, 60820.0], [25.9, 60820.0], [26.0, 60823.0], [26.1, 60823.0], [26.2, 60823.0], [26.3, 60824.0], [26.4, 60824.0], [26.5, 60824.0], [26.6, 60829.0], [26.7, 60829.0], [26.8, 60831.0], [26.9, 60832.0], [27.0, 60832.0], [27.1, 60832.0], [27.2, 60835.0], [27.3, 60835.0], [27.4, 60838.0], [27.5, 60838.0], [27.6, 60838.0], [27.7, 60839.0], [27.8, 60839.0], [27.9, 60841.0], [28.0, 60844.0], [28.1, 60844.0], [28.2, 60844.0], [28.3, 60846.0], [28.4, 60846.0], [28.5, 60846.0], [28.6, 60848.0], [28.7, 60848.0], [28.8, 60851.0], [28.9, 60851.0], [29.0, 60855.0], [29.1, 60856.0], [29.2, 60856.0], [29.3, 60858.0], [29.4, 60860.0], [29.5, 60860.0], [29.6, 60860.0], [29.7, 60862.0], [29.8, 60862.0], [29.9, 60863.0], [30.0, 60864.0], [30.1, 60864.0], [30.2, 60869.0], [30.3, 60869.0], [30.4, 60874.0], [30.5, 60876.0], [30.6, 60876.0], [30.7, 60877.0], [30.8, 60878.0], [30.9, 60878.0], [31.0, 60879.0], [31.1, 60881.0], [31.2, 60881.0], [31.3, 60883.0], [31.4, 60883.0], [31.5, 60885.0], [31.6, 60888.0], [31.7, 60888.0], [31.8, 60888.0], [31.9, 60890.0], [32.0, 60890.0], [32.1, 60890.0], [32.2, 60893.0], [32.3, 60893.0], [32.4, 60898.0], [32.5, 60900.0], [32.6, 60900.0], [32.7, 60900.0], [32.8, 60900.0], [32.9, 60902.0], [33.0, 60904.0], [33.1, 60904.0], [33.2, 60906.0], [33.3, 60907.0], [33.4, 60907.0], [33.5, 60908.0], [33.6, 60909.0], [33.7, 60909.0], [33.8, 60910.0], [33.9, 60910.0], [34.0, 60913.0], [34.1, 60916.0], [34.2, 60916.0], [34.3, 60918.0], [34.4, 60919.0], [34.5, 60919.0], [34.6, 60921.0], [34.7, 60923.0], [34.8, 60923.0], [34.9, 60928.0], [35.0, 60929.0], [35.1, 60929.0], [35.2, 60933.0], [35.3, 60933.0], [35.4, 60942.0], [35.5, 60945.0], [35.6, 60945.0], [35.7, 60945.0], [35.8, 60948.0], [35.9, 60948.0], [36.0, 60950.0], [36.1, 60951.0], [36.2, 60951.0], [36.3, 60955.0], [36.4, 60955.0], [36.5, 60956.0], [36.6, 60956.0], [36.7, 60956.0], [36.8, 60956.0], [36.9, 60957.0], [37.0, 60957.0], [37.1, 60959.0], [37.2, 60959.0], [37.3, 60959.0], [37.4, 60961.0], [37.5, 60966.0], [37.6, 60966.0], [37.7, 60966.0], [37.8, 60966.0], [37.9, 60966.0], [38.0, 60967.0], [38.1, 60967.0], [38.2, 60970.0], [38.3, 60971.0], [38.4, 60971.0], [38.5, 60972.0], [38.6, 60972.0], [38.7, 60972.0], [38.8, 60977.0], [38.9, 60977.0], [39.0, 60979.0], [39.1, 60982.0], [39.2, 60982.0], [39.3, 60985.0], [39.4, 60985.0], [39.5, 60985.0], [39.6, 60986.0], [39.7, 60986.0], [39.8, 60986.0], [39.9, 60987.0], [40.0, 60993.0], [40.1, 60993.0], [40.2, 60994.0], [40.3, 60994.0], [40.4, 60998.0], [40.5, 61002.0], [40.6, 61002.0], [40.7, 61004.0], [40.8, 61006.0], [40.9, 61006.0], [41.0, 61007.0], [41.1, 61009.0], [41.2, 61009.0], [41.3, 61010.0], [41.4, 61010.0], [41.5, 61012.0], [41.6, 61013.0], [41.7, 61013.0], [41.8, 61013.0], [41.9, 61017.0], [42.0, 61017.0], [42.1, 61018.0], [42.2, 61022.0], [42.3, 61022.0], [42.4, 61025.0], [42.5, 61028.0], [42.6, 61028.0], [42.7, 61028.0], [42.8, 61028.0], [42.9, 61031.0], [43.0, 61033.0], [43.1, 61033.0], [43.2, 61034.0], [43.3, 61034.0], [43.4, 61034.0], [43.5, 61035.0], [43.6, 61037.0], [43.7, 61037.0], [43.8, 61040.0], [43.9, 61040.0], [44.0, 61040.0], [44.1, 61042.0], [44.2, 61042.0], [44.3, 61043.0], [44.4, 61044.0], [44.5, 61044.0], [44.6, 61045.0], [44.7, 61049.0], [44.8, 61049.0], [44.9, 61052.0], [45.0, 61062.0], [45.1, 61062.0], [45.2, 61063.0], [45.3, 61063.0], [45.4, 61065.0], [45.5, 61069.0], [45.6, 61069.0], [45.7, 61069.0], [45.8, 61069.0], [45.9, 61069.0], [46.0, 61074.0], [46.1, 61077.0], [46.2, 61077.0], [46.3, 61078.0], [46.4, 61078.0], [46.5, 61079.0], [46.6, 61079.0], [46.7, 61079.0], [46.8, 61080.0], [46.9, 61083.0], [47.0, 61083.0], [47.1, 61083.0], [47.2, 61090.0], [47.3, 61090.0], [47.4, 61091.0], [47.5, 61091.0], [47.6, 61091.0], [47.7, 61092.0], [47.8, 61092.0], [47.9, 61093.0], [48.0, 61093.0], [48.1, 61093.0], [48.2, 61095.0], [48.3, 61099.0], [48.4, 61099.0], [48.5, 61101.0], [48.6, 61101.0], [48.7, 61101.0], [48.8, 61106.0], [48.9, 61106.0], [49.0, 61106.0], [49.1, 61107.0], [49.2, 61107.0], [49.3, 61108.0], [49.4, 61109.0], [49.5, 61109.0], [49.6, 61109.0], [49.7, 61110.0], [49.8, 61110.0], [49.9, 61113.0], [50.0, 61114.0], [50.1, 61114.0], [50.2, 61121.0], [50.3, 61121.0], [50.4, 61121.0], [50.5, 61128.0], [50.6, 61128.0], [50.7, 61132.0], [50.8, 61135.0], [50.9, 61135.0], [51.0, 61136.0], [51.1, 61136.0], [51.2, 61136.0], [51.3, 61141.0], [51.4, 61141.0], [51.5, 61143.0], [51.6, 61143.0], [51.7, 61143.0], [51.8, 61143.0], [51.9, 61147.0], [52.0, 61147.0], [52.1, 61149.0], [52.2, 61151.0], [52.3, 61151.0], [52.4, 61156.0], [52.5, 61159.0], [52.6, 61159.0], [52.7, 61160.0], [52.8, 61160.0], [52.9, 61161.0], [53.0, 61162.0], [53.1, 61162.0], [53.2, 61164.0], [53.3, 61170.0], [53.4, 61170.0], [53.5, 61171.0], [53.6, 61172.0], [53.7, 61172.0], [53.8, 61173.0], [53.9, 61173.0], [54.0, 61174.0], [54.1, 61175.0], [54.2, 61175.0], [54.3, 61178.0], [54.4, 61179.0], [54.5, 61179.0], [54.6, 61183.0], [54.7, 61184.0], [54.8, 61184.0], [54.9, 61184.0], [55.0, 61190.0], [55.1, 61190.0], [55.2, 61191.0], [55.3, 61191.0], [55.4, 61194.0], [55.5, 61195.0], [55.6, 61195.0], [55.7, 61197.0], [55.8, 61201.0], [55.9, 61201.0], [56.0, 61205.0], [56.1, 61206.0], [56.2, 61206.0], [56.3, 61206.0], [56.4, 61206.0], [56.5, 61212.0], [56.6, 61213.0], [56.7, 61213.0], [56.8, 61213.0], [56.9, 61215.0], [57.0, 61215.0], [57.1, 61217.0], [57.2, 61219.0], [57.3, 61219.0], [57.4, 61220.0], [57.5, 61222.0], [57.6, 61222.0], [57.7, 61223.0], [57.8, 61223.0], [57.9, 61224.0], [58.0, 61226.0], [58.1, 61226.0], [58.2, 61226.0], [58.3, 61227.0], [58.4, 61227.0], [58.5, 61234.0], [58.6, 61234.0], [58.7, 61234.0], [58.8, 61238.0], [58.9, 61238.0], [59.0, 61239.0], [59.1, 61242.0], [59.2, 61242.0], [59.3, 61244.0], [59.4, 61244.0], [59.5, 61244.0], [59.6, 61247.0], [59.7, 61248.0], [59.8, 61248.0], [59.9, 61248.0], [60.0, 61249.0], [60.1, 61249.0], [60.2, 61254.0], [60.3, 61254.0], [60.4, 61261.0], [60.5, 61261.0], [60.6, 61261.0], [60.7, 61262.0], [60.8, 61263.0], [60.9, 61263.0], [61.0, 61267.0], [61.1, 61267.0], [61.2, 61267.0], [61.3, 61269.0], [61.4, 61269.0], [61.5, 61270.0], [61.6, 61272.0], [61.7, 61272.0], [61.8, 61274.0], [61.9, 61274.0], [62.0, 61274.0], [62.1, 61274.0], [62.2, 61282.0], [62.3, 61282.0], [62.4, 61282.0], [62.5, 61285.0], [62.6, 61285.0], [62.7, 61285.0], [62.8, 61285.0], [62.9, 61285.0], [63.0, 61289.0], [63.1, 61289.0], [63.2, 61291.0], [63.3, 61294.0], [63.4, 61294.0], [63.5, 61294.0], [63.6, 61295.0], [63.7, 61295.0], [63.8, 61295.0], [63.9, 61295.0], [64.0, 61297.0], [64.1, 61302.0], [64.2, 61302.0], [64.3, 61305.0], [64.4, 61306.0], [64.5, 61306.0], [64.6, 61309.0], [64.7, 61310.0], [64.8, 61310.0], [64.9, 61312.0], [65.0, 61315.0], [65.1, 61315.0], [65.2, 61318.0], [65.3, 61318.0], [65.4, 61318.0], [65.5, 61323.0], [65.6, 61323.0], [65.7, 61324.0], [65.8, 61326.0], [65.9, 61326.0], [66.0, 61329.0], [66.1, 61329.0], [66.2, 61329.0], [66.3, 61331.0], [66.4, 61331.0], [66.5, 61334.0], [66.6, 61334.0], [66.7, 61334.0], [66.8, 61336.0], [66.9, 61338.0], [67.0, 61338.0], [67.1, 61341.0], [67.2, 61341.0], [67.3, 61341.0], [67.4, 61342.0], [67.5, 61343.0], [67.6, 61343.0], [67.7, 61348.0], [67.8, 61348.0], [67.9, 61349.0], [68.0, 61351.0], [68.1, 61351.0], [68.2, 61352.0], [68.3, 61354.0], [68.4, 61354.0], [68.5, 61355.0], [68.6, 61360.0], [68.7, 61360.0], [68.8, 61360.0], [68.9, 61360.0], [69.0, 61360.0], [69.1, 61360.0], [69.2, 61360.0], [69.3, 61363.0], [69.4, 61364.0], [69.5, 61364.0], [69.6, 61367.0], [69.7, 61369.0], [69.8, 61369.0], [69.9, 61371.0], [70.0, 61376.0], [70.1, 61376.0], [70.2, 61376.0], [70.3, 61376.0], [70.4, 61382.0], [70.5, 61386.0], [70.6, 61386.0], [70.7, 61389.0], [70.8, 61389.0], [70.9, 61389.0], [71.0, 61390.0], [71.1, 61392.0], [71.2, 61392.0], [71.3, 61394.0], [71.4, 61394.0], [71.5, 61396.0], [71.6, 61397.0], [71.7, 61397.0], [71.8, 61399.0], [71.9, 61400.0], [72.0, 61400.0], [72.1, 61400.0], [72.2, 61410.0], [72.3, 61410.0], [72.4, 61411.0], [72.5, 61413.0], [72.6, 61413.0], [72.7, 61414.0], [72.8, 61414.0], [72.9, 61414.0], [73.0, 61416.0], [73.1, 61416.0], [73.2, 61417.0], [73.3, 61419.0], [73.4, 61419.0], [73.5, 61422.0], [73.6, 61423.0], [73.7, 61423.0], [73.8, 61425.0], [73.9, 61425.0], [74.0, 61426.0], [74.1, 61426.0], [74.2, 61426.0], [74.3, 61426.0], [74.4, 61428.0], [74.5, 61428.0], [74.6, 61430.0], [74.7, 61433.0], [74.8, 61433.0], [74.9, 61436.0], [75.0, 61437.0], [75.1, 61437.0], [75.2, 61439.0], [75.3, 61439.0], [75.4, 61446.0], [75.5, 61453.0], [75.6, 61453.0], [75.7, 61453.0], [75.8, 61454.0], [75.9, 61454.0], [76.0, 61458.0], [76.1, 61458.0], [76.2, 61458.0], [76.3, 61460.0], [76.4, 61460.0], [76.5, 61461.0], [76.6, 61462.0], [76.7, 61462.0], [76.8, 61465.0], [76.9, 61468.0], [77.0, 61468.0], [77.1, 61469.0], [77.2, 61471.0], [77.3, 61471.0], [77.4, 61474.0], [77.5, 61476.0], [77.6, 61476.0], [77.7, 61479.0], [77.8, 61479.0], [77.9, 61480.0], [78.0, 61481.0], [78.1, 61481.0], [78.2, 61482.0], [78.3, 61485.0], [78.4, 61485.0], [78.5, 61486.0], [78.6, 61489.0], [78.7, 61489.0], [78.8, 61491.0], [78.9, 61491.0], [79.0, 61493.0], [79.1, 61494.0], [79.2, 61494.0], [79.3, 61497.0], [79.4, 61498.0], [79.5, 61498.0], [79.6, 61504.0], [79.7, 61504.0], [79.8, 61504.0], [79.9, 61508.0], [80.0, 61509.0], [80.1, 61509.0], [80.2, 61510.0], [80.3, 61510.0], [80.4, 61517.0], [80.5, 61518.0], [80.6, 61518.0], [80.7, 61518.0], [80.8, 61521.0], [80.9, 61521.0], [81.0, 61522.0], [81.1, 61523.0], [81.2, 61523.0], [81.3, 61526.0], [81.4, 61526.0], [81.5, 61527.0], [81.6, 61528.0], [81.7, 61528.0], [81.8, 61530.0], [81.9, 61535.0], [82.0, 61535.0], [82.1, 61536.0], [82.2, 61538.0], [82.3, 61538.0], [82.4, 61541.0], [82.5, 61542.0], [82.6, 61542.0], [82.7, 61542.0], [82.8, 61542.0], [82.9, 61542.0], [83.0, 61544.0], [83.1, 61544.0], [83.2, 61544.0], [83.3, 61545.0], [83.4, 61545.0], [83.5, 61548.0], [83.6, 61553.0], [83.7, 61553.0], [83.8, 61554.0], [83.9, 61554.0], [84.0, 61556.0], [84.1, 61557.0], [84.2, 61557.0], [84.3, 61561.0], [84.4, 61563.0], [84.5, 61563.0], [84.6, 61567.0], [84.7, 61568.0], [84.8, 61568.0], [84.9, 61568.0], [85.0, 61570.0], [85.1, 61570.0], [85.2, 61574.0], [85.3, 61574.0], [85.4, 61574.0], [85.5, 61576.0], [85.6, 61576.0], [85.7, 61579.0], [85.8, 61581.0], [85.9, 61581.0], [86.0, 61581.0], [86.1, 61584.0], [86.2, 61584.0], [86.3, 61588.0], [86.4, 61588.0], [86.5, 61588.0], [86.6, 61592.0], [86.7, 61592.0], [86.8, 61592.0], [86.9, 61594.0], [87.0, 61594.0], [87.1, 61595.0], [87.2, 61599.0], [87.3, 61599.0], [87.4, 61601.0], [87.5, 61602.0], [87.6, 61602.0], [87.7, 61605.0], [87.8, 61605.0], [87.9, 61605.0], [88.0, 61606.0], [88.1, 61606.0], [88.2, 61606.0], [88.3, 61610.0], [88.4, 61610.0], [88.5, 61610.0], [88.6, 61615.0], [88.7, 61615.0], [88.8, 61618.0], [88.9, 61618.0], [89.0, 61619.0], [89.1, 61619.0], [89.2, 61619.0], [89.3, 61620.0], [89.4, 61624.0], [89.5, 61624.0], [89.6, 61628.0], [89.7, 61628.0], [89.8, 61628.0], [89.9, 61628.0], [90.0, 61629.0], [90.1, 61629.0], [90.2, 61629.0], [90.3, 61629.0], [90.4, 61631.0], [90.5, 61637.0], [90.6, 61637.0], [90.7, 61643.0], [90.8, 61645.0], [90.9, 61645.0], [91.0, 61647.0], [91.1, 61648.0], [91.2, 61648.0], [91.3, 61648.0], [91.4, 61648.0], [91.5, 61652.0], [91.6, 61654.0], [91.7, 61654.0], [91.8, 61654.0], [91.9, 61656.0], [92.0, 61656.0], [92.1, 61657.0], [92.2, 61659.0], [92.3, 61659.0], [92.4, 61659.0], [92.5, 61661.0], [92.6, 61661.0], [92.7, 61664.0], [92.8, 61664.0], [92.9, 61667.0], [93.0, 61668.0], [93.1, 61668.0], [93.2, 61672.0], [93.3, 61673.0], [93.4, 61673.0], [93.5, 61673.0], [93.6, 61675.0], [93.7, 61675.0], [93.8, 61679.0], [93.9, 61679.0], [94.0, 61685.0], [94.1, 61685.0], [94.2, 61685.0], [94.3, 61685.0], [94.4, 61689.0], [94.5, 61689.0], [94.6, 61689.0], [94.7, 61690.0], [94.8, 61690.0], [94.9, 61696.0], [95.0, 61697.0], [95.1, 61697.0], [95.2, 61698.0], [95.3, 61698.0], [95.4, 61702.0], [95.5, 61706.0], [95.6, 61706.0], [95.7, 61710.0], [95.8, 61716.0], [95.9, 61716.0], [96.0, 61719.0], [96.1, 61725.0], [96.2, 61725.0], [96.3, 61738.0], [96.4, 61738.0], [96.5, 61744.0], [96.6, 61747.0], [96.7, 61747.0], [96.8, 61754.0], [96.9, 61765.0], [97.0, 61765.0], [97.1, 61772.0], [97.2, 61772.0], [97.3, 61772.0], [97.4, 61780.0], [97.5, 61783.0], [97.6, 61783.0], [97.7, 61802.0], [97.8, 61802.0], [97.9, 61816.0], [98.0, 61823.0], [98.1, 61823.0], [98.2, 61829.0], [98.3, 61836.0], [98.4, 61836.0], [98.5, 61843.0], [98.6, 61845.0], [98.7, 61845.0], [98.8, 61865.0], [98.9, 61865.0], [99.0, 61872.0], [99.1, 61893.0], [99.2, 61893.0], [99.3, 61901.0], [99.4, 61929.0], [99.5, 61929.0], [99.6, 61936.0], [99.7, 61957.0], [99.8, 61957.0], [99.9, 61971.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 59759.0], [0.1, 59759.0], [0.2, 59759.0], [0.3, 59759.0], [0.4, 59761.0], [0.5, 59761.0], [0.6, 59761.0], [0.7, 59764.0], [0.8, 59764.0], [0.9, 59764.0], [1.0, 59765.0], [1.1, 59765.0], [1.2, 59765.0], [1.3, 59767.0], [1.4, 59767.0], [1.5, 59767.0], [1.6, 59768.0], [1.7, 59768.0], [1.8, 59768.0], [1.9, 59769.0], [2.0, 59769.0], [2.1, 59769.0], [2.2, 59773.0], [2.3, 59773.0], [2.4, 59773.0], [2.5, 59774.0], [2.6, 59774.0], [2.7, 59774.0], [2.8, 59774.0], [2.9, 59778.0], [3.0, 59778.0], [3.1, 59778.0], [3.2, 59780.0], [3.3, 59780.0], [3.4, 59780.0], [3.5, 59785.0], [3.6, 59785.0], [3.7, 59785.0], [3.8, 59785.0], [3.9, 59785.0], [4.0, 59785.0], [4.1, 59790.0], [4.2, 59790.0], [4.3, 59790.0], [4.4, 59790.0], [4.5, 59790.0], [4.6, 59790.0], [4.7, 59791.0], [4.8, 59791.0], [4.9, 59791.0], [5.0, 59796.0], [5.1, 59796.0], [5.2, 59796.0], [5.3, 59796.0], [5.4, 59800.0], [5.5, 59800.0], [5.6, 59800.0], [5.7, 59801.0], [5.8, 59801.0], [5.9, 59801.0], [6.0, 59804.0], [6.1, 59804.0], [6.2, 59804.0], [6.3, 59806.0], [6.4, 59806.0], [6.5, 59806.0], [6.6, 59812.0], [6.7, 59812.0], [6.8, 59812.0], [6.9, 59816.0], [7.0, 59816.0], [7.1, 59816.0], [7.2, 59828.0], [7.3, 59828.0], [7.4, 59828.0], [7.5, 59840.0], [7.6, 59840.0], [7.7, 59840.0], [7.8, 59840.0], [7.9, 59850.0], [8.0, 59850.0], [8.1, 59850.0], [8.2, 59859.0], [8.3, 59859.0], [8.4, 59859.0], [8.5, 59860.0], [8.6, 59860.0], [8.7, 59860.0], [8.8, 59861.0], [8.9, 59861.0], [9.0, 59861.0], [9.1, 59863.0], [9.2, 59863.0], [9.3, 59863.0], [9.4, 59863.0], [9.5, 59863.0], [9.6, 59863.0], [9.7, 59864.0], [9.8, 59864.0], [9.9, 59864.0], [10.0, 59866.0], [10.1, 59866.0], [10.2, 59866.0], [10.3, 59866.0], [10.4, 59870.0], [10.5, 59870.0], [10.6, 59870.0], [10.7, 59874.0], [10.8, 59874.0], [10.9, 59874.0], [11.0, 59877.0], [11.1, 59877.0], [11.2, 59877.0], [11.3, 59879.0], [11.4, 59879.0], [11.5, 59879.0], [11.6, 59884.0], [11.7, 59884.0], [11.8, 59884.0], [11.9, 59884.0], [12.0, 59884.0], [12.1, 59884.0], [12.2, 59886.0], [12.3, 59886.0], [12.4, 59886.0], [12.5, 59892.0], [12.6, 59892.0], [12.7, 59892.0], [12.8, 59892.0], [12.9, 59894.0], [13.0, 59894.0], [13.1, 59894.0], [13.2, 59897.0], [13.3, 59897.0], [13.4, 59897.0], [13.5, 59899.0], [13.6, 59899.0], [13.7, 59899.0], [13.8, 59902.0], [13.9, 59902.0], [14.0, 59902.0], [14.1, 59902.0], [14.2, 59902.0], [14.3, 59902.0], [14.4, 59902.0], [14.5, 59902.0], [14.6, 59902.0], [14.7, 59910.0], [14.8, 59910.0], [14.9, 59910.0], [15.0, 59913.0], [15.1, 59913.0], [15.2, 59913.0], [15.3, 59913.0], [15.4, 59924.0], [15.5, 59924.0], [15.6, 59924.0], [15.7, 59926.0], [15.8, 59926.0], [15.9, 59926.0], [16.0, 59926.0], [16.1, 59926.0], [16.2, 59926.0], [16.3, 59939.0], [16.4, 59939.0], [16.5, 59939.0], [16.6, 59947.0], [16.7, 59947.0], [16.8, 59947.0], [16.9, 59953.0], [17.0, 59953.0], [17.1, 59953.0], [17.2, 59954.0], [17.3, 59954.0], [17.4, 59954.0], [17.5, 59954.0], [17.6, 59954.0], [17.7, 59954.0], [17.8, 59954.0], [17.9, 59956.0], [18.0, 59956.0], [18.1, 59956.0], [18.2, 59958.0], [18.3, 59958.0], [18.4, 59958.0], [18.5, 59964.0], [18.6, 59964.0], [18.7, 59964.0], [18.8, 59965.0], [18.9, 59965.0], [19.0, 59965.0], [19.1, 59966.0], [19.2, 59966.0], [19.3, 59966.0], [19.4, 59966.0], [19.5, 59966.0], [19.6, 59966.0], [19.7, 59969.0], [19.8, 59969.0], [19.9, 59969.0], [20.0, 59973.0], [20.1, 59973.0], [20.2, 59973.0], [20.3, 59973.0], [20.4, 59975.0], [20.5, 59975.0], [20.6, 59975.0], [20.7, 59980.0], [20.8, 59980.0], [20.9, 59980.0], [21.0, 59981.0], [21.1, 59981.0], [21.2, 59981.0], [21.3, 59981.0], [21.4, 59981.0], [21.5, 59981.0], [21.6, 59985.0], [21.7, 59985.0], [21.8, 59985.0], [21.9, 59987.0], [22.0, 59987.0], [22.1, 59987.0], [22.2, 59990.0], [22.3, 59990.0], [22.4, 59990.0], [22.5, 59992.0], [22.6, 59992.0], [22.7, 59992.0], [22.8, 59992.0], [22.9, 59993.0], [23.0, 59993.0], [23.1, 59993.0], [23.2, 59993.0], [23.3, 59993.0], [23.4, 59993.0], [23.5, 60000.0], [23.6, 60000.0], [23.7, 60000.0], [23.8, 60000.0], [23.9, 60000.0], [24.0, 60000.0], [24.1, 60003.0], [24.2, 60003.0], [24.3, 60003.0], [24.4, 60011.0], [24.5, 60011.0], [24.6, 60011.0], [24.7, 60018.0], [24.8, 60018.0], [24.9, 60018.0], [25.0, 60020.0], [25.1, 60020.0], [25.2, 60020.0], [25.3, 60020.0], [25.4, 60021.0], [25.5, 60021.0], [25.6, 60021.0], [25.7, 60032.0], [25.8, 60032.0], [25.9, 60032.0], [26.0, 60032.0], [26.1, 60032.0], [26.2, 60032.0], [26.3, 60045.0], [26.4, 60045.0], [26.5, 60045.0], [26.6, 60048.0], [26.7, 60048.0], [26.8, 60048.0], [26.9, 60049.0], [27.0, 60049.0], [27.1, 60049.0], [27.2, 60050.0], [27.3, 60050.0], [27.4, 60050.0], [27.5, 60054.0], [27.6, 60054.0], [27.7, 60054.0], [27.8, 60054.0], [27.9, 60056.0], [28.0, 60056.0], [28.1, 60056.0], [28.2, 60057.0], [28.3, 60057.0], [28.4, 60057.0], [28.5, 60058.0], [28.6, 60058.0], [28.7, 60058.0], [28.8, 60059.0], [28.9, 60059.0], [29.0, 60059.0], [29.1, 60061.0], [29.2, 60061.0], [29.3, 60061.0], [29.4, 60062.0], [29.5, 60062.0], [29.6, 60062.0], [29.7, 60070.0], [29.8, 60070.0], [29.9, 60070.0], [30.0, 60071.0], [30.1, 60071.0], [30.2, 60071.0], [30.3, 60071.0], [30.4, 60076.0], [30.5, 60076.0], [30.6, 60076.0], [30.7, 60077.0], [30.8, 60077.0], [30.9, 60077.0], [31.0, 60077.0], [31.1, 60077.0], [31.2, 60077.0], [31.3, 60080.0], [31.4, 60080.0], [31.5, 60080.0], [31.6, 60083.0], [31.7, 60083.0], [31.8, 60083.0], [31.9, 60086.0], [32.0, 60086.0], [32.1, 60086.0], [32.2, 60088.0], [32.3, 60088.0], [32.4, 60088.0], [32.5, 60088.0], [32.6, 60088.0], [32.7, 60088.0], [32.8, 60088.0], [32.9, 60089.0], [33.0, 60089.0], [33.1, 60089.0], [33.2, 60089.0], [33.3, 60089.0], [33.4, 60089.0], [33.5, 60091.0], [33.6, 60091.0], [33.7, 60091.0], [33.8, 60096.0], [33.9, 60096.0], [34.0, 60096.0], [34.1, 60100.0], [34.2, 60100.0], [34.3, 60100.0], [34.4, 60108.0], [34.5, 60108.0], [34.6, 60108.0], [34.7, 60116.0], [34.8, 60116.0], [34.9, 60116.0], [35.0, 60118.0], [35.1, 60118.0], [35.2, 60118.0], [35.3, 60118.0], [35.4, 60119.0], [35.5, 60119.0], [35.6, 60119.0], [35.7, 60128.0], [35.8, 60128.0], [35.9, 60128.0], [36.0, 60130.0], [36.1, 60130.0], [36.2, 60130.0], [36.3, 60134.0], [36.4, 60134.0], [36.5, 60134.0], [36.6, 60138.0], [36.7, 60138.0], [36.8, 60138.0], [36.9, 60142.0], [37.0, 60142.0], [37.1, 60142.0], [37.2, 60145.0], [37.3, 60145.0], [37.4, 60145.0], [37.5, 60145.0], [37.6, 60145.0], [37.7, 60145.0], [37.8, 60145.0], [37.9, 60151.0], [38.0, 60151.0], [38.1, 60151.0], [38.2, 60153.0], [38.3, 60153.0], [38.4, 60153.0], [38.5, 60154.0], [38.6, 60154.0], [38.7, 60154.0], [38.8, 60155.0], [38.9, 60155.0], [39.0, 60155.0], [39.1, 60157.0], [39.2, 60157.0], [39.3, 60157.0], [39.4, 60158.0], [39.5, 60158.0], [39.6, 60158.0], [39.7, 60161.0], [39.8, 60161.0], [39.9, 60161.0], [40.0, 60167.0], [40.1, 60167.0], [40.2, 60167.0], [40.3, 60167.0], [40.4, 60167.0], [40.5, 60167.0], [40.6, 60167.0], [40.7, 60169.0], [40.8, 60169.0], [40.9, 60169.0], [41.0, 60170.0], [41.1, 60170.0], [41.2, 60170.0], [41.3, 60179.0], [41.4, 60179.0], [41.5, 60179.0], [41.6, 60180.0], [41.7, 60180.0], [41.8, 60180.0], [41.9, 60182.0], [42.0, 60182.0], [42.1, 60182.0], [42.2, 60184.0], [42.3, 60184.0], [42.4, 60184.0], [42.5, 60184.0], [42.6, 60184.0], [42.7, 60184.0], [42.8, 60184.0], [42.9, 60185.0], [43.0, 60185.0], [43.1, 60185.0], [43.2, 60187.0], [43.3, 60187.0], [43.4, 60187.0], [43.5, 60188.0], [43.6, 60188.0], [43.7, 60188.0], [43.8, 60190.0], [43.9, 60190.0], [44.0, 60190.0], [44.1, 60197.0], [44.2, 60197.0], [44.3, 60197.0], [44.4, 60201.0], [44.5, 60201.0], [44.6, 60201.0], [44.7, 60212.0], [44.8, 60212.0], [44.9, 60212.0], [45.0, 60213.0], [45.1, 60213.0], [45.2, 60213.0], [45.3, 60213.0], [45.4, 60215.0], [45.5, 60215.0], [45.6, 60215.0], [45.7, 60224.0], [45.8, 60224.0], [45.9, 60224.0], [46.0, 60227.0], [46.1, 60227.0], [46.2, 60227.0], [46.3, 60236.0], [46.4, 60236.0], [46.5, 60236.0], [46.6, 60240.0], [46.7, 60240.0], [46.8, 60240.0], [46.9, 60241.0], [47.0, 60241.0], [47.1, 60241.0], [47.2, 60242.0], [47.3, 60242.0], [47.4, 60242.0], [47.5, 60242.0], [47.6, 60242.0], [47.7, 60242.0], [47.8, 60242.0], [47.9, 60246.0], [48.0, 60246.0], [48.1, 60246.0], [48.2, 60246.0], [48.3, 60246.0], [48.4, 60246.0], [48.5, 60250.0], [48.6, 60250.0], [48.7, 60250.0], [48.8, 60253.0], [48.9, 60253.0], [49.0, 60253.0], [49.1, 60254.0], [49.2, 60254.0], [49.3, 60254.0], [49.4, 60255.0], [49.5, 60255.0], [49.6, 60255.0], [49.7, 60256.0], [49.8, 60256.0], [49.9, 60256.0], [50.0, 60261.0], [50.1, 60261.0], [50.2, 60261.0], [50.3, 60261.0], [50.4, 60265.0], [50.5, 60265.0], [50.6, 60265.0], [50.7, 60267.0], [50.8, 60267.0], [50.9, 60267.0], [51.0, 60269.0], [51.1, 60269.0], [51.2, 60269.0], [51.3, 60272.0], [51.4, 60272.0], [51.5, 60272.0], [51.6, 60272.0], [51.7, 60272.0], [51.8, 60272.0], [51.9, 60278.0], [52.0, 60278.0], [52.1, 60278.0], [52.2, 60280.0], [52.3, 60280.0], [52.4, 60280.0], [52.5, 60281.0], [52.6, 60281.0], [52.7, 60281.0], [52.8, 60281.0], [52.9, 60282.0], [53.0, 60282.0], [53.1, 60282.0], [53.2, 60283.0], [53.3, 60283.0], [53.4, 60283.0], [53.5, 60284.0], [53.6, 60284.0], [53.7, 60284.0], [53.8, 60287.0], [53.9, 60287.0], [54.0, 60287.0], [54.1, 60289.0], [54.2, 60289.0], [54.3, 60289.0], [54.4, 60293.0], [54.5, 60293.0], [54.6, 60293.0], [54.7, 60308.0], [54.8, 60308.0], [54.9, 60308.0], [55.0, 60309.0], [55.1, 60309.0], [55.2, 60309.0], [55.3, 60309.0], [55.4, 60310.0], [55.5, 60310.0], [55.6, 60310.0], [55.7, 60320.0], [55.8, 60320.0], [55.9, 60320.0], [56.0, 60321.0], [56.1, 60321.0], [56.2, 60321.0], [56.3, 60322.0], [56.4, 60322.0], [56.5, 60322.0], [56.6, 60331.0], [56.7, 60331.0], [56.8, 60331.0], [56.9, 60336.0], [57.0, 60336.0], [57.1, 60336.0], [57.2, 60342.0], [57.3, 60342.0], [57.4, 60342.0], [57.5, 60343.0], [57.6, 60343.0], [57.7, 60343.0], [57.8, 60343.0], [57.9, 60343.0], [58.0, 60343.0], [58.1, 60343.0], [58.2, 60344.0], [58.3, 60344.0], [58.4, 60344.0], [58.5, 60344.0], [58.6, 60344.0], [58.7, 60344.0], [58.8, 60345.0], [58.9, 60345.0], [59.0, 60345.0], [59.1, 60349.0], [59.2, 60349.0], [59.3, 60349.0], [59.4, 60350.0], [59.5, 60350.0], [59.6, 60350.0], [59.7, 60354.0], [59.8, 60354.0], [59.9, 60354.0], [60.0, 60360.0], [60.1, 60360.0], [60.2, 60360.0], [60.3, 60360.0], [60.4, 60361.0], [60.5, 60361.0], [60.6, 60361.0], [60.7, 60362.0], [60.8, 60362.0], [60.9, 60362.0], [61.0, 60364.0], [61.1, 60364.0], [61.2, 60364.0], [61.3, 60366.0], [61.4, 60366.0], [61.5, 60366.0], [61.6, 60370.0], [61.7, 60370.0], [61.8, 60370.0], [61.9, 60374.0], [62.0, 60374.0], [62.1, 60374.0], [62.2, 60375.0], [62.3, 60375.0], [62.4, 60375.0], [62.5, 60377.0], [62.6, 60377.0], [62.7, 60377.0], [62.8, 60377.0], [62.9, 60378.0], [63.0, 60378.0], [63.1, 60378.0], [63.2, 60379.0], [63.3, 60379.0], [63.4, 60379.0], [63.5, 60382.0], [63.6, 60382.0], [63.7, 60382.0], [63.8, 60382.0], [63.9, 60382.0], [64.0, 60382.0], [64.1, 60389.0], [64.2, 60389.0], [64.3, 60389.0], [64.4, 60393.0], [64.5, 60393.0], [64.6, 60393.0], [64.7, 60404.0], [64.8, 60404.0], [64.9, 60404.0], [65.0, 60405.0], [65.1, 60405.0], [65.2, 60405.0], [65.3, 60405.0], [65.4, 60406.0], [65.5, 60406.0], [65.6, 60406.0], [65.7, 60417.0], [65.8, 60417.0], [65.9, 60417.0], [66.0, 60418.0], [66.1, 60418.0], [66.2, 60418.0], [66.3, 60427.0], [66.4, 60427.0], [66.5, 60427.0], [66.6, 60432.0], [66.7, 60432.0], [66.8, 60432.0], [66.9, 60434.0], [67.0, 60434.0], [67.1, 60434.0], [67.2, 60436.0], [67.3, 60436.0], [67.4, 60436.0], [67.5, 60440.0], [67.6, 60440.0], [67.7, 60440.0], [67.8, 60440.0], [67.9, 60440.0], [68.0, 60440.0], [68.1, 60440.0], [68.2, 60443.0], [68.3, 60443.0], [68.4, 60443.0], [68.5, 60444.0], [68.6, 60444.0], [68.7, 60444.0], [68.8, 60445.0], [68.9, 60445.0], [69.0, 60445.0], [69.1, 60445.0], [69.2, 60445.0], [69.3, 60445.0], [69.4, 60446.0], [69.5, 60446.0], [69.6, 60446.0], [69.7, 60452.0], [69.8, 60452.0], [69.9, 60452.0], [70.0, 60453.0], [70.1, 60453.0], [70.2, 60453.0], [70.3, 60453.0], [70.4, 60454.0], [70.5, 60454.0], [70.6, 60454.0], [70.7, 60457.0], [70.8, 60457.0], [70.9, 60457.0], [71.0, 60459.0], [71.1, 60459.0], [71.2, 60459.0], [71.3, 60461.0], [71.4, 60461.0], [71.5, 60461.0], [71.6, 60466.0], [71.7, 60466.0], [71.8, 60466.0], [71.9, 60469.0], [72.0, 60469.0], [72.1, 60469.0], [72.2, 60471.0], [72.3, 60471.0], [72.4, 60471.0], [72.5, 60473.0], [72.6, 60473.0], [72.7, 60473.0], [72.8, 60473.0], [72.9, 60475.0], [73.0, 60475.0], [73.1, 60475.0], [73.2, 60477.0], [73.3, 60477.0], [73.4, 60477.0], [73.5, 60478.0], [73.6, 60478.0], [73.7, 60478.0], [73.8, 60481.0], [73.9, 60481.0], [74.0, 60481.0], [74.1, 60486.0], [74.2, 60486.0], [74.3, 60486.0], [74.4, 60489.0], [74.5, 60489.0], [74.6, 60489.0], [74.7, 60496.0], [74.8, 60496.0], [74.9, 60496.0], [75.0, 60500.0], [75.1, 60500.0], [75.2, 60500.0], [75.3, 60500.0], [75.4, 60501.0], [75.5, 60501.0], [75.6, 60501.0], [75.7, 60502.0], [75.8, 60502.0], [75.9, 60502.0], [76.0, 60514.0], [76.1, 60514.0], [76.2, 60514.0], [76.3, 60524.0], [76.4, 60524.0], [76.5, 60524.0], [76.6, 60528.0], [76.7, 60528.0], [76.8, 60528.0], [76.9, 60530.0], [77.0, 60530.0], [77.1, 60530.0], [77.2, 60532.0], [77.3, 60532.0], [77.4, 60532.0], [77.5, 60536.0], [77.6, 60536.0], [77.7, 60536.0], [77.8, 60536.0], [77.9, 60538.0], [78.0, 60538.0], [78.1, 60538.0], [78.2, 60539.0], [78.3, 60539.0], [78.4, 60539.0], [78.5, 60540.0], [78.6, 60540.0], [78.7, 60540.0], [78.8, 60540.0], [78.9, 60540.0], [79.0, 60540.0], [79.1, 60541.0], [79.2, 60541.0], [79.3, 60541.0], [79.4, 60542.0], [79.5, 60542.0], [79.6, 60542.0], [79.7, 60548.0], [79.8, 60548.0], [79.9, 60548.0], [80.0, 60550.0], [80.1, 60550.0], [80.2, 60550.0], [80.3, 60550.0], [80.4, 60551.0], [80.5, 60551.0], [80.6, 60551.0], [80.7, 60556.0], [80.8, 60556.0], [80.9, 60556.0], [81.0, 60557.0], [81.1, 60557.0], [81.2, 60557.0], [81.3, 60557.0], [81.4, 60557.0], [81.5, 60557.0], [81.6, 60565.0], [81.7, 60565.0], [81.8, 60565.0], [81.9, 60565.0], [82.0, 60565.0], [82.1, 60565.0], [82.2, 60568.0], [82.3, 60568.0], [82.4, 60568.0], [82.5, 60569.0], [82.6, 60569.0], [82.7, 60569.0], [82.8, 60569.0], [82.9, 60570.0], [83.0, 60570.0], [83.1, 60570.0], [83.2, 60572.0], [83.3, 60572.0], [83.4, 60572.0], [83.5, 60575.0], [83.6, 60575.0], [83.7, 60575.0], [83.8, 60576.0], [83.9, 60576.0], [84.0, 60576.0], [84.1, 60581.0], [84.2, 60581.0], [84.3, 60581.0], [84.4, 60586.0], [84.5, 60586.0], [84.6, 60586.0], [84.7, 60587.0], [84.8, 60587.0], [84.9, 60587.0], [85.0, 60596.0], [85.1, 60596.0], [85.2, 60596.0], [85.3, 60596.0], [85.4, 60597.0], [85.5, 60597.0], [85.6, 60597.0], [85.7, 60601.0], [85.8, 60601.0], [85.9, 60601.0], [86.0, 60609.0], [86.1, 60609.0], [86.2, 60609.0], [86.3, 60623.0], [86.4, 60623.0], [86.5, 60623.0], [86.6, 60623.0], [86.7, 60623.0], [86.8, 60623.0], [86.9, 60625.0], [87.0, 60625.0], [87.1, 60625.0], [87.2, 60629.0], [87.3, 60629.0], [87.4, 60629.0], [87.5, 60630.0], [87.6, 60630.0], [87.7, 60630.0], [87.8, 60630.0], [87.9, 60631.0], [88.0, 60631.0], [88.1, 60631.0], [88.2, 60632.0], [88.3, 60632.0], [88.4, 60632.0], [88.5, 60632.0], [88.6, 60632.0], [88.7, 60632.0], [88.8, 60633.0], [88.9, 60633.0], [89.0, 60633.0], [89.1, 60636.0], [89.2, 60636.0], [89.3, 60636.0], [89.4, 60637.0], [89.5, 60637.0], [89.6, 60637.0], [89.7, 60641.0], [89.8, 60641.0], [89.9, 60641.0], [90.0, 60648.0], [90.1, 60648.0], [90.2, 60648.0], [90.3, 60648.0], [90.4, 60650.0], [90.5, 60650.0], [90.6, 60650.0], [90.7, 60653.0], [90.8, 60653.0], [90.9, 60653.0], [91.0, 60656.0], [91.1, 60656.0], [91.2, 60656.0], [91.3, 60658.0], [91.4, 60658.0], [91.5, 60658.0], [91.6, 60658.0], [91.7, 60658.0], [91.8, 60658.0], [91.9, 60658.0], [92.0, 60658.0], [92.1, 60658.0], [92.2, 60662.0], [92.3, 60662.0], [92.4, 60662.0], [92.5, 60665.0], [92.6, 60665.0], [92.7, 60665.0], [92.8, 60665.0], [92.9, 60665.0], [93.0, 60665.0], [93.1, 60665.0], [93.2, 60666.0], [93.3, 60666.0], [93.4, 60666.0], [93.5, 60669.0], [93.6, 60669.0], [93.7, 60669.0], [93.8, 60669.0], [93.9, 60669.0], [94.0, 60669.0], [94.1, 60677.0], [94.2, 60677.0], [94.3, 60677.0], [94.4, 60683.0], [94.5, 60683.0], [94.6, 60683.0], [94.7, 60692.0], [94.8, 60692.0], [94.9, 60692.0], [95.0, 60692.0], [95.1, 60692.0], [95.2, 60692.0], [95.3, 60692.0], [95.4, 60694.0], [95.5, 60694.0], [95.6, 60694.0], [95.7, 60705.0], [95.8, 60705.0], [95.9, 60705.0], [96.0, 60706.0], [96.1, 60706.0], [96.2, 60706.0], [96.3, 60720.0], [96.4, 60720.0], [96.5, 60720.0], [96.6, 60734.0], [96.7, 60734.0], [96.8, 60734.0], [96.9, 60761.0], [97.0, 60761.0], [97.1, 60761.0], [97.2, 60762.0], [97.3, 60762.0], [97.4, 60762.0], [97.5, 60789.0], [97.6, 60789.0], [97.7, 60789.0], [97.8, 60789.0], [97.9, 60789.0], [98.0, 60789.0], [98.1, 60789.0], [98.2, 60802.0], [98.3, 60802.0], [98.4, 60802.0], [98.5, 60816.0], [98.6, 60816.0], [98.7, 60816.0], [98.8, 60831.0], [98.9, 60831.0], [99.0, 60831.0], [99.1, 60857.0], [99.2, 60857.0], [99.3, 60857.0], [99.4, 60886.0], [99.5, 60886.0], [99.6, 60886.0], [99.7, 60912.0], [99.8, 60912.0], [99.9, 60912.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64099.0], [0.1, 64099.0], [0.2, 64099.0], [0.3, 64099.0], [0.4, 64099.0], [0.5, 64099.0], [0.6, 64099.0], [0.7, 64099.0], [0.8, 64099.0], [0.9, 64099.0], [1.0, 64099.0], [1.1, 64099.0], [1.2, 64099.0], [1.3, 64099.0], [1.4, 64099.0], [1.5, 64099.0], [1.6, 64099.0], [1.7, 64099.0], [1.8, 64099.0], [1.9, 64099.0], [2.0, 64099.0], [2.1, 64099.0], [2.2, 64099.0], [2.3, 64099.0], [2.4, 64099.0], [2.5, 64099.0], [2.6, 64099.0], [2.7, 64099.0], [2.8, 64099.0], [2.9, 64099.0], [3.0, 64099.0], [3.1, 64099.0], [3.2, 64099.0], [3.3, 64099.0], [3.4, 64099.0], [3.5, 64099.0], [3.6, 64099.0], [3.7, 64099.0], [3.8, 64099.0], [3.9, 64099.0], [4.0, 64099.0], [4.1, 64099.0], [4.2, 64099.0], [4.3, 64099.0], [4.4, 64099.0], [4.5, 64099.0], [4.6, 64099.0], [4.7, 64099.0], [4.8, 64099.0], [4.9, 64099.0], [5.0, 64099.0], [5.1, 64099.0], [5.2, 64099.0], [5.3, 64099.0], [5.4, 64099.0], [5.5, 64099.0], [5.6, 64099.0], [5.7, 64099.0], [5.8, 64099.0], [5.9, 64099.0], [6.0, 64099.0], [6.1, 64099.0], [6.2, 64099.0], [6.3, 64100.0], [6.4, 64100.0], [6.5, 64100.0], [6.6, 64100.0], [6.7, 64100.0], [6.8, 64100.0], [6.9, 64100.0], [7.0, 64100.0], [7.1, 64100.0], [7.2, 64100.0], [7.3, 64100.0], [7.4, 64100.0], [7.5, 64100.0], [7.6, 64100.0], [7.7, 64100.0], [7.8, 64100.0], [7.9, 64100.0], [8.0, 64100.0], [8.1, 64100.0], [8.2, 64100.0], [8.3, 64100.0], [8.4, 64100.0], [8.5, 64100.0], [8.6, 64100.0], [8.7, 64100.0], [8.8, 64100.0], [8.9, 64100.0], [9.0, 64100.0], [9.1, 64100.0], [9.2, 64100.0], [9.3, 64100.0], [9.4, 64100.0], [9.5, 64100.0], [9.6, 64100.0], [9.7, 64100.0], [9.8, 64100.0], [9.9, 64100.0], [10.0, 64100.0], [10.1, 64100.0], [10.2, 64100.0], [10.3, 64100.0], [10.4, 64100.0], [10.5, 64100.0], [10.6, 64100.0], [10.7, 64100.0], [10.8, 64100.0], [10.9, 64100.0], [11.0, 64100.0], [11.1, 64100.0], [11.2, 64100.0], [11.3, 64100.0], [11.4, 64100.0], [11.5, 64100.0], [11.6, 64100.0], [11.7, 64100.0], [11.8, 64100.0], [11.9, 64100.0], [12.0, 64100.0], [12.1, 64100.0], [12.2, 64100.0], [12.3, 64100.0], [12.4, 64100.0], [12.5, 64101.0], [12.6, 64101.0], [12.7, 64101.0], [12.8, 64101.0], [12.9, 64101.0], [13.0, 64101.0], [13.1, 64101.0], [13.2, 64101.0], [13.3, 64101.0], [13.4, 64101.0], [13.5, 64101.0], [13.6, 64101.0], [13.7, 64101.0], [13.8, 64101.0], [13.9, 64101.0], [14.0, 64101.0], [14.1, 64101.0], [14.2, 64101.0], [14.3, 64101.0], [14.4, 64101.0], [14.5, 64101.0], [14.6, 64101.0], [14.7, 64101.0], [14.8, 64101.0], [14.9, 64101.0], [15.0, 64101.0], [15.1, 64101.0], [15.2, 64101.0], [15.3, 64101.0], [15.4, 64101.0], [15.5, 64101.0], [15.6, 64101.0], [15.7, 64113.0], [15.8, 64113.0], [15.9, 64113.0], [16.0, 64113.0], [16.1, 64113.0], [16.2, 64113.0], [16.3, 64113.0], [16.4, 64113.0], [16.5, 64113.0], [16.6, 64113.0], [16.7, 64113.0], [16.8, 64113.0], [16.9, 64113.0], [17.0, 64113.0], [17.1, 64113.0], [17.2, 64113.0], [17.3, 64113.0], [17.4, 64113.0], [17.5, 64113.0], [17.6, 64113.0], [17.7, 64113.0], [17.8, 64113.0], [17.9, 64113.0], [18.0, 64113.0], [18.1, 64113.0], [18.2, 64113.0], [18.3, 64113.0], [18.4, 64113.0], [18.5, 64113.0], [18.6, 64113.0], [18.7, 64113.0], [18.8, 64114.0], [18.9, 64114.0], [19.0, 64114.0], [19.1, 64114.0], [19.2, 64114.0], [19.3, 64114.0], [19.4, 64114.0], [19.5, 64114.0], [19.6, 64114.0], [19.7, 64114.0], [19.8, 64114.0], [19.9, 64114.0], [20.0, 64114.0], [20.1, 64114.0], [20.2, 64114.0], [20.3, 64114.0], [20.4, 64114.0], [20.5, 64114.0], [20.6, 64114.0], [20.7, 64114.0], [20.8, 64114.0], [20.9, 64114.0], [21.0, 64114.0], [21.1, 64114.0], [21.2, 64114.0], [21.3, 64114.0], [21.4, 64114.0], [21.5, 64114.0], [21.6, 64114.0], [21.7, 64114.0], [21.8, 64114.0], [21.9, 64114.0], [22.0, 64114.0], [22.1, 64114.0], [22.2, 64114.0], [22.3, 64114.0], [22.4, 64114.0], [22.5, 64114.0], [22.6, 64114.0], [22.7, 64114.0], [22.8, 64114.0], [22.9, 64114.0], [23.0, 64114.0], [23.1, 64114.0], [23.2, 64114.0], [23.3, 64114.0], [23.4, 64114.0], [23.5, 64114.0], [23.6, 64114.0], [23.7, 64114.0], [23.8, 64114.0], [23.9, 64114.0], [24.0, 64114.0], [24.1, 64114.0], [24.2, 64114.0], [24.3, 64114.0], [24.4, 64114.0], [24.5, 64114.0], [24.6, 64114.0], [24.7, 64114.0], [24.8, 64114.0], [24.9, 64114.0], [25.0, 64114.0], [25.1, 64114.0], [25.2, 64114.0], [25.3, 64114.0], [25.4, 64114.0], [25.5, 64114.0], [25.6, 64114.0], [25.7, 64114.0], [25.8, 64114.0], [25.9, 64114.0], [26.0, 64114.0], [26.1, 64114.0], [26.2, 64114.0], [26.3, 64114.0], [26.4, 64114.0], [26.5, 64114.0], [26.6, 64114.0], [26.7, 64114.0], [26.8, 64114.0], [26.9, 64114.0], [27.0, 64114.0], [27.1, 64114.0], [27.2, 64114.0], [27.3, 64114.0], [27.4, 64114.0], [27.5, 64114.0], [27.6, 64114.0], [27.7, 64114.0], [27.8, 64114.0], [27.9, 64114.0], [28.0, 64114.0], [28.1, 64114.0], [28.2, 64114.0], [28.3, 64114.0], [28.4, 64114.0], [28.5, 64114.0], [28.6, 64114.0], [28.7, 64114.0], [28.8, 64114.0], [28.9, 64114.0], [29.0, 64114.0], [29.1, 64114.0], [29.2, 64114.0], [29.3, 64114.0], [29.4, 64114.0], [29.5, 64114.0], [29.6, 64114.0], [29.7, 64114.0], [29.8, 64114.0], [29.9, 64114.0], [30.0, 64114.0], [30.1, 64114.0], [30.2, 64114.0], [30.3, 64114.0], [30.4, 64114.0], [30.5, 64114.0], [30.6, 64114.0], [30.7, 64114.0], [30.8, 64114.0], [30.9, 64114.0], [31.0, 64114.0], [31.1, 64114.0], [31.2, 64114.0], [31.3, 64114.0], [31.4, 64114.0], [31.5, 64114.0], [31.6, 64114.0], [31.7, 64114.0], [31.8, 64114.0], [31.9, 64114.0], [32.0, 64114.0], [32.1, 64114.0], [32.2, 64114.0], [32.3, 64114.0], [32.4, 64114.0], [32.5, 64114.0], [32.6, 64114.0], [32.7, 64114.0], [32.8, 64114.0], [32.9, 64114.0], [33.0, 64114.0], [33.1, 64114.0], [33.2, 64114.0], [33.3, 64114.0], [33.4, 64114.0], [33.5, 64114.0], [33.6, 64114.0], [33.7, 64114.0], [33.8, 64114.0], [33.9, 64114.0], [34.0, 64114.0], [34.1, 64114.0], [34.2, 64114.0], [34.3, 64114.0], [34.4, 64114.0], [34.5, 64114.0], [34.6, 64114.0], [34.7, 64114.0], [34.8, 64114.0], [34.9, 64114.0], [35.0, 64114.0], [35.1, 64114.0], [35.2, 64114.0], [35.3, 64114.0], [35.4, 64114.0], [35.5, 64114.0], [35.6, 64114.0], [35.7, 64114.0], [35.8, 64114.0], [35.9, 64114.0], [36.0, 64114.0], [36.1, 64114.0], [36.2, 64114.0], [36.3, 64114.0], [36.4, 64114.0], [36.5, 64114.0], [36.6, 64114.0], [36.7, 64114.0], [36.8, 64114.0], [36.9, 64114.0], [37.0, 64114.0], [37.1, 64114.0], [37.2, 64114.0], [37.3, 64114.0], [37.4, 64114.0], [37.5, 64115.0], [37.6, 64115.0], [37.7, 64115.0], [37.8, 64115.0], [37.9, 64115.0], [38.0, 64115.0], [38.1, 64115.0], [38.2, 64115.0], [38.3, 64115.0], [38.4, 64115.0], [38.5, 64115.0], [38.6, 64115.0], [38.7, 64115.0], [38.8, 64115.0], [38.9, 64115.0], [39.0, 64115.0], [39.1, 64115.0], [39.2, 64115.0], [39.3, 64115.0], [39.4, 64115.0], [39.5, 64115.0], [39.6, 64115.0], [39.7, 64115.0], [39.8, 64115.0], [39.9, 64115.0], [40.0, 64115.0], [40.1, 64115.0], [40.2, 64115.0], [40.3, 64115.0], [40.4, 64115.0], [40.5, 64115.0], [40.6, 64115.0], [40.7, 64146.0], [40.8, 64146.0], [40.9, 64146.0], [41.0, 64146.0], [41.1, 64146.0], [41.2, 64146.0], [41.3, 64146.0], [41.4, 64146.0], [41.5, 64146.0], [41.6, 64146.0], [41.7, 64146.0], [41.8, 64146.0], [41.9, 64146.0], [42.0, 64146.0], [42.1, 64146.0], [42.2, 64146.0], [42.3, 64146.0], [42.4, 64146.0], [42.5, 64146.0], [42.6, 64146.0], [42.7, 64146.0], [42.8, 64146.0], [42.9, 64146.0], [43.0, 64146.0], [43.1, 64146.0], [43.2, 64146.0], [43.3, 64146.0], [43.4, 64146.0], [43.5, 64146.0], [43.6, 64146.0], [43.7, 64146.0], [43.8, 64178.0], [43.9, 64178.0], [44.0, 64178.0], [44.1, 64178.0], [44.2, 64178.0], [44.3, 64178.0], [44.4, 64178.0], [44.5, 64178.0], [44.6, 64178.0], [44.7, 64178.0], [44.8, 64178.0], [44.9, 64178.0], [45.0, 64178.0], [45.1, 64178.0], [45.2, 64178.0], [45.3, 64178.0], [45.4, 64178.0], [45.5, 64178.0], [45.6, 64178.0], [45.7, 64178.0], [45.8, 64178.0], [45.9, 64178.0], [46.0, 64178.0], [46.1, 64178.0], [46.2, 64178.0], [46.3, 64178.0], [46.4, 64178.0], [46.5, 64178.0], [46.6, 64178.0], [46.7, 64178.0], [46.8, 64178.0], [46.9, 64193.0], [47.0, 64193.0], [47.1, 64193.0], [47.2, 64193.0], [47.3, 64193.0], [47.4, 64193.0], [47.5, 64193.0], [47.6, 64193.0], [47.7, 64193.0], [47.8, 64193.0], [47.9, 64193.0], [48.0, 64193.0], [48.1, 64193.0], [48.2, 64193.0], [48.3, 64193.0], [48.4, 64193.0], [48.5, 64193.0], [48.6, 64193.0], [48.7, 64193.0], [48.8, 64193.0], [48.9, 64193.0], [49.0, 64193.0], [49.1, 64193.0], [49.2, 64193.0], [49.3, 64193.0], [49.4, 64193.0], [49.5, 64193.0], [49.6, 64193.0], [49.7, 64193.0], [49.8, 64193.0], [49.9, 64193.0], [50.0, 64225.0], [50.1, 64225.0], [50.2, 64225.0], [50.3, 64225.0], [50.4, 64225.0], [50.5, 64225.0], [50.6, 64225.0], [50.7, 64225.0], [50.8, 64225.0], [50.9, 64225.0], [51.0, 64225.0], [51.1, 64225.0], [51.2, 64225.0], [51.3, 64225.0], [51.4, 64225.0], [51.5, 64225.0], [51.6, 64225.0], [51.7, 64225.0], [51.8, 64225.0], [51.9, 64225.0], [52.0, 64225.0], [52.1, 64225.0], [52.2, 64225.0], [52.3, 64225.0], [52.4, 64225.0], [52.5, 64225.0], [52.6, 64225.0], [52.7, 64225.0], [52.8, 64225.0], [52.9, 64225.0], [53.0, 64225.0], [53.1, 64225.0], [53.2, 64255.0], [53.3, 64255.0], [53.4, 64255.0], [53.5, 64255.0], [53.6, 64255.0], [53.7, 64255.0], [53.8, 64255.0], [53.9, 64255.0], [54.0, 64255.0], [54.1, 64255.0], [54.2, 64255.0], [54.3, 64255.0], [54.4, 64255.0], [54.5, 64255.0], [54.6, 64255.0], [54.7, 64255.0], [54.8, 64255.0], [54.9, 64255.0], [55.0, 64255.0], [55.1, 64255.0], [55.2, 64255.0], [55.3, 64255.0], [55.4, 64255.0], [55.5, 64255.0], [55.6, 64255.0], [55.7, 64255.0], [55.8, 64255.0], [55.9, 64255.0], [56.0, 64255.0], [56.1, 64255.0], [56.2, 64255.0], [56.3, 64288.0], [56.4, 64288.0], [56.5, 64288.0], [56.6, 64288.0], [56.7, 64288.0], [56.8, 64288.0], [56.9, 64288.0], [57.0, 64288.0], [57.1, 64288.0], [57.2, 64288.0], [57.3, 64288.0], [57.4, 64288.0], [57.5, 64288.0], [57.6, 64288.0], [57.7, 64288.0], [57.8, 64288.0], [57.9, 64288.0], [58.0, 64288.0], [58.1, 64288.0], [58.2, 64288.0], [58.3, 64288.0], [58.4, 64288.0], [58.5, 64288.0], [58.6, 64288.0], [58.7, 64288.0], [58.8, 64288.0], [58.9, 64288.0], [59.0, 64288.0], [59.1, 64288.0], [59.2, 64288.0], [59.3, 64288.0], [59.4, 64332.0], [59.5, 64332.0], [59.6, 64332.0], [59.7, 64332.0], [59.8, 64332.0], [59.9, 64332.0], [60.0, 64332.0], [60.1, 64332.0], [60.2, 64332.0], [60.3, 64332.0], [60.4, 64332.0], [60.5, 64332.0], [60.6, 64332.0], [60.7, 64332.0], [60.8, 64332.0], [60.9, 64332.0], [61.0, 64332.0], [61.1, 64332.0], [61.2, 64332.0], [61.3, 64332.0], [61.4, 64332.0], [61.5, 64332.0], [61.6, 64332.0], [61.7, 64332.0], [61.8, 64332.0], [61.9, 64332.0], [62.0, 64332.0], [62.1, 64332.0], [62.2, 64332.0], [62.3, 64332.0], [62.4, 64332.0], [62.5, 64350.0], [62.6, 64350.0], [62.7, 64350.0], [62.8, 64350.0], [62.9, 64350.0], [63.0, 64350.0], [63.1, 64350.0], [63.2, 64350.0], [63.3, 64350.0], [63.4, 64350.0], [63.5, 64350.0], [63.6, 64350.0], [63.7, 64350.0], [63.8, 64350.0], [63.9, 64350.0], [64.0, 64350.0], [64.1, 64350.0], [64.2, 64350.0], [64.3, 64350.0], [64.4, 64350.0], [64.5, 64350.0], [64.6, 64350.0], [64.7, 64350.0], [64.8, 64350.0], [64.9, 64350.0], [65.0, 64350.0], [65.1, 64350.0], [65.2, 64350.0], [65.3, 64350.0], [65.4, 64350.0], [65.5, 64350.0], [65.6, 64350.0], [65.7, 64394.0], [65.8, 64394.0], [65.9, 64394.0], [66.0, 64394.0], [66.1, 64394.0], [66.2, 64394.0], [66.3, 64394.0], [66.4, 64394.0], [66.5, 64394.0], [66.6, 64394.0], [66.7, 64394.0], [66.8, 64394.0], [66.9, 64394.0], [67.0, 64394.0], [67.1, 64394.0], [67.2, 64394.0], [67.3, 64394.0], [67.4, 64394.0], [67.5, 64394.0], [67.6, 64394.0], [67.7, 64394.0], [67.8, 64394.0], [67.9, 64394.0], [68.0, 64394.0], [68.1, 64394.0], [68.2, 64394.0], [68.3, 64394.0], [68.4, 64394.0], [68.5, 64394.0], [68.6, 64394.0], [68.7, 64394.0], [68.8, 64409.0], [68.9, 64409.0], [69.0, 64409.0], [69.1, 64409.0], [69.2, 64409.0], [69.3, 64409.0], [69.4, 64409.0], [69.5, 64409.0], [69.6, 64409.0], [69.7, 64409.0], [69.8, 64409.0], [69.9, 64409.0], [70.0, 64409.0], [70.1, 64409.0], [70.2, 64409.0], [70.3, 64409.0], [70.4, 64409.0], [70.5, 64409.0], [70.6, 64409.0], [70.7, 64409.0], [70.8, 64409.0], [70.9, 64409.0], [71.0, 64409.0], [71.1, 64409.0], [71.2, 64409.0], [71.3, 64409.0], [71.4, 64409.0], [71.5, 64409.0], [71.6, 64409.0], [71.7, 64409.0], [71.8, 64409.0], [71.9, 64441.0], [72.0, 64441.0], [72.1, 64441.0], [72.2, 64441.0], [72.3, 64441.0], [72.4, 64441.0], [72.5, 64441.0], [72.6, 64441.0], [72.7, 64441.0], [72.8, 64441.0], [72.9, 64441.0], [73.0, 64441.0], [73.1, 64441.0], [73.2, 64441.0], [73.3, 64441.0], [73.4, 64441.0], [73.5, 64441.0], [73.6, 64441.0], [73.7, 64441.0], [73.8, 64441.0], [73.9, 64441.0], [74.0, 64441.0], [74.1, 64441.0], [74.2, 64441.0], [74.3, 64441.0], [74.4, 64441.0], [74.5, 64441.0], [74.6, 64441.0], [74.7, 64441.0], [74.8, 64441.0], [74.9, 64441.0], [75.0, 64473.0], [75.1, 64473.0], [75.2, 64473.0], [75.3, 64473.0], [75.4, 64473.0], [75.5, 64473.0], [75.6, 64473.0], [75.7, 64473.0], [75.8, 64473.0], [75.9, 64473.0], [76.0, 64473.0], [76.1, 64473.0], [76.2, 64473.0], [76.3, 64473.0], [76.4, 64473.0], [76.5, 64473.0], [76.6, 64473.0], [76.7, 64473.0], [76.8, 64473.0], [76.9, 64473.0], [77.0, 64473.0], [77.1, 64473.0], [77.2, 64473.0], [77.3, 64473.0], [77.4, 64473.0], [77.5, 64473.0], [77.6, 64473.0], [77.7, 64473.0], [77.8, 64473.0], [77.9, 64473.0], [78.0, 64473.0], [78.1, 64473.0], [78.2, 64503.0], [78.3, 64503.0], [78.4, 64503.0], [78.5, 64503.0], [78.6, 64503.0], [78.7, 64503.0], [78.8, 64503.0], [78.9, 64503.0], [79.0, 64503.0], [79.1, 64503.0], [79.2, 64503.0], [79.3, 64503.0], [79.4, 64503.0], [79.5, 64503.0], [79.6, 64503.0], [79.7, 64503.0], [79.8, 64503.0], [79.9, 64503.0], [80.0, 64503.0], [80.1, 64503.0], [80.2, 64503.0], [80.3, 64503.0], [80.4, 64503.0], [80.5, 64503.0], [80.6, 64503.0], [80.7, 64503.0], [80.8, 64503.0], [80.9, 64503.0], [81.0, 64503.0], [81.1, 64503.0], [81.2, 64503.0], [81.3, 64549.0], [81.4, 64549.0], [81.5, 64549.0], [81.6, 64549.0], [81.7, 64549.0], [81.8, 64549.0], [81.9, 64549.0], [82.0, 64549.0], [82.1, 64549.0], [82.2, 64549.0], [82.3, 64549.0], [82.4, 64549.0], [82.5, 64549.0], [82.6, 64549.0], [82.7, 64549.0], [82.8, 64549.0], [82.9, 64549.0], [83.0, 64549.0], [83.1, 64549.0], [83.2, 64549.0], [83.3, 64549.0], [83.4, 64549.0], [83.5, 64549.0], [83.6, 64549.0], [83.7, 64549.0], [83.8, 64549.0], [83.9, 64549.0], [84.0, 64549.0], [84.1, 64549.0], [84.2, 64549.0], [84.3, 64549.0], [84.4, 64565.0], [84.5, 64565.0], [84.6, 64565.0], [84.7, 64565.0], [84.8, 64565.0], [84.9, 64565.0], [85.0, 64565.0], [85.1, 64565.0], [85.2, 64565.0], [85.3, 64565.0], [85.4, 64565.0], [85.5, 64565.0], [85.6, 64565.0], [85.7, 64565.0], [85.8, 64565.0], [85.9, 64565.0], [86.0, 64565.0], [86.1, 64565.0], [86.2, 64565.0], [86.3, 64565.0], [86.4, 64565.0], [86.5, 64565.0], [86.6, 64565.0], [86.7, 64565.0], [86.8, 64565.0], [86.9, 64565.0], [87.0, 64565.0], [87.1, 64565.0], [87.2, 64565.0], [87.3, 64565.0], [87.4, 64565.0], [87.5, 64595.0], [87.6, 64595.0], [87.7, 64595.0], [87.8, 64595.0], [87.9, 64595.0], [88.0, 64595.0], [88.1, 64595.0], [88.2, 64595.0], [88.3, 64595.0], [88.4, 64595.0], [88.5, 64595.0], [88.6, 64595.0], [88.7, 64595.0], [88.8, 64595.0], [88.9, 64595.0], [89.0, 64595.0], [89.1, 64595.0], [89.2, 64595.0], [89.3, 64595.0], [89.4, 64595.0], [89.5, 64595.0], [89.6, 64595.0], [89.7, 64595.0], [89.8, 64595.0], [89.9, 64595.0], [90.0, 64595.0], [90.1, 64595.0], [90.2, 64595.0], [90.3, 64595.0], [90.4, 64595.0], [90.5, 64595.0], [90.6, 64595.0], [90.7, 64641.0], [90.8, 64641.0], [90.9, 64641.0], [91.0, 64641.0], [91.1, 64641.0], [91.2, 64641.0], [91.3, 64641.0], [91.4, 64641.0], [91.5, 64641.0], [91.6, 64641.0], [91.7, 64641.0], [91.8, 64641.0], [91.9, 64641.0], [92.0, 64641.0], [92.1, 64641.0], [92.2, 64641.0], [92.3, 64641.0], [92.4, 64641.0], [92.5, 64641.0], [92.6, 64641.0], [92.7, 64641.0], [92.8, 64641.0], [92.9, 64641.0], [93.0, 64641.0], [93.1, 64641.0], [93.2, 64641.0], [93.3, 64641.0], [93.4, 64641.0], [93.5, 64641.0], [93.6, 64641.0], [93.7, 64641.0], [93.8, 64657.0], [93.9, 64657.0], [94.0, 64657.0], [94.1, 64657.0], [94.2, 64657.0], [94.3, 64657.0], [94.4, 64657.0], [94.5, 64657.0], [94.6, 64657.0], [94.7, 64657.0], [94.8, 64657.0], [94.9, 64657.0], [95.0, 64657.0], [95.1, 64657.0], [95.2, 64657.0], [95.3, 64657.0], [95.4, 64657.0], [95.5, 64657.0], [95.6, 64657.0], [95.7, 64657.0], [95.8, 64657.0], [95.9, 64657.0], [96.0, 64657.0], [96.1, 64657.0], [96.2, 64657.0], [96.3, 64657.0], [96.4, 64657.0], [96.5, 64657.0], [96.6, 64657.0], [96.7, 64657.0], [96.8, 64657.0], [96.9, 64698.0], [97.0, 64698.0], [97.1, 64698.0], [97.2, 64698.0], [97.3, 64698.0], [97.4, 64698.0], [97.5, 64698.0], [97.6, 64698.0], [97.7, 64698.0], [97.8, 64698.0], [97.9, 64698.0], [98.0, 64698.0], [98.1, 64698.0], [98.2, 64698.0], [98.3, 64698.0], [98.4, 64698.0], [98.5, 64698.0], [98.6, 64698.0], [98.7, 64698.0], [98.8, 64698.0], [98.9, 64698.0], [99.0, 64698.0], [99.1, 64698.0], [99.2, 64698.0], [99.3, 64698.0], [99.4, 64698.0], [99.5, 64698.0], [99.6, 64698.0], [99.7, 64698.0], [99.8, 64698.0], [99.9, 64698.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 60517.0], [0.1, 60517.0], [0.2, 60517.0], [0.3, 60517.0], [0.4, 60524.0], [0.5, 60528.0], [0.6, 60528.0], [0.7, 60530.0], [0.8, 60535.0], [0.9, 60535.0], [1.0, 60535.0], [1.1, 60537.0], [1.2, 60537.0], [1.3, 60538.0], [1.4, 60538.0], [1.5, 60540.0], [1.6, 60543.0], [1.7, 60543.0], [1.8, 60545.0], [1.9, 60545.0], [2.0, 60545.0], [2.1, 60546.0], [2.2, 60547.0], [2.3, 60547.0], [2.4, 60548.0], [2.5, 60550.0], [2.6, 60550.0], [2.7, 60551.0], [2.8, 60551.0], [2.9, 60553.0], [3.0, 60565.0], [3.1, 60565.0], [3.2, 60572.0], [3.3, 60579.0], [3.4, 60579.0], [3.5, 60581.0], [3.6, 60582.0], [3.7, 60582.0], [3.8, 60584.0], [3.9, 60584.0], [4.0, 60592.0], [4.1, 60597.0], [4.2, 60597.0], [4.3, 60599.0], [4.4, 60600.0], [4.5, 60600.0], [4.6, 60600.0], [4.7, 60602.0], [4.8, 60602.0], [4.9, 60603.0], [5.0, 60604.0], [5.1, 60604.0], [5.2, 60606.0], [5.3, 60606.0], [5.4, 60609.0], [5.5, 60609.0], [5.6, 60609.0], [5.7, 60610.0], [5.8, 60611.0], [5.9, 60611.0], [6.0, 60614.0], [6.1, 60614.0], [6.2, 60614.0], [6.3, 60622.0], [6.4, 60622.0], [6.5, 60624.0], [6.6, 60630.0], [6.7, 60630.0], [6.8, 60632.0], [6.9, 60633.0], [7.0, 60633.0], [7.1, 60635.0], [7.2, 60636.0], [7.3, 60636.0], [7.4, 60649.0], [7.5, 60650.0], [7.6, 60650.0], [7.7, 60653.0], [7.8, 60653.0], [7.9, 60654.0], [8.0, 60654.0], [8.1, 60654.0], [8.2, 60655.0], [8.3, 60656.0], [8.4, 60656.0], [8.5, 60657.0], [8.6, 60663.0], [8.7, 60663.0], [8.8, 60663.0], [8.9, 60663.0], [9.0, 60667.0], [9.1, 60671.0], [9.2, 60671.0], [9.3, 60672.0], [9.4, 60674.0], [9.5, 60674.0], [9.6, 60675.0], [9.7, 60679.0], [9.8, 60679.0], [9.9, 60679.0], [10.0, 60682.0], [10.1, 60682.0], [10.2, 60684.0], [10.3, 60684.0], [10.4, 60686.0], [10.5, 60687.0], [10.6, 60687.0], [10.7, 60694.0], [10.8, 60694.0], [10.9, 60694.0], [11.0, 60695.0], [11.1, 60698.0], [11.2, 60698.0], [11.3, 60700.0], [11.4, 60700.0], [11.5, 60706.0], [11.6, 60708.0], [11.7, 60708.0], [11.8, 60709.0], [11.9, 60709.0], [12.0, 60709.0], [12.1, 60716.0], [12.2, 60720.0], [12.3, 60720.0], [12.4, 60721.0], [12.5, 60722.0], [12.6, 60722.0], [12.7, 60725.0], [12.8, 60725.0], [12.9, 60729.0], [13.0, 60730.0], [13.1, 60730.0], [13.2, 60730.0], [13.3, 60733.0], [13.4, 60733.0], [13.5, 60734.0], [13.6, 60734.0], [13.7, 60734.0], [13.8, 60741.0], [13.9, 60741.0], [14.0, 60742.0], [14.1, 60742.0], [14.2, 60742.0], [14.3, 60743.0], [14.4, 60743.0], [14.5, 60743.0], [14.6, 60744.0], [14.7, 60749.0], [14.8, 60749.0], [14.9, 60749.0], [15.0, 60753.0], [15.1, 60753.0], [15.2, 60757.0], [15.3, 60757.0], [15.4, 60757.0], [15.5, 60762.0], [15.6, 60762.0], [15.7, 60762.0], [15.8, 60763.0], [15.9, 60763.0], [16.0, 60766.0], [16.1, 60775.0], [16.2, 60775.0], [16.3, 60781.0], [16.4, 60781.0], [16.5, 60782.0], [16.6, 60783.0], [16.7, 60783.0], [16.8, 60784.0], [16.9, 60785.0], [17.0, 60785.0], [17.1, 60789.0], [17.2, 60791.0], [17.3, 60791.0], [17.4, 60791.0], [17.5, 60794.0], [17.6, 60794.0], [17.7, 60794.0], [17.8, 60794.0], [17.9, 60794.0], [18.0, 60794.0], [18.1, 60794.0], [18.2, 60796.0], [18.3, 60797.0], [18.4, 60797.0], [18.5, 60800.0], [18.6, 60804.0], [18.7, 60804.0], [18.8, 60806.0], [18.9, 60806.0], [19.0, 60807.0], [19.1, 60807.0], [19.2, 60807.0], [19.3, 60808.0], [19.4, 60810.0], [19.5, 60810.0], [19.6, 60815.0], [19.7, 60818.0], [19.8, 60818.0], [19.9, 60820.0], [20.0, 60822.0], [20.1, 60822.0], [20.2, 60825.0], [20.3, 60825.0], [20.4, 60826.0], [20.5, 60828.0], [20.6, 60828.0], [20.7, 60830.0], [20.8, 60836.0], [20.9, 60836.0], [21.0, 60836.0], [21.1, 60840.0], [21.2, 60840.0], [21.3, 60842.0], [21.4, 60842.0], [21.5, 60844.0], [21.6, 60848.0], [21.7, 60848.0], [21.8, 60848.0], [21.9, 60849.0], [22.0, 60849.0], [22.1, 60849.0], [22.2, 60850.0], [22.3, 60850.0], [22.4, 60853.0], [22.5, 60853.0], [22.6, 60853.0], [22.7, 60854.0], [22.8, 60854.0], [22.9, 60861.0], [23.0, 60861.0], [23.1, 60861.0], [23.2, 60861.0], [23.3, 60862.0], [23.4, 60862.0], [23.5, 60863.0], [23.6, 60871.0], [23.7, 60871.0], [23.8, 60872.0], [23.9, 60872.0], [24.0, 60872.0], [24.1, 60875.0], [24.2, 60875.0], [24.3, 60877.0], [24.4, 60879.0], [24.5, 60879.0], [24.6, 60884.0], [24.7, 60885.0], [24.8, 60885.0], [24.9, 60886.0], [25.0, 60887.0], [25.1, 60887.0], [25.2, 60887.0], [25.3, 60887.0], [25.4, 60889.0], [25.5, 60890.0], [25.6, 60890.0], [25.7, 60893.0], [25.8, 60900.0], [25.9, 60900.0], [26.0, 60906.0], [26.1, 60912.0], [26.2, 60912.0], [26.3, 60913.0], [26.4, 60913.0], [26.5, 60913.0], [26.6, 60914.0], [26.7, 60914.0], [26.8, 60914.0], [26.9, 60915.0], [27.0, 60915.0], [27.1, 60917.0], [27.2, 60917.0], [27.3, 60917.0], [27.4, 60921.0], [27.5, 60921.0], [27.6, 60921.0], [27.7, 60922.0], [27.8, 60922.0], [27.9, 60924.0], [28.0, 60924.0], [28.1, 60924.0], [28.2, 60924.0], [28.3, 60927.0], [28.4, 60927.0], [28.5, 60932.0], [28.6, 60933.0], [28.7, 60933.0], [28.8, 60935.0], [28.9, 60935.0], [29.0, 60936.0], [29.1, 60937.0], [29.2, 60937.0], [29.3, 60940.0], [29.4, 60941.0], [29.5, 60941.0], [29.6, 60942.0], [29.7, 60942.0], [29.8, 60942.0], [29.9, 60948.0], [30.0, 60948.0], [30.1, 60948.0], [30.2, 60950.0], [30.3, 60950.0], [30.4, 60954.0], [30.5, 60954.0], [30.6, 60954.0], [30.7, 60956.0], [30.8, 60956.0], [30.9, 60956.0], [31.0, 60966.0], [31.1, 60966.0], [31.2, 60966.0], [31.3, 60975.0], [31.4, 60975.0], [31.5, 60976.0], [31.6, 60977.0], [31.7, 60977.0], [31.8, 60978.0], [31.9, 60979.0], [32.0, 60979.0], [32.1, 60981.0], [32.2, 60983.0], [32.3, 60983.0], [32.4, 60983.0], [32.5, 60983.0], [32.6, 60983.0], [32.7, 60984.0], [32.8, 60984.0], [32.9, 60984.0], [33.0, 60985.0], [33.1, 60985.0], [33.2, 60987.0], [33.3, 60989.0], [33.4, 60989.0], [33.5, 60989.0], [33.6, 60989.0], [33.7, 60989.0], [33.8, 60991.0], [33.9, 60991.0], [34.0, 60992.0], [34.1, 60995.0], [34.2, 60995.0], [34.3, 60999.0], [34.4, 61001.0], [34.5, 61001.0], [34.6, 61007.0], [34.7, 61011.0], [34.8, 61011.0], [34.9, 61013.0], [35.0, 61013.0], [35.1, 61013.0], [35.2, 61014.0], [35.3, 61014.0], [35.4, 61016.0], [35.5, 61017.0], [35.6, 61017.0], [35.7, 61019.0], [35.8, 61031.0], [35.9, 61031.0], [36.0, 61033.0], [36.1, 61038.0], [36.2, 61038.0], [36.3, 61038.0], [36.4, 61038.0], [36.5, 61041.0], [36.6, 61041.0], [36.7, 61041.0], [36.8, 61041.0], [36.9, 61042.0], [37.0, 61042.0], [37.1, 61042.0], [37.2, 61044.0], [37.3, 61044.0], [37.4, 61045.0], [37.5, 61046.0], [37.6, 61046.0], [37.7, 61049.0], [37.8, 61049.0], [37.9, 61052.0], [38.0, 61053.0], [38.1, 61053.0], [38.2, 61054.0], [38.3, 61054.0], [38.4, 61054.0], [38.5, 61060.0], [38.6, 61060.0], [38.7, 61060.0], [38.8, 61064.0], [38.9, 61064.0], [39.0, 61069.0], [39.1, 61071.0], [39.2, 61071.0], [39.3, 61071.0], [39.4, 61071.0], [39.5, 61071.0], [39.6, 61075.0], [39.7, 61076.0], [39.8, 61076.0], [39.9, 61076.0], [40.0, 61076.0], [40.1, 61076.0], [40.2, 61078.0], [40.3, 61078.0], [40.4, 61078.0], [40.5, 61080.0], [40.6, 61080.0], [40.7, 61081.0], [40.8, 61087.0], [40.9, 61087.0], [41.0, 61093.0], [41.1, 61098.0], [41.2, 61098.0], [41.3, 61100.0], [41.4, 61100.0], [41.5, 61103.0], [41.6, 61104.0], [41.7, 61104.0], [41.8, 61105.0], [41.9, 61106.0], [42.0, 61106.0], [42.1, 61109.0], [42.2, 61114.0], [42.3, 61114.0], [42.4, 61115.0], [42.5, 61118.0], [42.6, 61118.0], [42.7, 61118.0], [42.8, 61118.0], [42.9, 61119.0], [43.0, 61119.0], [43.1, 61119.0], [43.2, 61119.0], [43.3, 61120.0], [43.4, 61120.0], [43.5, 61126.0], [43.6, 61126.0], [43.7, 61126.0], [43.8, 61127.0], [43.9, 61127.0], [44.0, 61128.0], [44.1, 61129.0], [44.2, 61129.0], [44.3, 61132.0], [44.4, 61134.0], [44.5, 61134.0], [44.6, 61134.0], [44.7, 61138.0], [44.8, 61138.0], [44.9, 61138.0], [45.0, 61140.0], [45.1, 61140.0], [45.2, 61141.0], [45.3, 61141.0], [45.4, 61145.0], [45.5, 61147.0], [45.6, 61147.0], [45.7, 61147.0], [45.8, 61162.0], [45.9, 61162.0], [46.0, 61166.0], [46.1, 61167.0], [46.2, 61167.0], [46.3, 61168.0], [46.4, 61168.0], [46.5, 61169.0], [46.6, 61169.0], [46.7, 61169.0], [46.8, 61172.0], [46.9, 61172.0], [47.0, 61172.0], [47.1, 61173.0], [47.2, 61173.0], [47.3, 61173.0], [47.4, 61173.0], [47.5, 61173.0], [47.6, 61173.0], [47.7, 61177.0], [47.8, 61177.0], [47.9, 61180.0], [48.0, 61180.0], [48.1, 61180.0], [48.2, 61181.0], [48.3, 61181.0], [48.4, 61181.0], [48.5, 61184.0], [48.6, 61186.0], [48.7, 61186.0], [48.8, 61192.0], [48.9, 61192.0], [49.0, 61196.0], [49.1, 61198.0], [49.2, 61198.0], [49.3, 61198.0], [49.4, 61204.0], [49.5, 61204.0], [49.6, 61205.0], [49.7, 61205.0], [49.8, 61205.0], [49.9, 61208.0], [50.0, 61209.0], [50.1, 61209.0], [50.2, 61210.0], [50.3, 61210.0], [50.4, 61211.0], [50.5, 61211.0], [50.6, 61211.0], [50.7, 61212.0], [50.8, 61213.0], [50.9, 61213.0], [51.0, 61230.0], [51.1, 61231.0], [51.2, 61231.0], [51.3, 61231.0], [51.4, 61231.0], [51.5, 61233.0], [51.6, 61233.0], [51.7, 61233.0], [51.8, 61236.0], [51.9, 61236.0], [52.0, 61236.0], [52.1, 61237.0], [52.2, 61237.0], [52.3, 61237.0], [52.4, 61240.0], [52.5, 61243.0], [52.6, 61243.0], [52.7, 61245.0], [52.8, 61245.0], [52.9, 61245.0], [53.0, 61247.0], [53.1, 61247.0], [53.2, 61249.0], [53.3, 61251.0], [53.4, 61251.0], [53.5, 61252.0], [53.6, 61254.0], [53.7, 61254.0], [53.8, 61255.0], [53.9, 61255.0], [54.0, 61257.0], [54.1, 61258.0], [54.2, 61258.0], [54.3, 61259.0], [54.4, 61262.0], [54.5, 61262.0], [54.6, 61263.0], [54.7, 61267.0], [54.8, 61267.0], [54.9, 61268.0], [55.0, 61268.0], [55.1, 61268.0], [55.2, 61270.0], [55.3, 61270.0], [55.4, 61273.0], [55.5, 61274.0], [55.6, 61274.0], [55.7, 61275.0], [55.8, 61283.0], [55.9, 61283.0], [56.0, 61287.0], [56.1, 61290.0], [56.2, 61290.0], [56.3, 61291.0], [56.4, 61291.0], [56.5, 61294.0], [56.6, 61296.0], [56.7, 61296.0], [56.8, 61296.0], [56.9, 61301.0], [57.0, 61301.0], [57.1, 61301.0], [57.2, 61302.0], [57.3, 61302.0], [57.4, 61303.0], [57.5, 61303.0], [57.6, 61303.0], [57.7, 61307.0], [57.8, 61307.0], [57.9, 61307.0], [58.0, 61309.0], [58.1, 61309.0], [58.2, 61310.0], [58.3, 61314.0], [58.4, 61314.0], [58.5, 61315.0], [58.6, 61315.0], [58.7, 61315.0], [58.8, 61316.0], [58.9, 61316.0], [59.0, 61317.0], [59.1, 61318.0], [59.2, 61318.0], [59.3, 61323.0], [59.4, 61325.0], [59.5, 61325.0], [59.6, 61332.0], [59.7, 61332.0], [59.8, 61332.0], [59.9, 61333.0], [60.0, 61333.0], [60.1, 61333.0], [60.2, 61334.0], [60.3, 61334.0], [60.4, 61337.0], [60.5, 61337.0], [60.6, 61337.0], [60.7, 61338.0], [60.8, 61353.0], [60.9, 61353.0], [61.0, 61356.0], [61.1, 61357.0], [61.2, 61357.0], [61.3, 61358.0], [61.4, 61358.0], [61.5, 61359.0], [61.6, 61359.0], [61.7, 61359.0], [61.8, 61361.0], [61.9, 61362.0], [62.0, 61362.0], [62.1, 61363.0], [62.2, 61364.0], [62.3, 61364.0], [62.4, 61365.0], [62.5, 61367.0], [62.6, 61367.0], [62.7, 61368.0], [62.8, 61368.0], [62.9, 61374.0], [63.0, 61374.0], [63.1, 61374.0], [63.2, 61376.0], [63.3, 61376.0], [63.4, 61376.0], [63.5, 61379.0], [63.6, 61382.0], [63.7, 61382.0], [63.8, 61383.0], [63.9, 61383.0], [64.0, 61383.0], [64.1, 61383.0], [64.2, 61383.0], [64.3, 61387.0], [64.4, 61388.0], [64.5, 61388.0], [64.6, 61390.0], [64.7, 61394.0], [64.8, 61394.0], [64.9, 61395.0], [65.0, 61396.0], [65.1, 61396.0], [65.2, 61396.0], [65.3, 61396.0], [65.4, 61397.0], [65.5, 61401.0], [65.6, 61401.0], [65.7, 61403.0], [65.8, 61408.0], [65.9, 61408.0], [66.0, 61421.0], [66.1, 61422.0], [66.2, 61422.0], [66.3, 61422.0], [66.4, 61422.0], [66.5, 61424.0], [66.6, 61425.0], [66.7, 61425.0], [66.8, 61425.0], [66.9, 61425.0], [67.0, 61425.0], [67.1, 61429.0], [67.2, 61429.0], [67.3, 61429.0], [67.4, 61430.0], [67.5, 61432.0], [67.6, 61432.0], [67.7, 61435.0], [67.8, 61435.0], [67.9, 61437.0], [68.0, 61438.0], [68.1, 61438.0], [68.2, 61441.0], [68.3, 61444.0], [68.4, 61444.0], [68.5, 61445.0], [68.6, 61446.0], [68.7, 61446.0], [68.8, 61448.0], [68.9, 61448.0], [69.0, 61448.0], [69.1, 61449.0], [69.2, 61449.0], [69.3, 61453.0], [69.4, 61454.0], [69.5, 61454.0], [69.6, 61455.0], [69.7, 61459.0], [69.8, 61459.0], [69.9, 61460.0], [70.0, 61462.0], [70.1, 61462.0], [70.2, 61463.0], [70.3, 61463.0], [70.4, 61464.0], [70.5, 61465.0], [70.6, 61465.0], [70.7, 61466.0], [70.8, 61475.0], [70.9, 61475.0], [71.0, 61478.0], [71.1, 61478.0], [71.2, 61478.0], [71.3, 61485.0], [71.4, 61485.0], [71.5, 61486.0], [71.6, 61488.0], [71.7, 61488.0], [71.8, 61489.0], [71.9, 61491.0], [72.0, 61491.0], [72.1, 61493.0], [72.2, 61494.0], [72.3, 61494.0], [72.4, 61496.0], [72.5, 61497.0], [72.6, 61497.0], [72.7, 61501.0], [72.8, 61501.0], [72.9, 61502.0], [73.0, 61507.0], [73.1, 61507.0], [73.2, 61511.0], [73.3, 61512.0], [73.4, 61512.0], [73.5, 61512.0], [73.6, 61514.0], [73.7, 61514.0], [73.8, 61515.0], [73.9, 61515.0], [74.0, 61517.0], [74.1, 61517.0], [74.2, 61517.0], [74.3, 61518.0], [74.4, 61519.0], [74.5, 61519.0], [74.6, 61524.0], [74.7, 61524.0], [74.8, 61524.0], [74.9, 61524.0], [75.0, 61526.0], [75.1, 61526.0], [75.2, 61527.0], [75.3, 61527.0], [75.4, 61529.0], [75.5, 61531.0], [75.6, 61531.0], [75.7, 61534.0], [75.8, 61544.0], [75.9, 61544.0], [76.0, 61548.0], [76.1, 61551.0], [76.2, 61551.0], [76.3, 61551.0], [76.4, 61551.0], [76.5, 61552.0], [76.6, 61553.0], [76.7, 61553.0], [76.8, 61556.0], [76.9, 61557.0], [77.0, 61557.0], [77.1, 61558.0], [77.2, 61559.0], [77.3, 61559.0], [77.4, 61561.0], [77.5, 61563.0], [77.6, 61563.0], [77.7, 61566.0], [77.8, 61566.0], [77.9, 61569.0], [78.0, 61570.0], [78.1, 61570.0], [78.2, 61571.0], [78.3, 61572.0], [78.4, 61572.0], [78.5, 61575.0], [78.6, 61576.0], [78.7, 61576.0], [78.8, 61576.0], [78.9, 61576.0], [79.0, 61577.0], [79.1, 61579.0], [79.2, 61579.0], [79.3, 61581.0], [79.4, 61582.0], [79.5, 61582.0], [79.6, 61582.0], [79.7, 61583.0], [79.8, 61583.0], [79.9, 61585.0], [80.0, 61586.0], [80.1, 61586.0], [80.2, 61591.0], [80.3, 61591.0], [80.4, 61593.0], [80.5, 61594.0], [80.6, 61594.0], [80.7, 61594.0], [80.8, 61600.0], [80.9, 61600.0], [81.0, 61600.0], [81.1, 61610.0], [81.2, 61610.0], [81.3, 61612.0], [81.4, 61612.0], [81.5, 61616.0], [81.6, 61616.0], [81.7, 61616.0], [81.8, 61618.0], [81.9, 61620.0], [82.0, 61620.0], [82.1, 61620.0], [82.2, 61620.0], [82.3, 61620.0], [82.4, 61621.0], [82.5, 61624.0], [82.6, 61624.0], [82.7, 61625.0], [82.8, 61625.0], [82.9, 61626.0], [83.0, 61628.0], [83.1, 61628.0], [83.2, 61629.0], [83.3, 61633.0], [83.4, 61633.0], [83.5, 61633.0], [83.6, 61635.0], [83.7, 61635.0], [83.8, 61642.0], [83.9, 61642.0], [84.0, 61644.0], [84.1, 61644.0], [84.2, 61644.0], [84.3, 61644.0], [84.4, 61645.0], [84.5, 61645.0], [84.6, 61648.0], [84.7, 61652.0], [84.8, 61652.0], [84.9, 61653.0], [85.0, 61653.0], [85.1, 61653.0], [85.2, 61654.0], [85.3, 61654.0], [85.4, 61655.0], [85.5, 61656.0], [85.6, 61656.0], [85.7, 61659.0], [85.8, 61665.0], [85.9, 61665.0], [86.0, 61672.0], [86.1, 61675.0], [86.2, 61675.0], [86.3, 61675.0], [86.4, 61675.0], [86.5, 61678.0], [86.6, 61680.0], [86.7, 61680.0], [86.8, 61680.0], [86.9, 61681.0], [87.0, 61681.0], [87.1, 61681.0], [87.2, 61684.0], [87.3, 61684.0], [87.4, 61689.0], [87.5, 61689.0], [87.6, 61689.0], [87.7, 61693.0], [87.8, 61693.0], [87.9, 61695.0], [88.0, 61697.0], [88.1, 61697.0], [88.2, 61697.0], [88.3, 61699.0], [88.4, 61699.0], [88.5, 61700.0], [88.6, 61700.0], [88.7, 61700.0], [88.8, 61701.0], [88.9, 61701.0], [89.0, 61702.0], [89.1, 61703.0], [89.2, 61703.0], [89.3, 61704.0], [89.4, 61705.0], [89.5, 61705.0], [89.6, 61705.0], [89.7, 61707.0], [89.8, 61707.0], [89.9, 61710.0], [90.0, 61718.0], [90.1, 61718.0], [90.2, 61720.0], [90.3, 61720.0], [90.4, 61721.0], [90.5, 61724.0], [90.6, 61724.0], [90.7, 61724.0], [90.8, 61727.0], [90.9, 61727.0], [91.0, 61735.0], [91.1, 61736.0], [91.2, 61736.0], [91.3, 61742.0], [91.4, 61742.0], [91.5, 61744.0], [91.6, 61745.0], [91.7, 61745.0], [91.8, 61747.0], [91.9, 61748.0], [92.0, 61748.0], [92.1, 61748.0], [92.2, 61748.0], [92.3, 61748.0], [92.4, 61749.0], [92.5, 61749.0], [92.6, 61749.0], [92.7, 61753.0], [92.8, 61753.0], [92.9, 61753.0], [93.0, 61757.0], [93.1, 61757.0], [93.2, 61757.0], [93.3, 61757.0], [93.4, 61757.0], [93.5, 61758.0], [93.6, 61758.0], [93.7, 61758.0], [93.8, 61760.0], [93.9, 61760.0], [94.0, 61764.0], [94.1, 61766.0], [94.2, 61766.0], [94.3, 61768.0], [94.4, 61775.0], [94.5, 61775.0], [94.6, 61780.0], [94.7, 61781.0], [94.8, 61781.0], [94.9, 61782.0], [95.0, 61782.0], [95.1, 61782.0], [95.2, 61786.0], [95.3, 61786.0], [95.4, 61787.0], [95.5, 61787.0], [95.6, 61787.0], [95.7, 61790.0], [95.8, 61806.0], [95.9, 61806.0], [96.0, 61810.0], [96.1, 61810.0], [96.2, 61810.0], [96.3, 61813.0], [96.4, 61813.0], [96.5, 61821.0], [96.6, 61837.0], [96.7, 61837.0], [96.8, 61845.0], [96.9, 61846.0], [97.0, 61846.0], [97.1, 61850.0], [97.2, 61851.0], [97.3, 61851.0], [97.4, 61872.0], [97.5, 61874.0], [97.6, 61874.0], [97.7, 61878.0], [97.8, 61878.0], [97.9, 61887.0], [98.0, 61907.0], [98.1, 61907.0], [98.2, 61911.0], [98.3, 61914.0], [98.4, 61914.0], [98.5, 61935.0], [98.6, 61936.0], [98.7, 61936.0], [98.8, 61943.0], [98.9, 61943.0], [99.0, 61950.0], [99.1, 61971.0], [99.2, 61971.0], [99.3, 61977.0], [99.4, 62000.0], [99.5, 62000.0], [99.6, 62007.0], [99.7, 62037.0], [99.8, 62037.0], [99.9, 62066.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 59700.0, "maxY": 55.0, "series": [{"data": [[60500.0, 44.0], [60400.0, 24.0], [61300.0, 50.0], [61100.0, 47.0], [60900.0, 51.0], [60700.0, 53.0], [60600.0, 38.0], [61000.0, 51.0], [60800.0, 49.0], [61200.0, 53.0], [61400.0, 49.0], [61600.0, 51.0], [61500.0, 50.0], [61700.0, 15.0], [61800.0, 10.0], [61900.0, 5.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[59900.0, 31.0], [60600.0, 32.0], [60100.0, 33.0], [59700.0, 17.0], [60300.0, 32.0], [60200.0, 33.0], [60000.0, 34.0], [59800.0, 27.0], [60500.0, 34.0], [60400.0, 33.0], [60700.0, 8.0], [60800.0, 5.0], [60900.0, 1.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[64500.0, 4.0], [64200.0, 3.0], [64400.0, 3.0], [64600.0, 3.0], [64100.0, 14.0], [64300.0, 3.0], [64000.0, 2.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[60700.0, 46.0], [61100.0, 52.0], [60900.0, 55.0], [61300.0, 55.0], [61400.0, 46.0], [60500.0, 28.0], [60800.0, 47.0], [61000.0, 44.0], [60600.0, 44.0], [61200.0, 48.0], [61700.0, 47.0], [61600.0, 49.0], [61500.0, 52.0], [61800.0, 14.0], [61900.0, 9.0], [62000.0, 4.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1632.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 1632.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 1632.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.71875, "minX": 1.61940054E12, "maxY": 330.39062499999983, "series": [{"data": [[1.61940054E12, 330.39062499999983]], "isOverall": false, "label": "UserType3_LB-split(Nutt)", "isController": false}, {"data": [[1.61940054E12, 322.14843750000006]], "isOverall": false, "label": "UserType2_LB-split(Boss)", "isController": false}, {"data": [[1.61940054E12, 17.71875]], "isOverall": false, "label": "UserType1_LB-split(Dear)", "isController": false}, {"data": [[1.61940054E12, 210.41250000000016]], "isOverall": false, "label": "UserType4_LB-split(Haris)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940054E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 59761.0, "minX": 1.0, "maxY": 64698.0, "series": [{"data": [[50.0, 61936.0], [67.0, 61392.0], [70.0, 60820.0], [69.0, 61460.0], [74.0, 60948.0], [72.0, 61205.0], [78.0, 61332.333333333336], [76.0, 61652.0], [87.0, 61555.0], [86.0, 61395.0], [89.0, 60755.0], [95.0, 61478.0], [92.0, 61479.666666666664], [99.0, 61191.0], [97.0, 61126.0], [103.0, 61765.0], [102.0, 61506.0], [101.0, 60998.0], [107.0, 61254.0], [105.0, 61380.333333333336], [111.0, 61893.0], [112.0, 61201.8], [135.0, 61482.0], [141.0, 61417.0], [140.0, 61545.5], [138.0, 61354.0], [137.0, 61162.0], [136.0, 61035.0], [148.0, 61314.5], [146.0, 61929.0], [145.0, 60841.0], [144.0, 61053.0], [152.0, 61416.25], [174.0, 61518.0], [183.0, 61111.333333333336], [180.0, 61293.0], [179.0, 61006.0], [177.0, 61326.5], [176.0, 61062.0], [190.0, 61357.0], [188.0, 60749.0], [187.0, 61453.0], [186.0, 61490.333333333336], [192.0, 61389.0], [215.0, 61344.5], [213.0, 61184.0], [208.0, 61184.0], [223.0, 61504.0], [222.0, 60864.0], [218.0, 61248.0], [217.0, 60929.0], [228.0, 61181.5], [227.0, 61312.0], [238.0, 61599.0], [233.0, 61747.0], [247.0, 61872.0], [241.0, 61106.0], [255.0, 61059.5], [254.0, 61667.0], [271.0, 61557.5], [270.0, 60758.0], [269.0, 60694.0], [266.0, 61264.0], [265.0, 61719.0], [262.0, 61783.0], [261.0, 61399.0], [259.0, 60727.0], [284.0, 61570.0], [281.0, 61141.0], [279.0, 60950.0], [276.0, 61462.0], [274.0, 61206.5], [302.0, 60964.0], [301.0, 61241.0], [296.0, 61466.0], [295.0, 61401.5], [319.0, 60861.0], [318.0, 61149.0], [315.0, 60702.0], [312.0, 61352.5], [310.0, 61092.0], [308.0, 61497.0], [307.0, 60792.0], [306.0, 61305.0], [331.0, 61213.0], [329.0, 60829.0], [327.0, 61341.0], [328.0, 61725.0], [364.0, 61070.0], [363.0, 61454.0], [362.0, 61007.0], [360.0, 61263.0], [352.0, 61263.0], [380.0, 61269.333333333336], [377.0, 61216.0], [376.0, 60673.0], [375.0, 60994.0], [374.0, 61121.0], [372.0, 61272.8], [395.0, 60975.0], [413.0, 60835.0], [412.0, 61119.75], [408.0, 60976.5], [406.0, 61041.5], [404.0, 61744.0], [402.0, 61618.0], [430.0, 60631.0], [428.0, 61527.0], [424.0, 61143.0], [447.0, 61206.0], [445.0, 61110.0], [444.0, 60594.0], [443.0, 61654.0], [435.0, 60951.0], [432.0, 61592.0], [459.0, 60681.0], [457.0, 61065.0], [452.0, 61140.75], [450.0, 61269.0], [449.0, 61173.5], [448.0, 61077.0], [511.0, 60604.0], [510.0, 60860.0], [508.0, 61628.0], [503.0, 61436.0], [502.0, 61244.0], [516.0, 61309.0], [529.0, 60860.0], [531.0, 61110.875], [527.0, 61236.25], [515.0, 61371.0], [524.0, 60616.5], [522.0, 60669.0], [521.0, 61191.666666666664], [520.0, 61275.0], [518.0, 60795.0], [587.0, 60680.0], [585.0, 60824.0], [584.0, 60919.0], [583.0, 60458.0], [580.0, 61494.0], [579.0, 61397.5], [578.0, 60534.0], [635.0, 60594.0], [632.0, 61554.0], [629.0, 61363.0], [627.0, 61171.0], [623.0, 60979.0], [620.0, 60788.0], [661.0, 61173.0], [684.0, 61567.0], [676.0, 60800.0], [672.0, 61183.0], [754.0, 61080.5], [748.0, 60654.0], [745.0, 61194.0], [744.0, 60462.0], [795.0, 61407.333333333336], [821.0, 60493.0], [820.0, 61249.0], [816.0, 61339.5], [809.0, 61262.0], [806.0, 61034.0], [804.0, 60614.0], [802.0, 61310.0], [862.0, 60966.0], [856.0, 61508.0], [895.0, 61360.0], [887.0, 61376.0], [878.0, 60581.0], [873.0, 61541.0], [869.0, 61698.0], [868.0, 60722.0], [925.0, 60479.0], [924.0, 61472.0], [923.0, 60591.0], [920.0, 61295.0], [919.0, 60708.0], [915.0, 60772.0], [906.0, 61348.0], [898.0, 60737.0], [934.0, 61474.0], [959.0, 60478.0], [955.0, 61318.0], [949.0, 60549.0], [948.0, 60742.0], [942.0, 61396.0], [940.0, 60898.0], [939.0, 61190.0], [936.0, 61282.0], [932.0, 60514.0], [931.0, 61574.0], [929.0, 61247.666666666664], [987.0, 61282.0], [990.0, 60838.0], [986.0, 60611.0], [984.0, 61295.0], [981.0, 61224.0], [980.0, 61212.0], [978.0, 61234.0], [975.0, 60770.0], [961.0, 61173.0], [974.0, 61031.0], [973.0, 60637.0], [972.0, 60851.0], [1020.0, 60534.0], [1023.0, 61672.0], [1019.0, 61397.0], [1017.0, 61283.0], [1013.0, 60529.0], [1012.0, 61021.25], [1005.0, 61133.0], [993.0, 61360.5], [992.0, 61145.0], [995.0, 61619.0], [994.0, 61414.0], [999.0, 61111.333333333336], [998.0, 60819.5], [1004.0, 61217.0], [1003.0, 60541.0], [1002.0, 60706.0], [1010.0, 61491.0], [1011.0, 60726.0], [1083.0, 61101.0], [1087.0, 60657.5], [1056.0, 60935.666666666664], [1059.0, 61234.0], [1057.0, 60900.0], [1063.0, 60982.0], [1061.0, 61619.0], [1066.0, 61170.0], [1064.0, 60677.333333333336], [1085.0, 61489.0], [1084.0, 61355.0], [1080.0, 60996.5], [1078.0, 61673.0], [1075.0, 61015.5], [1074.0, 61089.75], [1051.0, 61199.333333333336], [1025.0, 60986.0], [1024.0, 61364.0], [1028.0, 61486.5], [1027.0, 60999.0], [1032.0, 60943.0], [1030.0, 61164.0], [1036.0, 60886.0], [1034.0, 61035.0], [1038.0, 61108.0], [1037.0, 60449.0], [1048.0, 60999.5], [1047.0, 60763.666666666664], [1046.0, 61043.0], [1045.0, 60967.0], [1042.0, 61294.0], [1071.0, 60701.0], [1069.0, 60849.0], [1146.0, 60904.0], [1151.0, 60823.666666666664], [1121.0, 61213.0], [1124.0, 60615.0], [1123.0, 60977.0], [1129.0, 61423.0], [1126.0, 60912.5], [1135.0, 61673.0], [1131.0, 60501.0], [1150.0, 60710.5], [1149.0, 61196.5], [1144.0, 60776.0], [1143.0, 61091.0], [1148.0, 60713.0], [1142.0, 60598.0], [1136.0, 61606.0], [1103.0, 60512.0], [1101.0, 61172.666666666664], [1100.0, 60907.5], [1099.0, 61430.0], [1098.0, 60972.0], [1094.0, 61022.0], [1090.0, 61033.0], [1092.0, 61034.0], [1089.0, 60947.25], [1096.0, 61602.0], [1119.0, 60641.0], [1118.0, 60471.0], [1117.0, 61471.0], [1114.0, 60995.0], [1113.0, 61651.5], [1106.0, 60584.0], [1108.0, 60522.0], [1137.0, 60466.0], [1191.0, 61290.0], [1211.0, 60689.0], [1214.0, 61215.0], [1187.0, 61010.0], [1186.0, 61486.0], [1184.0, 61044.0], [1190.0, 60999.5], [1188.0, 61085.6], [1192.0, 60855.0], [1194.0, 61360.0], [1193.0, 61412.5], [1197.0, 61458.0], [1196.0, 61336.0], [1199.0, 60967.666666666664], [1198.0, 60818.0], [1213.0, 61285.0], [1212.0, 61285.0], [1210.0, 60906.333333333336], [1208.0, 60565.0], [1207.0, 60629.0], [1206.0, 60833.333333333336], [1204.0, 61329.0], [1201.0, 61147.0], [1200.0, 60966.0], [1183.0, 60831.0], [1153.0, 60650.0], [1152.0, 60450.0], [1159.0, 61239.0], [1155.0, 61248.666666666664], [1162.0, 60977.2], [1161.0, 61654.0], [1166.0, 60768.0], [1165.0, 61349.0], [1182.0, 61347.75], [1181.0, 61097.0], [1180.0, 61028.0], [1179.0, 60503.0], [1177.0, 60823.0], [1173.0, 61121.5], [1172.0, 60764.0], [1169.0, 61376.0], [1202.0, 61532.333333333336], [1237.0, 61009.0], [1238.0, 60952.22222222222], [1218.0, 61530.0], [1217.0, 60699.333333333336], [1220.0, 61606.0], [1219.0, 61061.333333333336], [1236.0, 61214.5], [1235.0, 61000.6], [1234.0, 61152.0], [1233.0, 60959.5], [1231.0, 60779.0], [1229.0, 61012.0], [1227.0, 60588.0], [1225.0, 61327.5], [1307.0, 61657.0], [1312.0, 60922.095238095244], [1310.0, 61136.0], [1308.0, 60914.5], [1311.0, 61083.0], [1288.0, 61458.0], [1286.0, 61386.0], [1290.0, 60874.0], [1289.0, 61161.25], [1292.0, 60966.0], [1291.0, 61323.0], [1293.0, 61060.0], [1294.0, 60646.0], [1295.0, 60473.0], [1306.0, 61022.666666666664], [1305.0, 61466.0], [1304.0, 61273.33333333333], [1303.0, 60817.0], [1302.0, 61616.333333333336], [1300.0, 61610.333333333336], [1299.0, 61025.0], [1298.0, 61265.0], [1297.0, 61128.8], [1296.0, 60956.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[805.395312499999, 61121.86718749998]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[1342.0, 60424.700000000004], [1332.0, 60453.100000000006], [1322.0, 60480.00000000001], [1402.0, 60260.0], [1392.0, 60269.700000000004], [1382.0, 60328.4], [1372.0, 60382.88888888889], [1363.0, 60119.0], [1362.0, 60369.1], [1352.0, 60397.5], [1422.0, 60204.7], [1412.0, 60231.9], [1535.0, 60305.0], [1524.0, 59761.0], [1516.0, 60145.0], [1515.0, 60530.0], [1511.0, 60331.0], [1507.0, 60082.333333333336], [1572.0, 60430.666666666664], [1596.0, 60002.0], [1599.0, 60210.0], [1571.0, 60367.5], [1570.0, 60113.5], [1568.0, 59826.0], [1574.0, 60133.333333333336], [1573.0, 60112.5], [1576.0, 60205.0], [1575.0, 60233.5], [1578.0, 60246.5], [1577.0, 60436.0], [1580.0, 60208.0], [1579.0, 60437.333333333336], [1598.0, 60074.8], [1597.0, 60538.0], [1595.0, 60002.0], [1592.0, 59780.0], [1591.0, 60242.0], [1587.0, 60489.0], [1586.0, 60261.0], [1585.0, 60155.25], [1567.0, 60498.5], [1549.0, 60576.0], [1566.0, 60677.0], [1563.0, 60381.0], [1562.0, 60147.5], [1561.0, 60264.5], [1560.0, 60407.142857142855], [1559.0, 60189.5], [1558.0, 60432.0], [1557.0, 60279.0], [1556.0, 60108.0], [1555.0, 60450.0], [1553.0, 60243.0], [1552.0, 60055.0], [1628.0, 60088.0], [1632.0, 60189.20238095239], [1615.0, 60161.0], [1614.0, 60342.0], [1610.0, 60112.333333333336], [1607.0, 59964.0], [1606.0, 60594.0], [1603.0, 60445.0], [1600.0, 59811.0], [1630.0, 60266.0], [1629.0, 60469.0], [1626.0, 60481.0], [1625.0, 60539.0], [1624.0, 60113.0], [1621.0, 60259.333333333336], [1618.0, 59894.0], [1622.0, 60179.0], [1623.0, 59966.0], [1617.0, 60206.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1522.4125, 60259.89375000002]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[32.0, 64409.75], [8.0, 64099.0], [2.0, 64114.0], [9.0, 64100.0], [10.0, 64100.0], [11.0, 64099.0], [12.0, 64114.0], [3.0, 64114.0], [13.0, 64332.0], [14.0, 64698.0], [15.0, 64146.0], [4.0, 64114.0], [1.0, 64113.0], [17.0, 64641.0], [19.0, 64373.666666666664], [5.0, 64115.0], [21.0, 64319.0], [22.0, 64473.0], [23.0, 64225.0], [6.0, 64114.0], [7.0, 64114.0], [30.0, 64441.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[17.71875, 64290.71874999999]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[34.0, 61745.0], [37.0, 61777.0], [36.0, 61041.0], [39.0, 61195.0], [41.0, 62000.0], [40.0, 60848.0], [43.0, 60975.0], [45.0, 61273.666666666664], [47.0, 61676.0], [49.0, 61647.0], [53.0, 61518.5], [52.0, 61294.0], [59.0, 61300.5], [58.0, 61707.0], [61.0, 61802.333333333336], [62.0, 61448.0], [67.0, 61347.0], [65.0, 60884.0], [71.0, 61332.0], [70.0, 61780.0], [74.0, 61204.0], [82.0, 61266.666666666664], [80.0, 61586.0], [89.0, 61394.0], [115.0, 61495.0], [113.0, 61558.0], [119.0, 61493.0], [118.0, 61878.0], [117.0, 61675.0], [116.0, 61943.0], [122.0, 61450.333333333336], [127.0, 61269.0], [125.0, 60949.0], [124.0, 61429.0], [132.0, 61347.75], [128.0, 60789.0], [158.0, 61050.0], [156.0, 60951.0], [154.0, 61178.5], [166.0, 61593.0], [165.0, 61787.0], [164.0, 61914.0], [163.0, 61017.0], [162.0, 61593.0], [161.0, 60954.0], [160.0, 61529.0], [172.0, 61977.0], [171.0, 61274.0], [170.0, 61401.0], [169.0, 61461.0], [199.0, 61455.0], [198.0, 61310.0], [196.0, 61119.0], [206.0, 61046.0], [204.0, 61673.666666666664], [201.0, 61230.5], [215.0, 60797.0], [214.0, 61437.0], [211.0, 61181.0], [210.0, 61950.0], [208.0, 61821.0], [220.0, 60989.0], [218.0, 60861.0], [239.0, 61600.0], [238.0, 61810.0], [236.0, 61019.333333333336], [234.0, 60881.5], [233.0, 61425.0], [232.0, 61169.0], [247.0, 61451.5], [245.0, 61296.0], [243.0, 60976.0], [240.0, 61680.0], [252.0, 61647.75], [249.0, 60783.0], [248.0, 61488.0], [267.0, 61333.0], [264.0, 60694.0], [261.0, 61527.0], [259.0, 61815.5], [285.0, 61428.5], [282.0, 60885.0], [281.0, 60820.0], [279.0, 61396.0], [278.0, 61782.0], [276.0, 61078.0], [274.0, 60757.0], [292.0, 61418.5], [290.0, 61396.5], [289.0, 61230.5], [288.0, 61140.0], [317.0, 61594.0], [315.0, 61019.0], [334.0, 61274.5], [333.0, 61512.0], [330.0, 61178.0], [328.0, 60828.0], [327.0, 61724.0], [326.0, 60954.5], [323.0, 61787.0], [321.0, 61019.0], [349.0, 61374.5], [348.0, 60942.0], [347.0, 61582.0], [345.0, 60815.0], [344.0, 61007.0], [341.0, 60622.0], [340.0, 61258.0], [339.0, 61209.0], [365.0, 61069.0], [360.0, 61149.0], [354.0, 61517.75], [382.0, 61521.0], [372.0, 60684.0], [370.0, 61710.0], [397.0, 61296.0], [396.0, 61041.0], [394.0, 60977.0], [393.0, 61810.0], [392.0, 61233.0], [390.0, 61491.0], [389.0, 61297.666666666664], [386.0, 60956.0], [385.0, 61553.0], [404.0, 61168.0], [402.0, 61618.0], [400.0, 60677.333333333336], [429.0, 61526.0], [426.0, 61303.0], [424.0, 60822.0], [421.0, 61270.0], [419.0, 61099.333333333336], [416.0, 61080.0], [443.0, 61397.0], [441.0, 61269.0], [439.0, 61782.0], [438.0, 60565.0], [437.0, 61248.333333333336], [434.0, 60757.0], [433.0, 61464.0], [432.0, 60630.0], [461.0, 61255.0], [460.0, 60903.0], [456.0, 61512.666666666664], [453.0, 60936.0], [474.0, 61319.0], [471.0, 60711.0], [469.0, 61084.333333333336], [466.0, 61287.5], [464.0, 61148.333333333336], [511.0, 60579.0], [507.0, 60830.0], [505.0, 61071.0], [504.0, 60784.0], [502.0, 61060.0], [500.0, 61119.0], [499.0, 61323.0], [498.0, 61334.0], [541.0, 60887.0], [542.0, 60730.0], [540.0, 60766.0], [539.0, 60550.0], [538.0, 61211.666666666664], [537.0, 61307.0], [522.0, 60572.0], [513.0, 60686.0], [512.0, 61517.0], [518.0, 61373.0], [517.0, 60636.0], [521.0, 60956.0], [520.0, 61561.0], [535.0, 61314.0], [532.0, 61211.0], [531.0, 61234.2], [561.0, 61258.0], [573.0, 61360.0], [571.0, 61076.0], [570.0, 61238.666666666664], [568.0, 61425.666666666664], [558.0, 60753.0], [545.0, 60540.0], [548.0, 61301.0], [547.0, 61501.0], [551.0, 61449.0], [549.0, 61405.333333333336], [557.0, 61665.5], [555.0, 61115.0], [554.0, 60921.0], [553.0, 60633.0], [567.0, 61559.0], [566.0, 61127.0], [564.0, 61054.0], [560.0, 61258.25], [593.0, 61514.0], [607.0, 61644.0], [606.0, 61298.0], [604.0, 60537.0], [603.0, 61091.5], [591.0, 61095.666666666664], [576.0, 61209.0], [583.0, 61243.0], [578.0, 60535.0], [589.0, 61379.0], [587.0, 60599.0], [599.0, 61077.5], [596.0, 60887.0], [595.0, 61655.0], [592.0, 60624.0], [635.0, 61269.5], [637.0, 61152.0], [638.0, 60611.0], [636.0, 60989.0], [634.0, 61483.5], [632.0, 61781.0], [629.0, 60932.0], [625.0, 61569.0], [622.0, 60812.5], [610.0, 61047.0], [609.0, 61395.0], [613.0, 61786.0], [611.0, 61188.5], [615.0, 61134.0], [614.0, 61368.0], [620.0, 61208.0], [617.0, 60679.0], [669.0, 61454.0], [670.0, 61688.5], [668.0, 60864.0], [667.0, 60861.0], [664.0, 61432.333333333336], [647.0, 61134.0], [646.0, 61187.5], [642.0, 61051.0], [641.0, 61004.0], [661.0, 61053.0], [659.0, 61049.5], [658.0, 61308.5], [655.0, 61236.0], [654.0, 61037.0], [652.0, 61429.0], [650.0, 60965.0], [649.0, 61757.0], [689.0, 61626.0], [701.0, 61355.75], [700.0, 60922.5], [697.0, 61038.0], [679.0, 61246.0], [677.0, 61654.0], [676.0, 61194.666666666664], [694.0, 61409.0], [692.0, 60948.0], [690.0, 61109.0], [688.0, 61231.0], [687.0, 61625.0], [686.0, 61446.0], [685.0, 61388.0], [684.0, 61382.0], [682.0, 61459.0], [680.0, 61371.0], [731.0, 61274.0], [734.0, 61579.0], [728.0, 61757.0], [710.0, 60965.0], [708.0, 60654.0], [707.0, 61120.0], [706.0, 61052.0], [705.0, 60765.0], [704.0, 60604.0], [727.0, 60844.0], [726.0, 61446.5], [725.0, 61576.0], [723.0, 61107.0], [719.0, 61109.66666666667], [713.0, 60872.0], [712.0, 61258.0], [755.0, 60879.0], [767.0, 61621.0], [766.0, 61101.0], [762.0, 61172.0], [743.0, 61414.5], [737.0, 60796.0], [736.0, 61307.0], [748.0, 61575.0], [747.0, 61518.0], [746.0, 60653.0], [745.0, 60649.0], [744.0, 61700.0], [759.0, 61103.0], [757.0, 61561.0], [756.0, 61610.0], [754.0, 61143.5], [752.0, 60897.5], [799.0, 61172.0], [793.0, 61492.5], [773.0, 60976.666666666664], [772.0, 60553.0], [769.0, 61150.8], [791.0, 60602.0], [790.0, 60672.0], [789.0, 60548.0], [787.0, 61185.5], [784.0, 61326.333333333336], [783.0, 60914.0], [782.0, 60942.0], [781.0, 61705.0], [777.0, 60545.0], [776.0, 61744.0], [817.0, 60610.0], [829.0, 61357.0], [828.0, 60870.0], [826.0, 60927.0], [807.0, 61501.333333333336], [802.0, 60549.0], [823.0, 61677.0], [820.0, 60538.0], [818.0, 60528.0], [816.0, 61119.0], [814.0, 61007.0], [809.0, 60831.5], [808.0, 60937.0], [849.0, 60906.0], [862.0, 61268.0], [863.0, 61421.0], [848.0, 60695.5], [861.0, 60663.0], [857.0, 61264.0], [845.0, 61084.0], [847.0, 61753.0], [837.0, 61145.666666666664], [836.0, 61697.0], [835.0, 61678.0], [833.0, 61691.0], [832.0, 61049.0], [843.0, 60850.0], [841.0, 61498.0], [844.0, 60922.0], [854.0, 60846.0], [853.0, 60623.0], [852.0, 60742.0], [851.0, 60992.0], [893.0, 61748.0], [895.0, 60709.0], [892.0, 61172.0], [891.0, 61140.666666666664], [888.0, 61485.0], [870.0, 60657.0], [868.0, 61303.0], [866.0, 60989.0], [865.0, 61254.0], [885.0, 61052.0], [882.0, 61188.5], [881.0, 61735.0], [878.0, 60794.0], [877.0, 60582.0], [876.0, 61353.0], [873.0, 61585.5], [872.0, 60943.5], [914.0, 61194.0], [925.0, 61100.0], [903.0, 60854.0], [902.0, 60936.5], [901.0, 61087.0], [900.0, 61093.0], [898.0, 61536.5], [897.0, 61423.0], [919.0, 60982.666666666664], [918.0, 60840.0], [915.0, 61758.0], [913.0, 61600.0], [912.0, 60535.0], [908.0, 60915.0], [906.0, 61689.0], [905.0, 60667.0], [904.0, 61033.0], [955.0, 60966.0], [959.0, 61475.0], [952.0, 60708.0], [946.0, 60517.0], [945.0, 60597.0], [944.0, 60609.0], [941.0, 61633.0], [937.0, 61283.0], [935.0, 60971.0], [929.0, 60674.0], [983.0, 61169.0], [971.0, 60961.0], [970.0, 61397.0], [969.0, 61724.0], [968.0, 60543.0], [963.0, 61101.0], [961.0, 61101.0], [960.0, 61044.0], [1028.0, 61749.0], [1027.0, 60706.0]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[552.51875, 61206.868749999994]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1632.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61940054E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940054E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 60259.89375000002, "minX": 1.61940054E12, "maxY": 64290.71874999999, "series": [{"data": [[1.61940054E12, 61121.86718749998]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940054E12, 60259.89375000002]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940054E12, 64290.71874999999]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940054E12, 61206.868749999994]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940054E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940054E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940054E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940054E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940054E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940054E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 59759.0, "minX": 1.61940054E12, "maxY": 64698.0, "series": [{"data": [[1.61940054E12, 64698.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61940054E12, 61673.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61940054E12, 64214.44]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61940054E12, 61781.35]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61940054E12, 59759.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61940054E12, 61017.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940054E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60258.5, "minX": 32.0, "maxY": 64209.0, "series": [{"data": [[32.0, 64209.0], [320.0, 60258.5], [1280.0, 61169.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1280.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 32.0, "maxY": 4.9E-324, "series": [{"data": [[32.0, 0.0], [320.0, 0.0], [1280.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1280.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 27.2, "minX": 1.61940048E12, "maxY": 27.2, "series": [{"data": [[1.61940048E12, 27.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940048E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 27.2, "minX": 1.61940054E12, "maxY": 27.2, "series": [{"data": [[1.61940054E12, 27.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940054E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.61940054E12, "maxY": 10.666666666666666, "series": [{"data": [[1.61940054E12, 0.5333333333333333]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61940054E12, 10.666666666666666]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61940054E12, 5.333333333333333]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61940054E12, 10.666666666666666]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940054E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 27.2, "minX": 1.61940054E12, "maxY": 27.2, "series": [{"data": [[1.61940054E12, 27.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940054E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

