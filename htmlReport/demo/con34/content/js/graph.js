/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 59979.0, "minX": 0.0, "maxY": 64653.0, "series": [{"data": [[0.0, 60990.0], [0.1, 60990.0], [0.2, 60990.0], [0.3, 60991.0], [0.4, 60991.0], [0.5, 60997.0], [0.6, 60998.0], [0.7, 60998.0], [0.8, 61000.0], [0.9, 61001.0], [1.0, 61001.0], [1.1, 61005.0], [1.2, 61011.0], [1.3, 61011.0], [1.4, 61017.0], [1.5, 61017.0], [1.6, 61017.0], [1.7, 61020.0], [1.8, 61020.0], [1.9, 61020.0], [2.0, 61022.0], [2.1, 61023.0], [2.2, 61023.0], [2.3, 61024.0], [2.4, 61024.0], [2.5, 61029.0], [2.6, 61029.0], [2.7, 61030.0], [2.8, 61035.0], [2.9, 61035.0], [3.0, 61037.0], [3.1, 61037.0], [3.2, 61037.0], [3.3, 61039.0], [3.4, 61039.0], [3.5, 61039.0], [3.6, 61039.0], [3.7, 61044.0], [3.8, 61044.0], [3.9, 61048.0], [4.0, 61051.0], [4.1, 61051.0], [4.2, 61052.0], [4.3, 61054.0], [4.4, 61054.0], [4.5, 61054.0], [4.6, 61055.0], [4.7, 61055.0], [4.8, 61055.0], [4.9, 61057.0], [5.0, 61057.0], [5.1, 61057.0], [5.2, 61057.0], [5.3, 61059.0], [5.4, 61059.0], [5.5, 61059.0], [5.6, 61062.0], [5.7, 61062.0], [5.8, 61063.0], [5.9, 61064.0], [6.0, 61064.0], [6.1, 61066.0], [6.2, 61068.0], [6.3, 61068.0], [6.4, 61070.0], [6.5, 61071.0], [6.6, 61071.0], [6.7, 61073.0], [6.8, 61073.0], [6.9, 61073.0], [7.0, 61075.0], [7.1, 61078.0], [7.2, 61078.0], [7.3, 61078.0], [7.4, 61078.0], [7.5, 61078.0], [7.6, 61082.0], [7.7, 61084.0], [7.8, 61084.0], [7.9, 61084.0], [8.0, 61086.0], [8.1, 61087.0], [8.2, 61087.0], [8.3, 61088.0], [8.4, 61088.0], [8.5, 61088.0], [8.6, 61088.0], [8.7, 61090.0], [8.8, 61090.0], [8.9, 61090.0], [9.0, 61092.0], [9.1, 61092.0], [9.2, 61095.0], [9.3, 61096.0], [9.4, 61096.0], [9.5, 61099.0], [9.6, 61103.0], [9.7, 61103.0], [9.8, 61105.0], [9.9, 61106.0], [10.0, 61106.0], [10.1, 61106.0], [10.2, 61106.0], [10.3, 61107.0], [10.4, 61107.0], [10.5, 61108.0], [10.6, 61109.0], [10.7, 61109.0], [10.8, 61113.0], [10.9, 61114.0], [11.0, 61114.0], [11.1, 61115.0], [11.2, 61118.0], [11.3, 61118.0], [11.4, 61119.0], [11.5, 61120.0], [11.6, 61120.0], [11.7, 61121.0], [11.8, 61122.0], [11.9, 61122.0], [12.0, 61122.0], [12.1, 61125.0], [12.2, 61125.0], [12.3, 61125.0], [12.4, 61125.0], [12.5, 61125.0], [12.6, 61125.0], [12.7, 61127.0], [12.8, 61128.0], [12.9, 61128.0], [13.0, 61130.0], [13.1, 61131.0], [13.2, 61131.0], [13.3, 61133.0], [13.4, 61134.0], [13.5, 61134.0], [13.6, 61135.0], [13.7, 61136.0], [13.8, 61136.0], [13.9, 61138.0], [14.0, 61139.0], [14.1, 61139.0], [14.2, 61140.0], [14.3, 61144.0], [14.4, 61144.0], [14.5, 61145.0], [14.6, 61147.0], [14.7, 61147.0], [14.8, 61147.0], [14.9, 61148.0], [15.0, 61149.0], [15.1, 61149.0], [15.2, 61151.0], [15.3, 61152.0], [15.4, 61152.0], [15.5, 61154.0], [15.6, 61154.0], [15.7, 61154.0], [15.8, 61155.0], [15.9, 61156.0], [16.0, 61156.0], [16.1, 61156.0], [16.2, 61157.0], [16.3, 61157.0], [16.4, 61158.0], [16.5, 61160.0], [16.6, 61160.0], [16.7, 61161.0], [16.8, 61162.0], [16.9, 61162.0], [17.0, 61163.0], [17.1, 61164.0], [17.2, 61164.0], [17.3, 61165.0], [17.4, 61166.0], [17.5, 61167.0], [17.6, 61167.0], [17.7, 61167.0], [17.8, 61171.0], [17.9, 61171.0], [18.0, 61171.0], [18.1, 61172.0], [18.2, 61172.0], [18.3, 61172.0], [18.4, 61172.0], [18.5, 61172.0], [18.6, 61174.0], [18.7, 61176.0], [18.8, 61176.0], [18.9, 61177.0], [19.0, 61183.0], [19.1, 61183.0], [19.2, 61186.0], [19.3, 61188.0], [19.4, 61188.0], [19.5, 61189.0], [19.6, 61189.0], [19.7, 61189.0], [19.8, 61189.0], [19.9, 61191.0], [20.0, 61191.0], [20.1, 61193.0], [20.2, 61197.0], [20.3, 61197.0], [20.4, 61197.0], [20.5, 61200.0], [20.6, 61201.0], [20.7, 61201.0], [20.8, 61203.0], [20.9, 61204.0], [21.0, 61204.0], [21.1, 61205.0], [21.2, 61208.0], [21.3, 61208.0], [21.4, 61210.0], [21.5, 61210.0], [21.6, 61210.0], [21.7, 61210.0], [21.8, 61211.0], [21.9, 61211.0], [22.0, 61216.0], [22.1, 61216.0], [22.2, 61216.0], [22.3, 61217.0], [22.4, 61217.0], [22.5, 61217.0], [22.6, 61222.0], [22.7, 61222.0], [22.8, 61222.0], [22.9, 61222.0], [23.0, 61222.0], [23.1, 61223.0], [23.2, 61223.0], [23.3, 61224.0], [23.4, 61225.0], [23.5, 61225.0], [23.6, 61226.0], [23.7, 61227.0], [23.8, 61227.0], [23.9, 61228.0], [24.0, 61229.0], [24.1, 61229.0], [24.2, 61229.0], [24.3, 61229.0], [24.4, 61229.0], [24.5, 61231.0], [24.6, 61231.0], [24.7, 61231.0], [24.8, 61231.0], [24.9, 61232.0], [25.0, 61232.0], [25.1, 61234.0], [25.2, 61234.0], [25.3, 61236.0], [25.4, 61236.0], [25.5, 61237.0], [25.6, 61238.0], [25.7, 61238.0], [25.8, 61239.0], [25.9, 61242.0], [26.0, 61242.0], [26.1, 61243.0], [26.2, 61245.0], [26.3, 61245.0], [26.4, 61246.0], [26.5, 61249.0], [26.6, 61249.0], [26.7, 61249.0], [26.8, 61251.0], [26.9, 61251.0], [27.0, 61251.0], [27.1, 61251.0], [27.2, 61251.0], [27.3, 61253.0], [27.4, 61255.0], [27.5, 61255.0], [27.6, 61256.0], [27.7, 61257.0], [27.8, 61258.0], [27.9, 61258.0], [28.0, 61259.0], [28.1, 61260.0], [28.2, 61260.0], [28.3, 61261.0], [28.4, 61262.0], [28.5, 61262.0], [28.6, 61263.0], [28.7, 61263.0], [28.8, 61263.0], [28.9, 61264.0], [29.0, 61267.0], [29.1, 61267.0], [29.2, 61268.0], [29.3, 61271.0], [29.4, 61271.0], [29.5, 61272.0], [29.6, 61272.0], [29.7, 61272.0], [29.8, 61274.0], [29.9, 61275.0], [30.0, 61275.0], [30.1, 61276.0], [30.2, 61280.0], [30.3, 61281.0], [30.4, 61281.0], [30.5, 61282.0], [30.6, 61282.0], [30.7, 61282.0], [30.8, 61284.0], [30.9, 61285.0], [31.0, 61285.0], [31.1, 61286.0], [31.2, 61289.0], [31.3, 61289.0], [31.4, 61289.0], [31.5, 61290.0], [31.6, 61290.0], [31.7, 61291.0], [31.8, 61291.0], [31.9, 61291.0], [32.0, 61293.0], [32.1, 61295.0], [32.2, 61295.0], [32.3, 61296.0], [32.4, 61296.0], [32.5, 61296.0], [32.6, 61297.0], [32.7, 61297.0], [32.8, 61298.0], [32.9, 61298.0], [33.0, 61298.0], [33.1, 61299.0], [33.2, 61299.0], [33.3, 61300.0], [33.4, 61300.0], [33.5, 61300.0], [33.6, 61301.0], [33.7, 61301.0], [33.8, 61301.0], [33.9, 61303.0], [34.0, 61304.0], [34.1, 61304.0], [34.2, 61308.0], [34.3, 61309.0], [34.4, 61309.0], [34.5, 61309.0], [34.6, 61311.0], [34.7, 61311.0], [34.8, 61314.0], [34.9, 61314.0], [35.0, 61314.0], [35.1, 61317.0], [35.2, 61319.0], [35.3, 61322.0], [35.4, 61322.0], [35.5, 61322.0], [35.6, 61323.0], [35.7, 61323.0], [35.8, 61324.0], [35.9, 61324.0], [36.0, 61324.0], [36.1, 61324.0], [36.2, 61324.0], [36.3, 61324.0], [36.4, 61325.0], [36.5, 61325.0], [36.6, 61325.0], [36.7, 61326.0], [36.8, 61327.0], [36.9, 61327.0], [37.0, 61327.0], [37.1, 61327.0], [37.2, 61327.0], [37.3, 61330.0], [37.4, 61332.0], [37.5, 61332.0], [37.6, 61332.0], [37.7, 61333.0], [37.8, 61333.0], [37.9, 61333.0], [38.0, 61336.0], [38.1, 61337.0], [38.2, 61337.0], [38.3, 61338.0], [38.4, 61338.0], [38.5, 61338.0], [38.6, 61340.0], [38.7, 61341.0], [38.8, 61341.0], [38.9, 61343.0], [39.0, 61343.0], [39.1, 61343.0], [39.2, 61343.0], [39.3, 61345.0], [39.4, 61345.0], [39.5, 61346.0], [39.6, 61347.0], [39.7, 61347.0], [39.8, 61348.0], [39.9, 61348.0], [40.0, 61348.0], [40.1, 61349.0], [40.2, 61350.0], [40.3, 61351.0], [40.4, 61351.0], [40.5, 61352.0], [40.6, 61352.0], [40.7, 61352.0], [40.8, 61353.0], [40.9, 61353.0], [41.0, 61353.0], [41.1, 61355.0], [41.2, 61355.0], [41.3, 61355.0], [41.4, 61357.0], [41.5, 61357.0], [41.6, 61357.0], [41.7, 61358.0], [41.8, 61359.0], [41.9, 61359.0], [42.0, 61360.0], [42.1, 61361.0], [42.2, 61361.0], [42.3, 61363.0], [42.4, 61364.0], [42.5, 61364.0], [42.6, 61364.0], [42.7, 61365.0], [42.8, 61365.0], [42.9, 61365.0], [43.0, 61366.0], [43.1, 61366.0], [43.2, 61366.0], [43.3, 61367.0], [43.4, 61369.0], [43.5, 61369.0], [43.6, 61369.0], [43.7, 61370.0], [43.8, 61370.0], [43.9, 61370.0], [44.0, 61370.0], [44.1, 61370.0], [44.2, 61371.0], [44.3, 61375.0], [44.4, 61375.0], [44.5, 61376.0], [44.6, 61379.0], [44.7, 61379.0], [44.8, 61379.0], [44.9, 61381.0], [45.0, 61381.0], [45.1, 61385.0], [45.2, 61386.0], [45.3, 61388.0], [45.4, 61388.0], [45.5, 61388.0], [45.6, 61389.0], [45.7, 61389.0], [45.8, 61391.0], [45.9, 61392.0], [46.0, 61392.0], [46.1, 61393.0], [46.2, 61394.0], [46.3, 61394.0], [46.4, 61394.0], [46.5, 61394.0], [46.6, 61394.0], [46.7, 61394.0], [46.8, 61396.0], [46.9, 61396.0], [47.0, 61396.0], [47.1, 61397.0], [47.2, 61397.0], [47.3, 61398.0], [47.4, 61399.0], [47.5, 61399.0], [47.6, 61399.0], [47.7, 61401.0], [47.8, 61401.0], [47.9, 61401.0], [48.0, 61403.0], [48.1, 61403.0], [48.2, 61403.0], [48.3, 61407.0], [48.4, 61408.0], [48.5, 61408.0], [48.6, 61410.0], [48.7, 61410.0], [48.8, 61410.0], [48.9, 61411.0], [49.0, 61412.0], [49.1, 61412.0], [49.2, 61414.0], [49.3, 61414.0], [49.4, 61414.0], [49.5, 61415.0], [49.6, 61416.0], [49.7, 61416.0], [49.8, 61417.0], [49.9, 61420.0], [50.0, 61420.0], [50.1, 61421.0], [50.2, 61422.0], [50.3, 61423.0], [50.4, 61423.0], [50.5, 61424.0], [50.6, 61425.0], [50.7, 61425.0], [50.8, 61426.0], [50.9, 61426.0], [51.0, 61426.0], [51.1, 61427.0], [51.2, 61427.0], [51.3, 61427.0], [51.4, 61428.0], [51.5, 61429.0], [51.6, 61429.0], [51.7, 61429.0], [51.8, 61429.0], [51.9, 61429.0], [52.0, 61430.0], [52.1, 61431.0], [52.2, 61431.0], [52.3, 61431.0], [52.4, 61432.0], [52.5, 61432.0], [52.6, 61435.0], [52.7, 61437.0], [52.8, 61437.0], [52.9, 61437.0], [53.0, 61438.0], [53.1, 61439.0], [53.2, 61439.0], [53.3, 61443.0], [53.4, 61444.0], [53.5, 61444.0], [53.6, 61444.0], [53.7, 61444.0], [53.8, 61444.0], [53.9, 61445.0], [54.0, 61446.0], [54.1, 61446.0], [54.2, 61447.0], [54.3, 61449.0], [54.4, 61449.0], [54.5, 61451.0], [54.6, 61452.0], [54.7, 61452.0], [54.8, 61454.0], [54.9, 61455.0], [55.0, 61455.0], [55.1, 61456.0], [55.2, 61456.0], [55.3, 61457.0], [55.4, 61457.0], [55.5, 61458.0], [55.6, 61459.0], [55.7, 61459.0], [55.8, 61460.0], [55.9, 61460.0], [56.0, 61460.0], [56.1, 61460.0], [56.2, 61460.0], [56.3, 61460.0], [56.4, 61461.0], [56.5, 61464.0], [56.6, 61464.0], [56.7, 61466.0], [56.8, 61466.0], [56.9, 61466.0], [57.0, 61466.0], [57.1, 61467.0], [57.2, 61467.0], [57.3, 61468.0], [57.4, 61468.0], [57.5, 61468.0], [57.6, 61471.0], [57.7, 61472.0], [57.8, 61473.0], [57.9, 61473.0], [58.0, 61474.0], [58.1, 61474.0], [58.2, 61474.0], [58.3, 61476.0], [58.4, 61476.0], [58.5, 61476.0], [58.6, 61478.0], [58.7, 61478.0], [58.8, 61478.0], [58.9, 61478.0], [59.0, 61481.0], [59.1, 61481.0], [59.2, 61482.0], [59.3, 61483.0], [59.4, 61483.0], [59.5, 61483.0], [59.6, 61486.0], [59.7, 61486.0], [59.8, 61488.0], [59.9, 61488.0], [60.0, 61488.0], [60.1, 61489.0], [60.2, 61491.0], [60.3, 61493.0], [60.4, 61493.0], [60.5, 61493.0], [60.6, 61493.0], [60.7, 61493.0], [60.8, 61494.0], [60.9, 61494.0], [61.0, 61494.0], [61.1, 61495.0], [61.2, 61496.0], [61.3, 61496.0], [61.4, 61496.0], [61.5, 61497.0], [61.6, 61497.0], [61.7, 61498.0], [61.8, 61498.0], [61.9, 61498.0], [62.0, 61500.0], [62.1, 61501.0], [62.2, 61501.0], [62.3, 61503.0], [62.4, 61503.0], [62.5, 61503.0], [62.6, 61504.0], [62.7, 61507.0], [62.8, 61507.0], [62.9, 61507.0], [63.0, 61508.0], [63.1, 61508.0], [63.2, 61508.0], [63.3, 61510.0], [63.4, 61510.0], [63.5, 61510.0], [63.6, 61511.0], [63.7, 61514.0], [63.8, 61514.0], [63.9, 61514.0], [64.0, 61514.0], [64.1, 61514.0], [64.2, 61516.0], [64.3, 61516.0], [64.4, 61516.0], [64.5, 61517.0], [64.6, 61517.0], [64.7, 61517.0], [64.8, 61518.0], [64.9, 61519.0], [65.0, 61519.0], [65.1, 61520.0], [65.2, 61521.0], [65.3, 61521.0], [65.4, 61521.0], [65.5, 61522.0], [65.6, 61522.0], [65.7, 61522.0], [65.8, 61522.0], [65.9, 61526.0], [66.0, 61526.0], [66.1, 61526.0], [66.2, 61526.0], [66.3, 61526.0], [66.4, 61527.0], [66.5, 61527.0], [66.6, 61527.0], [66.7, 61527.0], [66.8, 61527.0], [66.9, 61527.0], [67.0, 61528.0], [67.1, 61530.0], [67.2, 61530.0], [67.3, 61532.0], [67.4, 61533.0], [67.5, 61533.0], [67.6, 61534.0], [67.7, 61536.0], [67.8, 61536.0], [67.9, 61536.0], [68.0, 61538.0], [68.1, 61545.0], [68.2, 61545.0], [68.3, 61545.0], [68.4, 61546.0], [68.5, 61546.0], [68.6, 61546.0], [68.7, 61546.0], [68.8, 61546.0], [68.9, 61546.0], [69.0, 61547.0], [69.1, 61547.0], [69.2, 61547.0], [69.3, 61548.0], [69.4, 61548.0], [69.5, 61548.0], [69.6, 61548.0], [69.7, 61548.0], [69.8, 61549.0], [69.9, 61550.0], [70.0, 61550.0], [70.1, 61550.0], [70.2, 61550.0], [70.3, 61550.0], [70.4, 61550.0], [70.5, 61551.0], [70.6, 61552.0], [70.7, 61552.0], [70.8, 61553.0], [70.9, 61554.0], [71.0, 61554.0], [71.1, 61555.0], [71.2, 61557.0], [71.3, 61557.0], [71.4, 61558.0], [71.5, 61560.0], [71.6, 61560.0], [71.7, 61560.0], [71.8, 61561.0], [71.9, 61561.0], [72.0, 61562.0], [72.1, 61563.0], [72.2, 61563.0], [72.3, 61564.0], [72.4, 61565.0], [72.5, 61565.0], [72.6, 61565.0], [72.7, 61567.0], [72.8, 61570.0], [72.9, 61570.0], [73.0, 61570.0], [73.1, 61570.0], [73.2, 61570.0], [73.3, 61572.0], [73.4, 61572.0], [73.5, 61572.0], [73.6, 61575.0], [73.7, 61576.0], [73.8, 61576.0], [73.9, 61579.0], [74.0, 61579.0], [74.1, 61579.0], [74.2, 61579.0], [74.3, 61580.0], [74.4, 61580.0], [74.5, 61580.0], [74.6, 61582.0], [74.7, 61582.0], [74.8, 61582.0], [74.9, 61582.0], [75.0, 61582.0], [75.1, 61583.0], [75.2, 61583.0], [75.3, 61584.0], [75.4, 61584.0], [75.5, 61587.0], [75.6, 61588.0], [75.7, 61588.0], [75.8, 61590.0], [75.9, 61591.0], [76.0, 61591.0], [76.1, 61592.0], [76.2, 61594.0], [76.3, 61594.0], [76.4, 61595.0], [76.5, 61595.0], [76.6, 61595.0], [76.7, 61597.0], [76.8, 61599.0], [76.9, 61599.0], [77.0, 61599.0], [77.1, 61600.0], [77.2, 61600.0], [77.3, 61602.0], [77.4, 61603.0], [77.5, 61603.0], [77.6, 61604.0], [77.7, 61606.0], [77.8, 61607.0], [77.9, 61607.0], [78.0, 61607.0], [78.1, 61608.0], [78.2, 61608.0], [78.3, 61610.0], [78.4, 61613.0], [78.5, 61613.0], [78.6, 61613.0], [78.7, 61614.0], [78.8, 61614.0], [78.9, 61614.0], [79.0, 61614.0], [79.1, 61614.0], [79.2, 61617.0], [79.3, 61617.0], [79.4, 61617.0], [79.5, 61618.0], [79.6, 61619.0], [79.7, 61619.0], [79.8, 61623.0], [79.9, 61623.0], [80.0, 61623.0], [80.1, 61623.0], [80.2, 61624.0], [80.3, 61624.0], [80.4, 61624.0], [80.5, 61625.0], [80.6, 61628.0], [80.7, 61628.0], [80.8, 61628.0], [80.9, 61629.0], [81.0, 61629.0], [81.1, 61632.0], [81.2, 61633.0], [81.3, 61633.0], [81.4, 61634.0], [81.5, 61635.0], [81.6, 61635.0], [81.7, 61635.0], [81.8, 61636.0], [81.9, 61636.0], [82.0, 61636.0], [82.1, 61637.0], [82.2, 61637.0], [82.3, 61637.0], [82.4, 61637.0], [82.5, 61637.0], [82.6, 61639.0], [82.7, 61639.0], [82.8, 61642.0], [82.9, 61642.0], [83.0, 61645.0], [83.1, 61645.0], [83.2, 61645.0], [83.3, 61645.0], [83.4, 61646.0], [83.5, 61646.0], [83.6, 61646.0], [83.7, 61646.0], [83.8, 61646.0], [83.9, 61648.0], [84.0, 61648.0], [84.1, 61648.0], [84.2, 61650.0], [84.3, 61653.0], [84.4, 61653.0], [84.5, 61653.0], [84.6, 61654.0], [84.7, 61654.0], [84.8, 61655.0], [84.9, 61656.0], [85.0, 61657.0], [85.1, 61657.0], [85.2, 61657.0], [85.3, 61658.0], [85.4, 61658.0], [85.5, 61659.0], [85.6, 61659.0], [85.7, 61659.0], [85.8, 61664.0], [85.9, 61664.0], [86.0, 61664.0], [86.1, 61664.0], [86.2, 61664.0], [86.3, 61664.0], [86.4, 61665.0], [86.5, 61666.0], [86.6, 61666.0], [86.7, 61668.0], [86.8, 61668.0], [86.9, 61668.0], [87.0, 61670.0], [87.1, 61671.0], [87.2, 61671.0], [87.3, 61673.0], [87.4, 61674.0], [87.5, 61674.0], [87.6, 61674.0], [87.7, 61681.0], [87.8, 61682.0], [87.9, 61682.0], [88.0, 61682.0], [88.1, 61683.0], [88.2, 61683.0], [88.3, 61684.0], [88.4, 61686.0], [88.5, 61686.0], [88.6, 61688.0], [88.7, 61690.0], [88.8, 61690.0], [88.9, 61691.0], [89.0, 61692.0], [89.1, 61692.0], [89.2, 61696.0], [89.3, 61696.0], [89.4, 61696.0], [89.5, 61699.0], [89.6, 61703.0], [89.7, 61703.0], [89.8, 61705.0], [89.9, 61706.0], [90.0, 61708.0], [90.1, 61708.0], [90.2, 61712.0], [90.3, 61715.0], [90.4, 61715.0], [90.5, 61719.0], [90.6, 61721.0], [90.7, 61721.0], [90.8, 61722.0], [90.9, 61724.0], [91.0, 61724.0], [91.1, 61724.0], [91.2, 61727.0], [91.3, 61727.0], [91.4, 61731.0], [91.5, 61736.0], [91.6, 61736.0], [91.7, 61739.0], [91.8, 61741.0], [91.9, 61741.0], [92.0, 61742.0], [92.1, 61744.0], [92.2, 61744.0], [92.3, 61749.0], [92.4, 61752.0], [92.5, 61759.0], [92.6, 61759.0], [92.7, 61763.0], [92.8, 61772.0], [92.9, 61772.0], [93.0, 61773.0], [93.1, 61775.0], [93.2, 61775.0], [93.3, 61778.0], [93.4, 61781.0], [93.5, 61781.0], [93.6, 61783.0], [93.7, 61783.0], [93.8, 61783.0], [93.9, 61785.0], [94.0, 61786.0], [94.1, 61786.0], [94.2, 61792.0], [94.3, 61799.0], [94.4, 61799.0], [94.5, 61802.0], [94.6, 61804.0], [94.7, 61804.0], [94.8, 61807.0], [94.9, 61814.0], [95.0, 61816.0], [95.1, 61816.0], [95.2, 61817.0], [95.3, 61825.0], [95.4, 61825.0], [95.5, 61826.0], [95.6, 61832.0], [95.7, 61832.0], [95.8, 61833.0], [95.9, 61842.0], [96.0, 61842.0], [96.1, 61845.0], [96.2, 61849.0], [96.3, 61849.0], [96.4, 61851.0], [96.5, 61865.0], [96.6, 61865.0], [96.7, 61876.0], [96.8, 61879.0], [96.9, 61879.0], [97.0, 61884.0], [97.1, 61886.0], [97.2, 61886.0], [97.3, 61887.0], [97.4, 61890.0], [97.5, 61899.0], [97.6, 61899.0], [97.7, 61908.0], [97.8, 61919.0], [97.9, 61919.0], [98.0, 61919.0], [98.1, 61921.0], [98.2, 61921.0], [98.3, 61923.0], [98.4, 61934.0], [98.5, 61934.0], [98.6, 61950.0], [98.7, 61950.0], [98.8, 61950.0], [98.9, 61952.0], [99.0, 61958.0], [99.1, 61958.0], [99.2, 61962.0], [99.3, 61966.0], [99.4, 61966.0], [99.5, 61988.0], [99.6, 62020.0], [99.7, 62020.0], [99.8, 62025.0], [99.9, 62054.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 59979.0], [0.1, 59979.0], [0.2, 59981.0], [0.3, 59985.0], [0.4, 59985.0], [0.5, 59986.0], [0.6, 59988.0], [0.7, 59988.0], [0.8, 59988.0], [0.9, 59989.0], [1.0, 59989.0], [1.1, 59990.0], [1.2, 59990.0], [1.3, 59990.0], [1.4, 59990.0], [1.5, 59990.0], [1.6, 59990.0], [1.7, 59991.0], [1.8, 59991.0], [1.9, 59991.0], [2.0, 59992.0], [2.1, 59994.0], [2.2, 59994.0], [2.3, 59996.0], [2.4, 59997.0], [2.5, 59997.0], [2.6, 59997.0], [2.7, 59999.0], [2.8, 60003.0], [2.9, 60003.0], [3.0, 60006.0], [3.1, 60007.0], [3.2, 60007.0], [3.3, 60007.0], [3.4, 60013.0], [3.5, 60013.0], [3.6, 60015.0], [3.7, 60016.0], [3.8, 60016.0], [3.9, 60016.0], [4.0, 60018.0], [4.1, 60018.0], [4.2, 60020.0], [4.3, 60023.0], [4.4, 60023.0], [4.5, 60024.0], [4.6, 60025.0], [4.7, 60025.0], [4.8, 60025.0], [4.9, 60026.0], [5.0, 60026.0], [5.1, 60027.0], [5.2, 60028.0], [5.3, 60028.0], [5.4, 60028.0], [5.5, 60030.0], [5.6, 60031.0], [5.7, 60031.0], [5.8, 60032.0], [5.9, 60033.0], [6.0, 60033.0], [6.1, 60035.0], [6.2, 60037.0], [6.3, 60037.0], [6.4, 60039.0], [6.5, 60041.0], [6.6, 60041.0], [6.7, 60044.0], [6.8, 60045.0], [6.9, 60045.0], [7.0, 60046.0], [7.1, 60048.0], [7.2, 60048.0], [7.3, 60048.0], [7.4, 60048.0], [7.5, 60048.0], [7.6, 60051.0], [7.7, 60052.0], [7.8, 60054.0], [7.9, 60054.0], [8.0, 60055.0], [8.1, 60057.0], [8.2, 60057.0], [8.3, 60062.0], [8.4, 60062.0], [8.5, 60062.0], [8.6, 60063.0], [8.7, 60064.0], [8.8, 60064.0], [8.9, 60064.0], [9.0, 60064.0], [9.1, 60064.0], [9.2, 60065.0], [9.3, 60065.0], [9.4, 60065.0], [9.5, 60069.0], [9.6, 60071.0], [9.7, 60071.0], [9.8, 60071.0], [9.9, 60073.0], [10.0, 60073.0], [10.1, 60074.0], [10.2, 60076.0], [10.3, 60076.0], [10.4, 60076.0], [10.5, 60080.0], [10.6, 60082.0], [10.7, 60082.0], [10.8, 60084.0], [10.9, 60085.0], [11.0, 60085.0], [11.1, 60086.0], [11.2, 60089.0], [11.3, 60089.0], [11.4, 60090.0], [11.5, 60090.0], [11.6, 60090.0], [11.7, 60091.0], [11.8, 60092.0], [11.9, 60092.0], [12.0, 60093.0], [12.1, 60094.0], [12.2, 60094.0], [12.3, 60094.0], [12.4, 60094.0], [12.5, 60094.0], [12.6, 60096.0], [12.7, 60097.0], [12.8, 60098.0], [12.9, 60098.0], [13.0, 60099.0], [13.1, 60099.0], [13.2, 60099.0], [13.3, 60102.0], [13.4, 60104.0], [13.5, 60104.0], [13.6, 60104.0], [13.7, 60106.0], [13.8, 60106.0], [13.9, 60109.0], [14.0, 60109.0], [14.1, 60109.0], [14.2, 60113.0], [14.3, 60116.0], [14.4, 60116.0], [14.5, 60116.0], [14.6, 60116.0], [14.7, 60116.0], [14.8, 60119.0], [14.9, 60119.0], [15.0, 60119.0], [15.1, 60121.0], [15.2, 60121.0], [15.3, 60123.0], [15.4, 60123.0], [15.5, 60123.0], [15.6, 60123.0], [15.7, 60123.0], [15.8, 60124.0], [15.9, 60125.0], [16.0, 60125.0], [16.1, 60125.0], [16.2, 60126.0], [16.3, 60126.0], [16.4, 60127.0], [16.5, 60128.0], [16.6, 60128.0], [16.7, 60129.0], [16.8, 60129.0], [16.9, 60129.0], [17.0, 60130.0], [17.1, 60133.0], [17.2, 60133.0], [17.3, 60134.0], [17.4, 60134.0], [17.5, 60134.0], [17.6, 60135.0], [17.7, 60138.0], [17.8, 60138.0], [17.9, 60138.0], [18.0, 60140.0], [18.1, 60144.0], [18.2, 60144.0], [18.3, 60144.0], [18.4, 60150.0], [18.5, 60150.0], [18.6, 60152.0], [18.7, 60152.0], [18.8, 60152.0], [18.9, 60157.0], [19.0, 60157.0], [19.1, 60157.0], [19.2, 60157.0], [19.3, 60157.0], [19.4, 60157.0], [19.5, 60158.0], [19.6, 60159.0], [19.7, 60159.0], [19.8, 60161.0], [19.9, 60161.0], [20.0, 60161.0], [20.1, 60162.0], [20.2, 60163.0], [20.3, 60163.0], [20.4, 60163.0], [20.5, 60165.0], [20.6, 60166.0], [20.7, 60166.0], [20.8, 60166.0], [20.9, 60167.0], [21.0, 60167.0], [21.1, 60167.0], [21.2, 60167.0], [21.3, 60167.0], [21.4, 60169.0], [21.5, 60170.0], [21.6, 60170.0], [21.7, 60173.0], [21.8, 60173.0], [21.9, 60173.0], [22.0, 60174.0], [22.1, 60177.0], [22.2, 60177.0], [22.3, 60177.0], [22.4, 60179.0], [22.5, 60179.0], [22.6, 60183.0], [22.7, 60184.0], [22.8, 60184.0], [22.9, 60184.0], [23.0, 60186.0], [23.1, 60188.0], [23.2, 60188.0], [23.3, 60188.0], [23.4, 60188.0], [23.5, 60188.0], [23.6, 60188.0], [23.7, 60189.0], [23.8, 60189.0], [23.9, 60189.0], [24.0, 60189.0], [24.1, 60189.0], [24.2, 60190.0], [24.3, 60191.0], [24.4, 60191.0], [24.5, 60192.0], [24.6, 60192.0], [24.7, 60192.0], [24.8, 60192.0], [24.9, 60194.0], [25.0, 60194.0], [25.1, 60196.0], [25.2, 60196.0], [25.3, 60197.0], [25.4, 60197.0], [25.5, 60198.0], [25.6, 60199.0], [25.7, 60199.0], [25.8, 60201.0], [25.9, 60202.0], [26.0, 60202.0], [26.1, 60202.0], [26.2, 60203.0], [26.3, 60203.0], [26.4, 60212.0], [26.5, 60212.0], [26.6, 60212.0], [26.7, 60216.0], [26.8, 60217.0], [26.9, 60217.0], [27.0, 60220.0], [27.1, 60221.0], [27.2, 60221.0], [27.3, 60222.0], [27.4, 60222.0], [27.5, 60222.0], [27.6, 60225.0], [27.7, 60225.0], [27.8, 60226.0], [27.9, 60226.0], [28.0, 60226.0], [28.1, 60226.0], [28.2, 60226.0], [28.3, 60227.0], [28.4, 60228.0], [28.5, 60228.0], [28.6, 60229.0], [28.7, 60230.0], [28.8, 60230.0], [28.9, 60230.0], [29.0, 60231.0], [29.1, 60231.0], [29.2, 60231.0], [29.3, 60231.0], [29.4, 60231.0], [29.5, 60232.0], [29.6, 60235.0], [29.7, 60235.0], [29.8, 60235.0], [29.9, 60235.0], [30.0, 60235.0], [30.1, 60235.0], [30.2, 60235.0], [30.3, 60238.0], [30.4, 60238.0], [30.5, 60239.0], [30.6, 60241.0], [30.7, 60241.0], [30.8, 60245.0], [30.9, 60245.0], [31.0, 60245.0], [31.1, 60247.0], [31.2, 60251.0], [31.3, 60251.0], [31.4, 60252.0], [31.5, 60252.0], [31.6, 60252.0], [31.7, 60253.0], [31.8, 60254.0], [31.9, 60254.0], [32.0, 60257.0], [32.1, 60258.0], [32.2, 60258.0], [32.3, 60258.0], [32.4, 60258.0], [32.5, 60258.0], [32.6, 60259.0], [32.7, 60259.0], [32.8, 60262.0], [32.9, 60262.0], [33.0, 60262.0], [33.1, 60262.0], [33.2, 60262.0], [33.3, 60263.0], [33.4, 60263.0], [33.5, 60263.0], [33.6, 60264.0], [33.7, 60265.0], [33.8, 60265.0], [33.9, 60266.0], [34.0, 60267.0], [34.1, 60267.0], [34.2, 60268.0], [34.3, 60268.0], [34.4, 60268.0], [34.5, 60270.0], [34.6, 60270.0], [34.7, 60270.0], [34.8, 60271.0], [34.9, 60273.0], [35.0, 60273.0], [35.1, 60274.0], [35.2, 60275.0], [35.3, 60276.0], [35.4, 60276.0], [35.5, 60277.0], [35.6, 60280.0], [35.7, 60280.0], [35.8, 60280.0], [35.9, 60284.0], [36.0, 60284.0], [36.1, 60284.0], [36.2, 60287.0], [36.3, 60287.0], [36.4, 60287.0], [36.5, 60292.0], [36.6, 60292.0], [36.7, 60293.0], [36.8, 60293.0], [36.9, 60293.0], [37.0, 60293.0], [37.1, 60294.0], [37.2, 60294.0], [37.3, 60294.0], [37.4, 60295.0], [37.5, 60295.0], [37.6, 60297.0], [37.7, 60297.0], [37.8, 60299.0], [37.9, 60299.0], [38.0, 60300.0], [38.1, 60300.0], [38.2, 60300.0], [38.3, 60300.0], [38.4, 60300.0], [38.5, 60300.0], [38.6, 60301.0], [38.7, 60302.0], [38.8, 60302.0], [38.9, 60303.0], [39.0, 60304.0], [39.1, 60304.0], [39.2, 60304.0], [39.3, 60305.0], [39.4, 60305.0], [39.5, 60306.0], [39.6, 60307.0], [39.7, 60307.0], [39.8, 60309.0], [39.9, 60309.0], [40.0, 60309.0], [40.1, 60310.0], [40.2, 60312.0], [40.3, 60313.0], [40.4, 60313.0], [40.5, 60319.0], [40.6, 60320.0], [40.7, 60320.0], [40.8, 60320.0], [40.9, 60321.0], [41.0, 60321.0], [41.1, 60322.0], [41.2, 60323.0], [41.3, 60323.0], [41.4, 60324.0], [41.5, 60327.0], [41.6, 60327.0], [41.7, 60328.0], [41.8, 60328.0], [41.9, 60328.0], [42.0, 60329.0], [42.1, 60329.0], [42.2, 60329.0], [42.3, 60330.0], [42.4, 60330.0], [42.5, 60330.0], [42.6, 60330.0], [42.7, 60332.0], [42.8, 60333.0], [42.9, 60333.0], [43.0, 60333.0], [43.1, 60333.0], [43.2, 60333.0], [43.3, 60334.0], [43.4, 60335.0], [43.5, 60335.0], [43.6, 60335.0], [43.7, 60336.0], [43.8, 60336.0], [43.9, 60336.0], [44.0, 60337.0], [44.1, 60337.0], [44.2, 60338.0], [44.3, 60338.0], [44.4, 60338.0], [44.5, 60339.0], [44.6, 60342.0], [44.7, 60342.0], [44.8, 60342.0], [44.9, 60344.0], [45.0, 60344.0], [45.1, 60346.0], [45.2, 60346.0], [45.3, 60347.0], [45.4, 60347.0], [45.5, 60347.0], [45.6, 60348.0], [45.7, 60348.0], [45.8, 60348.0], [45.9, 60349.0], [46.0, 60349.0], [46.1, 60351.0], [46.2, 60352.0], [46.3, 60352.0], [46.4, 60354.0], [46.5, 60354.0], [46.6, 60354.0], [46.7, 60355.0], [46.8, 60360.0], [46.9, 60360.0], [47.0, 60360.0], [47.1, 60362.0], [47.2, 60362.0], [47.3, 60362.0], [47.4, 60364.0], [47.5, 60364.0], [47.6, 60364.0], [47.7, 60366.0], [47.8, 60367.0], [47.9, 60367.0], [48.0, 60367.0], [48.1, 60368.0], [48.2, 60368.0], [48.3, 60368.0], [48.4, 60368.0], [48.5, 60368.0], [48.6, 60370.0], [48.7, 60370.0], [48.8, 60370.0], [48.9, 60371.0], [49.0, 60371.0], [49.1, 60371.0], [49.2, 60373.0], [49.3, 60374.0], [49.4, 60374.0], [49.5, 60375.0], [49.6, 60375.0], [49.7, 60375.0], [49.8, 60376.0], [49.9, 60376.0], [50.0, 60376.0], [50.1, 60379.0], [50.2, 60382.0], [50.3, 60384.0], [50.4, 60384.0], [50.5, 60385.0], [50.6, 60385.0], [50.7, 60385.0], [50.8, 60387.0], [50.9, 60389.0], [51.0, 60389.0], [51.1, 60390.0], [51.2, 60391.0], [51.3, 60391.0], [51.4, 60394.0], [51.5, 60394.0], [51.6, 60394.0], [51.7, 60394.0], [51.8, 60394.0], [51.9, 60394.0], [52.0, 60395.0], [52.1, 60395.0], [52.2, 60395.0], [52.3, 60396.0], [52.4, 60398.0], [52.5, 60398.0], [52.6, 60398.0], [52.7, 60398.0], [52.8, 60400.0], [52.9, 60400.0], [53.0, 60400.0], [53.1, 60400.0], [53.2, 60400.0], [53.3, 60401.0], [53.4, 60402.0], [53.5, 60402.0], [53.6, 60402.0], [53.7, 60403.0], [53.8, 60403.0], [53.9, 60405.0], [54.0, 60406.0], [54.1, 60406.0], [54.2, 60406.0], [54.3, 60406.0], [54.4, 60406.0], [54.5, 60407.0], [54.6, 60408.0], [54.7, 60408.0], [54.8, 60412.0], [54.9, 60412.0], [55.0, 60412.0], [55.1, 60413.0], [55.2, 60414.0], [55.3, 60414.0], [55.4, 60414.0], [55.5, 60414.0], [55.6, 60415.0], [55.7, 60415.0], [55.8, 60415.0], [55.9, 60415.0], [56.0, 60415.0], [56.1, 60415.0], [56.2, 60416.0], [56.3, 60416.0], [56.4, 60416.0], [56.5, 60417.0], [56.6, 60417.0], [56.7, 60417.0], [56.8, 60417.0], [56.9, 60417.0], [57.0, 60420.0], [57.1, 60423.0], [57.2, 60423.0], [57.3, 60423.0], [57.4, 60425.0], [57.5, 60425.0], [57.6, 60427.0], [57.7, 60428.0], [57.8, 60430.0], [57.9, 60430.0], [58.0, 60430.0], [58.1, 60431.0], [58.2, 60431.0], [58.3, 60432.0], [58.4, 60433.0], [58.5, 60433.0], [58.6, 60434.0], [58.7, 60434.0], [58.8, 60434.0], [58.9, 60435.0], [59.0, 60436.0], [59.1, 60436.0], [59.2, 60437.0], [59.3, 60438.0], [59.4, 60438.0], [59.5, 60438.0], [59.6, 60438.0], [59.7, 60438.0], [59.8, 60442.0], [59.9, 60443.0], [60.0, 60443.0], [60.1, 60445.0], [60.2, 60445.0], [60.3, 60450.0], [60.4, 60450.0], [60.5, 60451.0], [60.6, 60454.0], [60.7, 60454.0], [60.8, 60455.0], [60.9, 60455.0], [61.0, 60455.0], [61.1, 60456.0], [61.2, 60456.0], [61.3, 60456.0], [61.4, 60458.0], [61.5, 60459.0], [61.6, 60459.0], [61.7, 60460.0], [61.8, 60463.0], [61.9, 60463.0], [62.0, 60463.0], [62.1, 60463.0], [62.2, 60463.0], [62.3, 60464.0], [62.4, 60464.0], [62.5, 60464.0], [62.6, 60464.0], [62.7, 60465.0], [62.8, 60466.0], [62.9, 60466.0], [63.0, 60466.0], [63.1, 60467.0], [63.2, 60467.0], [63.3, 60467.0], [63.4, 60468.0], [63.5, 60468.0], [63.6, 60470.0], [63.7, 60471.0], [63.8, 60471.0], [63.9, 60472.0], [64.0, 60473.0], [64.1, 60473.0], [64.2, 60474.0], [64.3, 60475.0], [64.4, 60475.0], [64.5, 60482.0], [64.6, 60482.0], [64.7, 60482.0], [64.8, 60483.0], [64.9, 60484.0], [65.0, 60484.0], [65.1, 60484.0], [65.2, 60486.0], [65.3, 60488.0], [65.4, 60488.0], [65.5, 60488.0], [65.6, 60489.0], [65.7, 60489.0], [65.8, 60490.0], [65.9, 60490.0], [66.0, 60490.0], [66.1, 60490.0], [66.2, 60491.0], [66.3, 60491.0], [66.4, 60491.0], [66.5, 60492.0], [66.6, 60492.0], [66.7, 60492.0], [66.8, 60493.0], [66.9, 60493.0], [67.0, 60493.0], [67.1, 60493.0], [67.2, 60493.0], [67.3, 60496.0], [67.4, 60496.0], [67.5, 60496.0], [67.6, 60497.0], [67.7, 60498.0], [67.8, 60501.0], [67.9, 60501.0], [68.0, 60502.0], [68.1, 60504.0], [68.2, 60504.0], [68.3, 60504.0], [68.4, 60504.0], [68.5, 60504.0], [68.6, 60504.0], [68.7, 60505.0], [68.8, 60505.0], [68.9, 60506.0], [69.0, 60506.0], [69.1, 60506.0], [69.2, 60508.0], [69.3, 60510.0], [69.4, 60510.0], [69.5, 60511.0], [69.6, 60512.0], [69.7, 60512.0], [69.8, 60513.0], [69.9, 60515.0], [70.0, 60515.0], [70.1, 60516.0], [70.2, 60518.0], [70.3, 60522.0], [70.4, 60522.0], [70.5, 60524.0], [70.6, 60524.0], [70.7, 60524.0], [70.8, 60526.0], [70.9, 60526.0], [71.0, 60526.0], [71.1, 60527.0], [71.2, 60527.0], [71.3, 60527.0], [71.4, 60528.0], [71.5, 60529.0], [71.6, 60529.0], [71.7, 60529.0], [71.8, 60531.0], [71.9, 60531.0], [72.0, 60531.0], [72.1, 60531.0], [72.2, 60531.0], [72.3, 60532.0], [72.4, 60532.0], [72.5, 60532.0], [72.6, 60534.0], [72.7, 60534.0], [72.8, 60534.0], [72.9, 60534.0], [73.0, 60535.0], [73.1, 60535.0], [73.2, 60535.0], [73.3, 60536.0], [73.4, 60537.0], [73.5, 60537.0], [73.6, 60537.0], [73.7, 60538.0], [73.8, 60538.0], [73.9, 60541.0], [74.0, 60543.0], [74.1, 60543.0], [74.2, 60543.0], [74.3, 60545.0], [74.4, 60545.0], [74.5, 60546.0], [74.6, 60546.0], [74.7, 60546.0], [74.8, 60547.0], [74.9, 60549.0], [75.0, 60549.0], [75.1, 60550.0], [75.2, 60553.0], [75.3, 60553.0], [75.4, 60553.0], [75.5, 60554.0], [75.6, 60555.0], [75.7, 60555.0], [75.8, 60557.0], [75.9, 60557.0], [76.0, 60557.0], [76.1, 60558.0], [76.2, 60558.0], [76.3, 60558.0], [76.4, 60558.0], [76.5, 60559.0], [76.6, 60559.0], [76.7, 60559.0], [76.8, 60561.0], [76.9, 60561.0], [77.0, 60562.0], [77.1, 60562.0], [77.2, 60562.0], [77.3, 60562.0], [77.4, 60562.0], [77.5, 60562.0], [77.6, 60563.0], [77.7, 60564.0], [77.8, 60564.0], [77.9, 60564.0], [78.0, 60565.0], [78.1, 60565.0], [78.2, 60565.0], [78.3, 60566.0], [78.4, 60566.0], [78.5, 60566.0], [78.6, 60566.0], [78.7, 60567.0], [78.8, 60567.0], [78.9, 60569.0], [79.0, 60570.0], [79.1, 60570.0], [79.2, 60572.0], [79.3, 60573.0], [79.4, 60573.0], [79.5, 60574.0], [79.6, 60575.0], [79.7, 60575.0], [79.8, 60577.0], [79.9, 60579.0], [80.0, 60579.0], [80.1, 60579.0], [80.2, 60579.0], [80.3, 60581.0], [80.4, 60581.0], [80.5, 60581.0], [80.6, 60586.0], [80.7, 60586.0], [80.8, 60586.0], [80.9, 60587.0], [81.0, 60587.0], [81.1, 60589.0], [81.2, 60592.0], [81.3, 60592.0], [81.4, 60595.0], [81.5, 60596.0], [81.6, 60596.0], [81.7, 60596.0], [81.8, 60599.0], [81.9, 60599.0], [82.0, 60599.0], [82.1, 60599.0], [82.2, 60599.0], [82.3, 60600.0], [82.4, 60600.0], [82.5, 60601.0], [82.6, 60601.0], [82.7, 60602.0], [82.8, 60602.0], [82.9, 60602.0], [83.0, 60602.0], [83.1, 60603.0], [83.2, 60603.0], [83.3, 60604.0], [83.4, 60605.0], [83.5, 60605.0], [83.6, 60606.0], [83.7, 60607.0], [83.8, 60607.0], [83.9, 60608.0], [84.0, 60608.0], [84.1, 60608.0], [84.2, 60609.0], [84.3, 60609.0], [84.4, 60609.0], [84.5, 60611.0], [84.6, 60611.0], [84.7, 60611.0], [84.8, 60612.0], [84.9, 60614.0], [85.0, 60615.0], [85.1, 60615.0], [85.2, 60619.0], [85.3, 60620.0], [85.4, 60620.0], [85.5, 60621.0], [85.6, 60624.0], [85.7, 60624.0], [85.8, 60626.0], [85.9, 60627.0], [86.0, 60627.0], [86.1, 60628.0], [86.2, 60630.0], [86.3, 60630.0], [86.4, 60630.0], [86.5, 60630.0], [86.6, 60630.0], [86.7, 60632.0], [86.8, 60632.0], [86.9, 60632.0], [87.0, 60633.0], [87.1, 60633.0], [87.2, 60633.0], [87.3, 60634.0], [87.4, 60634.0], [87.5, 60635.0], [87.6, 60635.0], [87.7, 60635.0], [87.8, 60636.0], [87.9, 60636.0], [88.0, 60636.0], [88.1, 60637.0], [88.2, 60637.0], [88.3, 60637.0], [88.4, 60637.0], [88.5, 60637.0], [88.6, 60638.0], [88.7, 60638.0], [88.8, 60638.0], [88.9, 60639.0], [89.0, 60640.0], [89.1, 60640.0], [89.2, 60643.0], [89.3, 60644.0], [89.4, 60644.0], [89.5, 60644.0], [89.6, 60645.0], [89.7, 60645.0], [89.8, 60645.0], [89.9, 60652.0], [90.0, 60653.0], [90.1, 60653.0], [90.2, 60653.0], [90.3, 60654.0], [90.4, 60654.0], [90.5, 60654.0], [90.6, 60660.0], [90.7, 60660.0], [90.8, 60663.0], [90.9, 60667.0], [91.0, 60667.0], [91.1, 60667.0], [91.2, 60670.0], [91.3, 60670.0], [91.4, 60673.0], [91.5, 60674.0], [91.6, 60674.0], [91.7, 60680.0], [91.8, 60681.0], [91.9, 60681.0], [92.0, 60689.0], [92.1, 60690.0], [92.2, 60690.0], [92.3, 60694.0], [92.4, 60697.0], [92.5, 60700.0], [92.6, 60700.0], [92.7, 60701.0], [92.8, 60704.0], [92.9, 60704.0], [93.0, 60709.0], [93.1, 60710.0], [93.2, 60710.0], [93.3, 60713.0], [93.4, 60715.0], [93.5, 60715.0], [93.6, 60720.0], [93.7, 60723.0], [93.8, 60723.0], [93.9, 60728.0], [94.0, 60734.0], [94.1, 60734.0], [94.2, 60739.0], [94.3, 60740.0], [94.4, 60740.0], [94.5, 60742.0], [94.6, 60747.0], [94.7, 60747.0], [94.8, 60749.0], [94.9, 60757.0], [95.0, 60761.0], [95.1, 60761.0], [95.2, 60766.0], [95.3, 60769.0], [95.4, 60769.0], [95.5, 60770.0], [95.6, 60772.0], [95.7, 60772.0], [95.8, 60777.0], [95.9, 60784.0], [96.0, 60784.0], [96.1, 60790.0], [96.2, 60796.0], [96.3, 60796.0], [96.4, 60796.0], [96.5, 60803.0], [96.6, 60803.0], [96.7, 60807.0], [96.8, 60816.0], [96.9, 60816.0], [97.0, 60825.0], [97.1, 60827.0], [97.2, 60827.0], [97.3, 60831.0], [97.4, 60833.0], [97.5, 60837.0], [97.6, 60837.0], [97.7, 60845.0], [97.8, 60852.0], [97.9, 60852.0], [98.0, 60857.0], [98.1, 60860.0], [98.2, 60860.0], [98.3, 60863.0], [98.4, 60875.0], [98.5, 60875.0], [98.6, 60888.0], [98.7, 60892.0], [98.8, 60892.0], [98.9, 60897.0], [99.0, 60903.0], [99.1, 60903.0], [99.2, 60919.0], [99.3, 60927.0], [99.4, 60927.0], [99.5, 60934.0], [99.6, 60950.0], [99.7, 60950.0], [99.8, 60965.0], [99.9, 60994.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64098.0], [0.1, 64098.0], [0.2, 64098.0], [0.3, 64098.0], [0.4, 64098.0], [0.5, 64098.0], [0.6, 64098.0], [0.7, 64098.0], [0.8, 64098.0], [0.9, 64098.0], [1.0, 64098.0], [1.1, 64098.0], [1.2, 64098.0], [1.3, 64098.0], [1.4, 64098.0], [1.5, 64098.0], [1.6, 64098.0], [1.7, 64098.0], [1.8, 64098.0], [1.9, 64098.0], [2.0, 64098.0], [2.1, 64098.0], [2.2, 64098.0], [2.3, 64098.0], [2.4, 64098.0], [2.5, 64098.0], [2.6, 64098.0], [2.7, 64098.0], [2.8, 64098.0], [2.9, 64098.0], [3.0, 64102.0], [3.1, 64102.0], [3.2, 64102.0], [3.3, 64102.0], [3.4, 64102.0], [3.5, 64102.0], [3.6, 64102.0], [3.7, 64102.0], [3.8, 64102.0], [3.9, 64102.0], [4.0, 64102.0], [4.1, 64102.0], [4.2, 64102.0], [4.3, 64102.0], [4.4, 64102.0], [4.5, 64102.0], [4.6, 64102.0], [4.7, 64102.0], [4.8, 64102.0], [4.9, 64102.0], [5.0, 64102.0], [5.1, 64102.0], [5.2, 64102.0], [5.3, 64102.0], [5.4, 64102.0], [5.5, 64102.0], [5.6, 64102.0], [5.7, 64102.0], [5.8, 64102.0], [5.9, 64106.0], [6.0, 64106.0], [6.1, 64106.0], [6.2, 64106.0], [6.3, 64106.0], [6.4, 64106.0], [6.5, 64106.0], [6.6, 64106.0], [6.7, 64106.0], [6.8, 64106.0], [6.9, 64106.0], [7.0, 64106.0], [7.1, 64106.0], [7.2, 64106.0], [7.3, 64106.0], [7.4, 64106.0], [7.5, 64106.0], [7.6, 64106.0], [7.7, 64106.0], [7.8, 64106.0], [7.9, 64106.0], [8.0, 64106.0], [8.1, 64106.0], [8.2, 64106.0], [8.3, 64106.0], [8.4, 64106.0], [8.5, 64106.0], [8.6, 64106.0], [8.7, 64106.0], [8.8, 64106.0], [8.9, 64106.0], [9.0, 64106.0], [9.1, 64106.0], [9.2, 64106.0], [9.3, 64106.0], [9.4, 64106.0], [9.5, 64106.0], [9.6, 64106.0], [9.7, 64106.0], [9.8, 64106.0], [9.9, 64106.0], [10.0, 64106.0], [10.1, 64106.0], [10.2, 64106.0], [10.3, 64106.0], [10.4, 64106.0], [10.5, 64106.0], [10.6, 64106.0], [10.7, 64106.0], [10.8, 64106.0], [10.9, 64106.0], [11.0, 64106.0], [11.1, 64106.0], [11.2, 64106.0], [11.3, 64106.0], [11.4, 64106.0], [11.5, 64106.0], [11.6, 64106.0], [11.7, 64106.0], [11.8, 64110.0], [11.9, 64110.0], [12.0, 64110.0], [12.1, 64110.0], [12.2, 64110.0], [12.3, 64110.0], [12.4, 64110.0], [12.5, 64110.0], [12.6, 64110.0], [12.7, 64110.0], [12.8, 64110.0], [12.9, 64110.0], [13.0, 64110.0], [13.1, 64110.0], [13.2, 64110.0], [13.3, 64110.0], [13.4, 64110.0], [13.5, 64110.0], [13.6, 64110.0], [13.7, 64110.0], [13.8, 64110.0], [13.9, 64110.0], [14.0, 64110.0], [14.1, 64110.0], [14.2, 64110.0], [14.3, 64110.0], [14.4, 64110.0], [14.5, 64110.0], [14.6, 64110.0], [14.7, 64110.0], [14.8, 64113.0], [14.9, 64113.0], [15.0, 64113.0], [15.1, 64113.0], [15.2, 64113.0], [15.3, 64113.0], [15.4, 64113.0], [15.5, 64113.0], [15.6, 64113.0], [15.7, 64113.0], [15.8, 64113.0], [15.9, 64113.0], [16.0, 64113.0], [16.1, 64113.0], [16.2, 64113.0], [16.3, 64113.0], [16.4, 64113.0], [16.5, 64113.0], [16.6, 64113.0], [16.7, 64113.0], [16.8, 64113.0], [16.9, 64113.0], [17.0, 64113.0], [17.1, 64113.0], [17.2, 64113.0], [17.3, 64113.0], [17.4, 64113.0], [17.5, 64113.0], [17.6, 64113.0], [17.7, 64115.0], [17.8, 64115.0], [17.9, 64115.0], [18.0, 64115.0], [18.1, 64115.0], [18.2, 64115.0], [18.3, 64115.0], [18.4, 64115.0], [18.5, 64115.0], [18.6, 64115.0], [18.7, 64115.0], [18.8, 64115.0], [18.9, 64115.0], [19.0, 64115.0], [19.1, 64115.0], [19.2, 64115.0], [19.3, 64115.0], [19.4, 64115.0], [19.5, 64115.0], [19.6, 64115.0], [19.7, 64115.0], [19.8, 64115.0], [19.9, 64115.0], [20.0, 64115.0], [20.1, 64115.0], [20.2, 64115.0], [20.3, 64115.0], [20.4, 64115.0], [20.5, 64115.0], [20.6, 64116.0], [20.7, 64116.0], [20.8, 64116.0], [20.9, 64116.0], [21.0, 64116.0], [21.1, 64116.0], [21.2, 64116.0], [21.3, 64116.0], [21.4, 64116.0], [21.5, 64116.0], [21.6, 64116.0], [21.7, 64116.0], [21.8, 64116.0], [21.9, 64116.0], [22.0, 64116.0], [22.1, 64116.0], [22.2, 64116.0], [22.3, 64116.0], [22.4, 64116.0], [22.5, 64116.0], [22.6, 64116.0], [22.7, 64116.0], [22.8, 64116.0], [22.9, 64116.0], [23.0, 64116.0], [23.1, 64116.0], [23.2, 64116.0], [23.3, 64116.0], [23.4, 64116.0], [23.5, 64116.0], [23.6, 64123.0], [23.7, 64123.0], [23.8, 64123.0], [23.9, 64123.0], [24.0, 64123.0], [24.1, 64123.0], [24.2, 64123.0], [24.3, 64123.0], [24.4, 64123.0], [24.5, 64123.0], [24.6, 64123.0], [24.7, 64123.0], [24.8, 64123.0], [24.9, 64123.0], [25.0, 64123.0], [25.1, 64123.0], [25.2, 64123.0], [25.3, 64123.0], [25.4, 64123.0], [25.5, 64123.0], [25.6, 64123.0], [25.7, 64123.0], [25.8, 64123.0], [25.9, 64123.0], [26.0, 64123.0], [26.1, 64123.0], [26.2, 64123.0], [26.3, 64123.0], [26.4, 64123.0], [26.5, 64124.0], [26.6, 64124.0], [26.7, 64124.0], [26.8, 64124.0], [26.9, 64124.0], [27.0, 64124.0], [27.1, 64124.0], [27.2, 64124.0], [27.3, 64124.0], [27.4, 64124.0], [27.5, 64124.0], [27.6, 64124.0], [27.7, 64124.0], [27.8, 64124.0], [27.9, 64124.0], [28.0, 64124.0], [28.1, 64124.0], [28.2, 64124.0], [28.3, 64124.0], [28.4, 64124.0], [28.5, 64124.0], [28.6, 64124.0], [28.7, 64124.0], [28.8, 64124.0], [28.9, 64124.0], [29.0, 64124.0], [29.1, 64124.0], [29.2, 64124.0], [29.3, 64124.0], [29.4, 64124.0], [29.5, 64125.0], [29.6, 64125.0], [29.7, 64125.0], [29.8, 64125.0], [29.9, 64125.0], [30.0, 64125.0], [30.1, 64125.0], [30.2, 64125.0], [30.3, 64125.0], [30.4, 64125.0], [30.5, 64125.0], [30.6, 64125.0], [30.7, 64125.0], [30.8, 64125.0], [30.9, 64125.0], [31.0, 64125.0], [31.1, 64125.0], [31.2, 64125.0], [31.3, 64125.0], [31.4, 64125.0], [31.5, 64125.0], [31.6, 64125.0], [31.7, 64125.0], [31.8, 64125.0], [31.9, 64125.0], [32.0, 64125.0], [32.1, 64125.0], [32.2, 64125.0], [32.3, 64125.0], [32.4, 64127.0], [32.5, 64127.0], [32.6, 64127.0], [32.7, 64127.0], [32.8, 64127.0], [32.9, 64127.0], [33.0, 64127.0], [33.1, 64127.0], [33.2, 64127.0], [33.3, 64127.0], [33.4, 64127.0], [33.5, 64127.0], [33.6, 64127.0], [33.7, 64127.0], [33.8, 64127.0], [33.9, 64127.0], [34.0, 64127.0], [34.1, 64127.0], [34.2, 64127.0], [34.3, 64127.0], [34.4, 64127.0], [34.5, 64127.0], [34.6, 64127.0], [34.7, 64127.0], [34.8, 64127.0], [34.9, 64127.0], [35.0, 64127.0], [35.1, 64127.0], [35.2, 64127.0], [35.3, 64128.0], [35.4, 64128.0], [35.5, 64128.0], [35.6, 64128.0], [35.7, 64128.0], [35.8, 64128.0], [35.9, 64128.0], [36.0, 64128.0], [36.1, 64128.0], [36.2, 64128.0], [36.3, 64128.0], [36.4, 64128.0], [36.5, 64128.0], [36.6, 64128.0], [36.7, 64128.0], [36.8, 64128.0], [36.9, 64128.0], [37.0, 64128.0], [37.1, 64128.0], [37.2, 64128.0], [37.3, 64128.0], [37.4, 64128.0], [37.5, 64128.0], [37.6, 64128.0], [37.7, 64128.0], [37.8, 64128.0], [37.9, 64128.0], [38.0, 64128.0], [38.1, 64128.0], [38.2, 64128.0], [38.3, 64128.0], [38.4, 64128.0], [38.5, 64128.0], [38.6, 64128.0], [38.7, 64128.0], [38.8, 64128.0], [38.9, 64128.0], [39.0, 64128.0], [39.1, 64128.0], [39.2, 64128.0], [39.3, 64128.0], [39.4, 64128.0], [39.5, 64128.0], [39.6, 64128.0], [39.7, 64128.0], [39.8, 64128.0], [39.9, 64128.0], [40.0, 64128.0], [40.1, 64128.0], [40.2, 64128.0], [40.3, 64128.0], [40.4, 64128.0], [40.5, 64128.0], [40.6, 64128.0], [40.7, 64128.0], [40.8, 64128.0], [40.9, 64128.0], [41.0, 64128.0], [41.1, 64128.0], [41.2, 64132.0], [41.3, 64132.0], [41.4, 64132.0], [41.5, 64132.0], [41.6, 64132.0], [41.7, 64132.0], [41.8, 64132.0], [41.9, 64132.0], [42.0, 64132.0], [42.1, 64132.0], [42.2, 64132.0], [42.3, 64132.0], [42.4, 64132.0], [42.5, 64132.0], [42.6, 64132.0], [42.7, 64132.0], [42.8, 64132.0], [42.9, 64132.0], [43.0, 64132.0], [43.1, 64132.0], [43.2, 64132.0], [43.3, 64132.0], [43.4, 64132.0], [43.5, 64132.0], [43.6, 64132.0], [43.7, 64132.0], [43.8, 64132.0], [43.9, 64132.0], [44.0, 64132.0], [44.1, 64132.0], [44.2, 64137.0], [44.3, 64137.0], [44.4, 64137.0], [44.5, 64137.0], [44.6, 64137.0], [44.7, 64137.0], [44.8, 64137.0], [44.9, 64137.0], [45.0, 64137.0], [45.1, 64137.0], [45.2, 64137.0], [45.3, 64137.0], [45.4, 64137.0], [45.5, 64137.0], [45.6, 64137.0], [45.7, 64137.0], [45.8, 64137.0], [45.9, 64137.0], [46.0, 64137.0], [46.1, 64137.0], [46.2, 64137.0], [46.3, 64137.0], [46.4, 64137.0], [46.5, 64137.0], [46.6, 64137.0], [46.7, 64137.0], [46.8, 64137.0], [46.9, 64137.0], [47.0, 64137.0], [47.1, 64166.0], [47.2, 64166.0], [47.3, 64166.0], [47.4, 64166.0], [47.5, 64166.0], [47.6, 64166.0], [47.7, 64166.0], [47.8, 64166.0], [47.9, 64166.0], [48.0, 64166.0], [48.1, 64166.0], [48.2, 64166.0], [48.3, 64166.0], [48.4, 64166.0], [48.5, 64166.0], [48.6, 64166.0], [48.7, 64166.0], [48.8, 64166.0], [48.9, 64166.0], [49.0, 64166.0], [49.1, 64166.0], [49.2, 64166.0], [49.3, 64166.0], [49.4, 64166.0], [49.5, 64166.0], [49.6, 64166.0], [49.7, 64166.0], [49.8, 64166.0], [49.9, 64166.0], [50.0, 64210.0], [50.1, 64210.0], [50.2, 64210.0], [50.3, 64210.0], [50.4, 64210.0], [50.5, 64210.0], [50.6, 64210.0], [50.7, 64210.0], [50.8, 64210.0], [50.9, 64210.0], [51.0, 64210.0], [51.1, 64210.0], [51.2, 64210.0], [51.3, 64210.0], [51.4, 64210.0], [51.5, 64210.0], [51.6, 64210.0], [51.7, 64210.0], [51.8, 64210.0], [51.9, 64210.0], [52.0, 64210.0], [52.1, 64210.0], [52.2, 64210.0], [52.3, 64210.0], [52.4, 64210.0], [52.5, 64210.0], [52.6, 64210.0], [52.7, 64210.0], [52.8, 64210.0], [52.9, 64210.0], [53.0, 64223.0], [53.1, 64223.0], [53.2, 64223.0], [53.3, 64223.0], [53.4, 64223.0], [53.5, 64223.0], [53.6, 64223.0], [53.7, 64223.0], [53.8, 64223.0], [53.9, 64223.0], [54.0, 64223.0], [54.1, 64223.0], [54.2, 64223.0], [54.3, 64223.0], [54.4, 64223.0], [54.5, 64223.0], [54.6, 64223.0], [54.7, 64223.0], [54.8, 64223.0], [54.9, 64223.0], [55.0, 64223.0], [55.1, 64223.0], [55.2, 64223.0], [55.3, 64223.0], [55.4, 64223.0], [55.5, 64223.0], [55.6, 64223.0], [55.7, 64223.0], [55.8, 64223.0], [55.9, 64252.0], [56.0, 64252.0], [56.1, 64252.0], [56.2, 64252.0], [56.3, 64252.0], [56.4, 64252.0], [56.5, 64252.0], [56.6, 64252.0], [56.7, 64252.0], [56.8, 64252.0], [56.9, 64252.0], [57.0, 64252.0], [57.1, 64252.0], [57.2, 64252.0], [57.3, 64252.0], [57.4, 64252.0], [57.5, 64252.0], [57.6, 64252.0], [57.7, 64252.0], [57.8, 64252.0], [57.9, 64252.0], [58.0, 64252.0], [58.1, 64252.0], [58.2, 64252.0], [58.3, 64252.0], [58.4, 64252.0], [58.5, 64252.0], [58.6, 64252.0], [58.7, 64252.0], [58.8, 64252.0], [58.9, 64298.0], [59.0, 64298.0], [59.1, 64298.0], [59.2, 64298.0], [59.3, 64298.0], [59.4, 64298.0], [59.5, 64298.0], [59.6, 64298.0], [59.7, 64298.0], [59.8, 64298.0], [59.9, 64298.0], [60.0, 64298.0], [60.1, 64298.0], [60.2, 64298.0], [60.3, 64298.0], [60.4, 64298.0], [60.5, 64298.0], [60.6, 64298.0], [60.7, 64298.0], [60.8, 64298.0], [60.9, 64298.0], [61.0, 64298.0], [61.1, 64298.0], [61.2, 64298.0], [61.3, 64298.0], [61.4, 64298.0], [61.5, 64298.0], [61.6, 64298.0], [61.7, 64298.0], [61.8, 64330.0], [61.9, 64330.0], [62.0, 64330.0], [62.1, 64330.0], [62.2, 64330.0], [62.3, 64330.0], [62.4, 64330.0], [62.5, 64330.0], [62.6, 64330.0], [62.7, 64330.0], [62.8, 64330.0], [62.9, 64330.0], [63.0, 64330.0], [63.1, 64330.0], [63.2, 64330.0], [63.3, 64330.0], [63.4, 64330.0], [63.5, 64330.0], [63.6, 64330.0], [63.7, 64330.0], [63.8, 64330.0], [63.9, 64330.0], [64.0, 64330.0], [64.1, 64330.0], [64.2, 64330.0], [64.3, 64330.0], [64.4, 64330.0], [64.5, 64330.0], [64.6, 64330.0], [64.7, 64330.0], [64.8, 64370.0], [64.9, 64370.0], [65.0, 64370.0], [65.1, 64370.0], [65.2, 64370.0], [65.3, 64370.0], [65.4, 64370.0], [65.5, 64370.0], [65.6, 64370.0], [65.7, 64370.0], [65.8, 64370.0], [65.9, 64370.0], [66.0, 64370.0], [66.1, 64370.0], [66.2, 64370.0], [66.3, 64370.0], [66.4, 64370.0], [66.5, 64370.0], [66.6, 64370.0], [66.7, 64370.0], [66.8, 64370.0], [66.9, 64370.0], [67.0, 64370.0], [67.1, 64370.0], [67.2, 64370.0], [67.3, 64370.0], [67.4, 64370.0], [67.5, 64370.0], [67.6, 64370.0], [67.7, 64398.0], [67.8, 64398.0], [67.9, 64398.0], [68.0, 64398.0], [68.1, 64398.0], [68.2, 64398.0], [68.3, 64398.0], [68.4, 64398.0], [68.5, 64398.0], [68.6, 64398.0], [68.7, 64398.0], [68.8, 64398.0], [68.9, 64398.0], [69.0, 64398.0], [69.1, 64398.0], [69.2, 64398.0], [69.3, 64398.0], [69.4, 64398.0], [69.5, 64398.0], [69.6, 64398.0], [69.7, 64398.0], [69.8, 64398.0], [69.9, 64398.0], [70.0, 64398.0], [70.1, 64398.0], [70.2, 64398.0], [70.3, 64398.0], [70.4, 64398.0], [70.5, 64398.0], [70.6, 64400.0], [70.7, 64400.0], [70.8, 64400.0], [70.9, 64400.0], [71.0, 64400.0], [71.1, 64400.0], [71.2, 64400.0], [71.3, 64400.0], [71.4, 64400.0], [71.5, 64400.0], [71.6, 64400.0], [71.7, 64400.0], [71.8, 64400.0], [71.9, 64400.0], [72.0, 64400.0], [72.1, 64400.0], [72.2, 64400.0], [72.3, 64400.0], [72.4, 64400.0], [72.5, 64400.0], [72.6, 64400.0], [72.7, 64400.0], [72.8, 64400.0], [72.9, 64400.0], [73.0, 64400.0], [73.1, 64400.0], [73.2, 64400.0], [73.3, 64400.0], [73.4, 64400.0], [73.5, 64400.0], [73.6, 64427.0], [73.7, 64427.0], [73.8, 64427.0], [73.9, 64427.0], [74.0, 64427.0], [74.1, 64427.0], [74.2, 64427.0], [74.3, 64427.0], [74.4, 64427.0], [74.5, 64427.0], [74.6, 64427.0], [74.7, 64427.0], [74.8, 64427.0], [74.9, 64427.0], [75.0, 64427.0], [75.1, 64427.0], [75.2, 64427.0], [75.3, 64427.0], [75.4, 64427.0], [75.5, 64427.0], [75.6, 64427.0], [75.7, 64427.0], [75.8, 64427.0], [75.9, 64427.0], [76.0, 64427.0], [76.1, 64427.0], [76.2, 64427.0], [76.3, 64427.0], [76.4, 64427.0], [76.5, 64455.0], [76.6, 64455.0], [76.7, 64455.0], [76.8, 64455.0], [76.9, 64455.0], [77.0, 64455.0], [77.1, 64455.0], [77.2, 64455.0], [77.3, 64455.0], [77.4, 64455.0], [77.5, 64455.0], [77.6, 64455.0], [77.7, 64455.0], [77.8, 64455.0], [77.9, 64455.0], [78.0, 64455.0], [78.1, 64455.0], [78.2, 64455.0], [78.3, 64455.0], [78.4, 64455.0], [78.5, 64455.0], [78.6, 64455.0], [78.7, 64455.0], [78.8, 64455.0], [78.9, 64455.0], [79.0, 64455.0], [79.1, 64455.0], [79.2, 64455.0], [79.3, 64455.0], [79.4, 64455.0], [79.5, 64485.0], [79.6, 64485.0], [79.7, 64485.0], [79.8, 64485.0], [79.9, 64485.0], [80.0, 64485.0], [80.1, 64485.0], [80.2, 64485.0], [80.3, 64485.0], [80.4, 64485.0], [80.5, 64485.0], [80.6, 64485.0], [80.7, 64485.0], [80.8, 64485.0], [80.9, 64485.0], [81.0, 64485.0], [81.1, 64485.0], [81.2, 64485.0], [81.3, 64485.0], [81.4, 64485.0], [81.5, 64485.0], [81.6, 64485.0], [81.7, 64485.0], [81.8, 64485.0], [81.9, 64485.0], [82.0, 64485.0], [82.1, 64485.0], [82.2, 64485.0], [82.3, 64485.0], [82.4, 64530.0], [82.5, 64530.0], [82.6, 64530.0], [82.7, 64530.0], [82.8, 64530.0], [82.9, 64530.0], [83.0, 64530.0], [83.1, 64530.0], [83.2, 64530.0], [83.3, 64530.0], [83.4, 64530.0], [83.5, 64530.0], [83.6, 64530.0], [83.7, 64530.0], [83.8, 64530.0], [83.9, 64530.0], [84.0, 64530.0], [84.1, 64530.0], [84.2, 64530.0], [84.3, 64530.0], [84.4, 64530.0], [84.5, 64530.0], [84.6, 64530.0], [84.7, 64530.0], [84.8, 64530.0], [84.9, 64530.0], [85.0, 64530.0], [85.1, 64530.0], [85.2, 64530.0], [85.3, 64542.0], [85.4, 64542.0], [85.5, 64542.0], [85.6, 64542.0], [85.7, 64542.0], [85.8, 64542.0], [85.9, 64542.0], [86.0, 64542.0], [86.1, 64542.0], [86.2, 64542.0], [86.3, 64542.0], [86.4, 64542.0], [86.5, 64542.0], [86.6, 64542.0], [86.7, 64542.0], [86.8, 64542.0], [86.9, 64542.0], [87.0, 64542.0], [87.1, 64542.0], [87.2, 64542.0], [87.3, 64542.0], [87.4, 64542.0], [87.5, 64542.0], [87.6, 64542.0], [87.7, 64542.0], [87.8, 64542.0], [87.9, 64542.0], [88.0, 64542.0], [88.1, 64542.0], [88.2, 64542.0], [88.3, 64588.0], [88.4, 64588.0], [88.5, 64588.0], [88.6, 64588.0], [88.7, 64588.0], [88.8, 64588.0], [88.9, 64588.0], [89.0, 64588.0], [89.1, 64588.0], [89.2, 64588.0], [89.3, 64588.0], [89.4, 64588.0], [89.5, 64588.0], [89.6, 64588.0], [89.7, 64588.0], [89.8, 64588.0], [89.9, 64588.0], [90.0, 64588.0], [90.1, 64588.0], [90.2, 64588.0], [90.3, 64588.0], [90.4, 64588.0], [90.5, 64588.0], [90.6, 64588.0], [90.7, 64588.0], [90.8, 64588.0], [90.9, 64588.0], [91.0, 64588.0], [91.1, 64588.0], [91.2, 64629.0], [91.3, 64629.0], [91.4, 64629.0], [91.5, 64629.0], [91.6, 64629.0], [91.7, 64629.0], [91.8, 64629.0], [91.9, 64629.0], [92.0, 64629.0], [92.1, 64629.0], [92.2, 64629.0], [92.3, 64629.0], [92.4, 64629.0], [92.5, 64629.0], [92.6, 64629.0], [92.7, 64629.0], [92.8, 64629.0], [92.9, 64629.0], [93.0, 64629.0], [93.1, 64629.0], [93.2, 64629.0], [93.3, 64629.0], [93.4, 64629.0], [93.5, 64629.0], [93.6, 64629.0], [93.7, 64629.0], [93.8, 64629.0], [93.9, 64629.0], [94.0, 64629.0], [94.1, 64629.0], [94.2, 64631.0], [94.3, 64631.0], [94.4, 64631.0], [94.5, 64631.0], [94.6, 64631.0], [94.7, 64631.0], [94.8, 64631.0], [94.9, 64631.0], [95.0, 64631.0], [95.1, 64631.0], [95.2, 64631.0], [95.3, 64631.0], [95.4, 64631.0], [95.5, 64631.0], [95.6, 64631.0], [95.7, 64631.0], [95.8, 64631.0], [95.9, 64631.0], [96.0, 64631.0], [96.1, 64631.0], [96.2, 64631.0], [96.3, 64631.0], [96.4, 64631.0], [96.5, 64631.0], [96.6, 64631.0], [96.7, 64631.0], [96.8, 64631.0], [96.9, 64631.0], [97.0, 64631.0], [97.1, 64653.0], [97.2, 64653.0], [97.3, 64653.0], [97.4, 64653.0], [97.5, 64653.0], [97.6, 64653.0], [97.7, 64653.0], [97.8, 64653.0], [97.9, 64653.0], [98.0, 64653.0], [98.1, 64653.0], [98.2, 64653.0], [98.3, 64653.0], [98.4, 64653.0], [98.5, 64653.0], [98.6, 64653.0], [98.7, 64653.0], [98.8, 64653.0], [98.9, 64653.0], [99.0, 64653.0], [99.1, 64653.0], [99.2, 64653.0], [99.3, 64653.0], [99.4, 64653.0], [99.5, 64653.0], [99.6, 64653.0], [99.7, 64653.0], [99.8, 64653.0], [99.9, 64653.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 61070.0], [0.1, 61070.0], [0.2, 61070.0], [0.3, 61075.0], [0.4, 61075.0], [0.5, 61076.0], [0.6, 61082.0], [0.7, 61082.0], [0.8, 61083.0], [0.9, 61086.0], [1.0, 61086.0], [1.1, 61087.0], [1.2, 61090.0], [1.3, 61090.0], [1.4, 61092.0], [1.5, 61095.0], [1.6, 61095.0], [1.7, 61098.0], [1.8, 61099.0], [1.9, 61099.0], [2.0, 61107.0], [2.1, 61107.0], [2.2, 61107.0], [2.3, 61116.0], [2.4, 61116.0], [2.5, 61117.0], [2.6, 61117.0], [2.7, 61118.0], [2.8, 61118.0], [2.9, 61118.0], [3.0, 61118.0], [3.1, 61119.0], [3.2, 61119.0], [3.3, 61120.0], [3.4, 61121.0], [3.5, 61121.0], [3.6, 61121.0], [3.7, 61121.0], [3.8, 61121.0], [3.9, 61124.0], [4.0, 61125.0], [4.1, 61125.0], [4.2, 61126.0], [4.3, 61128.0], [4.4, 61128.0], [4.5, 61129.0], [4.6, 61130.0], [4.7, 61130.0], [4.8, 61135.0], [4.9, 61138.0], [5.0, 61138.0], [5.1, 61138.0], [5.2, 61138.0], [5.3, 61143.0], [5.4, 61143.0], [5.5, 61143.0], [5.6, 61144.0], [5.7, 61144.0], [5.8, 61146.0], [5.9, 61146.0], [6.0, 61146.0], [6.1, 61147.0], [6.2, 61149.0], [6.3, 61149.0], [6.4, 61151.0], [6.5, 61157.0], [6.6, 61157.0], [6.7, 61158.0], [6.8, 61161.0], [6.9, 61161.0], [7.0, 61161.0], [7.1, 61161.0], [7.2, 61161.0], [7.3, 61163.0], [7.4, 61166.0], [7.5, 61166.0], [7.6, 61167.0], [7.7, 61169.0], [7.8, 61169.0], [7.9, 61169.0], [8.0, 61169.0], [8.1, 61169.0], [8.2, 61169.0], [8.3, 61171.0], [8.4, 61172.0], [8.5, 61172.0], [8.6, 61174.0], [8.7, 61175.0], [8.8, 61175.0], [8.9, 61175.0], [9.0, 61176.0], [9.1, 61176.0], [9.2, 61180.0], [9.3, 61180.0], [9.4, 61180.0], [9.5, 61180.0], [9.6, 61183.0], [9.7, 61183.0], [9.8, 61185.0], [9.9, 61185.0], [10.0, 61185.0], [10.1, 61186.0], [10.2, 61187.0], [10.3, 61190.0], [10.4, 61190.0], [10.5, 61190.0], [10.6, 61190.0], [10.7, 61190.0], [10.8, 61194.0], [10.9, 61194.0], [11.0, 61194.0], [11.1, 61195.0], [11.2, 61195.0], [11.3, 61195.0], [11.4, 61199.0], [11.5, 61200.0], [11.6, 61200.0], [11.7, 61201.0], [11.8, 61203.0], [11.9, 61203.0], [12.0, 61208.0], [12.1, 61210.0], [12.2, 61210.0], [12.3, 61210.0], [12.4, 61212.0], [12.5, 61212.0], [12.6, 61214.0], [12.7, 61216.0], [12.8, 61216.0], [12.9, 61216.0], [13.0, 61217.0], [13.1, 61223.0], [13.2, 61223.0], [13.3, 61223.0], [13.4, 61224.0], [13.5, 61224.0], [13.6, 61224.0], [13.7, 61224.0], [13.8, 61224.0], [13.9, 61226.0], [14.0, 61228.0], [14.1, 61228.0], [14.2, 61229.0], [14.3, 61230.0], [14.4, 61230.0], [14.5, 61231.0], [14.6, 61232.0], [14.7, 61232.0], [14.8, 61232.0], [14.9, 61235.0], [15.0, 61236.0], [15.1, 61236.0], [15.2, 61236.0], [15.3, 61237.0], [15.4, 61237.0], [15.5, 61237.0], [15.6, 61239.0], [15.7, 61239.0], [15.8, 61243.0], [15.9, 61245.0], [16.0, 61245.0], [16.1, 61250.0], [16.2, 61250.0], [16.3, 61250.0], [16.4, 61250.0], [16.5, 61251.0], [16.6, 61251.0], [16.7, 61251.0], [16.8, 61252.0], [16.9, 61252.0], [17.0, 61253.0], [17.1, 61256.0], [17.2, 61256.0], [17.3, 61257.0], [17.4, 61258.0], [17.5, 61258.0], [17.6, 61258.0], [17.7, 61259.0], [17.8, 61260.0], [17.9, 61260.0], [18.0, 61260.0], [18.1, 61261.0], [18.2, 61261.0], [18.3, 61261.0], [18.4, 61262.0], [18.5, 61262.0], [18.6, 61263.0], [18.7, 61263.0], [18.8, 61263.0], [18.9, 61263.0], [19.0, 61265.0], [19.1, 61265.0], [19.2, 61266.0], [19.3, 61266.0], [19.4, 61266.0], [19.5, 61268.0], [19.6, 61270.0], [19.7, 61270.0], [19.8, 61270.0], [19.9, 61271.0], [20.0, 61271.0], [20.1, 61274.0], [20.2, 61274.0], [20.3, 61275.0], [20.4, 61275.0], [20.5, 61275.0], [20.6, 61276.0], [20.7, 61276.0], [20.8, 61276.0], [20.9, 61277.0], [21.0, 61277.0], [21.1, 61280.0], [21.2, 61284.0], [21.3, 61284.0], [21.4, 61285.0], [21.5, 61285.0], [21.6, 61285.0], [21.7, 61286.0], [21.8, 61287.0], [21.9, 61287.0], [22.0, 61287.0], [22.1, 61288.0], [22.2, 61288.0], [22.3, 61291.0], [22.4, 61291.0], [22.5, 61291.0], [22.6, 61291.0], [22.7, 61294.0], [22.8, 61296.0], [22.9, 61296.0], [23.0, 61297.0], [23.1, 61301.0], [23.2, 61301.0], [23.3, 61301.0], [23.4, 61302.0], [23.5, 61302.0], [23.6, 61307.0], [23.7, 61309.0], [23.8, 61309.0], [23.9, 61309.0], [24.0, 61310.0], [24.1, 61310.0], [24.2, 61310.0], [24.3, 61312.0], [24.4, 61312.0], [24.5, 61313.0], [24.6, 61315.0], [24.7, 61315.0], [24.8, 61315.0], [24.9, 61315.0], [25.0, 61315.0], [25.1, 61315.0], [25.2, 61316.0], [25.3, 61316.0], [25.4, 61316.0], [25.5, 61320.0], [25.6, 61323.0], [25.7, 61323.0], [25.8, 61324.0], [25.9, 61325.0], [26.0, 61325.0], [26.1, 61326.0], [26.2, 61326.0], [26.3, 61326.0], [26.4, 61326.0], [26.5, 61327.0], [26.6, 61327.0], [26.7, 61327.0], [26.8, 61329.0], [26.9, 61329.0], [27.0, 61329.0], [27.1, 61329.0], [27.2, 61329.0], [27.3, 61330.0], [27.4, 61333.0], [27.5, 61333.0], [27.6, 61333.0], [27.7, 61334.0], [27.8, 61334.0], [27.9, 61334.0], [28.0, 61337.0], [28.1, 61340.0], [28.2, 61340.0], [28.3, 61340.0], [28.4, 61341.0], [28.5, 61341.0], [28.6, 61344.0], [28.7, 61346.0], [28.8, 61346.0], [28.9, 61346.0], [29.0, 61347.0], [29.1, 61347.0], [29.2, 61348.0], [29.3, 61349.0], [29.4, 61349.0], [29.5, 61349.0], [29.6, 61350.0], [29.7, 61350.0], [29.8, 61353.0], [29.9, 61354.0], [30.0, 61354.0], [30.1, 61354.0], [30.2, 61354.0], [30.3, 61355.0], [30.4, 61355.0], [30.5, 61355.0], [30.6, 61358.0], [30.7, 61358.0], [30.8, 61359.0], [30.9, 61361.0], [31.0, 61361.0], [31.1, 61361.0], [31.2, 61363.0], [31.3, 61363.0], [31.4, 61363.0], [31.5, 61366.0], [31.6, 61366.0], [31.7, 61367.0], [31.8, 61367.0], [31.9, 61367.0], [32.0, 61368.0], [32.1, 61368.0], [32.2, 61368.0], [32.3, 61371.0], [32.4, 61373.0], [32.5, 61373.0], [32.6, 61373.0], [32.7, 61379.0], [32.8, 61381.0], [32.9, 61381.0], [33.0, 61382.0], [33.1, 61383.0], [33.2, 61383.0], [33.3, 61385.0], [33.4, 61385.0], [33.5, 61385.0], [33.6, 61387.0], [33.7, 61388.0], [33.8, 61388.0], [33.9, 61389.0], [34.0, 61389.0], [34.1, 61389.0], [34.2, 61389.0], [34.3, 61390.0], [34.4, 61390.0], [34.5, 61390.0], [34.6, 61392.0], [34.7, 61392.0], [34.8, 61392.0], [34.9, 61393.0], [35.0, 61393.0], [35.1, 61393.0], [35.2, 61393.0], [35.3, 61394.0], [35.4, 61394.0], [35.5, 61395.0], [35.6, 61395.0], [35.7, 61395.0], [35.8, 61398.0], [35.9, 61398.0], [36.0, 61398.0], [36.1, 61400.0], [36.2, 61401.0], [36.3, 61401.0], [36.4, 61402.0], [36.5, 61403.0], [36.6, 61403.0], [36.7, 61411.0], [36.8, 61411.0], [36.9, 61411.0], [37.0, 61412.0], [37.1, 61412.0], [37.2, 61412.0], [37.3, 61412.0], [37.4, 61413.0], [37.5, 61413.0], [37.6, 61414.0], [37.7, 61415.0], [37.8, 61416.0], [37.9, 61416.0], [38.0, 61416.0], [38.1, 61417.0], [38.2, 61417.0], [38.3, 61418.0], [38.4, 61420.0], [38.5, 61420.0], [38.6, 61421.0], [38.7, 61421.0], [38.8, 61421.0], [38.9, 61422.0], [39.0, 61423.0], [39.1, 61423.0], [39.2, 61423.0], [39.3, 61425.0], [39.4, 61425.0], [39.5, 61427.0], [39.6, 61427.0], [39.7, 61427.0], [39.8, 61428.0], [39.9, 61429.0], [40.0, 61429.0], [40.1, 61430.0], [40.2, 61432.0], [40.3, 61432.0], [40.4, 61432.0], [40.5, 61432.0], [40.6, 61435.0], [40.7, 61435.0], [40.8, 61436.0], [40.9, 61436.0], [41.0, 61436.0], [41.1, 61436.0], [41.2, 61438.0], [41.3, 61438.0], [41.4, 61438.0], [41.5, 61439.0], [41.6, 61439.0], [41.7, 61441.0], [41.8, 61443.0], [41.9, 61443.0], [42.0, 61446.0], [42.1, 61446.0], [42.2, 61446.0], [42.3, 61447.0], [42.4, 61448.0], [42.5, 61448.0], [42.6, 61450.0], [42.7, 61451.0], [42.8, 61451.0], [42.9, 61451.0], [43.0, 61454.0], [43.1, 61455.0], [43.2, 61455.0], [43.3, 61456.0], [43.4, 61458.0], [43.5, 61458.0], [43.6, 61459.0], [43.7, 61461.0], [43.8, 61461.0], [43.9, 61461.0], [44.0, 61461.0], [44.1, 61461.0], [44.2, 61463.0], [44.3, 61465.0], [44.4, 61465.0], [44.5, 61465.0], [44.6, 61467.0], [44.7, 61467.0], [44.8, 61468.0], [44.9, 61468.0], [45.0, 61468.0], [45.1, 61468.0], [45.2, 61469.0], [45.3, 61469.0], [45.4, 61469.0], [45.5, 61469.0], [45.6, 61469.0], [45.7, 61469.0], [45.8, 61471.0], [45.9, 61474.0], [46.0, 61474.0], [46.1, 61474.0], [46.2, 61475.0], [46.3, 61475.0], [46.4, 61477.0], [46.5, 61478.0], [46.6, 61478.0], [46.7, 61479.0], [46.8, 61480.0], [46.9, 61480.0], [47.0, 61481.0], [47.1, 61482.0], [47.2, 61482.0], [47.3, 61483.0], [47.4, 61483.0], [47.5, 61483.0], [47.6, 61483.0], [47.7, 61487.0], [47.8, 61487.0], [47.9, 61487.0], [48.0, 61488.0], [48.1, 61490.0], [48.2, 61490.0], [48.3, 61491.0], [48.4, 61492.0], [48.5, 61492.0], [48.6, 61492.0], [48.7, 61493.0], [48.8, 61493.0], [48.9, 61494.0], [49.0, 61495.0], [49.1, 61495.0], [49.2, 61495.0], [49.3, 61496.0], [49.4, 61496.0], [49.5, 61496.0], [49.6, 61497.0], [49.7, 61497.0], [49.8, 61497.0], [49.9, 61498.0], [50.0, 61498.0], [50.1, 61499.0], [50.2, 61500.0], [50.3, 61500.0], [50.4, 61500.0], [50.5, 61500.0], [50.6, 61501.0], [50.7, 61501.0], [50.8, 61502.0], [50.9, 61503.0], [51.0, 61503.0], [51.1, 61504.0], [51.2, 61504.0], [51.3, 61504.0], [51.4, 61506.0], [51.5, 61506.0], [51.6, 61506.0], [51.7, 61507.0], [51.8, 61511.0], [51.9, 61511.0], [52.0, 61512.0], [52.1, 61514.0], [52.2, 61514.0], [52.3, 61515.0], [52.4, 61517.0], [52.5, 61517.0], [52.6, 61517.0], [52.7, 61518.0], [52.8, 61522.0], [52.9, 61522.0], [53.0, 61522.0], [53.1, 61522.0], [53.2, 61522.0], [53.3, 61522.0], [53.4, 61524.0], [53.5, 61524.0], [53.6, 61524.0], [53.7, 61525.0], [53.8, 61525.0], [53.9, 61525.0], [54.0, 61526.0], [54.1, 61526.0], [54.2, 61526.0], [54.3, 61528.0], [54.4, 61528.0], [54.5, 61529.0], [54.6, 61529.0], [54.7, 61529.0], [54.8, 61529.0], [54.9, 61529.0], [55.0, 61529.0], [55.1, 61530.0], [55.2, 61531.0], [55.3, 61532.0], [55.4, 61532.0], [55.5, 61533.0], [55.6, 61535.0], [55.7, 61535.0], [55.8, 61535.0], [55.9, 61535.0], [56.0, 61535.0], [56.1, 61536.0], [56.2, 61536.0], [56.3, 61536.0], [56.4, 61537.0], [56.5, 61537.0], [56.6, 61537.0], [56.7, 61537.0], [56.8, 61540.0], [56.9, 61540.0], [57.0, 61541.0], [57.1, 61542.0], [57.2, 61542.0], [57.3, 61543.0], [57.4, 61546.0], [57.5, 61546.0], [57.6, 61550.0], [57.7, 61551.0], [57.8, 61552.0], [57.9, 61552.0], [58.0, 61553.0], [58.1, 61553.0], [58.2, 61553.0], [58.3, 61554.0], [58.4, 61555.0], [58.5, 61555.0], [58.6, 61558.0], [58.7, 61558.0], [58.8, 61558.0], [58.9, 61561.0], [59.0, 61562.0], [59.1, 61562.0], [59.2, 61563.0], [59.3, 61564.0], [59.4, 61564.0], [59.5, 61565.0], [59.6, 61566.0], [59.7, 61566.0], [59.8, 61566.0], [59.9, 61569.0], [60.0, 61569.0], [60.1, 61570.0], [60.2, 61570.0], [60.3, 61571.0], [60.4, 61571.0], [60.5, 61571.0], [60.6, 61572.0], [60.7, 61572.0], [60.8, 61572.0], [60.9, 61573.0], [61.0, 61573.0], [61.1, 61573.0], [61.2, 61574.0], [61.3, 61574.0], [61.4, 61574.0], [61.5, 61575.0], [61.6, 61575.0], [61.7, 61575.0], [61.8, 61575.0], [61.9, 61575.0], [62.0, 61577.0], [62.1, 61577.0], [62.2, 61577.0], [62.3, 61581.0], [62.4, 61582.0], [62.5, 61582.0], [62.6, 61582.0], [62.7, 61583.0], [62.8, 61583.0], [62.9, 61583.0], [63.0, 61584.0], [63.1, 61584.0], [63.2, 61584.0], [63.3, 61587.0], [63.4, 61587.0], [63.5, 61587.0], [63.6, 61589.0], [63.7, 61590.0], [63.8, 61590.0], [63.9, 61591.0], [64.0, 61594.0], [64.1, 61594.0], [64.2, 61595.0], [64.3, 61596.0], [64.4, 61596.0], [64.5, 61599.0], [64.6, 61599.0], [64.7, 61599.0], [64.8, 61600.0], [64.9, 61602.0], [65.0, 61602.0], [65.1, 61604.0], [65.2, 61605.0], [65.3, 61606.0], [65.4, 61606.0], [65.5, 61607.0], [65.6, 61607.0], [65.7, 61607.0], [65.8, 61609.0], [65.9, 61610.0], [66.0, 61610.0], [66.1, 61611.0], [66.2, 61614.0], [66.3, 61614.0], [66.4, 61614.0], [66.5, 61615.0], [66.6, 61615.0], [66.7, 61615.0], [66.8, 61617.0], [66.9, 61617.0], [67.0, 61620.0], [67.1, 61622.0], [67.2, 61622.0], [67.3, 61622.0], [67.4, 61623.0], [67.5, 61623.0], [67.6, 61623.0], [67.7, 61624.0], [67.8, 61624.0], [67.9, 61624.0], [68.0, 61625.0], [68.1, 61626.0], [68.2, 61626.0], [68.3, 61627.0], [68.4, 61627.0], [68.5, 61627.0], [68.6, 61628.0], [68.7, 61629.0], [68.8, 61629.0], [68.9, 61630.0], [69.0, 61630.0], [69.1, 61630.0], [69.2, 61630.0], [69.3, 61630.0], [69.4, 61630.0], [69.5, 61631.0], [69.6, 61632.0], [69.7, 61632.0], [69.8, 61633.0], [69.9, 61634.0], [70.0, 61634.0], [70.1, 61636.0], [70.2, 61636.0], [70.3, 61637.0], [70.4, 61637.0], [70.5, 61637.0], [70.6, 61638.0], [70.7, 61638.0], [70.8, 61638.0], [70.9, 61639.0], [71.0, 61639.0], [71.1, 61639.0], [71.2, 61639.0], [71.3, 61639.0], [71.4, 61640.0], [71.5, 61641.0], [71.6, 61641.0], [71.7, 61641.0], [71.8, 61643.0], [71.9, 61643.0], [72.0, 61649.0], [72.1, 61652.0], [72.2, 61652.0], [72.3, 61654.0], [72.4, 61654.0], [72.5, 61654.0], [72.6, 61657.0], [72.7, 61657.0], [72.8, 61659.0], [72.9, 61659.0], [73.0, 61659.0], [73.1, 61662.0], [73.2, 61662.0], [73.3, 61662.0], [73.4, 61662.0], [73.5, 61662.0], [73.6, 61663.0], [73.7, 61663.0], [73.8, 61663.0], [73.9, 61663.0], [74.0, 61663.0], [74.1, 61663.0], [74.2, 61664.0], [74.3, 61664.0], [74.4, 61664.0], [74.5, 61664.0], [74.6, 61665.0], [74.7, 61665.0], [74.8, 61666.0], [74.9, 61666.0], [75.0, 61666.0], [75.1, 61667.0], [75.2, 61668.0], [75.3, 61668.0], [75.4, 61668.0], [75.5, 61671.0], [75.6, 61671.0], [75.7, 61671.0], [75.8, 61671.0], [75.9, 61673.0], [76.0, 61673.0], [76.1, 61676.0], [76.2, 61677.0], [76.3, 61677.0], [76.4, 61677.0], [76.5, 61677.0], [76.6, 61677.0], [76.7, 61679.0], [76.8, 61683.0], [76.9, 61683.0], [77.0, 61684.0], [77.1, 61685.0], [77.2, 61685.0], [77.3, 61685.0], [77.4, 61685.0], [77.5, 61685.0], [77.6, 61688.0], [77.7, 61688.0], [77.8, 61688.0], [77.9, 61688.0], [78.0, 61688.0], [78.1, 61690.0], [78.2, 61690.0], [78.3, 61690.0], [78.4, 61691.0], [78.5, 61691.0], [78.6, 61694.0], [78.7, 61696.0], [78.8, 61696.0], [78.9, 61696.0], [79.0, 61696.0], [79.1, 61696.0], [79.2, 61698.0], [79.3, 61700.0], [79.4, 61700.0], [79.5, 61701.0], [79.6, 61702.0], [79.7, 61702.0], [79.8, 61703.0], [79.9, 61705.0], [80.0, 61705.0], [80.1, 61705.0], [80.2, 61706.0], [80.3, 61708.0], [80.4, 61708.0], [80.5, 61708.0], [80.6, 61708.0], [80.7, 61708.0], [80.8, 61710.0], [80.9, 61710.0], [81.0, 61710.0], [81.1, 61710.0], [81.2, 61711.0], [81.3, 61711.0], [81.4, 61712.0], [81.5, 61714.0], [81.6, 61714.0], [81.7, 61714.0], [81.8, 61714.0], [81.9, 61714.0], [82.0, 61715.0], [82.1, 61718.0], [82.2, 61718.0], [82.3, 61718.0], [82.4, 61718.0], [82.5, 61720.0], [82.6, 61720.0], [82.7, 61721.0], [82.8, 61721.0], [82.9, 61721.0], [83.0, 61724.0], [83.1, 61726.0], [83.2, 61726.0], [83.3, 61726.0], [83.4, 61728.0], [83.5, 61728.0], [83.6, 61728.0], [83.7, 61729.0], [83.8, 61729.0], [83.9, 61730.0], [84.0, 61733.0], [84.1, 61733.0], [84.2, 61734.0], [84.3, 61734.0], [84.4, 61734.0], [84.5, 61734.0], [84.6, 61736.0], [84.7, 61736.0], [84.8, 61737.0], [84.9, 61737.0], [85.0, 61740.0], [85.1, 61740.0], [85.2, 61741.0], [85.3, 61741.0], [85.4, 61741.0], [85.5, 61742.0], [85.6, 61743.0], [85.7, 61743.0], [85.8, 61743.0], [85.9, 61743.0], [86.0, 61743.0], [86.1, 61744.0], [86.2, 61744.0], [86.3, 61744.0], [86.4, 61749.0], [86.5, 61751.0], [86.6, 61751.0], [86.7, 61755.0], [86.8, 61756.0], [86.9, 61756.0], [87.0, 61757.0], [87.1, 61759.0], [87.2, 61759.0], [87.3, 61760.0], [87.4, 61761.0], [87.5, 61763.0], [87.6, 61763.0], [87.7, 61763.0], [87.8, 61763.0], [87.9, 61763.0], [88.0, 61765.0], [88.1, 61766.0], [88.2, 61766.0], [88.3, 61766.0], [88.4, 61768.0], [88.5, 61768.0], [88.6, 61769.0], [88.7, 61769.0], [88.8, 61769.0], [88.9, 61769.0], [89.0, 61770.0], [89.1, 61770.0], [89.2, 61772.0], [89.3, 61774.0], [89.4, 61774.0], [89.5, 61774.0], [89.6, 61776.0], [89.7, 61776.0], [89.8, 61776.0], [89.9, 61779.0], [90.0, 61780.0], [90.1, 61780.0], [90.2, 61785.0], [90.3, 61788.0], [90.4, 61788.0], [90.5, 61788.0], [90.6, 61797.0], [90.7, 61797.0], [90.8, 61798.0], [90.9, 61802.0], [91.0, 61802.0], [91.1, 61804.0], [91.2, 61804.0], [91.3, 61804.0], [91.4, 61806.0], [91.5, 61809.0], [91.6, 61809.0], [91.7, 61812.0], [91.8, 61812.0], [91.9, 61812.0], [92.0, 61816.0], [92.1, 61825.0], [92.2, 61825.0], [92.3, 61827.0], [92.4, 61833.0], [92.5, 61835.0], [92.6, 61835.0], [92.7, 61837.0], [92.8, 61841.0], [92.9, 61841.0], [93.0, 61842.0], [93.1, 61844.0], [93.2, 61844.0], [93.3, 61846.0], [93.4, 61846.0], [93.5, 61846.0], [93.6, 61854.0], [93.7, 61857.0], [93.8, 61857.0], [93.9, 61864.0], [94.0, 61871.0], [94.1, 61871.0], [94.2, 61871.0], [94.3, 61875.0], [94.4, 61875.0], [94.5, 61877.0], [94.6, 61881.0], [94.7, 61881.0], [94.8, 61887.0], [94.9, 61890.0], [95.0, 61894.0], [95.1, 61894.0], [95.2, 61900.0], [95.3, 61904.0], [95.4, 61904.0], [95.5, 61906.0], [95.6, 61911.0], [95.7, 61911.0], [95.8, 61914.0], [95.9, 61917.0], [96.0, 61917.0], [96.1, 61920.0], [96.2, 61924.0], [96.3, 61924.0], [96.4, 61936.0], [96.5, 61940.0], [96.6, 61940.0], [96.7, 61946.0], [96.8, 61949.0], [96.9, 61949.0], [97.0, 61949.0], [97.1, 61952.0], [97.2, 61952.0], [97.3, 61958.0], [97.4, 61970.0], [97.5, 61974.0], [97.6, 61974.0], [97.7, 61979.0], [97.8, 61989.0], [97.9, 61989.0], [98.0, 61994.0], [98.1, 61997.0], [98.2, 61997.0], [98.3, 62004.0], [98.4, 62008.0], [98.5, 62008.0], [98.6, 62023.0], [98.7, 62028.0], [98.8, 62028.0], [98.9, 62033.0], [99.0, 62039.0], [99.1, 62039.0], [99.2, 62052.0], [99.3, 62056.0], [99.4, 62056.0], [99.5, 62063.0], [99.6, 62092.0], [99.7, 62092.0], [99.8, 62096.0], [99.9, 62125.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 59900.0, "maxY": 103.0, "series": [{"data": [[61300.0, 98.0], [61400.0, 97.0], [61000.0, 60.0], [61200.0, 87.0], [61100.0, 74.0], [60900.0, 5.0], [61600.0, 85.0], [61500.0, 103.0], [61700.0, 33.0], [61800.0, 22.0], [61900.0, 13.0], [62000.0, 3.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[60400.0, 102.0], [60200.0, 83.0], [60000.0, 71.0], [59900.0, 19.0], [60100.0, 85.0], [60300.0, 101.0], [60600.0, 70.0], [60500.0, 98.0], [60700.0, 27.0], [60800.0, 17.0], [60900.0, 7.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[64500.0, 3.0], [64100.0, 16.0], [64200.0, 4.0], [64600.0, 3.0], [64400.0, 4.0], [64300.0, 3.0], [64000.0, 1.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[61100.0, 65.0], [61300.0, 88.0], [61400.0, 96.0], [61000.0, 13.0], [61200.0, 79.0], [61500.0, 99.0], [61600.0, 99.0], [61700.0, 79.0], [61800.0, 29.0], [61900.0, 21.0], [62000.0, 11.0], [62100.0, 1.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2074.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 2074.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 2074.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.44117647058824, "minX": 1.61940144E12, "maxY": 460.99558823529395, "series": [{"data": [[1.61940144E12, 355.61470588235295]], "isOverall": false, "label": "UserType3_LB-split(Nutt)", "isController": false}, {"data": [[1.61940144E12, 348.11176470588276]], "isOverall": false, "label": "UserType2_LB-split(Boss)", "isController": false}, {"data": [[1.61940144E12, 18.44117647058824]], "isOverall": false, "label": "UserType1_LB-split(Dear)", "isController": false}, {"data": [[1.61940144E12, 460.99558823529395]], "isOverall": false, "label": "UserType4_LB-split(Haris)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940144E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 60035.0, "minX": 1.0, "maxY": 64588.0, "series": [{"data": [[39.0, 61683.0], [51.0, 61801.0], [57.0, 61851.0], [60.0, 61478.0], [67.0, 61807.0], [66.0, 61594.833333333336], [65.0, 61886.0], [70.0, 61782.666666666664], [74.0, 61793.0], [72.0, 62020.0], [76.0, 61923.0], [81.0, 61688.0], [90.0, 62025.0], [94.0, 61516.0], [97.0, 61449.0], [96.0, 61958.0], [102.0, 61778.0], [100.0, 61561.0], [106.0, 61452.0], [104.0, 61720.0], [111.0, 61962.0], [110.0, 61724.0], [109.0, 61555.0], [108.0, 61623.0], [114.0, 61792.0], [113.0, 61351.0], [116.0, 61826.0], [121.0, 61588.0], [142.0, 61696.0], [140.0, 61595.0], [138.0, 61594.333333333336], [136.0, 61799.0], [151.0, 61527.0], [149.0, 61899.5], [157.0, 61832.0], [156.0, 61588.0], [154.0, 61628.0], [152.0, 61605.0], [167.0, 61763.0], [162.0, 61694.5], [161.0, 61322.0], [175.0, 61752.0], [170.0, 61355.0], [182.0, 61507.0], [180.0, 61921.0], [178.0, 61462.5], [176.0, 61478.0], [191.0, 61343.0], [190.0, 61545.0], [189.0, 61748.5], [188.0, 61817.0], [187.0, 61444.0], [186.0, 61309.0], [185.0, 61580.0], [184.0, 61887.0], [198.0, 61579.0], [197.0, 61443.0], [196.0, 61800.0], [193.0, 61376.0], [192.0, 61785.0], [207.0, 61884.0], [202.0, 61341.0], [201.0, 61408.0], [200.0, 61798.0], [210.0, 61624.0], [209.0, 61703.0], [238.0, 61876.0], [237.0, 61333.0], [236.0, 61467.5], [234.0, 61675.0], [247.0, 61366.0], [245.0, 61613.0], [242.0, 61842.0], [240.0, 61299.0], [255.0, 61417.0], [254.0, 61722.0], [253.0, 61775.0], [249.0, 61659.0], [262.0, 61468.0], [261.0, 61637.0], [258.0, 61802.0], [286.0, 61744.0], [284.0, 61388.0], [282.0, 61474.0], [281.0, 61655.5], [279.0, 61677.75], [277.0, 61520.0], [303.0, 61234.0], [301.0, 61607.0], [299.0, 61773.0], [297.0, 61845.0], [294.0, 61625.0], [291.0, 61303.0], [289.0, 61268.0], [319.0, 61204.0], [317.0, 61561.0], [304.0, 61401.0], [333.0, 61563.0], [329.0, 61488.5], [327.0, 61496.0], [324.0, 61763.0], [322.0, 61742.0], [321.0, 61440.75], [344.0, 61222.0], [340.0, 61561.5], [339.0, 61666.0], [338.0, 61530.0], [367.0, 61161.0], [364.0, 61415.5], [363.0, 61553.0], [362.0, 61671.0], [359.0, 61365.5], [356.0, 61346.5], [354.0, 61427.0], [383.0, 61736.0], [381.0, 61363.0], [376.0, 61804.0], [374.0, 61348.0], [373.0, 61500.0], [370.0, 61637.0], [368.0, 61735.5], [395.0, 61348.0], [387.0, 61431.0], [431.0, 61251.0], [429.0, 61432.0], [427.0, 61388.0], [424.0, 61472.0], [421.0, 61566.0], [420.0, 61422.0], [418.0, 61541.666666666664], [441.0, 61353.0], [440.0, 61759.0], [438.0, 61488.0], [437.0, 61115.0], [434.0, 61183.0], [433.0, 61454.0], [463.0, 61409.0], [461.0, 61205.5], [459.0, 61664.0], [458.0, 61406.0], [457.0, 61452.0], [479.0, 61722.0], [478.0, 61357.0], [473.0, 61378.333333333336], [470.0, 61493.0], [468.0, 61459.0], [467.0, 61374.5], [465.0, 61696.0], [464.0, 61154.0], [492.0, 61517.0], [491.0, 61314.0], [489.0, 61415.0], [488.0, 61238.0], [487.0, 61281.0], [484.0, 61667.5], [482.0, 61653.0], [481.0, 61655.0], [509.0, 61381.0], [508.0, 61686.0], [504.0, 61482.5], [499.0, 61178.0], [542.0, 61276.0], [543.0, 61682.0], [539.0, 61106.0], [534.0, 61494.5], [531.0, 61550.0], [529.0, 61291.5], [524.0, 61447.0], [523.0, 61210.5], [517.0, 61516.0], [515.0, 61584.0], [512.0, 61177.0], [554.0, 61257.5], [552.0, 61311.0], [551.0, 61582.0], [549.0, 61343.5], [546.0, 61174.5], [596.0, 61241.5], [637.0, 61333.0], [634.0, 61639.0], [628.0, 61201.0], [625.0, 61567.0], [622.0, 61262.0], [619.0, 61635.0], [614.0, 61507.0], [670.0, 61348.0], [671.0, 61461.0], [667.0, 61205.0], [666.0, 61451.0], [664.0, 61633.0], [644.0, 61403.0], [641.0, 61419.5], [662.0, 61528.0], [660.0, 61461.5], [659.0, 61063.0], [655.0, 61249.0], [652.0, 61122.0], [651.0, 61471.0], [648.0, 61194.5], [689.0, 61427.0], [702.0, 61493.0], [703.0, 61498.333333333336], [688.0, 61127.0], [700.0, 61355.0], [699.0, 61228.0], [697.0, 61310.0], [679.0, 61144.0], [678.0, 61434.0], [676.0, 61484.0], [674.0, 61519.0], [673.0, 61350.0], [686.0, 61062.0], [685.0, 61536.0], [682.0, 61411.0], [681.0, 61109.0], [695.0, 61617.0], [693.0, 61653.0], [692.0, 61447.0], [732.0, 61216.0], [734.0, 61558.0], [728.0, 61625.5], [711.0, 61564.0], [709.0, 61039.0], [708.0, 61151.0], [727.0, 61294.5], [723.0, 61107.0], [721.0, 61055.0], [720.0, 61570.0], [716.0, 61324.5], [712.0, 61379.0], [766.0, 61216.0], [765.0, 61367.5], [759.0, 61258.0], [750.0, 61078.0], [746.0, 61090.0], [740.0, 61048.0], [738.0, 61658.0], [736.0, 61421.0], [785.0, 61044.0], [782.0, 61243.0], [777.0, 61572.0], [776.0, 61193.0], [773.0, 61147.0], [771.0, 61274.0], [768.0, 61692.0], [831.0, 61570.0], [842.0, 61210.0], [840.0, 61346.0], [839.0, 61167.0], [1083.0, 61438.83333333333], [1086.0, 61270.5], [1085.0, 61235.25], [1084.0, 61424.27272727273], [1081.0, 61612.666666666664], [1079.0, 61508.0], [1075.0, 61360.0], [1040.0, 61229.0], [1036.0, 61163.0], [1136.0, 61371.5], [1149.0, 61460.0], [1150.0, 61619.0], [1120.0, 61307.0], [1122.0, 61291.0], [1121.0, 61475.444444444445], [1146.0, 61349.0], [1143.0, 61410.0], [1141.0, 61189.333333333336], [1119.0, 61257.0], [1090.0, 61357.25], [1089.0, 61113.333333333336], [1092.0, 61293.333333333336], [1091.0, 61338.333333333336], [1094.0, 61158.8], [1093.0, 61321.0], [1096.0, 61575.5], [1095.0, 61247.25], [1098.0, 61248.0], [1097.0, 61473.0], [1100.0, 61414.0], [1099.0, 61333.666666666664], [1102.0, 61237.5], [1101.0, 61522.0], [1118.0, 61628.0], [1117.0, 61083.0], [1116.0, 61150.0], [1114.0, 61288.14285714286], [1113.0, 61560.5], [1112.0, 61288.13333333333], [1111.0, 61296.0], [1109.0, 61416.0], [1108.0, 61312.0], [1107.0, 61467.333333333336], [1105.0, 61429.0], [1110.0, 61438.333333333336], [1134.0, 61495.0], [1131.0, 61664.0], [1124.0, 61255.0], [1123.0, 61442.375], [1158.0, 61427.0], [1178.0, 61174.0], [1154.0, 61445.0], [1173.0, 61078.0], [1168.0, 61110.5], [1166.0, 61282.0], [1161.0, 61483.5], [1160.0, 61284.0], [1156.0, 61052.0], [1155.0, 61613.0], [1276.0, 61356.5], [1279.0, 61393.333333333336], [1252.0, 61134.0], [1249.0, 61398.0], [1254.0, 61414.0], [1253.0, 61313.0], [1258.0, 61345.0], [1256.0, 61378.5], [1262.0, 61234.333333333336], [1260.0, 61136.0], [1278.0, 61508.0], [1277.0, 61338.0], [1274.0, 61637.0], [1273.0, 61361.0], [1269.0, 61636.0], [1267.0, 61526.0], [1266.0, 61297.0], [1264.0, 60990.0], [1247.0, 61092.0], [1246.0, 61245.0], [1243.0, 61483.0], [1338.0, 61122.0], [1341.0, 61326.4], [1312.0, 61140.0], [1314.0, 61357.0], [1313.0, 61466.0], [1318.0, 61463.75], [1317.0, 61369.0], [1322.0, 61095.0], [1319.0, 60997.0], [1340.0, 61443.0], [1339.0, 61167.0], [1336.0, 61396.0], [1335.0, 61244.666666666664], [1334.0, 61222.0], [1329.0, 61521.0], [1328.0, 61546.0], [1291.0, 61148.666666666664], [1288.0, 61288.5], [1287.0, 61461.333333333336], [1285.0, 61176.0], [1282.0, 61237.0], [1280.0, 61514.0], [1307.0, 61444.666666666664], [1306.0, 61175.333333333336], [1304.0, 61271.5], [1303.0, 61133.333333333336], [1302.0, 61209.0], [1301.0, 60991.0], [1296.0, 61582.0], [1309.0, 61467.0], [1358.0, 61576.0], [1383.0, 61358.0], [1394.0, 61365.277777777774], [1393.0, 61279.0], [1392.0, 61157.0], [1359.0, 61125.0], [1357.0, 61338.0], [1356.0, 61163.5], [1354.0, 61606.0], [1353.0, 61206.0], [1349.0, 61135.0], [1345.0, 61432.0], [1344.0, 61203.0], [1389.0, 61020.0], [1386.0, 61305.0], [1384.0, 61166.0], [1379.0, 61324.0], [1373.0, 61518.0], [1375.0, 61645.0], [1370.0, 61336.0], [1369.0, 61541.5], [1365.0, 61260.0], [1364.0, 61522.0], [1362.0, 61070.0], [1360.0, 61329.333333333336]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[793.3823529411765, 61417.94558823526]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[1454.0, 60574.230769230766], [1441.0, 60651.142857142855], [1434.0, 60643.0], [1433.0, 60640.68421052631], [1414.0, 60641.333333333336], [1413.0, 60938.5], [1534.0, 60488.77777777778], [1533.0, 60494.00000000001], [1514.0, 60520.7], [1494.0, 60477.666666666664], [1493.0, 60330.0], [1492.0, 60432.666666666664], [1491.0, 60611.99999999999], [1474.0, 60592.91666666667], [1473.0, 60562.625], [1594.0, 60349.46666666665], [1593.0, 60450.333333333336], [1592.0, 60575.0], [1574.0, 60383.0], [1573.0, 60421.2], [1571.0, 60740.0], [1555.0, 60504.0], [1554.0, 60445.59999999999], [1653.0, 60347.5], [1654.0, 60267.846153846156], [1637.0, 60126.5], [1636.0, 60144.0], [1634.0, 60365.5], [1652.0, 60397.5], [1650.0, 60363.5], [1649.0, 60430.0], [1648.0, 60376.0], [1630.0, 60144.0], [1614.0, 60334.181818181816], [1603.0, 60402.22222222222], [1629.0, 60212.0], [1627.0, 60044.0], [1616.0, 60573.5], [1646.0, 60331.0], [1644.0, 60440.0], [1642.0, 60586.0], [1638.0, 60653.0], [1981.0, 60326.5], [1983.0, 60219.333333333336], [1982.0, 60268.666666666664], [1964.0, 60073.0], [1962.0, 60549.0], [1961.0, 60244.0], [1979.0, 60071.5], [1977.0, 60307.0], [1976.0, 60576.5], [1975.0, 60166.0], [1974.0, 60074.0], [1968.0, 60039.0], [1966.0, 60261.0], [1965.0, 60384.0], [2019.0, 60472.0], [2024.0, 60081.5], [2046.0, 60318.5], [2017.0, 60228.5], [2020.0, 60093.0], [2045.0, 60343.5], [2044.0, 60090.0], [2043.0, 60268.0], [2015.0, 60077.0], [1986.0, 60045.0], [1984.0, 60417.0], [1989.0, 60537.0], [1988.0, 60505.0], [1991.0, 60062.0], [1990.0, 60427.0], [1995.0, 60581.0], [1994.0, 60338.0], [1997.0, 60307.0], [2032.0, 60304.0], [2033.0, 60344.0], [2035.0, 60093.0], [2036.0, 60071.0], [2037.0, 60150.0], [2039.0, 60611.0], [2040.0, 60194.0], [2041.0, 60370.833333333336], [2042.0, 60587.0], [1996.0, 60464.0], [2014.0, 60652.0], [2012.0, 60248.0], [2011.0, 60538.333333333336], [2010.0, 60511.6], [2009.0, 60276.25], [2007.0, 60291.666666666664], [2006.0, 60335.0], [2001.0, 60035.0], [2002.0, 60238.0], [2027.0, 60332.0], [2028.0, 60387.0], [2029.0, 60354.0], [2030.0, 60497.5], [2031.0, 60508.0], [2026.0, 60303.666666666664], [2025.0, 60382.5], [2023.0, 60367.5], [2022.0, 60534.0], [2074.0, 60311.170818505336], [2059.0, 60104.0], [2058.0, 60376.0], [2051.0, 60226.71428571428], [2052.0, 60273.666666666664], [2050.0, 60612.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1854.9941176470593, 60379.34852941179]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[33.0, 64398.0], [8.0, 64106.0], [2.0, 64115.0], [34.0, 64343.42857142857], [9.0, 64106.0], [10.0, 64102.0], [11.0, 64116.0], [12.0, 64128.0], [3.0, 64113.0], [13.0, 64098.0], [14.0, 64330.0], [15.0, 64370.0], [4.0, 64128.0], [1.0, 64132.0], [18.0, 64380.333333333336], [19.0, 64210.0], [20.0, 64298.0], [5.0, 64127.0], [21.0, 64588.0], [23.0, 64327.0], [6.0, 64125.0], [25.0, 64569.0], [26.0, 64427.0], [7.0, 64123.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[18.44117647058824, 64278.73529411765]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[35.0, 61685.0], [36.0, 61741.0], [39.0, 61581.0], [41.0, 61734.5], [40.0, 61887.0], [42.0, 61854.0], [47.0, 61785.0], [48.0, 61718.0], [57.0, 62092.0], [58.0, 61920.0], [66.0, 61809.555555555555], [79.0, 61825.0], [77.0, 61773.0], [82.0, 61780.0], [81.0, 61620.0], [80.0, 61924.0], [86.0, 61925.5], [84.0, 61451.0], [90.0, 61875.5], [88.0, 61568.5], [95.0, 61710.0], [99.0, 61890.0], [98.0, 61755.0], [96.0, 62027.0], [101.0, 61584.0], [107.0, 61894.0], [105.0, 61535.0], [115.0, 62015.0], [119.0, 61420.0], [121.0, 61646.0], [127.0, 61575.0], [125.0, 61779.5], [124.0, 61677.0], [134.0, 61812.666666666664], [131.0, 61659.5], [129.0, 61914.0], [128.0, 61628.0], [142.0, 61766.0], [145.0, 61392.0], [144.0, 61720.0], [156.0, 61492.0], [152.0, 61698.0], [166.0, 61561.0], [163.0, 61970.0], [162.0, 61799.5], [174.0, 61849.5], [170.0, 61864.0], [168.0, 61526.0], [213.0, 61835.0], [212.0, 61498.0], [211.0, 61804.0], [222.0, 61667.0], [221.0, 61633.5], [219.0, 61940.0], [218.0, 61644.0], [217.0, 61769.0], [216.0, 62008.0], [230.0, 61649.75], [226.0, 61633.0], [225.0, 61656.0], [224.0, 61395.0], [253.0, 61911.0], [270.0, 61687.0], [268.0, 61637.0], [267.0, 61333.0], [266.0, 61367.0], [265.0, 61859.5], [264.0, 61503.0], [262.0, 61741.0], [260.0, 61877.0], [259.0, 61400.0], [258.0, 61604.0], [257.0, 61774.0], [256.0, 61432.0], [287.0, 61474.0], [286.0, 61575.0], [274.0, 61773.5], [272.0, 61562.0], [303.0, 61659.0], [301.0, 61438.0], [300.0, 61541.0], [295.0, 61710.0], [294.0, 61917.0], [291.0, 61371.0], [289.0, 61337.0], [314.0, 61689.2], [310.0, 61627.0], [308.0, 61777.333333333336], [306.0, 61401.0], [335.0, 61837.0], [334.0, 61700.0], [333.0, 61666.0], [331.0, 61360.0], [329.0, 61613.0], [350.0, 61355.0], [347.0, 61436.5], [345.0, 61461.0], [344.0, 61853.0], [343.0, 61766.0], [340.0, 61871.0], [364.0, 61326.0], [359.0, 61366.0], [354.0, 61481.4], [383.0, 61229.0], [381.0, 61466.0], [377.0, 61467.0], [374.0, 61875.0], [370.0, 61737.0], [368.0, 61468.0], [399.0, 61496.5], [394.0, 61503.0], [388.0, 61698.0], [386.0, 61789.0], [385.0, 61842.0], [415.0, 61563.5], [411.0, 61828.0], [409.0, 61708.0], [408.0, 61402.0], [407.0, 61421.75], [404.0, 61501.0], [402.0, 61266.0], [400.0, 61438.0], [429.0, 61320.0], [424.0, 61525.0], [447.0, 61577.0], [446.0, 61237.0], [445.0, 61393.333333333336], [442.0, 61625.0], [436.0, 61423.0], [434.0, 61763.0], [432.0, 61558.0], [454.0, 61455.5], [450.0, 61424.0], [448.0, 61816.0], [478.0, 61478.0], [475.0, 61615.0], [495.0, 61315.0], [494.0, 61724.0], [493.0, 61315.0], [491.0, 61382.0], [488.0, 61214.0], [481.0, 61451.0], [511.0, 61212.0], [509.0, 61450.0], [506.0, 61449.0], [504.0, 61603.5], [502.0, 61381.5], [496.0, 61654.0], [542.0, 61276.0], [543.0, 61481.0], [537.0, 61482.0], [536.0, 61481.5], [534.0, 61788.0], [531.0, 61176.0], [530.0, 61610.0], [528.0, 61611.0], [525.0, 61355.666666666664], [519.0, 61583.0], [517.0, 61236.0], [515.0, 61738.5], [512.0, 61143.0], [523.0, 61757.0], [573.0, 61329.0], [574.0, 61589.0], [561.0, 61334.0], [560.0, 61590.0], [571.0, 61751.0], [570.0, 61714.0], [569.0, 61572.0], [568.0, 61172.0], [559.0, 61310.0], [544.0, 61583.0], [551.0, 61277.0], [549.0, 61379.0], [557.0, 61568.5], [556.0, 61591.0], [567.0, 61478.0], [566.0, 61485.0], [564.0, 61348.0], [562.0, 61268.5], [601.0, 61494.0], [606.0, 61424.0], [607.0, 61118.0], [605.0, 61705.0], [603.0, 61161.0], [602.0, 61566.0], [591.0, 61378.5], [576.0, 61369.0], [581.0, 61367.0], [579.0, 61708.0], [583.0, 61665.0], [582.0, 61587.0], [590.0, 61673.0], [589.0, 61439.5], [587.0, 61230.0], [586.0, 61477.0], [584.0, 61160.0], [599.0, 61776.0], [597.0, 61163.0], [594.0, 61468.5], [592.0, 61663.0], [636.0, 61668.0], [639.0, 61769.0], [634.0, 61333.5], [633.0, 61529.0], [630.0, 61363.0], [628.0, 61572.0], [625.0, 61535.0], [622.0, 61458.0], [609.0, 61542.5], [612.0, 61770.0], [611.0, 61366.0], [615.0, 61710.0], [613.0, 61730.0], [621.0, 61584.0], [620.0, 61547.0], [617.0, 61158.0], [647.0, 61223.0], [665.0, 61329.0], [669.0, 61130.0], [664.0, 61641.0], [661.0, 61765.0], [656.0, 61147.0], [654.0, 61161.0], [653.0, 61544.333333333336], [648.0, 61265.0], [645.0, 61555.0], [641.0, 61378.5], [703.0, 61486.333333333336], [693.0, 61761.0], [691.0, 61329.0], [682.0, 61742.0], [675.0, 61390.0], [673.0, 61323.0], [672.0, 61701.0], [728.0, 61525.0], [733.0, 61388.0], [734.0, 61117.0], [732.0, 61243.0], [725.0, 61190.0], [720.0, 61733.0], [718.0, 61235.5], [706.0, 61562.0], [711.0, 61491.0], [708.0, 61688.0], [716.0, 61395.0], [714.0, 61185.0], [712.0, 61703.0], [754.0, 61146.0], [766.0, 61350.0], [765.0, 61327.0], [761.0, 61657.0], [760.0, 61411.0], [751.0, 61217.0], [741.0, 61250.0], [740.0, 61261.0], [739.0, 61523.0], [743.0, 61285.0], [742.0, 61652.0], [749.0, 61579.0], [745.0, 61446.0], [744.0, 61357.5], [759.0, 61726.0], [757.0, 61190.0], [756.0, 61671.5], [753.0, 61284.333333333336], [787.0, 61397.0], [798.0, 61574.0], [799.0, 61517.0], [786.0, 61325.0], [785.0, 61487.5], [796.0, 61647.5], [793.0, 61349.0], [792.0, 61718.0], [779.0, 61694.0], [770.0, 61210.0], [768.0, 61691.0], [773.0, 61441.5], [791.0, 61434.25], [790.0, 61494.0], [788.0, 61349.0], [825.0, 61493.5], [820.0, 61573.0], [828.0, 61219.5], [829.0, 61664.0], [819.0, 61506.0], [816.0, 61386.666666666664], [826.0, 61390.0], [824.0, 61373.0], [806.0, 61274.0], [804.0, 61375.5], [802.0, 61574.0], [801.0, 61266.0], [800.0, 61119.0], [815.0, 61442.0], [814.0, 61169.0], [812.0, 61490.0], [810.0, 61618.0], [809.0, 61418.0], [808.0, 61224.0], [823.0, 61287.0], [822.0, 61271.0], [821.0, 61456.0], [847.0, 61346.0], [851.0, 61571.5], [849.0, 61515.0], [848.0, 61522.0], [836.0, 61189.5], [834.0, 61171.0], [833.0, 61683.0], [846.0, 61759.0], [845.0, 61659.0], [844.0, 61414.0], [841.0, 61416.0], [840.0, 61412.0], [953.0, 61447.0], [951.0, 61435.0], [949.0, 61201.0], [948.0, 61363.0], [947.0, 61531.0], [943.0, 61639.0], [933.0, 61232.0], [932.0, 61125.0], [991.0, 61496.0], [987.0, 61607.0], [986.0, 61744.0], [989.0, 61535.0], [985.0, 61237.0], [984.0, 61282.333333333336], [966.0, 61465.0], [961.0, 61260.0], [975.0, 61098.0], [969.0, 61558.0], [982.0, 61291.0], [979.0, 61135.0], [977.0, 61495.0], [976.0, 61333.0], [1010.0, 61607.0], [1020.0, 61506.0], [1021.0, 61705.0], [1009.0, 61441.0], [1019.0, 61194.0], [1017.0, 61506.0], [1016.0, 61671.0], [999.0, 61553.0], [996.0, 61609.0], [993.0, 61640.0], [1007.0, 61634.0], [1002.0, 61311.5], [1015.0, 61092.0], [1013.0, 61413.0], [1012.0, 61368.0], [1077.0, 61446.5], [1083.0, 61402.5], [1056.0, 61175.0], [1058.0, 61423.0], [1061.0, 61662.0], [1064.0, 61361.0], [1062.0, 61492.0], [1068.0, 61493.0], [1067.0, 61259.0], [1080.0, 61664.0], [1079.0, 61327.0], [1076.0, 61547.2], [1075.0, 61328.5], [1074.0, 61475.0], [1073.0, 61355.0], [1052.0, 61224.0], [1028.0, 61480.5], [1024.0, 61363.28571428572], [1032.0, 61239.0], [1029.0, 61530.0], [1036.0, 61552.0], [1035.0, 61461.0], [1038.0, 61528.5], [1037.0, 61436.0], [1051.0, 61128.0], [1049.0, 61330.0], [1046.0, 61496.5], [1044.0, 61639.0], [1043.0, 61086.0], [1042.0, 61129.0], [1070.0, 61373.5], [1069.0, 61261.5], [1123.0, 61463.2], [1151.0, 61685.0], [1150.0, 61278.5], [1144.0, 61662.0], [1136.0, 61313.333333333336], [1112.0, 61612.5], [1102.0, 61347.666666666664], [1095.0, 61186.0], [1107.0, 61385.5], [1105.0, 61228.0], [1104.0, 61492.0], [1134.0, 61187.0], [1131.0, 61223.0], [1124.0, 61545.8], [1121.0, 61433.0], [1206.0, 61530.666666666664], [1214.0, 61495.0], [1185.0, 61285.0], [1189.0, 61522.0], [1186.0, 61513.5], [1191.0, 61083.0], [1190.0, 61070.0], [1193.0, 61121.0], [1192.0, 61383.0], [1199.0, 61208.0], [1196.0, 61138.0], [1210.0, 61440.0], [1209.0, 61291.0], [1204.0, 61481.0], [1205.0, 61446.0], [1203.0, 61281.0], [1202.0, 61444.5], [1201.0, 61358.0], [1200.0, 61511.0], [1183.0, 61220.5], [1157.0, 61078.5], [1160.0, 61721.0], [1158.0, 61236.666666666664], [1166.0, 61315.0], [1165.0, 61275.0], [1182.0, 61138.0], [1179.0, 61286.0], [1178.0, 61440.0], [1173.0, 61367.5], [1168.0, 61353.0], [1240.0, 61118.0], [1242.0, 61539.99999999999], [1219.0, 61354.0], [1239.0, 61454.0], [1235.0, 61620.5], [1233.0, 61690.0], [1232.0, 61286.6], [1230.0, 61324.0], [1226.0, 61282.0], [1224.0, 61425.333333333336], [1223.0, 61151.0], [1222.0, 61685.0], [1220.0, 61250.0]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[675.4426470588235, 61499.09411764707]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2074.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61940144E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940144E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 60379.34852941179, "minX": 1.61940144E12, "maxY": 64278.73529411765, "series": [{"data": [[1.61940144E12, 61417.94558823526]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940144E12, 60379.34852941179]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940144E12, 64278.73529411765]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940144E12, 61499.09411764707]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940144E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940144E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940144E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61940144E12, "maxY": 4.9E-324, "series": [{"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61940144E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940144E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 59979.0, "minX": 1.61940144E12, "maxY": 64653.0, "series": [{"data": [[1.61940144E12, 64653.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61940144E12, 61726.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61940144E12, 64129.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61940144E12, 61849.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61940144E12, 59979.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61940144E12, 61285.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940144E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60377.5, "minX": 34.0, "maxY": 64188.0, "series": [{"data": [[34.0, 64188.0], [680.0, 60377.5], [1360.0, 61460.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1360.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 34.0, "maxY": 4.9E-324, "series": [{"data": [[34.0, 0.0], [680.0, 0.0], [1360.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1360.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 34.56666666666667, "minX": 1.61940138E12, "maxY": 34.56666666666667, "series": [{"data": [[1.61940138E12, 34.56666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940138E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 34.56666666666667, "minX": 1.61940144E12, "maxY": 34.56666666666667, "series": [{"data": [[1.61940144E12, 34.56666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61940144E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5666666666666667, "minX": 1.61940144E12, "maxY": 11.333333333333334, "series": [{"data": [[1.61940144E12, 0.5666666666666667]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61940144E12, 11.333333333333334]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61940144E12, 11.333333333333334]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61940144E12, 11.333333333333334]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940144E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 34.56666666666667, "minX": 1.61940144E12, "maxY": 34.56666666666667, "series": [{"data": [[1.61940144E12, 34.56666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61940144E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

