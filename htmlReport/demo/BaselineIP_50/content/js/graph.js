/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 60919.0, "minX": 0.0, "maxY": 64807.0, "series": [{"data": [[0.0, 61034.0], [0.1, 61034.0], [0.2, 61034.0], [0.3, 61034.0], [0.4, 61034.0], [0.5, 61034.0], [0.6, 61034.0], [0.7, 61034.0], [0.8, 61034.0], [0.9, 61034.0], [1.0, 61034.0], [1.1, 61034.0], [1.2, 61034.0], [1.3, 61034.0], [1.4, 61034.0], [1.5, 61034.0], [1.6, 61034.0], [1.7, 61034.0], [1.8, 61034.0], [1.9, 61034.0], [2.0, 61034.0], [2.1, 61034.0], [2.2, 61034.0], [2.3, 61034.0], [2.4, 61034.0], [2.5, 61034.0], [2.6, 61034.0], [2.7, 61034.0], [2.8, 61034.0], [2.9, 61034.0], [3.0, 61034.0], [3.1, 61034.0], [3.2, 61034.0], [3.3, 61034.0], [3.4, 61034.0], [3.5, 61034.0], [3.6, 61034.0], [3.7, 61034.0], [3.8, 61034.0], [3.9, 61034.0], [4.0, 61034.0], [4.1, 61034.0], [4.2, 61034.0], [4.3, 61034.0], [4.4, 61034.0], [4.5, 61034.0], [4.6, 61034.0], [4.7, 61034.0], [4.8, 61034.0], [4.9, 61034.0], [5.0, 61059.0], [5.1, 61059.0], [5.2, 61059.0], [5.3, 61059.0], [5.4, 61059.0], [5.5, 61059.0], [5.6, 61059.0], [5.7, 61059.0], [5.8, 61059.0], [5.9, 61059.0], [6.0, 61059.0], [6.1, 61059.0], [6.2, 61059.0], [6.3, 61059.0], [6.4, 61059.0], [6.5, 61059.0], [6.6, 61059.0], [6.7, 61059.0], [6.8, 61059.0], [6.9, 61059.0], [7.0, 61059.0], [7.1, 61059.0], [7.2, 61059.0], [7.3, 61059.0], [7.4, 61059.0], [7.5, 61059.0], [7.6, 61059.0], [7.7, 61059.0], [7.8, 61059.0], [7.9, 61059.0], [8.0, 61059.0], [8.1, 61059.0], [8.2, 61059.0], [8.3, 61059.0], [8.4, 61059.0], [8.5, 61059.0], [8.6, 61059.0], [8.7, 61059.0], [8.8, 61059.0], [8.9, 61059.0], [9.0, 61059.0], [9.1, 61059.0], [9.2, 61059.0], [9.3, 61059.0], [9.4, 61059.0], [9.5, 61059.0], [9.6, 61059.0], [9.7, 61059.0], [9.8, 61059.0], [9.9, 61059.0], [10.0, 61062.0], [10.1, 61062.0], [10.2, 61062.0], [10.3, 61062.0], [10.4, 61062.0], [10.5, 61062.0], [10.6, 61062.0], [10.7, 61062.0], [10.8, 61062.0], [10.9, 61062.0], [11.0, 61062.0], [11.1, 61062.0], [11.2, 61062.0], [11.3, 61062.0], [11.4, 61062.0], [11.5, 61062.0], [11.6, 61062.0], [11.7, 61062.0], [11.8, 61062.0], [11.9, 61062.0], [12.0, 61062.0], [12.1, 61062.0], [12.2, 61062.0], [12.3, 61062.0], [12.4, 61062.0], [12.5, 61062.0], [12.6, 61062.0], [12.7, 61062.0], [12.8, 61062.0], [12.9, 61062.0], [13.0, 61062.0], [13.1, 61062.0], [13.2, 61062.0], [13.3, 61062.0], [13.4, 61062.0], [13.5, 61062.0], [13.6, 61062.0], [13.7, 61062.0], [13.8, 61062.0], [13.9, 61062.0], [14.0, 61062.0], [14.1, 61062.0], [14.2, 61062.0], [14.3, 61062.0], [14.4, 61062.0], [14.5, 61062.0], [14.6, 61062.0], [14.7, 61062.0], [14.8, 61062.0], [14.9, 61062.0], [15.0, 61102.0], [15.1, 61102.0], [15.2, 61102.0], [15.3, 61102.0], [15.4, 61102.0], [15.5, 61102.0], [15.6, 61102.0], [15.7, 61102.0], [15.8, 61102.0], [15.9, 61102.0], [16.0, 61102.0], [16.1, 61102.0], [16.2, 61102.0], [16.3, 61102.0], [16.4, 61102.0], [16.5, 61102.0], [16.6, 61102.0], [16.7, 61102.0], [16.8, 61102.0], [16.9, 61102.0], [17.0, 61102.0], [17.1, 61102.0], [17.2, 61102.0], [17.3, 61102.0], [17.4, 61102.0], [17.5, 61102.0], [17.6, 61102.0], [17.7, 61102.0], [17.8, 61102.0], [17.9, 61102.0], [18.0, 61102.0], [18.1, 61102.0], [18.2, 61102.0], [18.3, 61102.0], [18.4, 61102.0], [18.5, 61102.0], [18.6, 61102.0], [18.7, 61102.0], [18.8, 61102.0], [18.9, 61102.0], [19.0, 61102.0], [19.1, 61102.0], [19.2, 61102.0], [19.3, 61102.0], [19.4, 61102.0], [19.5, 61102.0], [19.6, 61102.0], [19.7, 61102.0], [19.8, 61102.0], [19.9, 61102.0], [20.0, 61133.0], [20.1, 61133.0], [20.2, 61133.0], [20.3, 61133.0], [20.4, 61133.0], [20.5, 61133.0], [20.6, 61133.0], [20.7, 61133.0], [20.8, 61133.0], [20.9, 61133.0], [21.0, 61133.0], [21.1, 61133.0], [21.2, 61133.0], [21.3, 61133.0], [21.4, 61133.0], [21.5, 61133.0], [21.6, 61133.0], [21.7, 61133.0], [21.8, 61133.0], [21.9, 61133.0], [22.0, 61133.0], [22.1, 61133.0], [22.2, 61133.0], [22.3, 61133.0], [22.4, 61133.0], [22.5, 61133.0], [22.6, 61133.0], [22.7, 61133.0], [22.8, 61133.0], [22.9, 61133.0], [23.0, 61133.0], [23.1, 61133.0], [23.2, 61133.0], [23.3, 61133.0], [23.4, 61133.0], [23.5, 61133.0], [23.6, 61133.0], [23.7, 61133.0], [23.8, 61133.0], [23.9, 61133.0], [24.0, 61133.0], [24.1, 61133.0], [24.2, 61133.0], [24.3, 61133.0], [24.4, 61133.0], [24.5, 61133.0], [24.6, 61133.0], [24.7, 61133.0], [24.8, 61133.0], [24.9, 61133.0], [25.0, 61150.0], [25.1, 61150.0], [25.2, 61150.0], [25.3, 61150.0], [25.4, 61150.0], [25.5, 61150.0], [25.6, 61150.0], [25.7, 61150.0], [25.8, 61150.0], [25.9, 61150.0], [26.0, 61150.0], [26.1, 61150.0], [26.2, 61150.0], [26.3, 61150.0], [26.4, 61150.0], [26.5, 61150.0], [26.6, 61150.0], [26.7, 61150.0], [26.8, 61150.0], [26.9, 61150.0], [27.0, 61150.0], [27.1, 61150.0], [27.2, 61150.0], [27.3, 61150.0], [27.4, 61150.0], [27.5, 61150.0], [27.6, 61150.0], [27.7, 61150.0], [27.8, 61150.0], [27.9, 61150.0], [28.0, 61150.0], [28.1, 61150.0], [28.2, 61150.0], [28.3, 61150.0], [28.4, 61150.0], [28.5, 61150.0], [28.6, 61150.0], [28.7, 61150.0], [28.8, 61150.0], [28.9, 61150.0], [29.0, 61150.0], [29.1, 61150.0], [29.2, 61150.0], [29.3, 61150.0], [29.4, 61150.0], [29.5, 61150.0], [29.6, 61150.0], [29.7, 61150.0], [29.8, 61150.0], [29.9, 61150.0], [30.0, 61212.0], [30.1, 61212.0], [30.2, 61212.0], [30.3, 61212.0], [30.4, 61212.0], [30.5, 61212.0], [30.6, 61212.0], [30.7, 61212.0], [30.8, 61212.0], [30.9, 61212.0], [31.0, 61212.0], [31.1, 61212.0], [31.2, 61212.0], [31.3, 61212.0], [31.4, 61212.0], [31.5, 61212.0], [31.6, 61212.0], [31.7, 61212.0], [31.8, 61212.0], [31.9, 61212.0], [32.0, 61212.0], [32.1, 61212.0], [32.2, 61212.0], [32.3, 61212.0], [32.4, 61212.0], [32.5, 61212.0], [32.6, 61212.0], [32.7, 61212.0], [32.8, 61212.0], [32.9, 61212.0], [33.0, 61212.0], [33.1, 61212.0], [33.2, 61212.0], [33.3, 61212.0], [33.4, 61212.0], [33.5, 61212.0], [33.6, 61212.0], [33.7, 61212.0], [33.8, 61212.0], [33.9, 61212.0], [34.0, 61212.0], [34.1, 61212.0], [34.2, 61212.0], [34.3, 61212.0], [34.4, 61212.0], [34.5, 61212.0], [34.6, 61212.0], [34.7, 61212.0], [34.8, 61212.0], [34.9, 61212.0], [35.0, 61269.0], [35.1, 61269.0], [35.2, 61269.0], [35.3, 61269.0], [35.4, 61269.0], [35.5, 61269.0], [35.6, 61269.0], [35.7, 61269.0], [35.8, 61269.0], [35.9, 61269.0], [36.0, 61269.0], [36.1, 61269.0], [36.2, 61269.0], [36.3, 61269.0], [36.4, 61269.0], [36.5, 61269.0], [36.6, 61269.0], [36.7, 61269.0], [36.8, 61269.0], [36.9, 61269.0], [37.0, 61269.0], [37.1, 61269.0], [37.2, 61269.0], [37.3, 61269.0], [37.4, 61269.0], [37.5, 61269.0], [37.6, 61269.0], [37.7, 61269.0], [37.8, 61269.0], [37.9, 61269.0], [38.0, 61269.0], [38.1, 61269.0], [38.2, 61269.0], [38.3, 61269.0], [38.4, 61269.0], [38.5, 61269.0], [38.6, 61269.0], [38.7, 61269.0], [38.8, 61269.0], [38.9, 61269.0], [39.0, 61269.0], [39.1, 61269.0], [39.2, 61269.0], [39.3, 61269.0], [39.4, 61269.0], [39.5, 61269.0], [39.6, 61269.0], [39.7, 61269.0], [39.8, 61269.0], [39.9, 61269.0], [40.0, 61315.0], [40.1, 61315.0], [40.2, 61315.0], [40.3, 61315.0], [40.4, 61315.0], [40.5, 61315.0], [40.6, 61315.0], [40.7, 61315.0], [40.8, 61315.0], [40.9, 61315.0], [41.0, 61315.0], [41.1, 61315.0], [41.2, 61315.0], [41.3, 61315.0], [41.4, 61315.0], [41.5, 61315.0], [41.6, 61315.0], [41.7, 61315.0], [41.8, 61315.0], [41.9, 61315.0], [42.0, 61315.0], [42.1, 61315.0], [42.2, 61315.0], [42.3, 61315.0], [42.4, 61315.0], [42.5, 61315.0], [42.6, 61315.0], [42.7, 61315.0], [42.8, 61315.0], [42.9, 61315.0], [43.0, 61315.0], [43.1, 61315.0], [43.2, 61315.0], [43.3, 61315.0], [43.4, 61315.0], [43.5, 61315.0], [43.6, 61315.0], [43.7, 61315.0], [43.8, 61315.0], [43.9, 61315.0], [44.0, 61315.0], [44.1, 61315.0], [44.2, 61315.0], [44.3, 61315.0], [44.4, 61315.0], [44.5, 61315.0], [44.6, 61315.0], [44.7, 61315.0], [44.8, 61315.0], [44.9, 61315.0], [45.0, 61360.0], [45.1, 61360.0], [45.2, 61360.0], [45.3, 61360.0], [45.4, 61360.0], [45.5, 61360.0], [45.6, 61360.0], [45.7, 61360.0], [45.8, 61360.0], [45.9, 61360.0], [46.0, 61360.0], [46.1, 61360.0], [46.2, 61360.0], [46.3, 61360.0], [46.4, 61360.0], [46.5, 61360.0], [46.6, 61360.0], [46.7, 61360.0], [46.8, 61360.0], [46.9, 61360.0], [47.0, 61360.0], [47.1, 61360.0], [47.2, 61360.0], [47.3, 61360.0], [47.4, 61360.0], [47.5, 61360.0], [47.6, 61360.0], [47.7, 61360.0], [47.8, 61360.0], [47.9, 61360.0], [48.0, 61360.0], [48.1, 61360.0], [48.2, 61360.0], [48.3, 61360.0], [48.4, 61360.0], [48.5, 61360.0], [48.6, 61360.0], [48.7, 61360.0], [48.8, 61360.0], [48.9, 61360.0], [49.0, 61360.0], [49.1, 61360.0], [49.2, 61360.0], [49.3, 61360.0], [49.4, 61360.0], [49.5, 61360.0], [49.6, 61360.0], [49.7, 61360.0], [49.8, 61360.0], [49.9, 61360.0], [50.0, 61531.0], [50.1, 61531.0], [50.2, 61531.0], [50.3, 61531.0], [50.4, 61531.0], [50.5, 61531.0], [50.6, 61531.0], [50.7, 61531.0], [50.8, 61531.0], [50.9, 61531.0], [51.0, 61531.0], [51.1, 61531.0], [51.2, 61531.0], [51.3, 61531.0], [51.4, 61531.0], [51.5, 61531.0], [51.6, 61531.0], [51.7, 61531.0], [51.8, 61531.0], [51.9, 61531.0], [52.0, 61531.0], [52.1, 61531.0], [52.2, 61531.0], [52.3, 61531.0], [52.4, 61531.0], [52.5, 61531.0], [52.6, 61531.0], [52.7, 61531.0], [52.8, 61531.0], [52.9, 61531.0], [53.0, 61531.0], [53.1, 61531.0], [53.2, 61531.0], [53.3, 61531.0], [53.4, 61531.0], [53.5, 61531.0], [53.6, 61531.0], [53.7, 61531.0], [53.8, 61531.0], [53.9, 61531.0], [54.0, 61531.0], [54.1, 61531.0], [54.2, 61531.0], [54.3, 61531.0], [54.4, 61531.0], [54.5, 61531.0], [54.6, 61531.0], [54.7, 61531.0], [54.8, 61531.0], [54.9, 61531.0], [55.0, 61559.0], [55.1, 61559.0], [55.2, 61559.0], [55.3, 61559.0], [55.4, 61559.0], [55.5, 61559.0], [55.6, 61559.0], [55.7, 61559.0], [55.8, 61559.0], [55.9, 61559.0], [56.0, 61559.0], [56.1, 61559.0], [56.2, 61559.0], [56.3, 61559.0], [56.4, 61559.0], [56.5, 61559.0], [56.6, 61559.0], [56.7, 61559.0], [56.8, 61559.0], [56.9, 61559.0], [57.0, 61559.0], [57.1, 61559.0], [57.2, 61559.0], [57.3, 61559.0], [57.4, 61559.0], [57.5, 61559.0], [57.6, 61559.0], [57.7, 61559.0], [57.8, 61559.0], [57.9, 61559.0], [58.0, 61559.0], [58.1, 61559.0], [58.2, 61559.0], [58.3, 61559.0], [58.4, 61559.0], [58.5, 61559.0], [58.6, 61559.0], [58.7, 61559.0], [58.8, 61559.0], [58.9, 61559.0], [59.0, 61559.0], [59.1, 61559.0], [59.2, 61559.0], [59.3, 61559.0], [59.4, 61559.0], [59.5, 61559.0], [59.6, 61559.0], [59.7, 61559.0], [59.8, 61559.0], [59.9, 61559.0], [60.0, 61563.0], [60.1, 61563.0], [60.2, 61563.0], [60.3, 61563.0], [60.4, 61563.0], [60.5, 61563.0], [60.6, 61563.0], [60.7, 61563.0], [60.8, 61563.0], [60.9, 61563.0], [61.0, 61563.0], [61.1, 61563.0], [61.2, 61563.0], [61.3, 61563.0], [61.4, 61563.0], [61.5, 61563.0], [61.6, 61563.0], [61.7, 61563.0], [61.8, 61563.0], [61.9, 61563.0], [62.0, 61563.0], [62.1, 61563.0], [62.2, 61563.0], [62.3, 61563.0], [62.4, 61563.0], [62.5, 61563.0], [62.6, 61563.0], [62.7, 61563.0], [62.8, 61563.0], [62.9, 61563.0], [63.0, 61563.0], [63.1, 61563.0], [63.2, 61563.0], [63.3, 61563.0], [63.4, 61563.0], [63.5, 61563.0], [63.6, 61563.0], [63.7, 61563.0], [63.8, 61563.0], [63.9, 61563.0], [64.0, 61563.0], [64.1, 61563.0], [64.2, 61563.0], [64.3, 61563.0], [64.4, 61563.0], [64.5, 61563.0], [64.6, 61563.0], [64.7, 61563.0], [64.8, 61563.0], [64.9, 61563.0], [65.0, 61608.0], [65.1, 61608.0], [65.2, 61608.0], [65.3, 61608.0], [65.4, 61608.0], [65.5, 61608.0], [65.6, 61608.0], [65.7, 61608.0], [65.8, 61608.0], [65.9, 61608.0], [66.0, 61608.0], [66.1, 61608.0], [66.2, 61608.0], [66.3, 61608.0], [66.4, 61608.0], [66.5, 61608.0], [66.6, 61608.0], [66.7, 61608.0], [66.8, 61608.0], [66.9, 61608.0], [67.0, 61608.0], [67.1, 61608.0], [67.2, 61608.0], [67.3, 61608.0], [67.4, 61608.0], [67.5, 61608.0], [67.6, 61608.0], [67.7, 61608.0], [67.8, 61608.0], [67.9, 61608.0], [68.0, 61608.0], [68.1, 61608.0], [68.2, 61608.0], [68.3, 61608.0], [68.4, 61608.0], [68.5, 61608.0], [68.6, 61608.0], [68.7, 61608.0], [68.8, 61608.0], [68.9, 61608.0], [69.0, 61608.0], [69.1, 61608.0], [69.2, 61608.0], [69.3, 61608.0], [69.4, 61608.0], [69.5, 61608.0], [69.6, 61608.0], [69.7, 61608.0], [69.8, 61608.0], [69.9, 61608.0], [70.0, 61631.0], [70.1, 61631.0], [70.2, 61631.0], [70.3, 61631.0], [70.4, 61631.0], [70.5, 61631.0], [70.6, 61631.0], [70.7, 61631.0], [70.8, 61631.0], [70.9, 61631.0], [71.0, 61631.0], [71.1, 61631.0], [71.2, 61631.0], [71.3, 61631.0], [71.4, 61631.0], [71.5, 61631.0], [71.6, 61631.0], [71.7, 61631.0], [71.8, 61631.0], [71.9, 61631.0], [72.0, 61631.0], [72.1, 61631.0], [72.2, 61631.0], [72.3, 61631.0], [72.4, 61631.0], [72.5, 61631.0], [72.6, 61631.0], [72.7, 61631.0], [72.8, 61631.0], [72.9, 61631.0], [73.0, 61631.0], [73.1, 61631.0], [73.2, 61631.0], [73.3, 61631.0], [73.4, 61631.0], [73.5, 61631.0], [73.6, 61631.0], [73.7, 61631.0], [73.8, 61631.0], [73.9, 61631.0], [74.0, 61631.0], [74.1, 61631.0], [74.2, 61631.0], [74.3, 61631.0], [74.4, 61631.0], [74.5, 61631.0], [74.6, 61631.0], [74.7, 61631.0], [74.8, 61631.0], [74.9, 61631.0], [75.0, 61660.0], [75.1, 61660.0], [75.2, 61660.0], [75.3, 61660.0], [75.4, 61660.0], [75.5, 61660.0], [75.6, 61660.0], [75.7, 61660.0], [75.8, 61660.0], [75.9, 61660.0], [76.0, 61660.0], [76.1, 61660.0], [76.2, 61660.0], [76.3, 61660.0], [76.4, 61660.0], [76.5, 61660.0], [76.6, 61660.0], [76.7, 61660.0], [76.8, 61660.0], [76.9, 61660.0], [77.0, 61660.0], [77.1, 61660.0], [77.2, 61660.0], [77.3, 61660.0], [77.4, 61660.0], [77.5, 61660.0], [77.6, 61660.0], [77.7, 61660.0], [77.8, 61660.0], [77.9, 61660.0], [78.0, 61660.0], [78.1, 61660.0], [78.2, 61660.0], [78.3, 61660.0], [78.4, 61660.0], [78.5, 61660.0], [78.6, 61660.0], [78.7, 61660.0], [78.8, 61660.0], [78.9, 61660.0], [79.0, 61660.0], [79.1, 61660.0], [79.2, 61660.0], [79.3, 61660.0], [79.4, 61660.0], [79.5, 61660.0], [79.6, 61660.0], [79.7, 61660.0], [79.8, 61660.0], [79.9, 61660.0], [80.0, 61700.0], [80.1, 61700.0], [80.2, 61700.0], [80.3, 61700.0], [80.4, 61700.0], [80.5, 61700.0], [80.6, 61700.0], [80.7, 61700.0], [80.8, 61700.0], [80.9, 61700.0], [81.0, 61700.0], [81.1, 61700.0], [81.2, 61700.0], [81.3, 61700.0], [81.4, 61700.0], [81.5, 61700.0], [81.6, 61700.0], [81.7, 61700.0], [81.8, 61700.0], [81.9, 61700.0], [82.0, 61700.0], [82.1, 61700.0], [82.2, 61700.0], [82.3, 61700.0], [82.4, 61700.0], [82.5, 61700.0], [82.6, 61700.0], [82.7, 61700.0], [82.8, 61700.0], [82.9, 61700.0], [83.0, 61700.0], [83.1, 61700.0], [83.2, 61700.0], [83.3, 61700.0], [83.4, 61700.0], [83.5, 61700.0], [83.6, 61700.0], [83.7, 61700.0], [83.8, 61700.0], [83.9, 61700.0], [84.0, 61700.0], [84.1, 61700.0], [84.2, 61700.0], [84.3, 61700.0], [84.4, 61700.0], [84.5, 61700.0], [84.6, 61700.0], [84.7, 61700.0], [84.8, 61700.0], [84.9, 61700.0], [85.0, 61766.0], [85.1, 61766.0], [85.2, 61766.0], [85.3, 61766.0], [85.4, 61766.0], [85.5, 61766.0], [85.6, 61766.0], [85.7, 61766.0], [85.8, 61766.0], [85.9, 61766.0], [86.0, 61766.0], [86.1, 61766.0], [86.2, 61766.0], [86.3, 61766.0], [86.4, 61766.0], [86.5, 61766.0], [86.6, 61766.0], [86.7, 61766.0], [86.8, 61766.0], [86.9, 61766.0], [87.0, 61766.0], [87.1, 61766.0], [87.2, 61766.0], [87.3, 61766.0], [87.4, 61766.0], [87.5, 61766.0], [87.6, 61766.0], [87.7, 61766.0], [87.8, 61766.0], [87.9, 61766.0], [88.0, 61766.0], [88.1, 61766.0], [88.2, 61766.0], [88.3, 61766.0], [88.4, 61766.0], [88.5, 61766.0], [88.6, 61766.0], [88.7, 61766.0], [88.8, 61766.0], [88.9, 61766.0], [89.0, 61766.0], [89.1, 61766.0], [89.2, 61766.0], [89.3, 61766.0], [89.4, 61766.0], [89.5, 61766.0], [89.6, 61766.0], [89.7, 61766.0], [89.8, 61766.0], [89.9, 61766.0], [90.0, 61801.0], [90.1, 61801.0], [90.2, 61801.0], [90.3, 61801.0], [90.4, 61801.0], [90.5, 61801.0], [90.6, 61801.0], [90.7, 61801.0], [90.8, 61801.0], [90.9, 61801.0], [91.0, 61801.0], [91.1, 61801.0], [91.2, 61801.0], [91.3, 61801.0], [91.4, 61801.0], [91.5, 61801.0], [91.6, 61801.0], [91.7, 61801.0], [91.8, 61801.0], [91.9, 61801.0], [92.0, 61801.0], [92.1, 61801.0], [92.2, 61801.0], [92.3, 61801.0], [92.4, 61801.0], [92.5, 61801.0], [92.6, 61801.0], [92.7, 61801.0], [92.8, 61801.0], [92.9, 61801.0], [93.0, 61801.0], [93.1, 61801.0], [93.2, 61801.0], [93.3, 61801.0], [93.4, 61801.0], [93.5, 61801.0], [93.6, 61801.0], [93.7, 61801.0], [93.8, 61801.0], [93.9, 61801.0], [94.0, 61801.0], [94.1, 61801.0], [94.2, 61801.0], [94.3, 61801.0], [94.4, 61801.0], [94.5, 61801.0], [94.6, 61801.0], [94.7, 61801.0], [94.8, 61801.0], [94.9, 61801.0], [95.0, 61850.0], [95.1, 61850.0], [95.2, 61850.0], [95.3, 61850.0], [95.4, 61850.0], [95.5, 61850.0], [95.6, 61850.0], [95.7, 61850.0], [95.8, 61850.0], [95.9, 61850.0], [96.0, 61850.0], [96.1, 61850.0], [96.2, 61850.0], [96.3, 61850.0], [96.4, 61850.0], [96.5, 61850.0], [96.6, 61850.0], [96.7, 61850.0], [96.8, 61850.0], [96.9, 61850.0], [97.0, 61850.0], [97.1, 61850.0], [97.2, 61850.0], [97.3, 61850.0], [97.4, 61850.0], [97.5, 61850.0], [97.6, 61850.0], [97.7, 61850.0], [97.8, 61850.0], [97.9, 61850.0], [98.0, 61850.0], [98.1, 61850.0], [98.2, 61850.0], [98.3, 61850.0], [98.4, 61850.0], [98.5, 61850.0], [98.6, 61850.0], [98.7, 61850.0], [98.8, 61850.0], [98.9, 61850.0], [99.0, 61850.0], [99.1, 61850.0], [99.2, 61850.0], [99.3, 61850.0], [99.4, 61850.0], [99.5, 61850.0], [99.6, 61850.0], [99.7, 61850.0], [99.8, 61850.0], [99.9, 61850.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[0.0, 61032.0], [0.1, 61032.0], [0.2, 61032.0], [0.3, 61032.0], [0.4, 61032.0], [0.5, 61032.0], [0.6, 61032.0], [0.7, 61032.0], [0.8, 61032.0], [0.9, 61032.0], [1.0, 61032.0], [1.1, 61032.0], [1.2, 61032.0], [1.3, 61032.0], [1.4, 61032.0], [1.5, 61032.0], [1.6, 61032.0], [1.7, 61032.0], [1.8, 61032.0], [1.9, 61032.0], [2.0, 61032.0], [2.1, 61032.0], [2.2, 61032.0], [2.3, 61032.0], [2.4, 61032.0], [2.5, 61032.0], [2.6, 61032.0], [2.7, 61032.0], [2.8, 61032.0], [2.9, 61032.0], [3.0, 61032.0], [3.1, 61032.0], [3.2, 61032.0], [3.3, 61032.0], [3.4, 61032.0], [3.5, 61032.0], [3.6, 61032.0], [3.7, 61032.0], [3.8, 61032.0], [3.9, 61032.0], [4.0, 61032.0], [4.1, 61032.0], [4.2, 61032.0], [4.3, 61032.0], [4.4, 61032.0], [4.5, 61032.0], [4.6, 61032.0], [4.7, 61032.0], [4.8, 61032.0], [4.9, 61032.0], [5.0, 61050.0], [5.1, 61050.0], [5.2, 61050.0], [5.3, 61050.0], [5.4, 61050.0], [5.5, 61050.0], [5.6, 61050.0], [5.7, 61050.0], [5.8, 61050.0], [5.9, 61050.0], [6.0, 61050.0], [6.1, 61050.0], [6.2, 61050.0], [6.3, 61050.0], [6.4, 61050.0], [6.5, 61050.0], [6.6, 61050.0], [6.7, 61050.0], [6.8, 61050.0], [6.9, 61050.0], [7.0, 61050.0], [7.1, 61050.0], [7.2, 61050.0], [7.3, 61050.0], [7.4, 61050.0], [7.5, 61050.0], [7.6, 61050.0], [7.7, 61050.0], [7.8, 61050.0], [7.9, 61050.0], [8.0, 61050.0], [8.1, 61050.0], [8.2, 61050.0], [8.3, 61050.0], [8.4, 61050.0], [8.5, 61050.0], [8.6, 61050.0], [8.7, 61050.0], [8.8, 61050.0], [8.9, 61050.0], [9.0, 61050.0], [9.1, 61050.0], [9.2, 61050.0], [9.3, 61050.0], [9.4, 61050.0], [9.5, 61050.0], [9.6, 61050.0], [9.7, 61050.0], [9.8, 61050.0], [9.9, 61050.0], [10.0, 61055.0], [10.1, 61055.0], [10.2, 61055.0], [10.3, 61055.0], [10.4, 61055.0], [10.5, 61055.0], [10.6, 61055.0], [10.7, 61055.0], [10.8, 61055.0], [10.9, 61055.0], [11.0, 61055.0], [11.1, 61055.0], [11.2, 61055.0], [11.3, 61055.0], [11.4, 61055.0], [11.5, 61055.0], [11.6, 61055.0], [11.7, 61055.0], [11.8, 61055.0], [11.9, 61055.0], [12.0, 61055.0], [12.1, 61055.0], [12.2, 61055.0], [12.3, 61055.0], [12.4, 61055.0], [12.5, 61055.0], [12.6, 61055.0], [12.7, 61055.0], [12.8, 61055.0], [12.9, 61055.0], [13.0, 61055.0], [13.1, 61055.0], [13.2, 61055.0], [13.3, 61055.0], [13.4, 61055.0], [13.5, 61055.0], [13.6, 61055.0], [13.7, 61055.0], [13.8, 61055.0], [13.9, 61055.0], [14.0, 61055.0], [14.1, 61055.0], [14.2, 61055.0], [14.3, 61055.0], [14.4, 61055.0], [14.5, 61055.0], [14.6, 61055.0], [14.7, 61055.0], [14.8, 61055.0], [14.9, 61055.0], [15.0, 61116.0], [15.1, 61116.0], [15.2, 61116.0], [15.3, 61116.0], [15.4, 61116.0], [15.5, 61116.0], [15.6, 61116.0], [15.7, 61116.0], [15.8, 61116.0], [15.9, 61116.0], [16.0, 61116.0], [16.1, 61116.0], [16.2, 61116.0], [16.3, 61116.0], [16.4, 61116.0], [16.5, 61116.0], [16.6, 61116.0], [16.7, 61116.0], [16.8, 61116.0], [16.9, 61116.0], [17.0, 61116.0], [17.1, 61116.0], [17.2, 61116.0], [17.3, 61116.0], [17.4, 61116.0], [17.5, 61116.0], [17.6, 61116.0], [17.7, 61116.0], [17.8, 61116.0], [17.9, 61116.0], [18.0, 61116.0], [18.1, 61116.0], [18.2, 61116.0], [18.3, 61116.0], [18.4, 61116.0], [18.5, 61116.0], [18.6, 61116.0], [18.7, 61116.0], [18.8, 61116.0], [18.9, 61116.0], [19.0, 61116.0], [19.1, 61116.0], [19.2, 61116.0], [19.3, 61116.0], [19.4, 61116.0], [19.5, 61116.0], [19.6, 61116.0], [19.7, 61116.0], [19.8, 61116.0], [19.9, 61116.0], [20.0, 61130.0], [20.1, 61130.0], [20.2, 61130.0], [20.3, 61130.0], [20.4, 61130.0], [20.5, 61130.0], [20.6, 61130.0], [20.7, 61130.0], [20.8, 61130.0], [20.9, 61130.0], [21.0, 61130.0], [21.1, 61130.0], [21.2, 61130.0], [21.3, 61130.0], [21.4, 61130.0], [21.5, 61130.0], [21.6, 61130.0], [21.7, 61130.0], [21.8, 61130.0], [21.9, 61130.0], [22.0, 61130.0], [22.1, 61130.0], [22.2, 61130.0], [22.3, 61130.0], [22.4, 61130.0], [22.5, 61130.0], [22.6, 61130.0], [22.7, 61130.0], [22.8, 61130.0], [22.9, 61130.0], [23.0, 61130.0], [23.1, 61130.0], [23.2, 61130.0], [23.3, 61130.0], [23.4, 61130.0], [23.5, 61130.0], [23.6, 61130.0], [23.7, 61130.0], [23.8, 61130.0], [23.9, 61130.0], [24.0, 61130.0], [24.1, 61130.0], [24.2, 61130.0], [24.3, 61130.0], [24.4, 61130.0], [24.5, 61130.0], [24.6, 61130.0], [24.7, 61130.0], [24.8, 61130.0], [24.9, 61130.0], [25.0, 61160.0], [25.1, 61160.0], [25.2, 61160.0], [25.3, 61160.0], [25.4, 61160.0], [25.5, 61160.0], [25.6, 61160.0], [25.7, 61160.0], [25.8, 61160.0], [25.9, 61160.0], [26.0, 61160.0], [26.1, 61160.0], [26.2, 61160.0], [26.3, 61160.0], [26.4, 61160.0], [26.5, 61160.0], [26.6, 61160.0], [26.7, 61160.0], [26.8, 61160.0], [26.9, 61160.0], [27.0, 61160.0], [27.1, 61160.0], [27.2, 61160.0], [27.3, 61160.0], [27.4, 61160.0], [27.5, 61160.0], [27.6, 61160.0], [27.7, 61160.0], [27.8, 61160.0], [27.9, 61160.0], [28.0, 61160.0], [28.1, 61160.0], [28.2, 61160.0], [28.3, 61160.0], [28.4, 61160.0], [28.5, 61160.0], [28.6, 61160.0], [28.7, 61160.0], [28.8, 61160.0], [28.9, 61160.0], [29.0, 61160.0], [29.1, 61160.0], [29.2, 61160.0], [29.3, 61160.0], [29.4, 61160.0], [29.5, 61160.0], [29.6, 61160.0], [29.7, 61160.0], [29.8, 61160.0], [29.9, 61160.0], [30.0, 61221.0], [30.1, 61221.0], [30.2, 61221.0], [30.3, 61221.0], [30.4, 61221.0], [30.5, 61221.0], [30.6, 61221.0], [30.7, 61221.0], [30.8, 61221.0], [30.9, 61221.0], [31.0, 61221.0], [31.1, 61221.0], [31.2, 61221.0], [31.3, 61221.0], [31.4, 61221.0], [31.5, 61221.0], [31.6, 61221.0], [31.7, 61221.0], [31.8, 61221.0], [31.9, 61221.0], [32.0, 61221.0], [32.1, 61221.0], [32.2, 61221.0], [32.3, 61221.0], [32.4, 61221.0], [32.5, 61221.0], [32.6, 61221.0], [32.7, 61221.0], [32.8, 61221.0], [32.9, 61221.0], [33.0, 61221.0], [33.1, 61221.0], [33.2, 61221.0], [33.3, 61221.0], [33.4, 61221.0], [33.5, 61221.0], [33.6, 61221.0], [33.7, 61221.0], [33.8, 61221.0], [33.9, 61221.0], [34.0, 61221.0], [34.1, 61221.0], [34.2, 61221.0], [34.3, 61221.0], [34.4, 61221.0], [34.5, 61221.0], [34.6, 61221.0], [34.7, 61221.0], [34.8, 61221.0], [34.9, 61221.0], [35.0, 61264.0], [35.1, 61264.0], [35.2, 61264.0], [35.3, 61264.0], [35.4, 61264.0], [35.5, 61264.0], [35.6, 61264.0], [35.7, 61264.0], [35.8, 61264.0], [35.9, 61264.0], [36.0, 61264.0], [36.1, 61264.0], [36.2, 61264.0], [36.3, 61264.0], [36.4, 61264.0], [36.5, 61264.0], [36.6, 61264.0], [36.7, 61264.0], [36.8, 61264.0], [36.9, 61264.0], [37.0, 61264.0], [37.1, 61264.0], [37.2, 61264.0], [37.3, 61264.0], [37.4, 61264.0], [37.5, 61264.0], [37.6, 61264.0], [37.7, 61264.0], [37.8, 61264.0], [37.9, 61264.0], [38.0, 61264.0], [38.1, 61264.0], [38.2, 61264.0], [38.3, 61264.0], [38.4, 61264.0], [38.5, 61264.0], [38.6, 61264.0], [38.7, 61264.0], [38.8, 61264.0], [38.9, 61264.0], [39.0, 61264.0], [39.1, 61264.0], [39.2, 61264.0], [39.3, 61264.0], [39.4, 61264.0], [39.5, 61264.0], [39.6, 61264.0], [39.7, 61264.0], [39.8, 61264.0], [39.9, 61264.0], [40.0, 61306.0], [40.1, 61306.0], [40.2, 61306.0], [40.3, 61306.0], [40.4, 61306.0], [40.5, 61306.0], [40.6, 61306.0], [40.7, 61306.0], [40.8, 61306.0], [40.9, 61306.0], [41.0, 61306.0], [41.1, 61306.0], [41.2, 61306.0], [41.3, 61306.0], [41.4, 61306.0], [41.5, 61306.0], [41.6, 61306.0], [41.7, 61306.0], [41.8, 61306.0], [41.9, 61306.0], [42.0, 61306.0], [42.1, 61306.0], [42.2, 61306.0], [42.3, 61306.0], [42.4, 61306.0], [42.5, 61306.0], [42.6, 61306.0], [42.7, 61306.0], [42.8, 61306.0], [42.9, 61306.0], [43.0, 61306.0], [43.1, 61306.0], [43.2, 61306.0], [43.3, 61306.0], [43.4, 61306.0], [43.5, 61306.0], [43.6, 61306.0], [43.7, 61306.0], [43.8, 61306.0], [43.9, 61306.0], [44.0, 61306.0], [44.1, 61306.0], [44.2, 61306.0], [44.3, 61306.0], [44.4, 61306.0], [44.5, 61306.0], [44.6, 61306.0], [44.7, 61306.0], [44.8, 61306.0], [44.9, 61306.0], [45.0, 61359.0], [45.1, 61359.0], [45.2, 61359.0], [45.3, 61359.0], [45.4, 61359.0], [45.5, 61359.0], [45.6, 61359.0], [45.7, 61359.0], [45.8, 61359.0], [45.9, 61359.0], [46.0, 61359.0], [46.1, 61359.0], [46.2, 61359.0], [46.3, 61359.0], [46.4, 61359.0], [46.5, 61359.0], [46.6, 61359.0], [46.7, 61359.0], [46.8, 61359.0], [46.9, 61359.0], [47.0, 61359.0], [47.1, 61359.0], [47.2, 61359.0], [47.3, 61359.0], [47.4, 61359.0], [47.5, 61359.0], [47.6, 61359.0], [47.7, 61359.0], [47.8, 61359.0], [47.9, 61359.0], [48.0, 61359.0], [48.1, 61359.0], [48.2, 61359.0], [48.3, 61359.0], [48.4, 61359.0], [48.5, 61359.0], [48.6, 61359.0], [48.7, 61359.0], [48.8, 61359.0], [48.9, 61359.0], [49.0, 61359.0], [49.1, 61359.0], [49.2, 61359.0], [49.3, 61359.0], [49.4, 61359.0], [49.5, 61359.0], [49.6, 61359.0], [49.7, 61359.0], [49.8, 61359.0], [49.9, 61359.0], [50.0, 61530.0], [50.1, 61530.0], [50.2, 61530.0], [50.3, 61530.0], [50.4, 61530.0], [50.5, 61530.0], [50.6, 61530.0], [50.7, 61530.0], [50.8, 61530.0], [50.9, 61530.0], [51.0, 61530.0], [51.1, 61530.0], [51.2, 61530.0], [51.3, 61530.0], [51.4, 61530.0], [51.5, 61530.0], [51.6, 61530.0], [51.7, 61530.0], [51.8, 61530.0], [51.9, 61530.0], [52.0, 61530.0], [52.1, 61530.0], [52.2, 61530.0], [52.3, 61530.0], [52.4, 61530.0], [52.5, 61530.0], [52.6, 61530.0], [52.7, 61530.0], [52.8, 61530.0], [52.9, 61530.0], [53.0, 61530.0], [53.1, 61530.0], [53.2, 61530.0], [53.3, 61530.0], [53.4, 61530.0], [53.5, 61530.0], [53.6, 61530.0], [53.7, 61530.0], [53.8, 61530.0], [53.9, 61530.0], [54.0, 61530.0], [54.1, 61530.0], [54.2, 61530.0], [54.3, 61530.0], [54.4, 61530.0], [54.5, 61530.0], [54.6, 61530.0], [54.7, 61530.0], [54.8, 61530.0], [54.9, 61530.0], [55.0, 61554.0], [55.1, 61554.0], [55.2, 61554.0], [55.3, 61554.0], [55.4, 61554.0], [55.5, 61554.0], [55.6, 61554.0], [55.7, 61554.0], [55.8, 61554.0], [55.9, 61554.0], [56.0, 61554.0], [56.1, 61554.0], [56.2, 61554.0], [56.3, 61554.0], [56.4, 61554.0], [56.5, 61554.0], [56.6, 61554.0], [56.7, 61554.0], [56.8, 61554.0], [56.9, 61554.0], [57.0, 61554.0], [57.1, 61554.0], [57.2, 61554.0], [57.3, 61554.0], [57.4, 61554.0], [57.5, 61554.0], [57.6, 61554.0], [57.7, 61554.0], [57.8, 61554.0], [57.9, 61554.0], [58.0, 61554.0], [58.1, 61554.0], [58.2, 61554.0], [58.3, 61554.0], [58.4, 61554.0], [58.5, 61554.0], [58.6, 61554.0], [58.7, 61554.0], [58.8, 61554.0], [58.9, 61554.0], [59.0, 61554.0], [59.1, 61554.0], [59.2, 61554.0], [59.3, 61554.0], [59.4, 61554.0], [59.5, 61554.0], [59.6, 61554.0], [59.7, 61554.0], [59.8, 61554.0], [59.9, 61554.0], [60.0, 61556.0], [60.1, 61556.0], [60.2, 61556.0], [60.3, 61556.0], [60.4, 61556.0], [60.5, 61556.0], [60.6, 61556.0], [60.7, 61556.0], [60.8, 61556.0], [60.9, 61556.0], [61.0, 61556.0], [61.1, 61556.0], [61.2, 61556.0], [61.3, 61556.0], [61.4, 61556.0], [61.5, 61556.0], [61.6, 61556.0], [61.7, 61556.0], [61.8, 61556.0], [61.9, 61556.0], [62.0, 61556.0], [62.1, 61556.0], [62.2, 61556.0], [62.3, 61556.0], [62.4, 61556.0], [62.5, 61556.0], [62.6, 61556.0], [62.7, 61556.0], [62.8, 61556.0], [62.9, 61556.0], [63.0, 61556.0], [63.1, 61556.0], [63.2, 61556.0], [63.3, 61556.0], [63.4, 61556.0], [63.5, 61556.0], [63.6, 61556.0], [63.7, 61556.0], [63.8, 61556.0], [63.9, 61556.0], [64.0, 61556.0], [64.1, 61556.0], [64.2, 61556.0], [64.3, 61556.0], [64.4, 61556.0], [64.5, 61556.0], [64.6, 61556.0], [64.7, 61556.0], [64.8, 61556.0], [64.9, 61556.0], [65.0, 61600.0], [65.1, 61600.0], [65.2, 61600.0], [65.3, 61600.0], [65.4, 61600.0], [65.5, 61600.0], [65.6, 61600.0], [65.7, 61600.0], [65.8, 61600.0], [65.9, 61600.0], [66.0, 61600.0], [66.1, 61600.0], [66.2, 61600.0], [66.3, 61600.0], [66.4, 61600.0], [66.5, 61600.0], [66.6, 61600.0], [66.7, 61600.0], [66.8, 61600.0], [66.9, 61600.0], [67.0, 61600.0], [67.1, 61600.0], [67.2, 61600.0], [67.3, 61600.0], [67.4, 61600.0], [67.5, 61600.0], [67.6, 61600.0], [67.7, 61600.0], [67.8, 61600.0], [67.9, 61600.0], [68.0, 61600.0], [68.1, 61600.0], [68.2, 61600.0], [68.3, 61600.0], [68.4, 61600.0], [68.5, 61600.0], [68.6, 61600.0], [68.7, 61600.0], [68.8, 61600.0], [68.9, 61600.0], [69.0, 61600.0], [69.1, 61600.0], [69.2, 61600.0], [69.3, 61600.0], [69.4, 61600.0], [69.5, 61600.0], [69.6, 61600.0], [69.7, 61600.0], [69.8, 61600.0], [69.9, 61600.0], [70.0, 61628.0], [70.1, 61628.0], [70.2, 61628.0], [70.3, 61628.0], [70.4, 61628.0], [70.5, 61628.0], [70.6, 61628.0], [70.7, 61628.0], [70.8, 61628.0], [70.9, 61628.0], [71.0, 61628.0], [71.1, 61628.0], [71.2, 61628.0], [71.3, 61628.0], [71.4, 61628.0], [71.5, 61628.0], [71.6, 61628.0], [71.7, 61628.0], [71.8, 61628.0], [71.9, 61628.0], [72.0, 61628.0], [72.1, 61628.0], [72.2, 61628.0], [72.3, 61628.0], [72.4, 61628.0], [72.5, 61628.0], [72.6, 61628.0], [72.7, 61628.0], [72.8, 61628.0], [72.9, 61628.0], [73.0, 61628.0], [73.1, 61628.0], [73.2, 61628.0], [73.3, 61628.0], [73.4, 61628.0], [73.5, 61628.0], [73.6, 61628.0], [73.7, 61628.0], [73.8, 61628.0], [73.9, 61628.0], [74.0, 61628.0], [74.1, 61628.0], [74.2, 61628.0], [74.3, 61628.0], [74.4, 61628.0], [74.5, 61628.0], [74.6, 61628.0], [74.7, 61628.0], [74.8, 61628.0], [74.9, 61628.0], [75.0, 61669.0], [75.1, 61669.0], [75.2, 61669.0], [75.3, 61669.0], [75.4, 61669.0], [75.5, 61669.0], [75.6, 61669.0], [75.7, 61669.0], [75.8, 61669.0], [75.9, 61669.0], [76.0, 61669.0], [76.1, 61669.0], [76.2, 61669.0], [76.3, 61669.0], [76.4, 61669.0], [76.5, 61669.0], [76.6, 61669.0], [76.7, 61669.0], [76.8, 61669.0], [76.9, 61669.0], [77.0, 61669.0], [77.1, 61669.0], [77.2, 61669.0], [77.3, 61669.0], [77.4, 61669.0], [77.5, 61669.0], [77.6, 61669.0], [77.7, 61669.0], [77.8, 61669.0], [77.9, 61669.0], [78.0, 61669.0], [78.1, 61669.0], [78.2, 61669.0], [78.3, 61669.0], [78.4, 61669.0], [78.5, 61669.0], [78.6, 61669.0], [78.7, 61669.0], [78.8, 61669.0], [78.9, 61669.0], [79.0, 61669.0], [79.1, 61669.0], [79.2, 61669.0], [79.3, 61669.0], [79.4, 61669.0], [79.5, 61669.0], [79.6, 61669.0], [79.7, 61669.0], [79.8, 61669.0], [79.9, 61669.0], [80.0, 61714.0], [80.1, 61714.0], [80.2, 61714.0], [80.3, 61714.0], [80.4, 61714.0], [80.5, 61714.0], [80.6, 61714.0], [80.7, 61714.0], [80.8, 61714.0], [80.9, 61714.0], [81.0, 61714.0], [81.1, 61714.0], [81.2, 61714.0], [81.3, 61714.0], [81.4, 61714.0], [81.5, 61714.0], [81.6, 61714.0], [81.7, 61714.0], [81.8, 61714.0], [81.9, 61714.0], [82.0, 61714.0], [82.1, 61714.0], [82.2, 61714.0], [82.3, 61714.0], [82.4, 61714.0], [82.5, 61714.0], [82.6, 61714.0], [82.7, 61714.0], [82.8, 61714.0], [82.9, 61714.0], [83.0, 61714.0], [83.1, 61714.0], [83.2, 61714.0], [83.3, 61714.0], [83.4, 61714.0], [83.5, 61714.0], [83.6, 61714.0], [83.7, 61714.0], [83.8, 61714.0], [83.9, 61714.0], [84.0, 61714.0], [84.1, 61714.0], [84.2, 61714.0], [84.3, 61714.0], [84.4, 61714.0], [84.5, 61714.0], [84.6, 61714.0], [84.7, 61714.0], [84.8, 61714.0], [84.9, 61714.0], [85.0, 61756.0], [85.1, 61756.0], [85.2, 61756.0], [85.3, 61756.0], [85.4, 61756.0], [85.5, 61756.0], [85.6, 61756.0], [85.7, 61756.0], [85.8, 61756.0], [85.9, 61756.0], [86.0, 61756.0], [86.1, 61756.0], [86.2, 61756.0], [86.3, 61756.0], [86.4, 61756.0], [86.5, 61756.0], [86.6, 61756.0], [86.7, 61756.0], [86.8, 61756.0], [86.9, 61756.0], [87.0, 61756.0], [87.1, 61756.0], [87.2, 61756.0], [87.3, 61756.0], [87.4, 61756.0], [87.5, 61756.0], [87.6, 61756.0], [87.7, 61756.0], [87.8, 61756.0], [87.9, 61756.0], [88.0, 61756.0], [88.1, 61756.0], [88.2, 61756.0], [88.3, 61756.0], [88.4, 61756.0], [88.5, 61756.0], [88.6, 61756.0], [88.7, 61756.0], [88.8, 61756.0], [88.9, 61756.0], [89.0, 61756.0], [89.1, 61756.0], [89.2, 61756.0], [89.3, 61756.0], [89.4, 61756.0], [89.5, 61756.0], [89.6, 61756.0], [89.7, 61756.0], [89.8, 61756.0], [89.9, 61756.0], [90.0, 61821.0], [90.1, 61821.0], [90.2, 61821.0], [90.3, 61821.0], [90.4, 61821.0], [90.5, 61821.0], [90.6, 61821.0], [90.7, 61821.0], [90.8, 61821.0], [90.9, 61821.0], [91.0, 61821.0], [91.1, 61821.0], [91.2, 61821.0], [91.3, 61821.0], [91.4, 61821.0], [91.5, 61821.0], [91.6, 61821.0], [91.7, 61821.0], [91.8, 61821.0], [91.9, 61821.0], [92.0, 61821.0], [92.1, 61821.0], [92.2, 61821.0], [92.3, 61821.0], [92.4, 61821.0], [92.5, 61821.0], [92.6, 61821.0], [92.7, 61821.0], [92.8, 61821.0], [92.9, 61821.0], [93.0, 61821.0], [93.1, 61821.0], [93.2, 61821.0], [93.3, 61821.0], [93.4, 61821.0], [93.5, 61821.0], [93.6, 61821.0], [93.7, 61821.0], [93.8, 61821.0], [93.9, 61821.0], [94.0, 61821.0], [94.1, 61821.0], [94.2, 61821.0], [94.3, 61821.0], [94.4, 61821.0], [94.5, 61821.0], [94.6, 61821.0], [94.7, 61821.0], [94.8, 61821.0], [94.9, 61821.0], [95.0, 61857.0], [95.1, 61857.0], [95.2, 61857.0], [95.3, 61857.0], [95.4, 61857.0], [95.5, 61857.0], [95.6, 61857.0], [95.7, 61857.0], [95.8, 61857.0], [95.9, 61857.0], [96.0, 61857.0], [96.1, 61857.0], [96.2, 61857.0], [96.3, 61857.0], [96.4, 61857.0], [96.5, 61857.0], [96.6, 61857.0], [96.7, 61857.0], [96.8, 61857.0], [96.9, 61857.0], [97.0, 61857.0], [97.1, 61857.0], [97.2, 61857.0], [97.3, 61857.0], [97.4, 61857.0], [97.5, 61857.0], [97.6, 61857.0], [97.7, 61857.0], [97.8, 61857.0], [97.9, 61857.0], [98.0, 61857.0], [98.1, 61857.0], [98.2, 61857.0], [98.3, 61857.0], [98.4, 61857.0], [98.5, 61857.0], [98.6, 61857.0], [98.7, 61857.0], [98.8, 61857.0], [98.9, 61857.0], [99.0, 61857.0], [99.1, 61857.0], [99.2, 61857.0], [99.3, 61857.0], [99.4, 61857.0], [99.5, 61857.0], [99.6, 61857.0], [99.7, 61857.0], [99.8, 61857.0], [99.9, 61857.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[0.0, 64137.0], [0.1, 64137.0], [0.2, 64137.0], [0.3, 64137.0], [0.4, 64137.0], [0.5, 64137.0], [0.6, 64137.0], [0.7, 64137.0], [0.8, 64137.0], [0.9, 64137.0], [1.0, 64137.0], [1.1, 64137.0], [1.2, 64137.0], [1.3, 64137.0], [1.4, 64137.0], [1.5, 64137.0], [1.6, 64137.0], [1.7, 64137.0], [1.8, 64137.0], [1.9, 64137.0], [2.0, 64137.0], [2.1, 64137.0], [2.2, 64137.0], [2.3, 64137.0], [2.4, 64137.0], [2.5, 64137.0], [2.6, 64137.0], [2.7, 64137.0], [2.8, 64137.0], [2.9, 64137.0], [3.0, 64137.0], [3.1, 64137.0], [3.2, 64137.0], [3.3, 64137.0], [3.4, 64137.0], [3.5, 64137.0], [3.6, 64137.0], [3.7, 64137.0], [3.8, 64137.0], [3.9, 64137.0], [4.0, 64137.0], [4.1, 64137.0], [4.2, 64137.0], [4.3, 64137.0], [4.4, 64137.0], [4.5, 64137.0], [4.6, 64137.0], [4.7, 64137.0], [4.8, 64137.0], [4.9, 64137.0], [5.0, 64137.0], [5.1, 64137.0], [5.2, 64137.0], [5.3, 64137.0], [5.4, 64137.0], [5.5, 64137.0], [5.6, 64137.0], [5.7, 64137.0], [5.8, 64137.0], [5.9, 64137.0], [6.0, 64137.0], [6.1, 64137.0], [6.2, 64137.0], [6.3, 64137.0], [6.4, 64137.0], [6.5, 64137.0], [6.6, 64137.0], [6.7, 64137.0], [6.8, 64137.0], [6.9, 64137.0], [7.0, 64137.0], [7.1, 64137.0], [7.2, 64137.0], [7.3, 64137.0], [7.4, 64137.0], [7.5, 64137.0], [7.6, 64137.0], [7.7, 64137.0], [7.8, 64137.0], [7.9, 64137.0], [8.0, 64137.0], [8.1, 64137.0], [8.2, 64137.0], [8.3, 64137.0], [8.4, 64137.0], [8.5, 64137.0], [8.6, 64137.0], [8.7, 64137.0], [8.8, 64137.0], [8.9, 64137.0], [9.0, 64137.0], [9.1, 64137.0], [9.2, 64137.0], [9.3, 64137.0], [9.4, 64137.0], [9.5, 64137.0], [9.6, 64137.0], [9.7, 64137.0], [9.8, 64137.0], [9.9, 64137.0], [10.0, 64159.0], [10.1, 64159.0], [10.2, 64159.0], [10.3, 64159.0], [10.4, 64159.0], [10.5, 64159.0], [10.6, 64159.0], [10.7, 64159.0], [10.8, 64159.0], [10.9, 64159.0], [11.0, 64159.0], [11.1, 64159.0], [11.2, 64159.0], [11.3, 64159.0], [11.4, 64159.0], [11.5, 64159.0], [11.6, 64159.0], [11.7, 64159.0], [11.8, 64159.0], [11.9, 64159.0], [12.0, 64159.0], [12.1, 64159.0], [12.2, 64159.0], [12.3, 64159.0], [12.4, 64159.0], [12.5, 64159.0], [12.6, 64159.0], [12.7, 64159.0], [12.8, 64159.0], [12.9, 64159.0], [13.0, 64159.0], [13.1, 64159.0], [13.2, 64159.0], [13.3, 64159.0], [13.4, 64159.0], [13.5, 64159.0], [13.6, 64159.0], [13.7, 64159.0], [13.8, 64159.0], [13.9, 64159.0], [14.0, 64159.0], [14.1, 64159.0], [14.2, 64159.0], [14.3, 64159.0], [14.4, 64159.0], [14.5, 64159.0], [14.6, 64159.0], [14.7, 64159.0], [14.8, 64159.0], [14.9, 64159.0], [15.0, 64159.0], [15.1, 64159.0], [15.2, 64159.0], [15.3, 64159.0], [15.4, 64159.0], [15.5, 64159.0], [15.6, 64159.0], [15.7, 64159.0], [15.8, 64159.0], [15.9, 64159.0], [16.0, 64159.0], [16.1, 64159.0], [16.2, 64159.0], [16.3, 64159.0], [16.4, 64159.0], [16.5, 64159.0], [16.6, 64159.0], [16.7, 64159.0], [16.8, 64159.0], [16.9, 64159.0], [17.0, 64159.0], [17.1, 64159.0], [17.2, 64159.0], [17.3, 64159.0], [17.4, 64159.0], [17.5, 64159.0], [17.6, 64159.0], [17.7, 64159.0], [17.8, 64159.0], [17.9, 64159.0], [18.0, 64159.0], [18.1, 64159.0], [18.2, 64159.0], [18.3, 64159.0], [18.4, 64159.0], [18.5, 64159.0], [18.6, 64159.0], [18.7, 64159.0], [18.8, 64159.0], [18.9, 64159.0], [19.0, 64159.0], [19.1, 64159.0], [19.2, 64159.0], [19.3, 64159.0], [19.4, 64159.0], [19.5, 64159.0], [19.6, 64159.0], [19.7, 64159.0], [19.8, 64159.0], [19.9, 64159.0], [20.0, 64160.0], [20.1, 64160.0], [20.2, 64160.0], [20.3, 64160.0], [20.4, 64160.0], [20.5, 64160.0], [20.6, 64160.0], [20.7, 64160.0], [20.8, 64160.0], [20.9, 64160.0], [21.0, 64160.0], [21.1, 64160.0], [21.2, 64160.0], [21.3, 64160.0], [21.4, 64160.0], [21.5, 64160.0], [21.6, 64160.0], [21.7, 64160.0], [21.8, 64160.0], [21.9, 64160.0], [22.0, 64160.0], [22.1, 64160.0], [22.2, 64160.0], [22.3, 64160.0], [22.4, 64160.0], [22.5, 64160.0], [22.6, 64160.0], [22.7, 64160.0], [22.8, 64160.0], [22.9, 64160.0], [23.0, 64160.0], [23.1, 64160.0], [23.2, 64160.0], [23.3, 64160.0], [23.4, 64160.0], [23.5, 64160.0], [23.6, 64160.0], [23.7, 64160.0], [23.8, 64160.0], [23.9, 64160.0], [24.0, 64160.0], [24.1, 64160.0], [24.2, 64160.0], [24.3, 64160.0], [24.4, 64160.0], [24.5, 64160.0], [24.6, 64160.0], [24.7, 64160.0], [24.8, 64160.0], [24.9, 64160.0], [25.0, 64160.0], [25.1, 64160.0], [25.2, 64160.0], [25.3, 64160.0], [25.4, 64160.0], [25.5, 64160.0], [25.6, 64160.0], [25.7, 64160.0], [25.8, 64160.0], [25.9, 64160.0], [26.0, 64160.0], [26.1, 64160.0], [26.2, 64160.0], [26.3, 64160.0], [26.4, 64160.0], [26.5, 64160.0], [26.6, 64160.0], [26.7, 64160.0], [26.8, 64160.0], [26.9, 64160.0], [27.0, 64160.0], [27.1, 64160.0], [27.2, 64160.0], [27.3, 64160.0], [27.4, 64160.0], [27.5, 64160.0], [27.6, 64160.0], [27.7, 64160.0], [27.8, 64160.0], [27.9, 64160.0], [28.0, 64160.0], [28.1, 64160.0], [28.2, 64160.0], [28.3, 64160.0], [28.4, 64160.0], [28.5, 64160.0], [28.6, 64160.0], [28.7, 64160.0], [28.8, 64160.0], [28.9, 64160.0], [29.0, 64160.0], [29.1, 64160.0], [29.2, 64160.0], [29.3, 64160.0], [29.4, 64160.0], [29.5, 64160.0], [29.6, 64160.0], [29.7, 64160.0], [29.8, 64160.0], [29.9, 64160.0], [30.0, 64211.0], [30.1, 64211.0], [30.2, 64211.0], [30.3, 64211.0], [30.4, 64211.0], [30.5, 64211.0], [30.6, 64211.0], [30.7, 64211.0], [30.8, 64211.0], [30.9, 64211.0], [31.0, 64211.0], [31.1, 64211.0], [31.2, 64211.0], [31.3, 64211.0], [31.4, 64211.0], [31.5, 64211.0], [31.6, 64211.0], [31.7, 64211.0], [31.8, 64211.0], [31.9, 64211.0], [32.0, 64211.0], [32.1, 64211.0], [32.2, 64211.0], [32.3, 64211.0], [32.4, 64211.0], [32.5, 64211.0], [32.6, 64211.0], [32.7, 64211.0], [32.8, 64211.0], [32.9, 64211.0], [33.0, 64211.0], [33.1, 64211.0], [33.2, 64211.0], [33.3, 64211.0], [33.4, 64211.0], [33.5, 64211.0], [33.6, 64211.0], [33.7, 64211.0], [33.8, 64211.0], [33.9, 64211.0], [34.0, 64211.0], [34.1, 64211.0], [34.2, 64211.0], [34.3, 64211.0], [34.4, 64211.0], [34.5, 64211.0], [34.6, 64211.0], [34.7, 64211.0], [34.8, 64211.0], [34.9, 64211.0], [35.0, 64211.0], [35.1, 64211.0], [35.2, 64211.0], [35.3, 64211.0], [35.4, 64211.0], [35.5, 64211.0], [35.6, 64211.0], [35.7, 64211.0], [35.8, 64211.0], [35.9, 64211.0], [36.0, 64211.0], [36.1, 64211.0], [36.2, 64211.0], [36.3, 64211.0], [36.4, 64211.0], [36.5, 64211.0], [36.6, 64211.0], [36.7, 64211.0], [36.8, 64211.0], [36.9, 64211.0], [37.0, 64211.0], [37.1, 64211.0], [37.2, 64211.0], [37.3, 64211.0], [37.4, 64211.0], [37.5, 64211.0], [37.6, 64211.0], [37.7, 64211.0], [37.8, 64211.0], [37.9, 64211.0], [38.0, 64211.0], [38.1, 64211.0], [38.2, 64211.0], [38.3, 64211.0], [38.4, 64211.0], [38.5, 64211.0], [38.6, 64211.0], [38.7, 64211.0], [38.8, 64211.0], [38.9, 64211.0], [39.0, 64211.0], [39.1, 64211.0], [39.2, 64211.0], [39.3, 64211.0], [39.4, 64211.0], [39.5, 64211.0], [39.6, 64211.0], [39.7, 64211.0], [39.8, 64211.0], [39.9, 64211.0], [40.0, 64329.0], [40.1, 64329.0], [40.2, 64329.0], [40.3, 64329.0], [40.4, 64329.0], [40.5, 64329.0], [40.6, 64329.0], [40.7, 64329.0], [40.8, 64329.0], [40.9, 64329.0], [41.0, 64329.0], [41.1, 64329.0], [41.2, 64329.0], [41.3, 64329.0], [41.4, 64329.0], [41.5, 64329.0], [41.6, 64329.0], [41.7, 64329.0], [41.8, 64329.0], [41.9, 64329.0], [42.0, 64329.0], [42.1, 64329.0], [42.2, 64329.0], [42.3, 64329.0], [42.4, 64329.0], [42.5, 64329.0], [42.6, 64329.0], [42.7, 64329.0], [42.8, 64329.0], [42.9, 64329.0], [43.0, 64329.0], [43.1, 64329.0], [43.2, 64329.0], [43.3, 64329.0], [43.4, 64329.0], [43.5, 64329.0], [43.6, 64329.0], [43.7, 64329.0], [43.8, 64329.0], [43.9, 64329.0], [44.0, 64329.0], [44.1, 64329.0], [44.2, 64329.0], [44.3, 64329.0], [44.4, 64329.0], [44.5, 64329.0], [44.6, 64329.0], [44.7, 64329.0], [44.8, 64329.0], [44.9, 64329.0], [45.0, 64329.0], [45.1, 64329.0], [45.2, 64329.0], [45.3, 64329.0], [45.4, 64329.0], [45.5, 64329.0], [45.6, 64329.0], [45.7, 64329.0], [45.8, 64329.0], [45.9, 64329.0], [46.0, 64329.0], [46.1, 64329.0], [46.2, 64329.0], [46.3, 64329.0], [46.4, 64329.0], [46.5, 64329.0], [46.6, 64329.0], [46.7, 64329.0], [46.8, 64329.0], [46.9, 64329.0], [47.0, 64329.0], [47.1, 64329.0], [47.2, 64329.0], [47.3, 64329.0], [47.4, 64329.0], [47.5, 64329.0], [47.6, 64329.0], [47.7, 64329.0], [47.8, 64329.0], [47.9, 64329.0], [48.0, 64329.0], [48.1, 64329.0], [48.2, 64329.0], [48.3, 64329.0], [48.4, 64329.0], [48.5, 64329.0], [48.6, 64329.0], [48.7, 64329.0], [48.8, 64329.0], [48.9, 64329.0], [49.0, 64329.0], [49.1, 64329.0], [49.2, 64329.0], [49.3, 64329.0], [49.4, 64329.0], [49.5, 64329.0], [49.6, 64329.0], [49.7, 64329.0], [49.8, 64329.0], [49.9, 64329.0], [50.0, 64412.0], [50.1, 64412.0], [50.2, 64412.0], [50.3, 64412.0], [50.4, 64412.0], [50.5, 64412.0], [50.6, 64412.0], [50.7, 64412.0], [50.8, 64412.0], [50.9, 64412.0], [51.0, 64412.0], [51.1, 64412.0], [51.2, 64412.0], [51.3, 64412.0], [51.4, 64412.0], [51.5, 64412.0], [51.6, 64412.0], [51.7, 64412.0], [51.8, 64412.0], [51.9, 64412.0], [52.0, 64412.0], [52.1, 64412.0], [52.2, 64412.0], [52.3, 64412.0], [52.4, 64412.0], [52.5, 64412.0], [52.6, 64412.0], [52.7, 64412.0], [52.8, 64412.0], [52.9, 64412.0], [53.0, 64412.0], [53.1, 64412.0], [53.2, 64412.0], [53.3, 64412.0], [53.4, 64412.0], [53.5, 64412.0], [53.6, 64412.0], [53.7, 64412.0], [53.8, 64412.0], [53.9, 64412.0], [54.0, 64412.0], [54.1, 64412.0], [54.2, 64412.0], [54.3, 64412.0], [54.4, 64412.0], [54.5, 64412.0], [54.6, 64412.0], [54.7, 64412.0], [54.8, 64412.0], [54.9, 64412.0], [55.0, 64412.0], [55.1, 64412.0], [55.2, 64412.0], [55.3, 64412.0], [55.4, 64412.0], [55.5, 64412.0], [55.6, 64412.0], [55.7, 64412.0], [55.8, 64412.0], [55.9, 64412.0], [56.0, 64412.0], [56.1, 64412.0], [56.2, 64412.0], [56.3, 64412.0], [56.4, 64412.0], [56.5, 64412.0], [56.6, 64412.0], [56.7, 64412.0], [56.8, 64412.0], [56.9, 64412.0], [57.0, 64412.0], [57.1, 64412.0], [57.2, 64412.0], [57.3, 64412.0], [57.4, 64412.0], [57.5, 64412.0], [57.6, 64412.0], [57.7, 64412.0], [57.8, 64412.0], [57.9, 64412.0], [58.0, 64412.0], [58.1, 64412.0], [58.2, 64412.0], [58.3, 64412.0], [58.4, 64412.0], [58.5, 64412.0], [58.6, 64412.0], [58.7, 64412.0], [58.8, 64412.0], [58.9, 64412.0], [59.0, 64412.0], [59.1, 64412.0], [59.2, 64412.0], [59.3, 64412.0], [59.4, 64412.0], [59.5, 64412.0], [59.6, 64412.0], [59.7, 64412.0], [59.8, 64412.0], [59.9, 64412.0], [60.0, 64527.0], [60.1, 64527.0], [60.2, 64527.0], [60.3, 64527.0], [60.4, 64527.0], [60.5, 64527.0], [60.6, 64527.0], [60.7, 64527.0], [60.8, 64527.0], [60.9, 64527.0], [61.0, 64527.0], [61.1, 64527.0], [61.2, 64527.0], [61.3, 64527.0], [61.4, 64527.0], [61.5, 64527.0], [61.6, 64527.0], [61.7, 64527.0], [61.8, 64527.0], [61.9, 64527.0], [62.0, 64527.0], [62.1, 64527.0], [62.2, 64527.0], [62.3, 64527.0], [62.4, 64527.0], [62.5, 64527.0], [62.6, 64527.0], [62.7, 64527.0], [62.8, 64527.0], [62.9, 64527.0], [63.0, 64527.0], [63.1, 64527.0], [63.2, 64527.0], [63.3, 64527.0], [63.4, 64527.0], [63.5, 64527.0], [63.6, 64527.0], [63.7, 64527.0], [63.8, 64527.0], [63.9, 64527.0], [64.0, 64527.0], [64.1, 64527.0], [64.2, 64527.0], [64.3, 64527.0], [64.4, 64527.0], [64.5, 64527.0], [64.6, 64527.0], [64.7, 64527.0], [64.8, 64527.0], [64.9, 64527.0], [65.0, 64527.0], [65.1, 64527.0], [65.2, 64527.0], [65.3, 64527.0], [65.4, 64527.0], [65.5, 64527.0], [65.6, 64527.0], [65.7, 64527.0], [65.8, 64527.0], [65.9, 64527.0], [66.0, 64527.0], [66.1, 64527.0], [66.2, 64527.0], [66.3, 64527.0], [66.4, 64527.0], [66.5, 64527.0], [66.6, 64527.0], [66.7, 64527.0], [66.8, 64527.0], [66.9, 64527.0], [67.0, 64527.0], [67.1, 64527.0], [67.2, 64527.0], [67.3, 64527.0], [67.4, 64527.0], [67.5, 64527.0], [67.6, 64527.0], [67.7, 64527.0], [67.8, 64527.0], [67.9, 64527.0], [68.0, 64527.0], [68.1, 64527.0], [68.2, 64527.0], [68.3, 64527.0], [68.4, 64527.0], [68.5, 64527.0], [68.6, 64527.0], [68.7, 64527.0], [68.8, 64527.0], [68.9, 64527.0], [69.0, 64527.0], [69.1, 64527.0], [69.2, 64527.0], [69.3, 64527.0], [69.4, 64527.0], [69.5, 64527.0], [69.6, 64527.0], [69.7, 64527.0], [69.8, 64527.0], [69.9, 64527.0], [70.0, 64611.0], [70.1, 64611.0], [70.2, 64611.0], [70.3, 64611.0], [70.4, 64611.0], [70.5, 64611.0], [70.6, 64611.0], [70.7, 64611.0], [70.8, 64611.0], [70.9, 64611.0], [71.0, 64611.0], [71.1, 64611.0], [71.2, 64611.0], [71.3, 64611.0], [71.4, 64611.0], [71.5, 64611.0], [71.6, 64611.0], [71.7, 64611.0], [71.8, 64611.0], [71.9, 64611.0], [72.0, 64611.0], [72.1, 64611.0], [72.2, 64611.0], [72.3, 64611.0], [72.4, 64611.0], [72.5, 64611.0], [72.6, 64611.0], [72.7, 64611.0], [72.8, 64611.0], [72.9, 64611.0], [73.0, 64611.0], [73.1, 64611.0], [73.2, 64611.0], [73.3, 64611.0], [73.4, 64611.0], [73.5, 64611.0], [73.6, 64611.0], [73.7, 64611.0], [73.8, 64611.0], [73.9, 64611.0], [74.0, 64611.0], [74.1, 64611.0], [74.2, 64611.0], [74.3, 64611.0], [74.4, 64611.0], [74.5, 64611.0], [74.6, 64611.0], [74.7, 64611.0], [74.8, 64611.0], [74.9, 64611.0], [75.0, 64611.0], [75.1, 64611.0], [75.2, 64611.0], [75.3, 64611.0], [75.4, 64611.0], [75.5, 64611.0], [75.6, 64611.0], [75.7, 64611.0], [75.8, 64611.0], [75.9, 64611.0], [76.0, 64611.0], [76.1, 64611.0], [76.2, 64611.0], [76.3, 64611.0], [76.4, 64611.0], [76.5, 64611.0], [76.6, 64611.0], [76.7, 64611.0], [76.8, 64611.0], [76.9, 64611.0], [77.0, 64611.0], [77.1, 64611.0], [77.2, 64611.0], [77.3, 64611.0], [77.4, 64611.0], [77.5, 64611.0], [77.6, 64611.0], [77.7, 64611.0], [77.8, 64611.0], [77.9, 64611.0], [78.0, 64611.0], [78.1, 64611.0], [78.2, 64611.0], [78.3, 64611.0], [78.4, 64611.0], [78.5, 64611.0], [78.6, 64611.0], [78.7, 64611.0], [78.8, 64611.0], [78.9, 64611.0], [79.0, 64611.0], [79.1, 64611.0], [79.2, 64611.0], [79.3, 64611.0], [79.4, 64611.0], [79.5, 64611.0], [79.6, 64611.0], [79.7, 64611.0], [79.8, 64611.0], [79.9, 64611.0], [80.0, 64729.0], [80.1, 64729.0], [80.2, 64729.0], [80.3, 64729.0], [80.4, 64729.0], [80.5, 64729.0], [80.6, 64729.0], [80.7, 64729.0], [80.8, 64729.0], [80.9, 64729.0], [81.0, 64729.0], [81.1, 64729.0], [81.2, 64729.0], [81.3, 64729.0], [81.4, 64729.0], [81.5, 64729.0], [81.6, 64729.0], [81.7, 64729.0], [81.8, 64729.0], [81.9, 64729.0], [82.0, 64729.0], [82.1, 64729.0], [82.2, 64729.0], [82.3, 64729.0], [82.4, 64729.0], [82.5, 64729.0], [82.6, 64729.0], [82.7, 64729.0], [82.8, 64729.0], [82.9, 64729.0], [83.0, 64729.0], [83.1, 64729.0], [83.2, 64729.0], [83.3, 64729.0], [83.4, 64729.0], [83.5, 64729.0], [83.6, 64729.0], [83.7, 64729.0], [83.8, 64729.0], [83.9, 64729.0], [84.0, 64729.0], [84.1, 64729.0], [84.2, 64729.0], [84.3, 64729.0], [84.4, 64729.0], [84.5, 64729.0], [84.6, 64729.0], [84.7, 64729.0], [84.8, 64729.0], [84.9, 64729.0], [85.0, 64729.0], [85.1, 64729.0], [85.2, 64729.0], [85.3, 64729.0], [85.4, 64729.0], [85.5, 64729.0], [85.6, 64729.0], [85.7, 64729.0], [85.8, 64729.0], [85.9, 64729.0], [86.0, 64729.0], [86.1, 64729.0], [86.2, 64729.0], [86.3, 64729.0], [86.4, 64729.0], [86.5, 64729.0], [86.6, 64729.0], [86.7, 64729.0], [86.8, 64729.0], [86.9, 64729.0], [87.0, 64729.0], [87.1, 64729.0], [87.2, 64729.0], [87.3, 64729.0], [87.4, 64729.0], [87.5, 64729.0], [87.6, 64729.0], [87.7, 64729.0], [87.8, 64729.0], [87.9, 64729.0], [88.0, 64729.0], [88.1, 64729.0], [88.2, 64729.0], [88.3, 64729.0], [88.4, 64729.0], [88.5, 64729.0], [88.6, 64729.0], [88.7, 64729.0], [88.8, 64729.0], [88.9, 64729.0], [89.0, 64729.0], [89.1, 64729.0], [89.2, 64729.0], [89.3, 64729.0], [89.4, 64729.0], [89.5, 64729.0], [89.6, 64729.0], [89.7, 64729.0], [89.8, 64729.0], [89.9, 64729.0], [90.0, 64807.0], [90.1, 64807.0], [90.2, 64807.0], [90.3, 64807.0], [90.4, 64807.0], [90.5, 64807.0], [90.6, 64807.0], [90.7, 64807.0], [90.8, 64807.0], [90.9, 64807.0], [91.0, 64807.0], [91.1, 64807.0], [91.2, 64807.0], [91.3, 64807.0], [91.4, 64807.0], [91.5, 64807.0], [91.6, 64807.0], [91.7, 64807.0], [91.8, 64807.0], [91.9, 64807.0], [92.0, 64807.0], [92.1, 64807.0], [92.2, 64807.0], [92.3, 64807.0], [92.4, 64807.0], [92.5, 64807.0], [92.6, 64807.0], [92.7, 64807.0], [92.8, 64807.0], [92.9, 64807.0], [93.0, 64807.0], [93.1, 64807.0], [93.2, 64807.0], [93.3, 64807.0], [93.4, 64807.0], [93.5, 64807.0], [93.6, 64807.0], [93.7, 64807.0], [93.8, 64807.0], [93.9, 64807.0], [94.0, 64807.0], [94.1, 64807.0], [94.2, 64807.0], [94.3, 64807.0], [94.4, 64807.0], [94.5, 64807.0], [94.6, 64807.0], [94.7, 64807.0], [94.8, 64807.0], [94.9, 64807.0], [95.0, 64807.0], [95.1, 64807.0], [95.2, 64807.0], [95.3, 64807.0], [95.4, 64807.0], [95.5, 64807.0], [95.6, 64807.0], [95.7, 64807.0], [95.8, 64807.0], [95.9, 64807.0], [96.0, 64807.0], [96.1, 64807.0], [96.2, 64807.0], [96.3, 64807.0], [96.4, 64807.0], [96.5, 64807.0], [96.6, 64807.0], [96.7, 64807.0], [96.8, 64807.0], [96.9, 64807.0], [97.0, 64807.0], [97.1, 64807.0], [97.2, 64807.0], [97.3, 64807.0], [97.4, 64807.0], [97.5, 64807.0], [97.6, 64807.0], [97.7, 64807.0], [97.8, 64807.0], [97.9, 64807.0], [98.0, 64807.0], [98.1, 64807.0], [98.2, 64807.0], [98.3, 64807.0], [98.4, 64807.0], [98.5, 64807.0], [98.6, 64807.0], [98.7, 64807.0], [98.8, 64807.0], [98.9, 64807.0], [99.0, 64807.0], [99.1, 64807.0], [99.2, 64807.0], [99.3, 64807.0], [99.4, 64807.0], [99.5, 64807.0], [99.6, 64807.0], [99.7, 64807.0], [99.8, 64807.0], [99.9, 64807.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[0.0, 60919.0], [0.1, 60919.0], [0.2, 60919.0], [0.3, 60919.0], [0.4, 60927.0], [0.5, 60927.0], [0.6, 60927.0], [0.7, 60930.0], [0.8, 60937.0], [0.9, 60937.0], [1.0, 60938.0], [1.1, 60938.0], [1.2, 60941.0], [1.3, 60941.0], [1.4, 60942.0], [1.5, 60942.0], [1.6, 60943.0], [1.7, 60943.0], [1.8, 60946.0], [1.9, 60946.0], [2.0, 60950.0], [2.1, 60950.0], [2.2, 60950.0], [2.3, 60950.0], [2.4, 60956.0], [2.5, 60956.0], [2.6, 60958.0], [2.7, 60958.0], [2.8, 60958.0], [2.9, 60959.0], [3.0, 60959.0], [3.1, 60964.0], [3.2, 60964.0], [3.3, 60967.0], [3.4, 60967.0], [3.5, 60967.0], [3.6, 60967.0], [3.7, 60973.0], [3.8, 60973.0], [3.9, 60973.0], [4.0, 60973.0], [4.1, 60975.0], [4.2, 60975.0], [4.3, 60979.0], [4.4, 60979.0], [4.5, 60980.0], [4.6, 60980.0], [4.7, 60982.0], [4.8, 60982.0], [4.9, 60984.0], [5.0, 60984.0], [5.1, 60987.0], [5.2, 60987.0], [5.3, 60987.0], [5.4, 60987.0], [5.5, 60988.0], [5.6, 60988.0], [5.7, 60997.0], [5.8, 60997.0], [5.9, 60998.0], [6.0, 60998.0], [6.1, 61000.0], [6.2, 61000.0], [6.3, 61001.0], [6.4, 61001.0], [6.5, 61003.0], [6.6, 61003.0], [6.7, 61005.0], [6.8, 61005.0], [6.9, 61007.0], [7.0, 61007.0], [7.1, 61007.0], [7.2, 61007.0], [7.3, 61010.0], [7.4, 61010.0], [7.5, 61018.0], [7.6, 61018.0], [7.7, 61020.0], [7.8, 61020.0], [7.9, 61020.0], [8.0, 61020.0], [8.1, 61020.0], [8.2, 61020.0], [8.3, 61026.0], [8.4, 61026.0], [8.5, 61033.0], [8.6, 61033.0], [8.7, 61033.0], [8.8, 61033.0], [8.9, 61033.0], [9.0, 61033.0], [9.1, 61034.0], [9.2, 61034.0], [9.3, 61036.0], [9.4, 61036.0], [9.5, 61037.0], [9.6, 61037.0], [9.7, 61037.0], [9.8, 61037.0], [9.9, 61039.0], [10.0, 61039.0], [10.1, 61040.0], [10.2, 61040.0], [10.3, 61046.0], [10.4, 61047.0], [10.5, 61047.0], [10.6, 61059.0], [10.7, 61059.0], [10.8, 61060.0], [10.9, 61060.0], [11.0, 61061.0], [11.1, 61061.0], [11.2, 61061.0], [11.3, 61061.0], [11.4, 61063.0], [11.5, 61063.0], [11.6, 61064.0], [11.7, 61064.0], [11.8, 61065.0], [11.9, 61065.0], [12.0, 61065.0], [12.1, 61065.0], [12.2, 61065.0], [12.3, 61065.0], [12.4, 61073.0], [12.5, 61073.0], [12.6, 61078.0], [12.7, 61078.0], [12.8, 61079.0], [12.9, 61079.0], [13.0, 61079.0], [13.1, 61079.0], [13.2, 61082.0], [13.3, 61082.0], [13.4, 61084.0], [13.5, 61084.0], [13.6, 61086.0], [13.7, 61086.0], [13.8, 61088.0], [13.9, 61088.0], [14.0, 61091.0], [14.1, 61091.0], [14.2, 61091.0], [14.3, 61091.0], [14.4, 61097.0], [14.5, 61097.0], [14.6, 61097.0], [14.7, 61097.0], [14.8, 61097.0], [14.9, 61097.0], [15.0, 61098.0], [15.1, 61098.0], [15.2, 61098.0], [15.3, 61098.0], [15.4, 61109.0], [15.5, 61109.0], [15.6, 61110.0], [15.7, 61110.0], [15.8, 61111.0], [15.9, 61111.0], [16.0, 61112.0], [16.1, 61112.0], [16.2, 61119.0], [16.3, 61119.0], [16.4, 61119.0], [16.5, 61119.0], [16.6, 61120.0], [16.7, 61120.0], [16.8, 61124.0], [16.9, 61124.0], [17.0, 61125.0], [17.1, 61125.0], [17.2, 61131.0], [17.3, 61131.0], [17.4, 61132.0], [17.5, 61132.0], [17.6, 61132.0], [17.7, 61132.0], [17.8, 61134.0], [17.9, 61134.0], [18.0, 61135.0], [18.1, 61135.0], [18.2, 61136.0], [18.3, 61136.0], [18.4, 61139.0], [18.5, 61139.0], [18.6, 61140.0], [18.7, 61140.0], [18.8, 61141.0], [18.9, 61141.0], [19.0, 61143.0], [19.1, 61143.0], [19.2, 61144.0], [19.3, 61144.0], [19.4, 61146.0], [19.5, 61146.0], [19.6, 61147.0], [19.7, 61147.0], [19.8, 61147.0], [19.9, 61147.0], [20.0, 61155.0], [20.1, 61155.0], [20.2, 61159.0], [20.3, 61159.0], [20.4, 61159.0], [20.5, 61159.0], [20.6, 61160.0], [20.7, 61160.0], [20.8, 61163.0], [20.9, 61163.0], [21.0, 61166.0], [21.1, 61166.0], [21.2, 61168.0], [21.3, 61168.0], [21.4, 61170.0], [21.5, 61170.0], [21.6, 61171.0], [21.7, 61171.0], [21.8, 61172.0], [21.9, 61172.0], [22.0, 61176.0], [22.1, 61176.0], [22.2, 61181.0], [22.3, 61181.0], [22.4, 61181.0], [22.5, 61181.0], [22.6, 61182.0], [22.7, 61182.0], [22.8, 61182.0], [22.9, 61182.0], [23.0, 61183.0], [23.1, 61183.0], [23.2, 61187.0], [23.3, 61187.0], [23.4, 61188.0], [23.5, 61188.0], [23.6, 61191.0], [23.7, 61191.0], [23.8, 61193.0], [23.9, 61193.0], [24.0, 61196.0], [24.1, 61196.0], [24.2, 61198.0], [24.3, 61198.0], [24.4, 61199.0], [24.5, 61199.0], [24.6, 61200.0], [24.7, 61200.0], [24.8, 61202.0], [24.9, 61202.0], [25.0, 61203.0], [25.1, 61203.0], [25.2, 61203.0], [25.3, 61203.0], [25.4, 61205.0], [25.5, 61205.0], [25.6, 61206.0], [25.7, 61206.0], [25.8, 61211.0], [25.9, 61211.0], [26.0, 61216.0], [26.1, 61216.0], [26.2, 61218.0], [26.3, 61218.0], [26.4, 61220.0], [26.5, 61220.0], [26.6, 61221.0], [26.7, 61221.0], [26.8, 61223.0], [26.9, 61223.0], [27.0, 61223.0], [27.1, 61223.0], [27.2, 61225.0], [27.3, 61225.0], [27.4, 61225.0], [27.5, 61225.0], [27.6, 61226.0], [27.7, 61226.0], [27.8, 61227.0], [27.9, 61227.0], [28.0, 61228.0], [28.1, 61228.0], [28.2, 61233.0], [28.3, 61233.0], [28.4, 61237.0], [28.5, 61237.0], [28.6, 61238.0], [28.7, 61238.0], [28.8, 61241.0], [28.9, 61241.0], [29.0, 61241.0], [29.1, 61241.0], [29.2, 61244.0], [29.3, 61244.0], [29.4, 61246.0], [29.5, 61246.0], [29.6, 61246.0], [29.7, 61246.0], [29.8, 61255.0], [29.9, 61255.0], [30.0, 61256.0], [30.1, 61256.0], [30.2, 61259.0], [30.3, 61259.0], [30.4, 61259.0], [30.5, 61259.0], [30.6, 61262.0], [30.7, 61262.0], [30.8, 61263.0], [30.9, 61263.0], [31.0, 61265.0], [31.1, 61265.0], [31.2, 61266.0], [31.3, 61266.0], [31.4, 61268.0], [31.5, 61268.0], [31.6, 61272.0], [31.7, 61272.0], [31.8, 61273.0], [31.9, 61273.0], [32.0, 61273.0], [32.1, 61273.0], [32.2, 61275.0], [32.3, 61275.0], [32.4, 61276.0], [32.5, 61276.0], [32.6, 61279.0], [32.7, 61279.0], [32.8, 61279.0], [32.9, 61279.0], [33.0, 61279.0], [33.1, 61279.0], [33.2, 61282.0], [33.3, 61282.0], [33.4, 61283.0], [33.5, 61283.0], [33.6, 61289.0], [33.7, 61289.0], [33.8, 61289.0], [33.9, 61289.0], [34.0, 61290.0], [34.1, 61290.0], [34.2, 61299.0], [34.3, 61299.0], [34.4, 61300.0], [34.5, 61300.0], [34.6, 61300.0], [34.7, 61300.0], [34.8, 61300.0], [34.9, 61300.0], [35.0, 61301.0], [35.1, 61301.0], [35.2, 61301.0], [35.3, 61301.0], [35.4, 61302.0], [35.5, 61302.0], [35.6, 61304.0], [35.7, 61304.0], [35.8, 61305.0], [35.9, 61305.0], [36.0, 61309.0], [36.1, 61309.0], [36.2, 61319.0], [36.3, 61319.0], [36.4, 61319.0], [36.5, 61319.0], [36.6, 61321.0], [36.7, 61321.0], [36.8, 61324.0], [36.9, 61324.0], [37.0, 61325.0], [37.1, 61325.0], [37.2, 61325.0], [37.3, 61325.0], [37.4, 61326.0], [37.5, 61326.0], [37.6, 61328.0], [37.7, 61328.0], [37.8, 61329.0], [37.9, 61329.0], [38.0, 61329.0], [38.1, 61329.0], [38.2, 61332.0], [38.3, 61332.0], [38.4, 61333.0], [38.5, 61333.0], [38.6, 61337.0], [38.7, 61337.0], [38.8, 61338.0], [38.9, 61338.0], [39.0, 61344.0], [39.1, 61344.0], [39.2, 61344.0], [39.3, 61344.0], [39.4, 61345.0], [39.5, 61345.0], [39.6, 61349.0], [39.7, 61349.0], [39.8, 61350.0], [39.9, 61350.0], [40.0, 61354.0], [40.1, 61354.0], [40.2, 61355.0], [40.3, 61355.0], [40.4, 61357.0], [40.5, 61357.0], [40.6, 61358.0], [40.7, 61358.0], [40.8, 61358.0], [40.9, 61360.0], [41.0, 61360.0], [41.1, 61362.0], [41.2, 61362.0], [41.3, 61363.0], [41.4, 61363.0], [41.5, 61364.0], [41.6, 61364.0], [41.7, 61366.0], [41.8, 61366.0], [41.9, 61371.0], [42.0, 61371.0], [42.1, 61379.0], [42.2, 61379.0], [42.3, 61380.0], [42.4, 61380.0], [42.5, 61382.0], [42.6, 61382.0], [42.7, 61384.0], [42.8, 61384.0], [42.9, 61384.0], [43.0, 61384.0], [43.1, 61386.0], [43.2, 61386.0], [43.3, 61386.0], [43.4, 61386.0], [43.5, 61386.0], [43.6, 61386.0], [43.7, 61389.0], [43.8, 61389.0], [43.9, 61390.0], [44.0, 61390.0], [44.1, 61392.0], [44.2, 61392.0], [44.3, 61394.0], [44.4, 61394.0], [44.5, 61396.0], [44.6, 61396.0], [44.7, 61399.0], [44.8, 61399.0], [44.9, 61399.0], [45.0, 61399.0], [45.1, 61401.0], [45.2, 61401.0], [45.3, 61403.0], [45.4, 61403.0], [45.5, 61406.0], [45.6, 61406.0], [45.7, 61406.0], [45.8, 61406.0], [45.9, 61406.0], [46.0, 61406.0], [46.1, 61406.0], [46.2, 61406.0], [46.3, 61416.0], [46.4, 61416.0], [46.5, 61420.0], [46.6, 61420.0], [46.7, 61420.0], [46.8, 61420.0], [46.9, 61421.0], [47.0, 61421.0], [47.1, 61425.0], [47.2, 61425.0], [47.3, 61426.0], [47.4, 61426.0], [47.5, 61427.0], [47.6, 61427.0], [47.7, 61429.0], [47.8, 61429.0], [47.9, 61433.0], [48.0, 61433.0], [48.1, 61438.0], [48.2, 61438.0], [48.3, 61441.0], [48.4, 61441.0], [48.5, 61441.0], [48.6, 61441.0], [48.7, 61442.0], [48.8, 61442.0], [48.9, 61445.0], [49.0, 61445.0], [49.1, 61446.0], [49.2, 61446.0], [49.3, 61447.0], [49.4, 61447.0], [49.5, 61447.0], [49.6, 61447.0], [49.7, 61450.0], [49.8, 61450.0], [49.9, 61453.0], [50.0, 61453.0], [50.1, 61455.0], [50.2, 61455.0], [50.3, 61456.0], [50.4, 61456.0], [50.5, 61459.0], [50.6, 61459.0], [50.7, 61460.0], [50.8, 61460.0], [50.9, 61462.0], [51.0, 61462.0], [51.1, 61463.0], [51.2, 61463.0], [51.3, 61464.0], [51.4, 61464.0], [51.5, 61464.0], [51.6, 61464.0], [51.7, 61467.0], [51.8, 61467.0], [51.9, 61470.0], [52.0, 61470.0], [52.1, 61471.0], [52.2, 61471.0], [52.3, 61475.0], [52.4, 61475.0], [52.5, 61478.0], [52.6, 61478.0], [52.7, 61481.0], [52.8, 61481.0], [52.9, 61481.0], [53.0, 61481.0], [53.1, 61481.0], [53.2, 61481.0], [53.3, 61483.0], [53.4, 61483.0], [53.5, 61484.0], [53.6, 61484.0], [53.7, 61488.0], [53.8, 61488.0], [53.9, 61488.0], [54.0, 61488.0], [54.1, 61491.0], [54.2, 61491.0], [54.3, 61498.0], [54.4, 61498.0], [54.5, 61499.0], [54.6, 61499.0], [54.7, 61502.0], [54.8, 61502.0], [54.9, 61502.0], [55.0, 61502.0], [55.1, 61505.0], [55.2, 61505.0], [55.3, 61506.0], [55.4, 61506.0], [55.5, 61507.0], [55.6, 61507.0], [55.7, 61510.0], [55.8, 61510.0], [55.9, 61513.0], [56.0, 61513.0], [56.1, 61515.0], [56.2, 61515.0], [56.3, 61518.0], [56.4, 61518.0], [56.5, 61520.0], [56.6, 61520.0], [56.7, 61522.0], [56.8, 61522.0], [56.9, 61522.0], [57.0, 61522.0], [57.1, 61523.0], [57.2, 61523.0], [57.3, 61523.0], [57.4, 61523.0], [57.5, 61524.0], [57.6, 61524.0], [57.7, 61529.0], [57.8, 61529.0], [57.9, 61531.0], [58.0, 61531.0], [58.1, 61537.0], [58.2, 61537.0], [58.3, 61538.0], [58.4, 61538.0], [58.5, 61540.0], [58.6, 61540.0], [58.7, 61541.0], [58.8, 61541.0], [58.9, 61542.0], [59.0, 61542.0], [59.1, 61542.0], [59.2, 61542.0], [59.3, 61542.0], [59.4, 61542.0], [59.5, 61543.0], [59.6, 61543.0], [59.7, 61543.0], [59.8, 61543.0], [59.9, 61544.0], [60.0, 61544.0], [60.1, 61547.0], [60.2, 61547.0], [60.3, 61551.0], [60.4, 61551.0], [60.5, 61557.0], [60.6, 61557.0], [60.7, 61558.0], [60.8, 61558.0], [60.9, 61560.0], [61.0, 61560.0], [61.1, 61563.0], [61.2, 61563.0], [61.3, 61565.0], [61.4, 61565.0], [61.5, 61566.0], [61.6, 61566.0], [61.7, 61567.0], [61.8, 61567.0], [61.9, 61571.0], [62.0, 61571.0], [62.1, 61573.0], [62.2, 61573.0], [62.3, 61577.0], [62.4, 61577.0], [62.5, 61577.0], [62.6, 61577.0], [62.7, 61578.0], [62.8, 61578.0], [62.9, 61579.0], [63.0, 61579.0], [63.1, 61582.0], [63.2, 61582.0], [63.3, 61583.0], [63.4, 61583.0], [63.5, 61587.0], [63.6, 61587.0], [63.7, 61588.0], [63.8, 61588.0], [63.9, 61589.0], [64.0, 61589.0], [64.1, 61593.0], [64.2, 61593.0], [64.3, 61595.0], [64.4, 61595.0], [64.5, 61601.0], [64.6, 61601.0], [64.7, 61602.0], [64.8, 61602.0], [64.9, 61603.0], [65.0, 61603.0], [65.1, 61604.0], [65.2, 61604.0], [65.3, 61605.0], [65.4, 61605.0], [65.5, 61606.0], [65.6, 61606.0], [65.7, 61615.0], [65.8, 61615.0], [65.9, 61619.0], [66.0, 61619.0], [66.1, 61620.0], [66.2, 61620.0], [66.3, 61620.0], [66.4, 61620.0], [66.5, 61621.0], [66.6, 61621.0], [66.7, 61623.0], [66.8, 61623.0], [66.9, 61623.0], [67.0, 61623.0], [67.1, 61623.0], [67.2, 61623.0], [67.3, 61626.0], [67.4, 61626.0], [67.5, 61626.0], [67.6, 61626.0], [67.7, 61626.0], [67.8, 61626.0], [67.9, 61630.0], [68.0, 61630.0], [68.1, 61633.0], [68.2, 61633.0], [68.3, 61635.0], [68.4, 61635.0], [68.5, 61638.0], [68.6, 61638.0], [68.7, 61639.0], [68.8, 61639.0], [68.9, 61639.0], [69.0, 61639.0], [69.1, 61642.0], [69.2, 61642.0], [69.3, 61643.0], [69.4, 61643.0], [69.5, 61646.0], [69.6, 61646.0], [69.7, 61648.0], [69.8, 61648.0], [69.9, 61648.0], [70.0, 61648.0], [70.1, 61658.0], [70.2, 61658.0], [70.3, 61659.0], [70.4, 61659.0], [70.5, 61659.0], [70.6, 61659.0], [70.7, 61660.0], [70.8, 61660.0], [70.9, 61661.0], [71.0, 61661.0], [71.1, 61664.0], [71.2, 61664.0], [71.3, 61665.0], [71.4, 61665.0], [71.5, 61665.0], [71.6, 61665.0], [71.7, 61666.0], [71.8, 61666.0], [71.9, 61669.0], [72.0, 61669.0], [72.1, 61675.0], [72.2, 61675.0], [72.3, 61678.0], [72.4, 61678.0], [72.5, 61679.0], [72.6, 61679.0], [72.7, 61680.0], [72.8, 61680.0], [72.9, 61681.0], [73.0, 61681.0], [73.1, 61682.0], [73.2, 61682.0], [73.3, 61688.0], [73.4, 61688.0], [73.5, 61689.0], [73.6, 61689.0], [73.7, 61690.0], [73.8, 61690.0], [73.9, 61691.0], [74.0, 61691.0], [74.1, 61694.0], [74.2, 61694.0], [74.3, 61694.0], [74.4, 61694.0], [74.5, 61699.0], [74.6, 61699.0], [74.7, 61699.0], [74.8, 61699.0], [74.9, 61699.0], [75.0, 61699.0], [75.1, 61700.0], [75.2, 61700.0], [75.3, 61703.0], [75.4, 61703.0], [75.5, 61705.0], [75.6, 61705.0], [75.7, 61709.0], [75.8, 61709.0], [75.9, 61715.0], [76.0, 61715.0], [76.1, 61718.0], [76.2, 61718.0], [76.3, 61720.0], [76.4, 61720.0], [76.5, 61722.0], [76.6, 61722.0], [76.7, 61723.0], [76.8, 61723.0], [76.9, 61723.0], [77.0, 61723.0], [77.1, 61726.0], [77.2, 61726.0], [77.3, 61728.0], [77.4, 61728.0], [77.5, 61728.0], [77.6, 61728.0], [77.7, 61729.0], [77.8, 61729.0], [77.9, 61735.0], [78.0, 61735.0], [78.1, 61740.0], [78.2, 61740.0], [78.3, 61742.0], [78.4, 61742.0], [78.5, 61743.0], [78.6, 61743.0], [78.7, 61744.0], [78.8, 61744.0], [78.9, 61745.0], [79.0, 61745.0], [79.1, 61745.0], [79.2, 61745.0], [79.3, 61745.0], [79.4, 61745.0], [79.5, 61747.0], [79.6, 61747.0], [79.7, 61748.0], [79.8, 61748.0], [79.9, 61753.0], [80.0, 61753.0], [80.1, 61756.0], [80.2, 61756.0], [80.3, 61756.0], [80.4, 61756.0], [80.5, 61758.0], [80.6, 61758.0], [80.7, 61760.0], [80.8, 61760.0], [80.9, 61760.0], [81.0, 61760.0], [81.1, 61763.0], [81.2, 61763.0], [81.3, 61767.0], [81.4, 61767.0], [81.5, 61769.0], [81.6, 61769.0], [81.7, 61773.0], [81.8, 61773.0], [81.9, 61776.0], [82.0, 61776.0], [82.1, 61776.0], [82.2, 61776.0], [82.3, 61777.0], [82.4, 61777.0], [82.5, 61780.0], [82.6, 61780.0], [82.7, 61780.0], [82.8, 61780.0], [82.9, 61781.0], [83.0, 61781.0], [83.1, 61783.0], [83.2, 61783.0], [83.3, 61784.0], [83.4, 61784.0], [83.5, 61786.0], [83.6, 61786.0], [83.7, 61788.0], [83.8, 61788.0], [83.9, 61790.0], [84.0, 61790.0], [84.1, 61796.0], [84.2, 61796.0], [84.3, 61800.0], [84.4, 61800.0], [84.5, 61800.0], [84.6, 61800.0], [84.7, 61800.0], [84.8, 61800.0], [84.9, 61800.0], [85.0, 61800.0], [85.1, 61801.0], [85.2, 61801.0], [85.3, 61804.0], [85.4, 61804.0], [85.5, 61804.0], [85.6, 61804.0], [85.7, 61806.0], [85.8, 61806.0], [85.9, 61808.0], [86.0, 61808.0], [86.1, 61814.0], [86.2, 61814.0], [86.3, 61817.0], [86.4, 61817.0], [86.5, 61819.0], [86.6, 61819.0], [86.7, 61820.0], [86.8, 61820.0], [86.9, 61820.0], [87.0, 61820.0], [87.1, 61820.0], [87.2, 61820.0], [87.3, 61822.0], [87.4, 61822.0], [87.5, 61825.0], [87.6, 61825.0], [87.7, 61830.0], [87.8, 61830.0], [87.9, 61839.0], [88.0, 61839.0], [88.1, 61840.0], [88.2, 61840.0], [88.3, 61842.0], [88.4, 61842.0], [88.5, 61842.0], [88.6, 61842.0], [88.7, 61844.0], [88.8, 61844.0], [88.9, 61845.0], [89.0, 61845.0], [89.1, 61845.0], [89.2, 61845.0], [89.3, 61847.0], [89.4, 61847.0], [89.5, 61848.0], [89.6, 61848.0], [89.7, 61848.0], [89.8, 61848.0], [89.9, 61850.0], [90.0, 61850.0], [90.1, 61855.0], [90.2, 61855.0], [90.3, 61861.0], [90.4, 61861.0], [90.5, 61861.0], [90.6, 61861.0], [90.7, 61863.0], [90.8, 61863.0], [90.9, 61865.0], [91.0, 61865.0], [91.1, 61865.0], [91.2, 61865.0], [91.3, 61867.0], [91.4, 61867.0], [91.5, 61868.0], [91.6, 61868.0], [91.7, 61873.0], [91.8, 61873.0], [91.9, 61875.0], [92.0, 61875.0], [92.1, 61876.0], [92.2, 61876.0], [92.3, 61877.0], [92.4, 61877.0], [92.5, 61879.0], [92.6, 61879.0], [92.7, 61879.0], [92.8, 61879.0], [92.9, 61884.0], [93.0, 61884.0], [93.1, 61884.0], [93.2, 61884.0], [93.3, 61888.0], [93.4, 61888.0], [93.5, 61888.0], [93.6, 61888.0], [93.7, 61889.0], [93.8, 61889.0], [93.9, 61889.0], [94.0, 61889.0], [94.1, 61890.0], [94.2, 61890.0], [94.3, 61891.0], [94.4, 61891.0], [94.5, 61895.0], [94.6, 61895.0], [94.7, 61900.0], [94.8, 61900.0], [94.9, 61901.0], [95.0, 61901.0], [95.1, 61902.0], [95.2, 61902.0], [95.3, 61902.0], [95.4, 61902.0], [95.5, 61904.0], [95.6, 61904.0], [95.7, 61905.0], [95.8, 61905.0], [95.9, 61908.0], [96.0, 61908.0], [96.1, 61911.0], [96.2, 61911.0], [96.3, 61919.0], [96.4, 61919.0], [96.5, 61920.0], [96.6, 61920.0], [96.7, 61922.0], [96.8, 61922.0], [96.9, 61923.0], [97.0, 61923.0], [97.1, 61926.0], [97.2, 61926.0], [97.3, 61939.0], [97.4, 61939.0], [97.5, 61941.0], [97.6, 61941.0], [97.7, 61961.0], [97.8, 61961.0], [97.9, 61963.0], [98.0, 61963.0], [98.1, 61979.0], [98.2, 61979.0], [98.3, 61981.0], [98.4, 61981.0], [98.5, 61999.0], [98.6, 61999.0], [98.7, 62001.0], [98.8, 62001.0], [98.9, 62023.0], [99.0, 62023.0], [99.1, 62035.0], [99.2, 62035.0], [99.3, 62062.0], [99.4, 62062.0], [99.5, 62081.0], [99.6, 62081.0], [99.7, 62104.0], [99.8, 62104.0], [99.9, 62121.0], [100.0, 62121.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 60900.0, "maxY": 53.0, "series": [{"data": [[61100.0, 3.0], [61300.0, 2.0], [61000.0, 3.0], [61200.0, 2.0], [61700.0, 2.0], [61800.0, 2.0], [61600.0, 3.0], [61500.0, 3.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[61000.0, 3.0], [61300.0, 2.0], [61100.0, 3.0], [61200.0, 2.0], [61600.0, 3.0], [61700.0, 2.0], [61800.0, 2.0], [61500.0, 3.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[64400.0, 1.0], [64600.0, 1.0], [64800.0, 1.0], [64200.0, 1.0], [64500.0, 1.0], [64300.0, 1.0], [64700.0, 1.0], [64100.0, 3.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[61000.0, 47.0], [61200.0, 49.0], [61400.0, 48.0], [61100.0, 46.0], [61300.0, 53.0], [60900.0, 30.0], [61600.0, 53.0], [61800.0, 52.0], [61700.0, 46.0], [61500.0, 49.0], [61900.0, 20.0], [62000.0, 5.0], [62100.0, 2.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 550.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 550.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 550.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.300000000000001, "minX": 1.61937378E12, "maxY": 331.11400000000003, "series": [{"data": [[1.61937378E12, 14.249999999999998]], "isOverall": false, "label": "UserType4_V1V2", "isController": false}, {"data": [[1.61937378E12, 6.300000000000001]], "isOverall": false, "label": "UserType1_V1V2", "isController": false}, {"data": [[1.61937378E12, 331.11400000000003]], "isOverall": false, "label": "UserType2_V1V2", "isController": false}, {"data": [[1.61937378E12, 12.900000000000004]], "isOverall": false, "label": "UserType3_V1V2", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61937378E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 60938.0, "minX": 1.0, "maxY": 64729.0, "series": [{"data": [[550.0, 61520.6], [38.0, 61133.0], [202.0, 61034.0], [238.0, 61531.0], [64.0, 61631.0], [77.0, 61559.0], [389.0, 61269.0], [420.0, 61766.0], [104.0, 61059.0], [442.0, 61315.0], [462.0, 61062.0], [461.0, 61212.0], [452.0, 61563.0], [482.0, 61360.0], [488.0, 61660.0], [499.0, 61608.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[378.40000000000003, 61418.25]], "isOverall": false, "label": "UserType3-Aggregated", "isController": false}, {"data": [[542.0, 61325.0], [153.0, 61032.0], [38.0, 61130.0], [217.0, 61530.0], [64.0, 61628.0], [349.0, 61669.0], [344.0, 61221.0], [354.0, 61821.0], [415.0, 61264.0], [414.0, 61714.0], [405.0, 61116.0], [460.0, 61160.0], [464.0, 61359.0], [118.0, 61055.0], [117.0, 61554.0], [495.0, 61306.0], [486.0, 61857.0], [489.0, 61556.0], [497.0, 61756.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[348.15, 61418.90000000001]], "isOverall": false, "label": "UserType4-Aggregated", "isController": false}, {"data": [[4.0, 64729.0], [2.0, 64137.0], [1.0, 64159.0], [10.0, 64510.25], [6.0, 64428.0], [3.0, 64160.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[6.199999999999999, 64408.2]], "isOverall": false, "label": "UserType1-Aggregated", "isController": false}, {"data": [[13.0, 61403.333333333336], [16.0, 61463.0], [17.0, 61663.666666666664], [20.0, 61503.5], [21.0, 61163.0], [23.0, 62069.5], [25.0, 61702.666666666664], [28.0, 61543.0], [29.0, 61682.0], [32.0, 61723.0], [35.0, 61262.0], [38.0, 61537.5], [40.0, 61661.0], [42.0, 62023.0], [45.0, 61441.0], [44.0, 61801.0], [46.0, 61361.0], [49.0, 61923.0], [51.0, 62062.0], [53.0, 61141.0], [52.0, 62121.0], [56.0, 61641.5], [59.0, 61181.0], [61.0, 61601.0], [63.0, 61420.0], [62.0, 61560.0], [67.0, 61541.0], [64.0, 61746.27272727273], [71.0, 61922.0], [69.0, 61392.0], [74.0, 61842.0], [73.0, 61902.0], [76.0, 61120.0], [85.0, 61061.0], [89.0, 61680.0], [94.0, 61520.666666666664], [92.0, 61660.0], [100.0, 61460.0], [102.0, 61421.0], [107.0, 61861.0], [106.0, 61220.0], [104.0, 61729.0], [110.0, 61569.75], [109.0, 61740.0], [115.0, 61269.0], [114.0, 61299.0], [113.0, 61306.0], [112.0, 61699.0], [118.0, 61481.666666666664], [117.0, 61748.5], [116.0, 61879.0], [156.0, 61378.5], [152.0, 61529.333333333336], [181.0, 61888.0], [178.0, 61559.0], [187.0, 61587.0], [186.0, 61308.0], [192.0, 61467.0], [206.0, 61508.0], [203.0, 61447.0], [212.0, 60967.0], [211.0, 61436.0], [210.0, 61443.71428571429], [209.0, 61026.0], [208.0, 61746.5], [223.0, 61845.0], [222.0, 61806.0], [219.0, 61666.0], [227.0, 61146.0], [239.0, 61304.0], [237.0, 60943.0], [234.0, 61064.0], [232.0, 61347.28571428572], [245.0, 61443.0], [246.0, 60984.0], [244.0, 61543.0], [243.0, 61784.0], [241.0, 61574.0], [319.0, 61060.0], [333.0, 61464.0], [331.0, 61825.0], [330.0, 61191.0], [329.0, 61046.0], [328.0, 61646.0], [327.0, 61908.0], [350.0, 60938.0], [349.0, 61483.0], [340.0, 61919.0], [339.0, 61848.0], [337.0, 61427.0], [336.0, 61225.0], [365.0, 61412.5], [364.0, 61166.0], [362.0, 61435.5], [367.0, 61020.0], [361.0, 61613.5], [360.0, 61844.0], [358.0, 61412.666666666664], [357.0, 61042.5], [355.0, 61502.0], [353.0, 61382.0], [352.0, 61119.0], [371.0, 61602.0], [382.0, 61496.0], [381.0, 60958.0], [380.0, 61394.5], [379.0, 60964.0], [375.0, 61455.0], [374.0, 61446.0], [370.0, 61820.0], [368.0, 61613.5], [397.0, 61544.0], [396.0, 61665.0], [387.0, 61876.0], [386.0, 61065.0], [395.0, 61449.0], [394.0, 61604.0], [393.0, 61403.0], [392.0, 61202.0], [391.0, 61607.0], [390.0, 61606.0], [389.0, 61776.0], [388.0, 61481.0], [415.0, 61767.0], [411.0, 61745.0], [409.0, 61393.5], [408.0, 61394.0], [407.0, 61403.16666666667], [401.0, 61804.0], [400.0, 61542.0], [406.0, 61621.0], [405.0, 61471.666666666664], [403.0, 61180.5], [402.0, 61065.0], [430.0, 61459.0], [431.0, 61560.2], [428.0, 61138.0], [417.0, 61290.0], [426.0, 61517.0], [423.0, 61172.0], [425.0, 61623.0], [424.0, 61033.0], [422.0, 61743.0], [420.0, 61615.0], [446.0, 61199.0], [444.0, 61238.5], [443.0, 61407.6], [442.0, 61603.333333333336], [441.0, 61220.5], [439.0, 61273.0], [438.0, 60942.0], [437.0, 61412.5], [434.0, 61120.0], [461.0, 61112.0], [462.0, 61551.0], [460.0, 61715.0], [451.0, 61199.0], [449.0, 61309.0], [448.0, 61555.0], [459.0, 61278.5], [458.0, 61219.333333333336], [457.0, 61557.0], [454.0, 61581.0], [453.0, 61329.0], [452.0, 61694.0], [467.0, 61304.0], [478.0, 61366.0], [479.0, 61442.333333333336], [477.0, 61140.0], [466.0, 61637.5], [465.0, 61735.0], [464.0, 61551.333333333336], [474.0, 61510.0], [472.0, 61245.0], [471.0, 61246.0], [470.0, 61073.0], [469.0, 61187.8], [468.0, 61630.0], [483.0, 61565.0], [495.0, 61339.0], [488.0, 61116.0], [487.0, 61010.0], [493.0, 61682.333333333336], [492.0, 61877.0], [485.0, 61151.5], [486.0, 61569.5], [484.0, 61132.0], [481.0, 61360.5], [489.0, 61441.0], [510.0, 61822.0], [511.0, 61420.5], [509.0, 61380.0], [508.0, 61873.0], [507.0, 61457.0], [506.0, 61526.857142857145], [505.0, 61900.0], [504.0, 61464.0], [503.0, 61666.0], [497.0, 61255.0], [496.0, 61705.5], [499.0, 61884.0], [498.0, 61549.5], [502.0, 61275.5], [501.0, 61601.333333333336], [500.0, 61134.0], [539.0, 61704.5], [541.0, 61602.83333333333], [542.0, 61665.0], [538.0, 61705.0], [536.0, 61254.333333333336], [532.0, 61722.0], [530.0, 61301.0], [529.0, 61797.0], [528.0, 61332.0], [527.0, 61503.666666666664], [514.0, 61688.666666666664], [512.0, 61469.75], [517.0, 61389.0], [519.0, 61246.0], [525.0, 61238.5], [523.0, 61239.666666666664], [521.0, 61064.5], [520.0, 61273.0], [550.0, 61396.487179487194], [549.0, 61202.333333333336], [548.0, 61451.25], [547.0, 61111.0], [546.0, 61569.333333333336], [545.0, 61270.5], [544.0, 61192.5]], "isOverall": false, "label": "UserType2", "isController": false}, {"data": [[368.02000000000015, 61452.680000000015]], "isOverall": false, "label": "UserType2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 550.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61937378E12, "maxY": 4.9E-324, "series": [{"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61937378E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 61418.25, "minX": 1.61937378E12, "maxY": 64408.2, "series": [{"data": [[1.61937378E12, 61418.25]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61937378E12, 61418.90000000001]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61937378E12, 64408.2]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61937378E12, 61452.680000000015]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61937378E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61937378E12, "maxY": 4.9E-324, "series": [{"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61937378E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61937378E12, "maxY": 4.9E-324, "series": [{"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType3", "isController": false}, {"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType4", "isController": false}, {"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType1", "isController": false}, {"data": [[1.61937378E12, 0.0]], "isOverall": false, "label": "UserType2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61937378E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 60919.0, "minX": 1.61937378E12, "maxY": 64807.0, "series": [{"data": [[1.61937378E12, 64807.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61937378E12, 61865.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61937378E12, 64369.67]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61937378E12, 61920.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61937378E12, 60919.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61937378E12, 61462.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61937378E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 61454.0, "minX": 10.0, "maxY": 64370.5, "series": [{"data": [[540.0, 61454.0], [10.0, 64370.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 540.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 10.0, "maxY": 4.9E-324, "series": [{"data": [[540.0, 0.0], [10.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 540.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.166666666666666, "minX": 1.61937372E12, "maxY": 9.166666666666666, "series": [{"data": [[1.61937372E12, 9.166666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61937372E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 9.166666666666666, "minX": 1.61937378E12, "maxY": 9.166666666666666, "series": [{"data": [[1.61937378E12, 9.166666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61937378E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.61937378E12, "maxY": 8.333333333333334, "series": [{"data": [[1.61937378E12, 0.16666666666666666]], "isOverall": false, "label": "UserType1-success", "isController": false}, {"data": [[1.61937378E12, 8.333333333333334]], "isOverall": false, "label": "UserType2-success", "isController": false}, {"data": [[1.61937378E12, 0.3333333333333333]], "isOverall": false, "label": "UserType4-success", "isController": false}, {"data": [[1.61937378E12, 0.3333333333333333]], "isOverall": false, "label": "UserType3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61937378E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 9.166666666666666, "minX": 1.61937378E12, "maxY": 9.166666666666666, "series": [{"data": [[1.61937378E12, 9.166666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61937378E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

