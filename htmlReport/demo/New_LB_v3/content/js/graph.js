/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 27.0, "minX": 0.0, "maxY": 60123.0, "series": [{"data": [[0.0, 60025.0], [0.1, 60025.0], [0.2, 60026.0], [0.3, 60026.0], [0.4, 60026.0], [0.5, 60026.0], [0.6, 60026.0], [0.7, 60026.0], [0.8, 60026.0], [0.9, 60026.0], [1.0, 60026.0], [1.1, 60026.0], [1.2, 60026.0], [1.3, 60026.0], [1.4, 60026.0], [1.5, 60026.0], [1.6, 60026.0], [1.7, 60026.0], [1.8, 60026.0], [1.9, 60026.0], [2.0, 60026.0], [2.1, 60026.0], [2.2, 60026.0], [2.3, 60026.0], [2.4, 60026.0], [2.5, 60026.0], [2.6, 60026.0], [2.7, 60026.0], [2.8, 60027.0], [2.9, 60027.0], [3.0, 60027.0], [3.1, 60027.0], [3.2, 60027.0], [3.3, 60027.0], [3.4, 60027.0], [3.5, 60027.0], [3.6, 60027.0], [3.7, 60027.0], [3.8, 60027.0], [3.9, 60027.0], [4.0, 60027.0], [4.1, 60027.0], [4.2, 60027.0], [4.3, 60027.0], [4.4, 60027.0], [4.5, 60027.0], [4.6, 60027.0], [4.7, 60027.0], [4.8, 60027.0], [4.9, 60027.0], [5.0, 60027.0], [5.1, 60027.0], [5.2, 60027.0], [5.3, 60027.0], [5.4, 60027.0], [5.5, 60027.0], [5.6, 60027.0], [5.7, 60027.0], [5.8, 60027.0], [5.9, 60027.0], [6.0, 60027.0], [6.1, 60027.0], [6.2, 60027.0], [6.3, 60027.0], [6.4, 60027.0], [6.5, 60027.0], [6.6, 60027.0], [6.7, 60027.0], [6.8, 60027.0], [6.9, 60027.0], [7.0, 60027.0], [7.1, 60027.0], [7.2, 60027.0], [7.3, 60027.0], [7.4, 60027.0], [7.5, 60027.0], [7.6, 60027.0], [7.7, 60027.0], [7.8, 60027.0], [7.9, 60027.0], [8.0, 60027.0], [8.1, 60027.0], [8.2, 60027.0], [8.3, 60027.0], [8.4, 60027.0], [8.5, 60027.0], [8.6, 60027.0], [8.7, 60027.0], [8.8, 60027.0], [8.9, 60027.0], [9.0, 60027.0], [9.1, 60027.0], [9.2, 60027.0], [9.3, 60027.0], [9.4, 60027.0], [9.5, 60027.0], [9.6, 60027.0], [9.7, 60027.0], [9.8, 60027.0], [9.9, 60027.0], [10.0, 60027.0], [10.1, 60027.0], [10.2, 60027.0], [10.3, 60027.0], [10.4, 60027.0], [10.5, 60027.0], [10.6, 60027.0], [10.7, 60027.0], [10.8, 60027.0], [10.9, 60027.0], [11.0, 60027.0], [11.1, 60027.0], [11.2, 60027.0], [11.3, 60027.0], [11.4, 60027.0], [11.5, 60027.0], [11.6, 60027.0], [11.7, 60027.0], [11.8, 60027.0], [11.9, 60027.0], [12.0, 60027.0], [12.1, 60027.0], [12.2, 60027.0], [12.3, 60027.0], [12.4, 60027.0], [12.5, 60027.0], [12.6, 60027.0], [12.7, 60027.0], [12.8, 60027.0], [12.9, 60027.0], [13.0, 60027.0], [13.1, 60027.0], [13.2, 60027.0], [13.3, 60027.0], [13.4, 60027.0], [13.5, 60027.0], [13.6, 60027.0], [13.7, 60027.0], [13.8, 60027.0], [13.9, 60027.0], [14.0, 60027.0], [14.1, 60027.0], [14.2, 60027.0], [14.3, 60027.0], [14.4, 60027.0], [14.5, 60027.0], [14.6, 60027.0], [14.7, 60027.0], [14.8, 60027.0], [14.9, 60027.0], [15.0, 60027.0], [15.1, 60027.0], [15.2, 60027.0], [15.3, 60027.0], [15.4, 60027.0], [15.5, 60027.0], [15.6, 60027.0], [15.7, 60027.0], [15.8, 60027.0], [15.9, 60027.0], [16.0, 60027.0], [16.1, 60027.0], [16.2, 60027.0], [16.3, 60027.0], [16.4, 60027.0], [16.5, 60027.0], [16.6, 60027.0], [16.7, 60027.0], [16.8, 60028.0], [16.9, 60028.0], [17.0, 60028.0], [17.1, 60028.0], [17.2, 60028.0], [17.3, 60028.0], [17.4, 60028.0], [17.5, 60028.0], [17.6, 60028.0], [17.7, 60028.0], [17.8, 60028.0], [17.9, 60028.0], [18.0, 60028.0], [18.1, 60028.0], [18.2, 60028.0], [18.3, 60028.0], [18.4, 60028.0], [18.5, 60028.0], [18.6, 60028.0], [18.7, 60028.0], [18.8, 60028.0], [18.9, 60028.0], [19.0, 60028.0], [19.1, 60028.0], [19.2, 60028.0], [19.3, 60028.0], [19.4, 60028.0], [19.5, 60028.0], [19.6, 60028.0], [19.7, 60028.0], [19.8, 60028.0], [19.9, 60028.0], [20.0, 60028.0], [20.1, 60028.0], [20.2, 60028.0], [20.3, 60028.0], [20.4, 60028.0], [20.5, 60028.0], [20.6, 60028.0], [20.7, 60028.0], [20.8, 60028.0], [20.9, 60028.0], [21.0, 60028.0], [21.1, 60028.0], [21.2, 60028.0], [21.3, 60028.0], [21.4, 60028.0], [21.5, 60028.0], [21.6, 60028.0], [21.7, 60028.0], [21.8, 60028.0], [21.9, 60028.0], [22.0, 60028.0], [22.1, 60028.0], [22.2, 60028.0], [22.3, 60028.0], [22.4, 60028.0], [22.5, 60028.0], [22.6, 60028.0], [22.7, 60028.0], [22.8, 60028.0], [22.9, 60028.0], [23.0, 60028.0], [23.1, 60028.0], [23.2, 60028.0], [23.3, 60028.0], [23.4, 60028.0], [23.5, 60028.0], [23.6, 60028.0], [23.7, 60028.0], [23.8, 60028.0], [23.9, 60028.0], [24.0, 60028.0], [24.1, 60028.0], [24.2, 60028.0], [24.3, 60028.0], [24.4, 60028.0], [24.5, 60028.0], [24.6, 60028.0], [24.7, 60028.0], [24.8, 60028.0], [24.9, 60028.0], [25.0, 60028.0], [25.1, 60028.0], [25.2, 60028.0], [25.3, 60028.0], [25.4, 60028.0], [25.5, 60028.0], [25.6, 60028.0], [25.7, 60028.0], [25.8, 60028.0], [25.9, 60028.0], [26.0, 60028.0], [26.1, 60028.0], [26.2, 60028.0], [26.3, 60028.0], [26.4, 60028.0], [26.5, 60028.0], [26.6, 60028.0], [26.7, 60028.0], [26.8, 60028.0], [26.9, 60028.0], [27.0, 60028.0], [27.1, 60028.0], [27.2, 60028.0], [27.3, 60028.0], [27.4, 60028.0], [27.5, 60028.0], [27.6, 60028.0], [27.7, 60028.0], [27.8, 60028.0], [27.9, 60028.0], [28.0, 60028.0], [28.1, 60028.0], [28.2, 60028.0], [28.3, 60028.0], [28.4, 60028.0], [28.5, 60028.0], [28.6, 60028.0], [28.7, 60028.0], [28.8, 60028.0], [28.9, 60028.0], [29.0, 60028.0], [29.1, 60028.0], [29.2, 60028.0], [29.3, 60028.0], [29.4, 60028.0], [29.5, 60028.0], [29.6, 60028.0], [29.7, 60028.0], [29.8, 60028.0], [29.9, 60028.0], [30.0, 60028.0], [30.1, 60028.0], [30.2, 60028.0], [30.3, 60028.0], [30.4, 60028.0], [30.5, 60028.0], [30.6, 60028.0], [30.7, 60028.0], [30.8, 60028.0], [30.9, 60028.0], [31.0, 60028.0], [31.1, 60028.0], [31.2, 60028.0], [31.3, 60028.0], [31.4, 60028.0], [31.5, 60028.0], [31.6, 60028.0], [31.7, 60028.0], [31.8, 60028.0], [31.9, 60028.0], [32.0, 60028.0], [32.1, 60028.0], [32.2, 60028.0], [32.3, 60028.0], [32.4, 60028.0], [32.5, 60028.0], [32.6, 60028.0], [32.7, 60028.0], [32.8, 60028.0], [32.9, 60028.0], [33.0, 60028.0], [33.1, 60028.0], [33.2, 60028.0], [33.3, 60028.0], [33.4, 60028.0], [33.5, 60028.0], [33.6, 60028.0], [33.7, 60028.0], [33.8, 60028.0], [33.9, 60028.0], [34.0, 60028.0], [34.1, 60028.0], [34.2, 60028.0], [34.3, 60028.0], [34.4, 60028.0], [34.5, 60028.0], [34.6, 60028.0], [34.7, 60028.0], [34.8, 60028.0], [34.9, 60028.0], [35.0, 60028.0], [35.1, 60028.0], [35.2, 60028.0], [35.3, 60028.0], [35.4, 60028.0], [35.5, 60028.0], [35.6, 60028.0], [35.7, 60028.0], [35.8, 60028.0], [35.9, 60028.0], [36.0, 60028.0], [36.1, 60028.0], [36.2, 60028.0], [36.3, 60028.0], [36.4, 60028.0], [36.5, 60028.0], [36.6, 60028.0], [36.7, 60028.0], [36.8, 60028.0], [36.9, 60028.0], [37.0, 60028.0], [37.1, 60028.0], [37.2, 60028.0], [37.3, 60028.0], [37.4, 60028.0], [37.5, 60028.0], [37.6, 60028.0], [37.7, 60028.0], [37.8, 60028.0], [37.9, 60028.0], [38.0, 60028.0], [38.1, 60028.0], [38.2, 60028.0], [38.3, 60028.0], [38.4, 60028.0], [38.5, 60028.0], [38.6, 60028.0], [38.7, 60028.0], [38.8, 60028.0], [38.9, 60028.0], [39.0, 60028.0], [39.1, 60028.0], [39.2, 60028.0], [39.3, 60028.0], [39.4, 60028.0], [39.5, 60028.0], [39.6, 60028.0], [39.7, 60028.0], [39.8, 60028.0], [39.9, 60028.0], [40.0, 60028.0], [40.1, 60028.0], [40.2, 60028.0], [40.3, 60028.0], [40.4, 60028.0], [40.5, 60028.0], [40.6, 60028.0], [40.7, 60028.0], [40.8, 60028.0], [40.9, 60028.0], [41.0, 60028.0], [41.1, 60028.0], [41.2, 60028.0], [41.3, 60028.0], [41.4, 60028.0], [41.5, 60028.0], [41.6, 60028.0], [41.7, 60028.0], [41.8, 60028.0], [41.9, 60028.0], [42.0, 60028.0], [42.1, 60028.0], [42.2, 60028.0], [42.3, 60028.0], [42.4, 60028.0], [42.5, 60028.0], [42.6, 60028.0], [42.7, 60028.0], [42.8, 60028.0], [42.9, 60028.0], [43.0, 60028.0], [43.1, 60028.0], [43.2, 60028.0], [43.3, 60028.0], [43.4, 60028.0], [43.5, 60028.0], [43.6, 60028.0], [43.7, 60028.0], [43.8, 60028.0], [43.9, 60029.0], [44.0, 60029.0], [44.1, 60029.0], [44.2, 60029.0], [44.3, 60029.0], [44.4, 60029.0], [44.5, 60029.0], [44.6, 60029.0], [44.7, 60029.0], [44.8, 60029.0], [44.9, 60029.0], [45.0, 60029.0], [45.1, 60029.0], [45.2, 60029.0], [45.3, 60029.0], [45.4, 60029.0], [45.5, 60029.0], [45.6, 60029.0], [45.7, 60029.0], [45.8, 60029.0], [45.9, 60029.0], [46.0, 60029.0], [46.1, 60029.0], [46.2, 60029.0], [46.3, 60029.0], [46.4, 60029.0], [46.5, 60029.0], [46.6, 60029.0], [46.7, 60029.0], [46.8, 60029.0], [46.9, 60029.0], [47.0, 60029.0], [47.1, 60029.0], [47.2, 60029.0], [47.3, 60029.0], [47.4, 60029.0], [47.5, 60029.0], [47.6, 60029.0], [47.7, 60029.0], [47.8, 60029.0], [47.9, 60029.0], [48.0, 60029.0], [48.1, 60029.0], [48.2, 60029.0], [48.3, 60029.0], [48.4, 60029.0], [48.5, 60029.0], [48.6, 60029.0], [48.7, 60029.0], [48.8, 60029.0], [48.9, 60029.0], [49.0, 60029.0], [49.1, 60029.0], [49.2, 60029.0], [49.3, 60029.0], [49.4, 60029.0], [49.5, 60029.0], [49.6, 60029.0], [49.7, 60029.0], [49.8, 60029.0], [49.9, 60029.0], [50.0, 60029.0], [50.1, 60029.0], [50.2, 60029.0], [50.3, 60029.0], [50.4, 60029.0], [50.5, 60029.0], [50.6, 60029.0], [50.7, 60029.0], [50.8, 60029.0], [50.9, 60029.0], [51.0, 60029.0], [51.1, 60029.0], [51.2, 60029.0], [51.3, 60029.0], [51.4, 60029.0], [51.5, 60029.0], [51.6, 60029.0], [51.7, 60029.0], [51.8, 60029.0], [51.9, 60029.0], [52.0, 60029.0], [52.1, 60029.0], [52.2, 60029.0], [52.3, 60029.0], [52.4, 60029.0], [52.5, 60029.0], [52.6, 60029.0], [52.7, 60029.0], [52.8, 60029.0], [52.9, 60029.0], [53.0, 60029.0], [53.1, 60029.0], [53.2, 60029.0], [53.3, 60029.0], [53.4, 60029.0], [53.5, 60029.0], [53.6, 60029.0], [53.7, 60029.0], [53.8, 60029.0], [53.9, 60029.0], [54.0, 60029.0], [54.1, 60029.0], [54.2, 60029.0], [54.3, 60029.0], [54.4, 60029.0], [54.5, 60029.0], [54.6, 60029.0], [54.7, 60029.0], [54.8, 60030.0], [54.9, 60030.0], [55.0, 60030.0], [55.1, 60030.0], [55.2, 60030.0], [55.3, 60030.0], [55.4, 60030.0], [55.5, 60030.0], [55.6, 60030.0], [55.7, 60030.0], [55.8, 60030.0], [55.9, 60030.0], [56.0, 60030.0], [56.1, 60030.0], [56.2, 60030.0], [56.3, 60030.0], [56.4, 60030.0], [56.5, 60030.0], [56.6, 60030.0], [56.7, 60030.0], [56.8, 60030.0], [56.9, 60030.0], [57.0, 60030.0], [57.1, 60030.0], [57.2, 60030.0], [57.3, 60030.0], [57.4, 60030.0], [57.5, 60030.0], [57.6, 60030.0], [57.7, 60030.0], [57.8, 60030.0], [57.9, 60030.0], [58.0, 60030.0], [58.1, 60030.0], [58.2, 60030.0], [58.3, 60030.0], [58.4, 60030.0], [58.5, 60030.0], [58.6, 60030.0], [58.7, 60030.0], [58.8, 60030.0], [58.9, 60030.0], [59.0, 60030.0], [59.1, 60030.0], [59.2, 60030.0], [59.3, 60030.0], [59.4, 60030.0], [59.5, 60030.0], [59.6, 60030.0], [59.7, 60030.0], [59.8, 60030.0], [59.9, 60030.0], [60.0, 60030.0], [60.1, 60030.0], [60.2, 60030.0], [60.3, 60030.0], [60.4, 60030.0], [60.5, 60030.0], [60.6, 60030.0], [60.7, 60030.0], [60.8, 60030.0], [60.9, 60030.0], [61.0, 60030.0], [61.1, 60030.0], [61.2, 60030.0], [61.3, 60030.0], [61.4, 60030.0], [61.5, 60030.0], [61.6, 60030.0], [61.7, 60030.0], [61.8, 60030.0], [61.9, 60030.0], [62.0, 60030.0], [62.1, 60030.0], [62.2, 60030.0], [62.3, 60031.0], [62.4, 60031.0], [62.5, 60031.0], [62.6, 60031.0], [62.7, 60031.0], [62.8, 60031.0], [62.9, 60031.0], [63.0, 60031.0], [63.1, 60031.0], [63.2, 60031.0], [63.3, 60031.0], [63.4, 60031.0], [63.5, 60031.0], [63.6, 60031.0], [63.7, 60031.0], [63.8, 60031.0], [63.9, 60031.0], [64.0, 60031.0], [64.1, 60031.0], [64.2, 60031.0], [64.3, 60031.0], [64.4, 60031.0], [64.5, 60031.0], [64.6, 60031.0], [64.7, 60031.0], [64.8, 60031.0], [64.9, 60031.0], [65.0, 60031.0], [65.1, 60031.0], [65.2, 60031.0], [65.3, 60031.0], [65.4, 60031.0], [65.5, 60032.0], [65.6, 60032.0], [65.7, 60032.0], [65.8, 60032.0], [65.9, 60032.0], [66.0, 60032.0], [66.1, 60032.0], [66.2, 60032.0], [66.3, 60032.0], [66.4, 60032.0], [66.5, 60032.0], [66.6, 60032.0], [66.7, 60032.0], [66.8, 60032.0], [66.9, 60032.0], [67.0, 60032.0], [67.1, 60032.0], [67.2, 60032.0], [67.3, 60032.0], [67.4, 60032.0], [67.5, 60032.0], [67.6, 60032.0], [67.7, 60032.0], [67.8, 60032.0], [67.9, 60032.0], [68.0, 60032.0], [68.1, 60032.0], [68.2, 60032.0], [68.3, 60032.0], [68.4, 60032.0], [68.5, 60032.0], [68.6, 60032.0], [68.7, 60032.0], [68.8, 60032.0], [68.9, 60032.0], [69.0, 60033.0], [69.1, 60033.0], [69.2, 60033.0], [69.3, 60033.0], [69.4, 60033.0], [69.5, 60033.0], [69.6, 60033.0], [69.7, 60033.0], [69.8, 60033.0], [69.9, 60033.0], [70.0, 60033.0], [70.1, 60033.0], [70.2, 60033.0], [70.3, 60033.0], [70.4, 60033.0], [70.5, 60033.0], [70.6, 60033.0], [70.7, 60033.0], [70.8, 60033.0], [70.9, 60033.0], [71.0, 60033.0], [71.1, 60033.0], [71.2, 60033.0], [71.3, 60033.0], [71.4, 60033.0], [71.5, 60033.0], [71.6, 60033.0], [71.7, 60033.0], [71.8, 60033.0], [71.9, 60033.0], [72.0, 60033.0], [72.1, 60033.0], [72.2, 60034.0], [72.3, 60034.0], [72.4, 60034.0], [72.5, 60034.0], [72.6, 60034.0], [72.7, 60034.0], [72.8, 60034.0], [72.9, 60034.0], [73.0, 60034.0], [73.1, 60034.0], [73.2, 60034.0], [73.3, 60034.0], [73.4, 60034.0], [73.5, 60034.0], [73.6, 60034.0], [73.7, 60034.0], [73.8, 60034.0], [73.9, 60034.0], [74.0, 60034.0], [74.1, 60034.0], [74.2, 60034.0], [74.3, 60034.0], [74.4, 60034.0], [74.5, 60034.0], [74.6, 60035.0], [74.7, 60035.0], [74.8, 60035.0], [74.9, 60035.0], [75.0, 60035.0], [75.1, 60035.0], [75.2, 60035.0], [75.3, 60035.0], [75.4, 60035.0], [75.5, 60035.0], [75.6, 60035.0], [75.7, 60035.0], [75.8, 60035.0], [75.9, 60035.0], [76.0, 60035.0], [76.1, 60035.0], [76.2, 60035.0], [76.3, 60035.0], [76.4, 60035.0], [76.5, 60035.0], [76.6, 60035.0], [76.7, 60035.0], [76.8, 60035.0], [76.9, 60036.0], [77.0, 60036.0], [77.1, 60036.0], [77.2, 60036.0], [77.3, 60036.0], [77.4, 60036.0], [77.5, 60036.0], [77.6, 60036.0], [77.7, 60036.0], [77.8, 60036.0], [77.9, 60036.0], [78.0, 60036.0], [78.1, 60036.0], [78.2, 60036.0], [78.3, 60036.0], [78.4, 60036.0], [78.5, 60036.0], [78.6, 60036.0], [78.7, 60036.0], [78.8, 60036.0], [78.9, 60036.0], [79.0, 60036.0], [79.1, 60036.0], [79.2, 60036.0], [79.3, 60036.0], [79.4, 60036.0], [79.5, 60037.0], [79.6, 60037.0], [79.7, 60037.0], [79.8, 60037.0], [79.9, 60037.0], [80.0, 60037.0], [80.1, 60037.0], [80.2, 60037.0], [80.3, 60037.0], [80.4, 60037.0], [80.5, 60037.0], [80.6, 60037.0], [80.7, 60037.0], [80.8, 60037.0], [80.9, 60037.0], [81.0, 60037.0], [81.1, 60037.0], [81.2, 60038.0], [81.3, 60038.0], [81.4, 60038.0], [81.5, 60038.0], [81.6, 60038.0], [81.7, 60038.0], [81.8, 60038.0], [81.9, 60038.0], [82.0, 60038.0], [82.1, 60038.0], [82.2, 60038.0], [82.3, 60038.0], [82.4, 60038.0], [82.5, 60038.0], [82.6, 60038.0], [82.7, 60038.0], [82.8, 60038.0], [82.9, 60038.0], [83.0, 60038.0], [83.1, 60038.0], [83.2, 60038.0], [83.3, 60039.0], [83.4, 60039.0], [83.5, 60039.0], [83.6, 60039.0], [83.7, 60039.0], [83.8, 60039.0], [83.9, 60039.0], [84.0, 60039.0], [84.1, 60039.0], [84.2, 60039.0], [84.3, 60039.0], [84.4, 60039.0], [84.5, 60040.0], [84.6, 60040.0], [84.7, 60040.0], [84.8, 60040.0], [84.9, 60040.0], [85.0, 60040.0], [85.1, 60040.0], [85.2, 60040.0], [85.3, 60040.0], [85.4, 60040.0], [85.5, 60040.0], [85.6, 60041.0], [85.7, 60041.0], [85.8, 60041.0], [85.9, 60041.0], [86.0, 60041.0], [86.1, 60041.0], [86.2, 60041.0], [86.3, 60041.0], [86.4, 60041.0], [86.5, 60041.0], [86.6, 60041.0], [86.7, 60041.0], [86.8, 60041.0], [86.9, 60041.0], [87.0, 60042.0], [87.1, 60042.0], [87.2, 60042.0], [87.3, 60042.0], [87.4, 60042.0], [87.5, 60042.0], [87.6, 60042.0], [87.7, 60042.0], [87.8, 60042.0], [87.9, 60042.0], [88.0, 60042.0], [88.1, 60042.0], [88.2, 60042.0], [88.3, 60043.0], [88.4, 60043.0], [88.5, 60043.0], [88.6, 60043.0], [88.7, 60043.0], [88.8, 60043.0], [88.9, 60043.0], [89.0, 60044.0], [89.1, 60044.0], [89.2, 60044.0], [89.3, 60044.0], [89.4, 60044.0], [89.5, 60044.0], [89.6, 60044.0], [89.7, 60044.0], [89.8, 60045.0], [89.9, 60045.0], [90.0, 60046.0], [90.1, 60046.0], [90.2, 60048.0], [90.3, 60048.0], [90.4, 60048.0], [90.5, 60048.0], [90.6, 60048.0], [90.7, 60048.0], [90.8, 60048.0], [90.9, 60049.0], [91.0, 60049.0], [91.1, 60049.0], [91.2, 60051.0], [91.3, 60051.0], [91.4, 60051.0], [91.5, 60052.0], [91.6, 60052.0], [91.7, 60052.0], [91.8, 60052.0], [91.9, 60052.0], [92.0, 60053.0], [92.1, 60053.0], [92.2, 60053.0], [92.3, 60054.0], [92.4, 60054.0], [92.5, 60054.0], [92.6, 60055.0], [92.7, 60055.0], [92.8, 60055.0], [92.9, 60056.0], [93.0, 60057.0], [93.1, 60057.0], [93.2, 60059.0], [93.3, 60062.0], [93.4, 60062.0], [93.5, 60062.0], [93.6, 60063.0], [93.7, 60063.0], [93.8, 60063.0], [93.9, 60077.0], [94.0, 60077.0], [94.1, 60077.0], [94.2, 60078.0], [94.3, 60079.0], [94.4, 60079.0], [94.5, 60079.0], [94.6, 60080.0], [94.7, 60080.0], [94.8, 60081.0], [94.9, 60084.0], [95.0, 60085.0], [95.1, 60085.0], [95.2, 60087.0], [95.3, 60087.0], [95.4, 60087.0], [95.5, 60087.0], [95.6, 60089.0], [95.7, 60089.0], [95.8, 60090.0], [95.9, 60090.0], [96.0, 60091.0], [96.1, 60091.0], [96.2, 60092.0], [96.3, 60093.0], [96.4, 60093.0], [96.5, 60094.0], [96.6, 60095.0], [96.7, 60095.0], [96.8, 60095.0], [96.9, 60095.0], [97.0, 60097.0], [97.1, 60097.0], [97.2, 60097.0], [97.3, 60098.0], [97.4, 60098.0], [97.5, 60099.0], [97.6, 60099.0], [97.7, 60099.0], [97.8, 60100.0], [97.9, 60100.0], [98.0, 60100.0], [98.1, 60100.0], [98.2, 60102.0], [98.3, 60103.0], [98.4, 60103.0], [98.5, 60105.0], [98.6, 60106.0], [98.7, 60106.0], [98.8, 60106.0], [98.9, 60109.0], [99.0, 60110.0], [99.1, 60110.0], [99.2, 60112.0], [99.3, 60116.0], [99.4, 60116.0], [99.5, 60117.0], [99.6, 60118.0], [99.7, 60118.0], [99.8, 60122.0], [99.9, 60123.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 27.0], [0.1, 35.0], [0.2, 37.0], [0.3, 39.0], [0.4, 42.0], [0.5, 49.0], [0.6, 54.0], [0.7, 56.0], [0.8, 70.0], [0.9, 80.0], [1.0, 92.0], [1.1, 93.0], [1.2, 94.0], [1.3, 97.0], [1.4, 99.0], [1.5, 101.0], [1.6, 103.0], [1.7, 104.0], [1.8, 105.0], [1.9, 106.0], [2.0, 114.0], [2.1, 122.0], [2.2, 126.0], [2.3, 130.0], [2.4, 133.0], [2.5, 136.0], [2.6, 138.0], [2.7, 139.0], [2.8, 144.0], [2.9, 154.0], [3.0, 165.0], [3.1, 181.0], [3.2, 204.0], [3.3, 210.0], [3.4, 214.0], [3.5, 216.0], [3.6, 217.0], [3.7, 218.0], [3.8, 220.0], [3.9, 221.0], [4.0, 224.0], [4.1, 226.0], [4.2, 228.0], [4.3, 229.0], [4.4, 238.0], [4.5, 239.0], [4.6, 240.0], [4.7, 242.0], [4.8, 248.0], [4.9, 254.0], [5.0, 259.0], [5.1, 269.0], [5.2, 273.0], [5.3, 279.0], [5.4, 280.0], [5.5, 281.0], [5.6, 282.0], [5.7, 283.0], [5.8, 283.0], [5.9, 284.0], [6.0, 285.0], [6.1, 287.0], [6.2, 288.0], [6.3, 291.0], [6.4, 293.0], [6.5, 295.0], [6.6, 296.0], [6.7, 298.0], [6.8, 300.0], [6.9, 303.0], [7.0, 306.0], [7.1, 310.0], [7.2, 312.0], [7.3, 313.0], [7.4, 314.0], [7.5, 315.0], [7.6, 317.0], [7.7, 326.0], [7.8, 329.0], [7.9, 348.0], [8.0, 350.0], [8.1, 352.0], [8.2, 353.0], [8.3, 353.0], [8.4, 354.0], [8.5, 355.0], [8.6, 355.0], [8.7, 357.0], [8.8, 358.0], [8.9, 359.0], [9.0, 360.0], [9.1, 361.0], [9.2, 362.0], [9.3, 363.0], [9.4, 364.0], [9.5, 365.0], [9.6, 366.0], [9.7, 366.0], [9.8, 368.0], [9.9, 369.0], [10.0, 370.0], [10.1, 371.0], [10.2, 371.0], [10.3, 372.0], [10.4, 372.0], [10.5, 373.0], [10.6, 373.0], [10.7, 374.0], [10.8, 374.0], [10.9, 375.0], [11.0, 375.0], [11.1, 375.0], [11.2, 376.0], [11.3, 376.0], [11.4, 376.0], [11.5, 377.0], [11.6, 377.0], [11.7, 377.0], [11.8, 377.0], [11.9, 378.0], [12.0, 378.0], [12.1, 378.0], [12.2, 378.0], [12.3, 379.0], [12.4, 379.0], [12.5, 379.0], [12.6, 380.0], [12.7, 380.0], [12.8, 380.0], [12.9, 380.0], [13.0, 381.0], [13.1, 381.0], [13.2, 381.0], [13.3, 382.0], [13.4, 382.0], [13.5, 382.0], [13.6, 383.0], [13.7, 383.0], [13.8, 384.0], [13.9, 384.0], [14.0, 385.0], [14.1, 385.0], [14.2, 385.0], [14.3, 386.0], [14.4, 386.0], [14.5, 387.0], [14.6, 387.0], [14.7, 388.0], [14.8, 388.0], [14.9, 389.0], [15.0, 390.0], [15.1, 391.0], [15.2, 393.0], [15.3, 394.0], [15.4, 396.0], [15.5, 399.0], [15.6, 401.0], [15.7, 402.0], [15.8, 405.0], [15.9, 405.0], [16.0, 406.0], [16.1, 407.0], [16.2, 408.0], [16.3, 408.0], [16.4, 408.0], [16.5, 409.0], [16.6, 410.0], [16.7, 410.0], [16.8, 411.0], [16.9, 412.0], [17.0, 412.0], [17.1, 413.0], [17.2, 413.0], [17.3, 415.0], [17.4, 416.0], [17.5, 418.0], [17.6, 421.0], [17.7, 423.0], [17.8, 425.0], [17.9, 426.0], [18.0, 428.0], [18.1, 429.0], [18.2, 429.0], [18.3, 429.0], [18.4, 429.0], [18.5, 430.0], [18.6, 430.0], [18.7, 431.0], [18.8, 431.0], [18.9, 431.0], [19.0, 432.0], [19.1, 432.0], [19.2, 433.0], [19.3, 433.0], [19.4, 434.0], [19.5, 434.0], [19.6, 435.0], [19.7, 435.0], [19.8, 435.0], [19.9, 436.0], [20.0, 436.0], [20.1, 436.0], [20.2, 436.0], [20.3, 437.0], [20.4, 437.0], [20.5, 438.0], [20.6, 438.0], [20.7, 438.0], [20.8, 439.0], [20.9, 439.0], [21.0, 440.0], [21.1, 440.0], [21.2, 440.0], [21.3, 440.0], [21.4, 441.0], [21.5, 441.0], [21.6, 441.0], [21.7, 441.0], [21.8, 441.0], [21.9, 442.0], [22.0, 442.0], [22.1, 442.0], [22.2, 442.0], [22.3, 442.0], [22.4, 443.0], [22.5, 443.0], [22.6, 443.0], [22.7, 443.0], [22.8, 443.0], [22.9, 444.0], [23.0, 444.0], [23.1, 444.0], [23.2, 444.0], [23.3, 445.0], [23.4, 445.0], [23.5, 445.0], [23.6, 445.0], [23.7, 446.0], [23.8, 446.0], [23.9, 446.0], [24.0, 447.0], [24.1, 447.0], [24.2, 448.0], [24.3, 448.0], [24.4, 448.0], [24.5, 449.0], [24.6, 449.0], [24.7, 449.0], [24.8, 449.0], [24.9, 450.0], [25.0, 450.0], [25.1, 450.0], [25.2, 451.0], [25.3, 451.0], [25.4, 451.0], [25.5, 451.0], [25.6, 451.0], [25.7, 452.0], [25.8, 452.0], [25.9, 452.0], [26.0, 452.0], [26.1, 452.0], [26.2, 453.0], [26.3, 453.0], [26.4, 453.0], [26.5, 453.0], [26.6, 453.0], [26.7, 453.0], [26.8, 454.0], [26.9, 454.0], [27.0, 454.0], [27.1, 454.0], [27.2, 454.0], [27.3, 455.0], [27.4, 455.0], [27.5, 455.0], [27.6, 455.0], [27.7, 455.0], [27.8, 455.0], [27.9, 456.0], [28.0, 456.0], [28.1, 456.0], [28.2, 456.0], [28.3, 456.0], [28.4, 457.0], [28.5, 457.0], [28.6, 457.0], [28.7, 457.0], [28.8, 458.0], [28.9, 458.0], [29.0, 458.0], [29.1, 458.0], [29.2, 459.0], [29.3, 459.0], [29.4, 459.0], [29.5, 460.0], [29.6, 460.0], [29.7, 460.0], [29.8, 461.0], [29.9, 461.0], [30.0, 462.0], [30.1, 462.0], [30.2, 462.0], [30.3, 463.0], [30.4, 463.0], [30.5, 463.0], [30.6, 464.0], [30.7, 464.0], [30.8, 464.0], [30.9, 465.0], [31.0, 465.0], [31.1, 465.0], [31.2, 465.0], [31.3, 466.0], [31.4, 466.0], [31.5, 466.0], [31.6, 467.0], [31.7, 468.0], [31.8, 468.0], [31.9, 469.0], [32.0, 469.0], [32.1, 469.0], [32.2, 470.0], [32.3, 470.0], [32.4, 470.0], [32.5, 471.0], [32.6, 471.0], [32.7, 471.0], [32.8, 471.0], [32.9, 472.0], [33.0, 472.0], [33.1, 472.0], [33.2, 472.0], [33.3, 473.0], [33.4, 473.0], [33.5, 473.0], [33.6, 473.0], [33.7, 473.0], [33.8, 474.0], [33.9, 474.0], [34.0, 474.0], [34.1, 475.0], [34.2, 475.0], [34.3, 476.0], [34.4, 476.0], [34.5, 476.0], [34.6, 476.0], [34.7, 477.0], [34.8, 477.0], [34.9, 478.0], [35.0, 478.0], [35.1, 479.0], [35.2, 479.0], [35.3, 480.0], [35.4, 480.0], [35.5, 480.0], [35.6, 481.0], [35.7, 481.0], [35.8, 481.0], [35.9, 482.0], [36.0, 482.0], [36.1, 483.0], [36.2, 483.0], [36.3, 484.0], [36.4, 484.0], [36.5, 484.0], [36.6, 485.0], [36.7, 486.0], [36.8, 486.0], [36.9, 487.0], [37.0, 488.0], [37.1, 488.0], [37.2, 489.0], [37.3, 490.0], [37.4, 490.0], [37.5, 490.0], [37.6, 491.0], [37.7, 491.0], [37.8, 492.0], [37.9, 492.0], [38.0, 493.0], [38.1, 493.0], [38.2, 493.0], [38.3, 494.0], [38.4, 494.0], [38.5, 495.0], [38.6, 495.0], [38.7, 495.0], [38.8, 496.0], [38.9, 496.0], [39.0, 496.0], [39.1, 497.0], [39.2, 498.0], [39.3, 498.0], [39.4, 499.0], [39.5, 500.0], [39.6, 501.0], [39.7, 502.0], [39.8, 503.0], [39.9, 503.0], [40.0, 504.0], [40.1, 504.0], [40.2, 504.0], [40.3, 505.0], [40.4, 505.0], [40.5, 505.0], [40.6, 506.0], [40.7, 506.0], [40.8, 506.0], [40.9, 507.0], [41.0, 507.0], [41.1, 507.0], [41.2, 507.0], [41.3, 508.0], [41.4, 508.0], [41.5, 508.0], [41.6, 508.0], [41.7, 508.0], [41.8, 509.0], [41.9, 509.0], [42.0, 509.0], [42.1, 509.0], [42.2, 510.0], [42.3, 510.0], [42.4, 510.0], [42.5, 511.0], [42.6, 511.0], [42.7, 511.0], [42.8, 511.0], [42.9, 512.0], [43.0, 512.0], [43.1, 512.0], [43.2, 512.0], [43.3, 513.0], [43.4, 513.0], [43.5, 513.0], [43.6, 514.0], [43.7, 514.0], [43.8, 514.0], [43.9, 514.0], [44.0, 515.0], [44.1, 515.0], [44.2, 515.0], [44.3, 516.0], [44.4, 516.0], [44.5, 516.0], [44.6, 517.0], [44.7, 517.0], [44.8, 517.0], [44.9, 518.0], [45.0, 518.0], [45.1, 518.0], [45.2, 518.0], [45.3, 519.0], [45.4, 519.0], [45.5, 519.0], [45.6, 519.0], [45.7, 519.0], [45.8, 520.0], [45.9, 520.0], [46.0, 520.0], [46.1, 520.0], [46.2, 520.0], [46.3, 521.0], [46.4, 521.0], [46.5, 521.0], [46.6, 521.0], [46.7, 522.0], [46.8, 522.0], [46.9, 522.0], [47.0, 522.0], [47.1, 523.0], [47.2, 523.0], [47.3, 523.0], [47.4, 523.0], [47.5, 524.0], [47.6, 524.0], [47.7, 524.0], [47.8, 524.0], [47.9, 524.0], [48.0, 525.0], [48.1, 525.0], [48.2, 525.0], [48.3, 525.0], [48.4, 525.0], [48.5, 526.0], [48.6, 526.0], [48.7, 526.0], [48.8, 526.0], [48.9, 527.0], [49.0, 527.0], [49.1, 527.0], [49.2, 527.0], [49.3, 527.0], [49.4, 528.0], [49.5, 528.0], [49.6, 528.0], [49.7, 528.0], [49.8, 528.0], [49.9, 529.0], [50.0, 529.0], [50.1, 529.0], [50.2, 529.0], [50.3, 530.0], [50.4, 530.0], [50.5, 530.0], [50.6, 530.0], [50.7, 530.0], [50.8, 530.0], [50.9, 531.0], [51.0, 531.0], [51.1, 531.0], [51.2, 532.0], [51.3, 532.0], [51.4, 532.0], [51.5, 532.0], [51.6, 533.0], [51.7, 533.0], [51.8, 533.0], [51.9, 533.0], [52.0, 533.0], [52.1, 534.0], [52.2, 534.0], [52.3, 535.0], [52.4, 535.0], [52.5, 535.0], [52.6, 536.0], [52.7, 536.0], [52.8, 536.0], [52.9, 536.0], [53.0, 537.0], [53.1, 537.0], [53.2, 537.0], [53.3, 537.0], [53.4, 538.0], [53.5, 538.0], [53.6, 538.0], [53.7, 538.0], [53.8, 539.0], [53.9, 539.0], [54.0, 540.0], [54.1, 540.0], [54.2, 540.0], [54.3, 540.0], [54.4, 541.0], [54.5, 541.0], [54.6, 541.0], [54.7, 542.0], [54.8, 542.0], [54.9, 543.0], [55.0, 543.0], [55.1, 543.0], [55.2, 543.0], [55.3, 544.0], [55.4, 544.0], [55.5, 544.0], [55.6, 545.0], [55.7, 545.0], [55.8, 545.0], [55.9, 545.0], [56.0, 546.0], [56.1, 546.0], [56.2, 546.0], [56.3, 546.0], [56.4, 546.0], [56.5, 547.0], [56.6, 547.0], [56.7, 547.0], [56.8, 548.0], [56.9, 548.0], [57.0, 548.0], [57.1, 549.0], [57.2, 549.0], [57.3, 549.0], [57.4, 549.0], [57.5, 550.0], [57.6, 550.0], [57.7, 551.0], [57.8, 551.0], [57.9, 551.0], [58.0, 552.0], [58.1, 552.0], [58.2, 553.0], [58.3, 553.0], [58.4, 554.0], [58.5, 554.0], [58.6, 554.0], [58.7, 555.0], [58.8, 555.0], [58.9, 556.0], [59.0, 556.0], [59.1, 556.0], [59.2, 557.0], [59.3, 557.0], [59.4, 558.0], [59.5, 558.0], [59.6, 558.0], [59.7, 559.0], [59.8, 559.0], [59.9, 559.0], [60.0, 560.0], [60.1, 560.0], [60.2, 561.0], [60.3, 561.0], [60.4, 561.0], [60.5, 561.0], [60.6, 562.0], [60.7, 562.0], [60.8, 562.0], [60.9, 563.0], [61.0, 563.0], [61.1, 563.0], [61.2, 564.0], [61.3, 564.0], [61.4, 564.0], [61.5, 564.0], [61.6, 565.0], [61.7, 565.0], [61.8, 565.0], [61.9, 566.0], [62.0, 566.0], [62.1, 567.0], [62.2, 567.0], [62.3, 568.0], [62.4, 569.0], [62.5, 570.0], [62.6, 570.0], [62.7, 570.0], [62.8, 571.0], [62.9, 571.0], [63.0, 572.0], [63.1, 572.0], [63.2, 572.0], [63.3, 573.0], [63.4, 573.0], [63.5, 573.0], [63.6, 574.0], [63.7, 574.0], [63.8, 574.0], [63.9, 575.0], [64.0, 575.0], [64.1, 576.0], [64.2, 576.0], [64.3, 576.0], [64.4, 577.0], [64.5, 577.0], [64.6, 577.0], [64.7, 578.0], [64.8, 578.0], [64.9, 578.0], [65.0, 579.0], [65.1, 579.0], [65.2, 579.0], [65.3, 580.0], [65.4, 580.0], [65.5, 580.0], [65.6, 581.0], [65.7, 582.0], [65.8, 582.0], [65.9, 583.0], [66.0, 583.0], [66.1, 584.0], [66.2, 585.0], [66.3, 586.0], [66.4, 587.0], [66.5, 587.0], [66.6, 588.0], [66.7, 589.0], [66.8, 590.0], [66.9, 590.0], [67.0, 591.0], [67.1, 592.0], [67.2, 594.0], [67.3, 595.0], [67.4, 595.0], [67.5, 596.0], [67.6, 596.0], [67.7, 597.0], [67.8, 598.0], [67.9, 599.0], [68.0, 600.0], [68.1, 600.0], [68.2, 602.0], [68.3, 602.0], [68.4, 603.0], [68.5, 604.0], [68.6, 605.0], [68.7, 605.0], [68.8, 606.0], [68.9, 607.0], [69.0, 607.0], [69.1, 608.0], [69.2, 608.0], [69.3, 608.0], [69.4, 609.0], [69.5, 610.0], [69.6, 610.0], [69.7, 611.0], [69.8, 612.0], [69.9, 612.0], [70.0, 613.0], [70.1, 613.0], [70.2, 614.0], [70.3, 614.0], [70.4, 615.0], [70.5, 615.0], [70.6, 616.0], [70.7, 616.0], [70.8, 617.0], [70.9, 618.0], [71.0, 619.0], [71.1, 620.0], [71.2, 620.0], [71.3, 621.0], [71.4, 621.0], [71.5, 622.0], [71.6, 623.0], [71.7, 624.0], [71.8, 624.0], [71.9, 625.0], [72.0, 625.0], [72.1, 626.0], [72.2, 626.0], [72.3, 627.0], [72.4, 627.0], [72.5, 628.0], [72.6, 629.0], [72.7, 629.0], [72.8, 631.0], [72.9, 633.0], [73.0, 634.0], [73.1, 635.0], [73.2, 636.0], [73.3, 638.0], [73.4, 639.0], [73.5, 640.0], [73.6, 642.0], [73.7, 643.0], [73.8, 645.0], [73.9, 647.0], [74.0, 650.0], [74.1, 652.0], [74.2, 655.0], [74.3, 656.0], [74.4, 658.0], [74.5, 666.0], [74.6, 709.0], [74.7, 1033.0], [74.8, 1126.0], [74.9, 1293.0], [75.0, 1299.0], [75.1, 1302.0], [75.2, 1306.0], [75.3, 1306.0], [75.4, 1311.0], [75.5, 1314.0], [75.6, 1315.0], [75.7, 1317.0], [75.8, 1320.0], [75.9, 1322.0], [76.0, 1329.0], [76.1, 1340.0], [76.2, 1354.0], [76.3, 1359.0], [76.4, 1367.0], [76.5, 1371.0], [76.6, 1375.0], [76.7, 1378.0], [76.8, 1380.0], [76.9, 1383.0], [77.0, 1385.0], [77.1, 1387.0], [77.2, 1389.0], [77.3, 1392.0], [77.4, 1396.0], [77.5, 1400.0], [77.6, 1401.0], [77.7, 1407.0], [77.8, 1417.0], [77.9, 1425.0], [78.0, 1431.0], [78.1, 1435.0], [78.2, 1439.0], [78.3, 1441.0], [78.4, 1442.0], [78.5, 1445.0], [78.6, 1446.0], [78.7, 1449.0], [78.8, 1453.0], [78.9, 1456.0], [79.0, 1458.0], [79.1, 1462.0], [79.2, 1463.0], [79.3, 1464.0], [79.4, 1466.0], [79.5, 1467.0], [79.6, 1470.0], [79.7, 1473.0], [79.8, 1477.0], [79.9, 1481.0], [80.0, 1483.0], [80.1, 1486.0], [80.2, 1488.0], [80.3, 1491.0], [80.4, 1493.0], [80.5, 1496.0], [80.6, 1499.0], [80.7, 1503.0], [80.8, 1508.0], [80.9, 1511.0], [81.0, 1514.0], [81.1, 1517.0], [81.2, 1521.0], [81.3, 1525.0], [81.4, 1532.0], [81.5, 1536.0], [81.6, 1541.0], [81.7, 1545.0], [81.8, 1548.0], [81.9, 1557.0], [82.0, 1561.0], [82.1, 1568.0], [82.2, 1570.0], [82.3, 1573.0], [82.4, 1575.0], [82.5, 1578.0], [82.6, 1580.0], [82.7, 1582.0], [82.8, 1585.0], [82.9, 1588.0], [83.0, 1591.0], [83.1, 1594.0], [83.2, 1597.0], [83.3, 1614.0], [83.4, 1622.0], [83.5, 1632.0], [83.6, 1649.0], [83.7, 1653.0], [83.8, 1679.0], [83.9, 2431.0], [84.0, 2515.0], [84.1, 2607.0], [84.2, 2625.0], [84.3, 3046.0], [84.4, 3581.0], [84.5, 21012.0], [84.6, 21015.0], [84.7, 21016.0], [84.8, 21017.0], [84.9, 21018.0], [85.0, 21019.0], [85.1, 21020.0], [85.2, 21020.0], [85.3, 21021.0], [85.4, 21021.0], [85.5, 21022.0], [85.6, 21023.0], [85.7, 21024.0], [85.8, 21025.0], [85.9, 21025.0], [86.0, 21026.0], [86.1, 21027.0], [86.2, 21027.0], [86.3, 21028.0], [86.4, 21028.0], [86.5, 21028.0], [86.6, 21029.0], [86.7, 21029.0], [86.8, 21030.0], [86.9, 21030.0], [87.0, 21031.0], [87.1, 21031.0], [87.2, 21031.0], [87.3, 21032.0], [87.4, 21032.0], [87.5, 21032.0], [87.6, 21033.0], [87.7, 21033.0], [87.8, 21033.0], [87.9, 21034.0], [88.0, 21034.0], [88.1, 21034.0], [88.2, 21034.0], [88.3, 21035.0], [88.4, 21035.0], [88.5, 21035.0], [88.6, 21036.0], [88.7, 21036.0], [88.8, 21036.0], [88.9, 21036.0], [89.0, 21037.0], [89.1, 21037.0], [89.2, 21037.0], [89.3, 21037.0], [89.4, 21038.0], [89.5, 21038.0], [89.6, 21038.0], [89.7, 21038.0], [89.8, 21039.0], [89.9, 21039.0], [90.0, 21039.0], [90.1, 21039.0], [90.2, 21040.0], [90.3, 21040.0], [90.4, 21040.0], [90.5, 21040.0], [90.6, 21040.0], [90.7, 21041.0], [90.8, 21041.0], [90.9, 21041.0], [91.0, 21041.0], [91.1, 21041.0], [91.2, 21041.0], [91.3, 21042.0], [91.4, 21042.0], [91.5, 21042.0], [91.6, 21042.0], [91.7, 21042.0], [91.8, 21043.0], [91.9, 21043.0], [92.0, 21043.0], [92.1, 21043.0], [92.2, 21043.0], [92.3, 21044.0], [92.4, 21044.0], [92.5, 21044.0], [92.6, 21044.0], [92.7, 21044.0], [92.8, 21044.0], [92.9, 21044.0], [93.0, 21045.0], [93.1, 21045.0], [93.2, 21045.0], [93.3, 21045.0], [93.4, 21045.0], [93.5, 21046.0], [93.6, 21046.0], [93.7, 21046.0], [93.8, 21046.0], [93.9, 21046.0], [94.0, 21046.0], [94.1, 21047.0], [94.2, 21047.0], [94.3, 21047.0], [94.4, 21047.0], [94.5, 21047.0], [94.6, 21047.0], [94.7, 21048.0], [94.8, 21048.0], [94.9, 21048.0], [95.0, 21048.0], [95.1, 21048.0], [95.2, 21049.0], [95.3, 21049.0], [95.4, 21049.0], [95.5, 21049.0], [95.6, 21050.0], [95.7, 21050.0], [95.8, 21050.0], [95.9, 21050.0], [96.0, 21050.0], [96.1, 21051.0], [96.2, 21051.0], [96.3, 21051.0], [96.4, 21051.0], [96.5, 21052.0], [96.6, 21052.0], [96.7, 21052.0], [96.8, 21053.0], [96.9, 21053.0], [97.0, 21054.0], [97.1, 21054.0], [97.2, 21054.0], [97.3, 21055.0], [97.4, 21055.0], [97.5, 21056.0], [97.6, 21056.0], [97.7, 21056.0], [97.8, 21057.0], [97.9, 21057.0], [98.0, 21058.0], [98.1, 21058.0], [98.2, 21059.0], [98.3, 21059.0], [98.4, 21060.0], [98.5, 21060.0], [98.6, 21061.0], [98.7, 21061.0], [98.8, 21062.0], [98.9, 21063.0], [99.0, 21064.0], [99.1, 21064.0], [99.2, 21065.0], [99.3, 21066.0], [99.4, 21067.0], [99.5, 21069.0], [99.6, 21071.0], [99.7, 21073.0], [99.8, 21077.0], [99.9, 21083.0], [100.0, 21106.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[0.0, 12059.0], [0.1, 12059.0], [0.2, 12059.0], [0.3, 12061.0], [0.4, 12061.0], [0.5, 12063.0], [0.6, 12063.0], [0.7, 12064.0], [0.8, 12064.0], [0.9, 12064.0], [1.0, 12064.0], [1.1, 12064.0], [1.2, 12065.0], [1.3, 12065.0], [1.4, 12065.0], [1.5, 12065.0], [1.6, 12066.0], [1.7, 12066.0], [1.8, 12066.0], [1.9, 12066.0], [2.0, 12066.0], [2.1, 12066.0], [2.2, 12066.0], [2.3, 12066.0], [2.4, 12066.0], [2.5, 12067.0], [2.6, 12067.0], [2.7, 12067.0], [2.8, 12067.0], [2.9, 12067.0], [3.0, 12067.0], [3.1, 12067.0], [3.2, 12067.0], [3.3, 12067.0], [3.4, 12067.0], [3.5, 12067.0], [3.6, 12069.0], [3.7, 12069.0], [3.8, 12069.0], [3.9, 12069.0], [4.0, 12071.0], [4.1, 12071.0], [4.2, 12071.0], [4.3, 12071.0], [4.4, 12071.0], [4.5, 12071.0], [4.6, 12071.0], [4.7, 12071.0], [4.8, 12071.0], [4.9, 12072.0], [5.0, 12072.0], [5.1, 12072.0], [5.2, 12072.0], [5.3, 12072.0], [5.4, 12072.0], [5.5, 12072.0], [5.6, 12073.0], [5.7, 12073.0], [5.8, 12073.0], [5.9, 12073.0], [6.0, 12073.0], [6.1, 12073.0], [6.2, 12073.0], [6.3, 12074.0], [6.4, 12074.0], [6.5, 12074.0], [6.6, 12074.0], [6.7, 12075.0], [6.8, 12075.0], [6.9, 12076.0], [7.0, 12076.0], [7.1, 12076.0], [7.2, 12077.0], [7.3, 12077.0], [7.4, 12078.0], [7.5, 12078.0], [7.6, 12078.0], [7.7, 12078.0], [7.8, 12081.0], [7.9, 12081.0], [8.0, 12081.0], [8.1, 12081.0], [8.2, 12081.0], [8.3, 12083.0], [8.4, 12083.0], [8.5, 12083.0], [8.6, 12083.0], [8.7, 12083.0], [8.8, 12083.0], [8.9, 12084.0], [9.0, 12084.0], [9.1, 12084.0], [9.2, 12085.0], [9.3, 12085.0], [9.4, 12085.0], [9.5, 12085.0], [9.6, 12085.0], [9.7, 12085.0], [9.8, 12085.0], [9.9, 12085.0], [10.0, 12085.0], [10.1, 12085.0], [10.2, 12085.0], [10.3, 12085.0], [10.4, 12085.0], [10.5, 12087.0], [10.6, 12087.0], [10.7, 12087.0], [10.8, 12087.0], [10.9, 12088.0], [11.0, 12088.0], [11.1, 12088.0], [11.2, 12089.0], [11.3, 12089.0], [11.4, 12089.0], [11.5, 12089.0], [11.6, 12089.0], [11.7, 12089.0], [11.8, 12089.0], [11.9, 12089.0], [12.0, 12090.0], [12.1, 12090.0], [12.2, 12090.0], [12.3, 12090.0], [12.4, 12090.0], [12.5, 12090.0], [12.6, 12090.0], [12.7, 12090.0], [12.8, 12090.0], [12.9, 12090.0], [13.0, 12090.0], [13.1, 12090.0], [13.2, 12090.0], [13.3, 12090.0], [13.4, 12091.0], [13.5, 12091.0], [13.6, 12091.0], [13.7, 12091.0], [13.8, 12091.0], [13.9, 12091.0], [14.0, 12091.0], [14.1, 12091.0], [14.2, 12091.0], [14.3, 12092.0], [14.4, 12092.0], [14.5, 12092.0], [14.6, 12092.0], [14.7, 12092.0], [14.8, 12092.0], [14.9, 12093.0], [15.0, 12093.0], [15.1, 12093.0], [15.2, 12093.0], [15.3, 12093.0], [15.4, 12093.0], [15.5, 12093.0], [15.6, 12094.0], [15.7, 12094.0], [15.8, 12094.0], [15.9, 12094.0], [16.0, 12094.0], [16.1, 12094.0], [16.2, 12094.0], [16.3, 12095.0], [16.4, 12095.0], [16.5, 12095.0], [16.6, 12095.0], [16.7, 12096.0], [16.8, 12096.0], [16.9, 12097.0], [17.0, 12097.0], [17.1, 12097.0], [17.2, 12097.0], [17.3, 12097.0], [17.4, 12097.0], [17.5, 12097.0], [17.6, 12098.0], [17.7, 12098.0], [17.8, 12098.0], [17.9, 12098.0], [18.0, 12098.0], [18.1, 12098.0], [18.2, 12098.0], [18.3, 12099.0], [18.4, 12099.0], [18.5, 12100.0], [18.6, 12100.0], [18.7, 12100.0], [18.8, 12100.0], [18.9, 12102.0], [19.0, 12102.0], [19.1, 12102.0], [19.2, 12102.0], [19.3, 12102.0], [19.4, 12103.0], [19.5, 12103.0], [19.6, 12105.0], [19.7, 12105.0], [19.8, 12105.0], [19.9, 12105.0], [20.0, 12106.0], [20.1, 12106.0], [20.2, 12106.0], [20.3, 12106.0], [20.4, 12106.0], [20.5, 12107.0], [20.6, 12107.0], [20.7, 12109.0], [20.8, 12109.0], [20.9, 12110.0], [21.0, 12110.0], [21.1, 12110.0], [21.2, 12111.0], [21.3, 12111.0], [21.4, 12112.0], [21.5, 12112.0], [21.6, 12112.0], [21.7, 12112.0], [21.8, 12112.0], [21.9, 12112.0], [22.0, 12113.0], [22.1, 12113.0], [22.2, 12113.0], [22.3, 12113.0], [22.4, 12113.0], [22.5, 12114.0], [22.6, 12114.0], [22.7, 12114.0], [22.8, 12114.0], [22.9, 12114.0], [23.0, 12114.0], [23.1, 12114.0], [23.2, 12115.0], [23.3, 12115.0], [23.4, 12115.0], [23.5, 12115.0], [23.6, 12115.0], [23.7, 12115.0], [23.8, 12116.0], [23.9, 12116.0], [24.0, 12116.0], [24.1, 12116.0], [24.2, 12116.0], [24.3, 12116.0], [24.4, 12116.0], [24.5, 12116.0], [24.6, 12116.0], [24.7, 12116.0], [24.8, 12116.0], [24.9, 12117.0], [25.0, 12117.0], [25.1, 12117.0], [25.2, 12120.0], [25.3, 12120.0], [25.4, 12120.0], [25.5, 12120.0], [25.6, 12120.0], [25.7, 12120.0], [25.8, 12120.0], [25.9, 12120.0], [26.0, 12120.0], [26.1, 12120.0], [26.2, 12120.0], [26.3, 12121.0], [26.4, 12121.0], [26.5, 12121.0], [26.6, 12121.0], [26.7, 12123.0], [26.8, 12123.0], [26.9, 12123.0], [27.0, 12123.0], [27.1, 12123.0], [27.2, 12124.0], [27.3, 12124.0], [27.4, 12124.0], [27.5, 12124.0], [27.6, 12124.0], [27.7, 12124.0], [27.8, 12126.0], [27.9, 12126.0], [28.0, 12128.0], [28.1, 12128.0], [28.2, 12128.0], [28.3, 12129.0], [28.4, 12129.0], [28.5, 12129.0], [28.6, 12129.0], [28.7, 12131.0], [28.8, 12131.0], [28.9, 12132.0], [29.0, 12132.0], [29.1, 12132.0], [29.2, 12132.0], [29.3, 12132.0], [29.4, 12134.0], [29.5, 12134.0], [29.6, 12134.0], [29.7, 12134.0], [29.8, 12134.0], [29.9, 12134.0], [30.0, 12135.0], [30.1, 12135.0], [30.2, 12135.0], [30.3, 12135.0], [30.4, 12135.0], [30.5, 12136.0], [30.6, 12136.0], [30.7, 12136.0], [30.8, 12136.0], [30.9, 12137.0], [31.0, 12137.0], [31.1, 12137.0], [31.2, 12137.0], [31.3, 12137.0], [31.4, 12138.0], [31.5, 12138.0], [31.6, 12138.0], [31.7, 12138.0], [31.8, 12138.0], [31.9, 12138.0], [32.0, 12139.0], [32.1, 12139.0], [32.2, 12139.0], [32.3, 12140.0], [32.4, 12140.0], [32.5, 12140.0], [32.6, 12140.0], [32.7, 12141.0], [32.8, 12141.0], [32.9, 12141.0], [33.0, 12141.0], [33.1, 12141.0], [33.2, 12142.0], [33.3, 12142.0], [33.4, 12142.0], [33.5, 12142.0], [33.6, 12142.0], [33.7, 12142.0], [33.8, 12143.0], [33.9, 12143.0], [34.0, 12143.0], [34.1, 12143.0], [34.2, 12143.0], [34.3, 12144.0], [34.4, 12144.0], [34.5, 12144.0], [34.6, 12144.0], [34.7, 12144.0], [34.8, 12144.0], [34.9, 12144.0], [35.0, 12144.0], [35.1, 12144.0], [35.2, 12144.0], [35.3, 12144.0], [35.4, 12144.0], [35.5, 12144.0], [35.6, 12145.0], [35.7, 12145.0], [35.8, 12145.0], [35.9, 12145.0], [36.0, 12145.0], [36.1, 12145.0], [36.2, 12145.0], [36.3, 12145.0], [36.4, 12145.0], [36.5, 12145.0], [36.6, 12145.0], [36.7, 12145.0], [36.8, 12145.0], [36.9, 12145.0], [37.0, 12145.0], [37.1, 12145.0], [37.2, 12145.0], [37.3, 12145.0], [37.4, 12145.0], [37.5, 12145.0], [37.6, 12146.0], [37.7, 12146.0], [37.8, 12146.0], [37.9, 12146.0], [38.0, 12146.0], [38.1, 12146.0], [38.2, 12146.0], [38.3, 12146.0], [38.4, 12146.0], [38.5, 12146.0], [38.6, 12146.0], [38.7, 12147.0], [38.8, 12147.0], [38.9, 12147.0], [39.0, 12147.0], [39.1, 12147.0], [39.2, 12147.0], [39.3, 12147.0], [39.4, 12148.0], [39.5, 12148.0], [39.6, 12148.0], [39.7, 12148.0], [39.8, 12148.0], [39.9, 12148.0], [40.0, 12148.0], [40.1, 12148.0], [40.2, 12148.0], [40.3, 12149.0], [40.4, 12149.0], [40.5, 12149.0], [40.6, 12149.0], [40.7, 12149.0], [40.8, 12149.0], [40.9, 12149.0], [41.0, 12149.0], [41.1, 12149.0], [41.2, 12149.0], [41.3, 12149.0], [41.4, 12149.0], [41.5, 12149.0], [41.6, 12150.0], [41.7, 12150.0], [41.8, 12151.0], [41.9, 12151.0], [42.0, 12151.0], [42.1, 12151.0], [42.2, 12151.0], [42.3, 12151.0], [42.4, 12151.0], [42.5, 12151.0], [42.6, 12151.0], [42.7, 12151.0], [42.8, 12151.0], [42.9, 12153.0], [43.0, 12153.0], [43.1, 12153.0], [43.2, 12153.0], [43.3, 12153.0], [43.4, 12154.0], [43.5, 12154.0], [43.6, 12154.0], [43.7, 12154.0], [43.8, 12155.0], [43.9, 12155.0], [44.0, 12156.0], [44.1, 12156.0], [44.2, 12156.0], [44.3, 12156.0], [44.4, 12156.0], [44.5, 12158.0], [44.6, 12158.0], [44.7, 12158.0], [44.8, 12158.0], [44.9, 12159.0], [45.0, 12159.0], [45.1, 12159.0], [45.2, 12160.0], [45.3, 12160.0], [45.4, 12160.0], [45.5, 12160.0], [45.6, 12160.0], [45.7, 12160.0], [45.8, 12161.0], [45.9, 12161.0], [46.0, 12161.0], [46.1, 12161.0], [46.2, 12161.0], [46.3, 12162.0], [46.4, 12162.0], [46.5, 12162.0], [46.6, 12162.0], [46.7, 12163.0], [46.8, 12163.0], [46.9, 12165.0], [47.0, 12165.0], [47.1, 12165.0], [47.2, 12165.0], [47.3, 12165.0], [47.4, 12166.0], [47.5, 12166.0], [47.6, 12166.0], [47.7, 12166.0], [47.8, 12166.0], [47.9, 12166.0], [48.0, 12168.0], [48.1, 12168.0], [48.2, 12168.0], [48.3, 12171.0], [48.4, 12171.0], [48.5, 12172.0], [48.6, 12172.0], [48.7, 12172.0], [48.8, 12172.0], [48.9, 12174.0], [49.0, 12174.0], [49.1, 12174.0], [49.2, 12181.0], [49.3, 12181.0], [49.4, 12181.0], [49.5, 12181.0], [49.6, 12182.0], [49.7, 12182.0], [49.8, 12190.0], [49.9, 12190.0], [50.0, 12193.0], [50.1, 12193.0], [50.2, 12193.0], [50.3, 12194.0], [50.4, 12194.0], [50.5, 12196.0], [50.6, 12196.0], [50.7, 12203.0], [50.8, 12203.0], [50.9, 12203.0], [51.0, 12203.0], [51.1, 12203.0], [51.2, 12205.0], [51.3, 12205.0], [51.4, 12206.0], [51.5, 12206.0], [51.6, 12206.0], [51.7, 12206.0], [51.8, 12206.0], [51.9, 12206.0], [52.0, 12207.0], [52.1, 12207.0], [52.2, 12207.0], [52.3, 12208.0], [52.4, 12208.0], [52.5, 12211.0], [52.6, 12211.0], [52.7, 12214.0], [52.8, 12214.0], [52.9, 12216.0], [53.0, 12216.0], [53.1, 12216.0], [53.2, 12217.0], [53.3, 12217.0], [53.4, 12217.0], [53.5, 12217.0], [53.6, 12218.0], [53.7, 12218.0], [53.8, 12221.0], [53.9, 12221.0], [54.0, 12225.0], [54.1, 12225.0], [54.2, 12225.0], [54.3, 12227.0], [54.4, 12227.0], [54.5, 12229.0], [54.6, 12229.0], [54.7, 12230.0], [54.8, 12230.0], [54.9, 12230.0], [55.0, 12230.0], [55.1, 12230.0], [55.2, 12231.0], [55.3, 12231.0], [55.4, 12237.0], [55.5, 12237.0], [55.6, 12237.0], [55.7, 12237.0], [55.8, 12239.0], [55.9, 12239.0], [56.0, 12241.0], [56.1, 12241.0], [56.2, 12241.0], [56.3, 12243.0], [56.4, 12243.0], [56.5, 12243.0], [56.6, 12243.0], [56.7, 12246.0], [56.8, 12246.0], [56.9, 12250.0], [57.0, 12250.0], [57.1, 12250.0], [57.2, 12251.0], [57.3, 12251.0], [57.4, 12253.0], [57.5, 12253.0], [57.6, 12253.0], [57.7, 12253.0], [57.8, 12254.0], [57.9, 12254.0], [58.0, 12254.0], [58.1, 12254.0], [58.2, 12254.0], [58.3, 12255.0], [58.4, 12255.0], [58.5, 12257.0], [58.6, 12257.0], [58.7, 12259.0], [58.8, 12259.0], [58.9, 12262.0], [59.0, 12262.0], [59.1, 12262.0], [59.2, 12267.0], [59.3, 12267.0], [59.4, 12267.0], [59.5, 12267.0], [59.6, 12268.0], [59.7, 12268.0], [59.8, 12268.0], [59.9, 12268.0], [60.0, 12275.0], [60.1, 12275.0], [60.2, 12275.0], [60.3, 12276.0], [60.4, 12276.0], [60.5, 12279.0], [60.6, 12279.0], [60.7, 12280.0], [60.8, 12280.0], [60.9, 12282.0], [61.0, 12282.0], [61.1, 12282.0], [61.2, 12285.0], [61.3, 12285.0], [61.4, 12289.0], [61.5, 12289.0], [61.6, 12290.0], [61.7, 12290.0], [61.8, 12294.0], [61.9, 12294.0], [62.0, 12295.0], [62.1, 12295.0], [62.2, 12295.0], [62.3, 12300.0], [62.4, 12300.0], [62.5, 12301.0], [62.6, 12301.0], [62.7, 12306.0], [62.8, 12306.0], [62.9, 12311.0], [63.0, 12311.0], [63.1, 12311.0], [63.2, 12315.0], [63.3, 12315.0], [63.4, 12320.0], [63.5, 12320.0], [63.6, 12321.0], [63.7, 12321.0], [63.8, 12321.0], [63.9, 12321.0], [64.0, 12321.0], [64.1, 12321.0], [64.2, 12321.0], [64.3, 12324.0], [64.4, 12324.0], [64.5, 12326.0], [64.6, 12326.0], [64.7, 12327.0], [64.8, 12327.0], [64.9, 12327.0], [65.0, 12327.0], [65.1, 12327.0], [65.2, 12328.0], [65.3, 12328.0], [65.4, 12330.0], [65.5, 12330.0], [65.6, 12330.0], [65.7, 12330.0], [65.8, 12337.0], [65.9, 12337.0], [66.0, 12338.0], [66.1, 12338.0], [66.2, 12338.0], [66.3, 12339.0], [66.4, 12339.0], [66.5, 12340.0], [66.6, 12340.0], [66.7, 12340.0], [66.8, 12340.0], [66.9, 12342.0], [67.0, 12342.0], [67.1, 12342.0], [67.2, 12347.0], [67.3, 12347.0], [67.4, 12349.0], [67.5, 12349.0], [67.6, 12349.0], [67.7, 12349.0], [67.8, 12351.0], [67.9, 12351.0], [68.0, 12351.0], [68.1, 12351.0], [68.2, 12351.0], [68.3, 12352.0], [68.4, 12352.0], [68.5, 12352.0], [68.6, 12352.0], [68.7, 12354.0], [68.8, 12354.0], [68.9, 12358.0], [69.0, 12358.0], [69.1, 12358.0], [69.2, 12359.0], [69.3, 12359.0], [69.4, 12359.0], [69.5, 12359.0], [69.6, 12360.0], [69.7, 12360.0], [69.8, 12361.0], [69.9, 12361.0], [70.0, 12365.0], [70.1, 12365.0], [70.2, 12365.0], [70.3, 12366.0], [70.4, 12366.0], [70.5, 12371.0], [70.6, 12371.0], [70.7, 12371.0], [70.8, 12371.0], [70.9, 12375.0], [71.0, 12375.0], [71.1, 12375.0], [71.2, 12376.0], [71.3, 12376.0], [71.4, 12376.0], [71.5, 12376.0], [71.6, 12380.0], [71.7, 12380.0], [71.8, 12383.0], [71.9, 12383.0], [72.0, 12384.0], [72.1, 12384.0], [72.2, 12384.0], [72.3, 12384.0], [72.4, 12384.0], [72.5, 12393.0], [72.6, 12393.0], [72.7, 12393.0], [72.8, 12393.0], [72.9, 12394.0], [73.0, 12394.0], [73.1, 12394.0], [73.2, 12395.0], [73.3, 12395.0], [73.4, 12398.0], [73.5, 12398.0], [73.6, 12398.0], [73.7, 12398.0], [73.8, 12399.0], [73.9, 12399.0], [74.0, 12399.0], [74.1, 12402.0], [74.2, 12402.0], [74.3, 12408.0], [74.4, 12408.0], [74.5, 12410.0], [74.6, 12410.0], [74.7, 12410.0], [74.8, 12410.0], [74.9, 12411.0], [75.0, 12411.0], [75.1, 12411.0], [75.2, 12412.0], [75.3, 12412.0], [75.4, 12421.0], [75.5, 12421.0], [75.6, 12423.0], [75.7, 12423.0], [75.8, 12426.0], [75.9, 12426.0], [76.0, 12426.0], [76.1, 12429.0], [76.2, 12429.0], [76.3, 12430.0], [76.4, 12430.0], [76.5, 12431.0], [76.6, 12431.0], [76.7, 12433.0], [76.8, 12433.0], [76.9, 12433.0], [77.0, 12433.0], [77.1, 12433.0], [77.2, 12434.0], [77.3, 12434.0], [77.4, 12434.0], [77.5, 12434.0], [77.6, 12436.0], [77.7, 12436.0], [77.8, 12436.0], [77.9, 12436.0], [78.0, 12436.0], [78.1, 12438.0], [78.2, 12438.0], [78.3, 12441.0], [78.4, 12441.0], [78.5, 12442.0], [78.6, 12442.0], [78.7, 12442.0], [78.8, 12442.0], [78.9, 12445.0], [79.0, 12445.0], [79.1, 12445.0], [79.2, 12445.0], [79.3, 12445.0], [79.4, 12446.0], [79.5, 12446.0], [79.6, 12447.0], [79.7, 12447.0], [79.8, 12447.0], [79.9, 12447.0], [80.0, 12447.0], [80.1, 12448.0], [80.2, 12448.0], [80.3, 12449.0], [80.4, 12449.0], [80.5, 12455.0], [80.6, 12455.0], [80.7, 12455.0], [80.8, 12455.0], [80.9, 12466.0], [81.0, 12466.0], [81.1, 12466.0], [81.2, 12474.0], [81.3, 12474.0], [81.4, 12476.0], [81.5, 12476.0], [81.6, 12476.0], [81.7, 12476.0], [81.8, 12478.0], [81.9, 12478.0], [82.0, 12478.0], [82.1, 12483.0], [82.2, 12483.0], [82.3, 12489.0], [82.4, 12489.0], [82.5, 12489.0], [82.6, 12489.0], [82.7, 12490.0], [82.8, 12490.0], [82.9, 12491.0], [83.0, 12491.0], [83.1, 12491.0], [83.2, 12492.0], [83.3, 12492.0], [83.4, 12493.0], [83.5, 12493.0], [83.6, 12495.0], [83.7, 12495.0], [83.8, 12495.0], [83.9, 12495.0], [84.0, 12495.0], [84.1, 12496.0], [84.2, 12496.0], [84.3, 12497.0], [84.4, 12497.0], [84.5, 12498.0], [84.6, 12498.0], [84.7, 12500.0], [84.8, 12500.0], [84.9, 12502.0], [85.0, 12502.0], [85.1, 12502.0], [85.2, 12504.0], [85.3, 12504.0], [85.4, 12504.0], [85.5, 12504.0], [85.6, 12506.0], [85.7, 12506.0], [85.8, 12507.0], [85.9, 12507.0], [86.0, 12507.0], [86.1, 12508.0], [86.2, 12508.0], [86.3, 12508.0], [86.4, 12508.0], [86.5, 12510.0], [86.6, 12510.0], [86.7, 12513.0], [86.8, 12513.0], [86.9, 12516.0], [87.0, 12516.0], [87.1, 12516.0], [87.2, 12518.0], [87.3, 12518.0], [87.4, 12518.0], [87.5, 12518.0], [87.6, 12521.0], [87.7, 12521.0], [87.8, 12524.0], [87.9, 12524.0], [88.0, 12524.0], [88.1, 12525.0], [88.2, 12525.0], [88.3, 12527.0], [88.4, 12527.0], [88.5, 12528.0], [88.6, 12528.0], [88.7, 12528.0], [88.8, 12528.0], [88.9, 12532.0], [89.0, 12532.0], [89.1, 12532.0], [89.2, 12535.0], [89.3, 12535.0], [89.4, 12536.0], [89.5, 12536.0], [89.6, 12544.0], [89.7, 12544.0], [89.8, 12547.0], [89.9, 12547.0], [90.0, 12547.0], [90.1, 12550.0], [90.2, 12550.0], [90.3, 12550.0], [90.4, 12550.0], [90.5, 12551.0], [90.6, 12551.0], [90.7, 12553.0], [90.8, 12553.0], [90.9, 12558.0], [91.0, 12558.0], [91.1, 12558.0], [91.2, 12560.0], [91.3, 12560.0], [91.4, 12565.0], [91.5, 12565.0], [91.6, 12565.0], [91.7, 12565.0], [91.8, 12567.0], [91.9, 12567.0], [92.0, 12567.0], [92.1, 12567.0], [92.2, 12567.0], [92.3, 12568.0], [92.4, 12568.0], [92.5, 12569.0], [92.6, 12569.0], [92.7, 12569.0], [92.8, 12569.0], [92.9, 12572.0], [93.0, 12572.0], [93.1, 12572.0], [93.2, 12575.0], [93.3, 12575.0], [93.4, 12577.0], [93.5, 12577.0], [93.6, 12579.0], [93.7, 12579.0], [93.8, 12580.0], [93.9, 12580.0], [94.0, 12580.0], [94.1, 12584.0], [94.2, 12584.0], [94.3, 12588.0], [94.4, 12588.0], [94.5, 12588.0], [94.6, 12588.0], [94.7, 12592.0], [94.8, 12592.0], [94.9, 12592.0], [95.0, 12592.0], [95.1, 12592.0], [95.2, 12594.0], [95.3, 12594.0], [95.4, 12594.0], [95.5, 12594.0], [95.6, 12595.0], [95.7, 12595.0], [95.8, 12599.0], [95.9, 12599.0], [96.0, 12599.0], [96.1, 12599.0], [96.2, 12599.0], [96.3, 12601.0], [96.4, 12601.0], [96.5, 12601.0], [96.6, 12601.0], [96.7, 12603.0], [96.8, 12603.0], [96.9, 12604.0], [97.0, 12604.0], [97.1, 12604.0], [97.2, 12606.0], [97.3, 12606.0], [97.4, 12606.0], [97.5, 12606.0], [97.6, 12606.0], [97.7, 12606.0], [97.8, 12606.0], [97.9, 12606.0], [98.0, 12606.0], [98.1, 12607.0], [98.2, 12607.0], [98.3, 12611.0], [98.4, 12611.0], [98.5, 12640.0], [98.6, 12640.0], [98.7, 12642.0], [98.8, 12642.0], [98.9, 12644.0], [99.0, 12644.0], [99.1, 12644.0], [99.2, 12648.0], [99.3, 12648.0], [99.4, 12656.0], [99.5, 12656.0], [99.6, 12662.0], [99.7, 12662.0], [99.8, 12688.0], [99.9, 12688.0], [100.0, 12688.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 6477.0, "series": [{"data": [[60000.0, 684.0], [60100.0, 16.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[0.0, 327.0], [600.0, 1495.0], [700.0, 22.0], [15000.0, 3.0], [1000.0, 21.0], [1100.0, 8.0], [1200.0, 46.0], [1300.0, 562.0], [21000.0, 3516.0], [21100.0, 3.0], [1400.0, 709.0], [1500.0, 588.0], [100.0, 386.0], [1600.0, 135.0], [2300.0, 12.0], [2400.0, 31.0], [2500.0, 12.0], [2600.0, 42.0], [3000.0, 22.0], [3100.0, 2.0], [200.0, 828.0], [3200.0, 2.0], [3400.0, 1.0], [3500.0, 22.0], [3600.0, 2.0], [300.0, 1978.0], [400.0, 5420.0], [7000.0, 1.0], [500.0, 6477.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[12200.0, 52.0], [12100.0, 145.0], [12000.0, 83.0], [12500.0, 52.0], [12300.0, 53.0], [12400.0, 48.0], [12600.0, 17.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 332.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 100ms"], [1, "Requests having \nresponse time > 100ms and <= 1,000ms"], [2, "Requests having \nresponse time > 1,000ms"], [3, "Requests in error"]], "maxY": 16601.0, "series": [{"data": [[0.0, 332.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 100ms", "isController": false}, {"data": [[1.0, 16601.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 100ms and <= 1,000ms", "isController": false}, {"data": [[2.0, 3371.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,000ms", "isController": false}, {"data": [[3.0, 3519.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 232.13555555555573, "minX": 1.6192992E12, "maxY": 700.0, "series": [{"data": [[1.61929926E12, 352.36428571428587]], "isOverall": false, "label": "LB_ver2_Join&Wait", "isController": false}, {"data": [[1.6192992E12, 232.13555555555573]], "isOverall": false, "label": "LB_ver2_CreateRoom", "isController": false}, {"data": [[1.61929932E12, 365.8797814207649], [1.6192992E12, 682.4047379032276], [1.61929926E12, 700.0]], "isOverall": false, "label": "LB_ver2_Join&Ready", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61929932E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.0, "maxY": 60109.0, "series": [{"data": [[715.0, 60035.66666666667], [762.0, 60029.5], [754.0, 60029.0], [765.0, 60028.5], [767.0, 60029.5], [753.0, 60028.0], [752.0, 60028.0], [763.0, 60028.0], [760.0, 60028.5], [743.0, 60042.09999999999], [742.0, 60042.33333333334], [741.0, 60038.11111111111], [751.0, 60028.0], [750.0, 60029.0], [749.0, 60028.0], [748.0, 60028.0], [747.0, 60026.0], [746.0, 60035.0], [744.0, 60029.0], [758.0, 60029.0], [757.0, 60029.0], [756.0, 60033.0], [798.0, 60030.0], [788.0, 60027.5], [799.0, 60030.5], [784.0, 60028.0], [797.0, 60029.0], [793.0, 60028.5], [781.0, 60027.0], [769.0, 60030.0], [768.0, 60030.0], [771.0, 60030.0], [770.0, 60031.0], [775.0, 60029.0], [773.0, 60029.0], [779.0, 60027.0], [778.0, 60028.0], [777.0, 60027.0], [791.0, 60027.0], [790.0, 60029.0], [789.0, 60028.0], [786.0, 60028.0], [785.0, 60028.0], [807.0, 60033.0], [828.0, 60027.0], [829.0, 60027.0], [827.0, 60028.0], [821.0, 60029.7], [811.0, 60030.0], [810.0, 60032.0], [808.0, 60032.0], [804.0, 60033.0], [803.0, 60032.0], [802.0, 60031.0], [860.0, 60028.0], [863.0, 60028.0], [853.0, 60037.2], [852.0, 60036.5], [862.0, 60028.0], [861.0, 60028.0], [859.0, 60028.0], [858.0, 60028.0], [857.0, 60028.0], [856.0, 60028.0], [846.0, 60033.333333333336], [838.0, 60027.0], [837.0, 60031.0], [836.0, 60028.5], [835.0, 60030.0], [833.0, 60027.5], [845.0, 60031.8], [855.0, 60029.0], [854.0, 60028.0], [889.0, 60027.0], [894.0, 60027.5], [895.0, 60028.0], [883.0, 60029.0], [881.0, 60027.5], [885.0, 60028.0], [884.0, 60027.5], [892.0, 60027.0], [891.0, 60028.0], [890.0, 60027.0], [888.0, 60028.0], [871.0, 60026.5], [869.0, 60027.0], [868.0, 60028.0], [866.0, 60028.5], [864.0, 60028.0], [879.0, 60027.0], [878.0, 60027.0], [877.0, 60027.0], [876.0, 60027.0], [875.0, 60026.0], [874.0, 60026.0], [873.0, 60026.5], [887.0, 60028.0], [886.0, 60028.0], [924.0, 60028.0], [915.0, 60028.0], [927.0, 60027.666666666664], [912.0, 60027.0], [914.0, 60027.0], [913.0, 60028.0], [923.0, 60028.0], [922.0, 60028.0], [921.0, 60027.5], [902.0, 60027.5], [900.0, 60027.5], [898.0, 60028.0], [897.0, 60028.0], [896.0, 60028.0], [911.0, 60026.5], [909.0, 60026.0], [908.0, 60027.0], [907.0, 60029.0], [906.0, 60028.0], [905.0, 60028.0], [904.0, 60027.5], [919.0, 60027.5], [917.0, 60027.0], [916.0, 60028.0], [953.0, 60027.0], [958.0, 60027.0], [959.0, 60029.0], [946.0, 60029.0], [945.0, 60029.0], [957.0, 60028.0], [956.0, 60028.0], [955.0, 60027.5], [952.0, 60028.0], [935.0, 60028.5], [933.0, 60028.0], [932.0, 60028.0], [931.0, 60028.0], [930.0, 60028.0], [929.0, 60028.0], [928.0, 60028.0], [943.0, 60027.5], [941.0, 60027.0], [940.0, 60028.0], [939.0, 60028.0], [938.0, 60027.5], [936.0, 60029.0], [951.0, 60028.666666666664], [948.0, 60027.5], [985.0, 60026.666666666664], [990.0, 60028.0], [991.0, 60028.0], [976.0, 60027.0], [989.0, 60027.5], [987.0, 60027.0], [986.0, 60027.0], [975.0, 60027.0], [960.0, 60028.0], [963.0, 60027.5], [961.0, 60028.0], [967.0, 60027.5], [965.0, 60028.5], [974.0, 60027.0], [973.0, 60030.0], [972.0, 60029.0], [969.0, 60027.0], [968.0, 60027.0], [982.0, 60028.0], [980.0, 60028.0], [979.0, 60026.5], [977.0, 60027.0], [1021.0, 60028.0], [1012.0, 60027.0], [1023.0, 60028.5], [1009.0, 60028.0], [1008.0, 60027.0], [1020.0, 60028.75], [1016.0, 60027.0], [1007.0, 60027.0], [995.0, 60027.5], [993.0, 60027.5], [997.0, 60029.0], [996.0, 60028.0], [999.0, 60028.0], [998.0, 60027.0], [1006.0, 60027.0], [1005.0, 60030.25], [1004.0, 60034.0], [1000.0, 60027.0], [1015.0, 60028.0], [1014.0, 60027.0], [1013.0, 60027.0], [1011.0, 60028.0], [1010.0, 60027.0], [1075.0, 60030.0], [1084.0, 60028.0], [1087.0, 60026.0], [1057.0, 60027.0], [1059.0, 60028.0], [1058.0, 60028.0], [1062.0, 60028.0], [1061.0, 60027.0], [1065.0, 60027.5], [1063.0, 60028.0], [1068.0, 60028.0], [1067.0, 60028.0], [1071.0, 60029.0], [1069.0, 60030.0], [1086.0, 60028.0], [1085.0, 60027.0], [1083.0, 60028.0], [1082.0, 60027.0], [1081.0, 60028.0], [1080.0, 60029.0], [1079.0, 60030.0], [1078.0, 60029.0], [1077.0, 60031.5], [1074.0, 60029.0], [1073.0, 60029.5], [1055.0, 60027.0], [1026.0, 60029.333333333336], [1028.0, 60029.0], [1027.0, 60029.0], [1030.0, 60029.0], [1029.0, 60028.0], [1032.0, 60028.0], [1031.0, 60027.0], [1035.0, 60026.0], [1034.0, 60027.5], [1037.0, 60026.0], [1036.0, 60027.0], [1039.0, 60028.0], [1038.0, 60028.0], [1054.0, 60028.0], [1053.0, 60028.5], [1051.0, 60027.0], [1050.0, 60028.0], [1049.0, 60029.0], [1047.0, 60027.0], [1046.0, 60027.5], [1044.0, 60028.0], [1043.0, 60028.0], [1042.0, 60028.5], [1040.0, 60027.0], [1125.0, 60028.0], [1146.0, 60027.0], [1151.0, 60028.0], [1121.0, 60038.33333333333], [1124.0, 60027.0], [1122.0, 60035.0], [1126.0, 60027.0], [1129.0, 60029.0], [1128.0, 60027.5], [1132.0, 60028.0], [1131.0, 60028.5], [1134.0, 60030.0], [1133.0, 60029.0], [1150.0, 60028.0], [1148.0, 60027.5], [1145.0, 60028.0], [1144.0, 60028.0], [1143.0, 60028.0], [1142.0, 60029.0], [1141.0, 60027.5], [1139.0, 60027.0], [1138.0, 60028.0], [1137.0, 60026.0], [1136.0, 60025.5], [1103.0, 60029.0], [1102.0, 60031.0], [1098.0, 60031.0], [1097.0, 60030.0], [1094.0, 60029.0], [1093.0, 60028.333333333336], [1090.0, 60027.5], [1088.0, 60028.0], [1115.0, 60036.5], [1114.0, 60036.0], [1110.0, 60033.6], [1105.0, 60033.5], [1212.0, 60029.0], [1215.0, 60028.0], [1185.0, 60029.0], [1184.0, 60028.5], [1189.0, 60029.0], [1187.0, 60029.0], [1193.0, 60028.0], [1191.0, 60029.0], [1196.0, 60028.0], [1195.0, 60028.5], [1198.0, 60028.0], [1197.0, 60028.0], [1214.0, 60028.0], [1213.0, 60028.0], [1211.0, 60028.0], [1210.0, 60029.5], [1208.0, 60031.0], [1207.0, 60029.5], [1205.0, 60028.0], [1204.0, 60028.5], [1202.0, 60029.0], [1201.0, 60029.0], [1200.0, 60028.5], [1167.0, 60028.0], [1166.0, 60029.0], [1165.0, 60027.5], [1163.0, 60030.5], [1161.0, 60030.0], [1160.0, 60029.333333333336], [1157.0, 60028.0], [1156.0, 60032.0], [1155.0, 60028.5], [1153.0, 60028.0], [1152.0, 60028.0], [1182.0, 60028.0], [1181.0, 60028.0], [1180.0, 60028.5], [1178.0, 60028.0], [1177.0, 60028.0], [1176.0, 60028.0], [1175.0, 60028.5], [1173.0, 60028.0], [1172.0, 60028.0], [1171.0, 60028.0], [1170.0, 60029.0], [1168.0, 60028.0], [1271.0, 60037.2], [1254.0, 60033.333333333336], [1273.0, 60040.0], [1248.0, 60030.0], [1266.0, 60036.0], [1265.0, 60037.0], [1243.0, 60031.0], [1219.0, 60029.0], [1216.0, 60028.0], [1223.0, 60029.0], [1220.0, 60029.0], [1227.0, 60030.666666666664], [1224.0, 60030.0], [1242.0, 60031.5], [1240.0, 60030.0], [1239.0, 60028.5], [1237.0, 60030.0], [1236.0, 60038.75], [1232.0, 60032.8], [1263.0, 60035.8], [1258.0, 60035.666666666664], [1257.0, 60033.0], [1251.0, 60032.0], [1250.0, 60033.0], [1328.0, 60085.0], [1337.0, 60088.142857142855], [1330.0, 60076.0], [1329.0, 60065.25], [1313.0, 60038.666666666664], [1307.0, 60034.666666666664], [1282.0, 60047.77777777778], [1285.0, 60038.0], [1284.0, 60038.0], [1290.0, 60040.25], [1286.0, 60039.0], [1292.0, 60036.0], [1291.0, 60037.0], [1304.0, 60036.0], [1303.0, 60036.666666666664], [1300.0, 60037.333333333336], [1297.0, 60041.0], [1296.0, 60035.0], [1399.0, 60064.8], [1400.0, 60093.0], [1394.0, 60035.5], [1393.0, 60035.5], [1392.0, 60058.5], [1353.0, 60109.0], [1352.0, 60090.333333333336], [1348.0, 60074.45454545455], [1391.0, 60079.0], [1387.0, 60035.4], [1382.0, 60045.76923076923], [1381.0, 60033.0], [1368.0, 60095.0], [1367.0, 60076.444444444445], [1366.0, 60073.5], [1365.0, 60100.666666666664]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1052.3600000000006, 60035.41428571434]], "isOverall": false, "label": "JoinRoom&Wait-Aggregated", "isController": false}, {"data": [[2.0, 21034.0], [3.0, 21049.0], [4.0, 21048.0], [5.0, 21049.0], [6.0, 21048.0], [7.0, 21049.0], [8.0, 21050.0], [9.0, 21049.0], [10.0, 21050.0], [11.0, 21050.0], [12.0, 21065.0], [13.0, 21049.0], [14.0, 21049.0], [15.0, 21061.0], [17.0, 21046.0], [18.0, 21016.0], [19.0, 21009.0], [21.0, 21016.5], [22.0, 21038.0], [23.0, 21045.0], [24.0, 21028.0], [25.0, 21026.0], [26.0, 21041.0], [27.0, 21025.0], [28.0, 21026.0], [29.0, 21027.0], [30.0, 21026.0], [31.0, 21024.0], [33.0, 21023.0], [32.0, 21024.0], [35.0, 21039.0], [34.0, 21023.0], [37.0, 21040.0], [36.0, 21039.0], [39.0, 21055.0], [38.0, 21039.0], [41.0, 21046.0], [40.0, 21047.0], [43.0, 21043.0], [42.0, 21045.0], [44.0, 21044.0], [47.0, 21046.0], [46.0, 21045.0], [49.0, 21047.0], [48.0, 21047.0], [51.0, 21045.0], [50.0, 21044.0], [53.0, 21046.0], [52.0, 21046.0], [55.0, 21042.0], [54.0, 21043.0], [57.0, 21044.0], [56.0, 21047.0], [59.0, 21043.0], [58.0, 21045.0], [61.0, 21046.0], [60.0, 21046.0], [63.0, 21044.0], [62.0, 21045.0], [67.0, 21066.5], [65.0, 21044.0], [64.0, 21043.0], [71.0, 21061.0], [70.0, 21062.0], [69.0, 21059.5], [73.0, 21049.0], [72.0, 21063.0], [78.0, 21051.0], [77.0, 21045.0], [76.0, 21058.0], [83.0, 21048.0], [82.0, 21057.0], [81.0, 21060.0], [80.0, 21050.0], [87.0, 21046.0], [86.0, 21042.0], [85.0, 21062.0], [84.0, 21046.0], [91.0, 21041.0], [90.0, 21038.0], [89.0, 21040.0], [88.0, 21054.0], [95.0, 21060.0], [94.0, 21039.0], [93.0, 21040.0], [92.0, 21056.0], [99.0, 21061.0], [98.0, 21058.5], [96.0, 21044.0], [103.0, 21046.0], [102.0, 21059.0], [101.0, 21054.5], [107.0, 21039.0], [106.0, 21041.0], [105.0, 21057.0], [104.0, 21040.0], [111.0, 21040.0], [109.0, 21054.0], [108.0, 21055.0], [115.0, 21043.0], [114.0, 21042.0], [113.0, 21043.0], [112.0, 21041.0], [119.0, 21057.0], [118.0, 21040.0], [117.0, 21041.0], [116.0, 21042.0], [123.0, 21057.0], [122.0, 21053.0], [121.0, 21052.0], [120.0, 21057.0], [127.0, 21051.0], [126.0, 21049.0], [125.0, 21048.0], [124.0, 21054.0], [135.0, 21051.0], [134.0, 21046.0], [133.0, 21048.0], [132.0, 21050.0], [131.0, 21044.0], [130.0, 21051.0], [129.0, 21045.0], [128.0, 21056.0], [142.0, 21035.0], [141.0, 21034.0], [140.0, 21037.0], [139.0, 21037.0], [138.0, 21045.0], [137.0, 21045.0], [136.0, 21043.0], [151.0, 21048.0], [149.0, 21049.0], [148.0, 21050.0], [147.0, 21060.5], [145.0, 21035.0], [144.0, 21035.5], [159.0, 21048.0], [158.0, 21050.0], [157.0, 21049.0], [156.0, 21052.0], [155.0, 21054.0], [154.0, 21051.0], [153.0, 21050.666666666668], [167.0, 21047.0], [166.0, 21047.0], [165.0, 21040.0], [164.0, 21052.0], [163.0, 21043.0], [162.0, 21045.0], [161.0, 21056.0], [160.0, 21053.0], [175.0, 21034.0], [174.0, 21033.0], [173.0, 21034.0], [172.0, 21048.0], [171.0, 21044.0], [170.0, 21041.0], [169.0, 21047.0], [168.0, 21046.0], [183.0, 21045.0], [182.0, 21037.0], [181.0, 21041.5], [179.0, 21053.0], [178.0, 21047.0], [177.0, 21037.0], [176.0, 21039.0], [191.0, 21032.0], [190.0, 21045.0], [189.0, 21046.0], [188.0, 21033.0], [187.0, 21047.0], [186.0, 21046.0], [185.0, 21047.0], [184.0, 21046.0], [199.0, 21032.0], [198.0, 21031.0], [197.0, 21032.0], [196.0, 21032.0], [195.0, 21031.0], [194.0, 21031.0], [193.0, 21032.0], [192.0, 21031.0], [207.0, 21032.0], [206.0, 21034.0], [205.0, 21032.0], [204.0, 21032.0], [203.0, 21035.5], [201.0, 21032.0], [200.0, 21029.0], [215.0, 21047.0], [214.0, 21031.0], [213.0, 21031.0], [212.0, 21032.0], [211.0, 21028.0], [210.0, 21028.0], [209.0, 21030.0], [208.0, 21029.0], [223.0, 21041.0], [222.0, 21046.0], [221.0, 21046.0], [220.0, 21044.0], [219.0, 21047.0], [217.0, 21051.0], [216.0, 21036.0], [231.0, 21034.666666666668], [228.0, 21038.5], [226.0, 21045.0], [225.0, 21041.0], [224.0, 21042.0], [239.0, 21044.5], [237.0, 21051.0], [236.0, 21049.0], [235.0, 21041.0], [234.0, 21041.0], [233.0, 21030.0], [232.0, 21029.0], [247.0, 21044.0], [246.0, 21036.0], [245.0, 21049.0], [244.0, 21034.0], [243.0, 21034.0], [242.0, 21043.0], [240.0, 21053.0], [255.0, 21040.0], [254.0, 21046.0], [253.0, 21030.0], [252.0, 21043.0], [251.0, 21039.0], [250.0, 21043.0], [249.0, 21048.0], [248.0, 21035.0], [270.0, 21025.0], [271.0, 21032.0], [269.0, 21027.0], [268.0, 21030.0], [267.0, 21029.5], [265.0, 21032.0], [264.0, 21031.0], [263.0, 21029.0], [257.0, 21045.0], [256.0, 21037.0], [259.0, 21044.0], [258.0, 21037.0], [262.0, 21033.0], [261.0, 21026.0], [260.0, 21028.0], [286.0, 21027.0], [287.0, 21030.0], [285.0, 21029.666666666668], [275.0, 21031.0], [274.0, 21029.0], [273.0, 21039.0], [282.0, 21039.0], [281.0, 21028.0], [280.0, 21029.0], [279.0, 21044.0], [278.0, 21027.0], [277.0, 21029.0], [276.0, 21031.0], [300.0, 21065.0], [302.0, 21050.0], [303.0, 21050.0], [301.0, 21053.666666666668], [297.0, 21068.0], [296.0, 21098.0], [294.0, 21028.0], [289.0, 21028.0], [288.0, 21029.0], [291.0, 21028.0], [290.0, 21031.0], [293.0, 21029.0], [292.0, 21025.0], [318.0, 21056.0], [319.0, 21053.0], [317.0, 21046.0], [316.0, 21050.0], [315.0, 21048.0], [314.0, 21069.5], [312.0, 21070.0], [311.0, 21061.0], [305.0, 21047.0], [304.0, 21049.0], [307.0, 21057.0], [306.0, 21059.0], [310.0, 21051.0], [309.0, 21054.0], [308.0, 21062.0], [334.0, 21037.0], [335.0, 21037.0], [333.0, 21044.0], [332.0, 21044.0], [331.0, 21037.0], [330.0, 21054.0], [329.0, 21055.5], [327.0, 21055.0], [321.0, 21043.0], [320.0, 21053.0], [323.0, 21061.0], [322.0, 21050.0], [326.0, 21066.0], [325.0, 21046.5], [350.0, 21055.0], [351.0, 21065.0], [349.0, 21056.0], [348.0, 21051.0], [347.0, 21070.0], [346.0, 21071.0], [345.0, 21056.0], [344.0, 21078.0], [343.0, 21071.0], [337.0, 21046.0], [336.0, 21039.0], [339.0, 21039.0], [338.0, 21043.0], [342.0, 21060.0], [341.0, 21054.0], [340.0, 21076.0], [366.0, 21062.0], [367.0, 21042.0], [365.0, 21058.0], [364.0, 21046.0], [363.0, 21060.0], [362.0, 21069.0], [361.0, 21040.0], [360.0, 21066.0], [359.0, 21045.0], [353.0, 21068.0], [352.0, 21052.0], [355.0, 21047.0], [354.0, 21046.0], [358.0, 21067.0], [357.0, 21063.0], [356.0, 21044.0], [382.0, 21028.0], [383.0, 21036.0], [381.0, 21036.0], [380.0, 21052.0], [379.0, 21051.0], [378.0, 21038.0], [377.0, 21027.0], [376.0, 21060.0], [375.0, 21060.0], [369.0, 21041.0], [368.0, 21063.0], [371.0, 21064.0], [370.0, 21064.0], [374.0, 21032.0], [373.0, 21053.0], [372.0, 21032.0], [397.0, 21051.0], [398.0, 21049.0], [396.0, 21050.0], [387.0, 21057.0], [386.0, 21056.0], [384.0, 21058.0], [395.0, 21048.0], [394.0, 21034.0], [393.0, 21056.0], [392.0, 21035.0], [391.0, 21052.0], [390.0, 21054.0], [389.0, 21054.0], [388.0, 21052.0], [413.0, 21033.0], [414.0, 21031.0], [412.0, 21042.0], [403.0, 21046.5], [401.0, 21037.0], [400.0, 21043.5], [411.0, 21033.0], [410.0, 21045.0], [409.0, 21045.0], [408.0, 21048.0], [407.0, 21047.0], [406.0, 21035.0], [405.0, 21035.5], [430.0, 21033.0], [431.0, 21034.0], [429.0, 21047.0], [428.0, 21043.0], [427.0, 21048.0], [426.0, 21051.0], [425.0, 21048.0], [424.0, 21055.0], [423.0, 21054.0], [417.0, 21046.0], [416.0, 21054.0], [419.0, 21044.0], [418.0, 21056.0], [422.0, 21036.0], [421.0, 21056.0], [420.0, 21055.0], [445.0, 21040.0], [446.0, 21043.0], [444.0, 21037.0], [435.0, 21038.0], [434.0, 21042.0], [433.0, 21041.0], [443.0, 21026.0], [442.0, 21036.0], [441.0, 21040.0], [440.0, 21035.0], [439.0, 21041.0], [438.0, 21045.0], [437.0, 21030.0], [436.0, 21041.0], [460.0, 21046.666666666668], [462.0, 21047.0], [463.0, 21048.0], [461.0, 21046.0], [457.0, 21045.0], [456.0, 21052.0], [455.0, 21054.0], [449.0, 21044.0], [448.0, 21036.0], [451.0, 21047.0], [450.0, 21059.0], [454.0, 21057.0], [453.0, 21045.0], [452.0, 21047.0], [478.0, 21044.0], [479.0, 21042.0], [477.0, 21044.0], [476.0, 21046.0], [475.0, 21043.0], [474.0, 21047.0], [473.0, 21037.0], [472.0, 21037.0], [471.0, 21045.0], [467.0, 21045.5], [465.0, 21040.5], [470.0, 21043.0], [469.0, 21041.0], [468.0, 21040.0], [493.0, 21062.0], [495.0, 21053.5], [492.0, 21068.0], [483.0, 21046.0], [482.0, 21043.5], [480.0, 21042.0], [491.0, 21059.0], [490.0, 21066.0], [489.0, 21042.0], [488.0, 21041.0], [487.0, 21040.0], [486.0, 21040.0], [485.0, 21043.0], [484.0, 21042.0], [510.0, 21049.5], [511.0, 21056.0], [508.0, 21048.0], [498.0, 21058.0], [497.0, 21051.0], [496.0, 21060.0], [507.0, 21059.0], [506.0, 21049.0], [505.0, 21050.0], [504.0, 21049.0], [503.0, 21051.0], [502.0, 21046.0], [501.0, 21064.0], [500.0, 21054.0], [540.0, 21042.0], [543.0, 21052.0], [528.0, 21042.0], [530.0, 21041.0], [529.0, 21041.0], [532.0, 21040.0], [531.0, 21037.0], [542.0, 21044.0], [541.0, 21040.0], [539.0, 21038.0], [538.0, 21038.0], [537.0, 21039.0], [536.0, 21039.0], [526.0, 21038.0], [513.0, 21051.0], [512.0, 21044.0], [515.0, 21057.0], [514.0, 21053.0], [517.0, 21053.0], [516.0, 21043.0], [519.0, 21039.0], [518.0, 21055.0], [525.0, 21043.0], [524.0, 21042.0], [523.0, 21046.0], [522.0, 21045.0], [521.0, 21049.0], [520.0, 21039.0], [535.0, 21042.0], [534.0, 21042.0], [569.0, 21047.0], [574.0, 21038.0], [575.0, 21041.0], [561.0, 21053.0], [560.0, 21045.0], [563.0, 21041.0], [562.0, 21038.0], [565.0, 21053.0], [564.0, 21037.0], [573.0, 21041.0], [571.0, 21043.0], [570.0, 21032.0], [568.0, 21051.0], [551.0, 21044.0], [549.0, 21044.0], [548.0, 21043.0], [547.0, 21051.0], [546.0, 21048.0], [545.0, 21049.5], [559.0, 21052.0], [558.0, 21038.0], [557.0, 21054.0], [556.0, 21055.0], [555.0, 21059.0], [554.0, 21055.0], [553.0, 21045.0], [552.0, 21043.0], [567.0, 21040.0], [566.0, 21037.0], [601.0, 21039.0], [606.0, 21039.0], [607.0, 21038.0], [593.0, 21039.0], [592.0, 21039.0], [595.0, 21040.0], [594.0, 21037.0], [597.0, 21040.0], [596.0, 21040.0], [605.0, 21041.0], [603.0, 21037.0], [602.0, 21039.0], [600.0, 21040.0], [583.0, 21041.5], [581.0, 21034.0], [580.0, 21039.0], [579.0, 21040.0], [578.0, 21042.0], [577.0, 21039.0], [576.0, 21039.0], [591.0, 21039.0], [590.0, 21041.0], [589.0, 21037.0], [588.0, 21037.0], [587.0, 21038.0], [586.0, 21038.0], [585.0, 21041.0], [584.0, 21039.0], [599.0, 21040.0], [598.0, 21040.0], [633.0, 21041.0], [638.0, 21041.0], [639.0, 21026.0], [625.0, 21042.5], [627.0, 21043.0], [626.0, 21041.0], [629.0, 21057.0], [628.0, 21043.0], [637.0, 21033.5], [635.0, 21056.0], [634.0, 21042.0], [632.0, 21044.0], [615.0, 21058.0], [614.0, 21040.0], [613.0, 21058.0], [612.0, 21053.0], [611.0, 21039.0], [610.0, 21040.0], [609.0, 21039.0], [608.0, 21041.0], [623.0, 21055.0], [622.0, 21057.0], [621.0, 21041.0], [620.0, 21056.0], [619.0, 21039.0], [618.0, 21040.0], [617.0, 21056.0], [616.0, 21040.0], [631.0, 21042.0], [630.0, 21041.0], [665.0, 21046.0], [670.0, 21049.0], [671.0, 21047.0], [657.0, 21046.0], [656.0, 21030.0], [659.0, 21046.0], [658.0, 21045.0], [661.0, 21047.0], [660.0, 21046.0], [669.0, 21045.0], [667.0, 21046.0], [666.0, 21047.0], [664.0, 21045.0], [647.0, 21044.0], [646.0, 21043.0], [645.0, 21042.0], [644.0, 21041.0], [643.0, 21041.0], [642.0, 21041.0], [641.0, 21042.0], [640.0, 21041.0], [655.0, 21046.0], [654.0, 21045.0], [653.0, 21047.0], [652.0, 21044.0], [651.0, 21045.0], [650.0, 21046.0], [649.0, 21046.0], [648.0, 21047.0], [663.0, 21047.0], [662.0, 21046.0], [698.0, 21029.0], [692.0, 21040.0], [700.0, 20926.491269466747], [689.0, 21041.0], [688.0, 21047.0], [697.0, 21027.0], [696.0, 21029.0], [687.0, 21043.0], [673.0, 21043.0], [672.0, 21043.0], [675.0, 21047.0], [674.0, 21043.0], [677.0, 21042.0], [676.0, 21044.0], [679.0, 21048.0], [678.0, 21050.0], [686.0, 21042.0], [685.0, 21046.0], [684.0, 21049.0], [682.0, 21048.0], [681.0, 21047.0], [680.0, 21050.0], [695.0, 21028.0], [694.0, 21029.0], [693.0, 21045.0], [691.0, 21044.0], [690.0, 21042.0], [743.0, 21024.5], [957.0, 21031.0], [986.0, 21032.0], [1268.0, 39.35294117647058], [1232.0, 58.599999999999994], [1270.0, 38.0], [1272.0, 39.0], [1278.0, 45.0], [1234.0, 61.941176470588246], [1238.0, 37.0], [1240.0, 35.0], [1244.0, 37.0], [1250.0, 33.0], [1254.0, 42.4], [1256.0, 37.0], [1282.0, 48.833333333333336], [1304.0, 54.333333333333336], [1308.0, 54.666666666666664], [1310.0, 72.88888888888887], [1306.0, 52.0], [1290.0, 52.0], [1328.0, 133.0], [1332.0, 133.33333333333334], [1330.0, 133.5], [1312.0, 83.0], [1314.0, 108.71052631578945], [1326.0, 132.33333333333334], [1322.0, 131.0], [1298.0, 55.5], [1302.0, 55.16666666666667], [1378.0, 109.66666666666667], [1374.0, 126.0], [1382.0, 102.5], [1384.0, 114.0], [1386.0, 105.0], [1388.0, 137.0], [1390.0, 106.0], [1366.0, 99.5], [1368.0, 97.0], [1364.0, 97.16666666666667], [1362.0, 94.0], [1344.0, 135.0], [1396.0, 114.11111111111111], [1400.0, 1532.256561558795], [1392.0, 114.5], [1402.0, 120.0], [1410.0, 127.5], [1448.0, 509.0], [1408.0, 123.66666666666667], [1452.0, 513.0], [1450.0, 511.25], [1446.0, 679.1666666666666], [1436.0, 785.4545454545455], [1500.0, 94.0], [1492.0, 104.77777777777777], [1494.0, 92.33333333333333], [1496.0, 94.0], [1502.0, 255.0], [1522.0, 475.0], [1474.0, 515.0], [1506.0, 105.5], [1508.0, 104.31818181818183], [1510.0, 104.0], [1544.0, 133.5], [1558.0, 142.91666666666669], [1540.0, 168.375], [1542.0, 432.0], [1546.0, 406.0], [1550.0, 138.09090909090907], [1590.0, 390.0], [1572.0, 148.0], [1598.0, 196.16666666666666], [1552.0, 265.0], [1554.0, 141.0], [1556.0, 389.0], [1608.0, 116.0], [1614.0, 122.0], [1620.0, 125.5], [1628.0, 132.0], [1616.0, 158.25], [1604.0, 232.2307692307692], [1612.0, 118.0], [1650.0, 154.0], [1660.0, 691.4285714285714], [1658.0, 1399.7142857142858], [1632.0, 401.0], [1644.0, 399.0], [1646.0, 199.45454545454544], [1664.0, 237.866028708134], [1690.0, 206.0], [1672.0, 386.6666666666667], [1784.0, 221.0], [1764.0, 471.33333333333337], [1728.0, 210.0], [1780.0, 222.5], [1786.0, 217.0], [1788.0, 211.5], [1790.0, 207.33333333333334], [1762.0, 1399.0], [1744.0, 211.66666666666666], [1756.0, 1401.0], [1766.0, 216.0], [1768.0, 217.55555555555554], [1770.0, 216.0], [1844.0, 227.0], [1822.0, 221.0], [1806.0, 304.25], [1840.0, 224.33333333333334], [1850.0, 466.4040852575485], [1828.0, 224.0], [1832.0, 226.25], [1834.0, 227.0], [1836.0, 228.0], [1810.0, 216.2], [1814.0, 216.5], [1047.0, 21032.0], [1155.0, 21032.0], [1265.0, 36.333333333333336], [1247.0, 34.5], [1235.0, 49.6], [1231.0, 50.30769230769231], [1267.0, 37.199999999999996], [1269.0, 37.0], [1271.0, 38.9], [1275.0, 40.625], [1233.0, 57.0], [1263.0, 36.0], [1291.0, 51.6], [1287.0, 51.5], [1309.0, 64.5], [1311.0, 85.0], [1305.0, 53.0], [1295.0, 56.0], [1329.0, 132.66666666666666], [1339.0, 134.0], [1337.0, 134.0], [1343.0, 134.5], [1341.0, 134.0], [1313.0, 77.0], [1315.0, 131.0], [1321.0, 131.0], [1319.0, 131.0], [1299.0, 54.5], [1401.0, 116.66666666666667], [1381.0, 101.66666666666667], [1383.0, 102.0], [1385.0, 104.5], [1391.0, 107.0], [1377.0, 100.0], [1373.0, 100.0], [1369.0, 99.33333333333333], [1349.0, 135.0], [1347.0, 135.0], [1403.0, 128.5], [1405.0, 126.0], [1407.0, 123.0], [1409.0, 124.0], [1411.0, 819.4375], [1449.0, 510.5], [1419.0, 622.7058823529412], [1501.0, 98.57575757575758], [1495.0, 93.08695652173914], [1489.0, 513.0], [1493.0, 91.9], [1499.0, 93.91666666666669], [1523.0, 114.0], [1525.0, 115.25], [1505.0, 222.41666666666666], [1507.0, 104.125], [1509.0, 109.15789473684212], [1515.0, 107.2], [1537.0, 455.5], [1563.0, 143.0], [1561.0, 899.5], [1567.0, 141.5], [1549.0, 136.75], [1547.0, 397.0], [1551.0, 170.5483870967742], [1589.0, 392.0], [1597.0, 385.0], [1599.0, 151.5], [1595.0, 404.71428571428567], [1553.0, 389.0], [1555.0, 142.5], [1607.0, 121.0], [1601.0, 158.92307692307693], [1631.0, 178.0], [1619.0, 307.0], [1603.0, 140.0], [1611.0, 119.0], [1615.0, 121.0], [1653.0, 157.0], [1657.0, 161.0], [1661.0, 496.037037037037], [1637.0, 142.0], [1643.0, 147.0], [1647.0, 1402.0], [1667.0, 249.0], [1695.0, 207.0], [1723.0, 722.3333333333333], [1687.0, 1393.5882352941176], [1673.0, 891.9166666666667], [1665.0, 389.5], [1777.0, 220.0], [1733.0, 209.5], [1729.0, 387.0], [1739.0, 386.7142857142857], [1781.0, 220.25], [1783.0, 222.0], [1785.0, 220.0], [1789.0, 219.33333333333334], [1761.0, 1401.0], [1763.0, 393.0], [1745.0, 212.0], [1751.0, 893.375], [1765.0, 215.0], [1769.0, 217.84615384615387], [1773.0, 218.85714285714286], [1803.0, 304.5], [1799.0, 211.0], [1815.0, 216.5], [1793.0, 209.33333333333334], [1823.0, 220.25], [1819.0, 217.72727272727272], [1805.0, 216.0], [1827.0, 223.75], [1831.0, 226.83333333333334], [1835.0, 226.5], [1837.0, 227.5], [1839.0, 227.125], [1811.0, 214.5], [1.0, 21035.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1355.478057601544, 3769.7481586027343]], "isOverall": false, "label": "JoinRoom-Aggregated", "isController": false}, {"data": [[1448.0, 12090.0], [1456.0, 12086.5], [1452.0, 12082.0], [1450.0, 12085.0], [1449.0, 12091.0], [1447.0, 12089.0], [1446.0, 12094.800000000001], [1436.0, 12082.764705882353], [1411.0, 12068.909090909088], [1419.0, 12066.25], [1529.0, 12158.0], [1535.0, 12164.0], [1510.0, 12139.0], [1505.0, 12138.0], [1514.0, 12145.0], [1512.0, 12143.5], [1516.0, 12149.0], [1515.0, 12146.0], [1532.0, 12161.0], [1530.0, 12161.0], [1526.0, 12154.5], [1524.0, 12151.0], [1522.0, 12150.0], [1520.0, 12149.0], [1502.0, 12148.0], [1474.0, 12140.999999999998], [1473.0, 12123.333333333334], [1501.0, 12146.5], [1499.0, 12145.0], [1498.0, 12145.0], [1497.0, 12146.0], [1496.0, 12145.0], [1495.0, 12144.0], [1493.0, 12144.25], [1489.0, 12105.199999999999], [1519.0, 12149.0], [1518.0, 12148.5], [1546.0, 12136.5], [1589.0, 12427.1], [1595.0, 12363.4], [1597.0, 12274.0], [1590.0, 12599.0], [1579.0, 12481.75], [1575.0, 12410.636363636364], [1564.0, 12370.0], [1537.0, 12162.5], [1539.0, 12151.0], [1538.0, 12150.0], [1541.0, 12144.0], [1540.0, 12146.0], [1544.0, 12139.0], [1542.0, 12144.0], [1547.0, 12123.0], [1551.0, 12114.333333333334], [1548.0, 12112.0], [1561.0, 12121.0], [1560.0, 12118.0], [1558.0, 12157.0], [1556.0, 12118.666666666666], [1553.0, 12115.0], [1552.0, 12114.0], [1661.0, 12474.0], [1662.0, 12371.0], [1660.0, 12211.5], [1658.0, 12334.5], [1652.0, 12287.0], [1604.0, 12248.0], [1647.0, 12381.25], [1643.0, 12436.545454545454], [1632.0, 12467.181818181818], [1630.0, 12336.0], [1619.0, 12331.0], [1617.0, 12226.461538461539], [1723.0, 12370.57142857143], [1722.0, 12399.0], [1715.0, 12333.150000000001], [1714.0, 12327.875], [1687.0, 12308.214285714286], [1673.0, 12120.0], [1672.0, 12458.285714285714], [1665.0, 12139.0], [1787.0, 12225.666666666666], [1788.0, 12337.444444444445], [1786.0, 12404.75], [1785.0, 12272.666666666666], [1765.0, 12394.0], [1764.0, 12426.272727272724], [1763.0, 12318.0], [1751.0, 12336.25], [1730.0, 12361.142857142857], [1739.0, 12285.666666666666], [1736.0, 12306.833333333332], [1835.0, 12403.333333333334], [1850.0, 12324.272727272726], [1821.0, 12221.0], [1820.0, 12211.0], [1819.0, 12449.0], [1813.0, 12337.4], [1811.0, 12558.0], [1824.0, 12230.6], [1839.0, 12282.000000000002], [1837.0, 12298.6], [1836.0, 12411.333333333332], [1834.0, 12433.0], [1833.0, 12383.0], [1832.0, 12491.666666666666], [1831.0, 12395.0], [1829.0, 12387.666666666666], [1828.0, 12171.0]], "isOverall": false, "label": "CreateRoom", "isController": false}, {"data": [[1632.1311111111108, 12265.06666666666]], "isOverall": false, "label": "CreateRoom-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1850.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6192992E12, "maxY": 4.9E-324, "series": [{"data": [[1.61929932E12, 0.0], [1.6192992E12, 0.0], [1.61929926E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61929932E12, 0.0], [1.6192992E12, 0.0], [1.61929926E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61929932E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1315.653931451615, "minX": 1.6192992E12, "maxY": 60035.41428571434, "series": [{"data": [[1.61929926E12, 60035.41428571434]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61929932E12, 20732.79781420763], [1.6192992E12, 1315.653931451615], [1.61929926E12, 21034.039980961436]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6192992E12, 12265.06666666666]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61929932E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6192992E12, "maxY": 4.9E-324, "series": [{"data": [[1.61929926E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61929932E12, 0.0], [1.6192992E12, 0.0], [1.61929926E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6192992E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61929932E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6192992E12, "maxY": 4.9E-324, "series": [{"data": [[1.61929926E12, 0.0]], "isOverall": false, "label": "JoinRoom&Wait", "isController": false}, {"data": [[1.61929932E12, 0.0], [1.6192992E12, 0.0], [1.61929926E12, 0.0]], "isOverall": false, "label": "JoinRoom", "isController": false}, {"data": [[1.6192992E12, 0.0]], "isOverall": false, "label": "CreateRoom", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61929932E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.6192992E12, "maxY": 60123.0, "series": [{"data": [[1.61929932E12, 15077.0], [1.6192992E12, 12688.0], [1.61929926E12, 60123.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61929932E12, 15077.0], [1.6192992E12, 1417.0], [1.61929926E12, 60045.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61929932E12, 15077.0], [1.6192992E12, 12243.27], [1.61929926E12, 60109.98]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61929932E12, 15077.0], [1.6192992E12, 1569.0], [1.61929926E12, 60084.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61929932E12, 27.0], [1.6192992E12, 31.0], [1.61929926E12, 30.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61929932E12, 28.0], [1.6192992E12, 512.0], [1.61929926E12, 60029.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61929932E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 60029.0, "series": [{"data": [[9.0, 28.5], [11.0, 3045.0], [709.0, 60029.0], [894.0, 533.0], [898.0, 596.5], [1001.0, 593.0], [997.0, 445.0], [1023.0, 492.0], [1054.0, 534.0], [1033.0, 594.0], [1.0, 7066.0], [1115.0, 542.0], [1160.0, 561.0], [1216.0, 141.0], [1229.0, 385.0], [1313.0, 501.0], [1323.0, 453.0], [82.0, 1283.0], [5.0, 3043.0], [1374.0, 357.0], [1438.0, 474.0], [1529.0, 504.0], [6.0, 28.0], [433.0, 30.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 21038.5], [2.0, 21034.5], [143.0, 21048.0], [9.0, 21033.0], [10.0, 21039.0], [175.0, 21041.0], [11.0, 21039.5], [709.0, 21032.0], [178.0, 21037.0], [48.0, 21045.5], [215.0, 21045.0], [55.0, 21045.0], [54.0, 21036.0], [1.0, 21040.0], [4.0, 21031.5], [5.0, 21036.0], [6.0, 21032.0], [398.0, 21043.5], [109.0, 21042.0], [435.0, 21047.0], [433.0, 21029.0], [466.0, 21051.0], [498.0, 21039.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1529.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[9.0, 0.0], [11.0, 0.0], [709.0, 0.0], [894.0, 0.0], [898.0, 0.0], [1001.0, 0.0], [997.0, 0.0], [1023.0, 0.0], [1054.0, 0.0], [1033.0, 0.0], [1.0, 0.0], [1115.0, 0.0], [1160.0, 0.0], [1216.0, 0.0], [1229.0, 0.0], [1313.0, 0.0], [1323.0, 0.0], [82.0, 0.0], [5.0, 0.0], [1374.0, 0.0], [1438.0, 0.0], [1529.0, 0.0], [6.0, 0.0], [433.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 0.0], [2.0, 0.0], [143.0, 0.0], [9.0, 0.0], [10.0, 0.0], [175.0, 0.0], [11.0, 0.0], [709.0, 0.0], [178.0, 0.0], [48.0, 0.0], [215.0, 0.0], [55.0, 0.0], [54.0, 0.0], [1.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [398.0, 0.0], [109.0, 0.0], [435.0, 0.0], [433.0, 0.0], [466.0, 0.0], [498.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1529.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.6192992E12, "maxY": 361.5, "series": [{"data": [[1.61929932E12, 0.5333333333333333], [1.6192992E12, 361.5], [1.61929926E12, 35.016666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61929932E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.6192992E12, "maxY": 326.5, "series": [{"data": [[1.61929932E12, 0.21666666666666667], [1.6192992E12, 326.5], [1.61929926E12, 11.683333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61929932E12, 11.983333333333333], [1.6192992E12, 11.666666666666666], [1.61929926E12, 35.0]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61929932E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6192992E12, "maxY": 319.0, "series": [{"data": [[1.6192992E12, 7.5]], "isOverall": false, "label": "CreateRoom-success", "isController": false}, {"data": [[1.61929926E12, 11.666666666666666]], "isOverall": false, "label": "JoinRoom&Wait-success", "isController": false}, {"data": [[1.61929932E12, 0.21666666666666667], [1.6192992E12, 319.0], [1.61929926E12, 0.016666666666666666]], "isOverall": false, "label": "JoinRoom-success", "isController": false}, {"data": [[1.61929932E12, 11.983333333333333], [1.6192992E12, 11.666666666666666], [1.61929926E12, 35.0]], "isOverall": false, "label": "JoinRoom-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61929932E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.6192992E12, "maxY": 326.5, "series": [{"data": [[1.61929932E12, 0.21666666666666667], [1.6192992E12, 326.5], [1.61929926E12, 11.683333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61929932E12, 11.983333333333333], [1.6192992E12, 11.666666666666666], [1.61929926E12, 35.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61929932E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

